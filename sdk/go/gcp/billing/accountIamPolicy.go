// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package billing

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Allows management of the entire IAM policy for an existing Google Cloud Platform Billing Account.
// 
// > **Warning:** Billing accounts have a default user that can be **overwritten**
// by use of this resource. The safest alternative is to use multiple `billing.AccountIamBinding`
//    resources. If you do use this resource, the best way to be sure that you are
//    not making dangerous changes is to start by importing your existing policy,
//    and examining the diff very closely.
// 
// > **Note:** This resource __must not__ be used in conjunction with
//    `billing.AccountIamMember` or `billing.AccountIamBinding`
//    or they will fight over what your policy should be.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/billing_account_iam_policy.html.markdown.
type AccountIamPolicy struct {
	s *pulumi.ResourceState
}

// NewAccountIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccountIamPolicy(ctx *pulumi.Context,
	name string, args *AccountIamPolicyArgs, opts ...pulumi.ResourceOpt) (*AccountIamPolicy, error) {
	if args == nil || args.BillingAccountId == nil {
		return nil, errors.New("missing required argument 'BillingAccountId'")
	}
	if args == nil || args.PolicyData == nil {
		return nil, errors.New("missing required argument 'PolicyData'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["billingAccountId"] = nil
		inputs["policyData"] = nil
	} else {
		inputs["billingAccountId"] = args.BillingAccountId
		inputs["policyData"] = args.PolicyData
	}
	inputs["etag"] = nil
	s, err := ctx.RegisterResource("gcp:billing/accountIamPolicy:AccountIamPolicy", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AccountIamPolicy{s: s}, nil
}

// GetAccountIamPolicy gets an existing AccountIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AccountIamPolicyState, opts ...pulumi.ResourceOpt) (*AccountIamPolicy, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["billingAccountId"] = state.BillingAccountId
		inputs["etag"] = state.Etag
		inputs["policyData"] = state.PolicyData
	}
	s, err := ctx.ReadResource("gcp:billing/accountIamPolicy:AccountIamPolicy", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AccountIamPolicy{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *AccountIamPolicy) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *AccountIamPolicy) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The billing account id.
func (r *AccountIamPolicy) BillingAccountId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["billingAccountId"])
}

func (r *AccountIamPolicy) Etag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["etag"])
}

// The `organizations.getIAMPolicy` data source that represents
// the IAM policy that will be applied to the billing account. This policy overrides any existing
// policy applied to the billing account.
func (r *AccountIamPolicy) PolicyData() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["policyData"])
}

// Input properties used for looking up and filtering AccountIamPolicy resources.
type AccountIamPolicyState struct {
	// The billing account id.
	BillingAccountId interface{}
	Etag interface{}
	// The `organizations.getIAMPolicy` data source that represents
	// the IAM policy that will be applied to the billing account. This policy overrides any existing
	// policy applied to the billing account.
	PolicyData interface{}
}

// The set of arguments for constructing a AccountIamPolicy resource.
type AccountIamPolicyArgs struct {
	// The billing account id.
	BillingAccountId interface{}
	// The `organizations.getIAMPolicy` data source that represents
	// the IAM policy that will be applied to the billing account. This policy overrides any existing
	// policy applied to the billing account.
	PolicyData interface{}
}
