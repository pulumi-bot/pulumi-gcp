// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TunnelInstanceIAMMemberCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TunnelInstanceIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type TunnelInstanceIAMMemberConditionInput interface {
	pulumi.Input

	ToTunnelInstanceIAMMemberConditionOutput() TunnelInstanceIAMMemberConditionOutput
	ToTunnelInstanceIAMMemberConditionOutputWithContext(context.Context) TunnelInstanceIAMMemberConditionOutput
}

type TunnelInstanceIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (TunnelInstanceIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelInstanceIAMMemberCondition)(nil)).Elem()
}

func (i TunnelInstanceIAMMemberConditionArgs) ToTunnelInstanceIAMMemberConditionOutput() TunnelInstanceIAMMemberConditionOutput {
	return i.ToTunnelInstanceIAMMemberConditionOutputWithContext(context.Background())
}

func (i TunnelInstanceIAMMemberConditionArgs) ToTunnelInstanceIAMMemberConditionOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMMemberConditionOutput)
}

func (i TunnelInstanceIAMMemberConditionArgs) ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput {
	return i.ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i TunnelInstanceIAMMemberConditionArgs) ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMMemberConditionOutput).ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx)
}

type TunnelInstanceIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput
	ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(context.Context) TunnelInstanceIAMMemberConditionPtrOutput
}

type tunnelInstanceIAMMemberConditionPtrType TunnelInstanceIAMMemberConditionArgs

func TunnelInstanceIAMMemberConditionPtr(v *TunnelInstanceIAMMemberConditionArgs) TunnelInstanceIAMMemberConditionPtrInput {	return (*tunnelInstanceIAMMemberConditionPtrType)(v)
}

func (*tunnelInstanceIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelInstanceIAMMemberCondition)(nil)).Elem()
}

func (i *tunnelInstanceIAMMemberConditionPtrType) ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput {
	return i.ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *tunnelInstanceIAMMemberConditionPtrType) ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMMemberConditionPtrOutput)
}

type TunnelInstanceIAMMemberConditionOutput struct { *pulumi.OutputState }

func (TunnelInstanceIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelInstanceIAMMemberCondition)(nil)).Elem()
}

func (o TunnelInstanceIAMMemberConditionOutput) ToTunnelInstanceIAMMemberConditionOutput() TunnelInstanceIAMMemberConditionOutput {
	return o
}

func (o TunnelInstanceIAMMemberConditionOutput) ToTunnelInstanceIAMMemberConditionOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionOutput {
	return o
}

func (o TunnelInstanceIAMMemberConditionOutput) ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput {
	return o.ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o TunnelInstanceIAMMemberConditionOutput) ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v TunnelInstanceIAMMemberCondition) *TunnelInstanceIAMMemberCondition {
		return &v
	}).(TunnelInstanceIAMMemberConditionPtrOutput)
}
func (o TunnelInstanceIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TunnelInstanceIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TunnelInstanceIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v TunnelInstanceIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TunnelInstanceIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v TunnelInstanceIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TunnelInstanceIAMMemberConditionPtrOutput struct { *pulumi.OutputState}

func (TunnelInstanceIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelInstanceIAMMemberCondition)(nil)).Elem()
}

func (o TunnelInstanceIAMMemberConditionPtrOutput) ToTunnelInstanceIAMMemberConditionPtrOutput() TunnelInstanceIAMMemberConditionPtrOutput {
	return o
}

func (o TunnelInstanceIAMMemberConditionPtrOutput) ToTunnelInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMMemberConditionPtrOutput {
	return o
}

func (o TunnelInstanceIAMMemberConditionPtrOutput) Elem() TunnelInstanceIAMMemberConditionOutput {
	return o.ApplyT(func (v *TunnelInstanceIAMMemberCondition) TunnelInstanceIAMMemberCondition { return *v }).(TunnelInstanceIAMMemberConditionOutput)
}

func (o TunnelInstanceIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TunnelInstanceIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TunnelInstanceIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v TunnelInstanceIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TunnelInstanceIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v TunnelInstanceIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TunnelInstanceIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(TunnelInstanceIAMMemberConditionPtrOutput{})
}
