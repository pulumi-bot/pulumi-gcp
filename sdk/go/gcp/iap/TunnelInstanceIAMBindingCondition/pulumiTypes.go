// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TunnelInstanceIAMBindingCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TunnelInstanceIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type TunnelInstanceIAMBindingConditionInput interface {
	pulumi.Input

	ToTunnelInstanceIAMBindingConditionOutput() TunnelInstanceIAMBindingConditionOutput
	ToTunnelInstanceIAMBindingConditionOutputWithContext(context.Context) TunnelInstanceIAMBindingConditionOutput
}

type TunnelInstanceIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (TunnelInstanceIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelInstanceIAMBindingCondition)(nil)).Elem()
}

func (i TunnelInstanceIAMBindingConditionArgs) ToTunnelInstanceIAMBindingConditionOutput() TunnelInstanceIAMBindingConditionOutput {
	return i.ToTunnelInstanceIAMBindingConditionOutputWithContext(context.Background())
}

func (i TunnelInstanceIAMBindingConditionArgs) ToTunnelInstanceIAMBindingConditionOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMBindingConditionOutput)
}

func (i TunnelInstanceIAMBindingConditionArgs) ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput {
	return i.ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i TunnelInstanceIAMBindingConditionArgs) ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMBindingConditionOutput).ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx)
}

type TunnelInstanceIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput
	ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(context.Context) TunnelInstanceIAMBindingConditionPtrOutput
}

type tunnelInstanceIAMBindingConditionPtrType TunnelInstanceIAMBindingConditionArgs

func TunnelInstanceIAMBindingConditionPtr(v *TunnelInstanceIAMBindingConditionArgs) TunnelInstanceIAMBindingConditionPtrInput {	return (*tunnelInstanceIAMBindingConditionPtrType)(v)
}

func (*tunnelInstanceIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelInstanceIAMBindingCondition)(nil)).Elem()
}

func (i *tunnelInstanceIAMBindingConditionPtrType) ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput {
	return i.ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *tunnelInstanceIAMBindingConditionPtrType) ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelInstanceIAMBindingConditionPtrOutput)
}

type TunnelInstanceIAMBindingConditionOutput struct { *pulumi.OutputState }

func (TunnelInstanceIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelInstanceIAMBindingCondition)(nil)).Elem()
}

func (o TunnelInstanceIAMBindingConditionOutput) ToTunnelInstanceIAMBindingConditionOutput() TunnelInstanceIAMBindingConditionOutput {
	return o
}

func (o TunnelInstanceIAMBindingConditionOutput) ToTunnelInstanceIAMBindingConditionOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionOutput {
	return o
}

func (o TunnelInstanceIAMBindingConditionOutput) ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput {
	return o.ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o TunnelInstanceIAMBindingConditionOutput) ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v TunnelInstanceIAMBindingCondition) *TunnelInstanceIAMBindingCondition {
		return &v
	}).(TunnelInstanceIAMBindingConditionPtrOutput)
}
func (o TunnelInstanceIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TunnelInstanceIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TunnelInstanceIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v TunnelInstanceIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TunnelInstanceIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v TunnelInstanceIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TunnelInstanceIAMBindingConditionPtrOutput struct { *pulumi.OutputState}

func (TunnelInstanceIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TunnelInstanceIAMBindingCondition)(nil)).Elem()
}

func (o TunnelInstanceIAMBindingConditionPtrOutput) ToTunnelInstanceIAMBindingConditionPtrOutput() TunnelInstanceIAMBindingConditionPtrOutput {
	return o
}

func (o TunnelInstanceIAMBindingConditionPtrOutput) ToTunnelInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) TunnelInstanceIAMBindingConditionPtrOutput {
	return o
}

func (o TunnelInstanceIAMBindingConditionPtrOutput) Elem() TunnelInstanceIAMBindingConditionOutput {
	return o.ApplyT(func (v *TunnelInstanceIAMBindingCondition) TunnelInstanceIAMBindingCondition { return *v }).(TunnelInstanceIAMBindingConditionOutput)
}

func (o TunnelInstanceIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TunnelInstanceIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TunnelInstanceIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v TunnelInstanceIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TunnelInstanceIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v TunnelInstanceIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TunnelInstanceIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(TunnelInstanceIAMBindingConditionPtrOutput{})
}
