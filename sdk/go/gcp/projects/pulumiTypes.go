// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package projects

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type IAMAuditConfigAuditLogConfig struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType string `pulumi:"logType"`
}

type IAMAuditConfigAuditLogConfigInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigOutput() IAMAuditConfigAuditLogConfigOutput
	ToIAMAuditConfigAuditLogConfigOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigOutput
}

type IAMAuditConfigAuditLogConfigArgs struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (IAMAuditConfigAuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigArgs) ToIAMAuditConfigAuditLogConfigOutput() IAMAuditConfigAuditLogConfigOutput {
	return i.ToIAMAuditConfigAuditLogConfigOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigArgs) ToIAMAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigOutput)
}

type IAMAuditConfigAuditLogConfigArrayInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigArrayOutput() IAMAuditConfigAuditLogConfigArrayOutput
	ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigArrayOutput
}

type IAMAuditConfigAuditLogConfigArray []IAMAuditConfigAuditLogConfigInput

func (IAMAuditConfigAuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigArray) ToIAMAuditConfigAuditLogConfigArrayOutput() IAMAuditConfigAuditLogConfigArrayOutput {
	return i.ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigArray) ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigArrayOutput)
}

type IAMAuditConfigAuditLogConfigOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigOutput) ToIAMAuditConfigAuditLogConfigOutput() IAMAuditConfigAuditLogConfigOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigOutput) ToIAMAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigOutput {
	return o
}

// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
func (o IAMAuditConfigAuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
func (o IAMAuditConfigAuditLogConfigOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfig) string { return v.LogType }).(pulumi.StringOutput)
}

type IAMAuditConfigAuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigArrayOutput) ToIAMAuditConfigAuditLogConfigArrayOutput() IAMAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigArrayOutput) ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigArrayOutput) Index(i pulumi.IntInput) IAMAuditConfigAuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IAMAuditConfigAuditLogConfig {
		return vs[0].([]IAMAuditConfigAuditLogConfig)[vs[1].(int)]
	}).(IAMAuditConfigAuditLogConfigOutput)
}

type IAMAuditConfigAuditLogConfigArgs struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType string `pulumi:"logType"`
}

type IAMAuditConfigAuditLogConfigArgsInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigArgsOutput() IAMAuditConfigAuditLogConfigArgsOutput
	ToIAMAuditConfigAuditLogConfigArgsOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigArgsOutput
}

type IAMAuditConfigAuditLogConfigArgsArgs struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (IAMAuditConfigAuditLogConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigArgsArgs) ToIAMAuditConfigAuditLogConfigArgsOutput() IAMAuditConfigAuditLogConfigArgsOutput {
	return i.ToIAMAuditConfigAuditLogConfigArgsOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigArgsArgs) ToIAMAuditConfigAuditLogConfigArgsOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigArgsOutput)
}

type IAMAuditConfigAuditLogConfigArgsArrayInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigArgsArrayOutput() IAMAuditConfigAuditLogConfigArgsArrayOutput
	ToIAMAuditConfigAuditLogConfigArgsArrayOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigArgsArrayOutput
}

type IAMAuditConfigAuditLogConfigArgsArray []IAMAuditConfigAuditLogConfigArgsInput

func (IAMAuditConfigAuditLogConfigArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigArgsArray) ToIAMAuditConfigAuditLogConfigArgsArrayOutput() IAMAuditConfigAuditLogConfigArgsArrayOutput {
	return i.ToIAMAuditConfigAuditLogConfigArgsArrayOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigArgsArray) ToIAMAuditConfigAuditLogConfigArgsArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigArgsArrayOutput)
}

type IAMAuditConfigAuditLogConfigArgsOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigArgsOutput) ToIAMAuditConfigAuditLogConfigArgsOutput() IAMAuditConfigAuditLogConfigArgsOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigArgsOutput) ToIAMAuditConfigAuditLogConfigArgsOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArgsOutput {
	return o
}

// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
func (o IAMAuditConfigAuditLogConfigArgsOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfigArgs) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
func (o IAMAuditConfigAuditLogConfigArgsOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfigArgs) string { return v.LogType }).(pulumi.StringOutput)
}

type IAMAuditConfigAuditLogConfigArgsArrayOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigArgsArrayOutput) ToIAMAuditConfigAuditLogConfigArgsArrayOutput() IAMAuditConfigAuditLogConfigArgsArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigArgsArrayOutput) ToIAMAuditConfigAuditLogConfigArgsArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArgsArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigArgsArrayOutput) Index(i pulumi.IntInput) IAMAuditConfigAuditLogConfigArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IAMAuditConfigAuditLogConfigArgs {
		return vs[0].([]IAMAuditConfigAuditLogConfigArgs)[vs[1].(int)]
	}).(IAMAuditConfigAuditLogConfigArgsOutput)
}

type IAMAuditConfigAuditLogConfigState struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType string `pulumi:"logType"`
}

type IAMAuditConfigAuditLogConfigStateInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigStateOutput() IAMAuditConfigAuditLogConfigStateOutput
	ToIAMAuditConfigAuditLogConfigStateOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigStateOutput
}

type IAMAuditConfigAuditLogConfigStateArgs struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (IAMAuditConfigAuditLogConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfigState)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigStateArgs) ToIAMAuditConfigAuditLogConfigStateOutput() IAMAuditConfigAuditLogConfigStateOutput {
	return i.ToIAMAuditConfigAuditLogConfigStateOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigStateArgs) ToIAMAuditConfigAuditLogConfigStateOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigStateOutput)
}

type IAMAuditConfigAuditLogConfigStateArrayInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigStateArrayOutput() IAMAuditConfigAuditLogConfigStateArrayOutput
	ToIAMAuditConfigAuditLogConfigStateArrayOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigStateArrayOutput
}

type IAMAuditConfigAuditLogConfigStateArray []IAMAuditConfigAuditLogConfigStateInput

func (IAMAuditConfigAuditLogConfigStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfigState)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigStateArray) ToIAMAuditConfigAuditLogConfigStateArrayOutput() IAMAuditConfigAuditLogConfigStateArrayOutput {
	return i.ToIAMAuditConfigAuditLogConfigStateArrayOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigStateArray) ToIAMAuditConfigAuditLogConfigStateArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigStateArrayOutput)
}

type IAMAuditConfigAuditLogConfigStateOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfigState)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigStateOutput) ToIAMAuditConfigAuditLogConfigStateOutput() IAMAuditConfigAuditLogConfigStateOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigStateOutput) ToIAMAuditConfigAuditLogConfigStateOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigStateOutput {
	return o
}

// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
func (o IAMAuditConfigAuditLogConfigStateOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfigState) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
func (o IAMAuditConfigAuditLogConfigStateOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfigState) string { return v.LogType }).(pulumi.StringOutput)
}

type IAMAuditConfigAuditLogConfigStateArrayOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfigState)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigStateArrayOutput) ToIAMAuditConfigAuditLogConfigStateArrayOutput() IAMAuditConfigAuditLogConfigStateArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigStateArrayOutput) ToIAMAuditConfigAuditLogConfigStateArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigStateArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigStateArrayOutput) Index(i pulumi.IntInput) IAMAuditConfigAuditLogConfigStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IAMAuditConfigAuditLogConfigState {
		return vs[0].([]IAMAuditConfigAuditLogConfigState)[vs[1].(int)]
	}).(IAMAuditConfigAuditLogConfigStateOutput)
}

type IAMBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type IAMBindingConditionInput interface {
	pulumi.Input

	ToIAMBindingConditionOutput() IAMBindingConditionOutput
	ToIAMBindingConditionOutputWithContext(context.Context) IAMBindingConditionOutput
}

type IAMBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingCondition)(nil)).Elem()
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionOutput() IAMBindingConditionOutput {
	return i.ToIAMBindingConditionOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionOutputWithContext(ctx context.Context) IAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionOutput)
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return i.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionOutput).ToIAMBindingConditionPtrOutputWithContext(ctx)
}

type IAMBindingConditionPtrInput interface {
	pulumi.Input

	ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput
	ToIAMBindingConditionPtrOutputWithContext(context.Context) IAMBindingConditionPtrOutput
}

type iambindingConditionPtrType IAMBindingConditionArgs

func IAMBindingConditionPtr(v *IAMBindingConditionArgs) IAMBindingConditionPtrInput {
	return (*iambindingConditionPtrType)(v)
}

func (*iambindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingCondition)(nil)).Elem()
}

func (i *iambindingConditionPtrType) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return i.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *iambindingConditionPtrType) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionPtrOutput)
}

type IAMBindingConditionOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingCondition)(nil)).Elem()
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionOutput() IAMBindingConditionOutput {
	return o
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionOutputWithContext(ctx context.Context) IAMBindingConditionOutput {
	return o
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return o.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return o.ApplyT(func(v IAMBindingCondition) *IAMBindingCondition {
		return &v
	}).(IAMBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingCondition)(nil)).Elem()
}

func (o IAMBindingConditionPtrOutput) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return o
}

func (o IAMBindingConditionPtrOutput) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return o
}

func (o IAMBindingConditionPtrOutput) Elem() IAMBindingConditionOutput {
	return o.ApplyT(func(v *IAMBindingCondition) IAMBindingCondition { return *v }).(IAMBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type IAMBindingConditionArgsInput interface {
	pulumi.Input

	ToIAMBindingConditionArgsOutput() IAMBindingConditionArgsOutput
	ToIAMBindingConditionArgsOutputWithContext(context.Context) IAMBindingConditionArgsOutput
}

type IAMBindingConditionArgsArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingConditionArgs)(nil)).Elem()
}

func (i IAMBindingConditionArgsArgs) ToIAMBindingConditionArgsOutput() IAMBindingConditionArgsOutput {
	return i.ToIAMBindingConditionArgsOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgsArgs) ToIAMBindingConditionArgsOutputWithContext(ctx context.Context) IAMBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionArgsOutput)
}

func (i IAMBindingConditionArgsArgs) ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput {
	return i.ToIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgsArgs) ToIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) IAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionArgsOutput).ToIAMBindingConditionArgsPtrOutputWithContext(ctx)
}

type IAMBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput
	ToIAMBindingConditionArgsPtrOutputWithContext(context.Context) IAMBindingConditionArgsPtrOutput
}

type iambindingConditionArgsPtrType IAMBindingConditionArgsArgs

func IAMBindingConditionArgsPtr(v *IAMBindingConditionArgsArgs) IAMBindingConditionArgsPtrInput {
	return (*iambindingConditionArgsPtrType)(v)
}

func (*iambindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingConditionArgs)(nil)).Elem()
}

func (i *iambindingConditionArgsPtrType) ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput {
	return i.ToIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *iambindingConditionArgsPtrType) ToIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) IAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionArgsPtrOutput)
}

type IAMBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingConditionArgs)(nil)).Elem()
}

func (o IAMBindingConditionArgsOutput) ToIAMBindingConditionArgsOutput() IAMBindingConditionArgsOutput {
	return o
}

func (o IAMBindingConditionArgsOutput) ToIAMBindingConditionArgsOutputWithContext(ctx context.Context) IAMBindingConditionArgsOutput {
	return o
}

func (o IAMBindingConditionArgsOutput) ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput {
	return o.ToIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o IAMBindingConditionArgsOutput) ToIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) IAMBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) *IAMBindingConditionArgs {
		return &v
	}).(IAMBindingConditionArgsPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingConditionArgs)(nil)).Elem()
}

func (o IAMBindingConditionArgsPtrOutput) ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput {
	return o
}

func (o IAMBindingConditionArgsPtrOutput) ToIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) IAMBindingConditionArgsPtrOutput {
	return o
}

func (o IAMBindingConditionArgsPtrOutput) Elem() IAMBindingConditionArgsOutput {
	return o.ApplyT(func(v *IAMBindingConditionArgs) IAMBindingConditionArgs { return *v }).(IAMBindingConditionArgsOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionState struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type IAMBindingConditionStateInput interface {
	pulumi.Input

	ToIAMBindingConditionStateOutput() IAMBindingConditionStateOutput
	ToIAMBindingConditionStateOutputWithContext(context.Context) IAMBindingConditionStateOutput
}

type IAMBindingConditionStateArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingConditionState)(nil)).Elem()
}

func (i IAMBindingConditionStateArgs) ToIAMBindingConditionStateOutput() IAMBindingConditionStateOutput {
	return i.ToIAMBindingConditionStateOutputWithContext(context.Background())
}

func (i IAMBindingConditionStateArgs) ToIAMBindingConditionStateOutputWithContext(ctx context.Context) IAMBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionStateOutput)
}

type IAMBindingConditionStateOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingConditionState)(nil)).Elem()
}

func (o IAMBindingConditionStateOutput) ToIAMBindingConditionStateOutput() IAMBindingConditionStateOutput {
	return o
}

func (o IAMBindingConditionStateOutput) ToIAMBindingConditionStateOutputWithContext(ctx context.Context) IAMBindingConditionStateOutput {
	return o
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type IAMMemberConditionInput interface {
	pulumi.Input

	ToIAMMemberConditionOutput() IAMMemberConditionOutput
	ToIAMMemberConditionOutputWithContext(context.Context) IAMMemberConditionOutput
}

type IAMMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberCondition)(nil)).Elem()
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionOutput() IAMMemberConditionOutput {
	return i.ToIAMMemberConditionOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionOutputWithContext(ctx context.Context) IAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionOutput)
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return i.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionOutput).ToIAMMemberConditionPtrOutputWithContext(ctx)
}

type IAMMemberConditionPtrInput interface {
	pulumi.Input

	ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput
	ToIAMMemberConditionPtrOutputWithContext(context.Context) IAMMemberConditionPtrOutput
}

type iammemberConditionPtrType IAMMemberConditionArgs

func IAMMemberConditionPtr(v *IAMMemberConditionArgs) IAMMemberConditionPtrInput {
	return (*iammemberConditionPtrType)(v)
}

func (*iammemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberCondition)(nil)).Elem()
}

func (i *iammemberConditionPtrType) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return i.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *iammemberConditionPtrType) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionPtrOutput)
}

type IAMMemberConditionOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberCondition)(nil)).Elem()
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionOutput() IAMMemberConditionOutput {
	return o
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionOutputWithContext(ctx context.Context) IAMMemberConditionOutput {
	return o
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return o.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return o.ApplyT(func(v IAMMemberCondition) *IAMMemberCondition {
		return &v
	}).(IAMMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberCondition)(nil)).Elem()
}

func (o IAMMemberConditionPtrOutput) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return o
}

func (o IAMMemberConditionPtrOutput) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return o
}

func (o IAMMemberConditionPtrOutput) Elem() IAMMemberConditionOutput {
	return o.ApplyT(func(v *IAMMemberCondition) IAMMemberCondition { return *v }).(IAMMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type IAMMemberConditionArgsInput interface {
	pulumi.Input

	ToIAMMemberConditionArgsOutput() IAMMemberConditionArgsOutput
	ToIAMMemberConditionArgsOutputWithContext(context.Context) IAMMemberConditionArgsOutput
}

type IAMMemberConditionArgsArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberConditionArgs)(nil)).Elem()
}

func (i IAMMemberConditionArgsArgs) ToIAMMemberConditionArgsOutput() IAMMemberConditionArgsOutput {
	return i.ToIAMMemberConditionArgsOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgsArgs) ToIAMMemberConditionArgsOutputWithContext(ctx context.Context) IAMMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionArgsOutput)
}

func (i IAMMemberConditionArgsArgs) ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput {
	return i.ToIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgsArgs) ToIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) IAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionArgsOutput).ToIAMMemberConditionArgsPtrOutputWithContext(ctx)
}

type IAMMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput
	ToIAMMemberConditionArgsPtrOutputWithContext(context.Context) IAMMemberConditionArgsPtrOutput
}

type iammemberConditionArgsPtrType IAMMemberConditionArgsArgs

func IAMMemberConditionArgsPtr(v *IAMMemberConditionArgsArgs) IAMMemberConditionArgsPtrInput {
	return (*iammemberConditionArgsPtrType)(v)
}

func (*iammemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberConditionArgs)(nil)).Elem()
}

func (i *iammemberConditionArgsPtrType) ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput {
	return i.ToIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *iammemberConditionArgsPtrType) ToIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) IAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionArgsPtrOutput)
}

type IAMMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberConditionArgs)(nil)).Elem()
}

func (o IAMMemberConditionArgsOutput) ToIAMMemberConditionArgsOutput() IAMMemberConditionArgsOutput {
	return o
}

func (o IAMMemberConditionArgsOutput) ToIAMMemberConditionArgsOutputWithContext(ctx context.Context) IAMMemberConditionArgsOutput {
	return o
}

func (o IAMMemberConditionArgsOutput) ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput {
	return o.ToIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o IAMMemberConditionArgsOutput) ToIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) IAMMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) *IAMMemberConditionArgs {
		return &v
	}).(IAMMemberConditionArgsPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberConditionArgs)(nil)).Elem()
}

func (o IAMMemberConditionArgsPtrOutput) ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput {
	return o
}

func (o IAMMemberConditionArgsPtrOutput) ToIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) IAMMemberConditionArgsPtrOutput {
	return o
}

func (o IAMMemberConditionArgsPtrOutput) Elem() IAMMemberConditionArgsOutput {
	return o.ApplyT(func(v *IAMMemberConditionArgs) IAMMemberConditionArgs { return *v }).(IAMMemberConditionArgsOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionState struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type IAMMemberConditionStateInput interface {
	pulumi.Input

	ToIAMMemberConditionStateOutput() IAMMemberConditionStateOutput
	ToIAMMemberConditionStateOutputWithContext(context.Context) IAMMemberConditionStateOutput
}

type IAMMemberConditionStateArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberConditionState)(nil)).Elem()
}

func (i IAMMemberConditionStateArgs) ToIAMMemberConditionStateOutput() IAMMemberConditionStateOutput {
	return i.ToIAMMemberConditionStateOutputWithContext(context.Background())
}

func (i IAMMemberConditionStateArgs) ToIAMMemberConditionStateOutputWithContext(ctx context.Context) IAMMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionStateOutput)
}

type IAMMemberConditionStateOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberConditionState)(nil)).Elem()
}

func (o IAMMemberConditionStateOutput) ToIAMMemberConditionStateOutput() IAMMemberConditionStateOutput {
	return o
}

func (o IAMMemberConditionStateOutput) ToIAMMemberConditionStateOutputWithContext(ctx context.Context) IAMMemberConditionStateOutput {
	return o
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type OrganizationPolicyBooleanPolicy struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced bool `pulumi:"enforced"`
}

type OrganizationPolicyBooleanPolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyBooleanPolicyOutput() OrganizationPolicyBooleanPolicyOutput
	ToOrganizationPolicyBooleanPolicyOutputWithContext(context.Context) OrganizationPolicyBooleanPolicyOutput
}

type OrganizationPolicyBooleanPolicyArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (OrganizationPolicyBooleanPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyOutput() OrganizationPolicyBooleanPolicyOutput {
	return i.ToOrganizationPolicyBooleanPolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyOutput)
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return i.ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyOutput).ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx)
}

type OrganizationPolicyBooleanPolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput
	ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Context) OrganizationPolicyBooleanPolicyPtrOutput
}

type organizationPolicyBooleanPolicyPtrType OrganizationPolicyBooleanPolicyArgs

func OrganizationPolicyBooleanPolicyPtr(v *OrganizationPolicyBooleanPolicyArgs) OrganizationPolicyBooleanPolicyPtrInput {
	return (*organizationPolicyBooleanPolicyPtrType)(v)
}

func (*organizationPolicyBooleanPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i *organizationPolicyBooleanPolicyPtrType) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return i.ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyBooleanPolicyPtrType) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyPtrOutput)
}

type OrganizationPolicyBooleanPolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyBooleanPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyOutput() OrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return o.ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicy) *OrganizationPolicyBooleanPolicy {
		return &v
	}).(OrganizationPolicyBooleanPolicyPtrOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o OrganizationPolicyBooleanPolicyOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicy) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type OrganizationPolicyBooleanPolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyBooleanPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o OrganizationPolicyBooleanPolicyPtrOutput) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyPtrOutput) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyPtrOutput) Elem() OrganizationPolicyBooleanPolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicyBooleanPolicy) OrganizationPolicyBooleanPolicy { return *v }).(OrganizationPolicyBooleanPolicyOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o OrganizationPolicyBooleanPolicyPtrOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicy) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type OrganizationPolicyBooleanPolicyArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced bool `pulumi:"enforced"`
}

type OrganizationPolicyBooleanPolicyArgsInput interface {
	pulumi.Input

	ToOrganizationPolicyBooleanPolicyArgsOutput() OrganizationPolicyBooleanPolicyArgsOutput
	ToOrganizationPolicyBooleanPolicyArgsOutputWithContext(context.Context) OrganizationPolicyBooleanPolicyArgsOutput
}

type OrganizationPolicyBooleanPolicyArgsArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (OrganizationPolicyBooleanPolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicyArgs)(nil)).Elem()
}

func (i OrganizationPolicyBooleanPolicyArgsArgs) ToOrganizationPolicyBooleanPolicyArgsOutput() OrganizationPolicyBooleanPolicyArgsOutput {
	return i.ToOrganizationPolicyBooleanPolicyArgsOutputWithContext(context.Background())
}

func (i OrganizationPolicyBooleanPolicyArgsArgs) ToOrganizationPolicyBooleanPolicyArgsOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyArgsOutput)
}

func (i OrganizationPolicyBooleanPolicyArgsArgs) ToOrganizationPolicyBooleanPolicyArgsPtrOutput() OrganizationPolicyBooleanPolicyArgsPtrOutput {
	return i.ToOrganizationPolicyBooleanPolicyArgsPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyBooleanPolicyArgsArgs) ToOrganizationPolicyBooleanPolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyArgsOutput).ToOrganizationPolicyBooleanPolicyArgsPtrOutputWithContext(ctx)
}

type OrganizationPolicyBooleanPolicyArgsPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyBooleanPolicyArgsPtrOutput() OrganizationPolicyBooleanPolicyArgsPtrOutput
	ToOrganizationPolicyBooleanPolicyArgsPtrOutputWithContext(context.Context) OrganizationPolicyBooleanPolicyArgsPtrOutput
}

type organizationPolicyBooleanPolicyArgsPtrType OrganizationPolicyBooleanPolicyArgsArgs

func OrganizationPolicyBooleanPolicyArgsPtr(v *OrganizationPolicyBooleanPolicyArgsArgs) OrganizationPolicyBooleanPolicyArgsPtrInput {
	return (*organizationPolicyBooleanPolicyArgsPtrType)(v)
}

func (*organizationPolicyBooleanPolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyBooleanPolicyArgs)(nil)).Elem()
}

func (i *organizationPolicyBooleanPolicyArgsPtrType) ToOrganizationPolicyBooleanPolicyArgsPtrOutput() OrganizationPolicyBooleanPolicyArgsPtrOutput {
	return i.ToOrganizationPolicyBooleanPolicyArgsPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyBooleanPolicyArgsPtrType) ToOrganizationPolicyBooleanPolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyArgsPtrOutput)
}

type OrganizationPolicyBooleanPolicyArgsOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyBooleanPolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicyArgs)(nil)).Elem()
}

func (o OrganizationPolicyBooleanPolicyArgsOutput) ToOrganizationPolicyBooleanPolicyArgsOutput() OrganizationPolicyBooleanPolicyArgsOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyArgsOutput) ToOrganizationPolicyBooleanPolicyArgsOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyArgsOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyArgsOutput) ToOrganizationPolicyBooleanPolicyArgsPtrOutput() OrganizationPolicyBooleanPolicyArgsPtrOutput {
	return o.ToOrganizationPolicyBooleanPolicyArgsPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyBooleanPolicyArgsOutput) ToOrganizationPolicyBooleanPolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyArgsPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicyArgs) *OrganizationPolicyBooleanPolicyArgs {
		return &v
	}).(OrganizationPolicyBooleanPolicyArgsPtrOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o OrganizationPolicyBooleanPolicyArgsOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicyArgs) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type OrganizationPolicyBooleanPolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyBooleanPolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyBooleanPolicyArgs)(nil)).Elem()
}

func (o OrganizationPolicyBooleanPolicyArgsPtrOutput) ToOrganizationPolicyBooleanPolicyArgsPtrOutput() OrganizationPolicyBooleanPolicyArgsPtrOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyArgsPtrOutput) ToOrganizationPolicyBooleanPolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyArgsPtrOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyArgsPtrOutput) Elem() OrganizationPolicyBooleanPolicyArgsOutput {
	return o.ApplyT(func(v *OrganizationPolicyBooleanPolicyArgs) OrganizationPolicyBooleanPolicyArgs { return *v }).(OrganizationPolicyBooleanPolicyArgsOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o OrganizationPolicyBooleanPolicyArgsPtrOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicyArgs) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type OrganizationPolicyBooleanPolicyState struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced bool `pulumi:"enforced"`
}

type OrganizationPolicyBooleanPolicyStateInput interface {
	pulumi.Input

	ToOrganizationPolicyBooleanPolicyStateOutput() OrganizationPolicyBooleanPolicyStateOutput
	ToOrganizationPolicyBooleanPolicyStateOutputWithContext(context.Context) OrganizationPolicyBooleanPolicyStateOutput
}

type OrganizationPolicyBooleanPolicyStateArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (OrganizationPolicyBooleanPolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicyState)(nil)).Elem()
}

func (i OrganizationPolicyBooleanPolicyStateArgs) ToOrganizationPolicyBooleanPolicyStateOutput() OrganizationPolicyBooleanPolicyStateOutput {
	return i.ToOrganizationPolicyBooleanPolicyStateOutputWithContext(context.Background())
}

func (i OrganizationPolicyBooleanPolicyStateArgs) ToOrganizationPolicyBooleanPolicyStateOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyStateOutput)
}

type OrganizationPolicyBooleanPolicyStateOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyBooleanPolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicyState)(nil)).Elem()
}

func (o OrganizationPolicyBooleanPolicyStateOutput) ToOrganizationPolicyBooleanPolicyStateOutput() OrganizationPolicyBooleanPolicyStateOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyStateOutput) ToOrganizationPolicyBooleanPolicyStateOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyStateOutput {
	return o
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o OrganizationPolicyBooleanPolicyStateOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicyState) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type OrganizationPolicyListPolicy struct {
	Allow *OrganizationPolicyListPolicyAllow `pulumi:"allow"`
	Deny  *OrganizationPolicyListPolicyDeny  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent *bool `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue string `pulumi:"suggestedValue"`
}

type OrganizationPolicyListPolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyOutput() OrganizationPolicyListPolicyOutput
	ToOrganizationPolicyListPolicyOutputWithContext(context.Context) OrganizationPolicyListPolicyOutput
}

type OrganizationPolicyListPolicyArgs struct {
	Allow OrganizationPolicyListPolicyAllowPtrInput `pulumi:"allow"`
	Deny  OrganizationPolicyListPolicyDenyPtrInput  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent pulumi.BoolPtrInput `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue pulumi.StringInput `pulumi:"suggestedValue"`
}

func (OrganizationPolicyListPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicy)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyOutput() OrganizationPolicyListPolicyOutput {
	return i.ToOrganizationPolicyListPolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyOutput)
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return i.ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyOutput).ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx)
}

type OrganizationPolicyListPolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput
	ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyPtrOutput
}

type organizationPolicyListPolicyPtrType OrganizationPolicyListPolicyArgs

func OrganizationPolicyListPolicyPtr(v *OrganizationPolicyListPolicyArgs) OrganizationPolicyListPolicyPtrInput {
	return (*organizationPolicyListPolicyPtrType)(v)
}

func (*organizationPolicyListPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicy)(nil)).Elem()
}

func (i *organizationPolicyListPolicyPtrType) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return i.ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyPtrType) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyPtrOutput)
}

type OrganizationPolicyListPolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicy)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyOutput() OrganizationPolicyListPolicyOutput {
	return o
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyOutput {
	return o
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return o.ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicy {
		return &v
	}).(OrganizationPolicyListPolicyPtrOutput)
}
func (o OrganizationPolicyListPolicyOutput) Allow() OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyAllow { return v.Allow }).(OrganizationPolicyListPolicyAllowPtrOutput)
}

func (o OrganizationPolicyListPolicyOutput) Deny() OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyDeny { return v.Deny }).(OrganizationPolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o OrganizationPolicyListPolicyOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o OrganizationPolicyListPolicyOutput) SuggestedValue() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) string { return v.SuggestedValue }).(pulumi.StringOutput)
}

type OrganizationPolicyListPolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicy)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyPtrOutput) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyPtrOutput) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyPtrOutput) Elem() OrganizationPolicyListPolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) OrganizationPolicyListPolicy { return *v }).(OrganizationPolicyListPolicyOutput)
}

func (o OrganizationPolicyListPolicyPtrOutput) Allow() OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyAllow { return v.Allow }).(OrganizationPolicyListPolicyAllowPtrOutput)
}

func (o OrganizationPolicyListPolicyPtrOutput) Deny() OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyDeny { return v.Deny }).(OrganizationPolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o OrganizationPolicyListPolicyPtrOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o OrganizationPolicyListPolicyPtrOutput) SuggestedValue() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) string { return v.SuggestedValue }).(pulumi.StringOutput)
}

type OrganizationPolicyListPolicyAllow struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type OrganizationPolicyListPolicyAllowInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyAllowOutput() OrganizationPolicyListPolicyAllowOutput
	ToOrganizationPolicyListPolicyAllowOutputWithContext(context.Context) OrganizationPolicyListPolicyAllowOutput
}

type OrganizationPolicyListPolicyAllowArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowOutput() OrganizationPolicyListPolicyAllowOutput {
	return i.ToOrganizationPolicyListPolicyAllowOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowOutput)
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return i.ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowOutput).ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx)
}

type OrganizationPolicyListPolicyAllowPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput
	ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyAllowPtrOutput
}

type organizationPolicyListPolicyAllowPtrType OrganizationPolicyListPolicyAllowArgs

func OrganizationPolicyListPolicyAllowPtr(v *OrganizationPolicyListPolicyAllowArgs) OrganizationPolicyListPolicyAllowPtrInput {
	return (*organizationPolicyListPolicyAllowPtrType)(v)
}

func (*organizationPolicyListPolicyAllowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i *organizationPolicyListPolicyAllowPtrType) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return i.ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyAllowPtrType) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowPtrOutput)
}

type OrganizationPolicyListPolicyAllowOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowOutput() OrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) *OrganizationPolicyListPolicyAllow {
		return &v
	}).(OrganizationPolicyListPolicyAllowPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyAllowOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyAllowOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyAllowPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyAllowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyAllowPtrOutput) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowPtrOutput) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowPtrOutput) Elem() OrganizationPolicyListPolicyAllowOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyAllow) OrganizationPolicyListPolicyAllow { return *v }).(OrganizationPolicyListPolicyAllowOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyAllowPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyAllowPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyAllowArgs struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type OrganizationPolicyListPolicyAllowArgsInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyAllowArgsOutput() OrganizationPolicyListPolicyAllowArgsOutput
	ToOrganizationPolicyListPolicyAllowArgsOutputWithContext(context.Context) OrganizationPolicyListPolicyAllowArgsOutput
}

type OrganizationPolicyListPolicyAllowArgsArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyAllowArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyAllowArgs)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyAllowArgsArgs) ToOrganizationPolicyListPolicyAllowArgsOutput() OrganizationPolicyListPolicyAllowArgsOutput {
	return i.ToOrganizationPolicyListPolicyAllowArgsOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyAllowArgsArgs) ToOrganizationPolicyListPolicyAllowArgsOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowArgsOutput)
}

func (i OrganizationPolicyListPolicyAllowArgsArgs) ToOrganizationPolicyListPolicyAllowArgsPtrOutput() OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return i.ToOrganizationPolicyListPolicyAllowArgsPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyAllowArgsArgs) ToOrganizationPolicyListPolicyAllowArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowArgsOutput).ToOrganizationPolicyListPolicyAllowArgsPtrOutputWithContext(ctx)
}

type OrganizationPolicyListPolicyAllowArgsPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyAllowArgsPtrOutput() OrganizationPolicyListPolicyAllowArgsPtrOutput
	ToOrganizationPolicyListPolicyAllowArgsPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyAllowArgsPtrOutput
}

type organizationPolicyListPolicyAllowArgsPtrType OrganizationPolicyListPolicyAllowArgsArgs

func OrganizationPolicyListPolicyAllowArgsPtr(v *OrganizationPolicyListPolicyAllowArgsArgs) OrganizationPolicyListPolicyAllowArgsPtrInput {
	return (*organizationPolicyListPolicyAllowArgsPtrType)(v)
}

func (*organizationPolicyListPolicyAllowArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyAllowArgs)(nil)).Elem()
}

func (i *organizationPolicyListPolicyAllowArgsPtrType) ToOrganizationPolicyListPolicyAllowArgsPtrOutput() OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return i.ToOrganizationPolicyListPolicyAllowArgsPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyAllowArgsPtrType) ToOrganizationPolicyListPolicyAllowArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowArgsPtrOutput)
}

type OrganizationPolicyListPolicyAllowArgsOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyAllowArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyAllowArgs)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyAllowArgsOutput) ToOrganizationPolicyListPolicyAllowArgsOutput() OrganizationPolicyListPolicyAllowArgsOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowArgsOutput) ToOrganizationPolicyListPolicyAllowArgsOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowArgsOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowArgsOutput) ToOrganizationPolicyListPolicyAllowArgsPtrOutput() OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return o.ToOrganizationPolicyListPolicyAllowArgsPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyAllowArgsOutput) ToOrganizationPolicyListPolicyAllowArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllowArgs) *OrganizationPolicyListPolicyAllowArgs {
		return &v
	}).(OrganizationPolicyListPolicyAllowArgsPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyAllowArgsOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllowArgs) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyAllowArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllowArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyAllowArgsPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyAllowArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyAllowArgs)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyAllowArgsPtrOutput) ToOrganizationPolicyListPolicyAllowArgsPtrOutput() OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowArgsPtrOutput) ToOrganizationPolicyListPolicyAllowArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowArgsPtrOutput) Elem() OrganizationPolicyListPolicyAllowArgsOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyAllowArgs) OrganizationPolicyListPolicyAllowArgs { return *v }).(OrganizationPolicyListPolicyAllowArgsOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyAllowArgsPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllowArgs) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyAllowArgsPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllowArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyArgs struct {
	Allow *OrganizationPolicyListPolicyAllowArgs `pulumi:"allow"`
	Deny  *OrganizationPolicyListPolicyDenyArgs  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent *bool `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue *string `pulumi:"suggestedValue"`
}

type OrganizationPolicyListPolicyArgsInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyArgsOutput() OrganizationPolicyListPolicyArgsOutput
	ToOrganizationPolicyListPolicyArgsOutputWithContext(context.Context) OrganizationPolicyListPolicyArgsOutput
}

type OrganizationPolicyListPolicyArgsArgs struct {
	Allow OrganizationPolicyListPolicyAllowArgsPtrInput `pulumi:"allow"`
	Deny  OrganizationPolicyListPolicyDenyArgsPtrInput  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent pulumi.BoolPtrInput `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue pulumi.StringPtrInput `pulumi:"suggestedValue"`
}

func (OrganizationPolicyListPolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyArgs)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyArgsArgs) ToOrganizationPolicyListPolicyArgsOutput() OrganizationPolicyListPolicyArgsOutput {
	return i.ToOrganizationPolicyListPolicyArgsOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyArgsArgs) ToOrganizationPolicyListPolicyArgsOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyArgsOutput)
}

func (i OrganizationPolicyListPolicyArgsArgs) ToOrganizationPolicyListPolicyArgsPtrOutput() OrganizationPolicyListPolicyArgsPtrOutput {
	return i.ToOrganizationPolicyListPolicyArgsPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyArgsArgs) ToOrganizationPolicyListPolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyArgsOutput).ToOrganizationPolicyListPolicyArgsPtrOutputWithContext(ctx)
}

type OrganizationPolicyListPolicyArgsPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyArgsPtrOutput() OrganizationPolicyListPolicyArgsPtrOutput
	ToOrganizationPolicyListPolicyArgsPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyArgsPtrOutput
}

type organizationPolicyListPolicyArgsPtrType OrganizationPolicyListPolicyArgsArgs

func OrganizationPolicyListPolicyArgsPtr(v *OrganizationPolicyListPolicyArgsArgs) OrganizationPolicyListPolicyArgsPtrInput {
	return (*organizationPolicyListPolicyArgsPtrType)(v)
}

func (*organizationPolicyListPolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyArgs)(nil)).Elem()
}

func (i *organizationPolicyListPolicyArgsPtrType) ToOrganizationPolicyListPolicyArgsPtrOutput() OrganizationPolicyListPolicyArgsPtrOutput {
	return i.ToOrganizationPolicyListPolicyArgsPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyArgsPtrType) ToOrganizationPolicyListPolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyArgsPtrOutput)
}

type OrganizationPolicyListPolicyArgsOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyArgs)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyArgsOutput) ToOrganizationPolicyListPolicyArgsOutput() OrganizationPolicyListPolicyArgsOutput {
	return o
}

func (o OrganizationPolicyListPolicyArgsOutput) ToOrganizationPolicyListPolicyArgsOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyArgsOutput {
	return o
}

func (o OrganizationPolicyListPolicyArgsOutput) ToOrganizationPolicyListPolicyArgsPtrOutput() OrganizationPolicyListPolicyArgsPtrOutput {
	return o.ToOrganizationPolicyListPolicyArgsPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyArgsOutput) ToOrganizationPolicyListPolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyArgsPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyArgs) *OrganizationPolicyListPolicyArgs {
		return &v
	}).(OrganizationPolicyListPolicyArgsPtrOutput)
}
func (o OrganizationPolicyListPolicyArgsOutput) Allow() OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyArgs) *OrganizationPolicyListPolicyAllowArgs { return v.Allow }).(OrganizationPolicyListPolicyAllowArgsPtrOutput)
}

func (o OrganizationPolicyListPolicyArgsOutput) Deny() OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyArgs) *OrganizationPolicyListPolicyDenyArgs { return v.Deny }).(OrganizationPolicyListPolicyDenyArgsPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o OrganizationPolicyListPolicyArgsOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyArgs) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o OrganizationPolicyListPolicyArgsOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyArgs) *string { return v.SuggestedValue }).(pulumi.StringPtrOutput)
}

type OrganizationPolicyListPolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyArgs)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyArgsPtrOutput) ToOrganizationPolicyListPolicyArgsPtrOutput() OrganizationPolicyListPolicyArgsPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyArgsPtrOutput) ToOrganizationPolicyListPolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyArgsPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyArgsPtrOutput) Elem() OrganizationPolicyListPolicyArgsOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyArgs) OrganizationPolicyListPolicyArgs { return *v }).(OrganizationPolicyListPolicyArgsOutput)
}

func (o OrganizationPolicyListPolicyArgsPtrOutput) Allow() OrganizationPolicyListPolicyAllowArgsPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyArgs) *OrganizationPolicyListPolicyAllowArgs { return v.Allow }).(OrganizationPolicyListPolicyAllowArgsPtrOutput)
}

func (o OrganizationPolicyListPolicyArgsPtrOutput) Deny() OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyArgs) *OrganizationPolicyListPolicyDenyArgs { return v.Deny }).(OrganizationPolicyListPolicyDenyArgsPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o OrganizationPolicyListPolicyArgsPtrOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyArgs) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o OrganizationPolicyListPolicyArgsPtrOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyArgs) *string { return v.SuggestedValue }).(pulumi.StringPtrOutput)
}

type OrganizationPolicyListPolicyDeny struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type OrganizationPolicyListPolicyDenyInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyDenyOutput() OrganizationPolicyListPolicyDenyOutput
	ToOrganizationPolicyListPolicyDenyOutputWithContext(context.Context) OrganizationPolicyListPolicyDenyOutput
}

type OrganizationPolicyListPolicyDenyArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyOutput() OrganizationPolicyListPolicyDenyOutput {
	return i.ToOrganizationPolicyListPolicyDenyOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyOutput)
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return i.ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyOutput).ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx)
}

type OrganizationPolicyListPolicyDenyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput
	ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyDenyPtrOutput
}

type organizationPolicyListPolicyDenyPtrType OrganizationPolicyListPolicyDenyArgs

func OrganizationPolicyListPolicyDenyPtr(v *OrganizationPolicyListPolicyDenyArgs) OrganizationPolicyListPolicyDenyPtrInput {
	return (*organizationPolicyListPolicyDenyPtrType)(v)
}

func (*organizationPolicyListPolicyDenyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i *organizationPolicyListPolicyDenyPtrType) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return i.ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyDenyPtrType) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyPtrOutput)
}

type OrganizationPolicyListPolicyDenyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyOutput() OrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) *OrganizationPolicyListPolicyDeny {
		return &v
	}).(OrganizationPolicyListPolicyDenyPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyDenyOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyDenyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyDenyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyDenyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyDenyPtrOutput) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyPtrOutput) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyPtrOutput) Elem() OrganizationPolicyListPolicyDenyOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyDeny) OrganizationPolicyListPolicyDeny { return *v }).(OrganizationPolicyListPolicyDenyOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyDenyPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyDenyPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyDenyArgs struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type OrganizationPolicyListPolicyDenyArgsInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyDenyArgsOutput() OrganizationPolicyListPolicyDenyArgsOutput
	ToOrganizationPolicyListPolicyDenyArgsOutputWithContext(context.Context) OrganizationPolicyListPolicyDenyArgsOutput
}

type OrganizationPolicyListPolicyDenyArgsArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyDenyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyDenyArgs)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyDenyArgsArgs) ToOrganizationPolicyListPolicyDenyArgsOutput() OrganizationPolicyListPolicyDenyArgsOutput {
	return i.ToOrganizationPolicyListPolicyDenyArgsOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyDenyArgsArgs) ToOrganizationPolicyListPolicyDenyArgsOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyArgsOutput)
}

func (i OrganizationPolicyListPolicyDenyArgsArgs) ToOrganizationPolicyListPolicyDenyArgsPtrOutput() OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return i.ToOrganizationPolicyListPolicyDenyArgsPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyDenyArgsArgs) ToOrganizationPolicyListPolicyDenyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyArgsOutput).ToOrganizationPolicyListPolicyDenyArgsPtrOutputWithContext(ctx)
}

type OrganizationPolicyListPolicyDenyArgsPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyDenyArgsPtrOutput() OrganizationPolicyListPolicyDenyArgsPtrOutput
	ToOrganizationPolicyListPolicyDenyArgsPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyDenyArgsPtrOutput
}

type organizationPolicyListPolicyDenyArgsPtrType OrganizationPolicyListPolicyDenyArgsArgs

func OrganizationPolicyListPolicyDenyArgsPtr(v *OrganizationPolicyListPolicyDenyArgsArgs) OrganizationPolicyListPolicyDenyArgsPtrInput {
	return (*organizationPolicyListPolicyDenyArgsPtrType)(v)
}

func (*organizationPolicyListPolicyDenyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyDenyArgs)(nil)).Elem()
}

func (i *organizationPolicyListPolicyDenyArgsPtrType) ToOrganizationPolicyListPolicyDenyArgsPtrOutput() OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return i.ToOrganizationPolicyListPolicyDenyArgsPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyDenyArgsPtrType) ToOrganizationPolicyListPolicyDenyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyArgsPtrOutput)
}

type OrganizationPolicyListPolicyDenyArgsOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyDenyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyDenyArgs)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyDenyArgsOutput) ToOrganizationPolicyListPolicyDenyArgsOutput() OrganizationPolicyListPolicyDenyArgsOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyArgsOutput) ToOrganizationPolicyListPolicyDenyArgsOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyArgsOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyArgsOutput) ToOrganizationPolicyListPolicyDenyArgsPtrOutput() OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return o.ToOrganizationPolicyListPolicyDenyArgsPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyDenyArgsOutput) ToOrganizationPolicyListPolicyDenyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDenyArgs) *OrganizationPolicyListPolicyDenyArgs {
		return &v
	}).(OrganizationPolicyListPolicyDenyArgsPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyDenyArgsOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDenyArgs) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyDenyArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDenyArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyDenyArgsPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyDenyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyDenyArgs)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyDenyArgsPtrOutput) ToOrganizationPolicyListPolicyDenyArgsPtrOutput() OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyArgsPtrOutput) ToOrganizationPolicyListPolicyDenyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyArgsPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyArgsPtrOutput) Elem() OrganizationPolicyListPolicyDenyArgsOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyDenyArgs) OrganizationPolicyListPolicyDenyArgs { return *v }).(OrganizationPolicyListPolicyDenyArgsOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyDenyArgsPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDenyArgs) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyDenyArgsPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDenyArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyState struct {
	Allow *OrganizationPolicyListPolicyStateAllow `pulumi:"allow"`
	Deny  *OrganizationPolicyListPolicyStateDeny  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent *bool `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue *string `pulumi:"suggestedValue"`
}

type OrganizationPolicyListPolicyStateInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyStateOutput() OrganizationPolicyListPolicyStateOutput
	ToOrganizationPolicyListPolicyStateOutputWithContext(context.Context) OrganizationPolicyListPolicyStateOutput
}

type OrganizationPolicyListPolicyStateArgs struct {
	Allow OrganizationPolicyListPolicyStateAllowPtrInput `pulumi:"allow"`
	Deny  OrganizationPolicyListPolicyStateDenyPtrInput  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent pulumi.BoolPtrInput `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue pulumi.StringPtrInput `pulumi:"suggestedValue"`
}

func (OrganizationPolicyListPolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyState)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyStateArgs) ToOrganizationPolicyListPolicyStateOutput() OrganizationPolicyListPolicyStateOutput {
	return i.ToOrganizationPolicyListPolicyStateOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyStateArgs) ToOrganizationPolicyListPolicyStateOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyStateOutput)
}

type OrganizationPolicyListPolicyStateOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyState)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyStateOutput) ToOrganizationPolicyListPolicyStateOutput() OrganizationPolicyListPolicyStateOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateOutput) ToOrganizationPolicyListPolicyStateOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateOutput) Allow() OrganizationPolicyListPolicyStateAllowPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyState) *OrganizationPolicyListPolicyStateAllow { return v.Allow }).(OrganizationPolicyListPolicyStateAllowPtrOutput)
}

func (o OrganizationPolicyListPolicyStateOutput) Deny() OrganizationPolicyListPolicyStateDenyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyState) *OrganizationPolicyListPolicyStateDeny { return v.Deny }).(OrganizationPolicyListPolicyStateDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o OrganizationPolicyListPolicyStateOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyState) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o OrganizationPolicyListPolicyStateOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyState) *string { return v.SuggestedValue }).(pulumi.StringPtrOutput)
}

type OrganizationPolicyListPolicyStateAllow struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type OrganizationPolicyListPolicyStateAllowInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyStateAllowOutput() OrganizationPolicyListPolicyStateAllowOutput
	ToOrganizationPolicyListPolicyStateAllowOutputWithContext(context.Context) OrganizationPolicyListPolicyStateAllowOutput
}

type OrganizationPolicyListPolicyStateAllowArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyStateAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyStateAllow)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyStateAllowArgs) ToOrganizationPolicyListPolicyStateAllowOutput() OrganizationPolicyListPolicyStateAllowOutput {
	return i.ToOrganizationPolicyListPolicyStateAllowOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyStateAllowArgs) ToOrganizationPolicyListPolicyStateAllowOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyStateAllowOutput)
}

func (i OrganizationPolicyListPolicyStateAllowArgs) ToOrganizationPolicyListPolicyStateAllowPtrOutput() OrganizationPolicyListPolicyStateAllowPtrOutput {
	return i.ToOrganizationPolicyListPolicyStateAllowPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyStateAllowArgs) ToOrganizationPolicyListPolicyStateAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyStateAllowOutput).ToOrganizationPolicyListPolicyStateAllowPtrOutputWithContext(ctx)
}

type OrganizationPolicyListPolicyStateAllowPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyStateAllowPtrOutput() OrganizationPolicyListPolicyStateAllowPtrOutput
	ToOrganizationPolicyListPolicyStateAllowPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyStateAllowPtrOutput
}

type organizationPolicyListPolicyStateAllowPtrType OrganizationPolicyListPolicyStateAllowArgs

func OrganizationPolicyListPolicyStateAllowPtr(v *OrganizationPolicyListPolicyStateAllowArgs) OrganizationPolicyListPolicyStateAllowPtrInput {
	return (*organizationPolicyListPolicyStateAllowPtrType)(v)
}

func (*organizationPolicyListPolicyStateAllowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyStateAllow)(nil)).Elem()
}

func (i *organizationPolicyListPolicyStateAllowPtrType) ToOrganizationPolicyListPolicyStateAllowPtrOutput() OrganizationPolicyListPolicyStateAllowPtrOutput {
	return i.ToOrganizationPolicyListPolicyStateAllowPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyStateAllowPtrType) ToOrganizationPolicyListPolicyStateAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyStateAllowPtrOutput)
}

type OrganizationPolicyListPolicyStateAllowOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyStateAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyStateAllow)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyStateAllowOutput) ToOrganizationPolicyListPolicyStateAllowOutput() OrganizationPolicyListPolicyStateAllowOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateAllowOutput) ToOrganizationPolicyListPolicyStateAllowOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateAllowOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateAllowOutput) ToOrganizationPolicyListPolicyStateAllowPtrOutput() OrganizationPolicyListPolicyStateAllowPtrOutput {
	return o.ToOrganizationPolicyListPolicyStateAllowPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyStateAllowOutput) ToOrganizationPolicyListPolicyStateAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateAllowPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateAllow) *OrganizationPolicyListPolicyStateAllow {
		return &v
	}).(OrganizationPolicyListPolicyStateAllowPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyStateAllowOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyStateAllowOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyStateAllowPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyStateAllowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyStateAllow)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyStateAllowPtrOutput) ToOrganizationPolicyListPolicyStateAllowPtrOutput() OrganizationPolicyListPolicyStateAllowPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateAllowPtrOutput) ToOrganizationPolicyListPolicyStateAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateAllowPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateAllowPtrOutput) Elem() OrganizationPolicyListPolicyStateAllowOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyStateAllow) OrganizationPolicyListPolicyStateAllow { return *v }).(OrganizationPolicyListPolicyStateAllowOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyStateAllowPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyStateAllowPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyStateDeny struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type OrganizationPolicyListPolicyStateDenyInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyStateDenyOutput() OrganizationPolicyListPolicyStateDenyOutput
	ToOrganizationPolicyListPolicyStateDenyOutputWithContext(context.Context) OrganizationPolicyListPolicyStateDenyOutput
}

type OrganizationPolicyListPolicyStateDenyArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyStateDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyStateDeny)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyStateDenyArgs) ToOrganizationPolicyListPolicyStateDenyOutput() OrganizationPolicyListPolicyStateDenyOutput {
	return i.ToOrganizationPolicyListPolicyStateDenyOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyStateDenyArgs) ToOrganizationPolicyListPolicyStateDenyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyStateDenyOutput)
}

func (i OrganizationPolicyListPolicyStateDenyArgs) ToOrganizationPolicyListPolicyStateDenyPtrOutput() OrganizationPolicyListPolicyStateDenyPtrOutput {
	return i.ToOrganizationPolicyListPolicyStateDenyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyStateDenyArgs) ToOrganizationPolicyListPolicyStateDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyStateDenyOutput).ToOrganizationPolicyListPolicyStateDenyPtrOutputWithContext(ctx)
}

type OrganizationPolicyListPolicyStateDenyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyStateDenyPtrOutput() OrganizationPolicyListPolicyStateDenyPtrOutput
	ToOrganizationPolicyListPolicyStateDenyPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyStateDenyPtrOutput
}

type organizationPolicyListPolicyStateDenyPtrType OrganizationPolicyListPolicyStateDenyArgs

func OrganizationPolicyListPolicyStateDenyPtr(v *OrganizationPolicyListPolicyStateDenyArgs) OrganizationPolicyListPolicyStateDenyPtrInput {
	return (*organizationPolicyListPolicyStateDenyPtrType)(v)
}

func (*organizationPolicyListPolicyStateDenyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyStateDeny)(nil)).Elem()
}

func (i *organizationPolicyListPolicyStateDenyPtrType) ToOrganizationPolicyListPolicyStateDenyPtrOutput() OrganizationPolicyListPolicyStateDenyPtrOutput {
	return i.ToOrganizationPolicyListPolicyStateDenyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyStateDenyPtrType) ToOrganizationPolicyListPolicyStateDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyStateDenyPtrOutput)
}

type OrganizationPolicyListPolicyStateDenyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyStateDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyStateDeny)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyStateDenyOutput) ToOrganizationPolicyListPolicyStateDenyOutput() OrganizationPolicyListPolicyStateDenyOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateDenyOutput) ToOrganizationPolicyListPolicyStateDenyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateDenyOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateDenyOutput) ToOrganizationPolicyListPolicyStateDenyPtrOutput() OrganizationPolicyListPolicyStateDenyPtrOutput {
	return o.ToOrganizationPolicyListPolicyStateDenyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyStateDenyOutput) ToOrganizationPolicyListPolicyStateDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateDenyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateDeny) *OrganizationPolicyListPolicyStateDeny {
		return &v
	}).(OrganizationPolicyListPolicyStateDenyPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyStateDenyOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyStateDenyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyStateDenyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyStateDenyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyStateDeny)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyStateDenyPtrOutput) ToOrganizationPolicyListPolicyStateDenyPtrOutput() OrganizationPolicyListPolicyStateDenyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateDenyPtrOutput) ToOrganizationPolicyListPolicyStateDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyStateDenyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyStateDenyPtrOutput) Elem() OrganizationPolicyListPolicyStateDenyOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyStateDeny) OrganizationPolicyListPolicyStateDeny { return *v }).(OrganizationPolicyListPolicyStateDenyOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyStateDenyPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyStateDenyPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyStateDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyRestorePolicy struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default bool `pulumi:"default"`
}

type OrganizationPolicyRestorePolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyRestorePolicyOutput() OrganizationPolicyRestorePolicyOutput
	ToOrganizationPolicyRestorePolicyOutputWithContext(context.Context) OrganizationPolicyRestorePolicyOutput
}

type OrganizationPolicyRestorePolicyArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default pulumi.BoolInput `pulumi:"default"`
}

func (OrganizationPolicyRestorePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyOutput() OrganizationPolicyRestorePolicyOutput {
	return i.ToOrganizationPolicyRestorePolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyOutput)
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return i.ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyOutput).ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx)
}

type OrganizationPolicyRestorePolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput
	ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Context) OrganizationPolicyRestorePolicyPtrOutput
}

type organizationPolicyRestorePolicyPtrType OrganizationPolicyRestorePolicyArgs

func OrganizationPolicyRestorePolicyPtr(v *OrganizationPolicyRestorePolicyArgs) OrganizationPolicyRestorePolicyPtrInput {
	return (*organizationPolicyRestorePolicyPtrType)(v)
}

func (*organizationPolicyRestorePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i *organizationPolicyRestorePolicyPtrType) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return i.ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyRestorePolicyPtrType) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyPtrOutput)
}

type OrganizationPolicyRestorePolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyRestorePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyOutput() OrganizationPolicyRestorePolicyOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return o.ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicy) *OrganizationPolicyRestorePolicy {
		return &v
	}).(OrganizationPolicyRestorePolicyPtrOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o OrganizationPolicyRestorePolicyOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicy) bool { return v.Default }).(pulumi.BoolOutput)
}

type OrganizationPolicyRestorePolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyRestorePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o OrganizationPolicyRestorePolicyPtrOutput) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyPtrOutput) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyPtrOutput) Elem() OrganizationPolicyRestorePolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicyRestorePolicy) OrganizationPolicyRestorePolicy { return *v }).(OrganizationPolicyRestorePolicyOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o OrganizationPolicyRestorePolicyPtrOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicy) bool { return v.Default }).(pulumi.BoolOutput)
}

type OrganizationPolicyRestorePolicyArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default bool `pulumi:"default"`
}

type OrganizationPolicyRestorePolicyArgsInput interface {
	pulumi.Input

	ToOrganizationPolicyRestorePolicyArgsOutput() OrganizationPolicyRestorePolicyArgsOutput
	ToOrganizationPolicyRestorePolicyArgsOutputWithContext(context.Context) OrganizationPolicyRestorePolicyArgsOutput
}

type OrganizationPolicyRestorePolicyArgsArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default pulumi.BoolInput `pulumi:"default"`
}

func (OrganizationPolicyRestorePolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicyArgs)(nil)).Elem()
}

func (i OrganizationPolicyRestorePolicyArgsArgs) ToOrganizationPolicyRestorePolicyArgsOutput() OrganizationPolicyRestorePolicyArgsOutput {
	return i.ToOrganizationPolicyRestorePolicyArgsOutputWithContext(context.Background())
}

func (i OrganizationPolicyRestorePolicyArgsArgs) ToOrganizationPolicyRestorePolicyArgsOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyArgsOutput)
}

func (i OrganizationPolicyRestorePolicyArgsArgs) ToOrganizationPolicyRestorePolicyArgsPtrOutput() OrganizationPolicyRestorePolicyArgsPtrOutput {
	return i.ToOrganizationPolicyRestorePolicyArgsPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyRestorePolicyArgsArgs) ToOrganizationPolicyRestorePolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyArgsOutput).ToOrganizationPolicyRestorePolicyArgsPtrOutputWithContext(ctx)
}

type OrganizationPolicyRestorePolicyArgsPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyRestorePolicyArgsPtrOutput() OrganizationPolicyRestorePolicyArgsPtrOutput
	ToOrganizationPolicyRestorePolicyArgsPtrOutputWithContext(context.Context) OrganizationPolicyRestorePolicyArgsPtrOutput
}

type organizationPolicyRestorePolicyArgsPtrType OrganizationPolicyRestorePolicyArgsArgs

func OrganizationPolicyRestorePolicyArgsPtr(v *OrganizationPolicyRestorePolicyArgsArgs) OrganizationPolicyRestorePolicyArgsPtrInput {
	return (*organizationPolicyRestorePolicyArgsPtrType)(v)
}

func (*organizationPolicyRestorePolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyRestorePolicyArgs)(nil)).Elem()
}

func (i *organizationPolicyRestorePolicyArgsPtrType) ToOrganizationPolicyRestorePolicyArgsPtrOutput() OrganizationPolicyRestorePolicyArgsPtrOutput {
	return i.ToOrganizationPolicyRestorePolicyArgsPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyRestorePolicyArgsPtrType) ToOrganizationPolicyRestorePolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyArgsPtrOutput)
}

type OrganizationPolicyRestorePolicyArgsOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyRestorePolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicyArgs)(nil)).Elem()
}

func (o OrganizationPolicyRestorePolicyArgsOutput) ToOrganizationPolicyRestorePolicyArgsOutput() OrganizationPolicyRestorePolicyArgsOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyArgsOutput) ToOrganizationPolicyRestorePolicyArgsOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyArgsOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyArgsOutput) ToOrganizationPolicyRestorePolicyArgsPtrOutput() OrganizationPolicyRestorePolicyArgsPtrOutput {
	return o.ToOrganizationPolicyRestorePolicyArgsPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyRestorePolicyArgsOutput) ToOrganizationPolicyRestorePolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyArgsPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicyArgs) *OrganizationPolicyRestorePolicyArgs {
		return &v
	}).(OrganizationPolicyRestorePolicyArgsPtrOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o OrganizationPolicyRestorePolicyArgsOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicyArgs) bool { return v.Default }).(pulumi.BoolOutput)
}

type OrganizationPolicyRestorePolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyRestorePolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyRestorePolicyArgs)(nil)).Elem()
}

func (o OrganizationPolicyRestorePolicyArgsPtrOutput) ToOrganizationPolicyRestorePolicyArgsPtrOutput() OrganizationPolicyRestorePolicyArgsPtrOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyArgsPtrOutput) ToOrganizationPolicyRestorePolicyArgsPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyArgsPtrOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyArgsPtrOutput) Elem() OrganizationPolicyRestorePolicyArgsOutput {
	return o.ApplyT(func(v *OrganizationPolicyRestorePolicyArgs) OrganizationPolicyRestorePolicyArgs { return *v }).(OrganizationPolicyRestorePolicyArgsOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o OrganizationPolicyRestorePolicyArgsPtrOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicyArgs) bool { return v.Default }).(pulumi.BoolOutput)
}

type OrganizationPolicyRestorePolicyState struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default bool `pulumi:"default"`
}

type OrganizationPolicyRestorePolicyStateInput interface {
	pulumi.Input

	ToOrganizationPolicyRestorePolicyStateOutput() OrganizationPolicyRestorePolicyStateOutput
	ToOrganizationPolicyRestorePolicyStateOutputWithContext(context.Context) OrganizationPolicyRestorePolicyStateOutput
}

type OrganizationPolicyRestorePolicyStateArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default pulumi.BoolInput `pulumi:"default"`
}

func (OrganizationPolicyRestorePolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicyState)(nil)).Elem()
}

func (i OrganizationPolicyRestorePolicyStateArgs) ToOrganizationPolicyRestorePolicyStateOutput() OrganizationPolicyRestorePolicyStateOutput {
	return i.ToOrganizationPolicyRestorePolicyStateOutputWithContext(context.Background())
}

func (i OrganizationPolicyRestorePolicyStateArgs) ToOrganizationPolicyRestorePolicyStateOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyStateOutput)
}

type OrganizationPolicyRestorePolicyStateOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyRestorePolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicyState)(nil)).Elem()
}

func (o OrganizationPolicyRestorePolicyStateOutput) ToOrganizationPolicyRestorePolicyStateOutput() OrganizationPolicyRestorePolicyStateOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyStateOutput) ToOrganizationPolicyRestorePolicyStateOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyStateOutput {
	return o
}

// May only be set to true. If set, then the default Policy is restored.
func (o OrganizationPolicyRestorePolicyStateOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicyState) bool { return v.Default }).(pulumi.BoolOutput)
}

type GetOrganizationPolicyBooleanPolicy struct {
	Enforced bool `pulumi:"enforced"`
}

type GetOrganizationPolicyBooleanPolicyInput interface {
	pulumi.Input

	ToGetOrganizationPolicyBooleanPolicyOutput() GetOrganizationPolicyBooleanPolicyOutput
	ToGetOrganizationPolicyBooleanPolicyOutputWithContext(context.Context) GetOrganizationPolicyBooleanPolicyOutput
}

type GetOrganizationPolicyBooleanPolicyArgs struct {
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (GetOrganizationPolicyBooleanPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyBooleanPolicyArgs) ToGetOrganizationPolicyBooleanPolicyOutput() GetOrganizationPolicyBooleanPolicyOutput {
	return i.ToGetOrganizationPolicyBooleanPolicyOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyBooleanPolicyArgs) ToGetOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyBooleanPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyBooleanPolicyOutput)
}

type GetOrganizationPolicyBooleanPolicyArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyBooleanPolicyArrayOutput() GetOrganizationPolicyBooleanPolicyArrayOutput
	ToGetOrganizationPolicyBooleanPolicyArrayOutputWithContext(context.Context) GetOrganizationPolicyBooleanPolicyArrayOutput
}

type GetOrganizationPolicyBooleanPolicyArray []GetOrganizationPolicyBooleanPolicyInput

func (GetOrganizationPolicyBooleanPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyBooleanPolicyArray) ToGetOrganizationPolicyBooleanPolicyArrayOutput() GetOrganizationPolicyBooleanPolicyArrayOutput {
	return i.ToGetOrganizationPolicyBooleanPolicyArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyBooleanPolicyArray) ToGetOrganizationPolicyBooleanPolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyBooleanPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyBooleanPolicyArrayOutput)
}

type GetOrganizationPolicyBooleanPolicyOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyBooleanPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyBooleanPolicyOutput) ToGetOrganizationPolicyBooleanPolicyOutput() GetOrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o GetOrganizationPolicyBooleanPolicyOutput) ToGetOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o GetOrganizationPolicyBooleanPolicyOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyBooleanPolicy) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type GetOrganizationPolicyBooleanPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyBooleanPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyBooleanPolicyArrayOutput) ToGetOrganizationPolicyBooleanPolicyArrayOutput() GetOrganizationPolicyBooleanPolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyBooleanPolicyArrayOutput) ToGetOrganizationPolicyBooleanPolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyBooleanPolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyBooleanPolicyArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyBooleanPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyBooleanPolicy {
		return vs[0].([]GetOrganizationPolicyBooleanPolicy)[vs[1].(int)]
	}).(GetOrganizationPolicyBooleanPolicyOutput)
}

type GetOrganizationPolicyListPolicy struct {
	Allows            []GetOrganizationPolicyListPolicyAllow `pulumi:"allows"`
	Denies            []GetOrganizationPolicyListPolicyDeny  `pulumi:"denies"`
	InheritFromParent bool                                   `pulumi:"inheritFromParent"`
	SuggestedValue    string                                 `pulumi:"suggestedValue"`
}

type GetOrganizationPolicyListPolicyInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyOutput() GetOrganizationPolicyListPolicyOutput
	ToGetOrganizationPolicyListPolicyOutputWithContext(context.Context) GetOrganizationPolicyListPolicyOutput
}

type GetOrganizationPolicyListPolicyArgs struct {
	Allows            GetOrganizationPolicyListPolicyAllowArrayInput `pulumi:"allows"`
	Denies            GetOrganizationPolicyListPolicyDenyArrayInput  `pulumi:"denies"`
	InheritFromParent pulumi.BoolInput                               `pulumi:"inheritFromParent"`
	SuggestedValue    pulumi.StringInput                             `pulumi:"suggestedValue"`
}

func (GetOrganizationPolicyListPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyArgs) ToGetOrganizationPolicyListPolicyOutput() GetOrganizationPolicyListPolicyOutput {
	return i.ToGetOrganizationPolicyListPolicyOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyArgs) ToGetOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyOutput)
}

type GetOrganizationPolicyListPolicyArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyArrayOutput() GetOrganizationPolicyListPolicyArrayOutput
	ToGetOrganizationPolicyListPolicyArrayOutputWithContext(context.Context) GetOrganizationPolicyListPolicyArrayOutput
}

type GetOrganizationPolicyListPolicyArray []GetOrganizationPolicyListPolicyInput

func (GetOrganizationPolicyListPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyArray) ToGetOrganizationPolicyListPolicyArrayOutput() GetOrganizationPolicyListPolicyArrayOutput {
	return i.ToGetOrganizationPolicyListPolicyArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyArray) ToGetOrganizationPolicyListPolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyArrayOutput)
}

type GetOrganizationPolicyListPolicyOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyOutput) ToGetOrganizationPolicyListPolicyOutput() GetOrganizationPolicyListPolicyOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyOutput) ToGetOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyOutput) Allows() GetOrganizationPolicyListPolicyAllowArrayOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicy) []GetOrganizationPolicyListPolicyAllow { return v.Allows }).(GetOrganizationPolicyListPolicyAllowArrayOutput)
}

func (o GetOrganizationPolicyListPolicyOutput) Denies() GetOrganizationPolicyListPolicyDenyArrayOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicy) []GetOrganizationPolicyListPolicyDeny { return v.Denies }).(GetOrganizationPolicyListPolicyDenyArrayOutput)
}

func (o GetOrganizationPolicyListPolicyOutput) InheritFromParent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicy) bool { return v.InheritFromParent }).(pulumi.BoolOutput)
}

func (o GetOrganizationPolicyListPolicyOutput) SuggestedValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicy) string { return v.SuggestedValue }).(pulumi.StringOutput)
}

type GetOrganizationPolicyListPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyArrayOutput) ToGetOrganizationPolicyListPolicyArrayOutput() GetOrganizationPolicyListPolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyArrayOutput) ToGetOrganizationPolicyListPolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyListPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyListPolicy {
		return vs[0].([]GetOrganizationPolicyListPolicy)[vs[1].(int)]
	}).(GetOrganizationPolicyListPolicyOutput)
}

type GetOrganizationPolicyListPolicyAllow struct {
	All    bool     `pulumi:"all"`
	Values []string `pulumi:"values"`
}

type GetOrganizationPolicyListPolicyAllowInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyAllowOutput() GetOrganizationPolicyListPolicyAllowOutput
	ToGetOrganizationPolicyListPolicyAllowOutputWithContext(context.Context) GetOrganizationPolicyListPolicyAllowOutput
}

type GetOrganizationPolicyListPolicyAllowArgs struct {
	All    pulumi.BoolInput        `pulumi:"all"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOrganizationPolicyListPolicyAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyAllowArgs) ToGetOrganizationPolicyListPolicyAllowOutput() GetOrganizationPolicyListPolicyAllowOutput {
	return i.ToGetOrganizationPolicyListPolicyAllowOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyAllowArgs) ToGetOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyAllowOutput)
}

type GetOrganizationPolicyListPolicyAllowArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyAllowArrayOutput() GetOrganizationPolicyListPolicyAllowArrayOutput
	ToGetOrganizationPolicyListPolicyAllowArrayOutputWithContext(context.Context) GetOrganizationPolicyListPolicyAllowArrayOutput
}

type GetOrganizationPolicyListPolicyAllowArray []GetOrganizationPolicyListPolicyAllowInput

func (GetOrganizationPolicyListPolicyAllowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyAllowArray) ToGetOrganizationPolicyListPolicyAllowArrayOutput() GetOrganizationPolicyListPolicyAllowArrayOutput {
	return i.ToGetOrganizationPolicyListPolicyAllowArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyAllowArray) ToGetOrganizationPolicyListPolicyAllowArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyAllowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyAllowArrayOutput)
}

type GetOrganizationPolicyListPolicyAllowOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyAllowOutput) ToGetOrganizationPolicyListPolicyAllowOutput() GetOrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyAllowOutput) ToGetOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyAllowOutput) All() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicyAllow) bool { return v.All }).(pulumi.BoolOutput)
}

func (o GetOrganizationPolicyListPolicyAllowOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicyAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOrganizationPolicyListPolicyAllowArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyAllowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyAllowArrayOutput) ToGetOrganizationPolicyListPolicyAllowArrayOutput() GetOrganizationPolicyListPolicyAllowArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyAllowArrayOutput) ToGetOrganizationPolicyListPolicyAllowArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyAllowArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyAllowArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyListPolicyAllowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyListPolicyAllow {
		return vs[0].([]GetOrganizationPolicyListPolicyAllow)[vs[1].(int)]
	}).(GetOrganizationPolicyListPolicyAllowOutput)
}

type GetOrganizationPolicyListPolicyDeny struct {
	All    bool     `pulumi:"all"`
	Values []string `pulumi:"values"`
}

type GetOrganizationPolicyListPolicyDenyInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyDenyOutput() GetOrganizationPolicyListPolicyDenyOutput
	ToGetOrganizationPolicyListPolicyDenyOutputWithContext(context.Context) GetOrganizationPolicyListPolicyDenyOutput
}

type GetOrganizationPolicyListPolicyDenyArgs struct {
	All    pulumi.BoolInput        `pulumi:"all"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOrganizationPolicyListPolicyDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyDenyArgs) ToGetOrganizationPolicyListPolicyDenyOutput() GetOrganizationPolicyListPolicyDenyOutput {
	return i.ToGetOrganizationPolicyListPolicyDenyOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyDenyArgs) ToGetOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyDenyOutput)
}

type GetOrganizationPolicyListPolicyDenyArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyListPolicyDenyArrayOutput() GetOrganizationPolicyListPolicyDenyArrayOutput
	ToGetOrganizationPolicyListPolicyDenyArrayOutputWithContext(context.Context) GetOrganizationPolicyListPolicyDenyArrayOutput
}

type GetOrganizationPolicyListPolicyDenyArray []GetOrganizationPolicyListPolicyDenyInput

func (GetOrganizationPolicyListPolicyDenyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i GetOrganizationPolicyListPolicyDenyArray) ToGetOrganizationPolicyListPolicyDenyArrayOutput() GetOrganizationPolicyListPolicyDenyArrayOutput {
	return i.ToGetOrganizationPolicyListPolicyDenyArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyListPolicyDenyArray) ToGetOrganizationPolicyListPolicyDenyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyDenyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyListPolicyDenyArrayOutput)
}

type GetOrganizationPolicyListPolicyDenyOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyDenyOutput) ToGetOrganizationPolicyListPolicyDenyOutput() GetOrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyDenyOutput) ToGetOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyDenyOutput) All() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicyDeny) bool { return v.All }).(pulumi.BoolOutput)
}

func (o GetOrganizationPolicyListPolicyDenyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrganizationPolicyListPolicyDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOrganizationPolicyListPolicyDenyArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyListPolicyDenyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o GetOrganizationPolicyListPolicyDenyArrayOutput) ToGetOrganizationPolicyListPolicyDenyArrayOutput() GetOrganizationPolicyListPolicyDenyArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyDenyArrayOutput) ToGetOrganizationPolicyListPolicyDenyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyListPolicyDenyArrayOutput {
	return o
}

func (o GetOrganizationPolicyListPolicyDenyArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyListPolicyDenyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyListPolicyDeny {
		return vs[0].([]GetOrganizationPolicyListPolicyDeny)[vs[1].(int)]
	}).(GetOrganizationPolicyListPolicyDenyOutput)
}

type GetOrganizationPolicyRestorePolicy struct {
	Default bool `pulumi:"default"`
}

type GetOrganizationPolicyRestorePolicyInput interface {
	pulumi.Input

	ToGetOrganizationPolicyRestorePolicyOutput() GetOrganizationPolicyRestorePolicyOutput
	ToGetOrganizationPolicyRestorePolicyOutputWithContext(context.Context) GetOrganizationPolicyRestorePolicyOutput
}

type GetOrganizationPolicyRestorePolicyArgs struct {
	Default pulumi.BoolInput `pulumi:"default"`
}

func (GetOrganizationPolicyRestorePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyRestorePolicyArgs) ToGetOrganizationPolicyRestorePolicyOutput() GetOrganizationPolicyRestorePolicyOutput {
	return i.ToGetOrganizationPolicyRestorePolicyOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyRestorePolicyArgs) ToGetOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyRestorePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyRestorePolicyOutput)
}

type GetOrganizationPolicyRestorePolicyArrayInput interface {
	pulumi.Input

	ToGetOrganizationPolicyRestorePolicyArrayOutput() GetOrganizationPolicyRestorePolicyArrayOutput
	ToGetOrganizationPolicyRestorePolicyArrayOutputWithContext(context.Context) GetOrganizationPolicyRestorePolicyArrayOutput
}

type GetOrganizationPolicyRestorePolicyArray []GetOrganizationPolicyRestorePolicyInput

func (GetOrganizationPolicyRestorePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i GetOrganizationPolicyRestorePolicyArray) ToGetOrganizationPolicyRestorePolicyArrayOutput() GetOrganizationPolicyRestorePolicyArrayOutput {
	return i.ToGetOrganizationPolicyRestorePolicyArrayOutputWithContext(context.Background())
}

func (i GetOrganizationPolicyRestorePolicyArray) ToGetOrganizationPolicyRestorePolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyRestorePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationPolicyRestorePolicyArrayOutput)
}

type GetOrganizationPolicyRestorePolicyOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyRestorePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyRestorePolicyOutput) ToGetOrganizationPolicyRestorePolicyOutput() GetOrganizationPolicyRestorePolicyOutput {
	return o
}

func (o GetOrganizationPolicyRestorePolicyOutput) ToGetOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) GetOrganizationPolicyRestorePolicyOutput {
	return o
}

func (o GetOrganizationPolicyRestorePolicyOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationPolicyRestorePolicy) bool { return v.Default }).(pulumi.BoolOutput)
}

type GetOrganizationPolicyRestorePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationPolicyRestorePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o GetOrganizationPolicyRestorePolicyArrayOutput) ToGetOrganizationPolicyRestorePolicyArrayOutput() GetOrganizationPolicyRestorePolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyRestorePolicyArrayOutput) ToGetOrganizationPolicyRestorePolicyArrayOutputWithContext(ctx context.Context) GetOrganizationPolicyRestorePolicyArrayOutput {
	return o
}

func (o GetOrganizationPolicyRestorePolicyArrayOutput) Index(i pulumi.IntInput) GetOrganizationPolicyRestorePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationPolicyRestorePolicy {
		return vs[0].([]GetOrganizationPolicyRestorePolicy)[vs[1].(int)]
	}).(GetOrganizationPolicyRestorePolicyOutput)
}

type GetProjectProject struct {
	// The project id of the project.
	ProjectId string `pulumi:"projectId"`
}

type GetProjectProjectInput interface {
	pulumi.Input

	ToGetProjectProjectOutput() GetProjectProjectOutput
	ToGetProjectProjectOutputWithContext(context.Context) GetProjectProjectOutput
}

type GetProjectProjectArgs struct {
	// The project id of the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetProjectProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProject)(nil)).Elem()
}

func (i GetProjectProjectArgs) ToGetProjectProjectOutput() GetProjectProjectOutput {
	return i.ToGetProjectProjectOutputWithContext(context.Background())
}

func (i GetProjectProjectArgs) ToGetProjectProjectOutputWithContext(ctx context.Context) GetProjectProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProjectOutput)
}

type GetProjectProjectArrayInput interface {
	pulumi.Input

	ToGetProjectProjectArrayOutput() GetProjectProjectArrayOutput
	ToGetProjectProjectArrayOutputWithContext(context.Context) GetProjectProjectArrayOutput
}

type GetProjectProjectArray []GetProjectProjectInput

func (GetProjectProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProject)(nil)).Elem()
}

func (i GetProjectProjectArray) ToGetProjectProjectArrayOutput() GetProjectProjectArrayOutput {
	return i.ToGetProjectProjectArrayOutputWithContext(context.Background())
}

func (i GetProjectProjectArray) ToGetProjectProjectArrayOutputWithContext(ctx context.Context) GetProjectProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProjectArrayOutput)
}

type GetProjectProjectOutput struct{ *pulumi.OutputState }

func (GetProjectProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProject)(nil)).Elem()
}

func (o GetProjectProjectOutput) ToGetProjectProjectOutput() GetProjectProjectOutput {
	return o
}

func (o GetProjectProjectOutput) ToGetProjectProjectOutputWithContext(ctx context.Context) GetProjectProjectOutput {
	return o
}

// The project id of the project.
func (o GetProjectProjectOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.ProjectId }).(pulumi.StringOutput)
}

type GetProjectProjectArrayOutput struct{ *pulumi.OutputState }

func (GetProjectProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProject)(nil)).Elem()
}

func (o GetProjectProjectArrayOutput) ToGetProjectProjectArrayOutput() GetProjectProjectArrayOutput {
	return o
}

func (o GetProjectProjectArrayOutput) ToGetProjectProjectArrayOutputWithContext(ctx context.Context) GetProjectProjectArrayOutput {
	return o
}

func (o GetProjectProjectArrayOutput) Index(i pulumi.IntInput) GetProjectProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectProject {
		return vs[0].([]GetProjectProject)[vs[1].(int)]
	}).(GetProjectProjectOutput)
}

func init() {
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigOutput{})
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigArgsOutput{})
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigArgsArrayOutput{})
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigStateOutput{})
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigStateArrayOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionStateOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionStateOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyBooleanPolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyBooleanPolicyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyBooleanPolicyArgsOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyBooleanPolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyBooleanPolicyStateOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyAllowOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyAllowPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyAllowArgsOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyAllowArgsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyArgsOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyDenyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyDenyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyDenyArgsOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyDenyArgsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyStateOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyStateAllowOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyStateAllowPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyStateDenyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyStateDenyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyRestorePolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyRestorePolicyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyRestorePolicyArgsOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyRestorePolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyRestorePolicyStateOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyBooleanPolicyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyBooleanPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyAllowOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyAllowArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyDenyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyDenyArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyRestorePolicyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyRestorePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectProjectOutput{})
	pulumi.RegisterOutputType(GetProjectProjectArrayOutput{})
}
