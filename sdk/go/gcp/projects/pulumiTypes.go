// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package projects

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccessApprovalSettingsEnrolledService struct {
	CloudProduct    string  `pulumi:"cloudProduct"`
	EnrollmentLevel *string `pulumi:"enrollmentLevel"`
}

// AccessApprovalSettingsEnrolledServiceInput is an input type that accepts AccessApprovalSettingsEnrolledServiceArgs and AccessApprovalSettingsEnrolledServiceOutput values.
// You can construct a concrete instance of `AccessApprovalSettingsEnrolledServiceInput` via:
//
//          AccessApprovalSettingsEnrolledServiceArgs{...}
type AccessApprovalSettingsEnrolledServiceInput interface {
	pulumi.Input

	ToAccessApprovalSettingsEnrolledServiceOutput() AccessApprovalSettingsEnrolledServiceOutput
	ToAccessApprovalSettingsEnrolledServiceOutputWithContext(context.Context) AccessApprovalSettingsEnrolledServiceOutput
}

type AccessApprovalSettingsEnrolledServiceArgs struct {
	CloudProduct    pulumi.StringInput    `pulumi:"cloudProduct"`
	EnrollmentLevel pulumi.StringPtrInput `pulumi:"enrollmentLevel"`
}

func (AccessApprovalSettingsEnrolledServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (i AccessApprovalSettingsEnrolledServiceArgs) ToAccessApprovalSettingsEnrolledServiceOutput() AccessApprovalSettingsEnrolledServiceOutput {
	return i.ToAccessApprovalSettingsEnrolledServiceOutputWithContext(context.Background())
}

func (i AccessApprovalSettingsEnrolledServiceArgs) ToAccessApprovalSettingsEnrolledServiceOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApprovalSettingsEnrolledServiceOutput)
}

// AccessApprovalSettingsEnrolledServiceArrayInput is an input type that accepts AccessApprovalSettingsEnrolledServiceArray and AccessApprovalSettingsEnrolledServiceArrayOutput values.
// You can construct a concrete instance of `AccessApprovalSettingsEnrolledServiceArrayInput` via:
//
//          AccessApprovalSettingsEnrolledServiceArray{ AccessApprovalSettingsEnrolledServiceArgs{...} }
type AccessApprovalSettingsEnrolledServiceArrayInput interface {
	pulumi.Input

	ToAccessApprovalSettingsEnrolledServiceArrayOutput() AccessApprovalSettingsEnrolledServiceArrayOutput
	ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(context.Context) AccessApprovalSettingsEnrolledServiceArrayOutput
}

type AccessApprovalSettingsEnrolledServiceArray []AccessApprovalSettingsEnrolledServiceInput

func (AccessApprovalSettingsEnrolledServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (i AccessApprovalSettingsEnrolledServiceArray) ToAccessApprovalSettingsEnrolledServiceArrayOutput() AccessApprovalSettingsEnrolledServiceArrayOutput {
	return i.ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(context.Background())
}

func (i AccessApprovalSettingsEnrolledServiceArray) ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApprovalSettingsEnrolledServiceArrayOutput)
}

type AccessApprovalSettingsEnrolledServiceOutput struct{ *pulumi.OutputState }

func (AccessApprovalSettingsEnrolledServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (o AccessApprovalSettingsEnrolledServiceOutput) ToAccessApprovalSettingsEnrolledServiceOutput() AccessApprovalSettingsEnrolledServiceOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceOutput) ToAccessApprovalSettingsEnrolledServiceOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceOutput) CloudProduct() pulumi.StringOutput {
	return o.ApplyT(func(v AccessApprovalSettingsEnrolledService) string { return v.CloudProduct }).(pulumi.StringOutput)
}

func (o AccessApprovalSettingsEnrolledServiceOutput) EnrollmentLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessApprovalSettingsEnrolledService) *string { return v.EnrollmentLevel }).(pulumi.StringPtrOutput)
}

type AccessApprovalSettingsEnrolledServiceArrayOutput struct{ *pulumi.OutputState }

func (AccessApprovalSettingsEnrolledServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApprovalSettingsEnrolledService)(nil)).Elem()
}

func (o AccessApprovalSettingsEnrolledServiceArrayOutput) ToAccessApprovalSettingsEnrolledServiceArrayOutput() AccessApprovalSettingsEnrolledServiceArrayOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceArrayOutput) ToAccessApprovalSettingsEnrolledServiceArrayOutputWithContext(ctx context.Context) AccessApprovalSettingsEnrolledServiceArrayOutput {
	return o
}

func (o AccessApprovalSettingsEnrolledServiceArrayOutput) Index(i pulumi.IntInput) AccessApprovalSettingsEnrolledServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessApprovalSettingsEnrolledService {
		return vs[0].([]AccessApprovalSettingsEnrolledService)[vs[1].(int)]
	}).(AccessApprovalSettingsEnrolledServiceOutput)
}

type IAMAuditConfigAuditLogConfig struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType string `pulumi:"logType"`
}

// IAMAuditConfigAuditLogConfigInput is an input type that accepts IAMAuditConfigAuditLogConfigArgs and IAMAuditConfigAuditLogConfigOutput values.
// You can construct a concrete instance of `IAMAuditConfigAuditLogConfigInput` via:
//
//          IAMAuditConfigAuditLogConfigArgs{...}
type IAMAuditConfigAuditLogConfigInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigOutput() IAMAuditConfigAuditLogConfigOutput
	ToIAMAuditConfigAuditLogConfigOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigOutput
}

type IAMAuditConfigAuditLogConfigArgs struct {
	// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (IAMAuditConfigAuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigArgs) ToIAMAuditConfigAuditLogConfigOutput() IAMAuditConfigAuditLogConfigOutput {
	return i.ToIAMAuditConfigAuditLogConfigOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigArgs) ToIAMAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigOutput)
}

// IAMAuditConfigAuditLogConfigArrayInput is an input type that accepts IAMAuditConfigAuditLogConfigArray and IAMAuditConfigAuditLogConfigArrayOutput values.
// You can construct a concrete instance of `IAMAuditConfigAuditLogConfigArrayInput` via:
//
//          IAMAuditConfigAuditLogConfigArray{ IAMAuditConfigAuditLogConfigArgs{...} }
type IAMAuditConfigAuditLogConfigArrayInput interface {
	pulumi.Input

	ToIAMAuditConfigAuditLogConfigArrayOutput() IAMAuditConfigAuditLogConfigArrayOutput
	ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(context.Context) IAMAuditConfigAuditLogConfigArrayOutput
}

type IAMAuditConfigAuditLogConfigArray []IAMAuditConfigAuditLogConfigInput

func (IAMAuditConfigAuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IAMAuditConfigAuditLogConfigArray) ToIAMAuditConfigAuditLogConfigArrayOutput() IAMAuditConfigAuditLogConfigArrayOutput {
	return i.ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i IAMAuditConfigAuditLogConfigArray) ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMAuditConfigAuditLogConfigArrayOutput)
}

type IAMAuditConfigAuditLogConfigOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigOutput) ToIAMAuditConfigAuditLogConfigOutput() IAMAuditConfigAuditLogConfigOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigOutput) ToIAMAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigOutput {
	return o
}

// Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
func (o IAMAuditConfigAuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
func (o IAMAuditConfigAuditLogConfigOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v IAMAuditConfigAuditLogConfig) string { return v.LogType }).(pulumi.StringOutput)
}

type IAMAuditConfigAuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (IAMAuditConfigAuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IAMAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IAMAuditConfigAuditLogConfigArrayOutput) ToIAMAuditConfigAuditLogConfigArrayOutput() IAMAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigArrayOutput) ToIAMAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IAMAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IAMAuditConfigAuditLogConfigArrayOutput) Index(i pulumi.IntInput) IAMAuditConfigAuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IAMAuditConfigAuditLogConfig {
		return vs[0].([]IAMAuditConfigAuditLogConfig)[vs[1].(int)]
	}).(IAMAuditConfigAuditLogConfigOutput)
}

type IAMBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// IAMBindingConditionInput is an input type that accepts IAMBindingConditionArgs and IAMBindingConditionOutput values.
// You can construct a concrete instance of `IAMBindingConditionInput` via:
//
//          IAMBindingConditionArgs{...}
type IAMBindingConditionInput interface {
	pulumi.Input

	ToIAMBindingConditionOutput() IAMBindingConditionOutput
	ToIAMBindingConditionOutputWithContext(context.Context) IAMBindingConditionOutput
}

type IAMBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingCondition)(nil)).Elem()
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionOutput() IAMBindingConditionOutput {
	return i.ToIAMBindingConditionOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionOutputWithContext(ctx context.Context) IAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionOutput)
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return i.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionOutput).ToIAMBindingConditionPtrOutputWithContext(ctx)
}

// IAMBindingConditionPtrInput is an input type that accepts IAMBindingConditionArgs, IAMBindingConditionPtr and IAMBindingConditionPtrOutput values.
// You can construct a concrete instance of `IAMBindingConditionPtrInput` via:
//
//          IAMBindingConditionArgs{...}
//
//  or:
//
//          nil
type IAMBindingConditionPtrInput interface {
	pulumi.Input

	ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput
	ToIAMBindingConditionPtrOutputWithContext(context.Context) IAMBindingConditionPtrOutput
}

type iambindingConditionPtrType IAMBindingConditionArgs

func IAMBindingConditionPtr(v *IAMBindingConditionArgs) IAMBindingConditionPtrInput {
	return (*iambindingConditionPtrType)(v)
}

func (*iambindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingCondition)(nil)).Elem()
}

func (i *iambindingConditionPtrType) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return i.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *iambindingConditionPtrType) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionPtrOutput)
}

type IAMBindingConditionOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingCondition)(nil)).Elem()
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionOutput() IAMBindingConditionOutput {
	return o
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionOutputWithContext(ctx context.Context) IAMBindingConditionOutput {
	return o
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return o.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return o.ApplyT(func(v IAMBindingCondition) *IAMBindingCondition {
		return &v
	}).(IAMBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingCondition)(nil)).Elem()
}

func (o IAMBindingConditionPtrOutput) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return o
}

func (o IAMBindingConditionPtrOutput) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return o
}

func (o IAMBindingConditionPtrOutput) Elem() IAMBindingConditionOutput {
	return o.ApplyT(func(v *IAMBindingCondition) IAMBindingCondition { return *v }).(IAMBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type IAMMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

// IAMMemberConditionInput is an input type that accepts IAMMemberConditionArgs and IAMMemberConditionOutput values.
// You can construct a concrete instance of `IAMMemberConditionInput` via:
//
//          IAMMemberConditionArgs{...}
type IAMMemberConditionInput interface {
	pulumi.Input

	ToIAMMemberConditionOutput() IAMMemberConditionOutput
	ToIAMMemberConditionOutputWithContext(context.Context) IAMMemberConditionOutput
}

type IAMMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (IAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberCondition)(nil)).Elem()
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionOutput() IAMMemberConditionOutput {
	return i.ToIAMMemberConditionOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionOutputWithContext(ctx context.Context) IAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionOutput)
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return i.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionOutput).ToIAMMemberConditionPtrOutputWithContext(ctx)
}

// IAMMemberConditionPtrInput is an input type that accepts IAMMemberConditionArgs, IAMMemberConditionPtr and IAMMemberConditionPtrOutput values.
// You can construct a concrete instance of `IAMMemberConditionPtrInput` via:
//
//          IAMMemberConditionArgs{...}
//
//  or:
//
//          nil
type IAMMemberConditionPtrInput interface {
	pulumi.Input

	ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput
	ToIAMMemberConditionPtrOutputWithContext(context.Context) IAMMemberConditionPtrOutput
}

type iammemberConditionPtrType IAMMemberConditionArgs

func IAMMemberConditionPtr(v *IAMMemberConditionArgs) IAMMemberConditionPtrInput {
	return (*iammemberConditionPtrType)(v)
}

func (*iammemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberCondition)(nil)).Elem()
}

func (i *iammemberConditionPtrType) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return i.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *iammemberConditionPtrType) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionPtrOutput)
}

type IAMMemberConditionOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberCondition)(nil)).Elem()
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionOutput() IAMMemberConditionOutput {
	return o
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionOutputWithContext(ctx context.Context) IAMMemberConditionOutput {
	return o
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return o.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return o.ApplyT(func(v IAMMemberCondition) *IAMMemberCondition {
		return &v
	}).(IAMMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberCondition)(nil)).Elem()
}

func (o IAMMemberConditionPtrOutput) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return o
}

func (o IAMMemberConditionPtrOutput) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return o
}

func (o IAMMemberConditionPtrOutput) Elem() IAMMemberConditionOutput {
	return o.ApplyT(func(v *IAMMemberCondition) IAMMemberCondition { return *v }).(IAMMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o IAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o IAMMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o IAMMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IAMMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type OrganizationPolicyBooleanPolicy struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced bool `pulumi:"enforced"`
}

// OrganizationPolicyBooleanPolicyInput is an input type that accepts OrganizationPolicyBooleanPolicyArgs and OrganizationPolicyBooleanPolicyOutput values.
// You can construct a concrete instance of `OrganizationPolicyBooleanPolicyInput` via:
//
//          OrganizationPolicyBooleanPolicyArgs{...}
type OrganizationPolicyBooleanPolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyBooleanPolicyOutput() OrganizationPolicyBooleanPolicyOutput
	ToOrganizationPolicyBooleanPolicyOutputWithContext(context.Context) OrganizationPolicyBooleanPolicyOutput
}

type OrganizationPolicyBooleanPolicyArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (OrganizationPolicyBooleanPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyOutput() OrganizationPolicyBooleanPolicyOutput {
	return i.ToOrganizationPolicyBooleanPolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyOutput)
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return i.ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyBooleanPolicyArgs) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyOutput).ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx)
}

// OrganizationPolicyBooleanPolicyPtrInput is an input type that accepts OrganizationPolicyBooleanPolicyArgs, OrganizationPolicyBooleanPolicyPtr and OrganizationPolicyBooleanPolicyPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyBooleanPolicyPtrInput` via:
//
//          OrganizationPolicyBooleanPolicyArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyBooleanPolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput
	ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Context) OrganizationPolicyBooleanPolicyPtrOutput
}

type organizationPolicyBooleanPolicyPtrType OrganizationPolicyBooleanPolicyArgs

func OrganizationPolicyBooleanPolicyPtr(v *OrganizationPolicyBooleanPolicyArgs) OrganizationPolicyBooleanPolicyPtrInput {
	return (*organizationPolicyBooleanPolicyPtrType)(v)
}

func (*organizationPolicyBooleanPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (i *organizationPolicyBooleanPolicyPtrType) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return i.ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyBooleanPolicyPtrType) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyBooleanPolicyPtrOutput)
}

type OrganizationPolicyBooleanPolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyBooleanPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyOutput() OrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return o.ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyBooleanPolicyOutput) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicy) *OrganizationPolicyBooleanPolicy {
		return &v
	}).(OrganizationPolicyBooleanPolicyPtrOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o OrganizationPolicyBooleanPolicyOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyBooleanPolicy) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type OrganizationPolicyBooleanPolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyBooleanPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyBooleanPolicy)(nil)).Elem()
}

func (o OrganizationPolicyBooleanPolicyPtrOutput) ToOrganizationPolicyBooleanPolicyPtrOutput() OrganizationPolicyBooleanPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyPtrOutput) ToOrganizationPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyBooleanPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyBooleanPolicyPtrOutput) Elem() OrganizationPolicyBooleanPolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicyBooleanPolicy) OrganizationPolicyBooleanPolicy { return *v }).(OrganizationPolicyBooleanPolicyOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o OrganizationPolicyBooleanPolicyPtrOutput) Enforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyBooleanPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enforced
	}).(pulumi.BoolPtrOutput)
}

type OrganizationPolicyListPolicy struct {
	// or `deny` - (Optional) One or the other must be set.
	Allow *OrganizationPolicyListPolicyAllow `pulumi:"allow"`
	Deny  *OrganizationPolicyListPolicyDeny  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent *bool `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue *string `pulumi:"suggestedValue"`
}

// OrganizationPolicyListPolicyInput is an input type that accepts OrganizationPolicyListPolicyArgs and OrganizationPolicyListPolicyOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyInput` via:
//
//          OrganizationPolicyListPolicyArgs{...}
type OrganizationPolicyListPolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyOutput() OrganizationPolicyListPolicyOutput
	ToOrganizationPolicyListPolicyOutputWithContext(context.Context) OrganizationPolicyListPolicyOutput
}

type OrganizationPolicyListPolicyArgs struct {
	// or `deny` - (Optional) One or the other must be set.
	Allow OrganizationPolicyListPolicyAllowPtrInput `pulumi:"allow"`
	Deny  OrganizationPolicyListPolicyDenyPtrInput  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent pulumi.BoolPtrInput `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue pulumi.StringPtrInput `pulumi:"suggestedValue"`
}

func (OrganizationPolicyListPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicy)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyOutput() OrganizationPolicyListPolicyOutput {
	return i.ToOrganizationPolicyListPolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyOutput)
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return i.ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyArgs) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyOutput).ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx)
}

// OrganizationPolicyListPolicyPtrInput is an input type that accepts OrganizationPolicyListPolicyArgs, OrganizationPolicyListPolicyPtr and OrganizationPolicyListPolicyPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyPtrInput` via:
//
//          OrganizationPolicyListPolicyArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyListPolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput
	ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyPtrOutput
}

type organizationPolicyListPolicyPtrType OrganizationPolicyListPolicyArgs

func OrganizationPolicyListPolicyPtr(v *OrganizationPolicyListPolicyArgs) OrganizationPolicyListPolicyPtrInput {
	return (*organizationPolicyListPolicyPtrType)(v)
}

func (*organizationPolicyListPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicy)(nil)).Elem()
}

func (i *organizationPolicyListPolicyPtrType) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return i.ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyPtrType) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyPtrOutput)
}

type OrganizationPolicyListPolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicy)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyOutput() OrganizationPolicyListPolicyOutput {
	return o
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyOutput {
	return o
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return o.ToOrganizationPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyOutput) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicy {
		return &v
	}).(OrganizationPolicyListPolicyPtrOutput)
}

// or `deny` - (Optional) One or the other must be set.
func (o OrganizationPolicyListPolicyOutput) Allow() OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyAllow { return v.Allow }).(OrganizationPolicyListPolicyAllowPtrOutput)
}

func (o OrganizationPolicyListPolicyOutput) Deny() OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyDeny { return v.Deny }).(OrganizationPolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o OrganizationPolicyListPolicyOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o OrganizationPolicyListPolicyOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicy) *string { return v.SuggestedValue }).(pulumi.StringPtrOutput)
}

type OrganizationPolicyListPolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicy)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyPtrOutput) ToOrganizationPolicyListPolicyPtrOutput() OrganizationPolicyListPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyPtrOutput) ToOrganizationPolicyListPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyPtrOutput) Elem() OrganizationPolicyListPolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) OrganizationPolicyListPolicy { return *v }).(OrganizationPolicyListPolicyOutput)
}

// or `deny` - (Optional) One or the other must be set.
func (o OrganizationPolicyListPolicyPtrOutput) Allow() OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyAllow {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(OrganizationPolicyListPolicyAllowPtrOutput)
}

func (o OrganizationPolicyListPolicyPtrOutput) Deny() OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) *OrganizationPolicyListPolicyDeny {
		if v == nil {
			return nil
		}
		return v.Deny
	}).(OrganizationPolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o OrganizationPolicyListPolicyPtrOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.InheritFromParent
	}).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o OrganizationPolicyListPolicyPtrOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicy) *string {
		if v == nil {
			return nil
		}
		return v.SuggestedValue
	}).(pulumi.StringPtrOutput)
}

type OrganizationPolicyListPolicyAllow struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

// OrganizationPolicyListPolicyAllowInput is an input type that accepts OrganizationPolicyListPolicyAllowArgs and OrganizationPolicyListPolicyAllowOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyAllowInput` via:
//
//          OrganizationPolicyListPolicyAllowArgs{...}
type OrganizationPolicyListPolicyAllowInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyAllowOutput() OrganizationPolicyListPolicyAllowOutput
	ToOrganizationPolicyListPolicyAllowOutputWithContext(context.Context) OrganizationPolicyListPolicyAllowOutput
}

type OrganizationPolicyListPolicyAllowArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowOutput() OrganizationPolicyListPolicyAllowOutput {
	return i.ToOrganizationPolicyListPolicyAllowOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowOutput)
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return i.ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyAllowArgs) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowOutput).ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx)
}

// OrganizationPolicyListPolicyAllowPtrInput is an input type that accepts OrganizationPolicyListPolicyAllowArgs, OrganizationPolicyListPolicyAllowPtr and OrganizationPolicyListPolicyAllowPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyAllowPtrInput` via:
//
//          OrganizationPolicyListPolicyAllowArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyListPolicyAllowPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput
	ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyAllowPtrOutput
}

type organizationPolicyListPolicyAllowPtrType OrganizationPolicyListPolicyAllowArgs

func OrganizationPolicyListPolicyAllowPtr(v *OrganizationPolicyListPolicyAllowArgs) OrganizationPolicyListPolicyAllowPtrInput {
	return (*organizationPolicyListPolicyAllowPtrType)(v)
}

func (*organizationPolicyListPolicyAllowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (i *organizationPolicyListPolicyAllowPtrType) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return i.ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyAllowPtrType) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyAllowPtrOutput)
}

type OrganizationPolicyListPolicyAllowOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowOutput() OrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyAllowOutput) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) *OrganizationPolicyListPolicyAllow {
		return &v
	}).(OrganizationPolicyListPolicyAllowPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyAllowOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyAllowOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyAllowPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyAllowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyAllow)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyAllowPtrOutput) ToOrganizationPolicyListPolicyAllowPtrOutput() OrganizationPolicyListPolicyAllowPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowPtrOutput) ToOrganizationPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyAllowPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyAllowPtrOutput) Elem() OrganizationPolicyListPolicyAllowOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyAllow) OrganizationPolicyListPolicyAllow { return *v }).(OrganizationPolicyListPolicyAllowOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyAllowPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyAllow) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyAllowPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyAllow) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyDeny struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

// OrganizationPolicyListPolicyDenyInput is an input type that accepts OrganizationPolicyListPolicyDenyArgs and OrganizationPolicyListPolicyDenyOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyDenyInput` via:
//
//          OrganizationPolicyListPolicyDenyArgs{...}
type OrganizationPolicyListPolicyDenyInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyDenyOutput() OrganizationPolicyListPolicyDenyOutput
	ToOrganizationPolicyListPolicyDenyOutputWithContext(context.Context) OrganizationPolicyListPolicyDenyOutput
}

type OrganizationPolicyListPolicyDenyArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (OrganizationPolicyListPolicyDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyOutput() OrganizationPolicyListPolicyDenyOutput {
	return i.ToOrganizationPolicyListPolicyDenyOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyOutput)
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return i.ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyListPolicyDenyArgs) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyOutput).ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx)
}

// OrganizationPolicyListPolicyDenyPtrInput is an input type that accepts OrganizationPolicyListPolicyDenyArgs, OrganizationPolicyListPolicyDenyPtr and OrganizationPolicyListPolicyDenyPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyListPolicyDenyPtrInput` via:
//
//          OrganizationPolicyListPolicyDenyArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyListPolicyDenyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput
	ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Context) OrganizationPolicyListPolicyDenyPtrOutput
}

type organizationPolicyListPolicyDenyPtrType OrganizationPolicyListPolicyDenyArgs

func OrganizationPolicyListPolicyDenyPtr(v *OrganizationPolicyListPolicyDenyArgs) OrganizationPolicyListPolicyDenyPtrInput {
	return (*organizationPolicyListPolicyDenyPtrType)(v)
}

func (*organizationPolicyListPolicyDenyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (i *organizationPolicyListPolicyDenyPtrType) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return i.ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyListPolicyDenyPtrType) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyListPolicyDenyPtrOutput)
}

type OrganizationPolicyListPolicyDenyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyOutput() OrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyListPolicyDenyOutput) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) *OrganizationPolicyListPolicyDeny {
		return &v
	}).(OrganizationPolicyListPolicyDenyPtrOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyDenyOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyDenyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationPolicyListPolicyDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type OrganizationPolicyListPolicyDenyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyListPolicyDenyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyListPolicyDeny)(nil)).Elem()
}

func (o OrganizationPolicyListPolicyDenyPtrOutput) ToOrganizationPolicyListPolicyDenyPtrOutput() OrganizationPolicyListPolicyDenyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyPtrOutput) ToOrganizationPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) OrganizationPolicyListPolicyDenyPtrOutput {
	return o
}

func (o OrganizationPolicyListPolicyDenyPtrOutput) Elem() OrganizationPolicyListPolicyDenyOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyDeny) OrganizationPolicyListPolicyDeny { return *v }).(OrganizationPolicyListPolicyDenyOutput)
}

// The policy allows or denies all values.
func (o OrganizationPolicyListPolicyDenyPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyDeny) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o OrganizationPolicyListPolicyDenyPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationPolicyListPolicyDeny) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type OrganizationPolicyRestorePolicy struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default bool `pulumi:"default"`
}

// OrganizationPolicyRestorePolicyInput is an input type that accepts OrganizationPolicyRestorePolicyArgs and OrganizationPolicyRestorePolicyOutput values.
// You can construct a concrete instance of `OrganizationPolicyRestorePolicyInput` via:
//
//          OrganizationPolicyRestorePolicyArgs{...}
type OrganizationPolicyRestorePolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyRestorePolicyOutput() OrganizationPolicyRestorePolicyOutput
	ToOrganizationPolicyRestorePolicyOutputWithContext(context.Context) OrganizationPolicyRestorePolicyOutput
}

type OrganizationPolicyRestorePolicyArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default pulumi.BoolInput `pulumi:"default"`
}

func (OrganizationPolicyRestorePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyOutput() OrganizationPolicyRestorePolicyOutput {
	return i.ToOrganizationPolicyRestorePolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyOutput)
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return i.ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyRestorePolicyArgs) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyOutput).ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx)
}

// OrganizationPolicyRestorePolicyPtrInput is an input type that accepts OrganizationPolicyRestorePolicyArgs, OrganizationPolicyRestorePolicyPtr and OrganizationPolicyRestorePolicyPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyRestorePolicyPtrInput` via:
//
//          OrganizationPolicyRestorePolicyArgs{...}
//
//  or:
//
//          nil
type OrganizationPolicyRestorePolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput
	ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Context) OrganizationPolicyRestorePolicyPtrOutput
}

type organizationPolicyRestorePolicyPtrType OrganizationPolicyRestorePolicyArgs

func OrganizationPolicyRestorePolicyPtr(v *OrganizationPolicyRestorePolicyArgs) OrganizationPolicyRestorePolicyPtrInput {
	return (*organizationPolicyRestorePolicyPtrType)(v)
}

func (*organizationPolicyRestorePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (i *organizationPolicyRestorePolicyPtrType) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return i.ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyRestorePolicyPtrType) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyRestorePolicyPtrOutput)
}

type OrganizationPolicyRestorePolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyRestorePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyOutput() OrganizationPolicyRestorePolicyOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return o.ToOrganizationPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyRestorePolicyOutput) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicy) *OrganizationPolicyRestorePolicy {
		return &v
	}).(OrganizationPolicyRestorePolicyPtrOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o OrganizationPolicyRestorePolicyOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationPolicyRestorePolicy) bool { return v.Default }).(pulumi.BoolOutput)
}

type OrganizationPolicyRestorePolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyRestorePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicyRestorePolicy)(nil)).Elem()
}

func (o OrganizationPolicyRestorePolicyPtrOutput) ToOrganizationPolicyRestorePolicyPtrOutput() OrganizationPolicyRestorePolicyPtrOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyPtrOutput) ToOrganizationPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyRestorePolicyPtrOutput {
	return o
}

func (o OrganizationPolicyRestorePolicyPtrOutput) Elem() OrganizationPolicyRestorePolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicyRestorePolicy) OrganizationPolicyRestorePolicy { return *v }).(OrganizationPolicyRestorePolicyOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o OrganizationPolicyRestorePolicyPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicyRestorePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Default
	}).(pulumi.BoolPtrOutput)
}

type GetOrganizationPolicyBooleanPolicy struct {
	Enforced bool `pulumi:"enforced"`
}

type GetOrganizationPolicyListPolicy struct {
	Allows            []GetOrganizationPolicyListPolicyAllow `pulumi:"allows"`
	Denies            []GetOrganizationPolicyListPolicyDeny  `pulumi:"denies"`
	InheritFromParent bool                                   `pulumi:"inheritFromParent"`
	SuggestedValue    string                                 `pulumi:"suggestedValue"`
}

type GetOrganizationPolicyListPolicyAllow struct {
	All    bool     `pulumi:"all"`
	Values []string `pulumi:"values"`
}

type GetOrganizationPolicyListPolicyDeny struct {
	All    bool     `pulumi:"all"`
	Values []string `pulumi:"values"`
}

type GetOrganizationPolicyRestorePolicy struct {
	Default bool `pulumi:"default"`
}

type GetProjectProject struct {
	CreateTime     string            `pulumi:"createTime"`
	Labels         map[string]string `pulumi:"labels"`
	LifecycleState string            `pulumi:"lifecycleState"`
	Name           string            `pulumi:"name"`
	Number         string            `pulumi:"number"`
	Parent         map[string]string `pulumi:"parent"`
	// The project id of the project.
	ProjectId string `pulumi:"projectId"`
}

func init() {
	pulumi.RegisterOutputType(AccessApprovalSettingsEnrolledServiceOutput{})
	pulumi.RegisterOutputType(AccessApprovalSettingsEnrolledServiceArrayOutput{})
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigOutput{})
	pulumi.RegisterOutputType(IAMAuditConfigAuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyBooleanPolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyBooleanPolicyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyAllowOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyAllowPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyDenyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyListPolicyDenyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyRestorePolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyRestorePolicyPtrOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyBooleanPolicyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyBooleanPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyAllowOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyAllowArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyDenyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyListPolicyDenyArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyRestorePolicyOutput{})
	pulumi.RegisterOutputType(GetOrganizationPolicyRestorePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetProjectProjectOutput{})
	pulumi.RegisterOutputType(GetProjectProjectArrayOutput{})
}
