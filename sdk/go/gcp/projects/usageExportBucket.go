// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package projects

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/project_usage_export_bucket.html.markdown.
type UsageExportBucket struct {
	s *pulumi.ResourceState
}

// NewUsageExportBucket registers a new resource with the given unique name, arguments, and options.
func NewUsageExportBucket(ctx *pulumi.Context,
	name string, args *UsageExportBucketArgs, opts ...pulumi.ResourceOpt) (*UsageExportBucket, error) {
	if args == nil || args.BucketName == nil {
		return nil, errors.New("missing required argument 'BucketName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bucketName"] = nil
		inputs["prefix"] = nil
		inputs["project"] = nil
	} else {
		inputs["bucketName"] = args.BucketName
		inputs["prefix"] = args.Prefix
		inputs["project"] = args.Project
	}
	s, err := ctx.RegisterResource("gcp:projects/usageExportBucket:UsageExportBucket", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &UsageExportBucket{s: s}, nil
}

// GetUsageExportBucket gets an existing UsageExportBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUsageExportBucket(ctx *pulumi.Context,
	name string, id pulumi.ID, state *UsageExportBucketState, opts ...pulumi.ResourceOpt) (*UsageExportBucket, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bucketName"] = state.BucketName
		inputs["prefix"] = state.Prefix
		inputs["project"] = state.Project
	}
	s, err := ctx.ReadResource("gcp:projects/usageExportBucket:UsageExportBucket", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &UsageExportBucket{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *UsageExportBucket) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *UsageExportBucket) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *UsageExportBucket) BucketName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["bucketName"])
}

func (r *UsageExportBucket) Prefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["prefix"])
}

func (r *UsageExportBucket) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

// Input properties used for looking up and filtering UsageExportBucket resources.
type UsageExportBucketState struct {
	BucketName interface{}
	Prefix interface{}
	Project interface{}
}

// The set of arguments for constructing a UsageExportBucket resource.
type UsageExportBucketArgs struct {
	BucketName interface{}
	Prefix interface{}
	Project interface{}
}
