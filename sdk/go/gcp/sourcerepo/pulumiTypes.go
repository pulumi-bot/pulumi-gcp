// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sourcerepo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RepositoryIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type RepositoryIamBindingConditionInput interface {
	pulumi.Input

	ToRepositoryIamBindingConditionOutput() RepositoryIamBindingConditionOutput
	ToRepositoryIamBindingConditionOutputWithContext(context.Context) RepositoryIamBindingConditionOutput
}

type RepositoryIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (RepositoryIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingCondition)(nil)).Elem()
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionOutput() RepositoryIamBindingConditionOutput {
	return i.ToRepositoryIamBindingConditionOutputWithContext(context.Background())
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionOutputWithContext(ctx context.Context) RepositoryIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionOutput)
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return i.ToRepositoryIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionOutput).ToRepositoryIamBindingConditionPtrOutputWithContext(ctx)
}

type RepositoryIamBindingConditionPtrInput interface {
	pulumi.Input

	ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput
	ToRepositoryIamBindingConditionPtrOutputWithContext(context.Context) RepositoryIamBindingConditionPtrOutput
}

type repositoryIamBindingConditionPtrType RepositoryIamBindingConditionArgs

func RepositoryIamBindingConditionPtr(v *RepositoryIamBindingConditionArgs) RepositoryIamBindingConditionPtrInput {
	return (*repositoryIamBindingConditionPtrType)(v)
}

func (*repositoryIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamBindingCondition)(nil)).Elem()
}

func (i *repositoryIamBindingConditionPtrType) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return i.ToRepositoryIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *repositoryIamBindingConditionPtrType) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionPtrOutput)
}

type RepositoryIamBindingConditionOutput struct{ *pulumi.OutputState }

func (RepositoryIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingCondition)(nil)).Elem()
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionOutput() RepositoryIamBindingConditionOutput {
	return o
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionOutputWithContext(ctx context.Context) RepositoryIamBindingConditionOutput {
	return o
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return o.ToRepositoryIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) *RepositoryIamBindingCondition {
		return &v
	}).(RepositoryIamBindingConditionPtrOutput)
}
func (o RepositoryIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (RepositoryIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamBindingCondition)(nil)).Elem()
}

func (o RepositoryIamBindingConditionPtrOutput) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return o
}

func (o RepositoryIamBindingConditionPtrOutput) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return o
}

func (o RepositoryIamBindingConditionPtrOutput) Elem() RepositoryIamBindingConditionOutput {
	return o.ApplyT(func(v *RepositoryIamBindingCondition) RepositoryIamBindingCondition { return *v }).(RepositoryIamBindingConditionOutput)
}

func (o RepositoryIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type RepositoryIamBindingConditionArgsInput interface {
	pulumi.Input

	ToRepositoryIamBindingConditionArgsOutput() RepositoryIamBindingConditionArgsOutput
	ToRepositoryIamBindingConditionArgsOutputWithContext(context.Context) RepositoryIamBindingConditionArgsOutput
}

type RepositoryIamBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (RepositoryIamBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingConditionArgs)(nil)).Elem()
}

func (i RepositoryIamBindingConditionArgsArgs) ToRepositoryIamBindingConditionArgsOutput() RepositoryIamBindingConditionArgsOutput {
	return i.ToRepositoryIamBindingConditionArgsOutputWithContext(context.Background())
}

func (i RepositoryIamBindingConditionArgsArgs) ToRepositoryIamBindingConditionArgsOutputWithContext(ctx context.Context) RepositoryIamBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionArgsOutput)
}

func (i RepositoryIamBindingConditionArgsArgs) ToRepositoryIamBindingConditionArgsPtrOutput() RepositoryIamBindingConditionArgsPtrOutput {
	return i.ToRepositoryIamBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i RepositoryIamBindingConditionArgsArgs) ToRepositoryIamBindingConditionArgsPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionArgsOutput).ToRepositoryIamBindingConditionArgsPtrOutputWithContext(ctx)
}

type RepositoryIamBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToRepositoryIamBindingConditionArgsPtrOutput() RepositoryIamBindingConditionArgsPtrOutput
	ToRepositoryIamBindingConditionArgsPtrOutputWithContext(context.Context) RepositoryIamBindingConditionArgsPtrOutput
}

type repositoryIamBindingConditionArgsPtrType RepositoryIamBindingConditionArgsArgs

func RepositoryIamBindingConditionArgsPtr(v *RepositoryIamBindingConditionArgsArgs) RepositoryIamBindingConditionArgsPtrInput {
	return (*repositoryIamBindingConditionArgsPtrType)(v)
}

func (*repositoryIamBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamBindingConditionArgs)(nil)).Elem()
}

func (i *repositoryIamBindingConditionArgsPtrType) ToRepositoryIamBindingConditionArgsPtrOutput() RepositoryIamBindingConditionArgsPtrOutput {
	return i.ToRepositoryIamBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *repositoryIamBindingConditionArgsPtrType) ToRepositoryIamBindingConditionArgsPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionArgsPtrOutput)
}

type RepositoryIamBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (RepositoryIamBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingConditionArgs)(nil)).Elem()
}

func (o RepositoryIamBindingConditionArgsOutput) ToRepositoryIamBindingConditionArgsOutput() RepositoryIamBindingConditionArgsOutput {
	return o
}

func (o RepositoryIamBindingConditionArgsOutput) ToRepositoryIamBindingConditionArgsOutputWithContext(ctx context.Context) RepositoryIamBindingConditionArgsOutput {
	return o
}

func (o RepositoryIamBindingConditionArgsOutput) ToRepositoryIamBindingConditionArgsPtrOutput() RepositoryIamBindingConditionArgsPtrOutput {
	return o.ToRepositoryIamBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o RepositoryIamBindingConditionArgsOutput) ToRepositoryIamBindingConditionArgsPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionArgs) *RepositoryIamBindingConditionArgs {
		return &v
	}).(RepositoryIamBindingConditionArgsPtrOutput)
}
func (o RepositoryIamBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (RepositoryIamBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamBindingConditionArgs)(nil)).Elem()
}

func (o RepositoryIamBindingConditionArgsPtrOutput) ToRepositoryIamBindingConditionArgsPtrOutput() RepositoryIamBindingConditionArgsPtrOutput {
	return o
}

func (o RepositoryIamBindingConditionArgsPtrOutput) ToRepositoryIamBindingConditionArgsPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionArgsPtrOutput {
	return o
}

func (o RepositoryIamBindingConditionArgsPtrOutput) Elem() RepositoryIamBindingConditionArgsOutput {
	return o.ApplyT(func(v *RepositoryIamBindingConditionArgs) RepositoryIamBindingConditionArgs { return *v }).(RepositoryIamBindingConditionArgsOutput)
}

func (o RepositoryIamBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamBindingConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type RepositoryIamBindingConditionStateInput interface {
	pulumi.Input

	ToRepositoryIamBindingConditionStateOutput() RepositoryIamBindingConditionStateOutput
	ToRepositoryIamBindingConditionStateOutputWithContext(context.Context) RepositoryIamBindingConditionStateOutput
}

type RepositoryIamBindingConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (RepositoryIamBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingConditionState)(nil)).Elem()
}

func (i RepositoryIamBindingConditionStateArgs) ToRepositoryIamBindingConditionStateOutput() RepositoryIamBindingConditionStateOutput {
	return i.ToRepositoryIamBindingConditionStateOutputWithContext(context.Background())
}

func (i RepositoryIamBindingConditionStateArgs) ToRepositoryIamBindingConditionStateOutputWithContext(ctx context.Context) RepositoryIamBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionStateOutput)
}

type RepositoryIamBindingConditionStateOutput struct{ *pulumi.OutputState }

func (RepositoryIamBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingConditionState)(nil)).Elem()
}

func (o RepositoryIamBindingConditionStateOutput) ToRepositoryIamBindingConditionStateOutput() RepositoryIamBindingConditionStateOutput {
	return o
}

func (o RepositoryIamBindingConditionStateOutput) ToRepositoryIamBindingConditionStateOutputWithContext(ctx context.Context) RepositoryIamBindingConditionStateOutput {
	return o
}

func (o RepositoryIamBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type RepositoryIamMemberConditionInput interface {
	pulumi.Input

	ToRepositoryIamMemberConditionOutput() RepositoryIamMemberConditionOutput
	ToRepositoryIamMemberConditionOutputWithContext(context.Context) RepositoryIamMemberConditionOutput
}

type RepositoryIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (RepositoryIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamMemberCondition)(nil)).Elem()
}

func (i RepositoryIamMemberConditionArgs) ToRepositoryIamMemberConditionOutput() RepositoryIamMemberConditionOutput {
	return i.ToRepositoryIamMemberConditionOutputWithContext(context.Background())
}

func (i RepositoryIamMemberConditionArgs) ToRepositoryIamMemberConditionOutputWithContext(ctx context.Context) RepositoryIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionOutput)
}

func (i RepositoryIamMemberConditionArgs) ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput {
	return i.ToRepositoryIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i RepositoryIamMemberConditionArgs) ToRepositoryIamMemberConditionPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionOutput).ToRepositoryIamMemberConditionPtrOutputWithContext(ctx)
}

type RepositoryIamMemberConditionPtrInput interface {
	pulumi.Input

	ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput
	ToRepositoryIamMemberConditionPtrOutputWithContext(context.Context) RepositoryIamMemberConditionPtrOutput
}

type repositoryIamMemberConditionPtrType RepositoryIamMemberConditionArgs

func RepositoryIamMemberConditionPtr(v *RepositoryIamMemberConditionArgs) RepositoryIamMemberConditionPtrInput {
	return (*repositoryIamMemberConditionPtrType)(v)
}

func (*repositoryIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamMemberCondition)(nil)).Elem()
}

func (i *repositoryIamMemberConditionPtrType) ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput {
	return i.ToRepositoryIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *repositoryIamMemberConditionPtrType) ToRepositoryIamMemberConditionPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionPtrOutput)
}

type RepositoryIamMemberConditionOutput struct{ *pulumi.OutputState }

func (RepositoryIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamMemberCondition)(nil)).Elem()
}

func (o RepositoryIamMemberConditionOutput) ToRepositoryIamMemberConditionOutput() RepositoryIamMemberConditionOutput {
	return o
}

func (o RepositoryIamMemberConditionOutput) ToRepositoryIamMemberConditionOutputWithContext(ctx context.Context) RepositoryIamMemberConditionOutput {
	return o
}

func (o RepositoryIamMemberConditionOutput) ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput {
	return o.ToRepositoryIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o RepositoryIamMemberConditionOutput) ToRepositoryIamMemberConditionPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionPtrOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) *RepositoryIamMemberCondition {
		return &v
	}).(RepositoryIamMemberConditionPtrOutput)
}
func (o RepositoryIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (RepositoryIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamMemberCondition)(nil)).Elem()
}

func (o RepositoryIamMemberConditionPtrOutput) ToRepositoryIamMemberConditionPtrOutput() RepositoryIamMemberConditionPtrOutput {
	return o
}

func (o RepositoryIamMemberConditionPtrOutput) ToRepositoryIamMemberConditionPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionPtrOutput {
	return o
}

func (o RepositoryIamMemberConditionPtrOutput) Elem() RepositoryIamMemberConditionOutput {
	return o.ApplyT(func(v *RepositoryIamMemberCondition) RepositoryIamMemberCondition { return *v }).(RepositoryIamMemberConditionOutput)
}

func (o RepositoryIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamMemberConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type RepositoryIamMemberConditionArgsInput interface {
	pulumi.Input

	ToRepositoryIamMemberConditionArgsOutput() RepositoryIamMemberConditionArgsOutput
	ToRepositoryIamMemberConditionArgsOutputWithContext(context.Context) RepositoryIamMemberConditionArgsOutput
}

type RepositoryIamMemberConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (RepositoryIamMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamMemberConditionArgs)(nil)).Elem()
}

func (i RepositoryIamMemberConditionArgsArgs) ToRepositoryIamMemberConditionArgsOutput() RepositoryIamMemberConditionArgsOutput {
	return i.ToRepositoryIamMemberConditionArgsOutputWithContext(context.Background())
}

func (i RepositoryIamMemberConditionArgsArgs) ToRepositoryIamMemberConditionArgsOutputWithContext(ctx context.Context) RepositoryIamMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionArgsOutput)
}

func (i RepositoryIamMemberConditionArgsArgs) ToRepositoryIamMemberConditionArgsPtrOutput() RepositoryIamMemberConditionArgsPtrOutput {
	return i.ToRepositoryIamMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i RepositoryIamMemberConditionArgsArgs) ToRepositoryIamMemberConditionArgsPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionArgsOutput).ToRepositoryIamMemberConditionArgsPtrOutputWithContext(ctx)
}

type RepositoryIamMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToRepositoryIamMemberConditionArgsPtrOutput() RepositoryIamMemberConditionArgsPtrOutput
	ToRepositoryIamMemberConditionArgsPtrOutputWithContext(context.Context) RepositoryIamMemberConditionArgsPtrOutput
}

type repositoryIamMemberConditionArgsPtrType RepositoryIamMemberConditionArgsArgs

func RepositoryIamMemberConditionArgsPtr(v *RepositoryIamMemberConditionArgsArgs) RepositoryIamMemberConditionArgsPtrInput {
	return (*repositoryIamMemberConditionArgsPtrType)(v)
}

func (*repositoryIamMemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamMemberConditionArgs)(nil)).Elem()
}

func (i *repositoryIamMemberConditionArgsPtrType) ToRepositoryIamMemberConditionArgsPtrOutput() RepositoryIamMemberConditionArgsPtrOutput {
	return i.ToRepositoryIamMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *repositoryIamMemberConditionArgsPtrType) ToRepositoryIamMemberConditionArgsPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionArgsPtrOutput)
}

type RepositoryIamMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (RepositoryIamMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamMemberConditionArgs)(nil)).Elem()
}

func (o RepositoryIamMemberConditionArgsOutput) ToRepositoryIamMemberConditionArgsOutput() RepositoryIamMemberConditionArgsOutput {
	return o
}

func (o RepositoryIamMemberConditionArgsOutput) ToRepositoryIamMemberConditionArgsOutputWithContext(ctx context.Context) RepositoryIamMemberConditionArgsOutput {
	return o
}

func (o RepositoryIamMemberConditionArgsOutput) ToRepositoryIamMemberConditionArgsPtrOutput() RepositoryIamMemberConditionArgsPtrOutput {
	return o.ToRepositoryIamMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o RepositoryIamMemberConditionArgsOutput) ToRepositoryIamMemberConditionArgsPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionArgs) *RepositoryIamMemberConditionArgs {
		return &v
	}).(RepositoryIamMemberConditionArgsPtrOutput)
}
func (o RepositoryIamMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (RepositoryIamMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamMemberConditionArgs)(nil)).Elem()
}

func (o RepositoryIamMemberConditionArgsPtrOutput) ToRepositoryIamMemberConditionArgsPtrOutput() RepositoryIamMemberConditionArgsPtrOutput {
	return o
}

func (o RepositoryIamMemberConditionArgsPtrOutput) ToRepositoryIamMemberConditionArgsPtrOutputWithContext(ctx context.Context) RepositoryIamMemberConditionArgsPtrOutput {
	return o
}

func (o RepositoryIamMemberConditionArgsPtrOutput) Elem() RepositoryIamMemberConditionArgsOutput {
	return o.ApplyT(func(v *RepositoryIamMemberConditionArgs) RepositoryIamMemberConditionArgs { return *v }).(RepositoryIamMemberConditionArgsOutput)
}

func (o RepositoryIamMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamMemberConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type RepositoryIamMemberConditionStateInput interface {
	pulumi.Input

	ToRepositoryIamMemberConditionStateOutput() RepositoryIamMemberConditionStateOutput
	ToRepositoryIamMemberConditionStateOutputWithContext(context.Context) RepositoryIamMemberConditionStateOutput
}

type RepositoryIamMemberConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (RepositoryIamMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamMemberConditionState)(nil)).Elem()
}

func (i RepositoryIamMemberConditionStateArgs) ToRepositoryIamMemberConditionStateOutput() RepositoryIamMemberConditionStateOutput {
	return i.ToRepositoryIamMemberConditionStateOutputWithContext(context.Background())
}

func (i RepositoryIamMemberConditionStateArgs) ToRepositoryIamMemberConditionStateOutputWithContext(ctx context.Context) RepositoryIamMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamMemberConditionStateOutput)
}

type RepositoryIamMemberConditionStateOutput struct{ *pulumi.OutputState }

func (RepositoryIamMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamMemberConditionState)(nil)).Elem()
}

func (o RepositoryIamMemberConditionStateOutput) ToRepositoryIamMemberConditionStateOutput() RepositoryIamMemberConditionStateOutput {
	return o
}

func (o RepositoryIamMemberConditionStateOutput) ToRepositoryIamMemberConditionStateOutputWithContext(ctx context.Context) RepositoryIamMemberConditionStateOutput {
	return o
}

func (o RepositoryIamMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryIamMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryPubsubConfig struct {
	MessageFormat       string `pulumi:"messageFormat"`
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// The identifier for this object. Format specified above.
	Topic string `pulumi:"topic"`
}

type RepositoryPubsubConfigInput interface {
	pulumi.Input

	ToRepositoryPubsubConfigOutput() RepositoryPubsubConfigOutput
	ToRepositoryPubsubConfigOutputWithContext(context.Context) RepositoryPubsubConfigOutput
}

type RepositoryPubsubConfigArgs struct {
	MessageFormat       pulumi.StringInput `pulumi:"messageFormat"`
	ServiceAccountEmail pulumi.StringInput `pulumi:"serviceAccountEmail"`
	// The identifier for this object. Format specified above.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (RepositoryPubsubConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPubsubConfig)(nil)).Elem()
}

func (i RepositoryPubsubConfigArgs) ToRepositoryPubsubConfigOutput() RepositoryPubsubConfigOutput {
	return i.ToRepositoryPubsubConfigOutputWithContext(context.Background())
}

func (i RepositoryPubsubConfigArgs) ToRepositoryPubsubConfigOutputWithContext(ctx context.Context) RepositoryPubsubConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPubsubConfigOutput)
}

type RepositoryPubsubConfigArrayInput interface {
	pulumi.Input

	ToRepositoryPubsubConfigArrayOutput() RepositoryPubsubConfigArrayOutput
	ToRepositoryPubsubConfigArrayOutputWithContext(context.Context) RepositoryPubsubConfigArrayOutput
}

type RepositoryPubsubConfigArray []RepositoryPubsubConfigInput

func (RepositoryPubsubConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryPubsubConfig)(nil)).Elem()
}

func (i RepositoryPubsubConfigArray) ToRepositoryPubsubConfigArrayOutput() RepositoryPubsubConfigArrayOutput {
	return i.ToRepositoryPubsubConfigArrayOutputWithContext(context.Background())
}

func (i RepositoryPubsubConfigArray) ToRepositoryPubsubConfigArrayOutputWithContext(ctx context.Context) RepositoryPubsubConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPubsubConfigArrayOutput)
}

type RepositoryPubsubConfigOutput struct{ *pulumi.OutputState }

func (RepositoryPubsubConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPubsubConfig)(nil)).Elem()
}

func (o RepositoryPubsubConfigOutput) ToRepositoryPubsubConfigOutput() RepositoryPubsubConfigOutput {
	return o
}

func (o RepositoryPubsubConfigOutput) ToRepositoryPubsubConfigOutputWithContext(ctx context.Context) RepositoryPubsubConfigOutput {
	return o
}

func (o RepositoryPubsubConfigOutput) MessageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryPubsubConfig) string { return v.MessageFormat }).(pulumi.StringOutput)
}

func (o RepositoryPubsubConfigOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryPubsubConfig) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// The identifier for this object. Format specified above.
func (o RepositoryPubsubConfigOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryPubsubConfig) string { return v.Topic }).(pulumi.StringOutput)
}

type RepositoryPubsubConfigArrayOutput struct{ *pulumi.OutputState }

func (RepositoryPubsubConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryPubsubConfig)(nil)).Elem()
}

func (o RepositoryPubsubConfigArrayOutput) ToRepositoryPubsubConfigArrayOutput() RepositoryPubsubConfigArrayOutput {
	return o
}

func (o RepositoryPubsubConfigArrayOutput) ToRepositoryPubsubConfigArrayOutputWithContext(ctx context.Context) RepositoryPubsubConfigArrayOutput {
	return o
}

func (o RepositoryPubsubConfigArrayOutput) Index(i pulumi.IntInput) RepositoryPubsubConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryPubsubConfig {
		return vs[0].([]RepositoryPubsubConfig)[vs[1].(int)]
	}).(RepositoryPubsubConfigOutput)
}

type RepositoryPubsubConfigArgs struct {
	MessageFormat       string  `pulumi:"messageFormat"`
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
	// The identifier for this object. Format specified above.
	Topic string `pulumi:"topic"`
}

type RepositoryPubsubConfigArgsInput interface {
	pulumi.Input

	ToRepositoryPubsubConfigArgsOutput() RepositoryPubsubConfigArgsOutput
	ToRepositoryPubsubConfigArgsOutputWithContext(context.Context) RepositoryPubsubConfigArgsOutput
}

type RepositoryPubsubConfigArgsArgs struct {
	MessageFormat       pulumi.StringInput    `pulumi:"messageFormat"`
	ServiceAccountEmail pulumi.StringPtrInput `pulumi:"serviceAccountEmail"`
	// The identifier for this object. Format specified above.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (RepositoryPubsubConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPubsubConfigArgs)(nil)).Elem()
}

func (i RepositoryPubsubConfigArgsArgs) ToRepositoryPubsubConfigArgsOutput() RepositoryPubsubConfigArgsOutput {
	return i.ToRepositoryPubsubConfigArgsOutputWithContext(context.Background())
}

func (i RepositoryPubsubConfigArgsArgs) ToRepositoryPubsubConfigArgsOutputWithContext(ctx context.Context) RepositoryPubsubConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPubsubConfigArgsOutput)
}

type RepositoryPubsubConfigArgsArrayInput interface {
	pulumi.Input

	ToRepositoryPubsubConfigArgsArrayOutput() RepositoryPubsubConfigArgsArrayOutput
	ToRepositoryPubsubConfigArgsArrayOutputWithContext(context.Context) RepositoryPubsubConfigArgsArrayOutput
}

type RepositoryPubsubConfigArgsArray []RepositoryPubsubConfigArgsInput

func (RepositoryPubsubConfigArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryPubsubConfigArgs)(nil)).Elem()
}

func (i RepositoryPubsubConfigArgsArray) ToRepositoryPubsubConfigArgsArrayOutput() RepositoryPubsubConfigArgsArrayOutput {
	return i.ToRepositoryPubsubConfigArgsArrayOutputWithContext(context.Background())
}

func (i RepositoryPubsubConfigArgsArray) ToRepositoryPubsubConfigArgsArrayOutputWithContext(ctx context.Context) RepositoryPubsubConfigArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPubsubConfigArgsArrayOutput)
}

type RepositoryPubsubConfigArgsOutput struct{ *pulumi.OutputState }

func (RepositoryPubsubConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPubsubConfigArgs)(nil)).Elem()
}

func (o RepositoryPubsubConfigArgsOutput) ToRepositoryPubsubConfigArgsOutput() RepositoryPubsubConfigArgsOutput {
	return o
}

func (o RepositoryPubsubConfigArgsOutput) ToRepositoryPubsubConfigArgsOutputWithContext(ctx context.Context) RepositoryPubsubConfigArgsOutput {
	return o
}

func (o RepositoryPubsubConfigArgsOutput) MessageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryPubsubConfigArgs) string { return v.MessageFormat }).(pulumi.StringOutput)
}

func (o RepositoryPubsubConfigArgsOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPubsubConfigArgs) *string { return v.ServiceAccountEmail }).(pulumi.StringPtrOutput)
}

// The identifier for this object. Format specified above.
func (o RepositoryPubsubConfigArgsOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryPubsubConfigArgs) string { return v.Topic }).(pulumi.StringOutput)
}

type RepositoryPubsubConfigArgsArrayOutput struct{ *pulumi.OutputState }

func (RepositoryPubsubConfigArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryPubsubConfigArgs)(nil)).Elem()
}

func (o RepositoryPubsubConfigArgsArrayOutput) ToRepositoryPubsubConfigArgsArrayOutput() RepositoryPubsubConfigArgsArrayOutput {
	return o
}

func (o RepositoryPubsubConfigArgsArrayOutput) ToRepositoryPubsubConfigArgsArrayOutputWithContext(ctx context.Context) RepositoryPubsubConfigArgsArrayOutput {
	return o
}

func (o RepositoryPubsubConfigArgsArrayOutput) Index(i pulumi.IntInput) RepositoryPubsubConfigArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryPubsubConfigArgs {
		return vs[0].([]RepositoryPubsubConfigArgs)[vs[1].(int)]
	}).(RepositoryPubsubConfigArgsOutput)
}

type RepositoryPubsubConfigState struct {
	MessageFormat       string  `pulumi:"messageFormat"`
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
	// The identifier for this object. Format specified above.
	Topic string `pulumi:"topic"`
}

type RepositoryPubsubConfigStateInput interface {
	pulumi.Input

	ToRepositoryPubsubConfigStateOutput() RepositoryPubsubConfigStateOutput
	ToRepositoryPubsubConfigStateOutputWithContext(context.Context) RepositoryPubsubConfigStateOutput
}

type RepositoryPubsubConfigStateArgs struct {
	MessageFormat       pulumi.StringInput    `pulumi:"messageFormat"`
	ServiceAccountEmail pulumi.StringPtrInput `pulumi:"serviceAccountEmail"`
	// The identifier for this object. Format specified above.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (RepositoryPubsubConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPubsubConfigState)(nil)).Elem()
}

func (i RepositoryPubsubConfigStateArgs) ToRepositoryPubsubConfigStateOutput() RepositoryPubsubConfigStateOutput {
	return i.ToRepositoryPubsubConfigStateOutputWithContext(context.Background())
}

func (i RepositoryPubsubConfigStateArgs) ToRepositoryPubsubConfigStateOutputWithContext(ctx context.Context) RepositoryPubsubConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPubsubConfigStateOutput)
}

type RepositoryPubsubConfigStateArrayInput interface {
	pulumi.Input

	ToRepositoryPubsubConfigStateArrayOutput() RepositoryPubsubConfigStateArrayOutput
	ToRepositoryPubsubConfigStateArrayOutputWithContext(context.Context) RepositoryPubsubConfigStateArrayOutput
}

type RepositoryPubsubConfigStateArray []RepositoryPubsubConfigStateInput

func (RepositoryPubsubConfigStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryPubsubConfigState)(nil)).Elem()
}

func (i RepositoryPubsubConfigStateArray) ToRepositoryPubsubConfigStateArrayOutput() RepositoryPubsubConfigStateArrayOutput {
	return i.ToRepositoryPubsubConfigStateArrayOutputWithContext(context.Background())
}

func (i RepositoryPubsubConfigStateArray) ToRepositoryPubsubConfigStateArrayOutputWithContext(ctx context.Context) RepositoryPubsubConfigStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPubsubConfigStateArrayOutput)
}

type RepositoryPubsubConfigStateOutput struct{ *pulumi.OutputState }

func (RepositoryPubsubConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryPubsubConfigState)(nil)).Elem()
}

func (o RepositoryPubsubConfigStateOutput) ToRepositoryPubsubConfigStateOutput() RepositoryPubsubConfigStateOutput {
	return o
}

func (o RepositoryPubsubConfigStateOutput) ToRepositoryPubsubConfigStateOutputWithContext(ctx context.Context) RepositoryPubsubConfigStateOutput {
	return o
}

func (o RepositoryPubsubConfigStateOutput) MessageFormat() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryPubsubConfigState) string { return v.MessageFormat }).(pulumi.StringOutput)
}

func (o RepositoryPubsubConfigStateOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryPubsubConfigState) *string { return v.ServiceAccountEmail }).(pulumi.StringPtrOutput)
}

// The identifier for this object. Format specified above.
func (o RepositoryPubsubConfigStateOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryPubsubConfigState) string { return v.Topic }).(pulumi.StringOutput)
}

type RepositoryPubsubConfigStateArrayOutput struct{ *pulumi.OutputState }

func (RepositoryPubsubConfigStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryPubsubConfigState)(nil)).Elem()
}

func (o RepositoryPubsubConfigStateArrayOutput) ToRepositoryPubsubConfigStateArrayOutput() RepositoryPubsubConfigStateArrayOutput {
	return o
}

func (o RepositoryPubsubConfigStateArrayOutput) ToRepositoryPubsubConfigStateArrayOutputWithContext(ctx context.Context) RepositoryPubsubConfigStateArrayOutput {
	return o
}

func (o RepositoryPubsubConfigStateArrayOutput) Index(i pulumi.IntInput) RepositoryPubsubConfigStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryPubsubConfigState {
		return vs[0].([]RepositoryPubsubConfigState)[vs[1].(int)]
	}).(RepositoryPubsubConfigStateOutput)
}

func init() {
	pulumi.RegisterOutputType(RepositoryIamBindingConditionOutput{})
	pulumi.RegisterOutputType(RepositoryIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(RepositoryIamBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(RepositoryIamBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(RepositoryIamBindingConditionStateOutput{})
	pulumi.RegisterOutputType(RepositoryIamMemberConditionOutput{})
	pulumi.RegisterOutputType(RepositoryIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(RepositoryIamMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(RepositoryIamMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(RepositoryIamMemberConditionStateOutput{})
	pulumi.RegisterOutputType(RepositoryPubsubConfigOutput{})
	pulumi.RegisterOutputType(RepositoryPubsubConfigArrayOutput{})
	pulumi.RegisterOutputType(RepositoryPubsubConfigArgsOutput{})
	pulumi.RegisterOutputType(RepositoryPubsubConfigArgsArrayOutput{})
	pulumi.RegisterOutputType(RepositoryPubsubConfigStateOutput{})
	pulumi.RegisterOutputType(RepositoryPubsubConfigStateArrayOutput{})
}
