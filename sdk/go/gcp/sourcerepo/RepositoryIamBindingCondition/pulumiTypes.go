// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RepositoryIamBindingCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RepositoryIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type RepositoryIamBindingConditionInput interface {
	pulumi.Input

	ToRepositoryIamBindingConditionOutput() RepositoryIamBindingConditionOutput
	ToRepositoryIamBindingConditionOutputWithContext(context.Context) RepositoryIamBindingConditionOutput
}

type RepositoryIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (RepositoryIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingCondition)(nil)).Elem()
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionOutput() RepositoryIamBindingConditionOutput {
	return i.ToRepositoryIamBindingConditionOutputWithContext(context.Background())
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionOutputWithContext(ctx context.Context) RepositoryIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionOutput)
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return i.ToRepositoryIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i RepositoryIamBindingConditionArgs) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionOutput).ToRepositoryIamBindingConditionPtrOutputWithContext(ctx)
}

type RepositoryIamBindingConditionPtrInput interface {
	pulumi.Input

	ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput
	ToRepositoryIamBindingConditionPtrOutputWithContext(context.Context) RepositoryIamBindingConditionPtrOutput
}

type repositoryIamBindingConditionPtrType RepositoryIamBindingConditionArgs

func RepositoryIamBindingConditionPtr(v *RepositoryIamBindingConditionArgs) RepositoryIamBindingConditionPtrInput {	return (*repositoryIamBindingConditionPtrType)(v)
}

func (*repositoryIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamBindingCondition)(nil)).Elem()
}

func (i *repositoryIamBindingConditionPtrType) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return i.ToRepositoryIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *repositoryIamBindingConditionPtrType) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryIamBindingConditionPtrOutput)
}

type RepositoryIamBindingConditionOutput struct { *pulumi.OutputState }

func (RepositoryIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryIamBindingCondition)(nil)).Elem()
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionOutput() RepositoryIamBindingConditionOutput {
	return o
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionOutputWithContext(ctx context.Context) RepositoryIamBindingConditionOutput {
	return o
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return o.ToRepositoryIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o RepositoryIamBindingConditionOutput) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return o.ApplyT(func(v RepositoryIamBindingCondition) *RepositoryIamBindingCondition {
		return &v
	}).(RepositoryIamBindingConditionPtrOutput)
}
func (o RepositoryIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RepositoryIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v RepositoryIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v RepositoryIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type RepositoryIamBindingConditionPtrOutput struct { *pulumi.OutputState}

func (RepositoryIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryIamBindingCondition)(nil)).Elem()
}

func (o RepositoryIamBindingConditionPtrOutput) ToRepositoryIamBindingConditionPtrOutput() RepositoryIamBindingConditionPtrOutput {
	return o
}

func (o RepositoryIamBindingConditionPtrOutput) ToRepositoryIamBindingConditionPtrOutputWithContext(ctx context.Context) RepositoryIamBindingConditionPtrOutput {
	return o
}

func (o RepositoryIamBindingConditionPtrOutput) Elem() RepositoryIamBindingConditionOutput {
	return o.ApplyT(func (v *RepositoryIamBindingCondition) RepositoryIamBindingCondition { return *v }).(RepositoryIamBindingConditionOutput)
}

func (o RepositoryIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RepositoryIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryIamBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v RepositoryIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o RepositoryIamBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v RepositoryIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(RepositoryIamBindingConditionOutput{})
	pulumi.RegisterOutputType(RepositoryIamBindingConditionPtrOutput{})
}
