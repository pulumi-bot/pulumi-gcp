// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package UptimeCheckConfigContentMatcher

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type UptimeCheckConfigContentMatcher struct {
	Content string `pulumi:"content"`
}

type UptimeCheckConfigContentMatcherInput interface {
	pulumi.Input

	ToUptimeCheckConfigContentMatcherOutput() UptimeCheckConfigContentMatcherOutput
	ToUptimeCheckConfigContentMatcherOutputWithContext(context.Context) UptimeCheckConfigContentMatcherOutput
}

type UptimeCheckConfigContentMatcherArgs struct {
	Content pulumi.StringInput `pulumi:"content"`
}

func (UptimeCheckConfigContentMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UptimeCheckConfigContentMatcher)(nil)).Elem()
}

func (i UptimeCheckConfigContentMatcherArgs) ToUptimeCheckConfigContentMatcherOutput() UptimeCheckConfigContentMatcherOutput {
	return i.ToUptimeCheckConfigContentMatcherOutputWithContext(context.Background())
}

func (i UptimeCheckConfigContentMatcherArgs) ToUptimeCheckConfigContentMatcherOutputWithContext(ctx context.Context) UptimeCheckConfigContentMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UptimeCheckConfigContentMatcherOutput)
}

type UptimeCheckConfigContentMatcherArrayInput interface {
	pulumi.Input

	ToUptimeCheckConfigContentMatcherArrayOutput() UptimeCheckConfigContentMatcherArrayOutput
	ToUptimeCheckConfigContentMatcherArrayOutputWithContext(context.Context) UptimeCheckConfigContentMatcherArrayOutput
}

type UptimeCheckConfigContentMatcherArray []UptimeCheckConfigContentMatcherInput

func (UptimeCheckConfigContentMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UptimeCheckConfigContentMatcher)(nil)).Elem()
}

func (i UptimeCheckConfigContentMatcherArray) ToUptimeCheckConfigContentMatcherArrayOutput() UptimeCheckConfigContentMatcherArrayOutput {
	return i.ToUptimeCheckConfigContentMatcherArrayOutputWithContext(context.Background())
}

func (i UptimeCheckConfigContentMatcherArray) ToUptimeCheckConfigContentMatcherArrayOutputWithContext(ctx context.Context) UptimeCheckConfigContentMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UptimeCheckConfigContentMatcherArrayOutput)
}

type UptimeCheckConfigContentMatcherOutput struct { *pulumi.OutputState }

func (UptimeCheckConfigContentMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UptimeCheckConfigContentMatcher)(nil)).Elem()
}

func (o UptimeCheckConfigContentMatcherOutput) ToUptimeCheckConfigContentMatcherOutput() UptimeCheckConfigContentMatcherOutput {
	return o
}

func (o UptimeCheckConfigContentMatcherOutput) ToUptimeCheckConfigContentMatcherOutputWithContext(ctx context.Context) UptimeCheckConfigContentMatcherOutput {
	return o
}

func (o UptimeCheckConfigContentMatcherOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func (v UptimeCheckConfigContentMatcher) string { return v.Content }).(pulumi.StringOutput)
}

type UptimeCheckConfigContentMatcherArrayOutput struct { *pulumi.OutputState}

func (UptimeCheckConfigContentMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UptimeCheckConfigContentMatcher)(nil)).Elem()
}

func (o UptimeCheckConfigContentMatcherArrayOutput) ToUptimeCheckConfigContentMatcherArrayOutput() UptimeCheckConfigContentMatcherArrayOutput {
	return o
}

func (o UptimeCheckConfigContentMatcherArrayOutput) ToUptimeCheckConfigContentMatcherArrayOutputWithContext(ctx context.Context) UptimeCheckConfigContentMatcherArrayOutput {
	return o
}

func (o UptimeCheckConfigContentMatcherArrayOutput) Index(i pulumi.IntInput) UptimeCheckConfigContentMatcherOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) UptimeCheckConfigContentMatcher {
		return vs[0].([]UptimeCheckConfigContentMatcher)[vs[1].(int)]
	}).(UptimeCheckConfigContentMatcherOutput)
}

func init() {
	pulumi.RegisterOutputType(UptimeCheckConfigContentMatcherOutput{})
	pulumi.RegisterOutputType(UptimeCheckConfigContentMatcherArrayOutput{})
}
