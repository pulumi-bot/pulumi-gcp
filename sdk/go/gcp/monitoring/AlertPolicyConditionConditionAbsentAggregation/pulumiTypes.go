// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AlertPolicyConditionConditionAbsentAggregation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AlertPolicyConditionConditionAbsentAggregation struct {
	AlignmentPeriod *string `pulumi:"alignmentPeriod"`
	CrossSeriesReducer *string `pulumi:"crossSeriesReducer"`
	GroupByFields []string `pulumi:"groupByFields"`
	PerSeriesAligner *string `pulumi:"perSeriesAligner"`
}

type AlertPolicyConditionConditionAbsentAggregationInput interface {
	pulumi.Input

	ToAlertPolicyConditionConditionAbsentAggregationOutput() AlertPolicyConditionConditionAbsentAggregationOutput
	ToAlertPolicyConditionConditionAbsentAggregationOutputWithContext(context.Context) AlertPolicyConditionConditionAbsentAggregationOutput
}

type AlertPolicyConditionConditionAbsentAggregationArgs struct {
	AlignmentPeriod pulumi.StringPtrInput `pulumi:"alignmentPeriod"`
	CrossSeriesReducer pulumi.StringPtrInput `pulumi:"crossSeriesReducer"`
	GroupByFields pulumi.StringArrayInput `pulumi:"groupByFields"`
	PerSeriesAligner pulumi.StringPtrInput `pulumi:"perSeriesAligner"`
}

func (AlertPolicyConditionConditionAbsentAggregationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPolicyConditionConditionAbsentAggregation)(nil)).Elem()
}

func (i AlertPolicyConditionConditionAbsentAggregationArgs) ToAlertPolicyConditionConditionAbsentAggregationOutput() AlertPolicyConditionConditionAbsentAggregationOutput {
	return i.ToAlertPolicyConditionConditionAbsentAggregationOutputWithContext(context.Background())
}

func (i AlertPolicyConditionConditionAbsentAggregationArgs) ToAlertPolicyConditionConditionAbsentAggregationOutputWithContext(ctx context.Context) AlertPolicyConditionConditionAbsentAggregationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPolicyConditionConditionAbsentAggregationOutput)
}

type AlertPolicyConditionConditionAbsentAggregationArrayInput interface {
	pulumi.Input

	ToAlertPolicyConditionConditionAbsentAggregationArrayOutput() AlertPolicyConditionConditionAbsentAggregationArrayOutput
	ToAlertPolicyConditionConditionAbsentAggregationArrayOutputWithContext(context.Context) AlertPolicyConditionConditionAbsentAggregationArrayOutput
}

type AlertPolicyConditionConditionAbsentAggregationArray []AlertPolicyConditionConditionAbsentAggregationInput

func (AlertPolicyConditionConditionAbsentAggregationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPolicyConditionConditionAbsentAggregation)(nil)).Elem()
}

func (i AlertPolicyConditionConditionAbsentAggregationArray) ToAlertPolicyConditionConditionAbsentAggregationArrayOutput() AlertPolicyConditionConditionAbsentAggregationArrayOutput {
	return i.ToAlertPolicyConditionConditionAbsentAggregationArrayOutputWithContext(context.Background())
}

func (i AlertPolicyConditionConditionAbsentAggregationArray) ToAlertPolicyConditionConditionAbsentAggregationArrayOutputWithContext(ctx context.Context) AlertPolicyConditionConditionAbsentAggregationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPolicyConditionConditionAbsentAggregationArrayOutput)
}

type AlertPolicyConditionConditionAbsentAggregationOutput struct { *pulumi.OutputState }

func (AlertPolicyConditionConditionAbsentAggregationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPolicyConditionConditionAbsentAggregation)(nil)).Elem()
}

func (o AlertPolicyConditionConditionAbsentAggregationOutput) ToAlertPolicyConditionConditionAbsentAggregationOutput() AlertPolicyConditionConditionAbsentAggregationOutput {
	return o
}

func (o AlertPolicyConditionConditionAbsentAggregationOutput) ToAlertPolicyConditionConditionAbsentAggregationOutputWithContext(ctx context.Context) AlertPolicyConditionConditionAbsentAggregationOutput {
	return o
}

func (o AlertPolicyConditionConditionAbsentAggregationOutput) AlignmentPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AlertPolicyConditionConditionAbsentAggregation) *string { return v.AlignmentPeriod }).(pulumi.StringPtrOutput)
}

func (o AlertPolicyConditionConditionAbsentAggregationOutput) CrossSeriesReducer() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AlertPolicyConditionConditionAbsentAggregation) *string { return v.CrossSeriesReducer }).(pulumi.StringPtrOutput)
}

func (o AlertPolicyConditionConditionAbsentAggregationOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func (v AlertPolicyConditionConditionAbsentAggregation) []string { return v.GroupByFields }).(pulumi.StringArrayOutput)
}

func (o AlertPolicyConditionConditionAbsentAggregationOutput) PerSeriesAligner() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AlertPolicyConditionConditionAbsentAggregation) *string { return v.PerSeriesAligner }).(pulumi.StringPtrOutput)
}

type AlertPolicyConditionConditionAbsentAggregationArrayOutput struct { *pulumi.OutputState}

func (AlertPolicyConditionConditionAbsentAggregationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPolicyConditionConditionAbsentAggregation)(nil)).Elem()
}

func (o AlertPolicyConditionConditionAbsentAggregationArrayOutput) ToAlertPolicyConditionConditionAbsentAggregationArrayOutput() AlertPolicyConditionConditionAbsentAggregationArrayOutput {
	return o
}

func (o AlertPolicyConditionConditionAbsentAggregationArrayOutput) ToAlertPolicyConditionConditionAbsentAggregationArrayOutputWithContext(ctx context.Context) AlertPolicyConditionConditionAbsentAggregationArrayOutput {
	return o
}

func (o AlertPolicyConditionConditionAbsentAggregationArrayOutput) Index(i pulumi.IntInput) AlertPolicyConditionConditionAbsentAggregationOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) AlertPolicyConditionConditionAbsentAggregation {
		return vs[0].([]AlertPolicyConditionConditionAbsentAggregation)[vs[1].(int)]
	}).(AlertPolicyConditionConditionAbsentAggregationOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertPolicyConditionConditionAbsentAggregationOutput{})
	pulumi.RegisterOutputType(AlertPolicyConditionConditionAbsentAggregationArrayOutput{})
}
