// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TriggerGithubPush

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TriggerGithubPush struct {
	Branch *string `pulumi:"branch"`
	Tag *string `pulumi:"tag"`
}

type TriggerGithubPushInput interface {
	pulumi.Input

	ToTriggerGithubPushOutput() TriggerGithubPushOutput
	ToTriggerGithubPushOutputWithContext(context.Context) TriggerGithubPushOutput
}

type TriggerGithubPushArgs struct {
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (TriggerGithubPushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPush)(nil)).Elem()
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushOutput() TriggerGithubPushOutput {
	return i.ToTriggerGithubPushOutputWithContext(context.Background())
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushOutputWithContext(ctx context.Context) TriggerGithubPushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushOutput)
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return i.ToTriggerGithubPushPtrOutputWithContext(context.Background())
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushOutput).ToTriggerGithubPushPtrOutputWithContext(ctx)
}

type TriggerGithubPushPtrInput interface {
	pulumi.Input

	ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput
	ToTriggerGithubPushPtrOutputWithContext(context.Context) TriggerGithubPushPtrOutput
}

type triggerGithubPushPtrType TriggerGithubPushArgs

func TriggerGithubPushPtr(v *TriggerGithubPushArgs) TriggerGithubPushPtrInput {	return (*triggerGithubPushPtrType)(v)
}

func (*triggerGithubPushPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPush)(nil)).Elem()
}

func (i *triggerGithubPushPtrType) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return i.ToTriggerGithubPushPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPushPtrType) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushPtrOutput)
}

type TriggerGithubPushOutput struct { *pulumi.OutputState }

func (TriggerGithubPushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPush)(nil)).Elem()
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushOutput() TriggerGithubPushOutput {
	return o
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushOutputWithContext(ctx context.Context) TriggerGithubPushOutput {
	return o
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return o.ToTriggerGithubPushPtrOutputWithContext(context.Background())
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return o.ApplyT(func(v TriggerGithubPush) *TriggerGithubPush {
		return &v
	}).(TriggerGithubPushPtrOutput)
}
func (o TriggerGithubPushOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerGithubPush) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPushOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerGithubPush) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type TriggerGithubPushPtrOutput struct { *pulumi.OutputState}

func (TriggerGithubPushPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPush)(nil)).Elem()
}

func (o TriggerGithubPushPtrOutput) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return o
}

func (o TriggerGithubPushPtrOutput) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return o
}

func (o TriggerGithubPushPtrOutput) Elem() TriggerGithubPushOutput {
	return o.ApplyT(func (v *TriggerGithubPush) TriggerGithubPush { return *v }).(TriggerGithubPushOutput)
}

func (o TriggerGithubPushPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerGithubPush) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPushPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerGithubPush) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(TriggerGithubPushOutput{})
	pulumi.RegisterOutputType(TriggerGithubPushPtrOutput{})
}
