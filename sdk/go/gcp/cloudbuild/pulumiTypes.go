// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudbuild

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TriggerBuild struct {
	Images  []string           `pulumi:"images"`
	Steps   []TriggerBuildStep `pulumi:"steps"`
	Tags    []string           `pulumi:"tags"`
	Timeout *string            `pulumi:"timeout"`
}

type TriggerBuildInput interface {
	pulumi.Input

	ToTriggerBuildOutput() TriggerBuildOutput
	ToTriggerBuildOutputWithContext(context.Context) TriggerBuildOutput
}

type TriggerBuildArgs struct {
	Images  pulumi.StringArrayInput    `pulumi:"images"`
	Steps   TriggerBuildStepArrayInput `pulumi:"steps"`
	Tags    pulumi.StringArrayInput    `pulumi:"tags"`
	Timeout pulumi.StringPtrInput      `pulumi:"timeout"`
}

func (TriggerBuildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuild)(nil)).Elem()
}

func (i TriggerBuildArgs) ToTriggerBuildOutput() TriggerBuildOutput {
	return i.ToTriggerBuildOutputWithContext(context.Background())
}

func (i TriggerBuildArgs) ToTriggerBuildOutputWithContext(ctx context.Context) TriggerBuildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildOutput)
}

func (i TriggerBuildArgs) ToTriggerBuildPtrOutput() TriggerBuildPtrOutput {
	return i.ToTriggerBuildPtrOutputWithContext(context.Background())
}

func (i TriggerBuildArgs) ToTriggerBuildPtrOutputWithContext(ctx context.Context) TriggerBuildPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildOutput).ToTriggerBuildPtrOutputWithContext(ctx)
}

type TriggerBuildPtrInput interface {
	pulumi.Input

	ToTriggerBuildPtrOutput() TriggerBuildPtrOutput
	ToTriggerBuildPtrOutputWithContext(context.Context) TriggerBuildPtrOutput
}

type triggerBuildPtrType TriggerBuildArgs

func TriggerBuildPtr(v *TriggerBuildArgs) TriggerBuildPtrInput {
	return (*triggerBuildPtrType)(v)
}

func (*triggerBuildPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuild)(nil)).Elem()
}

func (i *triggerBuildPtrType) ToTriggerBuildPtrOutput() TriggerBuildPtrOutput {
	return i.ToTriggerBuildPtrOutputWithContext(context.Background())
}

func (i *triggerBuildPtrType) ToTriggerBuildPtrOutputWithContext(ctx context.Context) TriggerBuildPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildPtrOutput)
}

type TriggerBuildOutput struct{ *pulumi.OutputState }

func (TriggerBuildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuild)(nil)).Elem()
}

func (o TriggerBuildOutput) ToTriggerBuildOutput() TriggerBuildOutput {
	return o
}

func (o TriggerBuildOutput) ToTriggerBuildOutputWithContext(ctx context.Context) TriggerBuildOutput {
	return o
}

func (o TriggerBuildOutput) ToTriggerBuildPtrOutput() TriggerBuildPtrOutput {
	return o.ToTriggerBuildPtrOutputWithContext(context.Background())
}

func (o TriggerBuildOutput) ToTriggerBuildPtrOutputWithContext(ctx context.Context) TriggerBuildPtrOutput {
	return o.ApplyT(func(v TriggerBuild) *TriggerBuild {
		return &v
	}).(TriggerBuildPtrOutput)
}
func (o TriggerBuildOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildOutput) Steps() TriggerBuildStepArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []TriggerBuildStep { return v.Steps }).(TriggerBuildStepArrayOutput)
}

func (o TriggerBuildOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuild) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TriggerBuildPtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuild)(nil)).Elem()
}

func (o TriggerBuildPtrOutput) ToTriggerBuildPtrOutput() TriggerBuildPtrOutput {
	return o
}

func (o TriggerBuildPtrOutput) ToTriggerBuildPtrOutputWithContext(ctx context.Context) TriggerBuildPtrOutput {
	return o
}

func (o TriggerBuildPtrOutput) Elem() TriggerBuildOutput {
	return o.ApplyT(func(v *TriggerBuild) TriggerBuild { return *v }).(TriggerBuildOutput)
}

func (o TriggerBuildPtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildPtrOutput) Steps() TriggerBuildStepArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []TriggerBuildStep { return v.Steps }).(TriggerBuildStepArrayOutput)
}

func (o TriggerBuildPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuild) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuild) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TriggerBuildArgs struct {
	Images  []string               `pulumi:"images"`
	Steps   []TriggerBuildStepArgs `pulumi:"steps"`
	Tags    []string               `pulumi:"tags"`
	Timeout *string                `pulumi:"timeout"`
}

type TriggerBuildArgsInput interface {
	pulumi.Input

	ToTriggerBuildArgsOutput() TriggerBuildArgsOutput
	ToTriggerBuildArgsOutputWithContext(context.Context) TriggerBuildArgsOutput
}

type TriggerBuildArgsArgs struct {
	Images  pulumi.StringArrayInput        `pulumi:"images"`
	Steps   TriggerBuildStepArgsArrayInput `pulumi:"steps"`
	Tags    pulumi.StringArrayInput        `pulumi:"tags"`
	Timeout pulumi.StringPtrInput          `pulumi:"timeout"`
}

func (TriggerBuildArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildArgs)(nil)).Elem()
}

func (i TriggerBuildArgsArgs) ToTriggerBuildArgsOutput() TriggerBuildArgsOutput {
	return i.ToTriggerBuildArgsOutputWithContext(context.Background())
}

func (i TriggerBuildArgsArgs) ToTriggerBuildArgsOutputWithContext(ctx context.Context) TriggerBuildArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArgsOutput)
}

func (i TriggerBuildArgsArgs) ToTriggerBuildArgsPtrOutput() TriggerBuildArgsPtrOutput {
	return i.ToTriggerBuildArgsPtrOutputWithContext(context.Background())
}

func (i TriggerBuildArgsArgs) ToTriggerBuildArgsPtrOutputWithContext(ctx context.Context) TriggerBuildArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArgsOutput).ToTriggerBuildArgsPtrOutputWithContext(ctx)
}

type TriggerBuildArgsPtrInput interface {
	pulumi.Input

	ToTriggerBuildArgsPtrOutput() TriggerBuildArgsPtrOutput
	ToTriggerBuildArgsPtrOutputWithContext(context.Context) TriggerBuildArgsPtrOutput
}

type triggerBuildArgsPtrType TriggerBuildArgsArgs

func TriggerBuildArgsPtr(v *TriggerBuildArgsArgs) TriggerBuildArgsPtrInput {
	return (*triggerBuildArgsPtrType)(v)
}

func (*triggerBuildArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildArgs)(nil)).Elem()
}

func (i *triggerBuildArgsPtrType) ToTriggerBuildArgsPtrOutput() TriggerBuildArgsPtrOutput {
	return i.ToTriggerBuildArgsPtrOutputWithContext(context.Background())
}

func (i *triggerBuildArgsPtrType) ToTriggerBuildArgsPtrOutputWithContext(ctx context.Context) TriggerBuildArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildArgsPtrOutput)
}

type TriggerBuildArgsOutput struct{ *pulumi.OutputState }

func (TriggerBuildArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildArgs)(nil)).Elem()
}

func (o TriggerBuildArgsOutput) ToTriggerBuildArgsOutput() TriggerBuildArgsOutput {
	return o
}

func (o TriggerBuildArgsOutput) ToTriggerBuildArgsOutputWithContext(ctx context.Context) TriggerBuildArgsOutput {
	return o
}

func (o TriggerBuildArgsOutput) ToTriggerBuildArgsPtrOutput() TriggerBuildArgsPtrOutput {
	return o.ToTriggerBuildArgsPtrOutputWithContext(context.Background())
}

func (o TriggerBuildArgsOutput) ToTriggerBuildArgsPtrOutputWithContext(ctx context.Context) TriggerBuildArgsPtrOutput {
	return o.ApplyT(func(v TriggerBuildArgs) *TriggerBuildArgs {
		return &v
	}).(TriggerBuildArgsPtrOutput)
}
func (o TriggerBuildArgsOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildArgs) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildArgsOutput) Steps() TriggerBuildStepArgsArrayOutput {
	return o.ApplyT(func(v TriggerBuildArgs) []TriggerBuildStepArgs { return v.Steps }).(TriggerBuildStepArgsArrayOutput)
}

func (o TriggerBuildArgsOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildArgsOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildArgs) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TriggerBuildArgsPtrOutput struct{ *pulumi.OutputState }

func (TriggerBuildArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBuildArgs)(nil)).Elem()
}

func (o TriggerBuildArgsPtrOutput) ToTriggerBuildArgsPtrOutput() TriggerBuildArgsPtrOutput {
	return o
}

func (o TriggerBuildArgsPtrOutput) ToTriggerBuildArgsPtrOutputWithContext(ctx context.Context) TriggerBuildArgsPtrOutput {
	return o
}

func (o TriggerBuildArgsPtrOutput) Elem() TriggerBuildArgsOutput {
	return o.ApplyT(func(v *TriggerBuildArgs) TriggerBuildArgs { return *v }).(TriggerBuildArgsOutput)
}

func (o TriggerBuildArgsPtrOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildArgs) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildArgsPtrOutput) Steps() TriggerBuildStepArgsArrayOutput {
	return o.ApplyT(func(v TriggerBuildArgs) []TriggerBuildStepArgs { return v.Steps }).(TriggerBuildStepArgsArrayOutput)
}

func (o TriggerBuildArgsPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildArgsPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildArgs) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TriggerBuildState struct {
	Images  []string                `pulumi:"images"`
	Steps   []TriggerBuildStateStep `pulumi:"steps"`
	Tags    []string                `pulumi:"tags"`
	Timeout *string                 `pulumi:"timeout"`
}

type TriggerBuildStateInput interface {
	pulumi.Input

	ToTriggerBuildStateOutput() TriggerBuildStateOutput
	ToTriggerBuildStateOutputWithContext(context.Context) TriggerBuildStateOutput
}

type TriggerBuildStateArgs struct {
	Images  pulumi.StringArrayInput         `pulumi:"images"`
	Steps   TriggerBuildStateStepArrayInput `pulumi:"steps"`
	Tags    pulumi.StringArrayInput         `pulumi:"tags"`
	Timeout pulumi.StringPtrInput           `pulumi:"timeout"`
}

func (TriggerBuildStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildState)(nil)).Elem()
}

func (i TriggerBuildStateArgs) ToTriggerBuildStateOutput() TriggerBuildStateOutput {
	return i.ToTriggerBuildStateOutputWithContext(context.Background())
}

func (i TriggerBuildStateArgs) ToTriggerBuildStateOutputWithContext(ctx context.Context) TriggerBuildStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStateOutput)
}

type TriggerBuildStateOutput struct{ *pulumi.OutputState }

func (TriggerBuildStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildState)(nil)).Elem()
}

func (o TriggerBuildStateOutput) ToTriggerBuildStateOutput() TriggerBuildStateOutput {
	return o
}

func (o TriggerBuildStateOutput) ToTriggerBuildStateOutputWithContext(ctx context.Context) TriggerBuildStateOutput {
	return o
}

func (o TriggerBuildStateOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildState) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildStateOutput) Steps() TriggerBuildStateStepArrayOutput {
	return o.ApplyT(func(v TriggerBuildState) []TriggerBuildStateStep { return v.Steps }).(TriggerBuildStateStepArrayOutput)
}

func (o TriggerBuildStateOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildState) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildStateOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildState) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TriggerBuildStateStep struct {
	Args       []string `pulumi:"args"`
	Dir        *string  `pulumi:"dir"`
	Entrypoint *string  `pulumi:"entrypoint"`
	Envs       []string `pulumi:"envs"`
	// an identifier for the resource with format `projects/{{project}}/triggers/{{trigger_id}}`
	Id         *string                       `pulumi:"id"`
	Name       string                        `pulumi:"name"`
	SecretEnvs []string                      `pulumi:"secretEnvs"`
	Timeout    *string                       `pulumi:"timeout"`
	Timing     *string                       `pulumi:"timing"`
	Volumes    []TriggerBuildStateStepVolume `pulumi:"volumes"`
	WaitFors   []string                      `pulumi:"waitFors"`
}

type TriggerBuildStateStepInput interface {
	pulumi.Input

	ToTriggerBuildStateStepOutput() TriggerBuildStateStepOutput
	ToTriggerBuildStateStepOutputWithContext(context.Context) TriggerBuildStateStepOutput
}

type TriggerBuildStateStepArgs struct {
	Args       pulumi.StringArrayInput `pulumi:"args"`
	Dir        pulumi.StringPtrInput   `pulumi:"dir"`
	Entrypoint pulumi.StringPtrInput   `pulumi:"entrypoint"`
	Envs       pulumi.StringArrayInput `pulumi:"envs"`
	// an identifier for the resource with format `projects/{{project}}/triggers/{{trigger_id}}`
	Id         pulumi.StringPtrInput                 `pulumi:"id"`
	Name       pulumi.StringInput                    `pulumi:"name"`
	SecretEnvs pulumi.StringArrayInput               `pulumi:"secretEnvs"`
	Timeout    pulumi.StringPtrInput                 `pulumi:"timeout"`
	Timing     pulumi.StringPtrInput                 `pulumi:"timing"`
	Volumes    TriggerBuildStateStepVolumeArrayInput `pulumi:"volumes"`
	WaitFors   pulumi.StringArrayInput               `pulumi:"waitFors"`
}

func (TriggerBuildStateStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStateStep)(nil)).Elem()
}

func (i TriggerBuildStateStepArgs) ToTriggerBuildStateStepOutput() TriggerBuildStateStepOutput {
	return i.ToTriggerBuildStateStepOutputWithContext(context.Background())
}

func (i TriggerBuildStateStepArgs) ToTriggerBuildStateStepOutputWithContext(ctx context.Context) TriggerBuildStateStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStateStepOutput)
}

type TriggerBuildStateStepArrayInput interface {
	pulumi.Input

	ToTriggerBuildStateStepArrayOutput() TriggerBuildStateStepArrayOutput
	ToTriggerBuildStateStepArrayOutputWithContext(context.Context) TriggerBuildStateStepArrayOutput
}

type TriggerBuildStateStepArray []TriggerBuildStateStepInput

func (TriggerBuildStateStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStateStep)(nil)).Elem()
}

func (i TriggerBuildStateStepArray) ToTriggerBuildStateStepArrayOutput() TriggerBuildStateStepArrayOutput {
	return i.ToTriggerBuildStateStepArrayOutputWithContext(context.Background())
}

func (i TriggerBuildStateStepArray) ToTriggerBuildStateStepArrayOutputWithContext(ctx context.Context) TriggerBuildStateStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStateStepArrayOutput)
}

type TriggerBuildStateStepOutput struct{ *pulumi.OutputState }

func (TriggerBuildStateStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStateStep)(nil)).Elem()
}

func (o TriggerBuildStateStepOutput) ToTriggerBuildStateStepOutput() TriggerBuildStateStepOutput {
	return o
}

func (o TriggerBuildStateStepOutput) ToTriggerBuildStateStepOutputWithContext(ctx context.Context) TriggerBuildStateStepOutput {
	return o
}

func (o TriggerBuildStateStepOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildStateStepOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStateStepOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) *string { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStateStepOutput) Envs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) []string { return v.Envs }).(pulumi.StringArrayOutput)
}

// an identifier for the resource with format `projects/{{project}}/triggers/{{trigger_id}}`
func (o TriggerBuildStateStepOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStateStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) string { return v.Name }).(pulumi.StringOutput)
}

func (o TriggerBuildStateStepOutput) SecretEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) []string { return v.SecretEnvs }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildStateStepOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStateStepOutput) Timing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) *string { return v.Timing }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStateStepOutput) Volumes() TriggerBuildStateStepVolumeArrayOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) []TriggerBuildStateStepVolume { return v.Volumes }).(TriggerBuildStateStepVolumeArrayOutput)
}

func (o TriggerBuildStateStepOutput) WaitFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStateStep) []string { return v.WaitFors }).(pulumi.StringArrayOutput)
}

type TriggerBuildStateStepArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildStateStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStateStep)(nil)).Elem()
}

func (o TriggerBuildStateStepArrayOutput) ToTriggerBuildStateStepArrayOutput() TriggerBuildStateStepArrayOutput {
	return o
}

func (o TriggerBuildStateStepArrayOutput) ToTriggerBuildStateStepArrayOutputWithContext(ctx context.Context) TriggerBuildStateStepArrayOutput {
	return o
}

func (o TriggerBuildStateStepArrayOutput) Index(i pulumi.IntInput) TriggerBuildStateStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildStateStep {
		return vs[0].([]TriggerBuildStateStep)[vs[1].(int)]
	}).(TriggerBuildStateStepOutput)
}

type TriggerBuildStateStepVolume struct {
	Name string `pulumi:"name"`
	Path string `pulumi:"path"`
}

type TriggerBuildStateStepVolumeInput interface {
	pulumi.Input

	ToTriggerBuildStateStepVolumeOutput() TriggerBuildStateStepVolumeOutput
	ToTriggerBuildStateStepVolumeOutputWithContext(context.Context) TriggerBuildStateStepVolumeOutput
}

type TriggerBuildStateStepVolumeArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Path pulumi.StringInput `pulumi:"path"`
}

func (TriggerBuildStateStepVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStateStepVolume)(nil)).Elem()
}

func (i TriggerBuildStateStepVolumeArgs) ToTriggerBuildStateStepVolumeOutput() TriggerBuildStateStepVolumeOutput {
	return i.ToTriggerBuildStateStepVolumeOutputWithContext(context.Background())
}

func (i TriggerBuildStateStepVolumeArgs) ToTriggerBuildStateStepVolumeOutputWithContext(ctx context.Context) TriggerBuildStateStepVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStateStepVolumeOutput)
}

type TriggerBuildStateStepVolumeArrayInput interface {
	pulumi.Input

	ToTriggerBuildStateStepVolumeArrayOutput() TriggerBuildStateStepVolumeArrayOutput
	ToTriggerBuildStateStepVolumeArrayOutputWithContext(context.Context) TriggerBuildStateStepVolumeArrayOutput
}

type TriggerBuildStateStepVolumeArray []TriggerBuildStateStepVolumeInput

func (TriggerBuildStateStepVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStateStepVolume)(nil)).Elem()
}

func (i TriggerBuildStateStepVolumeArray) ToTriggerBuildStateStepVolumeArrayOutput() TriggerBuildStateStepVolumeArrayOutput {
	return i.ToTriggerBuildStateStepVolumeArrayOutputWithContext(context.Background())
}

func (i TriggerBuildStateStepVolumeArray) ToTriggerBuildStateStepVolumeArrayOutputWithContext(ctx context.Context) TriggerBuildStateStepVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStateStepVolumeArrayOutput)
}

type TriggerBuildStateStepVolumeOutput struct{ *pulumi.OutputState }

func (TriggerBuildStateStepVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStateStepVolume)(nil)).Elem()
}

func (o TriggerBuildStateStepVolumeOutput) ToTriggerBuildStateStepVolumeOutput() TriggerBuildStateStepVolumeOutput {
	return o
}

func (o TriggerBuildStateStepVolumeOutput) ToTriggerBuildStateStepVolumeOutputWithContext(ctx context.Context) TriggerBuildStateStepVolumeOutput {
	return o
}

func (o TriggerBuildStateStepVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStateStepVolume) string { return v.Name }).(pulumi.StringOutput)
}

func (o TriggerBuildStateStepVolumeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStateStepVolume) string { return v.Path }).(pulumi.StringOutput)
}

type TriggerBuildStateStepVolumeArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildStateStepVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStateStepVolume)(nil)).Elem()
}

func (o TriggerBuildStateStepVolumeArrayOutput) ToTriggerBuildStateStepVolumeArrayOutput() TriggerBuildStateStepVolumeArrayOutput {
	return o
}

func (o TriggerBuildStateStepVolumeArrayOutput) ToTriggerBuildStateStepVolumeArrayOutputWithContext(ctx context.Context) TriggerBuildStateStepVolumeArrayOutput {
	return o
}

func (o TriggerBuildStateStepVolumeArrayOutput) Index(i pulumi.IntInput) TriggerBuildStateStepVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildStateStepVolume {
		return vs[0].([]TriggerBuildStateStepVolume)[vs[1].(int)]
	}).(TriggerBuildStateStepVolumeOutput)
}

type TriggerBuildStep struct {
	Args       []string `pulumi:"args"`
	Dir        *string  `pulumi:"dir"`
	Entrypoint *string  `pulumi:"entrypoint"`
	Envs       []string `pulumi:"envs"`
	// an identifier for the resource with format `projects/{{project}}/triggers/{{trigger_id}}`
	Id         *string                  `pulumi:"id"`
	Name       string                   `pulumi:"name"`
	SecretEnvs []string                 `pulumi:"secretEnvs"`
	Timeout    *string                  `pulumi:"timeout"`
	Timing     *string                  `pulumi:"timing"`
	Volumes    []TriggerBuildStepVolume `pulumi:"volumes"`
	WaitFors   []string                 `pulumi:"waitFors"`
}

type TriggerBuildStepInput interface {
	pulumi.Input

	ToTriggerBuildStepOutput() TriggerBuildStepOutput
	ToTriggerBuildStepOutputWithContext(context.Context) TriggerBuildStepOutput
}

type TriggerBuildStepArgs struct {
	Args       pulumi.StringArrayInput `pulumi:"args"`
	Dir        pulumi.StringPtrInput   `pulumi:"dir"`
	Entrypoint pulumi.StringPtrInput   `pulumi:"entrypoint"`
	Envs       pulumi.StringArrayInput `pulumi:"envs"`
	// an identifier for the resource with format `projects/{{project}}/triggers/{{trigger_id}}`
	Id         pulumi.StringPtrInput            `pulumi:"id"`
	Name       pulumi.StringInput               `pulumi:"name"`
	SecretEnvs pulumi.StringArrayInput          `pulumi:"secretEnvs"`
	Timeout    pulumi.StringPtrInput            `pulumi:"timeout"`
	Timing     pulumi.StringPtrInput            `pulumi:"timing"`
	Volumes    TriggerBuildStepVolumeArrayInput `pulumi:"volumes"`
	WaitFors   pulumi.StringArrayInput          `pulumi:"waitFors"`
}

func (TriggerBuildStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStep)(nil)).Elem()
}

func (i TriggerBuildStepArgs) ToTriggerBuildStepOutput() TriggerBuildStepOutput {
	return i.ToTriggerBuildStepOutputWithContext(context.Background())
}

func (i TriggerBuildStepArgs) ToTriggerBuildStepOutputWithContext(ctx context.Context) TriggerBuildStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepOutput)
}

type TriggerBuildStepArrayInput interface {
	pulumi.Input

	ToTriggerBuildStepArrayOutput() TriggerBuildStepArrayOutput
	ToTriggerBuildStepArrayOutputWithContext(context.Context) TriggerBuildStepArrayOutput
}

type TriggerBuildStepArray []TriggerBuildStepInput

func (TriggerBuildStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStep)(nil)).Elem()
}

func (i TriggerBuildStepArray) ToTriggerBuildStepArrayOutput() TriggerBuildStepArrayOutput {
	return i.ToTriggerBuildStepArrayOutputWithContext(context.Background())
}

func (i TriggerBuildStepArray) ToTriggerBuildStepArrayOutputWithContext(ctx context.Context) TriggerBuildStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepArrayOutput)
}

type TriggerBuildStepOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStep)(nil)).Elem()
}

func (o TriggerBuildStepOutput) ToTriggerBuildStepOutput() TriggerBuildStepOutput {
	return o
}

func (o TriggerBuildStepOutput) ToTriggerBuildStepOutputWithContext(ctx context.Context) TriggerBuildStepOutput {
	return o
}

func (o TriggerBuildStepOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildStepOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepOutput) Envs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []string { return v.Envs }).(pulumi.StringArrayOutput)
}

// an identifier for the resource with format `projects/{{project}}/triggers/{{trigger_id}}`
func (o TriggerBuildStepOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStep) string { return v.Name }).(pulumi.StringOutput)
}

func (o TriggerBuildStepOutput) SecretEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []string { return v.SecretEnvs }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildStepOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepOutput) Timing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStep) *string { return v.Timing }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepOutput) Volumes() TriggerBuildStepVolumeArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []TriggerBuildStepVolume { return v.Volumes }).(TriggerBuildStepVolumeArrayOutput)
}

func (o TriggerBuildStepOutput) WaitFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStep) []string { return v.WaitFors }).(pulumi.StringArrayOutput)
}

type TriggerBuildStepArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStep)(nil)).Elem()
}

func (o TriggerBuildStepArrayOutput) ToTriggerBuildStepArrayOutput() TriggerBuildStepArrayOutput {
	return o
}

func (o TriggerBuildStepArrayOutput) ToTriggerBuildStepArrayOutputWithContext(ctx context.Context) TriggerBuildStepArrayOutput {
	return o
}

func (o TriggerBuildStepArrayOutput) Index(i pulumi.IntInput) TriggerBuildStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildStep {
		return vs[0].([]TriggerBuildStep)[vs[1].(int)]
	}).(TriggerBuildStepOutput)
}

type TriggerBuildStepArgs struct {
	Args       []string `pulumi:"args"`
	Dir        *string  `pulumi:"dir"`
	Entrypoint *string  `pulumi:"entrypoint"`
	Envs       []string `pulumi:"envs"`
	// an identifier for the resource with format `projects/{{project}}/triggers/{{trigger_id}}`
	Id         *string                      `pulumi:"id"`
	Name       string                       `pulumi:"name"`
	SecretEnvs []string                     `pulumi:"secretEnvs"`
	Timeout    *string                      `pulumi:"timeout"`
	Timing     *string                      `pulumi:"timing"`
	Volumes    []TriggerBuildStepVolumeArgs `pulumi:"volumes"`
	WaitFors   []string                     `pulumi:"waitFors"`
}

type TriggerBuildStepArgsInput interface {
	pulumi.Input

	ToTriggerBuildStepArgsOutput() TriggerBuildStepArgsOutput
	ToTriggerBuildStepArgsOutputWithContext(context.Context) TriggerBuildStepArgsOutput
}

type TriggerBuildStepArgsArgs struct {
	Args       pulumi.StringArrayInput `pulumi:"args"`
	Dir        pulumi.StringPtrInput   `pulumi:"dir"`
	Entrypoint pulumi.StringPtrInput   `pulumi:"entrypoint"`
	Envs       pulumi.StringArrayInput `pulumi:"envs"`
	// an identifier for the resource with format `projects/{{project}}/triggers/{{trigger_id}}`
	Id         pulumi.StringPtrInput                `pulumi:"id"`
	Name       pulumi.StringInput                   `pulumi:"name"`
	SecretEnvs pulumi.StringArrayInput              `pulumi:"secretEnvs"`
	Timeout    pulumi.StringPtrInput                `pulumi:"timeout"`
	Timing     pulumi.StringPtrInput                `pulumi:"timing"`
	Volumes    TriggerBuildStepVolumeArgsArrayInput `pulumi:"volumes"`
	WaitFors   pulumi.StringArrayInput              `pulumi:"waitFors"`
}

func (TriggerBuildStepArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStepArgs)(nil)).Elem()
}

func (i TriggerBuildStepArgsArgs) ToTriggerBuildStepArgsOutput() TriggerBuildStepArgsOutput {
	return i.ToTriggerBuildStepArgsOutputWithContext(context.Background())
}

func (i TriggerBuildStepArgsArgs) ToTriggerBuildStepArgsOutputWithContext(ctx context.Context) TriggerBuildStepArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepArgsOutput)
}

type TriggerBuildStepArgsArrayInput interface {
	pulumi.Input

	ToTriggerBuildStepArgsArrayOutput() TriggerBuildStepArgsArrayOutput
	ToTriggerBuildStepArgsArrayOutputWithContext(context.Context) TriggerBuildStepArgsArrayOutput
}

type TriggerBuildStepArgsArray []TriggerBuildStepArgsInput

func (TriggerBuildStepArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStepArgs)(nil)).Elem()
}

func (i TriggerBuildStepArgsArray) ToTriggerBuildStepArgsArrayOutput() TriggerBuildStepArgsArrayOutput {
	return i.ToTriggerBuildStepArgsArrayOutputWithContext(context.Background())
}

func (i TriggerBuildStepArgsArray) ToTriggerBuildStepArgsArrayOutputWithContext(ctx context.Context) TriggerBuildStepArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepArgsArrayOutput)
}

type TriggerBuildStepArgsOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStepArgs)(nil)).Elem()
}

func (o TriggerBuildStepArgsOutput) ToTriggerBuildStepArgsOutput() TriggerBuildStepArgsOutput {
	return o
}

func (o TriggerBuildStepArgsOutput) ToTriggerBuildStepArgsOutputWithContext(ctx context.Context) TriggerBuildStepArgsOutput {
	return o
}

func (o TriggerBuildStepArgsOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildStepArgsOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepArgsOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) *string { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepArgsOutput) Envs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) []string { return v.Envs }).(pulumi.StringArrayOutput)
}

// an identifier for the resource with format `projects/{{project}}/triggers/{{trigger_id}}`
func (o TriggerBuildStepArgsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) string { return v.Name }).(pulumi.StringOutput)
}

func (o TriggerBuildStepArgsOutput) SecretEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) []string { return v.SecretEnvs }).(pulumi.StringArrayOutput)
}

func (o TriggerBuildStepArgsOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepArgsOutput) Timing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) *string { return v.Timing }).(pulumi.StringPtrOutput)
}

func (o TriggerBuildStepArgsOutput) Volumes() TriggerBuildStepVolumeArgsArrayOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) []TriggerBuildStepVolumeArgs { return v.Volumes }).(TriggerBuildStepVolumeArgsArrayOutput)
}

func (o TriggerBuildStepArgsOutput) WaitFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerBuildStepArgs) []string { return v.WaitFors }).(pulumi.StringArrayOutput)
}

type TriggerBuildStepArgsArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStepArgs)(nil)).Elem()
}

func (o TriggerBuildStepArgsArrayOutput) ToTriggerBuildStepArgsArrayOutput() TriggerBuildStepArgsArrayOutput {
	return o
}

func (o TriggerBuildStepArgsArrayOutput) ToTriggerBuildStepArgsArrayOutputWithContext(ctx context.Context) TriggerBuildStepArgsArrayOutput {
	return o
}

func (o TriggerBuildStepArgsArrayOutput) Index(i pulumi.IntInput) TriggerBuildStepArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildStepArgs {
		return vs[0].([]TriggerBuildStepArgs)[vs[1].(int)]
	}).(TriggerBuildStepArgsOutput)
}

type TriggerBuildStepVolume struct {
	Name string `pulumi:"name"`
	Path string `pulumi:"path"`
}

type TriggerBuildStepVolumeInput interface {
	pulumi.Input

	ToTriggerBuildStepVolumeOutput() TriggerBuildStepVolumeOutput
	ToTriggerBuildStepVolumeOutputWithContext(context.Context) TriggerBuildStepVolumeOutput
}

type TriggerBuildStepVolumeArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Path pulumi.StringInput `pulumi:"path"`
}

func (TriggerBuildStepVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStepVolume)(nil)).Elem()
}

func (i TriggerBuildStepVolumeArgs) ToTriggerBuildStepVolumeOutput() TriggerBuildStepVolumeOutput {
	return i.ToTriggerBuildStepVolumeOutputWithContext(context.Background())
}

func (i TriggerBuildStepVolumeArgs) ToTriggerBuildStepVolumeOutputWithContext(ctx context.Context) TriggerBuildStepVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepVolumeOutput)
}

type TriggerBuildStepVolumeArrayInput interface {
	pulumi.Input

	ToTriggerBuildStepVolumeArrayOutput() TriggerBuildStepVolumeArrayOutput
	ToTriggerBuildStepVolumeArrayOutputWithContext(context.Context) TriggerBuildStepVolumeArrayOutput
}

type TriggerBuildStepVolumeArray []TriggerBuildStepVolumeInput

func (TriggerBuildStepVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStepVolume)(nil)).Elem()
}

func (i TriggerBuildStepVolumeArray) ToTriggerBuildStepVolumeArrayOutput() TriggerBuildStepVolumeArrayOutput {
	return i.ToTriggerBuildStepVolumeArrayOutputWithContext(context.Background())
}

func (i TriggerBuildStepVolumeArray) ToTriggerBuildStepVolumeArrayOutputWithContext(ctx context.Context) TriggerBuildStepVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepVolumeArrayOutput)
}

type TriggerBuildStepVolumeOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStepVolume)(nil)).Elem()
}

func (o TriggerBuildStepVolumeOutput) ToTriggerBuildStepVolumeOutput() TriggerBuildStepVolumeOutput {
	return o
}

func (o TriggerBuildStepVolumeOutput) ToTriggerBuildStepVolumeOutputWithContext(ctx context.Context) TriggerBuildStepVolumeOutput {
	return o
}

func (o TriggerBuildStepVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStepVolume) string { return v.Name }).(pulumi.StringOutput)
}

func (o TriggerBuildStepVolumeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStepVolume) string { return v.Path }).(pulumi.StringOutput)
}

type TriggerBuildStepVolumeArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStepVolume)(nil)).Elem()
}

func (o TriggerBuildStepVolumeArrayOutput) ToTriggerBuildStepVolumeArrayOutput() TriggerBuildStepVolumeArrayOutput {
	return o
}

func (o TriggerBuildStepVolumeArrayOutput) ToTriggerBuildStepVolumeArrayOutputWithContext(ctx context.Context) TriggerBuildStepVolumeArrayOutput {
	return o
}

func (o TriggerBuildStepVolumeArrayOutput) Index(i pulumi.IntInput) TriggerBuildStepVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildStepVolume {
		return vs[0].([]TriggerBuildStepVolume)[vs[1].(int)]
	}).(TriggerBuildStepVolumeOutput)
}

type TriggerBuildStepVolumeArgs struct {
	Name string `pulumi:"name"`
	Path string `pulumi:"path"`
}

type TriggerBuildStepVolumeArgsInput interface {
	pulumi.Input

	ToTriggerBuildStepVolumeArgsOutput() TriggerBuildStepVolumeArgsOutput
	ToTriggerBuildStepVolumeArgsOutputWithContext(context.Context) TriggerBuildStepVolumeArgsOutput
}

type TriggerBuildStepVolumeArgsArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Path pulumi.StringInput `pulumi:"path"`
}

func (TriggerBuildStepVolumeArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStepVolumeArgs)(nil)).Elem()
}

func (i TriggerBuildStepVolumeArgsArgs) ToTriggerBuildStepVolumeArgsOutput() TriggerBuildStepVolumeArgsOutput {
	return i.ToTriggerBuildStepVolumeArgsOutputWithContext(context.Background())
}

func (i TriggerBuildStepVolumeArgsArgs) ToTriggerBuildStepVolumeArgsOutputWithContext(ctx context.Context) TriggerBuildStepVolumeArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepVolumeArgsOutput)
}

type TriggerBuildStepVolumeArgsArrayInput interface {
	pulumi.Input

	ToTriggerBuildStepVolumeArgsArrayOutput() TriggerBuildStepVolumeArgsArrayOutput
	ToTriggerBuildStepVolumeArgsArrayOutputWithContext(context.Context) TriggerBuildStepVolumeArgsArrayOutput
}

type TriggerBuildStepVolumeArgsArray []TriggerBuildStepVolumeArgsInput

func (TriggerBuildStepVolumeArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStepVolumeArgs)(nil)).Elem()
}

func (i TriggerBuildStepVolumeArgsArray) ToTriggerBuildStepVolumeArgsArrayOutput() TriggerBuildStepVolumeArgsArrayOutput {
	return i.ToTriggerBuildStepVolumeArgsArrayOutputWithContext(context.Background())
}

func (i TriggerBuildStepVolumeArgsArray) ToTriggerBuildStepVolumeArgsArrayOutputWithContext(ctx context.Context) TriggerBuildStepVolumeArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBuildStepVolumeArgsArrayOutput)
}

type TriggerBuildStepVolumeArgsOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepVolumeArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBuildStepVolumeArgs)(nil)).Elem()
}

func (o TriggerBuildStepVolumeArgsOutput) ToTriggerBuildStepVolumeArgsOutput() TriggerBuildStepVolumeArgsOutput {
	return o
}

func (o TriggerBuildStepVolumeArgsOutput) ToTriggerBuildStepVolumeArgsOutputWithContext(ctx context.Context) TriggerBuildStepVolumeArgsOutput {
	return o
}

func (o TriggerBuildStepVolumeArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStepVolumeArgs) string { return v.Name }).(pulumi.StringOutput)
}

func (o TriggerBuildStepVolumeArgsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBuildStepVolumeArgs) string { return v.Path }).(pulumi.StringOutput)
}

type TriggerBuildStepVolumeArgsArrayOutput struct{ *pulumi.OutputState }

func (TriggerBuildStepVolumeArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBuildStepVolumeArgs)(nil)).Elem()
}

func (o TriggerBuildStepVolumeArgsArrayOutput) ToTriggerBuildStepVolumeArgsArrayOutput() TriggerBuildStepVolumeArgsArrayOutput {
	return o
}

func (o TriggerBuildStepVolumeArgsArrayOutput) ToTriggerBuildStepVolumeArgsArrayOutputWithContext(ctx context.Context) TriggerBuildStepVolumeArgsArrayOutput {
	return o
}

func (o TriggerBuildStepVolumeArgsArrayOutput) Index(i pulumi.IntInput) TriggerBuildStepVolumeArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBuildStepVolumeArgs {
		return vs[0].([]TriggerBuildStepVolumeArgs)[vs[1].(int)]
	}).(TriggerBuildStepVolumeArgsOutput)
}

type TriggerGithub struct {
	Name        *string                   `pulumi:"name"`
	Owner       *string                   `pulumi:"owner"`
	PullRequest *TriggerGithubPullRequest `pulumi:"pullRequest"`
	Push        *TriggerGithubPush        `pulumi:"push"`
}

type TriggerGithubInput interface {
	pulumi.Input

	ToTriggerGithubOutput() TriggerGithubOutput
	ToTriggerGithubOutputWithContext(context.Context) TriggerGithubOutput
}

type TriggerGithubArgs struct {
	Name        pulumi.StringPtrInput            `pulumi:"name"`
	Owner       pulumi.StringPtrInput            `pulumi:"owner"`
	PullRequest TriggerGithubPullRequestPtrInput `pulumi:"pullRequest"`
	Push        TriggerGithubPushPtrInput        `pulumi:"push"`
}

func (TriggerGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithub)(nil)).Elem()
}

func (i TriggerGithubArgs) ToTriggerGithubOutput() TriggerGithubOutput {
	return i.ToTriggerGithubOutputWithContext(context.Background())
}

func (i TriggerGithubArgs) ToTriggerGithubOutputWithContext(ctx context.Context) TriggerGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubOutput)
}

func (i TriggerGithubArgs) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return i.ToTriggerGithubPtrOutputWithContext(context.Background())
}

func (i TriggerGithubArgs) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubOutput).ToTriggerGithubPtrOutputWithContext(ctx)
}

type TriggerGithubPtrInput interface {
	pulumi.Input

	ToTriggerGithubPtrOutput() TriggerGithubPtrOutput
	ToTriggerGithubPtrOutputWithContext(context.Context) TriggerGithubPtrOutput
}

type triggerGithubPtrType TriggerGithubArgs

func TriggerGithubPtr(v *TriggerGithubArgs) TriggerGithubPtrInput {
	return (*triggerGithubPtrType)(v)
}

func (*triggerGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithub)(nil)).Elem()
}

func (i *triggerGithubPtrType) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return i.ToTriggerGithubPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPtrType) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPtrOutput)
}

type TriggerGithubOutput struct{ *pulumi.OutputState }

func (TriggerGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithub)(nil)).Elem()
}

func (o TriggerGithubOutput) ToTriggerGithubOutput() TriggerGithubOutput {
	return o
}

func (o TriggerGithubOutput) ToTriggerGithubOutputWithContext(ctx context.Context) TriggerGithubOutput {
	return o
}

func (o TriggerGithubOutput) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return o.ToTriggerGithubPtrOutputWithContext(context.Background())
}

func (o TriggerGithubOutput) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *TriggerGithub {
		return &v
	}).(TriggerGithubPtrOutput)
}
func (o TriggerGithubOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubOutput) PullRequest() TriggerGithubPullRequestPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *TriggerGithubPullRequest { return v.PullRequest }).(TriggerGithubPullRequestPtrOutput)
}

func (o TriggerGithubOutput) Push() TriggerGithubPushPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *TriggerGithubPush { return v.Push }).(TriggerGithubPushPtrOutput)
}

type TriggerGithubPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithub)(nil)).Elem()
}

func (o TriggerGithubPtrOutput) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return o
}

func (o TriggerGithubPtrOutput) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return o
}

func (o TriggerGithubPtrOutput) Elem() TriggerGithubOutput {
	return o.ApplyT(func(v *TriggerGithub) TriggerGithub { return *v }).(TriggerGithubOutput)
}

func (o TriggerGithubPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPtrOutput) PullRequest() TriggerGithubPullRequestPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *TriggerGithubPullRequest { return v.PullRequest }).(TriggerGithubPullRequestPtrOutput)
}

func (o TriggerGithubPtrOutput) Push() TriggerGithubPushPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *TriggerGithubPush { return v.Push }).(TriggerGithubPushPtrOutput)
}

type TriggerGithubArgs struct {
	Name        *string                       `pulumi:"name"`
	Owner       *string                       `pulumi:"owner"`
	PullRequest *TriggerGithubPullRequestArgs `pulumi:"pullRequest"`
	Push        *TriggerGithubPushArgs        `pulumi:"push"`
}

type TriggerGithubArgsInput interface {
	pulumi.Input

	ToTriggerGithubArgsOutput() TriggerGithubArgsOutput
	ToTriggerGithubArgsOutputWithContext(context.Context) TriggerGithubArgsOutput
}

type TriggerGithubArgsArgs struct {
	Name        pulumi.StringPtrInput                `pulumi:"name"`
	Owner       pulumi.StringPtrInput                `pulumi:"owner"`
	PullRequest TriggerGithubPullRequestArgsPtrInput `pulumi:"pullRequest"`
	Push        TriggerGithubPushArgsPtrInput        `pulumi:"push"`
}

func (TriggerGithubArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubArgs)(nil)).Elem()
}

func (i TriggerGithubArgsArgs) ToTriggerGithubArgsOutput() TriggerGithubArgsOutput {
	return i.ToTriggerGithubArgsOutputWithContext(context.Background())
}

func (i TriggerGithubArgsArgs) ToTriggerGithubArgsOutputWithContext(ctx context.Context) TriggerGithubArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubArgsOutput)
}

func (i TriggerGithubArgsArgs) ToTriggerGithubArgsPtrOutput() TriggerGithubArgsPtrOutput {
	return i.ToTriggerGithubArgsPtrOutputWithContext(context.Background())
}

func (i TriggerGithubArgsArgs) ToTriggerGithubArgsPtrOutputWithContext(ctx context.Context) TriggerGithubArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubArgsOutput).ToTriggerGithubArgsPtrOutputWithContext(ctx)
}

type TriggerGithubArgsPtrInput interface {
	pulumi.Input

	ToTriggerGithubArgsPtrOutput() TriggerGithubArgsPtrOutput
	ToTriggerGithubArgsPtrOutputWithContext(context.Context) TriggerGithubArgsPtrOutput
}

type triggerGithubArgsPtrType TriggerGithubArgsArgs

func TriggerGithubArgsPtr(v *TriggerGithubArgsArgs) TriggerGithubArgsPtrInput {
	return (*triggerGithubArgsPtrType)(v)
}

func (*triggerGithubArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubArgs)(nil)).Elem()
}

func (i *triggerGithubArgsPtrType) ToTriggerGithubArgsPtrOutput() TriggerGithubArgsPtrOutput {
	return i.ToTriggerGithubArgsPtrOutputWithContext(context.Background())
}

func (i *triggerGithubArgsPtrType) ToTriggerGithubArgsPtrOutputWithContext(ctx context.Context) TriggerGithubArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubArgsPtrOutput)
}

type TriggerGithubArgsOutput struct{ *pulumi.OutputState }

func (TriggerGithubArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubArgs)(nil)).Elem()
}

func (o TriggerGithubArgsOutput) ToTriggerGithubArgsOutput() TriggerGithubArgsOutput {
	return o
}

func (o TriggerGithubArgsOutput) ToTriggerGithubArgsOutputWithContext(ctx context.Context) TriggerGithubArgsOutput {
	return o
}

func (o TriggerGithubArgsOutput) ToTriggerGithubArgsPtrOutput() TriggerGithubArgsPtrOutput {
	return o.ToTriggerGithubArgsPtrOutputWithContext(context.Background())
}

func (o TriggerGithubArgsOutput) ToTriggerGithubArgsPtrOutputWithContext(ctx context.Context) TriggerGithubArgsPtrOutput {
	return o.ApplyT(func(v TriggerGithubArgs) *TriggerGithubArgs {
		return &v
	}).(TriggerGithubArgsPtrOutput)
}
func (o TriggerGithubArgsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubArgs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubArgsOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubArgs) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubArgsOutput) PullRequest() TriggerGithubPullRequestArgsPtrOutput {
	return o.ApplyT(func(v TriggerGithubArgs) *TriggerGithubPullRequestArgs { return v.PullRequest }).(TriggerGithubPullRequestArgsPtrOutput)
}

func (o TriggerGithubArgsOutput) Push() TriggerGithubPushArgsPtrOutput {
	return o.ApplyT(func(v TriggerGithubArgs) *TriggerGithubPushArgs { return v.Push }).(TriggerGithubPushArgsPtrOutput)
}

type TriggerGithubArgsPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubArgs)(nil)).Elem()
}

func (o TriggerGithubArgsPtrOutput) ToTriggerGithubArgsPtrOutput() TriggerGithubArgsPtrOutput {
	return o
}

func (o TriggerGithubArgsPtrOutput) ToTriggerGithubArgsPtrOutputWithContext(ctx context.Context) TriggerGithubArgsPtrOutput {
	return o
}

func (o TriggerGithubArgsPtrOutput) Elem() TriggerGithubArgsOutput {
	return o.ApplyT(func(v *TriggerGithubArgs) TriggerGithubArgs { return *v }).(TriggerGithubArgsOutput)
}

func (o TriggerGithubArgsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubArgs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubArgsPtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubArgs) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubArgsPtrOutput) PullRequest() TriggerGithubPullRequestArgsPtrOutput {
	return o.ApplyT(func(v TriggerGithubArgs) *TriggerGithubPullRequestArgs { return v.PullRequest }).(TriggerGithubPullRequestArgsPtrOutput)
}

func (o TriggerGithubArgsPtrOutput) Push() TriggerGithubPushArgsPtrOutput {
	return o.ApplyT(func(v TriggerGithubArgs) *TriggerGithubPushArgs { return v.Push }).(TriggerGithubPushArgsPtrOutput)
}

type TriggerGithubPullRequest struct {
	Branch         string  `pulumi:"branch"`
	CommentControl *string `pulumi:"commentControl"`
}

type TriggerGithubPullRequestInput interface {
	pulumi.Input

	ToTriggerGithubPullRequestOutput() TriggerGithubPullRequestOutput
	ToTriggerGithubPullRequestOutputWithContext(context.Context) TriggerGithubPullRequestOutput
}

type TriggerGithubPullRequestArgs struct {
	Branch         pulumi.StringInput    `pulumi:"branch"`
	CommentControl pulumi.StringPtrInput `pulumi:"commentControl"`
}

func (TriggerGithubPullRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPullRequest)(nil)).Elem()
}

func (i TriggerGithubPullRequestArgs) ToTriggerGithubPullRequestOutput() TriggerGithubPullRequestOutput {
	return i.ToTriggerGithubPullRequestOutputWithContext(context.Background())
}

func (i TriggerGithubPullRequestArgs) ToTriggerGithubPullRequestOutputWithContext(ctx context.Context) TriggerGithubPullRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPullRequestOutput)
}

func (i TriggerGithubPullRequestArgs) ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput {
	return i.ToTriggerGithubPullRequestPtrOutputWithContext(context.Background())
}

func (i TriggerGithubPullRequestArgs) ToTriggerGithubPullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPullRequestOutput).ToTriggerGithubPullRequestPtrOutputWithContext(ctx)
}

type TriggerGithubPullRequestPtrInput interface {
	pulumi.Input

	ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput
	ToTriggerGithubPullRequestPtrOutputWithContext(context.Context) TriggerGithubPullRequestPtrOutput
}

type triggerGithubPullRequestPtrType TriggerGithubPullRequestArgs

func TriggerGithubPullRequestPtr(v *TriggerGithubPullRequestArgs) TriggerGithubPullRequestPtrInput {
	return (*triggerGithubPullRequestPtrType)(v)
}

func (*triggerGithubPullRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPullRequest)(nil)).Elem()
}

func (i *triggerGithubPullRequestPtrType) ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput {
	return i.ToTriggerGithubPullRequestPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPullRequestPtrType) ToTriggerGithubPullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPullRequestPtrOutput)
}

type TriggerGithubPullRequestOutput struct{ *pulumi.OutputState }

func (TriggerGithubPullRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPullRequest)(nil)).Elem()
}

func (o TriggerGithubPullRequestOutput) ToTriggerGithubPullRequestOutput() TriggerGithubPullRequestOutput {
	return o
}

func (o TriggerGithubPullRequestOutput) ToTriggerGithubPullRequestOutputWithContext(ctx context.Context) TriggerGithubPullRequestOutput {
	return o
}

func (o TriggerGithubPullRequestOutput) ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput {
	return o.ToTriggerGithubPullRequestPtrOutputWithContext(context.Background())
}

func (o TriggerGithubPullRequestOutput) ToTriggerGithubPullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestPtrOutput {
	return o.ApplyT(func(v TriggerGithubPullRequest) *TriggerGithubPullRequest {
		return &v
	}).(TriggerGithubPullRequestPtrOutput)
}
func (o TriggerGithubPullRequestOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerGithubPullRequest) string { return v.Branch }).(pulumi.StringOutput)
}

func (o TriggerGithubPullRequestOutput) CommentControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPullRequest) *string { return v.CommentControl }).(pulumi.StringPtrOutput)
}

type TriggerGithubPullRequestPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubPullRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPullRequest)(nil)).Elem()
}

func (o TriggerGithubPullRequestPtrOutput) ToTriggerGithubPullRequestPtrOutput() TriggerGithubPullRequestPtrOutput {
	return o
}

func (o TriggerGithubPullRequestPtrOutput) ToTriggerGithubPullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestPtrOutput {
	return o
}

func (o TriggerGithubPullRequestPtrOutput) Elem() TriggerGithubPullRequestOutput {
	return o.ApplyT(func(v *TriggerGithubPullRequest) TriggerGithubPullRequest { return *v }).(TriggerGithubPullRequestOutput)
}

func (o TriggerGithubPullRequestPtrOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerGithubPullRequest) string { return v.Branch }).(pulumi.StringOutput)
}

func (o TriggerGithubPullRequestPtrOutput) CommentControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPullRequest) *string { return v.CommentControl }).(pulumi.StringPtrOutput)
}

type TriggerGithubPullRequestArgs struct {
	Branch         string  `pulumi:"branch"`
	CommentControl *string `pulumi:"commentControl"`
}

type TriggerGithubPullRequestArgsInput interface {
	pulumi.Input

	ToTriggerGithubPullRequestArgsOutput() TriggerGithubPullRequestArgsOutput
	ToTriggerGithubPullRequestArgsOutputWithContext(context.Context) TriggerGithubPullRequestArgsOutput
}

type TriggerGithubPullRequestArgsArgs struct {
	Branch         pulumi.StringInput    `pulumi:"branch"`
	CommentControl pulumi.StringPtrInput `pulumi:"commentControl"`
}

func (TriggerGithubPullRequestArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPullRequestArgs)(nil)).Elem()
}

func (i TriggerGithubPullRequestArgsArgs) ToTriggerGithubPullRequestArgsOutput() TriggerGithubPullRequestArgsOutput {
	return i.ToTriggerGithubPullRequestArgsOutputWithContext(context.Background())
}

func (i TriggerGithubPullRequestArgsArgs) ToTriggerGithubPullRequestArgsOutputWithContext(ctx context.Context) TriggerGithubPullRequestArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPullRequestArgsOutput)
}

func (i TriggerGithubPullRequestArgsArgs) ToTriggerGithubPullRequestArgsPtrOutput() TriggerGithubPullRequestArgsPtrOutput {
	return i.ToTriggerGithubPullRequestArgsPtrOutputWithContext(context.Background())
}

func (i TriggerGithubPullRequestArgsArgs) ToTriggerGithubPullRequestArgsPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPullRequestArgsOutput).ToTriggerGithubPullRequestArgsPtrOutputWithContext(ctx)
}

type TriggerGithubPullRequestArgsPtrInput interface {
	pulumi.Input

	ToTriggerGithubPullRequestArgsPtrOutput() TriggerGithubPullRequestArgsPtrOutput
	ToTriggerGithubPullRequestArgsPtrOutputWithContext(context.Context) TriggerGithubPullRequestArgsPtrOutput
}

type triggerGithubPullRequestArgsPtrType TriggerGithubPullRequestArgsArgs

func TriggerGithubPullRequestArgsPtr(v *TriggerGithubPullRequestArgsArgs) TriggerGithubPullRequestArgsPtrInput {
	return (*triggerGithubPullRequestArgsPtrType)(v)
}

func (*triggerGithubPullRequestArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPullRequestArgs)(nil)).Elem()
}

func (i *triggerGithubPullRequestArgsPtrType) ToTriggerGithubPullRequestArgsPtrOutput() TriggerGithubPullRequestArgsPtrOutput {
	return i.ToTriggerGithubPullRequestArgsPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPullRequestArgsPtrType) ToTriggerGithubPullRequestArgsPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPullRequestArgsPtrOutput)
}

type TriggerGithubPullRequestArgsOutput struct{ *pulumi.OutputState }

func (TriggerGithubPullRequestArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPullRequestArgs)(nil)).Elem()
}

func (o TriggerGithubPullRequestArgsOutput) ToTriggerGithubPullRequestArgsOutput() TriggerGithubPullRequestArgsOutput {
	return o
}

func (o TriggerGithubPullRequestArgsOutput) ToTriggerGithubPullRequestArgsOutputWithContext(ctx context.Context) TriggerGithubPullRequestArgsOutput {
	return o
}

func (o TriggerGithubPullRequestArgsOutput) ToTriggerGithubPullRequestArgsPtrOutput() TriggerGithubPullRequestArgsPtrOutput {
	return o.ToTriggerGithubPullRequestArgsPtrOutputWithContext(context.Background())
}

func (o TriggerGithubPullRequestArgsOutput) ToTriggerGithubPullRequestArgsPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestArgsPtrOutput {
	return o.ApplyT(func(v TriggerGithubPullRequestArgs) *TriggerGithubPullRequestArgs {
		return &v
	}).(TriggerGithubPullRequestArgsPtrOutput)
}
func (o TriggerGithubPullRequestArgsOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerGithubPullRequestArgs) string { return v.Branch }).(pulumi.StringOutput)
}

func (o TriggerGithubPullRequestArgsOutput) CommentControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPullRequestArgs) *string { return v.CommentControl }).(pulumi.StringPtrOutput)
}

type TriggerGithubPullRequestArgsPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubPullRequestArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPullRequestArgs)(nil)).Elem()
}

func (o TriggerGithubPullRequestArgsPtrOutput) ToTriggerGithubPullRequestArgsPtrOutput() TriggerGithubPullRequestArgsPtrOutput {
	return o
}

func (o TriggerGithubPullRequestArgsPtrOutput) ToTriggerGithubPullRequestArgsPtrOutputWithContext(ctx context.Context) TriggerGithubPullRequestArgsPtrOutput {
	return o
}

func (o TriggerGithubPullRequestArgsPtrOutput) Elem() TriggerGithubPullRequestArgsOutput {
	return o.ApplyT(func(v *TriggerGithubPullRequestArgs) TriggerGithubPullRequestArgs { return *v }).(TriggerGithubPullRequestArgsOutput)
}

func (o TriggerGithubPullRequestArgsPtrOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerGithubPullRequestArgs) string { return v.Branch }).(pulumi.StringOutput)
}

func (o TriggerGithubPullRequestArgsPtrOutput) CommentControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPullRequestArgs) *string { return v.CommentControl }).(pulumi.StringPtrOutput)
}

type TriggerGithubPush struct {
	Branch *string `pulumi:"branch"`
	Tag    *string `pulumi:"tag"`
}

type TriggerGithubPushInput interface {
	pulumi.Input

	ToTriggerGithubPushOutput() TriggerGithubPushOutput
	ToTriggerGithubPushOutputWithContext(context.Context) TriggerGithubPushOutput
}

type TriggerGithubPushArgs struct {
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	Tag    pulumi.StringPtrInput `pulumi:"tag"`
}

func (TriggerGithubPushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPush)(nil)).Elem()
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushOutput() TriggerGithubPushOutput {
	return i.ToTriggerGithubPushOutputWithContext(context.Background())
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushOutputWithContext(ctx context.Context) TriggerGithubPushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushOutput)
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return i.ToTriggerGithubPushPtrOutputWithContext(context.Background())
}

func (i TriggerGithubPushArgs) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushOutput).ToTriggerGithubPushPtrOutputWithContext(ctx)
}

type TriggerGithubPushPtrInput interface {
	pulumi.Input

	ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput
	ToTriggerGithubPushPtrOutputWithContext(context.Context) TriggerGithubPushPtrOutput
}

type triggerGithubPushPtrType TriggerGithubPushArgs

func TriggerGithubPushPtr(v *TriggerGithubPushArgs) TriggerGithubPushPtrInput {
	return (*triggerGithubPushPtrType)(v)
}

func (*triggerGithubPushPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPush)(nil)).Elem()
}

func (i *triggerGithubPushPtrType) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return i.ToTriggerGithubPushPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPushPtrType) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushPtrOutput)
}

type TriggerGithubPushOutput struct{ *pulumi.OutputState }

func (TriggerGithubPushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPush)(nil)).Elem()
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushOutput() TriggerGithubPushOutput {
	return o
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushOutputWithContext(ctx context.Context) TriggerGithubPushOutput {
	return o
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return o.ToTriggerGithubPushPtrOutputWithContext(context.Background())
}

func (o TriggerGithubPushOutput) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return o.ApplyT(func(v TriggerGithubPush) *TriggerGithubPush {
		return &v
	}).(TriggerGithubPushPtrOutput)
}
func (o TriggerGithubPushOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPush) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPushOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPush) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type TriggerGithubPushPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubPushPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPush)(nil)).Elem()
}

func (o TriggerGithubPushPtrOutput) ToTriggerGithubPushPtrOutput() TriggerGithubPushPtrOutput {
	return o
}

func (o TriggerGithubPushPtrOutput) ToTriggerGithubPushPtrOutputWithContext(ctx context.Context) TriggerGithubPushPtrOutput {
	return o
}

func (o TriggerGithubPushPtrOutput) Elem() TriggerGithubPushOutput {
	return o.ApplyT(func(v *TriggerGithubPush) TriggerGithubPush { return *v }).(TriggerGithubPushOutput)
}

func (o TriggerGithubPushPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPush) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPushPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPush) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type TriggerGithubPushArgs struct {
	Branch *string `pulumi:"branch"`
	Tag    *string `pulumi:"tag"`
}

type TriggerGithubPushArgsInput interface {
	pulumi.Input

	ToTriggerGithubPushArgsOutput() TriggerGithubPushArgsOutput
	ToTriggerGithubPushArgsOutputWithContext(context.Context) TriggerGithubPushArgsOutput
}

type TriggerGithubPushArgsArgs struct {
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	Tag    pulumi.StringPtrInput `pulumi:"tag"`
}

func (TriggerGithubPushArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPushArgs)(nil)).Elem()
}

func (i TriggerGithubPushArgsArgs) ToTriggerGithubPushArgsOutput() TriggerGithubPushArgsOutput {
	return i.ToTriggerGithubPushArgsOutputWithContext(context.Background())
}

func (i TriggerGithubPushArgsArgs) ToTriggerGithubPushArgsOutputWithContext(ctx context.Context) TriggerGithubPushArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushArgsOutput)
}

func (i TriggerGithubPushArgsArgs) ToTriggerGithubPushArgsPtrOutput() TriggerGithubPushArgsPtrOutput {
	return i.ToTriggerGithubPushArgsPtrOutputWithContext(context.Background())
}

func (i TriggerGithubPushArgsArgs) ToTriggerGithubPushArgsPtrOutputWithContext(ctx context.Context) TriggerGithubPushArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushArgsOutput).ToTriggerGithubPushArgsPtrOutputWithContext(ctx)
}

type TriggerGithubPushArgsPtrInput interface {
	pulumi.Input

	ToTriggerGithubPushArgsPtrOutput() TriggerGithubPushArgsPtrOutput
	ToTriggerGithubPushArgsPtrOutputWithContext(context.Context) TriggerGithubPushArgsPtrOutput
}

type triggerGithubPushArgsPtrType TriggerGithubPushArgsArgs

func TriggerGithubPushArgsPtr(v *TriggerGithubPushArgsArgs) TriggerGithubPushArgsPtrInput {
	return (*triggerGithubPushArgsPtrType)(v)
}

func (*triggerGithubPushArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPushArgs)(nil)).Elem()
}

func (i *triggerGithubPushArgsPtrType) ToTriggerGithubPushArgsPtrOutput() TriggerGithubPushArgsPtrOutput {
	return i.ToTriggerGithubPushArgsPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPushArgsPtrType) ToTriggerGithubPushArgsPtrOutputWithContext(ctx context.Context) TriggerGithubPushArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPushArgsPtrOutput)
}

type TriggerGithubPushArgsOutput struct{ *pulumi.OutputState }

func (TriggerGithubPushArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubPushArgs)(nil)).Elem()
}

func (o TriggerGithubPushArgsOutput) ToTriggerGithubPushArgsOutput() TriggerGithubPushArgsOutput {
	return o
}

func (o TriggerGithubPushArgsOutput) ToTriggerGithubPushArgsOutputWithContext(ctx context.Context) TriggerGithubPushArgsOutput {
	return o
}

func (o TriggerGithubPushArgsOutput) ToTriggerGithubPushArgsPtrOutput() TriggerGithubPushArgsPtrOutput {
	return o.ToTriggerGithubPushArgsPtrOutputWithContext(context.Background())
}

func (o TriggerGithubPushArgsOutput) ToTriggerGithubPushArgsPtrOutputWithContext(ctx context.Context) TriggerGithubPushArgsPtrOutput {
	return o.ApplyT(func(v TriggerGithubPushArgs) *TriggerGithubPushArgs {
		return &v
	}).(TriggerGithubPushArgsPtrOutput)
}
func (o TriggerGithubPushArgsOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPushArgs) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPushArgsOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPushArgs) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type TriggerGithubPushArgsPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubPushArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubPushArgs)(nil)).Elem()
}

func (o TriggerGithubPushArgsPtrOutput) ToTriggerGithubPushArgsPtrOutput() TriggerGithubPushArgsPtrOutput {
	return o
}

func (o TriggerGithubPushArgsPtrOutput) ToTriggerGithubPushArgsPtrOutputWithContext(ctx context.Context) TriggerGithubPushArgsPtrOutput {
	return o
}

func (o TriggerGithubPushArgsPtrOutput) Elem() TriggerGithubPushArgsOutput {
	return o.ApplyT(func(v *TriggerGithubPushArgs) TriggerGithubPushArgs { return *v }).(TriggerGithubPushArgsOutput)
}

func (o TriggerGithubPushArgsPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPushArgs) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPushArgsPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubPushArgs) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type TriggerGithubState struct {
	Name        *string                        `pulumi:"name"`
	Owner       *string                        `pulumi:"owner"`
	PullRequest *TriggerGithubStatePullRequest `pulumi:"pullRequest"`
	Push        *TriggerGithubStatePush        `pulumi:"push"`
}

type TriggerGithubStateInput interface {
	pulumi.Input

	ToTriggerGithubStateOutput() TriggerGithubStateOutput
	ToTriggerGithubStateOutputWithContext(context.Context) TriggerGithubStateOutput
}

type TriggerGithubStateArgs struct {
	Name        pulumi.StringPtrInput                 `pulumi:"name"`
	Owner       pulumi.StringPtrInput                 `pulumi:"owner"`
	PullRequest TriggerGithubStatePullRequestPtrInput `pulumi:"pullRequest"`
	Push        TriggerGithubStatePushPtrInput        `pulumi:"push"`
}

func (TriggerGithubStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubState)(nil)).Elem()
}

func (i TriggerGithubStateArgs) ToTriggerGithubStateOutput() TriggerGithubStateOutput {
	return i.ToTriggerGithubStateOutputWithContext(context.Background())
}

func (i TriggerGithubStateArgs) ToTriggerGithubStateOutputWithContext(ctx context.Context) TriggerGithubStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubStateOutput)
}

type TriggerGithubStateOutput struct{ *pulumi.OutputState }

func (TriggerGithubStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubState)(nil)).Elem()
}

func (o TriggerGithubStateOutput) ToTriggerGithubStateOutput() TriggerGithubStateOutput {
	return o
}

func (o TriggerGithubStateOutput) ToTriggerGithubStateOutputWithContext(ctx context.Context) TriggerGithubStateOutput {
	return o
}

func (o TriggerGithubStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubStateOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubState) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubStateOutput) PullRequest() TriggerGithubStatePullRequestPtrOutput {
	return o.ApplyT(func(v TriggerGithubState) *TriggerGithubStatePullRequest { return v.PullRequest }).(TriggerGithubStatePullRequestPtrOutput)
}

func (o TriggerGithubStateOutput) Push() TriggerGithubStatePushPtrOutput {
	return o.ApplyT(func(v TriggerGithubState) *TriggerGithubStatePush { return v.Push }).(TriggerGithubStatePushPtrOutput)
}

type TriggerGithubStatePullRequest struct {
	Branch         string  `pulumi:"branch"`
	CommentControl *string `pulumi:"commentControl"`
}

type TriggerGithubStatePullRequestInput interface {
	pulumi.Input

	ToTriggerGithubStatePullRequestOutput() TriggerGithubStatePullRequestOutput
	ToTriggerGithubStatePullRequestOutputWithContext(context.Context) TriggerGithubStatePullRequestOutput
}

type TriggerGithubStatePullRequestArgs struct {
	Branch         pulumi.StringInput    `pulumi:"branch"`
	CommentControl pulumi.StringPtrInput `pulumi:"commentControl"`
}

func (TriggerGithubStatePullRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubStatePullRequest)(nil)).Elem()
}

func (i TriggerGithubStatePullRequestArgs) ToTriggerGithubStatePullRequestOutput() TriggerGithubStatePullRequestOutput {
	return i.ToTriggerGithubStatePullRequestOutputWithContext(context.Background())
}

func (i TriggerGithubStatePullRequestArgs) ToTriggerGithubStatePullRequestOutputWithContext(ctx context.Context) TriggerGithubStatePullRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubStatePullRequestOutput)
}

func (i TriggerGithubStatePullRequestArgs) ToTriggerGithubStatePullRequestPtrOutput() TriggerGithubStatePullRequestPtrOutput {
	return i.ToTriggerGithubStatePullRequestPtrOutputWithContext(context.Background())
}

func (i TriggerGithubStatePullRequestArgs) ToTriggerGithubStatePullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubStatePullRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubStatePullRequestOutput).ToTriggerGithubStatePullRequestPtrOutputWithContext(ctx)
}

type TriggerGithubStatePullRequestPtrInput interface {
	pulumi.Input

	ToTriggerGithubStatePullRequestPtrOutput() TriggerGithubStatePullRequestPtrOutput
	ToTriggerGithubStatePullRequestPtrOutputWithContext(context.Context) TriggerGithubStatePullRequestPtrOutput
}

type triggerGithubStatePullRequestPtrType TriggerGithubStatePullRequestArgs

func TriggerGithubStatePullRequestPtr(v *TriggerGithubStatePullRequestArgs) TriggerGithubStatePullRequestPtrInput {
	return (*triggerGithubStatePullRequestPtrType)(v)
}

func (*triggerGithubStatePullRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubStatePullRequest)(nil)).Elem()
}

func (i *triggerGithubStatePullRequestPtrType) ToTriggerGithubStatePullRequestPtrOutput() TriggerGithubStatePullRequestPtrOutput {
	return i.ToTriggerGithubStatePullRequestPtrOutputWithContext(context.Background())
}

func (i *triggerGithubStatePullRequestPtrType) ToTriggerGithubStatePullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubStatePullRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubStatePullRequestPtrOutput)
}

type TriggerGithubStatePullRequestOutput struct{ *pulumi.OutputState }

func (TriggerGithubStatePullRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubStatePullRequest)(nil)).Elem()
}

func (o TriggerGithubStatePullRequestOutput) ToTriggerGithubStatePullRequestOutput() TriggerGithubStatePullRequestOutput {
	return o
}

func (o TriggerGithubStatePullRequestOutput) ToTriggerGithubStatePullRequestOutputWithContext(ctx context.Context) TriggerGithubStatePullRequestOutput {
	return o
}

func (o TriggerGithubStatePullRequestOutput) ToTriggerGithubStatePullRequestPtrOutput() TriggerGithubStatePullRequestPtrOutput {
	return o.ToTriggerGithubStatePullRequestPtrOutputWithContext(context.Background())
}

func (o TriggerGithubStatePullRequestOutput) ToTriggerGithubStatePullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubStatePullRequestPtrOutput {
	return o.ApplyT(func(v TriggerGithubStatePullRequest) *TriggerGithubStatePullRequest {
		return &v
	}).(TriggerGithubStatePullRequestPtrOutput)
}
func (o TriggerGithubStatePullRequestOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerGithubStatePullRequest) string { return v.Branch }).(pulumi.StringOutput)
}

func (o TriggerGithubStatePullRequestOutput) CommentControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubStatePullRequest) *string { return v.CommentControl }).(pulumi.StringPtrOutput)
}

type TriggerGithubStatePullRequestPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubStatePullRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubStatePullRequest)(nil)).Elem()
}

func (o TriggerGithubStatePullRequestPtrOutput) ToTriggerGithubStatePullRequestPtrOutput() TriggerGithubStatePullRequestPtrOutput {
	return o
}

func (o TriggerGithubStatePullRequestPtrOutput) ToTriggerGithubStatePullRequestPtrOutputWithContext(ctx context.Context) TriggerGithubStatePullRequestPtrOutput {
	return o
}

func (o TriggerGithubStatePullRequestPtrOutput) Elem() TriggerGithubStatePullRequestOutput {
	return o.ApplyT(func(v *TriggerGithubStatePullRequest) TriggerGithubStatePullRequest { return *v }).(TriggerGithubStatePullRequestOutput)
}

func (o TriggerGithubStatePullRequestPtrOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerGithubStatePullRequest) string { return v.Branch }).(pulumi.StringOutput)
}

func (o TriggerGithubStatePullRequestPtrOutput) CommentControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubStatePullRequest) *string { return v.CommentControl }).(pulumi.StringPtrOutput)
}

type TriggerGithubStatePush struct {
	Branch *string `pulumi:"branch"`
	Tag    *string `pulumi:"tag"`
}

type TriggerGithubStatePushInput interface {
	pulumi.Input

	ToTriggerGithubStatePushOutput() TriggerGithubStatePushOutput
	ToTriggerGithubStatePushOutputWithContext(context.Context) TriggerGithubStatePushOutput
}

type TriggerGithubStatePushArgs struct {
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	Tag    pulumi.StringPtrInput `pulumi:"tag"`
}

func (TriggerGithubStatePushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubStatePush)(nil)).Elem()
}

func (i TriggerGithubStatePushArgs) ToTriggerGithubStatePushOutput() TriggerGithubStatePushOutput {
	return i.ToTriggerGithubStatePushOutputWithContext(context.Background())
}

func (i TriggerGithubStatePushArgs) ToTriggerGithubStatePushOutputWithContext(ctx context.Context) TriggerGithubStatePushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubStatePushOutput)
}

func (i TriggerGithubStatePushArgs) ToTriggerGithubStatePushPtrOutput() TriggerGithubStatePushPtrOutput {
	return i.ToTriggerGithubStatePushPtrOutputWithContext(context.Background())
}

func (i TriggerGithubStatePushArgs) ToTriggerGithubStatePushPtrOutputWithContext(ctx context.Context) TriggerGithubStatePushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubStatePushOutput).ToTriggerGithubStatePushPtrOutputWithContext(ctx)
}

type TriggerGithubStatePushPtrInput interface {
	pulumi.Input

	ToTriggerGithubStatePushPtrOutput() TriggerGithubStatePushPtrOutput
	ToTriggerGithubStatePushPtrOutputWithContext(context.Context) TriggerGithubStatePushPtrOutput
}

type triggerGithubStatePushPtrType TriggerGithubStatePushArgs

func TriggerGithubStatePushPtr(v *TriggerGithubStatePushArgs) TriggerGithubStatePushPtrInput {
	return (*triggerGithubStatePushPtrType)(v)
}

func (*triggerGithubStatePushPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubStatePush)(nil)).Elem()
}

func (i *triggerGithubStatePushPtrType) ToTriggerGithubStatePushPtrOutput() TriggerGithubStatePushPtrOutput {
	return i.ToTriggerGithubStatePushPtrOutputWithContext(context.Background())
}

func (i *triggerGithubStatePushPtrType) ToTriggerGithubStatePushPtrOutputWithContext(ctx context.Context) TriggerGithubStatePushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubStatePushPtrOutput)
}

type TriggerGithubStatePushOutput struct{ *pulumi.OutputState }

func (TriggerGithubStatePushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithubStatePush)(nil)).Elem()
}

func (o TriggerGithubStatePushOutput) ToTriggerGithubStatePushOutput() TriggerGithubStatePushOutput {
	return o
}

func (o TriggerGithubStatePushOutput) ToTriggerGithubStatePushOutputWithContext(ctx context.Context) TriggerGithubStatePushOutput {
	return o
}

func (o TriggerGithubStatePushOutput) ToTriggerGithubStatePushPtrOutput() TriggerGithubStatePushPtrOutput {
	return o.ToTriggerGithubStatePushPtrOutputWithContext(context.Background())
}

func (o TriggerGithubStatePushOutput) ToTriggerGithubStatePushPtrOutputWithContext(ctx context.Context) TriggerGithubStatePushPtrOutput {
	return o.ApplyT(func(v TriggerGithubStatePush) *TriggerGithubStatePush {
		return &v
	}).(TriggerGithubStatePushPtrOutput)
}
func (o TriggerGithubStatePushOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubStatePush) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubStatePushOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubStatePush) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type TriggerGithubStatePushPtrOutput struct{ *pulumi.OutputState }

func (TriggerGithubStatePushPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithubStatePush)(nil)).Elem()
}

func (o TriggerGithubStatePushPtrOutput) ToTriggerGithubStatePushPtrOutput() TriggerGithubStatePushPtrOutput {
	return o
}

func (o TriggerGithubStatePushPtrOutput) ToTriggerGithubStatePushPtrOutputWithContext(ctx context.Context) TriggerGithubStatePushPtrOutput {
	return o
}

func (o TriggerGithubStatePushPtrOutput) Elem() TriggerGithubStatePushOutput {
	return o.ApplyT(func(v *TriggerGithubStatePush) TriggerGithubStatePush { return *v }).(TriggerGithubStatePushOutput)
}

func (o TriggerGithubStatePushPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubStatePush) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubStatePushPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerGithubStatePush) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type TriggerTriggerTemplate struct {
	BranchName *string `pulumi:"branchName"`
	CommitSha  *string `pulumi:"commitSha"`
	Dir        *string `pulumi:"dir"`
	ProjectId  string  `pulumi:"projectId"`
	RepoName   *string `pulumi:"repoName"`
	TagName    *string `pulumi:"tagName"`
}

type TriggerTriggerTemplateInput interface {
	pulumi.Input

	ToTriggerTriggerTemplateOutput() TriggerTriggerTemplateOutput
	ToTriggerTriggerTemplateOutputWithContext(context.Context) TriggerTriggerTemplateOutput
}

type TriggerTriggerTemplateArgs struct {
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	CommitSha  pulumi.StringPtrInput `pulumi:"commitSha"`
	Dir        pulumi.StringPtrInput `pulumi:"dir"`
	ProjectId  pulumi.StringInput    `pulumi:"projectId"`
	RepoName   pulumi.StringPtrInput `pulumi:"repoName"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
}

func (TriggerTriggerTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTriggerTemplate)(nil)).Elem()
}

func (i TriggerTriggerTemplateArgs) ToTriggerTriggerTemplateOutput() TriggerTriggerTemplateOutput {
	return i.ToTriggerTriggerTemplateOutputWithContext(context.Background())
}

func (i TriggerTriggerTemplateArgs) ToTriggerTriggerTemplateOutputWithContext(ctx context.Context) TriggerTriggerTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplateOutput)
}

func (i TriggerTriggerTemplateArgs) ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput {
	return i.ToTriggerTriggerTemplatePtrOutputWithContext(context.Background())
}

func (i TriggerTriggerTemplateArgs) ToTriggerTriggerTemplatePtrOutputWithContext(ctx context.Context) TriggerTriggerTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplateOutput).ToTriggerTriggerTemplatePtrOutputWithContext(ctx)
}

type TriggerTriggerTemplatePtrInput interface {
	pulumi.Input

	ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput
	ToTriggerTriggerTemplatePtrOutputWithContext(context.Context) TriggerTriggerTemplatePtrOutput
}

type triggerTriggerTemplatePtrType TriggerTriggerTemplateArgs

func TriggerTriggerTemplatePtr(v *TriggerTriggerTemplateArgs) TriggerTriggerTemplatePtrInput {
	return (*triggerTriggerTemplatePtrType)(v)
}

func (*triggerTriggerTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTriggerTemplate)(nil)).Elem()
}

func (i *triggerTriggerTemplatePtrType) ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput {
	return i.ToTriggerTriggerTemplatePtrOutputWithContext(context.Background())
}

func (i *triggerTriggerTemplatePtrType) ToTriggerTriggerTemplatePtrOutputWithContext(ctx context.Context) TriggerTriggerTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplatePtrOutput)
}

type TriggerTriggerTemplateOutput struct{ *pulumi.OutputState }

func (TriggerTriggerTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTriggerTemplate)(nil)).Elem()
}

func (o TriggerTriggerTemplateOutput) ToTriggerTriggerTemplateOutput() TriggerTriggerTemplateOutput {
	return o
}

func (o TriggerTriggerTemplateOutput) ToTriggerTriggerTemplateOutputWithContext(ctx context.Context) TriggerTriggerTemplateOutput {
	return o
}

func (o TriggerTriggerTemplateOutput) ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput {
	return o.ToTriggerTriggerTemplatePtrOutputWithContext(context.Background())
}

func (o TriggerTriggerTemplateOutput) ToTriggerTriggerTemplatePtrOutputWithContext(ctx context.Context) TriggerTriggerTemplatePtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *TriggerTriggerTemplate {
		return &v
	}).(TriggerTriggerTemplatePtrOutput)
}
func (o TriggerTriggerTemplateOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateOutput) CommitSha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.CommitSha }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o TriggerTriggerTemplateOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type TriggerTriggerTemplatePtrOutput struct{ *pulumi.OutputState }

func (TriggerTriggerTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTriggerTemplate)(nil)).Elem()
}

func (o TriggerTriggerTemplatePtrOutput) ToTriggerTriggerTemplatePtrOutput() TriggerTriggerTemplatePtrOutput {
	return o
}

func (o TriggerTriggerTemplatePtrOutput) ToTriggerTriggerTemplatePtrOutputWithContext(ctx context.Context) TriggerTriggerTemplatePtrOutput {
	return o
}

func (o TriggerTriggerTemplatePtrOutput) Elem() TriggerTriggerTemplateOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplate) TriggerTriggerTemplate { return *v }).(TriggerTriggerTemplateOutput)
}

func (o TriggerTriggerTemplatePtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplatePtrOutput) CommitSha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.CommitSha }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplatePtrOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplatePtrOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o TriggerTriggerTemplatePtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplatePtrOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplate) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type TriggerTriggerTemplateArgs struct {
	BranchName *string `pulumi:"branchName"`
	CommitSha  *string `pulumi:"commitSha"`
	Dir        *string `pulumi:"dir"`
	ProjectId  *string `pulumi:"projectId"`
	RepoName   *string `pulumi:"repoName"`
	TagName    *string `pulumi:"tagName"`
}

type TriggerTriggerTemplateArgsInput interface {
	pulumi.Input

	ToTriggerTriggerTemplateArgsOutput() TriggerTriggerTemplateArgsOutput
	ToTriggerTriggerTemplateArgsOutputWithContext(context.Context) TriggerTriggerTemplateArgsOutput
}

type TriggerTriggerTemplateArgsArgs struct {
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	CommitSha  pulumi.StringPtrInput `pulumi:"commitSha"`
	Dir        pulumi.StringPtrInput `pulumi:"dir"`
	ProjectId  pulumi.StringPtrInput `pulumi:"projectId"`
	RepoName   pulumi.StringPtrInput `pulumi:"repoName"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
}

func (TriggerTriggerTemplateArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTriggerTemplateArgs)(nil)).Elem()
}

func (i TriggerTriggerTemplateArgsArgs) ToTriggerTriggerTemplateArgsOutput() TriggerTriggerTemplateArgsOutput {
	return i.ToTriggerTriggerTemplateArgsOutputWithContext(context.Background())
}

func (i TriggerTriggerTemplateArgsArgs) ToTriggerTriggerTemplateArgsOutputWithContext(ctx context.Context) TriggerTriggerTemplateArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplateArgsOutput)
}

func (i TriggerTriggerTemplateArgsArgs) ToTriggerTriggerTemplateArgsPtrOutput() TriggerTriggerTemplateArgsPtrOutput {
	return i.ToTriggerTriggerTemplateArgsPtrOutputWithContext(context.Background())
}

func (i TriggerTriggerTemplateArgsArgs) ToTriggerTriggerTemplateArgsPtrOutputWithContext(ctx context.Context) TriggerTriggerTemplateArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplateArgsOutput).ToTriggerTriggerTemplateArgsPtrOutputWithContext(ctx)
}

type TriggerTriggerTemplateArgsPtrInput interface {
	pulumi.Input

	ToTriggerTriggerTemplateArgsPtrOutput() TriggerTriggerTemplateArgsPtrOutput
	ToTriggerTriggerTemplateArgsPtrOutputWithContext(context.Context) TriggerTriggerTemplateArgsPtrOutput
}

type triggerTriggerTemplateArgsPtrType TriggerTriggerTemplateArgsArgs

func TriggerTriggerTemplateArgsPtr(v *TriggerTriggerTemplateArgsArgs) TriggerTriggerTemplateArgsPtrInput {
	return (*triggerTriggerTemplateArgsPtrType)(v)
}

func (*triggerTriggerTemplateArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTriggerTemplateArgs)(nil)).Elem()
}

func (i *triggerTriggerTemplateArgsPtrType) ToTriggerTriggerTemplateArgsPtrOutput() TriggerTriggerTemplateArgsPtrOutput {
	return i.ToTriggerTriggerTemplateArgsPtrOutputWithContext(context.Background())
}

func (i *triggerTriggerTemplateArgsPtrType) ToTriggerTriggerTemplateArgsPtrOutputWithContext(ctx context.Context) TriggerTriggerTemplateArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplateArgsPtrOutput)
}

type TriggerTriggerTemplateArgsOutput struct{ *pulumi.OutputState }

func (TriggerTriggerTemplateArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTriggerTemplateArgs)(nil)).Elem()
}

func (o TriggerTriggerTemplateArgsOutput) ToTriggerTriggerTemplateArgsOutput() TriggerTriggerTemplateArgsOutput {
	return o
}

func (o TriggerTriggerTemplateArgsOutput) ToTriggerTriggerTemplateArgsOutputWithContext(ctx context.Context) TriggerTriggerTemplateArgsOutput {
	return o
}

func (o TriggerTriggerTemplateArgsOutput) ToTriggerTriggerTemplateArgsPtrOutput() TriggerTriggerTemplateArgsPtrOutput {
	return o.ToTriggerTriggerTemplateArgsPtrOutputWithContext(context.Background())
}

func (o TriggerTriggerTemplateArgsOutput) ToTriggerTriggerTemplateArgsPtrOutputWithContext(ctx context.Context) TriggerTriggerTemplateArgsPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *TriggerTriggerTemplateArgs {
		return &v
	}).(TriggerTriggerTemplateArgsPtrOutput)
}
func (o TriggerTriggerTemplateArgsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsOutput) CommitSha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.CommitSha }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type TriggerTriggerTemplateArgsPtrOutput struct{ *pulumi.OutputState }

func (TriggerTriggerTemplateArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTriggerTemplateArgs)(nil)).Elem()
}

func (o TriggerTriggerTemplateArgsPtrOutput) ToTriggerTriggerTemplateArgsPtrOutput() TriggerTriggerTemplateArgsPtrOutput {
	return o
}

func (o TriggerTriggerTemplateArgsPtrOutput) ToTriggerTriggerTemplateArgsPtrOutputWithContext(ctx context.Context) TriggerTriggerTemplateArgsPtrOutput {
	return o
}

func (o TriggerTriggerTemplateArgsPtrOutput) Elem() TriggerTriggerTemplateArgsOutput {
	return o.ApplyT(func(v *TriggerTriggerTemplateArgs) TriggerTriggerTemplateArgs { return *v }).(TriggerTriggerTemplateArgsOutput)
}

func (o TriggerTriggerTemplateArgsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsPtrOutput) CommitSha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.CommitSha }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsPtrOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateArgsPtrOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateArgs) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type TriggerTriggerTemplateState struct {
	BranchName *string `pulumi:"branchName"`
	CommitSha  *string `pulumi:"commitSha"`
	Dir        *string `pulumi:"dir"`
	ProjectId  *string `pulumi:"projectId"`
	RepoName   *string `pulumi:"repoName"`
	TagName    *string `pulumi:"tagName"`
}

type TriggerTriggerTemplateStateInput interface {
	pulumi.Input

	ToTriggerTriggerTemplateStateOutput() TriggerTriggerTemplateStateOutput
	ToTriggerTriggerTemplateStateOutputWithContext(context.Context) TriggerTriggerTemplateStateOutput
}

type TriggerTriggerTemplateStateArgs struct {
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	CommitSha  pulumi.StringPtrInput `pulumi:"commitSha"`
	Dir        pulumi.StringPtrInput `pulumi:"dir"`
	ProjectId  pulumi.StringPtrInput `pulumi:"projectId"`
	RepoName   pulumi.StringPtrInput `pulumi:"repoName"`
	TagName    pulumi.StringPtrInput `pulumi:"tagName"`
}

func (TriggerTriggerTemplateStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTriggerTemplateState)(nil)).Elem()
}

func (i TriggerTriggerTemplateStateArgs) ToTriggerTriggerTemplateStateOutput() TriggerTriggerTemplateStateOutput {
	return i.ToTriggerTriggerTemplateStateOutputWithContext(context.Background())
}

func (i TriggerTriggerTemplateStateArgs) ToTriggerTriggerTemplateStateOutputWithContext(ctx context.Context) TriggerTriggerTemplateStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerTemplateStateOutput)
}

type TriggerTriggerTemplateStateOutput struct{ *pulumi.OutputState }

func (TriggerTriggerTemplateStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTriggerTemplateState)(nil)).Elem()
}

func (o TriggerTriggerTemplateStateOutput) ToTriggerTriggerTemplateStateOutput() TriggerTriggerTemplateStateOutput {
	return o
}

func (o TriggerTriggerTemplateStateOutput) ToTriggerTriggerTemplateStateOutputWithContext(ctx context.Context) TriggerTriggerTemplateStateOutput {
	return o
}

func (o TriggerTriggerTemplateStateOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateState) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateStateOutput) CommitSha() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateState) *string { return v.CommitSha }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateStateOutput) Dir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateState) *string { return v.Dir }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateStateOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateState) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateStateOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateState) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

func (o TriggerTriggerTemplateStateOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTriggerTemplateState) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(TriggerBuildOutput{})
	pulumi.RegisterOutputType(TriggerBuildPtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildArgsOutput{})
	pulumi.RegisterOutputType(TriggerBuildArgsPtrOutput{})
	pulumi.RegisterOutputType(TriggerBuildStateOutput{})
	pulumi.RegisterOutputType(TriggerBuildStateStepOutput{})
	pulumi.RegisterOutputType(TriggerBuildStateStepArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildStateStepVolumeOutput{})
	pulumi.RegisterOutputType(TriggerBuildStateStepVolumeArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepArgsOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepArgsArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepVolumeOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepVolumeArrayOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepVolumeArgsOutput{})
	pulumi.RegisterOutputType(TriggerBuildStepVolumeArgsArrayOutput{})
	pulumi.RegisterOutputType(TriggerGithubOutput{})
	pulumi.RegisterOutputType(TriggerGithubPtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubArgsOutput{})
	pulumi.RegisterOutputType(TriggerGithubArgsPtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubPullRequestOutput{})
	pulumi.RegisterOutputType(TriggerGithubPullRequestPtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubPullRequestArgsOutput{})
	pulumi.RegisterOutputType(TriggerGithubPullRequestArgsPtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubPushOutput{})
	pulumi.RegisterOutputType(TriggerGithubPushPtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubPushArgsOutput{})
	pulumi.RegisterOutputType(TriggerGithubPushArgsPtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubStateOutput{})
	pulumi.RegisterOutputType(TriggerGithubStatePullRequestOutput{})
	pulumi.RegisterOutputType(TriggerGithubStatePullRequestPtrOutput{})
	pulumi.RegisterOutputType(TriggerGithubStatePushOutput{})
	pulumi.RegisterOutputType(TriggerGithubStatePushPtrOutput{})
	pulumi.RegisterOutputType(TriggerTriggerTemplateOutput{})
	pulumi.RegisterOutputType(TriggerTriggerTemplatePtrOutput{})
	pulumi.RegisterOutputType(TriggerTriggerTemplateArgsOutput{})
	pulumi.RegisterOutputType(TriggerTriggerTemplateArgsPtrOutput{})
	pulumi.RegisterOutputType(TriggerTriggerTemplateStateOutput{})
}
