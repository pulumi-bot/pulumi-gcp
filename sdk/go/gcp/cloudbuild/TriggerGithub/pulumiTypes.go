// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TriggerGithub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/cloudbuild/TriggerGithubPullRequest"
	"https:/github.com/pulumi/pulumi-gcp/cloudbuild/TriggerGithubPush"
)

type TriggerGithub struct {
	Name *string `pulumi:"name"`
	Owner *string `pulumi:"owner"`
	PullRequest *cloudbuildTriggerGithubPullRequest.TriggerGithubPullRequest `pulumi:"pullRequest"`
	Push *cloudbuildTriggerGithubPush.TriggerGithubPush `pulumi:"push"`
}

type TriggerGithubInput interface {
	pulumi.Input

	ToTriggerGithubOutput() TriggerGithubOutput
	ToTriggerGithubOutputWithContext(context.Context) TriggerGithubOutput
}

type TriggerGithubArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	PullRequest cloudbuildTriggerGithubPullRequest.TriggerGithubPullRequestPtrInput `pulumi:"pullRequest"`
	Push cloudbuildTriggerGithubPush.TriggerGithubPushPtrInput `pulumi:"push"`
}

func (TriggerGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithub)(nil)).Elem()
}

func (i TriggerGithubArgs) ToTriggerGithubOutput() TriggerGithubOutput {
	return i.ToTriggerGithubOutputWithContext(context.Background())
}

func (i TriggerGithubArgs) ToTriggerGithubOutputWithContext(ctx context.Context) TriggerGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubOutput)
}

func (i TriggerGithubArgs) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return i.ToTriggerGithubPtrOutputWithContext(context.Background())
}

func (i TriggerGithubArgs) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubOutput).ToTriggerGithubPtrOutputWithContext(ctx)
}

type TriggerGithubPtrInput interface {
	pulumi.Input

	ToTriggerGithubPtrOutput() TriggerGithubPtrOutput
	ToTriggerGithubPtrOutputWithContext(context.Context) TriggerGithubPtrOutput
}

type triggerGithubPtrType TriggerGithubArgs

func TriggerGithubPtr(v *TriggerGithubArgs) TriggerGithubPtrInput {	return (*triggerGithubPtrType)(v)
}

func (*triggerGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithub)(nil)).Elem()
}

func (i *triggerGithubPtrType) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return i.ToTriggerGithubPtrOutputWithContext(context.Background())
}

func (i *triggerGithubPtrType) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerGithubPtrOutput)
}

type TriggerGithubOutput struct { *pulumi.OutputState }

func (TriggerGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerGithub)(nil)).Elem()
}

func (o TriggerGithubOutput) ToTriggerGithubOutput() TriggerGithubOutput {
	return o
}

func (o TriggerGithubOutput) ToTriggerGithubOutputWithContext(ctx context.Context) TriggerGithubOutput {
	return o
}

func (o TriggerGithubOutput) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return o.ToTriggerGithubPtrOutputWithContext(context.Background())
}

func (o TriggerGithubOutput) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return o.ApplyT(func(v TriggerGithub) *TriggerGithub {
		return &v
	}).(TriggerGithubPtrOutput)
}
func (o TriggerGithubOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerGithub) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubOutput) PullRequest() cloudbuildTriggerGithubPullRequest.TriggerGithubPullRequestPtrOutput {
	return o.ApplyT(func (v TriggerGithub) *cloudbuildTriggerGithubPullRequest.TriggerGithubPullRequest { return v.PullRequest }).(cloudbuildTriggerGithubPullRequest.TriggerGithubPullRequestPtrOutput)
}

func (o TriggerGithubOutput) Push() cloudbuildTriggerGithubPush.TriggerGithubPushPtrOutput {
	return o.ApplyT(func (v TriggerGithub) *cloudbuildTriggerGithubPush.TriggerGithubPush { return v.Push }).(cloudbuildTriggerGithubPush.TriggerGithubPushPtrOutput)
}

type TriggerGithubPtrOutput struct { *pulumi.OutputState}

func (TriggerGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerGithub)(nil)).Elem()
}

func (o TriggerGithubPtrOutput) ToTriggerGithubPtrOutput() TriggerGithubPtrOutput {
	return o
}

func (o TriggerGithubPtrOutput) ToTriggerGithubPtrOutputWithContext(ctx context.Context) TriggerGithubPtrOutput {
	return o
}

func (o TriggerGithubPtrOutput) Elem() TriggerGithubOutput {
	return o.ApplyT(func (v *TriggerGithub) TriggerGithub { return *v }).(TriggerGithubOutput)
}

func (o TriggerGithubPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerGithub) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerGithub) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o TriggerGithubPtrOutput) PullRequest() cloudbuildTriggerGithubPullRequest.TriggerGithubPullRequestPtrOutput {
	return o.ApplyT(func (v TriggerGithub) *cloudbuildTriggerGithubPullRequest.TriggerGithubPullRequest { return v.PullRequest }).(cloudbuildTriggerGithubPullRequest.TriggerGithubPullRequestPtrOutput)
}

func (o TriggerGithubPtrOutput) Push() cloudbuildTriggerGithubPush.TriggerGithubPushPtrOutput {
	return o.ApplyT(func (v TriggerGithub) *cloudbuildTriggerGithubPush.TriggerGithubPush { return v.Push }).(cloudbuildTriggerGithubPush.TriggerGithubPushPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(TriggerGithubOutput{})
	pulumi.RegisterOutputType(TriggerGithubPtrOutput{})
}
