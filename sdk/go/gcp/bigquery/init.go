// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bigquery

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "gcp:bigquery/appProfile:AppProfile":
		r, err = NewAppProfile(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/connection:Connection":
		r, err = NewConnection(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/dataTransferConfig:DataTransferConfig":
		r, err = NewDataTransferConfig(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/dataset:Dataset":
		r, err = NewDataset(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/datasetAccess:DatasetAccess":
		r, err = NewDatasetAccess(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/datasetIamBinding:DatasetIamBinding":
		r, err = NewDatasetIamBinding(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/datasetIamMember:DatasetIamMember":
		r, err = NewDatasetIamMember(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/datasetIamPolicy:DatasetIamPolicy":
		r, err = NewDatasetIamPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/iamBinding:IamBinding":
		r, err = NewIamBinding(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/iamMember:IamMember":
		r, err = NewIamMember(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/iamPolicy:IamPolicy":
		r, err = NewIamPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/job:Job":
		r, err = NewJob(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/reservation:Reservation":
		r, err = NewReservation(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/routine:Routine":
		r, err = NewRoutine(ctx, name, nil, pulumi.URN_(urn))
	case "gcp:bigquery/table:Table":
		r, err = NewTable(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := gcp.PkgVersion()
	if err != nil {
		panic(fmt.Errorf("failed to determine package version: %v", err))
	}
	pulumi.RegisterResourceModule(
		"gcp",
		"bigquery/appProfile",
		&module{version},
	)
}
