// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type IAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type IAMBindingConditionInput interface {
	pulumi.Input

	ToIAMBindingConditionOutput() IAMBindingConditionOutput
	ToIAMBindingConditionOutputWithContext(context.Context) IAMBindingConditionOutput
}

type IAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (IAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingCondition)(nil)).Elem()
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionOutput() IAMBindingConditionOutput {
	return i.ToIAMBindingConditionOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionOutputWithContext(ctx context.Context) IAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionOutput)
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return i.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgs) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionOutput).ToIAMBindingConditionPtrOutputWithContext(ctx)
}

type IAMBindingConditionPtrInput interface {
	pulumi.Input

	ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput
	ToIAMBindingConditionPtrOutputWithContext(context.Context) IAMBindingConditionPtrOutput
}

type iambindingConditionPtrType IAMBindingConditionArgs

func IAMBindingConditionPtr(v *IAMBindingConditionArgs) IAMBindingConditionPtrInput {
	return (*iambindingConditionPtrType)(v)
}

func (*iambindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingCondition)(nil)).Elem()
}

func (i *iambindingConditionPtrType) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return i.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *iambindingConditionPtrType) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionPtrOutput)
}

type IAMBindingConditionOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingCondition)(nil)).Elem()
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionOutput() IAMBindingConditionOutput {
	return o
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionOutputWithContext(ctx context.Context) IAMBindingConditionOutput {
	return o
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return o.ToIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o IAMBindingConditionOutput) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return o.ApplyT(func(v IAMBindingCondition) *IAMBindingCondition {
		return &v
	}).(IAMBindingConditionPtrOutput)
}
func (o IAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingCondition)(nil)).Elem()
}

func (o IAMBindingConditionPtrOutput) ToIAMBindingConditionPtrOutput() IAMBindingConditionPtrOutput {
	return o
}

func (o IAMBindingConditionPtrOutput) ToIAMBindingConditionPtrOutputWithContext(ctx context.Context) IAMBindingConditionPtrOutput {
	return o
}

func (o IAMBindingConditionPtrOutput) Elem() IAMBindingConditionOutput {
	return o.ApplyT(func(v *IAMBindingCondition) IAMBindingCondition { return *v }).(IAMBindingConditionOutput)
}

func (o IAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type IAMBindingConditionArgsInput interface {
	pulumi.Input

	ToIAMBindingConditionArgsOutput() IAMBindingConditionArgsOutput
	ToIAMBindingConditionArgsOutputWithContext(context.Context) IAMBindingConditionArgsOutput
}

type IAMBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (IAMBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingConditionArgs)(nil)).Elem()
}

func (i IAMBindingConditionArgsArgs) ToIAMBindingConditionArgsOutput() IAMBindingConditionArgsOutput {
	return i.ToIAMBindingConditionArgsOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgsArgs) ToIAMBindingConditionArgsOutputWithContext(ctx context.Context) IAMBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionArgsOutput)
}

func (i IAMBindingConditionArgsArgs) ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput {
	return i.ToIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i IAMBindingConditionArgsArgs) ToIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) IAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionArgsOutput).ToIAMBindingConditionArgsPtrOutputWithContext(ctx)
}

type IAMBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput
	ToIAMBindingConditionArgsPtrOutputWithContext(context.Context) IAMBindingConditionArgsPtrOutput
}

type iambindingConditionArgsPtrType IAMBindingConditionArgsArgs

func IAMBindingConditionArgsPtr(v *IAMBindingConditionArgsArgs) IAMBindingConditionArgsPtrInput {
	return (*iambindingConditionArgsPtrType)(v)
}

func (*iambindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingConditionArgs)(nil)).Elem()
}

func (i *iambindingConditionArgsPtrType) ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput {
	return i.ToIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *iambindingConditionArgsPtrType) ToIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) IAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionArgsPtrOutput)
}

type IAMBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingConditionArgs)(nil)).Elem()
}

func (o IAMBindingConditionArgsOutput) ToIAMBindingConditionArgsOutput() IAMBindingConditionArgsOutput {
	return o
}

func (o IAMBindingConditionArgsOutput) ToIAMBindingConditionArgsOutputWithContext(ctx context.Context) IAMBindingConditionArgsOutput {
	return o
}

func (o IAMBindingConditionArgsOutput) ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput {
	return o.ToIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o IAMBindingConditionArgsOutput) ToIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) IAMBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) *IAMBindingConditionArgs {
		return &v
	}).(IAMBindingConditionArgsPtrOutput)
}
func (o IAMBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMBindingConditionArgs)(nil)).Elem()
}

func (o IAMBindingConditionArgsPtrOutput) ToIAMBindingConditionArgsPtrOutput() IAMBindingConditionArgsPtrOutput {
	return o
}

func (o IAMBindingConditionArgsPtrOutput) ToIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) IAMBindingConditionArgsPtrOutput {
	return o
}

func (o IAMBindingConditionArgsPtrOutput) Elem() IAMBindingConditionArgsOutput {
	return o.ApplyT(func(v *IAMBindingConditionArgs) IAMBindingConditionArgs { return *v }).(IAMBindingConditionArgsOutput)
}

func (o IAMBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type IAMBindingConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type IAMBindingConditionStateInput interface {
	pulumi.Input

	ToIAMBindingConditionStateOutput() IAMBindingConditionStateOutput
	ToIAMBindingConditionStateOutputWithContext(context.Context) IAMBindingConditionStateOutput
}

type IAMBindingConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (IAMBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingConditionState)(nil)).Elem()
}

func (i IAMBindingConditionStateArgs) ToIAMBindingConditionStateOutput() IAMBindingConditionStateOutput {
	return i.ToIAMBindingConditionStateOutputWithContext(context.Background())
}

func (i IAMBindingConditionStateArgs) ToIAMBindingConditionStateOutputWithContext(ctx context.Context) IAMBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMBindingConditionStateOutput)
}

type IAMBindingConditionStateOutput struct{ *pulumi.OutputState }

func (IAMBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMBindingConditionState)(nil)).Elem()
}

func (o IAMBindingConditionStateOutput) ToIAMBindingConditionStateOutput() IAMBindingConditionStateOutput {
	return o
}

func (o IAMBindingConditionStateOutput) ToIAMBindingConditionStateOutputWithContext(ctx context.Context) IAMBindingConditionStateOutput {
	return o
}

func (o IAMBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type IAMMemberConditionInput interface {
	pulumi.Input

	ToIAMMemberConditionOutput() IAMMemberConditionOutput
	ToIAMMemberConditionOutputWithContext(context.Context) IAMMemberConditionOutput
}

type IAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (IAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberCondition)(nil)).Elem()
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionOutput() IAMMemberConditionOutput {
	return i.ToIAMMemberConditionOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionOutputWithContext(ctx context.Context) IAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionOutput)
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return i.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgs) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionOutput).ToIAMMemberConditionPtrOutputWithContext(ctx)
}

type IAMMemberConditionPtrInput interface {
	pulumi.Input

	ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput
	ToIAMMemberConditionPtrOutputWithContext(context.Context) IAMMemberConditionPtrOutput
}

type iammemberConditionPtrType IAMMemberConditionArgs

func IAMMemberConditionPtr(v *IAMMemberConditionArgs) IAMMemberConditionPtrInput {
	return (*iammemberConditionPtrType)(v)
}

func (*iammemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberCondition)(nil)).Elem()
}

func (i *iammemberConditionPtrType) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return i.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *iammemberConditionPtrType) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionPtrOutput)
}

type IAMMemberConditionOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberCondition)(nil)).Elem()
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionOutput() IAMMemberConditionOutput {
	return o
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionOutputWithContext(ctx context.Context) IAMMemberConditionOutput {
	return o
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return o.ToIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o IAMMemberConditionOutput) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return o.ApplyT(func(v IAMMemberCondition) *IAMMemberCondition {
		return &v
	}).(IAMMemberConditionPtrOutput)
}
func (o IAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberCondition)(nil)).Elem()
}

func (o IAMMemberConditionPtrOutput) ToIAMMemberConditionPtrOutput() IAMMemberConditionPtrOutput {
	return o
}

func (o IAMMemberConditionPtrOutput) ToIAMMemberConditionPtrOutputWithContext(ctx context.Context) IAMMemberConditionPtrOutput {
	return o
}

func (o IAMMemberConditionPtrOutput) Elem() IAMMemberConditionOutput {
	return o.ApplyT(func(v *IAMMemberCondition) IAMMemberCondition { return *v }).(IAMMemberConditionOutput)
}

func (o IAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type IAMMemberConditionArgsInput interface {
	pulumi.Input

	ToIAMMemberConditionArgsOutput() IAMMemberConditionArgsOutput
	ToIAMMemberConditionArgsOutputWithContext(context.Context) IAMMemberConditionArgsOutput
}

type IAMMemberConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (IAMMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberConditionArgs)(nil)).Elem()
}

func (i IAMMemberConditionArgsArgs) ToIAMMemberConditionArgsOutput() IAMMemberConditionArgsOutput {
	return i.ToIAMMemberConditionArgsOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgsArgs) ToIAMMemberConditionArgsOutputWithContext(ctx context.Context) IAMMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionArgsOutput)
}

func (i IAMMemberConditionArgsArgs) ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput {
	return i.ToIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i IAMMemberConditionArgsArgs) ToIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) IAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionArgsOutput).ToIAMMemberConditionArgsPtrOutputWithContext(ctx)
}

type IAMMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput
	ToIAMMemberConditionArgsPtrOutputWithContext(context.Context) IAMMemberConditionArgsPtrOutput
}

type iammemberConditionArgsPtrType IAMMemberConditionArgsArgs

func IAMMemberConditionArgsPtr(v *IAMMemberConditionArgsArgs) IAMMemberConditionArgsPtrInput {
	return (*iammemberConditionArgsPtrType)(v)
}

func (*iammemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberConditionArgs)(nil)).Elem()
}

func (i *iammemberConditionArgsPtrType) ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput {
	return i.ToIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *iammemberConditionArgsPtrType) ToIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) IAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionArgsPtrOutput)
}

type IAMMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberConditionArgs)(nil)).Elem()
}

func (o IAMMemberConditionArgsOutput) ToIAMMemberConditionArgsOutput() IAMMemberConditionArgsOutput {
	return o
}

func (o IAMMemberConditionArgsOutput) ToIAMMemberConditionArgsOutputWithContext(ctx context.Context) IAMMemberConditionArgsOutput {
	return o
}

func (o IAMMemberConditionArgsOutput) ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput {
	return o.ToIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o IAMMemberConditionArgsOutput) ToIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) IAMMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) *IAMMemberConditionArgs {
		return &v
	}).(IAMMemberConditionArgsPtrOutput)
}
func (o IAMMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IAMMemberConditionArgs)(nil)).Elem()
}

func (o IAMMemberConditionArgsPtrOutput) ToIAMMemberConditionArgsPtrOutput() IAMMemberConditionArgsPtrOutput {
	return o
}

func (o IAMMemberConditionArgsPtrOutput) ToIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) IAMMemberConditionArgsPtrOutput {
	return o
}

func (o IAMMemberConditionArgsPtrOutput) Elem() IAMMemberConditionArgsOutput {
	return o.ApplyT(func(v *IAMMemberConditionArgs) IAMMemberConditionArgs { return *v }).(IAMMemberConditionArgsOutput)
}

func (o IAMMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type IAMMemberConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type IAMMemberConditionStateInput interface {
	pulumi.Input

	ToIAMMemberConditionStateOutput() IAMMemberConditionStateOutput
	ToIAMMemberConditionStateOutputWithContext(context.Context) IAMMemberConditionStateOutput
}

type IAMMemberConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (IAMMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberConditionState)(nil)).Elem()
}

func (i IAMMemberConditionStateArgs) ToIAMMemberConditionStateOutput() IAMMemberConditionStateOutput {
	return i.ToIAMMemberConditionStateOutputWithContext(context.Background())
}

func (i IAMMemberConditionStateArgs) ToIAMMemberConditionStateOutputWithContext(ctx context.Context) IAMMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IAMMemberConditionStateOutput)
}

type IAMMemberConditionStateOutput struct{ *pulumi.OutputState }

func (IAMMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IAMMemberConditionState)(nil)).Elem()
}

func (o IAMMemberConditionStateOutput) ToIAMMemberConditionStateOutput() IAMMemberConditionStateOutput {
	return o
}

func (o IAMMemberConditionStateOutput) ToIAMMemberConditionStateOutputWithContext(ctx context.Context) IAMMemberConditionStateOutput {
	return o
}

func (o IAMMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IAMMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IAMMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IAMMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IAMMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type IamAuditConfigAuditLogConfig struct {
	// Identities that do not cause logging for this type of permission.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType string `pulumi:"logType"`
}

type IamAuditConfigAuditLogConfigInput interface {
	pulumi.Input

	ToIamAuditConfigAuditLogConfigOutput() IamAuditConfigAuditLogConfigOutput
	ToIamAuditConfigAuditLogConfigOutputWithContext(context.Context) IamAuditConfigAuditLogConfigOutput
}

type IamAuditConfigAuditLogConfigArgs struct {
	// Identities that do not cause logging for this type of permission.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (IamAuditConfigAuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IamAuditConfigAuditLogConfigArgs) ToIamAuditConfigAuditLogConfigOutput() IamAuditConfigAuditLogConfigOutput {
	return i.ToIamAuditConfigAuditLogConfigOutputWithContext(context.Background())
}

func (i IamAuditConfigAuditLogConfigArgs) ToIamAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuditConfigAuditLogConfigOutput)
}

type IamAuditConfigAuditLogConfigArrayInput interface {
	pulumi.Input

	ToIamAuditConfigAuditLogConfigArrayOutput() IamAuditConfigAuditLogConfigArrayOutput
	ToIamAuditConfigAuditLogConfigArrayOutputWithContext(context.Context) IamAuditConfigAuditLogConfigArrayOutput
}

type IamAuditConfigAuditLogConfigArray []IamAuditConfigAuditLogConfigInput

func (IamAuditConfigAuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i IamAuditConfigAuditLogConfigArray) ToIamAuditConfigAuditLogConfigArrayOutput() IamAuditConfigAuditLogConfigArrayOutput {
	return i.ToIamAuditConfigAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i IamAuditConfigAuditLogConfigArray) ToIamAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuditConfigAuditLogConfigArrayOutput)
}

type IamAuditConfigAuditLogConfigOutput struct{ *pulumi.OutputState }

func (IamAuditConfigAuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IamAuditConfigAuditLogConfigOutput) ToIamAuditConfigAuditLogConfigOutput() IamAuditConfigAuditLogConfigOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigOutput) ToIamAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigOutput {
	return o
}

// Identities that do not cause logging for this type of permission.
// Each entry can have one of the following values:
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
func (o IamAuditConfigAuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamAuditConfigAuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
func (o IamAuditConfigAuditLogConfigOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v IamAuditConfigAuditLogConfig) string { return v.LogType }).(pulumi.StringOutput)
}

type IamAuditConfigAuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (IamAuditConfigAuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o IamAuditConfigAuditLogConfigArrayOutput) ToIamAuditConfigAuditLogConfigArrayOutput() IamAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigArrayOutput) ToIamAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigArrayOutput) Index(i pulumi.IntInput) IamAuditConfigAuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamAuditConfigAuditLogConfig {
		return vs[0].([]IamAuditConfigAuditLogConfig)[vs[1].(int)]
	}).(IamAuditConfigAuditLogConfigOutput)
}

type IamAuditConfigAuditLogConfigArgs struct {
	// Identities that do not cause logging for this type of permission.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType string `pulumi:"logType"`
}

type IamAuditConfigAuditLogConfigArgsInput interface {
	pulumi.Input

	ToIamAuditConfigAuditLogConfigArgsOutput() IamAuditConfigAuditLogConfigArgsOutput
	ToIamAuditConfigAuditLogConfigArgsOutputWithContext(context.Context) IamAuditConfigAuditLogConfigArgsOutput
}

type IamAuditConfigAuditLogConfigArgsArgs struct {
	// Identities that do not cause logging for this type of permission.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (IamAuditConfigAuditLogConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (i IamAuditConfigAuditLogConfigArgsArgs) ToIamAuditConfigAuditLogConfigArgsOutput() IamAuditConfigAuditLogConfigArgsOutput {
	return i.ToIamAuditConfigAuditLogConfigArgsOutputWithContext(context.Background())
}

func (i IamAuditConfigAuditLogConfigArgsArgs) ToIamAuditConfigAuditLogConfigArgsOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuditConfigAuditLogConfigArgsOutput)
}

type IamAuditConfigAuditLogConfigArgsArrayInput interface {
	pulumi.Input

	ToIamAuditConfigAuditLogConfigArgsArrayOutput() IamAuditConfigAuditLogConfigArgsArrayOutput
	ToIamAuditConfigAuditLogConfigArgsArrayOutputWithContext(context.Context) IamAuditConfigAuditLogConfigArgsArrayOutput
}

type IamAuditConfigAuditLogConfigArgsArray []IamAuditConfigAuditLogConfigArgsInput

func (IamAuditConfigAuditLogConfigArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (i IamAuditConfigAuditLogConfigArgsArray) ToIamAuditConfigAuditLogConfigArgsArrayOutput() IamAuditConfigAuditLogConfigArgsArrayOutput {
	return i.ToIamAuditConfigAuditLogConfigArgsArrayOutputWithContext(context.Background())
}

func (i IamAuditConfigAuditLogConfigArgsArray) ToIamAuditConfigAuditLogConfigArgsArrayOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuditConfigAuditLogConfigArgsArrayOutput)
}

type IamAuditConfigAuditLogConfigArgsOutput struct{ *pulumi.OutputState }

func (IamAuditConfigAuditLogConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (o IamAuditConfigAuditLogConfigArgsOutput) ToIamAuditConfigAuditLogConfigArgsOutput() IamAuditConfigAuditLogConfigArgsOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigArgsOutput) ToIamAuditConfigAuditLogConfigArgsOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigArgsOutput {
	return o
}

// Identities that do not cause logging for this type of permission.
// Each entry can have one of the following values:
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
func (o IamAuditConfigAuditLogConfigArgsOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamAuditConfigAuditLogConfigArgs) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
func (o IamAuditConfigAuditLogConfigArgsOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v IamAuditConfigAuditLogConfigArgs) string { return v.LogType }).(pulumi.StringOutput)
}

type IamAuditConfigAuditLogConfigArgsArrayOutput struct{ *pulumi.OutputState }

func (IamAuditConfigAuditLogConfigArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (o IamAuditConfigAuditLogConfigArgsArrayOutput) ToIamAuditConfigAuditLogConfigArgsArrayOutput() IamAuditConfigAuditLogConfigArgsArrayOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigArgsArrayOutput) ToIamAuditConfigAuditLogConfigArgsArrayOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigArgsArrayOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigArgsArrayOutput) Index(i pulumi.IntInput) IamAuditConfigAuditLogConfigArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamAuditConfigAuditLogConfigArgs {
		return vs[0].([]IamAuditConfigAuditLogConfigArgs)[vs[1].(int)]
	}).(IamAuditConfigAuditLogConfigArgsOutput)
}

type IamAuditConfigAuditLogConfigState struct {
	// Identities that do not cause logging for this type of permission.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType string `pulumi:"logType"`
}

type IamAuditConfigAuditLogConfigStateInput interface {
	pulumi.Input

	ToIamAuditConfigAuditLogConfigStateOutput() IamAuditConfigAuditLogConfigStateOutput
	ToIamAuditConfigAuditLogConfigStateOutputWithContext(context.Context) IamAuditConfigAuditLogConfigStateOutput
}

type IamAuditConfigAuditLogConfigStateArgs struct {
	// Identities that do not cause logging for this type of permission.
	// Each entry can have one of the following values:
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (IamAuditConfigAuditLogConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuditConfigAuditLogConfigState)(nil)).Elem()
}

func (i IamAuditConfigAuditLogConfigStateArgs) ToIamAuditConfigAuditLogConfigStateOutput() IamAuditConfigAuditLogConfigStateOutput {
	return i.ToIamAuditConfigAuditLogConfigStateOutputWithContext(context.Background())
}

func (i IamAuditConfigAuditLogConfigStateArgs) ToIamAuditConfigAuditLogConfigStateOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuditConfigAuditLogConfigStateOutput)
}

type IamAuditConfigAuditLogConfigStateArrayInput interface {
	pulumi.Input

	ToIamAuditConfigAuditLogConfigStateArrayOutput() IamAuditConfigAuditLogConfigStateArrayOutput
	ToIamAuditConfigAuditLogConfigStateArrayOutputWithContext(context.Context) IamAuditConfigAuditLogConfigStateArrayOutput
}

type IamAuditConfigAuditLogConfigStateArray []IamAuditConfigAuditLogConfigStateInput

func (IamAuditConfigAuditLogConfigStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuditConfigAuditLogConfigState)(nil)).Elem()
}

func (i IamAuditConfigAuditLogConfigStateArray) ToIamAuditConfigAuditLogConfigStateArrayOutput() IamAuditConfigAuditLogConfigStateArrayOutput {
	return i.ToIamAuditConfigAuditLogConfigStateArrayOutputWithContext(context.Background())
}

func (i IamAuditConfigAuditLogConfigStateArray) ToIamAuditConfigAuditLogConfigStateArrayOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuditConfigAuditLogConfigStateArrayOutput)
}

type IamAuditConfigAuditLogConfigStateOutput struct{ *pulumi.OutputState }

func (IamAuditConfigAuditLogConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuditConfigAuditLogConfigState)(nil)).Elem()
}

func (o IamAuditConfigAuditLogConfigStateOutput) ToIamAuditConfigAuditLogConfigStateOutput() IamAuditConfigAuditLogConfigStateOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigStateOutput) ToIamAuditConfigAuditLogConfigStateOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigStateOutput {
	return o
}

// Identities that do not cause logging for this type of permission.
// Each entry can have one of the following values:
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
func (o IamAuditConfigAuditLogConfigStateOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamAuditConfigAuditLogConfigState) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
func (o IamAuditConfigAuditLogConfigStateOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v IamAuditConfigAuditLogConfigState) string { return v.LogType }).(pulumi.StringOutput)
}

type IamAuditConfigAuditLogConfigStateArrayOutput struct{ *pulumi.OutputState }

func (IamAuditConfigAuditLogConfigStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuditConfigAuditLogConfigState)(nil)).Elem()
}

func (o IamAuditConfigAuditLogConfigStateArrayOutput) ToIamAuditConfigAuditLogConfigStateArrayOutput() IamAuditConfigAuditLogConfigStateArrayOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigStateArrayOutput) ToIamAuditConfigAuditLogConfigStateArrayOutputWithContext(ctx context.Context) IamAuditConfigAuditLogConfigStateArrayOutput {
	return o
}

func (o IamAuditConfigAuditLogConfigStateArrayOutput) Index(i pulumi.IntInput) IamAuditConfigAuditLogConfigStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamAuditConfigAuditLogConfigState {
		return vs[0].([]IamAuditConfigAuditLogConfigState)[vs[1].(int)]
	}).(IamAuditConfigAuditLogConfigStateOutput)
}

type PolicyBooleanPolicy struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced bool `pulumi:"enforced"`
}

type PolicyBooleanPolicyInput interface {
	pulumi.Input

	ToPolicyBooleanPolicyOutput() PolicyBooleanPolicyOutput
	ToPolicyBooleanPolicyOutputWithContext(context.Context) PolicyBooleanPolicyOutput
}

type PolicyBooleanPolicyArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (PolicyBooleanPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBooleanPolicy)(nil)).Elem()
}

func (i PolicyBooleanPolicyArgs) ToPolicyBooleanPolicyOutput() PolicyBooleanPolicyOutput {
	return i.ToPolicyBooleanPolicyOutputWithContext(context.Background())
}

func (i PolicyBooleanPolicyArgs) ToPolicyBooleanPolicyOutputWithContext(ctx context.Context) PolicyBooleanPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyOutput)
}

func (i PolicyBooleanPolicyArgs) ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput {
	return i.ToPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyBooleanPolicyArgs) ToPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyOutput).ToPolicyBooleanPolicyPtrOutputWithContext(ctx)
}

type PolicyBooleanPolicyPtrInput interface {
	pulumi.Input

	ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput
	ToPolicyBooleanPolicyPtrOutputWithContext(context.Context) PolicyBooleanPolicyPtrOutput
}

type policyBooleanPolicyPtrType PolicyBooleanPolicyArgs

func PolicyBooleanPolicyPtr(v *PolicyBooleanPolicyArgs) PolicyBooleanPolicyPtrInput {
	return (*policyBooleanPolicyPtrType)(v)
}

func (*policyBooleanPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBooleanPolicy)(nil)).Elem()
}

func (i *policyBooleanPolicyPtrType) ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput {
	return i.ToPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (i *policyBooleanPolicyPtrType) ToPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyPtrOutput)
}

type PolicyBooleanPolicyOutput struct{ *pulumi.OutputState }

func (PolicyBooleanPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBooleanPolicy)(nil)).Elem()
}

func (o PolicyBooleanPolicyOutput) ToPolicyBooleanPolicyOutput() PolicyBooleanPolicyOutput {
	return o
}

func (o PolicyBooleanPolicyOutput) ToPolicyBooleanPolicyOutputWithContext(ctx context.Context) PolicyBooleanPolicyOutput {
	return o
}

func (o PolicyBooleanPolicyOutput) ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput {
	return o.ToPolicyBooleanPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyBooleanPolicyOutput) ToPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyPtrOutput {
	return o.ApplyT(func(v PolicyBooleanPolicy) *PolicyBooleanPolicy {
		return &v
	}).(PolicyBooleanPolicyPtrOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o PolicyBooleanPolicyOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyBooleanPolicy) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type PolicyBooleanPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyBooleanPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBooleanPolicy)(nil)).Elem()
}

func (o PolicyBooleanPolicyPtrOutput) ToPolicyBooleanPolicyPtrOutput() PolicyBooleanPolicyPtrOutput {
	return o
}

func (o PolicyBooleanPolicyPtrOutput) ToPolicyBooleanPolicyPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyPtrOutput {
	return o
}

func (o PolicyBooleanPolicyPtrOutput) Elem() PolicyBooleanPolicyOutput {
	return o.ApplyT(func(v *PolicyBooleanPolicy) PolicyBooleanPolicy { return *v }).(PolicyBooleanPolicyOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o PolicyBooleanPolicyPtrOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyBooleanPolicy) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type PolicyBooleanPolicyArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced bool `pulumi:"enforced"`
}

type PolicyBooleanPolicyArgsInput interface {
	pulumi.Input

	ToPolicyBooleanPolicyArgsOutput() PolicyBooleanPolicyArgsOutput
	ToPolicyBooleanPolicyArgsOutputWithContext(context.Context) PolicyBooleanPolicyArgsOutput
}

type PolicyBooleanPolicyArgsArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (PolicyBooleanPolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBooleanPolicyArgs)(nil)).Elem()
}

func (i PolicyBooleanPolicyArgsArgs) ToPolicyBooleanPolicyArgsOutput() PolicyBooleanPolicyArgsOutput {
	return i.ToPolicyBooleanPolicyArgsOutputWithContext(context.Background())
}

func (i PolicyBooleanPolicyArgsArgs) ToPolicyBooleanPolicyArgsOutputWithContext(ctx context.Context) PolicyBooleanPolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyArgsOutput)
}

func (i PolicyBooleanPolicyArgsArgs) ToPolicyBooleanPolicyArgsPtrOutput() PolicyBooleanPolicyArgsPtrOutput {
	return i.ToPolicyBooleanPolicyArgsPtrOutputWithContext(context.Background())
}

func (i PolicyBooleanPolicyArgsArgs) ToPolicyBooleanPolicyArgsPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyArgsOutput).ToPolicyBooleanPolicyArgsPtrOutputWithContext(ctx)
}

type PolicyBooleanPolicyArgsPtrInput interface {
	pulumi.Input

	ToPolicyBooleanPolicyArgsPtrOutput() PolicyBooleanPolicyArgsPtrOutput
	ToPolicyBooleanPolicyArgsPtrOutputWithContext(context.Context) PolicyBooleanPolicyArgsPtrOutput
}

type policyBooleanPolicyArgsPtrType PolicyBooleanPolicyArgsArgs

func PolicyBooleanPolicyArgsPtr(v *PolicyBooleanPolicyArgsArgs) PolicyBooleanPolicyArgsPtrInput {
	return (*policyBooleanPolicyArgsPtrType)(v)
}

func (*policyBooleanPolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBooleanPolicyArgs)(nil)).Elem()
}

func (i *policyBooleanPolicyArgsPtrType) ToPolicyBooleanPolicyArgsPtrOutput() PolicyBooleanPolicyArgsPtrOutput {
	return i.ToPolicyBooleanPolicyArgsPtrOutputWithContext(context.Background())
}

func (i *policyBooleanPolicyArgsPtrType) ToPolicyBooleanPolicyArgsPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyArgsPtrOutput)
}

type PolicyBooleanPolicyArgsOutput struct{ *pulumi.OutputState }

func (PolicyBooleanPolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBooleanPolicyArgs)(nil)).Elem()
}

func (o PolicyBooleanPolicyArgsOutput) ToPolicyBooleanPolicyArgsOutput() PolicyBooleanPolicyArgsOutput {
	return o
}

func (o PolicyBooleanPolicyArgsOutput) ToPolicyBooleanPolicyArgsOutputWithContext(ctx context.Context) PolicyBooleanPolicyArgsOutput {
	return o
}

func (o PolicyBooleanPolicyArgsOutput) ToPolicyBooleanPolicyArgsPtrOutput() PolicyBooleanPolicyArgsPtrOutput {
	return o.ToPolicyBooleanPolicyArgsPtrOutputWithContext(context.Background())
}

func (o PolicyBooleanPolicyArgsOutput) ToPolicyBooleanPolicyArgsPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyArgsPtrOutput {
	return o.ApplyT(func(v PolicyBooleanPolicyArgs) *PolicyBooleanPolicyArgs {
		return &v
	}).(PolicyBooleanPolicyArgsPtrOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o PolicyBooleanPolicyArgsOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyBooleanPolicyArgs) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type PolicyBooleanPolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (PolicyBooleanPolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyBooleanPolicyArgs)(nil)).Elem()
}

func (o PolicyBooleanPolicyArgsPtrOutput) ToPolicyBooleanPolicyArgsPtrOutput() PolicyBooleanPolicyArgsPtrOutput {
	return o
}

func (o PolicyBooleanPolicyArgsPtrOutput) ToPolicyBooleanPolicyArgsPtrOutputWithContext(ctx context.Context) PolicyBooleanPolicyArgsPtrOutput {
	return o
}

func (o PolicyBooleanPolicyArgsPtrOutput) Elem() PolicyBooleanPolicyArgsOutput {
	return o.ApplyT(func(v *PolicyBooleanPolicyArgs) PolicyBooleanPolicyArgs { return *v }).(PolicyBooleanPolicyArgsOutput)
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o PolicyBooleanPolicyArgsPtrOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyBooleanPolicyArgs) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type PolicyBooleanPolicyState struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced bool `pulumi:"enforced"`
}

type PolicyBooleanPolicyStateInput interface {
	pulumi.Input

	ToPolicyBooleanPolicyStateOutput() PolicyBooleanPolicyStateOutput
	ToPolicyBooleanPolicyStateOutputWithContext(context.Context) PolicyBooleanPolicyStateOutput
}

type PolicyBooleanPolicyStateArgs struct {
	// If true, then the Policy is enforced. If false, then any configuration is acceptable.
	Enforced pulumi.BoolInput `pulumi:"enforced"`
}

func (PolicyBooleanPolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBooleanPolicyState)(nil)).Elem()
}

func (i PolicyBooleanPolicyStateArgs) ToPolicyBooleanPolicyStateOutput() PolicyBooleanPolicyStateOutput {
	return i.ToPolicyBooleanPolicyStateOutputWithContext(context.Background())
}

func (i PolicyBooleanPolicyStateArgs) ToPolicyBooleanPolicyStateOutputWithContext(ctx context.Context) PolicyBooleanPolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBooleanPolicyStateOutput)
}

type PolicyBooleanPolicyStateOutput struct{ *pulumi.OutputState }

func (PolicyBooleanPolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBooleanPolicyState)(nil)).Elem()
}

func (o PolicyBooleanPolicyStateOutput) ToPolicyBooleanPolicyStateOutput() PolicyBooleanPolicyStateOutput {
	return o
}

func (o PolicyBooleanPolicyStateOutput) ToPolicyBooleanPolicyStateOutputWithContext(ctx context.Context) PolicyBooleanPolicyStateOutput {
	return o
}

// If true, then the Policy is enforced. If false, then any configuration is acceptable.
func (o PolicyBooleanPolicyStateOutput) Enforced() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyBooleanPolicyState) bool { return v.Enforced }).(pulumi.BoolOutput)
}

type PolicyListPolicy struct {
	Allow *PolicyListPolicyAllow `pulumi:"allow"`
	Deny  *PolicyListPolicyDeny  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent *bool `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue string `pulumi:"suggestedValue"`
}

type PolicyListPolicyInput interface {
	pulumi.Input

	ToPolicyListPolicyOutput() PolicyListPolicyOutput
	ToPolicyListPolicyOutputWithContext(context.Context) PolicyListPolicyOutput
}

type PolicyListPolicyArgs struct {
	Allow PolicyListPolicyAllowPtrInput `pulumi:"allow"`
	Deny  PolicyListPolicyDenyPtrInput  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent pulumi.BoolPtrInput `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue pulumi.StringInput `pulumi:"suggestedValue"`
}

func (PolicyListPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicy)(nil)).Elem()
}

func (i PolicyListPolicyArgs) ToPolicyListPolicyOutput() PolicyListPolicyOutput {
	return i.ToPolicyListPolicyOutputWithContext(context.Background())
}

func (i PolicyListPolicyArgs) ToPolicyListPolicyOutputWithContext(ctx context.Context) PolicyListPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyOutput)
}

func (i PolicyListPolicyArgs) ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput {
	return i.ToPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyArgs) ToPolicyListPolicyPtrOutputWithContext(ctx context.Context) PolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyOutput).ToPolicyListPolicyPtrOutputWithContext(ctx)
}

type PolicyListPolicyPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput
	ToPolicyListPolicyPtrOutputWithContext(context.Context) PolicyListPolicyPtrOutput
}

type policyListPolicyPtrType PolicyListPolicyArgs

func PolicyListPolicyPtr(v *PolicyListPolicyArgs) PolicyListPolicyPtrInput {
	return (*policyListPolicyPtrType)(v)
}

func (*policyListPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicy)(nil)).Elem()
}

func (i *policyListPolicyPtrType) ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput {
	return i.ToPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyPtrType) ToPolicyListPolicyPtrOutputWithContext(ctx context.Context) PolicyListPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyPtrOutput)
}

type PolicyListPolicyOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicy)(nil)).Elem()
}

func (o PolicyListPolicyOutput) ToPolicyListPolicyOutput() PolicyListPolicyOutput {
	return o
}

func (o PolicyListPolicyOutput) ToPolicyListPolicyOutputWithContext(ctx context.Context) PolicyListPolicyOutput {
	return o
}

func (o PolicyListPolicyOutput) ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput {
	return o.ToPolicyListPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyOutput) ToPolicyListPolicyPtrOutputWithContext(ctx context.Context) PolicyListPolicyPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *PolicyListPolicy {
		return &v
	}).(PolicyListPolicyPtrOutput)
}
func (o PolicyListPolicyOutput) Allow() PolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *PolicyListPolicyAllow { return v.Allow }).(PolicyListPolicyAllowPtrOutput)
}

func (o PolicyListPolicyOutput) Deny() PolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *PolicyListPolicyDeny { return v.Deny }).(PolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o PolicyListPolicyOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o PolicyListPolicyOutput) SuggestedValue() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyListPolicy) string { return v.SuggestedValue }).(pulumi.StringOutput)
}

type PolicyListPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicy)(nil)).Elem()
}

func (o PolicyListPolicyPtrOutput) ToPolicyListPolicyPtrOutput() PolicyListPolicyPtrOutput {
	return o
}

func (o PolicyListPolicyPtrOutput) ToPolicyListPolicyPtrOutputWithContext(ctx context.Context) PolicyListPolicyPtrOutput {
	return o
}

func (o PolicyListPolicyPtrOutput) Elem() PolicyListPolicyOutput {
	return o.ApplyT(func(v *PolicyListPolicy) PolicyListPolicy { return *v }).(PolicyListPolicyOutput)
}

func (o PolicyListPolicyPtrOutput) Allow() PolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *PolicyListPolicyAllow { return v.Allow }).(PolicyListPolicyAllowPtrOutput)
}

func (o PolicyListPolicyPtrOutput) Deny() PolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *PolicyListPolicyDeny { return v.Deny }).(PolicyListPolicyDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o PolicyListPolicyPtrOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicy) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o PolicyListPolicyPtrOutput) SuggestedValue() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyListPolicy) string { return v.SuggestedValue }).(pulumi.StringOutput)
}

type PolicyListPolicyAllow struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type PolicyListPolicyAllowInput interface {
	pulumi.Input

	ToPolicyListPolicyAllowOutput() PolicyListPolicyAllowOutput
	ToPolicyListPolicyAllowOutputWithContext(context.Context) PolicyListPolicyAllowOutput
}

type PolicyListPolicyAllowArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyListPolicyAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyAllow)(nil)).Elem()
}

func (i PolicyListPolicyAllowArgs) ToPolicyListPolicyAllowOutput() PolicyListPolicyAllowOutput {
	return i.ToPolicyListPolicyAllowOutputWithContext(context.Background())
}

func (i PolicyListPolicyAllowArgs) ToPolicyListPolicyAllowOutputWithContext(ctx context.Context) PolicyListPolicyAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyAllowOutput)
}

func (i PolicyListPolicyAllowArgs) ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput {
	return i.ToPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyAllowArgs) ToPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyAllowOutput).ToPolicyListPolicyAllowPtrOutputWithContext(ctx)
}

type PolicyListPolicyAllowPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput
	ToPolicyListPolicyAllowPtrOutputWithContext(context.Context) PolicyListPolicyAllowPtrOutput
}

type policyListPolicyAllowPtrType PolicyListPolicyAllowArgs

func PolicyListPolicyAllowPtr(v *PolicyListPolicyAllowArgs) PolicyListPolicyAllowPtrInput {
	return (*policyListPolicyAllowPtrType)(v)
}

func (*policyListPolicyAllowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyAllow)(nil)).Elem()
}

func (i *policyListPolicyAllowPtrType) ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput {
	return i.ToPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyAllowPtrType) ToPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyAllowPtrOutput)
}

type PolicyListPolicyAllowOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyAllow)(nil)).Elem()
}

func (o PolicyListPolicyAllowOutput) ToPolicyListPolicyAllowOutput() PolicyListPolicyAllowOutput {
	return o
}

func (o PolicyListPolicyAllowOutput) ToPolicyListPolicyAllowOutputWithContext(ctx context.Context) PolicyListPolicyAllowOutput {
	return o
}

func (o PolicyListPolicyAllowOutput) ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput {
	return o.ToPolicyListPolicyAllowPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyAllowOutput) ToPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyAllow) *PolicyListPolicyAllow {
		return &v
	}).(PolicyListPolicyAllowPtrOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyAllowOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyAllowOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyAllowPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyAllowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyAllow)(nil)).Elem()
}

func (o PolicyListPolicyAllowPtrOutput) ToPolicyListPolicyAllowPtrOutput() PolicyListPolicyAllowPtrOutput {
	return o
}

func (o PolicyListPolicyAllowPtrOutput) ToPolicyListPolicyAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowPtrOutput {
	return o
}

func (o PolicyListPolicyAllowPtrOutput) Elem() PolicyListPolicyAllowOutput {
	return o.ApplyT(func(v *PolicyListPolicyAllow) PolicyListPolicyAllow { return *v }).(PolicyListPolicyAllowOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyAllowPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyAllowPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyAllowArgs struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type PolicyListPolicyAllowArgsInput interface {
	pulumi.Input

	ToPolicyListPolicyAllowArgsOutput() PolicyListPolicyAllowArgsOutput
	ToPolicyListPolicyAllowArgsOutputWithContext(context.Context) PolicyListPolicyAllowArgsOutput
}

type PolicyListPolicyAllowArgsArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyListPolicyAllowArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyAllowArgs)(nil)).Elem()
}

func (i PolicyListPolicyAllowArgsArgs) ToPolicyListPolicyAllowArgsOutput() PolicyListPolicyAllowArgsOutput {
	return i.ToPolicyListPolicyAllowArgsOutputWithContext(context.Background())
}

func (i PolicyListPolicyAllowArgsArgs) ToPolicyListPolicyAllowArgsOutputWithContext(ctx context.Context) PolicyListPolicyAllowArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyAllowArgsOutput)
}

func (i PolicyListPolicyAllowArgsArgs) ToPolicyListPolicyAllowArgsPtrOutput() PolicyListPolicyAllowArgsPtrOutput {
	return i.ToPolicyListPolicyAllowArgsPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyAllowArgsArgs) ToPolicyListPolicyAllowArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyAllowArgsOutput).ToPolicyListPolicyAllowArgsPtrOutputWithContext(ctx)
}

type PolicyListPolicyAllowArgsPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyAllowArgsPtrOutput() PolicyListPolicyAllowArgsPtrOutput
	ToPolicyListPolicyAllowArgsPtrOutputWithContext(context.Context) PolicyListPolicyAllowArgsPtrOutput
}

type policyListPolicyAllowArgsPtrType PolicyListPolicyAllowArgsArgs

func PolicyListPolicyAllowArgsPtr(v *PolicyListPolicyAllowArgsArgs) PolicyListPolicyAllowArgsPtrInput {
	return (*policyListPolicyAllowArgsPtrType)(v)
}

func (*policyListPolicyAllowArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyAllowArgs)(nil)).Elem()
}

func (i *policyListPolicyAllowArgsPtrType) ToPolicyListPolicyAllowArgsPtrOutput() PolicyListPolicyAllowArgsPtrOutput {
	return i.ToPolicyListPolicyAllowArgsPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyAllowArgsPtrType) ToPolicyListPolicyAllowArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyAllowArgsPtrOutput)
}

type PolicyListPolicyAllowArgsOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyAllowArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyAllowArgs)(nil)).Elem()
}

func (o PolicyListPolicyAllowArgsOutput) ToPolicyListPolicyAllowArgsOutput() PolicyListPolicyAllowArgsOutput {
	return o
}

func (o PolicyListPolicyAllowArgsOutput) ToPolicyListPolicyAllowArgsOutputWithContext(ctx context.Context) PolicyListPolicyAllowArgsOutput {
	return o
}

func (o PolicyListPolicyAllowArgsOutput) ToPolicyListPolicyAllowArgsPtrOutput() PolicyListPolicyAllowArgsPtrOutput {
	return o.ToPolicyListPolicyAllowArgsPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyAllowArgsOutput) ToPolicyListPolicyAllowArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowArgsPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyAllowArgs) *PolicyListPolicyAllowArgs {
		return &v
	}).(PolicyListPolicyAllowArgsPtrOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyAllowArgsOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyAllowArgs) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyAllowArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyAllowArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyAllowArgsPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyAllowArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyAllowArgs)(nil)).Elem()
}

func (o PolicyListPolicyAllowArgsPtrOutput) ToPolicyListPolicyAllowArgsPtrOutput() PolicyListPolicyAllowArgsPtrOutput {
	return o
}

func (o PolicyListPolicyAllowArgsPtrOutput) ToPolicyListPolicyAllowArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyAllowArgsPtrOutput {
	return o
}

func (o PolicyListPolicyAllowArgsPtrOutput) Elem() PolicyListPolicyAllowArgsOutput {
	return o.ApplyT(func(v *PolicyListPolicyAllowArgs) PolicyListPolicyAllowArgs { return *v }).(PolicyListPolicyAllowArgsOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyAllowArgsPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyAllowArgs) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyAllowArgsPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyAllowArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyArgs struct {
	Allow *PolicyListPolicyAllowArgs `pulumi:"allow"`
	Deny  *PolicyListPolicyDenyArgs  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent *bool `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue *string `pulumi:"suggestedValue"`
}

type PolicyListPolicyArgsInput interface {
	pulumi.Input

	ToPolicyListPolicyArgsOutput() PolicyListPolicyArgsOutput
	ToPolicyListPolicyArgsOutputWithContext(context.Context) PolicyListPolicyArgsOutput
}

type PolicyListPolicyArgsArgs struct {
	Allow PolicyListPolicyAllowArgsPtrInput `pulumi:"allow"`
	Deny  PolicyListPolicyDenyArgsPtrInput  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent pulumi.BoolPtrInput `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue pulumi.StringPtrInput `pulumi:"suggestedValue"`
}

func (PolicyListPolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyArgs)(nil)).Elem()
}

func (i PolicyListPolicyArgsArgs) ToPolicyListPolicyArgsOutput() PolicyListPolicyArgsOutput {
	return i.ToPolicyListPolicyArgsOutputWithContext(context.Background())
}

func (i PolicyListPolicyArgsArgs) ToPolicyListPolicyArgsOutputWithContext(ctx context.Context) PolicyListPolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyArgsOutput)
}

func (i PolicyListPolicyArgsArgs) ToPolicyListPolicyArgsPtrOutput() PolicyListPolicyArgsPtrOutput {
	return i.ToPolicyListPolicyArgsPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyArgsArgs) ToPolicyListPolicyArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyArgsOutput).ToPolicyListPolicyArgsPtrOutputWithContext(ctx)
}

type PolicyListPolicyArgsPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyArgsPtrOutput() PolicyListPolicyArgsPtrOutput
	ToPolicyListPolicyArgsPtrOutputWithContext(context.Context) PolicyListPolicyArgsPtrOutput
}

type policyListPolicyArgsPtrType PolicyListPolicyArgsArgs

func PolicyListPolicyArgsPtr(v *PolicyListPolicyArgsArgs) PolicyListPolicyArgsPtrInput {
	return (*policyListPolicyArgsPtrType)(v)
}

func (*policyListPolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyArgs)(nil)).Elem()
}

func (i *policyListPolicyArgsPtrType) ToPolicyListPolicyArgsPtrOutput() PolicyListPolicyArgsPtrOutput {
	return i.ToPolicyListPolicyArgsPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyArgsPtrType) ToPolicyListPolicyArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyArgsPtrOutput)
}

type PolicyListPolicyArgsOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyArgs)(nil)).Elem()
}

func (o PolicyListPolicyArgsOutput) ToPolicyListPolicyArgsOutput() PolicyListPolicyArgsOutput {
	return o
}

func (o PolicyListPolicyArgsOutput) ToPolicyListPolicyArgsOutputWithContext(ctx context.Context) PolicyListPolicyArgsOutput {
	return o
}

func (o PolicyListPolicyArgsOutput) ToPolicyListPolicyArgsPtrOutput() PolicyListPolicyArgsPtrOutput {
	return o.ToPolicyListPolicyArgsPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyArgsOutput) ToPolicyListPolicyArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyArgsPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyArgs) *PolicyListPolicyArgs {
		return &v
	}).(PolicyListPolicyArgsPtrOutput)
}
func (o PolicyListPolicyArgsOutput) Allow() PolicyListPolicyAllowArgsPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyArgs) *PolicyListPolicyAllowArgs { return v.Allow }).(PolicyListPolicyAllowArgsPtrOutput)
}

func (o PolicyListPolicyArgsOutput) Deny() PolicyListPolicyDenyArgsPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyArgs) *PolicyListPolicyDenyArgs { return v.Deny }).(PolicyListPolicyDenyArgsPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o PolicyListPolicyArgsOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyArgs) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o PolicyListPolicyArgsOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyArgs) *string { return v.SuggestedValue }).(pulumi.StringPtrOutput)
}

type PolicyListPolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyArgs)(nil)).Elem()
}

func (o PolicyListPolicyArgsPtrOutput) ToPolicyListPolicyArgsPtrOutput() PolicyListPolicyArgsPtrOutput {
	return o
}

func (o PolicyListPolicyArgsPtrOutput) ToPolicyListPolicyArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyArgsPtrOutput {
	return o
}

func (o PolicyListPolicyArgsPtrOutput) Elem() PolicyListPolicyArgsOutput {
	return o.ApplyT(func(v *PolicyListPolicyArgs) PolicyListPolicyArgs { return *v }).(PolicyListPolicyArgsOutput)
}

func (o PolicyListPolicyArgsPtrOutput) Allow() PolicyListPolicyAllowArgsPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyArgs) *PolicyListPolicyAllowArgs { return v.Allow }).(PolicyListPolicyAllowArgsPtrOutput)
}

func (o PolicyListPolicyArgsPtrOutput) Deny() PolicyListPolicyDenyArgsPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyArgs) *PolicyListPolicyDenyArgs { return v.Deny }).(PolicyListPolicyDenyArgsPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o PolicyListPolicyArgsPtrOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyArgs) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o PolicyListPolicyArgsPtrOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyArgs) *string { return v.SuggestedValue }).(pulumi.StringPtrOutput)
}

type PolicyListPolicyDeny struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type PolicyListPolicyDenyInput interface {
	pulumi.Input

	ToPolicyListPolicyDenyOutput() PolicyListPolicyDenyOutput
	ToPolicyListPolicyDenyOutputWithContext(context.Context) PolicyListPolicyDenyOutput
}

type PolicyListPolicyDenyArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyListPolicyDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyDeny)(nil)).Elem()
}

func (i PolicyListPolicyDenyArgs) ToPolicyListPolicyDenyOutput() PolicyListPolicyDenyOutput {
	return i.ToPolicyListPolicyDenyOutputWithContext(context.Background())
}

func (i PolicyListPolicyDenyArgs) ToPolicyListPolicyDenyOutputWithContext(ctx context.Context) PolicyListPolicyDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyDenyOutput)
}

func (i PolicyListPolicyDenyArgs) ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput {
	return i.ToPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyDenyArgs) ToPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyDenyOutput).ToPolicyListPolicyDenyPtrOutputWithContext(ctx)
}

type PolicyListPolicyDenyPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput
	ToPolicyListPolicyDenyPtrOutputWithContext(context.Context) PolicyListPolicyDenyPtrOutput
}

type policyListPolicyDenyPtrType PolicyListPolicyDenyArgs

func PolicyListPolicyDenyPtr(v *PolicyListPolicyDenyArgs) PolicyListPolicyDenyPtrInput {
	return (*policyListPolicyDenyPtrType)(v)
}

func (*policyListPolicyDenyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyDeny)(nil)).Elem()
}

func (i *policyListPolicyDenyPtrType) ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput {
	return i.ToPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyDenyPtrType) ToPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyDenyPtrOutput)
}

type PolicyListPolicyDenyOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyDeny)(nil)).Elem()
}

func (o PolicyListPolicyDenyOutput) ToPolicyListPolicyDenyOutput() PolicyListPolicyDenyOutput {
	return o
}

func (o PolicyListPolicyDenyOutput) ToPolicyListPolicyDenyOutputWithContext(ctx context.Context) PolicyListPolicyDenyOutput {
	return o
}

func (o PolicyListPolicyDenyOutput) ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput {
	return o.ToPolicyListPolicyDenyPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyDenyOutput) ToPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyDeny) *PolicyListPolicyDeny {
		return &v
	}).(PolicyListPolicyDenyPtrOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyDenyOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyDenyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyDenyPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyDenyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyDeny)(nil)).Elem()
}

func (o PolicyListPolicyDenyPtrOutput) ToPolicyListPolicyDenyPtrOutput() PolicyListPolicyDenyPtrOutput {
	return o
}

func (o PolicyListPolicyDenyPtrOutput) ToPolicyListPolicyDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyPtrOutput {
	return o
}

func (o PolicyListPolicyDenyPtrOutput) Elem() PolicyListPolicyDenyOutput {
	return o.ApplyT(func(v *PolicyListPolicyDeny) PolicyListPolicyDeny { return *v }).(PolicyListPolicyDenyOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyDenyPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyDenyPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyDenyArgs struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type PolicyListPolicyDenyArgsInput interface {
	pulumi.Input

	ToPolicyListPolicyDenyArgsOutput() PolicyListPolicyDenyArgsOutput
	ToPolicyListPolicyDenyArgsOutputWithContext(context.Context) PolicyListPolicyDenyArgsOutput
}

type PolicyListPolicyDenyArgsArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyListPolicyDenyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyDenyArgs)(nil)).Elem()
}

func (i PolicyListPolicyDenyArgsArgs) ToPolicyListPolicyDenyArgsOutput() PolicyListPolicyDenyArgsOutput {
	return i.ToPolicyListPolicyDenyArgsOutputWithContext(context.Background())
}

func (i PolicyListPolicyDenyArgsArgs) ToPolicyListPolicyDenyArgsOutputWithContext(ctx context.Context) PolicyListPolicyDenyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyDenyArgsOutput)
}

func (i PolicyListPolicyDenyArgsArgs) ToPolicyListPolicyDenyArgsPtrOutput() PolicyListPolicyDenyArgsPtrOutput {
	return i.ToPolicyListPolicyDenyArgsPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyDenyArgsArgs) ToPolicyListPolicyDenyArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyDenyArgsOutput).ToPolicyListPolicyDenyArgsPtrOutputWithContext(ctx)
}

type PolicyListPolicyDenyArgsPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyDenyArgsPtrOutput() PolicyListPolicyDenyArgsPtrOutput
	ToPolicyListPolicyDenyArgsPtrOutputWithContext(context.Context) PolicyListPolicyDenyArgsPtrOutput
}

type policyListPolicyDenyArgsPtrType PolicyListPolicyDenyArgsArgs

func PolicyListPolicyDenyArgsPtr(v *PolicyListPolicyDenyArgsArgs) PolicyListPolicyDenyArgsPtrInput {
	return (*policyListPolicyDenyArgsPtrType)(v)
}

func (*policyListPolicyDenyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyDenyArgs)(nil)).Elem()
}

func (i *policyListPolicyDenyArgsPtrType) ToPolicyListPolicyDenyArgsPtrOutput() PolicyListPolicyDenyArgsPtrOutput {
	return i.ToPolicyListPolicyDenyArgsPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyDenyArgsPtrType) ToPolicyListPolicyDenyArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyDenyArgsPtrOutput)
}

type PolicyListPolicyDenyArgsOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyDenyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyDenyArgs)(nil)).Elem()
}

func (o PolicyListPolicyDenyArgsOutput) ToPolicyListPolicyDenyArgsOutput() PolicyListPolicyDenyArgsOutput {
	return o
}

func (o PolicyListPolicyDenyArgsOutput) ToPolicyListPolicyDenyArgsOutputWithContext(ctx context.Context) PolicyListPolicyDenyArgsOutput {
	return o
}

func (o PolicyListPolicyDenyArgsOutput) ToPolicyListPolicyDenyArgsPtrOutput() PolicyListPolicyDenyArgsPtrOutput {
	return o.ToPolicyListPolicyDenyArgsPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyDenyArgsOutput) ToPolicyListPolicyDenyArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyArgsPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyDenyArgs) *PolicyListPolicyDenyArgs {
		return &v
	}).(PolicyListPolicyDenyArgsPtrOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyDenyArgsOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyDenyArgs) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyDenyArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyDenyArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyDenyArgsPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyDenyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyDenyArgs)(nil)).Elem()
}

func (o PolicyListPolicyDenyArgsPtrOutput) ToPolicyListPolicyDenyArgsPtrOutput() PolicyListPolicyDenyArgsPtrOutput {
	return o
}

func (o PolicyListPolicyDenyArgsPtrOutput) ToPolicyListPolicyDenyArgsPtrOutputWithContext(ctx context.Context) PolicyListPolicyDenyArgsPtrOutput {
	return o
}

func (o PolicyListPolicyDenyArgsPtrOutput) Elem() PolicyListPolicyDenyArgsOutput {
	return o.ApplyT(func(v *PolicyListPolicyDenyArgs) PolicyListPolicyDenyArgs { return *v }).(PolicyListPolicyDenyArgsOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyDenyArgsPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyDenyArgs) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyDenyArgsPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyDenyArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyState struct {
	Allow *PolicyListPolicyStateAllow `pulumi:"allow"`
	Deny  *PolicyListPolicyStateDeny  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent *bool `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue *string `pulumi:"suggestedValue"`
}

type PolicyListPolicyStateInput interface {
	pulumi.Input

	ToPolicyListPolicyStateOutput() PolicyListPolicyStateOutput
	ToPolicyListPolicyStateOutputWithContext(context.Context) PolicyListPolicyStateOutput
}

type PolicyListPolicyStateArgs struct {
	Allow PolicyListPolicyStateAllowPtrInput `pulumi:"allow"`
	Deny  PolicyListPolicyStateDenyPtrInput  `pulumi:"deny"`
	// If set to true, the values from the effective Policy of the parent resource
	// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
	InheritFromParent pulumi.BoolPtrInput `pulumi:"inheritFromParent"`
	// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
	SuggestedValue pulumi.StringPtrInput `pulumi:"suggestedValue"`
}

func (PolicyListPolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyState)(nil)).Elem()
}

func (i PolicyListPolicyStateArgs) ToPolicyListPolicyStateOutput() PolicyListPolicyStateOutput {
	return i.ToPolicyListPolicyStateOutputWithContext(context.Background())
}

func (i PolicyListPolicyStateArgs) ToPolicyListPolicyStateOutputWithContext(ctx context.Context) PolicyListPolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyStateOutput)
}

type PolicyListPolicyStateOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyState)(nil)).Elem()
}

func (o PolicyListPolicyStateOutput) ToPolicyListPolicyStateOutput() PolicyListPolicyStateOutput {
	return o
}

func (o PolicyListPolicyStateOutput) ToPolicyListPolicyStateOutputWithContext(ctx context.Context) PolicyListPolicyStateOutput {
	return o
}

func (o PolicyListPolicyStateOutput) Allow() PolicyListPolicyStateAllowPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyState) *PolicyListPolicyStateAllow { return v.Allow }).(PolicyListPolicyStateAllowPtrOutput)
}

func (o PolicyListPolicyStateOutput) Deny() PolicyListPolicyStateDenyPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyState) *PolicyListPolicyStateDeny { return v.Deny }).(PolicyListPolicyStateDenyPtrOutput)
}

// If set to true, the values from the effective Policy of the parent resource
// are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
func (o PolicyListPolicyStateOutput) InheritFromParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyState) *bool { return v.InheritFromParent }).(pulumi.BoolPtrOutput)
}

// The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
func (o PolicyListPolicyStateOutput) SuggestedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyState) *string { return v.SuggestedValue }).(pulumi.StringPtrOutput)
}

type PolicyListPolicyStateAllow struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type PolicyListPolicyStateAllowInput interface {
	pulumi.Input

	ToPolicyListPolicyStateAllowOutput() PolicyListPolicyStateAllowOutput
	ToPolicyListPolicyStateAllowOutputWithContext(context.Context) PolicyListPolicyStateAllowOutput
}

type PolicyListPolicyStateAllowArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyListPolicyStateAllowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyStateAllow)(nil)).Elem()
}

func (i PolicyListPolicyStateAllowArgs) ToPolicyListPolicyStateAllowOutput() PolicyListPolicyStateAllowOutput {
	return i.ToPolicyListPolicyStateAllowOutputWithContext(context.Background())
}

func (i PolicyListPolicyStateAllowArgs) ToPolicyListPolicyStateAllowOutputWithContext(ctx context.Context) PolicyListPolicyStateAllowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyStateAllowOutput)
}

func (i PolicyListPolicyStateAllowArgs) ToPolicyListPolicyStateAllowPtrOutput() PolicyListPolicyStateAllowPtrOutput {
	return i.ToPolicyListPolicyStateAllowPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyStateAllowArgs) ToPolicyListPolicyStateAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyStateAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyStateAllowOutput).ToPolicyListPolicyStateAllowPtrOutputWithContext(ctx)
}

type PolicyListPolicyStateAllowPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyStateAllowPtrOutput() PolicyListPolicyStateAllowPtrOutput
	ToPolicyListPolicyStateAllowPtrOutputWithContext(context.Context) PolicyListPolicyStateAllowPtrOutput
}

type policyListPolicyStateAllowPtrType PolicyListPolicyStateAllowArgs

func PolicyListPolicyStateAllowPtr(v *PolicyListPolicyStateAllowArgs) PolicyListPolicyStateAllowPtrInput {
	return (*policyListPolicyStateAllowPtrType)(v)
}

func (*policyListPolicyStateAllowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyStateAllow)(nil)).Elem()
}

func (i *policyListPolicyStateAllowPtrType) ToPolicyListPolicyStateAllowPtrOutput() PolicyListPolicyStateAllowPtrOutput {
	return i.ToPolicyListPolicyStateAllowPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyStateAllowPtrType) ToPolicyListPolicyStateAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyStateAllowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyStateAllowPtrOutput)
}

type PolicyListPolicyStateAllowOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyStateAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyStateAllow)(nil)).Elem()
}

func (o PolicyListPolicyStateAllowOutput) ToPolicyListPolicyStateAllowOutput() PolicyListPolicyStateAllowOutput {
	return o
}

func (o PolicyListPolicyStateAllowOutput) ToPolicyListPolicyStateAllowOutputWithContext(ctx context.Context) PolicyListPolicyStateAllowOutput {
	return o
}

func (o PolicyListPolicyStateAllowOutput) ToPolicyListPolicyStateAllowPtrOutput() PolicyListPolicyStateAllowPtrOutput {
	return o.ToPolicyListPolicyStateAllowPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyStateAllowOutput) ToPolicyListPolicyStateAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyStateAllowPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyStateAllow) *PolicyListPolicyStateAllow {
		return &v
	}).(PolicyListPolicyStateAllowPtrOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyStateAllowOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyStateAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyStateAllowOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyStateAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyStateAllowPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyStateAllowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyStateAllow)(nil)).Elem()
}

func (o PolicyListPolicyStateAllowPtrOutput) ToPolicyListPolicyStateAllowPtrOutput() PolicyListPolicyStateAllowPtrOutput {
	return o
}

func (o PolicyListPolicyStateAllowPtrOutput) ToPolicyListPolicyStateAllowPtrOutputWithContext(ctx context.Context) PolicyListPolicyStateAllowPtrOutput {
	return o
}

func (o PolicyListPolicyStateAllowPtrOutput) Elem() PolicyListPolicyStateAllowOutput {
	return o.ApplyT(func(v *PolicyListPolicyStateAllow) PolicyListPolicyStateAllow { return *v }).(PolicyListPolicyStateAllowOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyStateAllowPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyStateAllow) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyStateAllowPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyStateAllow) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyStateDeny struct {
	// The policy allows or denies all values.
	All *bool `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values []string `pulumi:"values"`
}

type PolicyListPolicyStateDenyInput interface {
	pulumi.Input

	ToPolicyListPolicyStateDenyOutput() PolicyListPolicyStateDenyOutput
	ToPolicyListPolicyStateDenyOutputWithContext(context.Context) PolicyListPolicyStateDenyOutput
}

type PolicyListPolicyStateDenyArgs struct {
	// The policy allows or denies all values.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The policy can define specific values that are allowed or denied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PolicyListPolicyStateDenyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyStateDeny)(nil)).Elem()
}

func (i PolicyListPolicyStateDenyArgs) ToPolicyListPolicyStateDenyOutput() PolicyListPolicyStateDenyOutput {
	return i.ToPolicyListPolicyStateDenyOutputWithContext(context.Background())
}

func (i PolicyListPolicyStateDenyArgs) ToPolicyListPolicyStateDenyOutputWithContext(ctx context.Context) PolicyListPolicyStateDenyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyStateDenyOutput)
}

func (i PolicyListPolicyStateDenyArgs) ToPolicyListPolicyStateDenyPtrOutput() PolicyListPolicyStateDenyPtrOutput {
	return i.ToPolicyListPolicyStateDenyPtrOutputWithContext(context.Background())
}

func (i PolicyListPolicyStateDenyArgs) ToPolicyListPolicyStateDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyStateDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyStateDenyOutput).ToPolicyListPolicyStateDenyPtrOutputWithContext(ctx)
}

type PolicyListPolicyStateDenyPtrInput interface {
	pulumi.Input

	ToPolicyListPolicyStateDenyPtrOutput() PolicyListPolicyStateDenyPtrOutput
	ToPolicyListPolicyStateDenyPtrOutputWithContext(context.Context) PolicyListPolicyStateDenyPtrOutput
}

type policyListPolicyStateDenyPtrType PolicyListPolicyStateDenyArgs

func PolicyListPolicyStateDenyPtr(v *PolicyListPolicyStateDenyArgs) PolicyListPolicyStateDenyPtrInput {
	return (*policyListPolicyStateDenyPtrType)(v)
}

func (*policyListPolicyStateDenyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyStateDeny)(nil)).Elem()
}

func (i *policyListPolicyStateDenyPtrType) ToPolicyListPolicyStateDenyPtrOutput() PolicyListPolicyStateDenyPtrOutput {
	return i.ToPolicyListPolicyStateDenyPtrOutputWithContext(context.Background())
}

func (i *policyListPolicyStateDenyPtrType) ToPolicyListPolicyStateDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyStateDenyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyListPolicyStateDenyPtrOutput)
}

type PolicyListPolicyStateDenyOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyStateDenyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyListPolicyStateDeny)(nil)).Elem()
}

func (o PolicyListPolicyStateDenyOutput) ToPolicyListPolicyStateDenyOutput() PolicyListPolicyStateDenyOutput {
	return o
}

func (o PolicyListPolicyStateDenyOutput) ToPolicyListPolicyStateDenyOutputWithContext(ctx context.Context) PolicyListPolicyStateDenyOutput {
	return o
}

func (o PolicyListPolicyStateDenyOutput) ToPolicyListPolicyStateDenyPtrOutput() PolicyListPolicyStateDenyPtrOutput {
	return o.ToPolicyListPolicyStateDenyPtrOutputWithContext(context.Background())
}

func (o PolicyListPolicyStateDenyOutput) ToPolicyListPolicyStateDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyStateDenyPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyStateDeny) *PolicyListPolicyStateDeny {
		return &v
	}).(PolicyListPolicyStateDenyPtrOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyStateDenyOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyStateDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyStateDenyOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyStateDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyListPolicyStateDenyPtrOutput struct{ *pulumi.OutputState }

func (PolicyListPolicyStateDenyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyListPolicyStateDeny)(nil)).Elem()
}

func (o PolicyListPolicyStateDenyPtrOutput) ToPolicyListPolicyStateDenyPtrOutput() PolicyListPolicyStateDenyPtrOutput {
	return o
}

func (o PolicyListPolicyStateDenyPtrOutput) ToPolicyListPolicyStateDenyPtrOutputWithContext(ctx context.Context) PolicyListPolicyStateDenyPtrOutput {
	return o
}

func (o PolicyListPolicyStateDenyPtrOutput) Elem() PolicyListPolicyStateDenyOutput {
	return o.ApplyT(func(v *PolicyListPolicyStateDeny) PolicyListPolicyStateDeny { return *v }).(PolicyListPolicyStateDenyOutput)
}

// The policy allows or denies all values.
func (o PolicyListPolicyStateDenyPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyListPolicyStateDeny) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The policy can define specific values that are allowed or denied.
func (o PolicyListPolicyStateDenyPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyListPolicyStateDeny) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PolicyRestorePolicy struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default bool `pulumi:"default"`
}

type PolicyRestorePolicyInput interface {
	pulumi.Input

	ToPolicyRestorePolicyOutput() PolicyRestorePolicyOutput
	ToPolicyRestorePolicyOutputWithContext(context.Context) PolicyRestorePolicyOutput
}

type PolicyRestorePolicyArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default pulumi.BoolInput `pulumi:"default"`
}

func (PolicyRestorePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRestorePolicy)(nil)).Elem()
}

func (i PolicyRestorePolicyArgs) ToPolicyRestorePolicyOutput() PolicyRestorePolicyOutput {
	return i.ToPolicyRestorePolicyOutputWithContext(context.Background())
}

func (i PolicyRestorePolicyArgs) ToPolicyRestorePolicyOutputWithContext(ctx context.Context) PolicyRestorePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyOutput)
}

func (i PolicyRestorePolicyArgs) ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput {
	return i.ToPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i PolicyRestorePolicyArgs) ToPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyOutput).ToPolicyRestorePolicyPtrOutputWithContext(ctx)
}

type PolicyRestorePolicyPtrInput interface {
	pulumi.Input

	ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput
	ToPolicyRestorePolicyPtrOutputWithContext(context.Context) PolicyRestorePolicyPtrOutput
}

type policyRestorePolicyPtrType PolicyRestorePolicyArgs

func PolicyRestorePolicyPtr(v *PolicyRestorePolicyArgs) PolicyRestorePolicyPtrInput {
	return (*policyRestorePolicyPtrType)(v)
}

func (*policyRestorePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyRestorePolicy)(nil)).Elem()
}

func (i *policyRestorePolicyPtrType) ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput {
	return i.ToPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (i *policyRestorePolicyPtrType) ToPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyPtrOutput)
}

type PolicyRestorePolicyOutput struct{ *pulumi.OutputState }

func (PolicyRestorePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRestorePolicy)(nil)).Elem()
}

func (o PolicyRestorePolicyOutput) ToPolicyRestorePolicyOutput() PolicyRestorePolicyOutput {
	return o
}

func (o PolicyRestorePolicyOutput) ToPolicyRestorePolicyOutputWithContext(ctx context.Context) PolicyRestorePolicyOutput {
	return o
}

func (o PolicyRestorePolicyOutput) ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput {
	return o.ToPolicyRestorePolicyPtrOutputWithContext(context.Background())
}

func (o PolicyRestorePolicyOutput) ToPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyPtrOutput {
	return o.ApplyT(func(v PolicyRestorePolicy) *PolicyRestorePolicy {
		return &v
	}).(PolicyRestorePolicyPtrOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o PolicyRestorePolicyOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyRestorePolicy) bool { return v.Default }).(pulumi.BoolOutput)
}

type PolicyRestorePolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyRestorePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyRestorePolicy)(nil)).Elem()
}

func (o PolicyRestorePolicyPtrOutput) ToPolicyRestorePolicyPtrOutput() PolicyRestorePolicyPtrOutput {
	return o
}

func (o PolicyRestorePolicyPtrOutput) ToPolicyRestorePolicyPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyPtrOutput {
	return o
}

func (o PolicyRestorePolicyPtrOutput) Elem() PolicyRestorePolicyOutput {
	return o.ApplyT(func(v *PolicyRestorePolicy) PolicyRestorePolicy { return *v }).(PolicyRestorePolicyOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o PolicyRestorePolicyPtrOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyRestorePolicy) bool { return v.Default }).(pulumi.BoolOutput)
}

type PolicyRestorePolicyArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default bool `pulumi:"default"`
}

type PolicyRestorePolicyArgsInput interface {
	pulumi.Input

	ToPolicyRestorePolicyArgsOutput() PolicyRestorePolicyArgsOutput
	ToPolicyRestorePolicyArgsOutputWithContext(context.Context) PolicyRestorePolicyArgsOutput
}

type PolicyRestorePolicyArgsArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default pulumi.BoolInput `pulumi:"default"`
}

func (PolicyRestorePolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRestorePolicyArgs)(nil)).Elem()
}

func (i PolicyRestorePolicyArgsArgs) ToPolicyRestorePolicyArgsOutput() PolicyRestorePolicyArgsOutput {
	return i.ToPolicyRestorePolicyArgsOutputWithContext(context.Background())
}

func (i PolicyRestorePolicyArgsArgs) ToPolicyRestorePolicyArgsOutputWithContext(ctx context.Context) PolicyRestorePolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyArgsOutput)
}

func (i PolicyRestorePolicyArgsArgs) ToPolicyRestorePolicyArgsPtrOutput() PolicyRestorePolicyArgsPtrOutput {
	return i.ToPolicyRestorePolicyArgsPtrOutputWithContext(context.Background())
}

func (i PolicyRestorePolicyArgsArgs) ToPolicyRestorePolicyArgsPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyArgsOutput).ToPolicyRestorePolicyArgsPtrOutputWithContext(ctx)
}

type PolicyRestorePolicyArgsPtrInput interface {
	pulumi.Input

	ToPolicyRestorePolicyArgsPtrOutput() PolicyRestorePolicyArgsPtrOutput
	ToPolicyRestorePolicyArgsPtrOutputWithContext(context.Context) PolicyRestorePolicyArgsPtrOutput
}

type policyRestorePolicyArgsPtrType PolicyRestorePolicyArgsArgs

func PolicyRestorePolicyArgsPtr(v *PolicyRestorePolicyArgsArgs) PolicyRestorePolicyArgsPtrInput {
	return (*policyRestorePolicyArgsPtrType)(v)
}

func (*policyRestorePolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyRestorePolicyArgs)(nil)).Elem()
}

func (i *policyRestorePolicyArgsPtrType) ToPolicyRestorePolicyArgsPtrOutput() PolicyRestorePolicyArgsPtrOutput {
	return i.ToPolicyRestorePolicyArgsPtrOutputWithContext(context.Background())
}

func (i *policyRestorePolicyArgsPtrType) ToPolicyRestorePolicyArgsPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyArgsPtrOutput)
}

type PolicyRestorePolicyArgsOutput struct{ *pulumi.OutputState }

func (PolicyRestorePolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRestorePolicyArgs)(nil)).Elem()
}

func (o PolicyRestorePolicyArgsOutput) ToPolicyRestorePolicyArgsOutput() PolicyRestorePolicyArgsOutput {
	return o
}

func (o PolicyRestorePolicyArgsOutput) ToPolicyRestorePolicyArgsOutputWithContext(ctx context.Context) PolicyRestorePolicyArgsOutput {
	return o
}

func (o PolicyRestorePolicyArgsOutput) ToPolicyRestorePolicyArgsPtrOutput() PolicyRestorePolicyArgsPtrOutput {
	return o.ToPolicyRestorePolicyArgsPtrOutputWithContext(context.Background())
}

func (o PolicyRestorePolicyArgsOutput) ToPolicyRestorePolicyArgsPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyArgsPtrOutput {
	return o.ApplyT(func(v PolicyRestorePolicyArgs) *PolicyRestorePolicyArgs {
		return &v
	}).(PolicyRestorePolicyArgsPtrOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o PolicyRestorePolicyArgsOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyRestorePolicyArgs) bool { return v.Default }).(pulumi.BoolOutput)
}

type PolicyRestorePolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (PolicyRestorePolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyRestorePolicyArgs)(nil)).Elem()
}

func (o PolicyRestorePolicyArgsPtrOutput) ToPolicyRestorePolicyArgsPtrOutput() PolicyRestorePolicyArgsPtrOutput {
	return o
}

func (o PolicyRestorePolicyArgsPtrOutput) ToPolicyRestorePolicyArgsPtrOutputWithContext(ctx context.Context) PolicyRestorePolicyArgsPtrOutput {
	return o
}

func (o PolicyRestorePolicyArgsPtrOutput) Elem() PolicyRestorePolicyArgsOutput {
	return o.ApplyT(func(v *PolicyRestorePolicyArgs) PolicyRestorePolicyArgs { return *v }).(PolicyRestorePolicyArgsOutput)
}

// May only be set to true. If set, then the default Policy is restored.
func (o PolicyRestorePolicyArgsPtrOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyRestorePolicyArgs) bool { return v.Default }).(pulumi.BoolOutput)
}

type PolicyRestorePolicyState struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default bool `pulumi:"default"`
}

type PolicyRestorePolicyStateInput interface {
	pulumi.Input

	ToPolicyRestorePolicyStateOutput() PolicyRestorePolicyStateOutput
	ToPolicyRestorePolicyStateOutputWithContext(context.Context) PolicyRestorePolicyStateOutput
}

type PolicyRestorePolicyStateArgs struct {
	// May only be set to true. If set, then the default Policy is restored.
	Default pulumi.BoolInput `pulumi:"default"`
}

func (PolicyRestorePolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRestorePolicyState)(nil)).Elem()
}

func (i PolicyRestorePolicyStateArgs) ToPolicyRestorePolicyStateOutput() PolicyRestorePolicyStateOutput {
	return i.ToPolicyRestorePolicyStateOutputWithContext(context.Background())
}

func (i PolicyRestorePolicyStateArgs) ToPolicyRestorePolicyStateOutputWithContext(ctx context.Context) PolicyRestorePolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyRestorePolicyStateOutput)
}

type PolicyRestorePolicyStateOutput struct{ *pulumi.OutputState }

func (PolicyRestorePolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyRestorePolicyState)(nil)).Elem()
}

func (o PolicyRestorePolicyStateOutput) ToPolicyRestorePolicyStateOutput() PolicyRestorePolicyStateOutput {
	return o
}

func (o PolicyRestorePolicyStateOutput) ToPolicyRestorePolicyStateOutputWithContext(ctx context.Context) PolicyRestorePolicyStateOutput {
	return o
}

// May only be set to true. If set, then the default Policy is restored.
func (o PolicyRestorePolicyStateOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v PolicyRestorePolicyState) bool { return v.Default }).(pulumi.BoolOutput)
}

type GetIAMPolicyAuditConfig struct {
	// A nested block that defines the operations you'd like to log.
	AuditLogConfigs []GetIAMPolicyAuditConfigAuditLogConfig `pulumi:"auditLogConfigs"`
	// Defines a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

type GetIAMPolicyAuditConfigInput interface {
	pulumi.Input

	ToGetIAMPolicyAuditConfigOutput() GetIAMPolicyAuditConfigOutput
	ToGetIAMPolicyAuditConfigOutputWithContext(context.Context) GetIAMPolicyAuditConfigOutput
}

type GetIAMPolicyAuditConfigArgs struct {
	// A nested block that defines the operations you'd like to log.
	AuditLogConfigs GetIAMPolicyAuditConfigAuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Defines a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringInput `pulumi:"service"`
}

func (GetIAMPolicyAuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyAuditConfig)(nil)).Elem()
}

func (i GetIAMPolicyAuditConfigArgs) ToGetIAMPolicyAuditConfigOutput() GetIAMPolicyAuditConfigOutput {
	return i.ToGetIAMPolicyAuditConfigOutputWithContext(context.Background())
}

func (i GetIAMPolicyAuditConfigArgs) ToGetIAMPolicyAuditConfigOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyAuditConfigOutput)
}

type GetIAMPolicyAuditConfigArrayInput interface {
	pulumi.Input

	ToGetIAMPolicyAuditConfigArrayOutput() GetIAMPolicyAuditConfigArrayOutput
	ToGetIAMPolicyAuditConfigArrayOutputWithContext(context.Context) GetIAMPolicyAuditConfigArrayOutput
}

type GetIAMPolicyAuditConfigArray []GetIAMPolicyAuditConfigInput

func (GetIAMPolicyAuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyAuditConfig)(nil)).Elem()
}

func (i GetIAMPolicyAuditConfigArray) ToGetIAMPolicyAuditConfigArrayOutput() GetIAMPolicyAuditConfigArrayOutput {
	return i.ToGetIAMPolicyAuditConfigArrayOutputWithContext(context.Background())
}

func (i GetIAMPolicyAuditConfigArray) ToGetIAMPolicyAuditConfigArrayOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyAuditConfigArrayOutput)
}

type GetIAMPolicyAuditConfigOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyAuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyAuditConfig)(nil)).Elem()
}

func (o GetIAMPolicyAuditConfigOutput) ToGetIAMPolicyAuditConfigOutput() GetIAMPolicyAuditConfigOutput {
	return o
}

func (o GetIAMPolicyAuditConfigOutput) ToGetIAMPolicyAuditConfigOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigOutput {
	return o
}

// A nested block that defines the operations you'd like to log.
func (o GetIAMPolicyAuditConfigOutput) AuditLogConfigs() GetIAMPolicyAuditConfigAuditLogConfigArrayOutput {
	return o.ApplyT(func(v GetIAMPolicyAuditConfig) []GetIAMPolicyAuditConfigAuditLogConfig { return v.AuditLogConfigs }).(GetIAMPolicyAuditConfigAuditLogConfigArrayOutput)
}

// Defines a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o GetIAMPolicyAuditConfigOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyAuditConfig) string { return v.Service }).(pulumi.StringOutput)
}

type GetIAMPolicyAuditConfigArrayOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyAuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyAuditConfig)(nil)).Elem()
}

func (o GetIAMPolicyAuditConfigArrayOutput) ToGetIAMPolicyAuditConfigArrayOutput() GetIAMPolicyAuditConfigArrayOutput {
	return o
}

func (o GetIAMPolicyAuditConfigArrayOutput) ToGetIAMPolicyAuditConfigArrayOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigArrayOutput {
	return o
}

func (o GetIAMPolicyAuditConfigArrayOutput) Index(i pulumi.IntInput) GetIAMPolicyAuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIAMPolicyAuditConfig {
		return vs[0].([]GetIAMPolicyAuditConfig)[vs[1].(int)]
	}).(GetIAMPolicyAuditConfigOutput)
}

type GetIAMPolicyAuditConfigArgs struct {
	// A nested block that defines the operations you'd like to log.
	AuditLogConfigs []GetIAMPolicyAuditConfigAuditLogConfigArgs `pulumi:"auditLogConfigs"`
	// Defines a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

type GetIAMPolicyAuditConfigArgsInput interface {
	pulumi.Input

	ToGetIAMPolicyAuditConfigArgsOutput() GetIAMPolicyAuditConfigArgsOutput
	ToGetIAMPolicyAuditConfigArgsOutputWithContext(context.Context) GetIAMPolicyAuditConfigArgsOutput
}

type GetIAMPolicyAuditConfigArgsArgs struct {
	// A nested block that defines the operations you'd like to log.
	AuditLogConfigs GetIAMPolicyAuditConfigAuditLogConfigArgsArrayInput `pulumi:"auditLogConfigs"`
	// Defines a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringInput `pulumi:"service"`
}

func (GetIAMPolicyAuditConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyAuditConfigArgs)(nil)).Elem()
}

func (i GetIAMPolicyAuditConfigArgsArgs) ToGetIAMPolicyAuditConfigArgsOutput() GetIAMPolicyAuditConfigArgsOutput {
	return i.ToGetIAMPolicyAuditConfigArgsOutputWithContext(context.Background())
}

func (i GetIAMPolicyAuditConfigArgsArgs) ToGetIAMPolicyAuditConfigArgsOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyAuditConfigArgsOutput)
}

type GetIAMPolicyAuditConfigArgsArrayInput interface {
	pulumi.Input

	ToGetIAMPolicyAuditConfigArgsArrayOutput() GetIAMPolicyAuditConfigArgsArrayOutput
	ToGetIAMPolicyAuditConfigArgsArrayOutputWithContext(context.Context) GetIAMPolicyAuditConfigArgsArrayOutput
}

type GetIAMPolicyAuditConfigArgsArray []GetIAMPolicyAuditConfigArgsInput

func (GetIAMPolicyAuditConfigArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyAuditConfigArgs)(nil)).Elem()
}

func (i GetIAMPolicyAuditConfigArgsArray) ToGetIAMPolicyAuditConfigArgsArrayOutput() GetIAMPolicyAuditConfigArgsArrayOutput {
	return i.ToGetIAMPolicyAuditConfigArgsArrayOutputWithContext(context.Background())
}

func (i GetIAMPolicyAuditConfigArgsArray) ToGetIAMPolicyAuditConfigArgsArrayOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyAuditConfigArgsArrayOutput)
}

type GetIAMPolicyAuditConfigArgsOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyAuditConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyAuditConfigArgs)(nil)).Elem()
}

func (o GetIAMPolicyAuditConfigArgsOutput) ToGetIAMPolicyAuditConfigArgsOutput() GetIAMPolicyAuditConfigArgsOutput {
	return o
}

func (o GetIAMPolicyAuditConfigArgsOutput) ToGetIAMPolicyAuditConfigArgsOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigArgsOutput {
	return o
}

// A nested block that defines the operations you'd like to log.
func (o GetIAMPolicyAuditConfigArgsOutput) AuditLogConfigs() GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput {
	return o.ApplyT(func(v GetIAMPolicyAuditConfigArgs) []GetIAMPolicyAuditConfigAuditLogConfigArgs {
		return v.AuditLogConfigs
	}).(GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput)
}

// Defines a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o GetIAMPolicyAuditConfigArgsOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyAuditConfigArgs) string { return v.Service }).(pulumi.StringOutput)
}

type GetIAMPolicyAuditConfigArgsArrayOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyAuditConfigArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyAuditConfigArgs)(nil)).Elem()
}

func (o GetIAMPolicyAuditConfigArgsArrayOutput) ToGetIAMPolicyAuditConfigArgsArrayOutput() GetIAMPolicyAuditConfigArgsArrayOutput {
	return o
}

func (o GetIAMPolicyAuditConfigArgsArrayOutput) ToGetIAMPolicyAuditConfigArgsArrayOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigArgsArrayOutput {
	return o
}

func (o GetIAMPolicyAuditConfigArgsArrayOutput) Index(i pulumi.IntInput) GetIAMPolicyAuditConfigArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIAMPolicyAuditConfigArgs {
		return vs[0].([]GetIAMPolicyAuditConfigArgs)[vs[1].(int)]
	}).(GetIAMPolicyAuditConfigArgsOutput)
}

type GetIAMPolicyAuditConfigAuditLogConfig struct {
	// Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
	LogType string `pulumi:"logType"`
}

type GetIAMPolicyAuditConfigAuditLogConfigInput interface {
	pulumi.Input

	ToGetIAMPolicyAuditConfigAuditLogConfigOutput() GetIAMPolicyAuditConfigAuditLogConfigOutput
	ToGetIAMPolicyAuditConfigAuditLogConfigOutputWithContext(context.Context) GetIAMPolicyAuditConfigAuditLogConfigOutput
}

type GetIAMPolicyAuditConfigAuditLogConfigArgs struct {
	// Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (GetIAMPolicyAuditConfigAuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i GetIAMPolicyAuditConfigAuditLogConfigArgs) ToGetIAMPolicyAuditConfigAuditLogConfigOutput() GetIAMPolicyAuditConfigAuditLogConfigOutput {
	return i.ToGetIAMPolicyAuditConfigAuditLogConfigOutputWithContext(context.Background())
}

func (i GetIAMPolicyAuditConfigAuditLogConfigArgs) ToGetIAMPolicyAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigAuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyAuditConfigAuditLogConfigOutput)
}

type GetIAMPolicyAuditConfigAuditLogConfigArrayInput interface {
	pulumi.Input

	ToGetIAMPolicyAuditConfigAuditLogConfigArrayOutput() GetIAMPolicyAuditConfigAuditLogConfigArrayOutput
	ToGetIAMPolicyAuditConfigAuditLogConfigArrayOutputWithContext(context.Context) GetIAMPolicyAuditConfigAuditLogConfigArrayOutput
}

type GetIAMPolicyAuditConfigAuditLogConfigArray []GetIAMPolicyAuditConfigAuditLogConfigInput

func (GetIAMPolicyAuditConfigAuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyAuditConfigAuditLogConfig)(nil)).Elem()
}

func (i GetIAMPolicyAuditConfigAuditLogConfigArray) ToGetIAMPolicyAuditConfigAuditLogConfigArrayOutput() GetIAMPolicyAuditConfigAuditLogConfigArrayOutput {
	return i.ToGetIAMPolicyAuditConfigAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i GetIAMPolicyAuditConfigAuditLogConfigArray) ToGetIAMPolicyAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigAuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyAuditConfigAuditLogConfigArrayOutput)
}

type GetIAMPolicyAuditConfigAuditLogConfigOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyAuditConfigAuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o GetIAMPolicyAuditConfigAuditLogConfigOutput) ToGetIAMPolicyAuditConfigAuditLogConfigOutput() GetIAMPolicyAuditConfigAuditLogConfigOutput {
	return o
}

func (o GetIAMPolicyAuditConfigAuditLogConfigOutput) ToGetIAMPolicyAuditConfigAuditLogConfigOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigAuditLogConfigOutput {
	return o
}

// Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
func (o GetIAMPolicyAuditConfigAuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIAMPolicyAuditConfigAuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
func (o GetIAMPolicyAuditConfigAuditLogConfigOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyAuditConfigAuditLogConfig) string { return v.LogType }).(pulumi.StringOutput)
}

type GetIAMPolicyAuditConfigAuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyAuditConfigAuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyAuditConfigAuditLogConfig)(nil)).Elem()
}

func (o GetIAMPolicyAuditConfigAuditLogConfigArrayOutput) ToGetIAMPolicyAuditConfigAuditLogConfigArrayOutput() GetIAMPolicyAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o GetIAMPolicyAuditConfigAuditLogConfigArrayOutput) ToGetIAMPolicyAuditConfigAuditLogConfigArrayOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigAuditLogConfigArrayOutput {
	return o
}

func (o GetIAMPolicyAuditConfigAuditLogConfigArrayOutput) Index(i pulumi.IntInput) GetIAMPolicyAuditConfigAuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIAMPolicyAuditConfigAuditLogConfig {
		return vs[0].([]GetIAMPolicyAuditConfigAuditLogConfig)[vs[1].(int)]
	}).(GetIAMPolicyAuditConfigAuditLogConfigOutput)
}

type GetIAMPolicyAuditConfigAuditLogConfigArgs struct {
	// Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
	LogType string `pulumi:"logType"`
}

type GetIAMPolicyAuditConfigAuditLogConfigArgsInput interface {
	pulumi.Input

	ToGetIAMPolicyAuditConfigAuditLogConfigArgsOutput() GetIAMPolicyAuditConfigAuditLogConfigArgsOutput
	ToGetIAMPolicyAuditConfigAuditLogConfigArgsOutputWithContext(context.Context) GetIAMPolicyAuditConfigAuditLogConfigArgsOutput
}

type GetIAMPolicyAuditConfigAuditLogConfigArgsArgs struct {
	// Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (GetIAMPolicyAuditConfigAuditLogConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (i GetIAMPolicyAuditConfigAuditLogConfigArgsArgs) ToGetIAMPolicyAuditConfigAuditLogConfigArgsOutput() GetIAMPolicyAuditConfigAuditLogConfigArgsOutput {
	return i.ToGetIAMPolicyAuditConfigAuditLogConfigArgsOutputWithContext(context.Background())
}

func (i GetIAMPolicyAuditConfigAuditLogConfigArgsArgs) ToGetIAMPolicyAuditConfigAuditLogConfigArgsOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigAuditLogConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyAuditConfigAuditLogConfigArgsOutput)
}

type GetIAMPolicyAuditConfigAuditLogConfigArgsArrayInput interface {
	pulumi.Input

	ToGetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput() GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput
	ToGetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutputWithContext(context.Context) GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput
}

type GetIAMPolicyAuditConfigAuditLogConfigArgsArray []GetIAMPolicyAuditConfigAuditLogConfigArgsInput

func (GetIAMPolicyAuditConfigAuditLogConfigArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (i GetIAMPolicyAuditConfigAuditLogConfigArgsArray) ToGetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput() GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput {
	return i.ToGetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutputWithContext(context.Background())
}

func (i GetIAMPolicyAuditConfigAuditLogConfigArgsArray) ToGetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput)
}

type GetIAMPolicyAuditConfigAuditLogConfigArgsOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyAuditConfigAuditLogConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (o GetIAMPolicyAuditConfigAuditLogConfigArgsOutput) ToGetIAMPolicyAuditConfigAuditLogConfigArgsOutput() GetIAMPolicyAuditConfigAuditLogConfigArgsOutput {
	return o
}

func (o GetIAMPolicyAuditConfigAuditLogConfigArgsOutput) ToGetIAMPolicyAuditConfigAuditLogConfigArgsOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigAuditLogConfigArgsOutput {
	return o
}

// Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
func (o GetIAMPolicyAuditConfigAuditLogConfigArgsOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIAMPolicyAuditConfigAuditLogConfigArgs) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
func (o GetIAMPolicyAuditConfigAuditLogConfigArgsOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyAuditConfigAuditLogConfigArgs) string { return v.LogType }).(pulumi.StringOutput)
}

type GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyAuditConfigAuditLogConfigArgs)(nil)).Elem()
}

func (o GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput) ToGetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput() GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput {
	return o
}

func (o GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput) ToGetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutputWithContext(ctx context.Context) GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput {
	return o
}

func (o GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput) Index(i pulumi.IntInput) GetIAMPolicyAuditConfigAuditLogConfigArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIAMPolicyAuditConfigAuditLogConfigArgs {
		return vs[0].([]GetIAMPolicyAuditConfigAuditLogConfigArgs)[vs[1].(int)]
	}).(GetIAMPolicyAuditConfigAuditLogConfigArgsOutput)
}

type GetIAMPolicyBinding struct {
	Condition *GetIAMPolicyBindingCondition `pulumi:"condition"`
	// An array of identities that will be granted the privilege in the `role`. For more details on format and restrictions see https://cloud.google.com/billing/reference/rest/v1/Policy#Binding
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account. It **can't** be used with the `organizations.Project` resource.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account. It **can't** be used with the `organizations.Project` resource.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// The role/permission that will be granted to the members.
	// See the [IAM Roles](https://cloud.google.com/compute/docs/access/iam) documentation for a complete list of roles.
	// Note that custom roles must be of the format `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
}

type GetIAMPolicyBindingInput interface {
	pulumi.Input

	ToGetIAMPolicyBindingOutput() GetIAMPolicyBindingOutput
	ToGetIAMPolicyBindingOutputWithContext(context.Context) GetIAMPolicyBindingOutput
}

type GetIAMPolicyBindingArgs struct {
	Condition GetIAMPolicyBindingConditionPtrInput `pulumi:"condition"`
	// An array of identities that will be granted the privilege in the `role`. For more details on format and restrictions see https://cloud.google.com/billing/reference/rest/v1/Policy#Binding
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account. It **can't** be used with the `organizations.Project` resource.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account. It **can't** be used with the `organizations.Project` resource.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// The role/permission that will be granted to the members.
	// See the [IAM Roles](https://cloud.google.com/compute/docs/access/iam) documentation for a complete list of roles.
	// Note that custom roles must be of the format `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetIAMPolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyBinding)(nil)).Elem()
}

func (i GetIAMPolicyBindingArgs) ToGetIAMPolicyBindingOutput() GetIAMPolicyBindingOutput {
	return i.ToGetIAMPolicyBindingOutputWithContext(context.Background())
}

func (i GetIAMPolicyBindingArgs) ToGetIAMPolicyBindingOutputWithContext(ctx context.Context) GetIAMPolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingOutput)
}

type GetIAMPolicyBindingArrayInput interface {
	pulumi.Input

	ToGetIAMPolicyBindingArrayOutput() GetIAMPolicyBindingArrayOutput
	ToGetIAMPolicyBindingArrayOutputWithContext(context.Context) GetIAMPolicyBindingArrayOutput
}

type GetIAMPolicyBindingArray []GetIAMPolicyBindingInput

func (GetIAMPolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyBinding)(nil)).Elem()
}

func (i GetIAMPolicyBindingArray) ToGetIAMPolicyBindingArrayOutput() GetIAMPolicyBindingArrayOutput {
	return i.ToGetIAMPolicyBindingArrayOutputWithContext(context.Background())
}

func (i GetIAMPolicyBindingArray) ToGetIAMPolicyBindingArrayOutputWithContext(ctx context.Context) GetIAMPolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingArrayOutput)
}

type GetIAMPolicyBindingOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyBinding)(nil)).Elem()
}

func (o GetIAMPolicyBindingOutput) ToGetIAMPolicyBindingOutput() GetIAMPolicyBindingOutput {
	return o
}

func (o GetIAMPolicyBindingOutput) ToGetIAMPolicyBindingOutputWithContext(ctx context.Context) GetIAMPolicyBindingOutput {
	return o
}

func (o GetIAMPolicyBindingOutput) Condition() GetIAMPolicyBindingConditionPtrOutput {
	return o.ApplyT(func(v GetIAMPolicyBinding) *GetIAMPolicyBindingCondition { return v.Condition }).(GetIAMPolicyBindingConditionPtrOutput)
}

// An array of identities that will be granted the privilege in the `role`. For more details on format and restrictions see https://cloud.google.com/billing/reference/rest/v1/Policy#Binding
// Each entry can have one of the following values:
// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account. It **can't** be used with the `organizations.Project` resource.
// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account. It **can't** be used with the `organizations.Project` resource.
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
func (o GetIAMPolicyBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIAMPolicyBinding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// The role/permission that will be granted to the members.
// See the [IAM Roles](https://cloud.google.com/compute/docs/access/iam) documentation for a complete list of roles.
// Note that custom roles must be of the format `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o GetIAMPolicyBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBinding) string { return v.Role }).(pulumi.StringOutput)
}

type GetIAMPolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyBinding)(nil)).Elem()
}

func (o GetIAMPolicyBindingArrayOutput) ToGetIAMPolicyBindingArrayOutput() GetIAMPolicyBindingArrayOutput {
	return o
}

func (o GetIAMPolicyBindingArrayOutput) ToGetIAMPolicyBindingArrayOutputWithContext(ctx context.Context) GetIAMPolicyBindingArrayOutput {
	return o
}

func (o GetIAMPolicyBindingArrayOutput) Index(i pulumi.IntInput) GetIAMPolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIAMPolicyBinding {
		return vs[0].([]GetIAMPolicyBinding)[vs[1].(int)]
	}).(GetIAMPolicyBindingOutput)
}

type GetIAMPolicyBindingArgs struct {
	Condition *GetIAMPolicyBindingConditionArgs `pulumi:"condition"`
	// An array of identities that will be granted the privilege in the `role`. For more details on format and restrictions see https://cloud.google.com/billing/reference/rest/v1/Policy#Binding
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account. It **can't** be used with the `organizations.Project` resource.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account. It **can't** be used with the `organizations.Project` resource.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// The role/permission that will be granted to the members.
	// See the [IAM Roles](https://cloud.google.com/compute/docs/access/iam) documentation for a complete list of roles.
	// Note that custom roles must be of the format `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role string `pulumi:"role"`
}

type GetIAMPolicyBindingArgsInput interface {
	pulumi.Input

	ToGetIAMPolicyBindingArgsOutput() GetIAMPolicyBindingArgsOutput
	ToGetIAMPolicyBindingArgsOutputWithContext(context.Context) GetIAMPolicyBindingArgsOutput
}

type GetIAMPolicyBindingArgsArgs struct {
	Condition GetIAMPolicyBindingConditionArgsPtrInput `pulumi:"condition"`
	// An array of identities that will be granted the privilege in the `role`. For more details on format and restrictions see https://cloud.google.com/billing/reference/rest/v1/Policy#Binding
	// Each entry can have one of the following values:
	// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account. It **can't** be used with the `organizations.Project` resource.
	// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account. It **can't** be used with the `organizations.Project` resource.
	// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com.
	// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
	// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// The role/permission that will be granted to the members.
	// See the [IAM Roles](https://cloud.google.com/compute/docs/access/iam) documentation for a complete list of roles.
	// Note that custom roles must be of the format `[projects|organizations]/{parent-name}/roles/{role-name}`.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetIAMPolicyBindingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyBindingArgs)(nil)).Elem()
}

func (i GetIAMPolicyBindingArgsArgs) ToGetIAMPolicyBindingArgsOutput() GetIAMPolicyBindingArgsOutput {
	return i.ToGetIAMPolicyBindingArgsOutputWithContext(context.Background())
}

func (i GetIAMPolicyBindingArgsArgs) ToGetIAMPolicyBindingArgsOutputWithContext(ctx context.Context) GetIAMPolicyBindingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingArgsOutput)
}

type GetIAMPolicyBindingArgsArrayInput interface {
	pulumi.Input

	ToGetIAMPolicyBindingArgsArrayOutput() GetIAMPolicyBindingArgsArrayOutput
	ToGetIAMPolicyBindingArgsArrayOutputWithContext(context.Context) GetIAMPolicyBindingArgsArrayOutput
}

type GetIAMPolicyBindingArgsArray []GetIAMPolicyBindingArgsInput

func (GetIAMPolicyBindingArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyBindingArgs)(nil)).Elem()
}

func (i GetIAMPolicyBindingArgsArray) ToGetIAMPolicyBindingArgsArrayOutput() GetIAMPolicyBindingArgsArrayOutput {
	return i.ToGetIAMPolicyBindingArgsArrayOutputWithContext(context.Background())
}

func (i GetIAMPolicyBindingArgsArray) ToGetIAMPolicyBindingArgsArrayOutputWithContext(ctx context.Context) GetIAMPolicyBindingArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingArgsArrayOutput)
}

type GetIAMPolicyBindingArgsOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyBindingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyBindingArgs)(nil)).Elem()
}

func (o GetIAMPolicyBindingArgsOutput) ToGetIAMPolicyBindingArgsOutput() GetIAMPolicyBindingArgsOutput {
	return o
}

func (o GetIAMPolicyBindingArgsOutput) ToGetIAMPolicyBindingArgsOutputWithContext(ctx context.Context) GetIAMPolicyBindingArgsOutput {
	return o
}

func (o GetIAMPolicyBindingArgsOutput) Condition() GetIAMPolicyBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingArgs) *GetIAMPolicyBindingConditionArgs { return v.Condition }).(GetIAMPolicyBindingConditionArgsPtrOutput)
}

// An array of identities that will be granted the privilege in the `role`. For more details on format and restrictions see https://cloud.google.com/billing/reference/rest/v1/Policy#Binding
// Each entry can have one of the following values:
// * **allUsers**: A special identifier that represents anyone who is on the internet; with or without a Google account. It **can't** be used with the `organizations.Project` resource.
// * **allAuthenticatedUsers**: A special identifier that represents anyone who is authenticated with a Google account or a service account. It **can't** be used with the `organizations.Project` resource.
// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com.
// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
func (o GetIAMPolicyBindingArgsOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingArgs) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// The role/permission that will be granted to the members.
// See the [IAM Roles](https://cloud.google.com/compute/docs/access/iam) documentation for a complete list of roles.
// Note that custom roles must be of the format `[projects|organizations]/{parent-name}/roles/{role-name}`.
func (o GetIAMPolicyBindingArgsOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingArgs) string { return v.Role }).(pulumi.StringOutput)
}

type GetIAMPolicyBindingArgsArrayOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyBindingArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIAMPolicyBindingArgs)(nil)).Elem()
}

func (o GetIAMPolicyBindingArgsArrayOutput) ToGetIAMPolicyBindingArgsArrayOutput() GetIAMPolicyBindingArgsArrayOutput {
	return o
}

func (o GetIAMPolicyBindingArgsArrayOutput) ToGetIAMPolicyBindingArgsArrayOutputWithContext(ctx context.Context) GetIAMPolicyBindingArgsArrayOutput {
	return o
}

func (o GetIAMPolicyBindingArgsArrayOutput) Index(i pulumi.IntInput) GetIAMPolicyBindingArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIAMPolicyBindingArgs {
		return vs[0].([]GetIAMPolicyBindingArgs)[vs[1].(int)]
	}).(GetIAMPolicyBindingArgsOutput)
}

type GetIAMPolicyBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type GetIAMPolicyBindingConditionInput interface {
	pulumi.Input

	ToGetIAMPolicyBindingConditionOutput() GetIAMPolicyBindingConditionOutput
	ToGetIAMPolicyBindingConditionOutputWithContext(context.Context) GetIAMPolicyBindingConditionOutput
}

type GetIAMPolicyBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (GetIAMPolicyBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyBindingCondition)(nil)).Elem()
}

func (i GetIAMPolicyBindingConditionArgs) ToGetIAMPolicyBindingConditionOutput() GetIAMPolicyBindingConditionOutput {
	return i.ToGetIAMPolicyBindingConditionOutputWithContext(context.Background())
}

func (i GetIAMPolicyBindingConditionArgs) ToGetIAMPolicyBindingConditionOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingConditionOutput)
}

func (i GetIAMPolicyBindingConditionArgs) ToGetIAMPolicyBindingConditionPtrOutput() GetIAMPolicyBindingConditionPtrOutput {
	return i.ToGetIAMPolicyBindingConditionPtrOutputWithContext(context.Background())
}

func (i GetIAMPolicyBindingConditionArgs) ToGetIAMPolicyBindingConditionPtrOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingConditionOutput).ToGetIAMPolicyBindingConditionPtrOutputWithContext(ctx)
}

type GetIAMPolicyBindingConditionPtrInput interface {
	pulumi.Input

	ToGetIAMPolicyBindingConditionPtrOutput() GetIAMPolicyBindingConditionPtrOutput
	ToGetIAMPolicyBindingConditionPtrOutputWithContext(context.Context) GetIAMPolicyBindingConditionPtrOutput
}

type getIAMPolicyBindingConditionPtrType GetIAMPolicyBindingConditionArgs

func GetIAMPolicyBindingConditionPtr(v *GetIAMPolicyBindingConditionArgs) GetIAMPolicyBindingConditionPtrInput {
	return (*getIAMPolicyBindingConditionPtrType)(v)
}

func (*getIAMPolicyBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIAMPolicyBindingCondition)(nil)).Elem()
}

func (i *getIAMPolicyBindingConditionPtrType) ToGetIAMPolicyBindingConditionPtrOutput() GetIAMPolicyBindingConditionPtrOutput {
	return i.ToGetIAMPolicyBindingConditionPtrOutputWithContext(context.Background())
}

func (i *getIAMPolicyBindingConditionPtrType) ToGetIAMPolicyBindingConditionPtrOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingConditionPtrOutput)
}

type GetIAMPolicyBindingConditionOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyBindingCondition)(nil)).Elem()
}

func (o GetIAMPolicyBindingConditionOutput) ToGetIAMPolicyBindingConditionOutput() GetIAMPolicyBindingConditionOutput {
	return o
}

func (o GetIAMPolicyBindingConditionOutput) ToGetIAMPolicyBindingConditionOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionOutput {
	return o
}

func (o GetIAMPolicyBindingConditionOutput) ToGetIAMPolicyBindingConditionPtrOutput() GetIAMPolicyBindingConditionPtrOutput {
	return o.ToGetIAMPolicyBindingConditionPtrOutputWithContext(context.Background())
}

func (o GetIAMPolicyBindingConditionOutput) ToGetIAMPolicyBindingConditionPtrOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionPtrOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingCondition) *GetIAMPolicyBindingCondition {
		return &v
	}).(GetIAMPolicyBindingConditionPtrOutput)
}
func (o GetIAMPolicyBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetIAMPolicyBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o GetIAMPolicyBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type GetIAMPolicyBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIAMPolicyBindingCondition)(nil)).Elem()
}

func (o GetIAMPolicyBindingConditionPtrOutput) ToGetIAMPolicyBindingConditionPtrOutput() GetIAMPolicyBindingConditionPtrOutput {
	return o
}

func (o GetIAMPolicyBindingConditionPtrOutput) ToGetIAMPolicyBindingConditionPtrOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionPtrOutput {
	return o
}

func (o GetIAMPolicyBindingConditionPtrOutput) Elem() GetIAMPolicyBindingConditionOutput {
	return o.ApplyT(func(v *GetIAMPolicyBindingCondition) GetIAMPolicyBindingCondition { return *v }).(GetIAMPolicyBindingConditionOutput)
}

func (o GetIAMPolicyBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetIAMPolicyBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o GetIAMPolicyBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type GetIAMPolicyBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type GetIAMPolicyBindingConditionArgsInput interface {
	pulumi.Input

	ToGetIAMPolicyBindingConditionArgsOutput() GetIAMPolicyBindingConditionArgsOutput
	ToGetIAMPolicyBindingConditionArgsOutputWithContext(context.Context) GetIAMPolicyBindingConditionArgsOutput
}

type GetIAMPolicyBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (GetIAMPolicyBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyBindingConditionArgs)(nil)).Elem()
}

func (i GetIAMPolicyBindingConditionArgsArgs) ToGetIAMPolicyBindingConditionArgsOutput() GetIAMPolicyBindingConditionArgsOutput {
	return i.ToGetIAMPolicyBindingConditionArgsOutputWithContext(context.Background())
}

func (i GetIAMPolicyBindingConditionArgsArgs) ToGetIAMPolicyBindingConditionArgsOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingConditionArgsOutput)
}

func (i GetIAMPolicyBindingConditionArgsArgs) ToGetIAMPolicyBindingConditionArgsPtrOutput() GetIAMPolicyBindingConditionArgsPtrOutput {
	return i.ToGetIAMPolicyBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i GetIAMPolicyBindingConditionArgsArgs) ToGetIAMPolicyBindingConditionArgsPtrOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingConditionArgsOutput).ToGetIAMPolicyBindingConditionArgsPtrOutputWithContext(ctx)
}

type GetIAMPolicyBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToGetIAMPolicyBindingConditionArgsPtrOutput() GetIAMPolicyBindingConditionArgsPtrOutput
	ToGetIAMPolicyBindingConditionArgsPtrOutputWithContext(context.Context) GetIAMPolicyBindingConditionArgsPtrOutput
}

type getIAMPolicyBindingConditionArgsPtrType GetIAMPolicyBindingConditionArgsArgs

func GetIAMPolicyBindingConditionArgsPtr(v *GetIAMPolicyBindingConditionArgsArgs) GetIAMPolicyBindingConditionArgsPtrInput {
	return (*getIAMPolicyBindingConditionArgsPtrType)(v)
}

func (*getIAMPolicyBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIAMPolicyBindingConditionArgs)(nil)).Elem()
}

func (i *getIAMPolicyBindingConditionArgsPtrType) ToGetIAMPolicyBindingConditionArgsPtrOutput() GetIAMPolicyBindingConditionArgsPtrOutput {
	return i.ToGetIAMPolicyBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *getIAMPolicyBindingConditionArgsPtrType) ToGetIAMPolicyBindingConditionArgsPtrOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIAMPolicyBindingConditionArgsPtrOutput)
}

type GetIAMPolicyBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIAMPolicyBindingConditionArgs)(nil)).Elem()
}

func (o GetIAMPolicyBindingConditionArgsOutput) ToGetIAMPolicyBindingConditionArgsOutput() GetIAMPolicyBindingConditionArgsOutput {
	return o
}

func (o GetIAMPolicyBindingConditionArgsOutput) ToGetIAMPolicyBindingConditionArgsOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionArgsOutput {
	return o
}

func (o GetIAMPolicyBindingConditionArgsOutput) ToGetIAMPolicyBindingConditionArgsPtrOutput() GetIAMPolicyBindingConditionArgsPtrOutput {
	return o.ToGetIAMPolicyBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o GetIAMPolicyBindingConditionArgsOutput) ToGetIAMPolicyBindingConditionArgsPtrOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingConditionArgs) *GetIAMPolicyBindingConditionArgs {
		return &v
	}).(GetIAMPolicyBindingConditionArgsPtrOutput)
}
func (o GetIAMPolicyBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetIAMPolicyBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o GetIAMPolicyBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type GetIAMPolicyBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (GetIAMPolicyBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIAMPolicyBindingConditionArgs)(nil)).Elem()
}

func (o GetIAMPolicyBindingConditionArgsPtrOutput) ToGetIAMPolicyBindingConditionArgsPtrOutput() GetIAMPolicyBindingConditionArgsPtrOutput {
	return o
}

func (o GetIAMPolicyBindingConditionArgsPtrOutput) ToGetIAMPolicyBindingConditionArgsPtrOutputWithContext(ctx context.Context) GetIAMPolicyBindingConditionArgsPtrOutput {
	return o
}

func (o GetIAMPolicyBindingConditionArgsPtrOutput) Elem() GetIAMPolicyBindingConditionArgsOutput {
	return o.ApplyT(func(v *GetIAMPolicyBindingConditionArgs) GetIAMPolicyBindingConditionArgs { return *v }).(GetIAMPolicyBindingConditionArgsOutput)
}

func (o GetIAMPolicyBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetIAMPolicyBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o GetIAMPolicyBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetIAMPolicyBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(IAMBindingConditionOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(IAMBindingConditionStateOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(IAMMemberConditionStateOutput{})
	pulumi.RegisterOutputType(IamAuditConfigAuditLogConfigOutput{})
	pulumi.RegisterOutputType(IamAuditConfigAuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(IamAuditConfigAuditLogConfigArgsOutput{})
	pulumi.RegisterOutputType(IamAuditConfigAuditLogConfigArgsArrayOutput{})
	pulumi.RegisterOutputType(IamAuditConfigAuditLogConfigStateOutput{})
	pulumi.RegisterOutputType(IamAuditConfigAuditLogConfigStateArrayOutput{})
	pulumi.RegisterOutputType(PolicyBooleanPolicyOutput{})
	pulumi.RegisterOutputType(PolicyBooleanPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyBooleanPolicyArgsOutput{})
	pulumi.RegisterOutputType(PolicyBooleanPolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(PolicyBooleanPolicyStateOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyAllowOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyAllowPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyAllowArgsOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyAllowArgsPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyArgsOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyDenyOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyDenyPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyDenyArgsOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyDenyArgsPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyStateOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyStateAllowOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyStateAllowPtrOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyStateDenyOutput{})
	pulumi.RegisterOutputType(PolicyListPolicyStateDenyPtrOutput{})
	pulumi.RegisterOutputType(PolicyRestorePolicyOutput{})
	pulumi.RegisterOutputType(PolicyRestorePolicyPtrOutput{})
	pulumi.RegisterOutputType(PolicyRestorePolicyArgsOutput{})
	pulumi.RegisterOutputType(PolicyRestorePolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(PolicyRestorePolicyStateOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyAuditConfigOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyAuditConfigArrayOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyAuditConfigArgsOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyAuditConfigArgsArrayOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyAuditConfigAuditLogConfigOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyAuditConfigAuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyAuditConfigAuditLogConfigArgsOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyAuditConfigAuditLogConfigArgsArrayOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyBindingOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyBindingArgsOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyBindingArgsArrayOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyBindingConditionOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(GetIAMPolicyBindingConditionArgsPtrOutput{})
}
