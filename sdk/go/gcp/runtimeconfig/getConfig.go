// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package runtimeconfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// To get more information about RuntimeConfigs, see:
//
// * [API documentation](https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs)
// * How-to Guides
//     * [Runtime Configurator Fundamentals](https://cloud.google.com/deployment-manager/runtime-configurator/)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/runtimeconfig"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := runtimeconfig.LookupConfig(ctx, &runtimeconfig.LookupConfigArgs{
// 			Name: "my-service",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupConfig(ctx *pulumi.Context, args *LookupConfigArgs, opts ...pulumi.InvokeOption) (*LookupConfigResult, error) {
	var rv LookupConfigResult
	err := ctx.Invoke("gcp:runtimeconfig/getConfig:getConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfig.
type LookupConfigArgs struct {
	// The name of the Runtime Configurator configuration.
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
}

// A collection of values returned by getConfig.
type LookupConfigResult struct {
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Name    string  `pulumi:"name"`
	Project *string `pulumi:"project"`
}

func LookupConfigApply(ctx *pulumi.Context, args LookupConfigApplyInput, opts ...pulumi.InvokeOption) LookupConfigResultOutput {
	return args.ToLookupConfigApplyOutput().ApplyT(func(v LookupConfigArgs) (LookupConfigResult, error) {
		r, err := LookupConfig(ctx, &v, opts...)
		return *r, err

	}).(LookupConfigResultOutput)
}

// LookupConfigApplyInput is an input type that accepts LookupConfigApplyArgs and LookupConfigApplyOutput values.
// You can construct a concrete instance of `LookupConfigApplyInput` via:
//
//          LookupConfigApplyArgs{...}
type LookupConfigApplyInput interface {
	pulumi.Input

	ToLookupConfigApplyOutput() LookupConfigApplyOutput
	ToLookupConfigApplyOutputWithContext(context.Context) LookupConfigApplyOutput
}

// A collection of arguments for invoking getConfig.
type LookupConfigApplyArgs struct {
	// The name of the Runtime Configurator configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupConfigApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigArgs)(nil)).Elem()
}

func (i LookupConfigApplyArgs) ToLookupConfigApplyOutput() LookupConfigApplyOutput {
	return i.ToLookupConfigApplyOutputWithContext(context.Background())
}

func (i LookupConfigApplyArgs) ToLookupConfigApplyOutputWithContext(ctx context.Context) LookupConfigApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupConfigApplyOutput)
}

// A collection of arguments for invoking getConfig.
type LookupConfigApplyOutput struct{ *pulumi.OutputState }

func (LookupConfigApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigArgs)(nil)).Elem()
}

func (o LookupConfigApplyOutput) ToLookupConfigApplyOutput() LookupConfigApplyOutput {
	return o
}

func (o LookupConfigApplyOutput) ToLookupConfigApplyOutputWithContext(ctx context.Context) LookupConfigApplyOutput {
	return o
}

// The name of the Runtime Configurator configuration.
func (o LookupConfigApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The project in which the resource belongs. If it
// is not provided, the provider project is used.
func (o LookupConfigApplyOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigArgs) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// A collection of values returned by getConfig.
type LookupConfigResultOutput struct{ *pulumi.OutputState }

func (LookupConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigResult)(nil)).Elem()
}

func (o LookupConfigResultOutput) ToLookupConfigResultOutput() LookupConfigResultOutput {
	return o
}

func (o LookupConfigResultOutput) ToLookupConfigResultOutputWithContext(ctx context.Context) LookupConfigResultOutput {
	return o
}

func (o LookupConfigResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupConfigResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigApplyOutput{})
	pulumi.RegisterOutputType(LookupConfigResultOutput{})
}
