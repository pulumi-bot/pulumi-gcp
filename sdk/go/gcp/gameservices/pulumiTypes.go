// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package gameservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GameServerClusterConnectionInfo struct {
	GkeClusterReference GameServerClusterConnectionInfoGkeClusterReference `pulumi:"gkeClusterReference"`
	Namespace           string                                             `pulumi:"namespace"`
}

type GameServerClusterConnectionInfoInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoOutput() GameServerClusterConnectionInfoOutput
	ToGameServerClusterConnectionInfoOutputWithContext(context.Context) GameServerClusterConnectionInfoOutput
}

type GameServerClusterConnectionInfoArgs struct {
	GkeClusterReference GameServerClusterConnectionInfoGkeClusterReferenceInput `pulumi:"gkeClusterReference"`
	Namespace           pulumi.StringInput                                      `pulumi:"namespace"`
}

func (GameServerClusterConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfo)(nil)).Elem()
}

func (i GameServerClusterConnectionInfoArgs) ToGameServerClusterConnectionInfoOutput() GameServerClusterConnectionInfoOutput {
	return i.ToGameServerClusterConnectionInfoOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoArgs) ToGameServerClusterConnectionInfoOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoOutput)
}

func (i GameServerClusterConnectionInfoArgs) ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput {
	return i.ToGameServerClusterConnectionInfoPtrOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoArgs) ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoOutput).ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx)
}

type GameServerClusterConnectionInfoPtrInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput
	ToGameServerClusterConnectionInfoPtrOutputWithContext(context.Context) GameServerClusterConnectionInfoPtrOutput
}

type gameServerClusterConnectionInfoPtrType GameServerClusterConnectionInfoArgs

func GameServerClusterConnectionInfoPtr(v *GameServerClusterConnectionInfoArgs) GameServerClusterConnectionInfoPtrInput {
	return (*gameServerClusterConnectionInfoPtrType)(v)
}

func (*gameServerClusterConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerClusterConnectionInfo)(nil)).Elem()
}

func (i *gameServerClusterConnectionInfoPtrType) ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput {
	return i.ToGameServerClusterConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *gameServerClusterConnectionInfoPtrType) ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoPtrOutput)
}

type GameServerClusterConnectionInfoOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfo)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoOutput) ToGameServerClusterConnectionInfoOutput() GameServerClusterConnectionInfoOutput {
	return o
}

func (o GameServerClusterConnectionInfoOutput) ToGameServerClusterConnectionInfoOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoOutput {
	return o
}

func (o GameServerClusterConnectionInfoOutput) ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput {
	return o.ToGameServerClusterConnectionInfoPtrOutputWithContext(context.Background())
}

func (o GameServerClusterConnectionInfoOutput) ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoPtrOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) *GameServerClusterConnectionInfo {
		return &v
	}).(GameServerClusterConnectionInfoPtrOutput)
}
func (o GameServerClusterConnectionInfoOutput) GkeClusterReference() GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) GameServerClusterConnectionInfoGkeClusterReference {
		return v.GkeClusterReference
	}).(GameServerClusterConnectionInfoGkeClusterReferenceOutput)
}

func (o GameServerClusterConnectionInfoOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) string { return v.Namespace }).(pulumi.StringOutput)
}

type GameServerClusterConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerClusterConnectionInfo)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoPtrOutput) ToGameServerClusterConnectionInfoPtrOutput() GameServerClusterConnectionInfoPtrOutput {
	return o
}

func (o GameServerClusterConnectionInfoPtrOutput) ToGameServerClusterConnectionInfoPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoPtrOutput {
	return o
}

func (o GameServerClusterConnectionInfoPtrOutput) Elem() GameServerClusterConnectionInfoOutput {
	return o.ApplyT(func(v *GameServerClusterConnectionInfo) GameServerClusterConnectionInfo { return *v }).(GameServerClusterConnectionInfoOutput)
}

func (o GameServerClusterConnectionInfoPtrOutput) GkeClusterReference() GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) GameServerClusterConnectionInfoGkeClusterReference {
		return v.GkeClusterReference
	}).(GameServerClusterConnectionInfoGkeClusterReferenceOutput)
}

func (o GameServerClusterConnectionInfoPtrOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfo) string { return v.Namespace }).(pulumi.StringOutput)
}

type GameServerClusterConnectionInfoArgs struct {
	GkeClusterReference GameServerClusterConnectionInfoGkeClusterReferenceArgs `pulumi:"gkeClusterReference"`
	Namespace           string                                                 `pulumi:"namespace"`
}

type GameServerClusterConnectionInfoArgsInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoArgsOutput() GameServerClusterConnectionInfoArgsOutput
	ToGameServerClusterConnectionInfoArgsOutputWithContext(context.Context) GameServerClusterConnectionInfoArgsOutput
}

type GameServerClusterConnectionInfoArgsArgs struct {
	GkeClusterReference GameServerClusterConnectionInfoGkeClusterReferenceArgsInput `pulumi:"gkeClusterReference"`
	Namespace           pulumi.StringInput                                          `pulumi:"namespace"`
}

func (GameServerClusterConnectionInfoArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoArgs)(nil)).Elem()
}

func (i GameServerClusterConnectionInfoArgsArgs) ToGameServerClusterConnectionInfoArgsOutput() GameServerClusterConnectionInfoArgsOutput {
	return i.ToGameServerClusterConnectionInfoArgsOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoArgsArgs) ToGameServerClusterConnectionInfoArgsOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoArgsOutput)
}

func (i GameServerClusterConnectionInfoArgsArgs) ToGameServerClusterConnectionInfoArgsPtrOutput() GameServerClusterConnectionInfoArgsPtrOutput {
	return i.ToGameServerClusterConnectionInfoArgsPtrOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoArgsArgs) ToGameServerClusterConnectionInfoArgsPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoArgsOutput).ToGameServerClusterConnectionInfoArgsPtrOutputWithContext(ctx)
}

type GameServerClusterConnectionInfoArgsPtrInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoArgsPtrOutput() GameServerClusterConnectionInfoArgsPtrOutput
	ToGameServerClusterConnectionInfoArgsPtrOutputWithContext(context.Context) GameServerClusterConnectionInfoArgsPtrOutput
}

type gameServerClusterConnectionInfoArgsPtrType GameServerClusterConnectionInfoArgsArgs

func GameServerClusterConnectionInfoArgsPtr(v *GameServerClusterConnectionInfoArgsArgs) GameServerClusterConnectionInfoArgsPtrInput {
	return (*gameServerClusterConnectionInfoArgsPtrType)(v)
}

func (*gameServerClusterConnectionInfoArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerClusterConnectionInfoArgs)(nil)).Elem()
}

func (i *gameServerClusterConnectionInfoArgsPtrType) ToGameServerClusterConnectionInfoArgsPtrOutput() GameServerClusterConnectionInfoArgsPtrOutput {
	return i.ToGameServerClusterConnectionInfoArgsPtrOutputWithContext(context.Background())
}

func (i *gameServerClusterConnectionInfoArgsPtrType) ToGameServerClusterConnectionInfoArgsPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoArgsPtrOutput)
}

type GameServerClusterConnectionInfoArgsOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoArgs)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoArgsOutput) ToGameServerClusterConnectionInfoArgsOutput() GameServerClusterConnectionInfoArgsOutput {
	return o
}

func (o GameServerClusterConnectionInfoArgsOutput) ToGameServerClusterConnectionInfoArgsOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoArgsOutput {
	return o
}

func (o GameServerClusterConnectionInfoArgsOutput) ToGameServerClusterConnectionInfoArgsPtrOutput() GameServerClusterConnectionInfoArgsPtrOutput {
	return o.ToGameServerClusterConnectionInfoArgsPtrOutputWithContext(context.Background())
}

func (o GameServerClusterConnectionInfoArgsOutput) ToGameServerClusterConnectionInfoArgsPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoArgsPtrOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoArgs) *GameServerClusterConnectionInfoArgs {
		return &v
	}).(GameServerClusterConnectionInfoArgsPtrOutput)
}
func (o GameServerClusterConnectionInfoArgsOutput) GkeClusterReference() GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoArgs) GameServerClusterConnectionInfoGkeClusterReferenceArgs {
		return v.GkeClusterReference
	}).(GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput)
}

func (o GameServerClusterConnectionInfoArgsOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoArgs) string { return v.Namespace }).(pulumi.StringOutput)
}

type GameServerClusterConnectionInfoArgsPtrOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerClusterConnectionInfoArgs)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoArgsPtrOutput) ToGameServerClusterConnectionInfoArgsPtrOutput() GameServerClusterConnectionInfoArgsPtrOutput {
	return o
}

func (o GameServerClusterConnectionInfoArgsPtrOutput) ToGameServerClusterConnectionInfoArgsPtrOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoArgsPtrOutput {
	return o
}

func (o GameServerClusterConnectionInfoArgsPtrOutput) Elem() GameServerClusterConnectionInfoArgsOutput {
	return o.ApplyT(func(v *GameServerClusterConnectionInfoArgs) GameServerClusterConnectionInfoArgs { return *v }).(GameServerClusterConnectionInfoArgsOutput)
}

func (o GameServerClusterConnectionInfoArgsPtrOutput) GkeClusterReference() GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoArgs) GameServerClusterConnectionInfoGkeClusterReferenceArgs {
		return v.GkeClusterReference
	}).(GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput)
}

func (o GameServerClusterConnectionInfoArgsPtrOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoArgs) string { return v.Namespace }).(pulumi.StringOutput)
}

type GameServerClusterConnectionInfoGkeClusterReference struct {
	Cluster string `pulumi:"cluster"`
}

type GameServerClusterConnectionInfoGkeClusterReferenceInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoGkeClusterReferenceOutput() GameServerClusterConnectionInfoGkeClusterReferenceOutput
	ToGameServerClusterConnectionInfoGkeClusterReferenceOutputWithContext(context.Context) GameServerClusterConnectionInfoGkeClusterReferenceOutput
}

type GameServerClusterConnectionInfoGkeClusterReferenceArgs struct {
	Cluster pulumi.StringInput `pulumi:"cluster"`
}

func (GameServerClusterConnectionInfoGkeClusterReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoGkeClusterReference)(nil)).Elem()
}

func (i GameServerClusterConnectionInfoGkeClusterReferenceArgs) ToGameServerClusterConnectionInfoGkeClusterReferenceOutput() GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return i.ToGameServerClusterConnectionInfoGkeClusterReferenceOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoGkeClusterReferenceArgs) ToGameServerClusterConnectionInfoGkeClusterReferenceOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoGkeClusterReferenceOutput)
}

type GameServerClusterConnectionInfoGkeClusterReferenceOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoGkeClusterReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoGkeClusterReference)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoGkeClusterReferenceOutput) ToGameServerClusterConnectionInfoGkeClusterReferenceOutput() GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return o
}

func (o GameServerClusterConnectionInfoGkeClusterReferenceOutput) ToGameServerClusterConnectionInfoGkeClusterReferenceOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoGkeClusterReferenceOutput {
	return o
}

func (o GameServerClusterConnectionInfoGkeClusterReferenceOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoGkeClusterReference) string { return v.Cluster }).(pulumi.StringOutput)
}

type GameServerClusterConnectionInfoGkeClusterReferenceArgs struct {
	Cluster string `pulumi:"cluster"`
}

type GameServerClusterConnectionInfoGkeClusterReferenceArgsInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoGkeClusterReferenceArgsOutput() GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput
	ToGameServerClusterConnectionInfoGkeClusterReferenceArgsOutputWithContext(context.Context) GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput
}

type GameServerClusterConnectionInfoGkeClusterReferenceArgsArgs struct {
	Cluster pulumi.StringInput `pulumi:"cluster"`
}

func (GameServerClusterConnectionInfoGkeClusterReferenceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoGkeClusterReferenceArgs)(nil)).Elem()
}

func (i GameServerClusterConnectionInfoGkeClusterReferenceArgsArgs) ToGameServerClusterConnectionInfoGkeClusterReferenceArgsOutput() GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput {
	return i.ToGameServerClusterConnectionInfoGkeClusterReferenceArgsOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoGkeClusterReferenceArgsArgs) ToGameServerClusterConnectionInfoGkeClusterReferenceArgsOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput)
}

type GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoGkeClusterReferenceArgs)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput) ToGameServerClusterConnectionInfoGkeClusterReferenceArgsOutput() GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput {
	return o
}

func (o GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput) ToGameServerClusterConnectionInfoGkeClusterReferenceArgsOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput {
	return o
}

func (o GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoGkeClusterReferenceArgs) string { return v.Cluster }).(pulumi.StringOutput)
}

type GameServerClusterConnectionInfoState struct {
	GkeClusterReference GameServerClusterConnectionInfoStateGkeClusterReference `pulumi:"gkeClusterReference"`
	Namespace           string                                                  `pulumi:"namespace"`
}

type GameServerClusterConnectionInfoStateInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoStateOutput() GameServerClusterConnectionInfoStateOutput
	ToGameServerClusterConnectionInfoStateOutputWithContext(context.Context) GameServerClusterConnectionInfoStateOutput
}

type GameServerClusterConnectionInfoStateArgs struct {
	GkeClusterReference GameServerClusterConnectionInfoStateGkeClusterReferenceInput `pulumi:"gkeClusterReference"`
	Namespace           pulumi.StringInput                                           `pulumi:"namespace"`
}

func (GameServerClusterConnectionInfoStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoState)(nil)).Elem()
}

func (i GameServerClusterConnectionInfoStateArgs) ToGameServerClusterConnectionInfoStateOutput() GameServerClusterConnectionInfoStateOutput {
	return i.ToGameServerClusterConnectionInfoStateOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoStateArgs) ToGameServerClusterConnectionInfoStateOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoStateOutput)
}

type GameServerClusterConnectionInfoStateOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoState)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoStateOutput) ToGameServerClusterConnectionInfoStateOutput() GameServerClusterConnectionInfoStateOutput {
	return o
}

func (o GameServerClusterConnectionInfoStateOutput) ToGameServerClusterConnectionInfoStateOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoStateOutput {
	return o
}

func (o GameServerClusterConnectionInfoStateOutput) GkeClusterReference() GameServerClusterConnectionInfoStateGkeClusterReferenceOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoState) GameServerClusterConnectionInfoStateGkeClusterReference {
		return v.GkeClusterReference
	}).(GameServerClusterConnectionInfoStateGkeClusterReferenceOutput)
}

func (o GameServerClusterConnectionInfoStateOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoState) string { return v.Namespace }).(pulumi.StringOutput)
}

type GameServerClusterConnectionInfoStateGkeClusterReference struct {
	Cluster string `pulumi:"cluster"`
}

type GameServerClusterConnectionInfoStateGkeClusterReferenceInput interface {
	pulumi.Input

	ToGameServerClusterConnectionInfoStateGkeClusterReferenceOutput() GameServerClusterConnectionInfoStateGkeClusterReferenceOutput
	ToGameServerClusterConnectionInfoStateGkeClusterReferenceOutputWithContext(context.Context) GameServerClusterConnectionInfoStateGkeClusterReferenceOutput
}

type GameServerClusterConnectionInfoStateGkeClusterReferenceArgs struct {
	Cluster pulumi.StringInput `pulumi:"cluster"`
}

func (GameServerClusterConnectionInfoStateGkeClusterReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoStateGkeClusterReference)(nil)).Elem()
}

func (i GameServerClusterConnectionInfoStateGkeClusterReferenceArgs) ToGameServerClusterConnectionInfoStateGkeClusterReferenceOutput() GameServerClusterConnectionInfoStateGkeClusterReferenceOutput {
	return i.ToGameServerClusterConnectionInfoStateGkeClusterReferenceOutputWithContext(context.Background())
}

func (i GameServerClusterConnectionInfoStateGkeClusterReferenceArgs) ToGameServerClusterConnectionInfoStateGkeClusterReferenceOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoStateGkeClusterReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerClusterConnectionInfoStateGkeClusterReferenceOutput)
}

type GameServerClusterConnectionInfoStateGkeClusterReferenceOutput struct{ *pulumi.OutputState }

func (GameServerClusterConnectionInfoStateGkeClusterReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerClusterConnectionInfoStateGkeClusterReference)(nil)).Elem()
}

func (o GameServerClusterConnectionInfoStateGkeClusterReferenceOutput) ToGameServerClusterConnectionInfoStateGkeClusterReferenceOutput() GameServerClusterConnectionInfoStateGkeClusterReferenceOutput {
	return o
}

func (o GameServerClusterConnectionInfoStateGkeClusterReferenceOutput) ToGameServerClusterConnectionInfoStateGkeClusterReferenceOutputWithContext(ctx context.Context) GameServerClusterConnectionInfoStateGkeClusterReferenceOutput {
	return o
}

func (o GameServerClusterConnectionInfoStateGkeClusterReferenceOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerClusterConnectionInfoStateGkeClusterReference) string { return v.Cluster }).(pulumi.StringOutput)
}

type GameServerConfigFleetConfig struct {
	FleetSpec string `pulumi:"fleetSpec"`
	Name      string `pulumi:"name"`
}

type GameServerConfigFleetConfigInput interface {
	pulumi.Input

	ToGameServerConfigFleetConfigOutput() GameServerConfigFleetConfigOutput
	ToGameServerConfigFleetConfigOutputWithContext(context.Context) GameServerConfigFleetConfigOutput
}

type GameServerConfigFleetConfigArgs struct {
	FleetSpec pulumi.StringInput `pulumi:"fleetSpec"`
	Name      pulumi.StringInput `pulumi:"name"`
}

func (GameServerConfigFleetConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigFleetConfig)(nil)).Elem()
}

func (i GameServerConfigFleetConfigArgs) ToGameServerConfigFleetConfigOutput() GameServerConfigFleetConfigOutput {
	return i.ToGameServerConfigFleetConfigOutputWithContext(context.Background())
}

func (i GameServerConfigFleetConfigArgs) ToGameServerConfigFleetConfigOutputWithContext(ctx context.Context) GameServerConfigFleetConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigFleetConfigOutput)
}

type GameServerConfigFleetConfigArrayInput interface {
	pulumi.Input

	ToGameServerConfigFleetConfigArrayOutput() GameServerConfigFleetConfigArrayOutput
	ToGameServerConfigFleetConfigArrayOutputWithContext(context.Context) GameServerConfigFleetConfigArrayOutput
}

type GameServerConfigFleetConfigArray []GameServerConfigFleetConfigInput

func (GameServerConfigFleetConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigFleetConfig)(nil)).Elem()
}

func (i GameServerConfigFleetConfigArray) ToGameServerConfigFleetConfigArrayOutput() GameServerConfigFleetConfigArrayOutput {
	return i.ToGameServerConfigFleetConfigArrayOutputWithContext(context.Background())
}

func (i GameServerConfigFleetConfigArray) ToGameServerConfigFleetConfigArrayOutputWithContext(ctx context.Context) GameServerConfigFleetConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigFleetConfigArrayOutput)
}

type GameServerConfigFleetConfigOutput struct{ *pulumi.OutputState }

func (GameServerConfigFleetConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigFleetConfig)(nil)).Elem()
}

func (o GameServerConfigFleetConfigOutput) ToGameServerConfigFleetConfigOutput() GameServerConfigFleetConfigOutput {
	return o
}

func (o GameServerConfigFleetConfigOutput) ToGameServerConfigFleetConfigOutputWithContext(ctx context.Context) GameServerConfigFleetConfigOutput {
	return o
}

func (o GameServerConfigFleetConfigOutput) FleetSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigFleetConfig) string { return v.FleetSpec }).(pulumi.StringOutput)
}

func (o GameServerConfigFleetConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigFleetConfig) string { return v.Name }).(pulumi.StringOutput)
}

type GameServerConfigFleetConfigArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigFleetConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigFleetConfig)(nil)).Elem()
}

func (o GameServerConfigFleetConfigArrayOutput) ToGameServerConfigFleetConfigArrayOutput() GameServerConfigFleetConfigArrayOutput {
	return o
}

func (o GameServerConfigFleetConfigArrayOutput) ToGameServerConfigFleetConfigArrayOutputWithContext(ctx context.Context) GameServerConfigFleetConfigArrayOutput {
	return o
}

func (o GameServerConfigFleetConfigArrayOutput) Index(i pulumi.IntInput) GameServerConfigFleetConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigFleetConfig {
		return vs[0].([]GameServerConfigFleetConfig)[vs[1].(int)]
	}).(GameServerConfigFleetConfigOutput)
}

type GameServerConfigFleetConfigArgs struct {
	FleetSpec string  `pulumi:"fleetSpec"`
	Name      *string `pulumi:"name"`
}

type GameServerConfigFleetConfigArgsInput interface {
	pulumi.Input

	ToGameServerConfigFleetConfigArgsOutput() GameServerConfigFleetConfigArgsOutput
	ToGameServerConfigFleetConfigArgsOutputWithContext(context.Context) GameServerConfigFleetConfigArgsOutput
}

type GameServerConfigFleetConfigArgsArgs struct {
	FleetSpec pulumi.StringInput    `pulumi:"fleetSpec"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
}

func (GameServerConfigFleetConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigFleetConfigArgs)(nil)).Elem()
}

func (i GameServerConfigFleetConfigArgsArgs) ToGameServerConfigFleetConfigArgsOutput() GameServerConfigFleetConfigArgsOutput {
	return i.ToGameServerConfigFleetConfigArgsOutputWithContext(context.Background())
}

func (i GameServerConfigFleetConfigArgsArgs) ToGameServerConfigFleetConfigArgsOutputWithContext(ctx context.Context) GameServerConfigFleetConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigFleetConfigArgsOutput)
}

type GameServerConfigFleetConfigArgsArrayInput interface {
	pulumi.Input

	ToGameServerConfigFleetConfigArgsArrayOutput() GameServerConfigFleetConfigArgsArrayOutput
	ToGameServerConfigFleetConfigArgsArrayOutputWithContext(context.Context) GameServerConfigFleetConfigArgsArrayOutput
}

type GameServerConfigFleetConfigArgsArray []GameServerConfigFleetConfigArgsInput

func (GameServerConfigFleetConfigArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigFleetConfigArgs)(nil)).Elem()
}

func (i GameServerConfigFleetConfigArgsArray) ToGameServerConfigFleetConfigArgsArrayOutput() GameServerConfigFleetConfigArgsArrayOutput {
	return i.ToGameServerConfigFleetConfigArgsArrayOutputWithContext(context.Background())
}

func (i GameServerConfigFleetConfigArgsArray) ToGameServerConfigFleetConfigArgsArrayOutputWithContext(ctx context.Context) GameServerConfigFleetConfigArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigFleetConfigArgsArrayOutput)
}

type GameServerConfigFleetConfigArgsOutput struct{ *pulumi.OutputState }

func (GameServerConfigFleetConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigFleetConfigArgs)(nil)).Elem()
}

func (o GameServerConfigFleetConfigArgsOutput) ToGameServerConfigFleetConfigArgsOutput() GameServerConfigFleetConfigArgsOutput {
	return o
}

func (o GameServerConfigFleetConfigArgsOutput) ToGameServerConfigFleetConfigArgsOutputWithContext(ctx context.Context) GameServerConfigFleetConfigArgsOutput {
	return o
}

func (o GameServerConfigFleetConfigArgsOutput) FleetSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigFleetConfigArgs) string { return v.FleetSpec }).(pulumi.StringOutput)
}

func (o GameServerConfigFleetConfigArgsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigFleetConfigArgs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GameServerConfigFleetConfigArgsArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigFleetConfigArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigFleetConfigArgs)(nil)).Elem()
}

func (o GameServerConfigFleetConfigArgsArrayOutput) ToGameServerConfigFleetConfigArgsArrayOutput() GameServerConfigFleetConfigArgsArrayOutput {
	return o
}

func (o GameServerConfigFleetConfigArgsArrayOutput) ToGameServerConfigFleetConfigArgsArrayOutputWithContext(ctx context.Context) GameServerConfigFleetConfigArgsArrayOutput {
	return o
}

func (o GameServerConfigFleetConfigArgsArrayOutput) Index(i pulumi.IntInput) GameServerConfigFleetConfigArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigFleetConfigArgs {
		return vs[0].([]GameServerConfigFleetConfigArgs)[vs[1].(int)]
	}).(GameServerConfigFleetConfigArgsOutput)
}

type GameServerConfigFleetConfigState struct {
	FleetSpec string  `pulumi:"fleetSpec"`
	Name      *string `pulumi:"name"`
}

type GameServerConfigFleetConfigStateInput interface {
	pulumi.Input

	ToGameServerConfigFleetConfigStateOutput() GameServerConfigFleetConfigStateOutput
	ToGameServerConfigFleetConfigStateOutputWithContext(context.Context) GameServerConfigFleetConfigStateOutput
}

type GameServerConfigFleetConfigStateArgs struct {
	FleetSpec pulumi.StringInput    `pulumi:"fleetSpec"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
}

func (GameServerConfigFleetConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigFleetConfigState)(nil)).Elem()
}

func (i GameServerConfigFleetConfigStateArgs) ToGameServerConfigFleetConfigStateOutput() GameServerConfigFleetConfigStateOutput {
	return i.ToGameServerConfigFleetConfigStateOutputWithContext(context.Background())
}

func (i GameServerConfigFleetConfigStateArgs) ToGameServerConfigFleetConfigStateOutputWithContext(ctx context.Context) GameServerConfigFleetConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigFleetConfigStateOutput)
}

type GameServerConfigFleetConfigStateArrayInput interface {
	pulumi.Input

	ToGameServerConfigFleetConfigStateArrayOutput() GameServerConfigFleetConfigStateArrayOutput
	ToGameServerConfigFleetConfigStateArrayOutputWithContext(context.Context) GameServerConfigFleetConfigStateArrayOutput
}

type GameServerConfigFleetConfigStateArray []GameServerConfigFleetConfigStateInput

func (GameServerConfigFleetConfigStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigFleetConfigState)(nil)).Elem()
}

func (i GameServerConfigFleetConfigStateArray) ToGameServerConfigFleetConfigStateArrayOutput() GameServerConfigFleetConfigStateArrayOutput {
	return i.ToGameServerConfigFleetConfigStateArrayOutputWithContext(context.Background())
}

func (i GameServerConfigFleetConfigStateArray) ToGameServerConfigFleetConfigStateArrayOutputWithContext(ctx context.Context) GameServerConfigFleetConfigStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigFleetConfigStateArrayOutput)
}

type GameServerConfigFleetConfigStateOutput struct{ *pulumi.OutputState }

func (GameServerConfigFleetConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigFleetConfigState)(nil)).Elem()
}

func (o GameServerConfigFleetConfigStateOutput) ToGameServerConfigFleetConfigStateOutput() GameServerConfigFleetConfigStateOutput {
	return o
}

func (o GameServerConfigFleetConfigStateOutput) ToGameServerConfigFleetConfigStateOutputWithContext(ctx context.Context) GameServerConfigFleetConfigStateOutput {
	return o
}

func (o GameServerConfigFleetConfigStateOutput) FleetSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigFleetConfigState) string { return v.FleetSpec }).(pulumi.StringOutput)
}

func (o GameServerConfigFleetConfigStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigFleetConfigState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GameServerConfigFleetConfigStateArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigFleetConfigStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigFleetConfigState)(nil)).Elem()
}

func (o GameServerConfigFleetConfigStateArrayOutput) ToGameServerConfigFleetConfigStateArrayOutput() GameServerConfigFleetConfigStateArrayOutput {
	return o
}

func (o GameServerConfigFleetConfigStateArrayOutput) ToGameServerConfigFleetConfigStateArrayOutputWithContext(ctx context.Context) GameServerConfigFleetConfigStateArrayOutput {
	return o
}

func (o GameServerConfigFleetConfigStateArrayOutput) Index(i pulumi.IntInput) GameServerConfigFleetConfigStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigFleetConfigState {
		return vs[0].([]GameServerConfigFleetConfigState)[vs[1].(int)]
	}).(GameServerConfigFleetConfigStateOutput)
}

type GameServerConfigScalingConfig struct {
	FleetAutoscalerSpec string                                  `pulumi:"fleetAutoscalerSpec"`
	Name                string                                  `pulumi:"name"`
	Schedules           []GameServerConfigScalingConfigSchedule `pulumi:"schedules"`
	Selectors           []GameServerConfigScalingConfigSelector `pulumi:"selectors"`
}

type GameServerConfigScalingConfigInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigOutput() GameServerConfigScalingConfigOutput
	ToGameServerConfigScalingConfigOutputWithContext(context.Context) GameServerConfigScalingConfigOutput
}

type GameServerConfigScalingConfigArgs struct {
	FleetAutoscalerSpec pulumi.StringInput                              `pulumi:"fleetAutoscalerSpec"`
	Name                pulumi.StringInput                              `pulumi:"name"`
	Schedules           GameServerConfigScalingConfigScheduleArrayInput `pulumi:"schedules"`
	Selectors           GameServerConfigScalingConfigSelectorArrayInput `pulumi:"selectors"`
}

func (GameServerConfigScalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfig)(nil)).Elem()
}

func (i GameServerConfigScalingConfigArgs) ToGameServerConfigScalingConfigOutput() GameServerConfigScalingConfigOutput {
	return i.ToGameServerConfigScalingConfigOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigArgs) ToGameServerConfigScalingConfigOutputWithContext(ctx context.Context) GameServerConfigScalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigOutput)
}

type GameServerConfigScalingConfigArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigArrayOutput() GameServerConfigScalingConfigArrayOutput
	ToGameServerConfigScalingConfigArrayOutputWithContext(context.Context) GameServerConfigScalingConfigArrayOutput
}

type GameServerConfigScalingConfigArray []GameServerConfigScalingConfigInput

func (GameServerConfigScalingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfig)(nil)).Elem()
}

func (i GameServerConfigScalingConfigArray) ToGameServerConfigScalingConfigArrayOutput() GameServerConfigScalingConfigArrayOutput {
	return i.ToGameServerConfigScalingConfigArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigArray) ToGameServerConfigScalingConfigArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigArrayOutput)
}

type GameServerConfigScalingConfigOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfig)(nil)).Elem()
}

func (o GameServerConfigScalingConfigOutput) ToGameServerConfigScalingConfigOutput() GameServerConfigScalingConfigOutput {
	return o
}

func (o GameServerConfigScalingConfigOutput) ToGameServerConfigScalingConfigOutputWithContext(ctx context.Context) GameServerConfigScalingConfigOutput {
	return o
}

func (o GameServerConfigScalingConfigOutput) FleetAutoscalerSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfig) string { return v.FleetAutoscalerSpec }).(pulumi.StringOutput)
}

func (o GameServerConfigScalingConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfig) string { return v.Name }).(pulumi.StringOutput)
}

func (o GameServerConfigScalingConfigOutput) Schedules() GameServerConfigScalingConfigScheduleArrayOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfig) []GameServerConfigScalingConfigSchedule { return v.Schedules }).(GameServerConfigScalingConfigScheduleArrayOutput)
}

func (o GameServerConfigScalingConfigOutput) Selectors() GameServerConfigScalingConfigSelectorArrayOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfig) []GameServerConfigScalingConfigSelector { return v.Selectors }).(GameServerConfigScalingConfigSelectorArrayOutput)
}

type GameServerConfigScalingConfigArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfig)(nil)).Elem()
}

func (o GameServerConfigScalingConfigArrayOutput) ToGameServerConfigScalingConfigArrayOutput() GameServerConfigScalingConfigArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigArrayOutput) ToGameServerConfigScalingConfigArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfig {
		return vs[0].([]GameServerConfigScalingConfig)[vs[1].(int)]
	}).(GameServerConfigScalingConfigOutput)
}

type GameServerConfigScalingConfigArgs struct {
	FleetAutoscalerSpec string                                      `pulumi:"fleetAutoscalerSpec"`
	Name                string                                      `pulumi:"name"`
	Schedules           []GameServerConfigScalingConfigScheduleArgs `pulumi:"schedules"`
	Selectors           []GameServerConfigScalingConfigSelectorArgs `pulumi:"selectors"`
}

type GameServerConfigScalingConfigArgsInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigArgsOutput() GameServerConfigScalingConfigArgsOutput
	ToGameServerConfigScalingConfigArgsOutputWithContext(context.Context) GameServerConfigScalingConfigArgsOutput
}

type GameServerConfigScalingConfigArgsArgs struct {
	FleetAutoscalerSpec pulumi.StringInput                                  `pulumi:"fleetAutoscalerSpec"`
	Name                pulumi.StringInput                                  `pulumi:"name"`
	Schedules           GameServerConfigScalingConfigScheduleArgsArrayInput `pulumi:"schedules"`
	Selectors           GameServerConfigScalingConfigSelectorArgsArrayInput `pulumi:"selectors"`
}

func (GameServerConfigScalingConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigArgs)(nil)).Elem()
}

func (i GameServerConfigScalingConfigArgsArgs) ToGameServerConfigScalingConfigArgsOutput() GameServerConfigScalingConfigArgsOutput {
	return i.ToGameServerConfigScalingConfigArgsOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigArgsArgs) ToGameServerConfigScalingConfigArgsOutputWithContext(ctx context.Context) GameServerConfigScalingConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigArgsOutput)
}

type GameServerConfigScalingConfigArgsArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigArgsArrayOutput() GameServerConfigScalingConfigArgsArrayOutput
	ToGameServerConfigScalingConfigArgsArrayOutputWithContext(context.Context) GameServerConfigScalingConfigArgsArrayOutput
}

type GameServerConfigScalingConfigArgsArray []GameServerConfigScalingConfigArgsInput

func (GameServerConfigScalingConfigArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigArgs)(nil)).Elem()
}

func (i GameServerConfigScalingConfigArgsArray) ToGameServerConfigScalingConfigArgsArrayOutput() GameServerConfigScalingConfigArgsArrayOutput {
	return i.ToGameServerConfigScalingConfigArgsArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigArgsArray) ToGameServerConfigScalingConfigArgsArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigArgsArrayOutput)
}

type GameServerConfigScalingConfigArgsOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigArgs)(nil)).Elem()
}

func (o GameServerConfigScalingConfigArgsOutput) ToGameServerConfigScalingConfigArgsOutput() GameServerConfigScalingConfigArgsOutput {
	return o
}

func (o GameServerConfigScalingConfigArgsOutput) ToGameServerConfigScalingConfigArgsOutputWithContext(ctx context.Context) GameServerConfigScalingConfigArgsOutput {
	return o
}

func (o GameServerConfigScalingConfigArgsOutput) FleetAutoscalerSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigArgs) string { return v.FleetAutoscalerSpec }).(pulumi.StringOutput)
}

func (o GameServerConfigScalingConfigArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigArgs) string { return v.Name }).(pulumi.StringOutput)
}

func (o GameServerConfigScalingConfigArgsOutput) Schedules() GameServerConfigScalingConfigScheduleArgsArrayOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigArgs) []GameServerConfigScalingConfigScheduleArgs {
		return v.Schedules
	}).(GameServerConfigScalingConfigScheduleArgsArrayOutput)
}

func (o GameServerConfigScalingConfigArgsOutput) Selectors() GameServerConfigScalingConfigSelectorArgsArrayOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigArgs) []GameServerConfigScalingConfigSelectorArgs {
		return v.Selectors
	}).(GameServerConfigScalingConfigSelectorArgsArrayOutput)
}

type GameServerConfigScalingConfigArgsArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigArgs)(nil)).Elem()
}

func (o GameServerConfigScalingConfigArgsArrayOutput) ToGameServerConfigScalingConfigArgsArrayOutput() GameServerConfigScalingConfigArgsArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigArgsArrayOutput) ToGameServerConfigScalingConfigArgsArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigArgsArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigArgsArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigArgs {
		return vs[0].([]GameServerConfigScalingConfigArgs)[vs[1].(int)]
	}).(GameServerConfigScalingConfigArgsOutput)
}

type GameServerConfigScalingConfigSchedule struct {
	CronJobDuration *string `pulumi:"cronJobDuration"`
	CronSpec        *string `pulumi:"cronSpec"`
	EndTime         *string `pulumi:"endTime"`
	StartTime       *string `pulumi:"startTime"`
}

type GameServerConfigScalingConfigScheduleInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigScheduleOutput() GameServerConfigScalingConfigScheduleOutput
	ToGameServerConfigScalingConfigScheduleOutputWithContext(context.Context) GameServerConfigScalingConfigScheduleOutput
}

type GameServerConfigScalingConfigScheduleArgs struct {
	CronJobDuration pulumi.StringPtrInput `pulumi:"cronJobDuration"`
	CronSpec        pulumi.StringPtrInput `pulumi:"cronSpec"`
	EndTime         pulumi.StringPtrInput `pulumi:"endTime"`
	StartTime       pulumi.StringPtrInput `pulumi:"startTime"`
}

func (GameServerConfigScalingConfigScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSchedule)(nil)).Elem()
}

func (i GameServerConfigScalingConfigScheduleArgs) ToGameServerConfigScalingConfigScheduleOutput() GameServerConfigScalingConfigScheduleOutput {
	return i.ToGameServerConfigScalingConfigScheduleOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigScheduleArgs) ToGameServerConfigScalingConfigScheduleOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigScheduleOutput)
}

type GameServerConfigScalingConfigScheduleArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigScheduleArrayOutput() GameServerConfigScalingConfigScheduleArrayOutput
	ToGameServerConfigScalingConfigScheduleArrayOutputWithContext(context.Context) GameServerConfigScalingConfigScheduleArrayOutput
}

type GameServerConfigScalingConfigScheduleArray []GameServerConfigScalingConfigScheduleInput

func (GameServerConfigScalingConfigScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSchedule)(nil)).Elem()
}

func (i GameServerConfigScalingConfigScheduleArray) ToGameServerConfigScalingConfigScheduleArrayOutput() GameServerConfigScalingConfigScheduleArrayOutput {
	return i.ToGameServerConfigScalingConfigScheduleArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigScheduleArray) ToGameServerConfigScalingConfigScheduleArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigScheduleArrayOutput)
}

type GameServerConfigScalingConfigScheduleOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSchedule)(nil)).Elem()
}

func (o GameServerConfigScalingConfigScheduleOutput) ToGameServerConfigScalingConfigScheduleOutput() GameServerConfigScalingConfigScheduleOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleOutput) ToGameServerConfigScalingConfigScheduleOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleOutput) CronJobDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSchedule) *string { return v.CronJobDuration }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigScheduleOutput) CronSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSchedule) *string { return v.CronSpec }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type GameServerConfigScalingConfigScheduleArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSchedule)(nil)).Elem()
}

func (o GameServerConfigScalingConfigScheduleArrayOutput) ToGameServerConfigScalingConfigScheduleArrayOutput() GameServerConfigScalingConfigScheduleArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleArrayOutput) ToGameServerConfigScalingConfigScheduleArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigSchedule {
		return vs[0].([]GameServerConfigScalingConfigSchedule)[vs[1].(int)]
	}).(GameServerConfigScalingConfigScheduleOutput)
}

type GameServerConfigScalingConfigScheduleArgs struct {
	CronJobDuration *string `pulumi:"cronJobDuration"`
	CronSpec        *string `pulumi:"cronSpec"`
	EndTime         *string `pulumi:"endTime"`
	StartTime       *string `pulumi:"startTime"`
}

type GameServerConfigScalingConfigScheduleArgsInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigScheduleArgsOutput() GameServerConfigScalingConfigScheduleArgsOutput
	ToGameServerConfigScalingConfigScheduleArgsOutputWithContext(context.Context) GameServerConfigScalingConfigScheduleArgsOutput
}

type GameServerConfigScalingConfigScheduleArgsArgs struct {
	CronJobDuration pulumi.StringPtrInput `pulumi:"cronJobDuration"`
	CronSpec        pulumi.StringPtrInput `pulumi:"cronSpec"`
	EndTime         pulumi.StringPtrInput `pulumi:"endTime"`
	StartTime       pulumi.StringPtrInput `pulumi:"startTime"`
}

func (GameServerConfigScalingConfigScheduleArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigScheduleArgs)(nil)).Elem()
}

func (i GameServerConfigScalingConfigScheduleArgsArgs) ToGameServerConfigScalingConfigScheduleArgsOutput() GameServerConfigScalingConfigScheduleArgsOutput {
	return i.ToGameServerConfigScalingConfigScheduleArgsOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigScheduleArgsArgs) ToGameServerConfigScalingConfigScheduleArgsOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigScheduleArgsOutput)
}

type GameServerConfigScalingConfigScheduleArgsArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigScheduleArgsArrayOutput() GameServerConfigScalingConfigScheduleArgsArrayOutput
	ToGameServerConfigScalingConfigScheduleArgsArrayOutputWithContext(context.Context) GameServerConfigScalingConfigScheduleArgsArrayOutput
}

type GameServerConfigScalingConfigScheduleArgsArray []GameServerConfigScalingConfigScheduleArgsInput

func (GameServerConfigScalingConfigScheduleArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigScheduleArgs)(nil)).Elem()
}

func (i GameServerConfigScalingConfigScheduleArgsArray) ToGameServerConfigScalingConfigScheduleArgsArrayOutput() GameServerConfigScalingConfigScheduleArgsArrayOutput {
	return i.ToGameServerConfigScalingConfigScheduleArgsArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigScheduleArgsArray) ToGameServerConfigScalingConfigScheduleArgsArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigScheduleArgsArrayOutput)
}

type GameServerConfigScalingConfigScheduleArgsOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigScheduleArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigScheduleArgs)(nil)).Elem()
}

func (o GameServerConfigScalingConfigScheduleArgsOutput) ToGameServerConfigScalingConfigScheduleArgsOutput() GameServerConfigScalingConfigScheduleArgsOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleArgsOutput) ToGameServerConfigScalingConfigScheduleArgsOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleArgsOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleArgsOutput) CronJobDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigScheduleArgs) *string { return v.CronJobDuration }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigScheduleArgsOutput) CronSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigScheduleArgs) *string { return v.CronSpec }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigScheduleArgsOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigScheduleArgs) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigScheduleArgsOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigScheduleArgs) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type GameServerConfigScalingConfigScheduleArgsArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigScheduleArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigScheduleArgs)(nil)).Elem()
}

func (o GameServerConfigScalingConfigScheduleArgsArrayOutput) ToGameServerConfigScalingConfigScheduleArgsArrayOutput() GameServerConfigScalingConfigScheduleArgsArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleArgsArrayOutput) ToGameServerConfigScalingConfigScheduleArgsArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigScheduleArgsArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigScheduleArgsArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigScheduleArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigScheduleArgs {
		return vs[0].([]GameServerConfigScalingConfigScheduleArgs)[vs[1].(int)]
	}).(GameServerConfigScalingConfigScheduleArgsOutput)
}

type GameServerConfigScalingConfigSelector struct {
	Labels map[string]string `pulumi:"labels"`
}

type GameServerConfigScalingConfigSelectorInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigSelectorOutput() GameServerConfigScalingConfigSelectorOutput
	ToGameServerConfigScalingConfigSelectorOutputWithContext(context.Context) GameServerConfigScalingConfigSelectorOutput
}

type GameServerConfigScalingConfigSelectorArgs struct {
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (GameServerConfigScalingConfigSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSelector)(nil)).Elem()
}

func (i GameServerConfigScalingConfigSelectorArgs) ToGameServerConfigScalingConfigSelectorOutput() GameServerConfigScalingConfigSelectorOutput {
	return i.ToGameServerConfigScalingConfigSelectorOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigSelectorArgs) ToGameServerConfigScalingConfigSelectorOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigSelectorOutput)
}

type GameServerConfigScalingConfigSelectorArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigSelectorArrayOutput() GameServerConfigScalingConfigSelectorArrayOutput
	ToGameServerConfigScalingConfigSelectorArrayOutputWithContext(context.Context) GameServerConfigScalingConfigSelectorArrayOutput
}

type GameServerConfigScalingConfigSelectorArray []GameServerConfigScalingConfigSelectorInput

func (GameServerConfigScalingConfigSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSelector)(nil)).Elem()
}

func (i GameServerConfigScalingConfigSelectorArray) ToGameServerConfigScalingConfigSelectorArrayOutput() GameServerConfigScalingConfigSelectorArrayOutput {
	return i.ToGameServerConfigScalingConfigSelectorArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigSelectorArray) ToGameServerConfigScalingConfigSelectorArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigSelectorArrayOutput)
}

type GameServerConfigScalingConfigSelectorOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSelector)(nil)).Elem()
}

func (o GameServerConfigScalingConfigSelectorOutput) ToGameServerConfigScalingConfigSelectorOutput() GameServerConfigScalingConfigSelectorOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorOutput) ToGameServerConfigScalingConfigSelectorOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSelector) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type GameServerConfigScalingConfigSelectorArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSelector)(nil)).Elem()
}

func (o GameServerConfigScalingConfigSelectorArrayOutput) ToGameServerConfigScalingConfigSelectorArrayOutput() GameServerConfigScalingConfigSelectorArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorArrayOutput) ToGameServerConfigScalingConfigSelectorArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigSelector {
		return vs[0].([]GameServerConfigScalingConfigSelector)[vs[1].(int)]
	}).(GameServerConfigScalingConfigSelectorOutput)
}

type GameServerConfigScalingConfigSelectorArgs struct {
	Labels map[string]string `pulumi:"labels"`
}

type GameServerConfigScalingConfigSelectorArgsInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigSelectorArgsOutput() GameServerConfigScalingConfigSelectorArgsOutput
	ToGameServerConfigScalingConfigSelectorArgsOutputWithContext(context.Context) GameServerConfigScalingConfigSelectorArgsOutput
}

type GameServerConfigScalingConfigSelectorArgsArgs struct {
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (GameServerConfigScalingConfigSelectorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSelectorArgs)(nil)).Elem()
}

func (i GameServerConfigScalingConfigSelectorArgsArgs) ToGameServerConfigScalingConfigSelectorArgsOutput() GameServerConfigScalingConfigSelectorArgsOutput {
	return i.ToGameServerConfigScalingConfigSelectorArgsOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigSelectorArgsArgs) ToGameServerConfigScalingConfigSelectorArgsOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigSelectorArgsOutput)
}

type GameServerConfigScalingConfigSelectorArgsArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigSelectorArgsArrayOutput() GameServerConfigScalingConfigSelectorArgsArrayOutput
	ToGameServerConfigScalingConfigSelectorArgsArrayOutputWithContext(context.Context) GameServerConfigScalingConfigSelectorArgsArrayOutput
}

type GameServerConfigScalingConfigSelectorArgsArray []GameServerConfigScalingConfigSelectorArgsInput

func (GameServerConfigScalingConfigSelectorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSelectorArgs)(nil)).Elem()
}

func (i GameServerConfigScalingConfigSelectorArgsArray) ToGameServerConfigScalingConfigSelectorArgsArrayOutput() GameServerConfigScalingConfigSelectorArgsArrayOutput {
	return i.ToGameServerConfigScalingConfigSelectorArgsArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigSelectorArgsArray) ToGameServerConfigScalingConfigSelectorArgsArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigSelectorArgsArrayOutput)
}

type GameServerConfigScalingConfigSelectorArgsOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigSelectorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigSelectorArgs)(nil)).Elem()
}

func (o GameServerConfigScalingConfigSelectorArgsOutput) ToGameServerConfigScalingConfigSelectorArgsOutput() GameServerConfigScalingConfigSelectorArgsOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorArgsOutput) ToGameServerConfigScalingConfigSelectorArgsOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorArgsOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorArgsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigSelectorArgs) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type GameServerConfigScalingConfigSelectorArgsArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigSelectorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigSelectorArgs)(nil)).Elem()
}

func (o GameServerConfigScalingConfigSelectorArgsArrayOutput) ToGameServerConfigScalingConfigSelectorArgsArrayOutput() GameServerConfigScalingConfigSelectorArgsArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorArgsArrayOutput) ToGameServerConfigScalingConfigSelectorArgsArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigSelectorArgsArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigSelectorArgsArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigSelectorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigSelectorArgs {
		return vs[0].([]GameServerConfigScalingConfigSelectorArgs)[vs[1].(int)]
	}).(GameServerConfigScalingConfigSelectorArgsOutput)
}

type GameServerConfigScalingConfigState struct {
	FleetAutoscalerSpec string                                       `pulumi:"fleetAutoscalerSpec"`
	Name                string                                       `pulumi:"name"`
	Schedules           []GameServerConfigScalingConfigStateSchedule `pulumi:"schedules"`
	Selectors           []GameServerConfigScalingConfigStateSelector `pulumi:"selectors"`
}

type GameServerConfigScalingConfigStateInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigStateOutput() GameServerConfigScalingConfigStateOutput
	ToGameServerConfigScalingConfigStateOutputWithContext(context.Context) GameServerConfigScalingConfigStateOutput
}

type GameServerConfigScalingConfigStateArgs struct {
	FleetAutoscalerSpec pulumi.StringInput                                   `pulumi:"fleetAutoscalerSpec"`
	Name                pulumi.StringInput                                   `pulumi:"name"`
	Schedules           GameServerConfigScalingConfigStateScheduleArrayInput `pulumi:"schedules"`
	Selectors           GameServerConfigScalingConfigStateSelectorArrayInput `pulumi:"selectors"`
}

func (GameServerConfigScalingConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigState)(nil)).Elem()
}

func (i GameServerConfigScalingConfigStateArgs) ToGameServerConfigScalingConfigStateOutput() GameServerConfigScalingConfigStateOutput {
	return i.ToGameServerConfigScalingConfigStateOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigStateArgs) ToGameServerConfigScalingConfigStateOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigStateOutput)
}

type GameServerConfigScalingConfigStateArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigStateArrayOutput() GameServerConfigScalingConfigStateArrayOutput
	ToGameServerConfigScalingConfigStateArrayOutputWithContext(context.Context) GameServerConfigScalingConfigStateArrayOutput
}

type GameServerConfigScalingConfigStateArray []GameServerConfigScalingConfigStateInput

func (GameServerConfigScalingConfigStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigState)(nil)).Elem()
}

func (i GameServerConfigScalingConfigStateArray) ToGameServerConfigScalingConfigStateArrayOutput() GameServerConfigScalingConfigStateArrayOutput {
	return i.ToGameServerConfigScalingConfigStateArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigStateArray) ToGameServerConfigScalingConfigStateArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigStateArrayOutput)
}

type GameServerConfigScalingConfigStateOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigState)(nil)).Elem()
}

func (o GameServerConfigScalingConfigStateOutput) ToGameServerConfigScalingConfigStateOutput() GameServerConfigScalingConfigStateOutput {
	return o
}

func (o GameServerConfigScalingConfigStateOutput) ToGameServerConfigScalingConfigStateOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateOutput {
	return o
}

func (o GameServerConfigScalingConfigStateOutput) FleetAutoscalerSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigState) string { return v.FleetAutoscalerSpec }).(pulumi.StringOutput)
}

func (o GameServerConfigScalingConfigStateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigState) string { return v.Name }).(pulumi.StringOutput)
}

func (o GameServerConfigScalingConfigStateOutput) Schedules() GameServerConfigScalingConfigStateScheduleArrayOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigState) []GameServerConfigScalingConfigStateSchedule {
		return v.Schedules
	}).(GameServerConfigScalingConfigStateScheduleArrayOutput)
}

func (o GameServerConfigScalingConfigStateOutput) Selectors() GameServerConfigScalingConfigStateSelectorArrayOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigState) []GameServerConfigScalingConfigStateSelector {
		return v.Selectors
	}).(GameServerConfigScalingConfigStateSelectorArrayOutput)
}

type GameServerConfigScalingConfigStateArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigState)(nil)).Elem()
}

func (o GameServerConfigScalingConfigStateArrayOutput) ToGameServerConfigScalingConfigStateArrayOutput() GameServerConfigScalingConfigStateArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigStateArrayOutput) ToGameServerConfigScalingConfigStateArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigStateArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigState {
		return vs[0].([]GameServerConfigScalingConfigState)[vs[1].(int)]
	}).(GameServerConfigScalingConfigStateOutput)
}

type GameServerConfigScalingConfigStateSchedule struct {
	CronJobDuration *string `pulumi:"cronJobDuration"`
	CronSpec        *string `pulumi:"cronSpec"`
	EndTime         *string `pulumi:"endTime"`
	StartTime       *string `pulumi:"startTime"`
}

type GameServerConfigScalingConfigStateScheduleInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigStateScheduleOutput() GameServerConfigScalingConfigStateScheduleOutput
	ToGameServerConfigScalingConfigStateScheduleOutputWithContext(context.Context) GameServerConfigScalingConfigStateScheduleOutput
}

type GameServerConfigScalingConfigStateScheduleArgs struct {
	CronJobDuration pulumi.StringPtrInput `pulumi:"cronJobDuration"`
	CronSpec        pulumi.StringPtrInput `pulumi:"cronSpec"`
	EndTime         pulumi.StringPtrInput `pulumi:"endTime"`
	StartTime       pulumi.StringPtrInput `pulumi:"startTime"`
}

func (GameServerConfigScalingConfigStateScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigStateSchedule)(nil)).Elem()
}

func (i GameServerConfigScalingConfigStateScheduleArgs) ToGameServerConfigScalingConfigStateScheduleOutput() GameServerConfigScalingConfigStateScheduleOutput {
	return i.ToGameServerConfigScalingConfigStateScheduleOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigStateScheduleArgs) ToGameServerConfigScalingConfigStateScheduleOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigStateScheduleOutput)
}

type GameServerConfigScalingConfigStateScheduleArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigStateScheduleArrayOutput() GameServerConfigScalingConfigStateScheduleArrayOutput
	ToGameServerConfigScalingConfigStateScheduleArrayOutputWithContext(context.Context) GameServerConfigScalingConfigStateScheduleArrayOutput
}

type GameServerConfigScalingConfigStateScheduleArray []GameServerConfigScalingConfigStateScheduleInput

func (GameServerConfigScalingConfigStateScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigStateSchedule)(nil)).Elem()
}

func (i GameServerConfigScalingConfigStateScheduleArray) ToGameServerConfigScalingConfigStateScheduleArrayOutput() GameServerConfigScalingConfigStateScheduleArrayOutput {
	return i.ToGameServerConfigScalingConfigStateScheduleArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigStateScheduleArray) ToGameServerConfigScalingConfigStateScheduleArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigStateScheduleArrayOutput)
}

type GameServerConfigScalingConfigStateScheduleOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigStateScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigStateSchedule)(nil)).Elem()
}

func (o GameServerConfigScalingConfigStateScheduleOutput) ToGameServerConfigScalingConfigStateScheduleOutput() GameServerConfigScalingConfigStateScheduleOutput {
	return o
}

func (o GameServerConfigScalingConfigStateScheduleOutput) ToGameServerConfigScalingConfigStateScheduleOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateScheduleOutput {
	return o
}

func (o GameServerConfigScalingConfigStateScheduleOutput) CronJobDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigStateSchedule) *string { return v.CronJobDuration }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigStateScheduleOutput) CronSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigStateSchedule) *string { return v.CronSpec }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigStateScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigStateSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o GameServerConfigScalingConfigStateScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigStateSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type GameServerConfigScalingConfigStateScheduleArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigStateScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigStateSchedule)(nil)).Elem()
}

func (o GameServerConfigScalingConfigStateScheduleArrayOutput) ToGameServerConfigScalingConfigStateScheduleArrayOutput() GameServerConfigScalingConfigStateScheduleArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigStateScheduleArrayOutput) ToGameServerConfigScalingConfigStateScheduleArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateScheduleArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigStateScheduleArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigStateScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigStateSchedule {
		return vs[0].([]GameServerConfigScalingConfigStateSchedule)[vs[1].(int)]
	}).(GameServerConfigScalingConfigStateScheduleOutput)
}

type GameServerConfigScalingConfigStateSelector struct {
	Labels map[string]string `pulumi:"labels"`
}

type GameServerConfigScalingConfigStateSelectorInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigStateSelectorOutput() GameServerConfigScalingConfigStateSelectorOutput
	ToGameServerConfigScalingConfigStateSelectorOutputWithContext(context.Context) GameServerConfigScalingConfigStateSelectorOutput
}

type GameServerConfigScalingConfigStateSelectorArgs struct {
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (GameServerConfigScalingConfigStateSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigStateSelector)(nil)).Elem()
}

func (i GameServerConfigScalingConfigStateSelectorArgs) ToGameServerConfigScalingConfigStateSelectorOutput() GameServerConfigScalingConfigStateSelectorOutput {
	return i.ToGameServerConfigScalingConfigStateSelectorOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigStateSelectorArgs) ToGameServerConfigScalingConfigStateSelectorOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigStateSelectorOutput)
}

type GameServerConfigScalingConfigStateSelectorArrayInput interface {
	pulumi.Input

	ToGameServerConfigScalingConfigStateSelectorArrayOutput() GameServerConfigScalingConfigStateSelectorArrayOutput
	ToGameServerConfigScalingConfigStateSelectorArrayOutputWithContext(context.Context) GameServerConfigScalingConfigStateSelectorArrayOutput
}

type GameServerConfigScalingConfigStateSelectorArray []GameServerConfigScalingConfigStateSelectorInput

func (GameServerConfigScalingConfigStateSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigStateSelector)(nil)).Elem()
}

func (i GameServerConfigScalingConfigStateSelectorArray) ToGameServerConfigScalingConfigStateSelectorArrayOutput() GameServerConfigScalingConfigStateSelectorArrayOutput {
	return i.ToGameServerConfigScalingConfigStateSelectorArrayOutputWithContext(context.Background())
}

func (i GameServerConfigScalingConfigStateSelectorArray) ToGameServerConfigScalingConfigStateSelectorArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerConfigScalingConfigStateSelectorArrayOutput)
}

type GameServerConfigScalingConfigStateSelectorOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigStateSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerConfigScalingConfigStateSelector)(nil)).Elem()
}

func (o GameServerConfigScalingConfigStateSelectorOutput) ToGameServerConfigScalingConfigStateSelectorOutput() GameServerConfigScalingConfigStateSelectorOutput {
	return o
}

func (o GameServerConfigScalingConfigStateSelectorOutput) ToGameServerConfigScalingConfigStateSelectorOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateSelectorOutput {
	return o
}

func (o GameServerConfigScalingConfigStateSelectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GameServerConfigScalingConfigStateSelector) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type GameServerConfigScalingConfigStateSelectorArrayOutput struct{ *pulumi.OutputState }

func (GameServerConfigScalingConfigStateSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerConfigScalingConfigStateSelector)(nil)).Elem()
}

func (o GameServerConfigScalingConfigStateSelectorArrayOutput) ToGameServerConfigScalingConfigStateSelectorArrayOutput() GameServerConfigScalingConfigStateSelectorArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigStateSelectorArrayOutput) ToGameServerConfigScalingConfigStateSelectorArrayOutputWithContext(ctx context.Context) GameServerConfigScalingConfigStateSelectorArrayOutput {
	return o
}

func (o GameServerConfigScalingConfigStateSelectorArrayOutput) Index(i pulumi.IntInput) GameServerConfigScalingConfigStateSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerConfigScalingConfigStateSelector {
		return vs[0].([]GameServerConfigScalingConfigStateSelector)[vs[1].(int)]
	}).(GameServerConfigScalingConfigStateSelectorOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverride struct {
	ConfigVersion  *string                                                            `pulumi:"configVersion"`
	RealmsSelector *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector `pulumi:"realmsSelector"`
}

type GameServerDeploymentRolloutGameServerConfigOverrideInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideOutput() GameServerDeploymentRolloutGameServerConfigOverrideOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideArgs struct {
	ConfigVersion  pulumi.StringPtrInput                                                     `pulumi:"configVersion"`
	RealmsSelector GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrInput `pulumi:"realmsSelector"`
}

func (GameServerDeploymentRolloutGameServerConfigOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverride)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideOutput() GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideArrayInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideArray []GameServerDeploymentRolloutGameServerConfigOverrideInput

func (GameServerDeploymentRolloutGameServerConfigOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerDeploymentRolloutGameServerConfigOverride)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArray) ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArray) ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverride)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideOutput() GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideOutput) ConfigVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverride) *string { return v.ConfigVersion }).(pulumi.StringPtrOutput)
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideOutput) RealmsSelector() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverride) *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector {
		return v.RealmsSelector
	}).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerDeploymentRolloutGameServerConfigOverride)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideArrayOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput) Index(i pulumi.IntInput) GameServerDeploymentRolloutGameServerConfigOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerDeploymentRolloutGameServerConfigOverride {
		return vs[0].([]GameServerDeploymentRolloutGameServerConfigOverride)[vs[1].(int)]
	}).(GameServerDeploymentRolloutGameServerConfigOverrideOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideArgs struct {
	ConfigVersion  *string                                                                `pulumi:"configVersion"`
	RealmsSelector *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs `pulumi:"realmsSelector"`
}

type GameServerDeploymentRolloutGameServerConfigOverrideArgsInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideArgsOutput() GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideArgsOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideArgsArgs struct {
	ConfigVersion  pulumi.StringPtrInput                                                         `pulumi:"configVersion"`
	RealmsSelector GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrInput `pulumi:"realmsSelector"`
}

func (GameServerDeploymentRolloutGameServerConfigOverrideArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideArgs)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArgsArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideArgsOutput() GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideArgsOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArgsArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideArgsOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideArgsArray []GameServerDeploymentRolloutGameServerConfigOverrideArgsInput

func (GameServerDeploymentRolloutGameServerConfigOverrideArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerDeploymentRolloutGameServerConfigOverrideArgs)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArgsArray) ToGameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideArgsArray) ToGameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideArgs)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideArgsOutput() GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideArgsOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput) ConfigVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideArgs) *string { return v.ConfigVersion }).(pulumi.StringPtrOutput)
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput) RealmsSelector() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideArgs) *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs {
		return v.RealmsSelector
	}).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerDeploymentRolloutGameServerConfigOverrideArgs)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput) Index(i pulumi.IntInput) GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerDeploymentRolloutGameServerConfigOverrideArgs {
		return vs[0].([]GameServerDeploymentRolloutGameServerConfigOverrideArgs)[vs[1].(int)]
	}).(GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector struct {
	Realms []string `pulumi:"realms"`
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs struct {
	Realms pulumi.StringArrayInput `pulumi:"realms"`
}

func (GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput)
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput).ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput
}

type gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs

func GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtr(v *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrInput {
	return (*gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType)(v)
}

func (*gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector)(nil)).Elem()
}

func (i *gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(context.Background())
}

func (i *gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrType) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(context.Background())
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector) *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector {
		return &v
	}).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput)
}
func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput) Realms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector) []string { return v.Realms }).(pulumi.StringArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) Elem() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput {
	return o.ApplyT(func(v *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector {
		return *v
	}).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput)
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput) Realms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelector) []string { return v.Realms }).(pulumi.StringArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs struct {
	Realms []string `pulumi:"realms"`
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsArgs struct {
	Realms pulumi.StringArrayInput `pulumi:"realms"`
}

func (GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput)
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput).ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutputWithContext(ctx)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput
}

type gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrType GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsArgs

func GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtr(v *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsArgs) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrInput {
	return (*gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrType)(v)
}

func (*gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs)(nil)).Elem()
}

func (i *gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrType) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutputWithContext(context.Background())
}

func (i *gameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrType) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput {
	return o.ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutputWithContext(context.Background())
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs {
		return &v
	}).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput)
}
func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput) Realms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) []string {
		return v.Realms
	}).(pulumi.StringArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput) Elem() GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput {
	return o.ApplyT(func(v *GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs {
		return *v
	}).(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput)
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput) Realms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs) []string {
		return v.Realms
	}).(pulumi.StringArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideState struct {
	ConfigVersion  *string                                                                 `pulumi:"configVersion"`
	RealmsSelector *GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector `pulumi:"realmsSelector"`
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideStateOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideStateOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateArgs struct {
	ConfigVersion  pulumi.StringPtrInput                                                          `pulumi:"configVersion"`
	RealmsSelector GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrInput `pulumi:"realmsSelector"`
}

func (GameServerDeploymentRolloutGameServerConfigOverrideStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideState)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideStateArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideStateOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideStateOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideStateArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideStateOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideStateOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateArrayInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateArray []GameServerDeploymentRolloutGameServerConfigOverrideStateInput

func (GameServerDeploymentRolloutGameServerConfigOverrideStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerDeploymentRolloutGameServerConfigOverrideState)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideStateArray) ToGameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideStateArray) ToGameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideState)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateOutput) ConfigVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideState) *string { return v.ConfigVersion }).(pulumi.StringPtrOutput)
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateOutput) RealmsSelector() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideState) *GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector {
		return v.RealmsSelector
	}).(GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GameServerDeploymentRolloutGameServerConfigOverrideState)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput) Index(i pulumi.IntInput) GameServerDeploymentRolloutGameServerConfigOverrideStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GameServerDeploymentRolloutGameServerConfigOverrideState {
		return vs[0].([]GameServerDeploymentRolloutGameServerConfigOverrideState)[vs[1].(int)]
	}).(GameServerDeploymentRolloutGameServerConfigOverrideStateOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector struct {
	Realms []string `pulumi:"realms"`
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorArgs struct {
	Realms pulumi.StringArrayInput `pulumi:"realms"`
}

func (GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector)(nil)).Elem()
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput)
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutputWithContext(context.Background())
}

func (i GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorArgs) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput).ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutputWithContext(ctx)
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrInput interface {
	pulumi.Input

	ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput
	ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutputWithContext(context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput
}

type gameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrType GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorArgs

func GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtr(v *GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorArgs) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrInput {
	return (*gameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrType)(v)
}

func (*gameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector)(nil)).Elem()
}

func (i *gameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrType) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput {
	return i.ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutputWithContext(context.Background())
}

func (i *gameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrType) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput {
	return o.ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutputWithContext(context.Background())
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector) *GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector {
		return &v
	}).(GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput)
}
func (o GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput) Realms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector) []string {
		return v.Realms
	}).(pulumi.StringArrayOutput)
}

type GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput struct{ *pulumi.OutputState }

func (GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector)(nil)).Elem()
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput) ToGameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutputWithContext(ctx context.Context) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput {
	return o
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput) Elem() GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput {
	return o.ApplyT(func(v *GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector) GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector {
		return *v
	}).(GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput)
}

func (o GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput) Realms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelector) []string {
		return v.Realms
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoOutput{})
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoArgsOutput{})
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoArgsPtrOutput{})
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoGkeClusterReferenceOutput{})
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoGkeClusterReferenceArgsOutput{})
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoStateOutput{})
	pulumi.RegisterOutputType(GameServerClusterConnectionInfoStateGkeClusterReferenceOutput{})
	pulumi.RegisterOutputType(GameServerConfigFleetConfigOutput{})
	pulumi.RegisterOutputType(GameServerConfigFleetConfigArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigFleetConfigArgsOutput{})
	pulumi.RegisterOutputType(GameServerConfigFleetConfigArgsArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigFleetConfigStateOutput{})
	pulumi.RegisterOutputType(GameServerConfigFleetConfigStateArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigArgsOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigArgsArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigScheduleOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigScheduleArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigScheduleArgsOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigScheduleArgsArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigSelectorOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigSelectorArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigSelectorArgsOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigSelectorArgsArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigStateOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigStateArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigStateScheduleOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigStateScheduleArrayOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigStateSelectorOutput{})
	pulumi.RegisterOutputType(GameServerConfigScalingConfigStateSelectorArrayOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideArrayOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideArgsOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideArgsArrayOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorPtrOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgsPtrOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideStateOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideStateArrayOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorOutput{})
	pulumi.RegisterOutputType(GameServerDeploymentRolloutGameServerConfigOverrideStateRealmsSelectorPtrOutput{})
}
