// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DatabaseInstanceIpAddress struct {
	IpAddress    string `pulumi:"ipAddress"`
	TimeToRetire string `pulumi:"timeToRetire"`
	Type         string `pulumi:"type"`
}

type DatabaseInstanceIpAddressInput interface {
	pulumi.Input

	ToDatabaseInstanceIpAddressOutput() DatabaseInstanceIpAddressOutput
	ToDatabaseInstanceIpAddressOutputWithContext(context.Context) DatabaseInstanceIpAddressOutput
}

type DatabaseInstanceIpAddressArgs struct {
	IpAddress    pulumi.StringInput `pulumi:"ipAddress"`
	TimeToRetire pulumi.StringInput `pulumi:"timeToRetire"`
	Type         pulumi.StringInput `pulumi:"type"`
}

func (DatabaseInstanceIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceIpAddress)(nil)).Elem()
}

func (i DatabaseInstanceIpAddressArgs) ToDatabaseInstanceIpAddressOutput() DatabaseInstanceIpAddressOutput {
	return i.ToDatabaseInstanceIpAddressOutputWithContext(context.Background())
}

func (i DatabaseInstanceIpAddressArgs) ToDatabaseInstanceIpAddressOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceIpAddressOutput)
}

type DatabaseInstanceIpAddressArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceIpAddressArrayOutput() DatabaseInstanceIpAddressArrayOutput
	ToDatabaseInstanceIpAddressArrayOutputWithContext(context.Context) DatabaseInstanceIpAddressArrayOutput
}

type DatabaseInstanceIpAddressArray []DatabaseInstanceIpAddressInput

func (DatabaseInstanceIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceIpAddress)(nil)).Elem()
}

func (i DatabaseInstanceIpAddressArray) ToDatabaseInstanceIpAddressArrayOutput() DatabaseInstanceIpAddressArrayOutput {
	return i.ToDatabaseInstanceIpAddressArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceIpAddressArray) ToDatabaseInstanceIpAddressArrayOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceIpAddressArrayOutput)
}

type DatabaseInstanceIpAddressOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceIpAddress)(nil)).Elem()
}

func (o DatabaseInstanceIpAddressOutput) ToDatabaseInstanceIpAddressOutput() DatabaseInstanceIpAddressOutput {
	return o
}

func (o DatabaseInstanceIpAddressOutput) ToDatabaseInstanceIpAddressOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressOutput {
	return o
}

func (o DatabaseInstanceIpAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceIpAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o DatabaseInstanceIpAddressOutput) TimeToRetire() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceIpAddress) string { return v.TimeToRetire }).(pulumi.StringOutput)
}

func (o DatabaseInstanceIpAddressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceIpAddress) string { return v.Type }).(pulumi.StringOutput)
}

type DatabaseInstanceIpAddressArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceIpAddress)(nil)).Elem()
}

func (o DatabaseInstanceIpAddressArrayOutput) ToDatabaseInstanceIpAddressArrayOutput() DatabaseInstanceIpAddressArrayOutput {
	return o
}

func (o DatabaseInstanceIpAddressArrayOutput) ToDatabaseInstanceIpAddressArrayOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressArrayOutput {
	return o
}

func (o DatabaseInstanceIpAddressArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceIpAddress {
		return vs[0].([]DatabaseInstanceIpAddress)[vs[1].(int)]
	}).(DatabaseInstanceIpAddressOutput)
}

type DatabaseInstanceIpAddressState struct {
	IpAddress    *string `pulumi:"ipAddress"`
	TimeToRetire *string `pulumi:"timeToRetire"`
	Type         *string `pulumi:"type"`
}

type DatabaseInstanceIpAddressStateInput interface {
	pulumi.Input

	ToDatabaseInstanceIpAddressStateOutput() DatabaseInstanceIpAddressStateOutput
	ToDatabaseInstanceIpAddressStateOutputWithContext(context.Context) DatabaseInstanceIpAddressStateOutput
}

type DatabaseInstanceIpAddressStateArgs struct {
	IpAddress    pulumi.StringPtrInput `pulumi:"ipAddress"`
	TimeToRetire pulumi.StringPtrInput `pulumi:"timeToRetire"`
	Type         pulumi.StringPtrInput `pulumi:"type"`
}

func (DatabaseInstanceIpAddressStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceIpAddressState)(nil)).Elem()
}

func (i DatabaseInstanceIpAddressStateArgs) ToDatabaseInstanceIpAddressStateOutput() DatabaseInstanceIpAddressStateOutput {
	return i.ToDatabaseInstanceIpAddressStateOutputWithContext(context.Background())
}

func (i DatabaseInstanceIpAddressStateArgs) ToDatabaseInstanceIpAddressStateOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceIpAddressStateOutput)
}

type DatabaseInstanceIpAddressStateArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceIpAddressStateArrayOutput() DatabaseInstanceIpAddressStateArrayOutput
	ToDatabaseInstanceIpAddressStateArrayOutputWithContext(context.Context) DatabaseInstanceIpAddressStateArrayOutput
}

type DatabaseInstanceIpAddressStateArray []DatabaseInstanceIpAddressStateInput

func (DatabaseInstanceIpAddressStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceIpAddressState)(nil)).Elem()
}

func (i DatabaseInstanceIpAddressStateArray) ToDatabaseInstanceIpAddressStateArrayOutput() DatabaseInstanceIpAddressStateArrayOutput {
	return i.ToDatabaseInstanceIpAddressStateArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceIpAddressStateArray) ToDatabaseInstanceIpAddressStateArrayOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceIpAddressStateArrayOutput)
}

type DatabaseInstanceIpAddressStateOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceIpAddressStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceIpAddressState)(nil)).Elem()
}

func (o DatabaseInstanceIpAddressStateOutput) ToDatabaseInstanceIpAddressStateOutput() DatabaseInstanceIpAddressStateOutput {
	return o
}

func (o DatabaseInstanceIpAddressStateOutput) ToDatabaseInstanceIpAddressStateOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressStateOutput {
	return o
}

func (o DatabaseInstanceIpAddressStateOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceIpAddressState) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceIpAddressStateOutput) TimeToRetire() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceIpAddressState) *string { return v.TimeToRetire }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceIpAddressStateOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceIpAddressState) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceIpAddressStateArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceIpAddressStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceIpAddressState)(nil)).Elem()
}

func (o DatabaseInstanceIpAddressStateArrayOutput) ToDatabaseInstanceIpAddressStateArrayOutput() DatabaseInstanceIpAddressStateArrayOutput {
	return o
}

func (o DatabaseInstanceIpAddressStateArrayOutput) ToDatabaseInstanceIpAddressStateArrayOutputWithContext(ctx context.Context) DatabaseInstanceIpAddressStateArrayOutput {
	return o
}

func (o DatabaseInstanceIpAddressStateArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceIpAddressStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceIpAddressState {
		return vs[0].([]DatabaseInstanceIpAddressState)[vs[1].(int)]
	}).(DatabaseInstanceIpAddressStateOutput)
}

type DatabaseInstanceReplicaConfiguration struct {
	// PEM representation of the trusted CA's x509
	// certificate.
	CaCertificate *string `pulumi:"caCertificate"`
	// PEM representation of the slave's x509
	// certificate.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// PEM representation of the slave's private key. The
	// corresponding public key in encoded in the `clientCertificate`.
	ClientKey *string `pulumi:"clientKey"`
	// The number of seconds
	// between connect retries.
	ConnectRetryInterval *int `pulumi:"connectRetryInterval"`
	// Path to a SQL file in GCS from which slave
	// instances are created. Format is `gs://bucket/filename`.
	DumpFilePath *string `pulumi:"dumpFilePath"`
	// Specifies if the replica is the failover target.
	// If the field is set to true the replica will be designated as a failover replica.
	// If the master instance fails, the replica instance will be promoted as
	// the new master instance.
	FailoverTarget *bool `pulumi:"failoverTarget"`
	// Time in ms between replication
	// heartbeats.
	MasterHeartbeatPeriod *int `pulumi:"masterHeartbeatPeriod"`
	// Password for the replication connection.
	Password  *string `pulumi:"password"`
	SslCipher *string `pulumi:"sslCipher"`
	// Username for replication connection.
	Username *string `pulumi:"username"`
	// True if the master's common name
	// value is checked during the SSL handshake.
	VerifyServerCertificate *bool `pulumi:"verifyServerCertificate"`
}

type DatabaseInstanceReplicaConfigurationInput interface {
	pulumi.Input

	ToDatabaseInstanceReplicaConfigurationOutput() DatabaseInstanceReplicaConfigurationOutput
	ToDatabaseInstanceReplicaConfigurationOutputWithContext(context.Context) DatabaseInstanceReplicaConfigurationOutput
}

type DatabaseInstanceReplicaConfigurationArgs struct {
	// PEM representation of the trusted CA's x509
	// certificate.
	CaCertificate pulumi.StringPtrInput `pulumi:"caCertificate"`
	// PEM representation of the slave's x509
	// certificate.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// PEM representation of the slave's private key. The
	// corresponding public key in encoded in the `clientCertificate`.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// The number of seconds
	// between connect retries.
	ConnectRetryInterval pulumi.IntPtrInput `pulumi:"connectRetryInterval"`
	// Path to a SQL file in GCS from which slave
	// instances are created. Format is `gs://bucket/filename`.
	DumpFilePath pulumi.StringPtrInput `pulumi:"dumpFilePath"`
	// Specifies if the replica is the failover target.
	// If the field is set to true the replica will be designated as a failover replica.
	// If the master instance fails, the replica instance will be promoted as
	// the new master instance.
	FailoverTarget pulumi.BoolPtrInput `pulumi:"failoverTarget"`
	// Time in ms between replication
	// heartbeats.
	MasterHeartbeatPeriod pulumi.IntPtrInput `pulumi:"masterHeartbeatPeriod"`
	// Password for the replication connection.
	Password  pulumi.StringPtrInput `pulumi:"password"`
	SslCipher pulumi.StringPtrInput `pulumi:"sslCipher"`
	// Username for replication connection.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// True if the master's common name
	// value is checked during the SSL handshake.
	VerifyServerCertificate pulumi.BoolPtrInput `pulumi:"verifyServerCertificate"`
}

func (DatabaseInstanceReplicaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReplicaConfiguration)(nil)).Elem()
}

func (i DatabaseInstanceReplicaConfigurationArgs) ToDatabaseInstanceReplicaConfigurationOutput() DatabaseInstanceReplicaConfigurationOutput {
	return i.ToDatabaseInstanceReplicaConfigurationOutputWithContext(context.Background())
}

func (i DatabaseInstanceReplicaConfigurationArgs) ToDatabaseInstanceReplicaConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationOutput)
}

func (i DatabaseInstanceReplicaConfigurationArgs) ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput {
	return i.ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceReplicaConfigurationArgs) ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationOutput).ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx)
}

type DatabaseInstanceReplicaConfigurationPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput
	ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(context.Context) DatabaseInstanceReplicaConfigurationPtrOutput
}

type databaseInstanceReplicaConfigurationPtrType DatabaseInstanceReplicaConfigurationArgs

func DatabaseInstanceReplicaConfigurationPtr(v *DatabaseInstanceReplicaConfigurationArgs) DatabaseInstanceReplicaConfigurationPtrInput {
	return (*databaseInstanceReplicaConfigurationPtrType)(v)
}

func (*databaseInstanceReplicaConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceReplicaConfiguration)(nil)).Elem()
}

func (i *databaseInstanceReplicaConfigurationPtrType) ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput {
	return i.ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceReplicaConfigurationPtrType) ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationPtrOutput)
}

type DatabaseInstanceReplicaConfigurationOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReplicaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReplicaConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceReplicaConfigurationOutput) ToDatabaseInstanceReplicaConfigurationOutput() DatabaseInstanceReplicaConfigurationOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationOutput) ToDatabaseInstanceReplicaConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationOutput) ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput {
	return o.ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceReplicaConfigurationOutput) ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *DatabaseInstanceReplicaConfiguration {
		return &v
	}).(DatabaseInstanceReplicaConfigurationPtrOutput)
}

// PEM representation of the trusted CA's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's private key. The
// corresponding public key in encoded in the `clientCertificate`.
func (o DatabaseInstanceReplicaConfigurationOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// The number of seconds
// between connect retries.
func (o DatabaseInstanceReplicaConfigurationOutput) ConnectRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *int { return v.ConnectRetryInterval }).(pulumi.IntPtrOutput)
}

// Path to a SQL file in GCS from which slave
// instances are created. Format is `gs://bucket/filename`.
func (o DatabaseInstanceReplicaConfigurationOutput) DumpFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.DumpFilePath }).(pulumi.StringPtrOutput)
}

// Specifies if the replica is the failover target.
// If the field is set to true the replica will be designated as a failover replica.
// If the master instance fails, the replica instance will be promoted as
// the new master instance.
func (o DatabaseInstanceReplicaConfigurationOutput) FailoverTarget() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *bool { return v.FailoverTarget }).(pulumi.BoolPtrOutput)
}

// Time in ms between replication
// heartbeats.
func (o DatabaseInstanceReplicaConfigurationOutput) MasterHeartbeatPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *int { return v.MasterHeartbeatPeriod }).(pulumi.IntPtrOutput)
}

// Password for the replication connection.
func (o DatabaseInstanceReplicaConfigurationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceReplicaConfigurationOutput) SslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.SslCipher }).(pulumi.StringPtrOutput)
}

// Username for replication connection.
func (o DatabaseInstanceReplicaConfigurationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// True if the master's common name
// value is checked during the SSL handshake.
func (o DatabaseInstanceReplicaConfigurationOutput) VerifyServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *bool { return v.VerifyServerCertificate }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceReplicaConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReplicaConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceReplicaConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceReplicaConfigurationPtrOutput) ToDatabaseInstanceReplicaConfigurationPtrOutput() DatabaseInstanceReplicaConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationPtrOutput) ToDatabaseInstanceReplicaConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationPtrOutput) Elem() DatabaseInstanceReplicaConfigurationOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfiguration) DatabaseInstanceReplicaConfiguration { return *v }).(DatabaseInstanceReplicaConfigurationOutput)
}

// PEM representation of the trusted CA's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's private key. The
// corresponding public key in encoded in the `clientCertificate`.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// The number of seconds
// between connect retries.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) ConnectRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *int { return v.ConnectRetryInterval }).(pulumi.IntPtrOutput)
}

// Path to a SQL file in GCS from which slave
// instances are created. Format is `gs://bucket/filename`.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) DumpFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.DumpFilePath }).(pulumi.StringPtrOutput)
}

// Specifies if the replica is the failover target.
// If the field is set to true the replica will be designated as a failover replica.
// If the master instance fails, the replica instance will be promoted as
// the new master instance.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) FailoverTarget() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *bool { return v.FailoverTarget }).(pulumi.BoolPtrOutput)
}

// Time in ms between replication
// heartbeats.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) MasterHeartbeatPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *int { return v.MasterHeartbeatPeriod }).(pulumi.IntPtrOutput)
}

// Password for the replication connection.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceReplicaConfigurationPtrOutput) SslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.SslCipher }).(pulumi.StringPtrOutput)
}

// Username for replication connection.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// True if the master's common name
// value is checked during the SSL handshake.
func (o DatabaseInstanceReplicaConfigurationPtrOutput) VerifyServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfiguration) *bool { return v.VerifyServerCertificate }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceReplicaConfigurationArgs struct {
	// PEM representation of the trusted CA's x509
	// certificate.
	CaCertificate *string `pulumi:"caCertificate"`
	// PEM representation of the slave's x509
	// certificate.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// PEM representation of the slave's private key. The
	// corresponding public key in encoded in the `clientCertificate`.
	ClientKey *string `pulumi:"clientKey"`
	// The number of seconds
	// between connect retries.
	ConnectRetryInterval *int `pulumi:"connectRetryInterval"`
	// Path to a SQL file in GCS from which slave
	// instances are created. Format is `gs://bucket/filename`.
	DumpFilePath *string `pulumi:"dumpFilePath"`
	// Specifies if the replica is the failover target.
	// If the field is set to true the replica will be designated as a failover replica.
	// If the master instance fails, the replica instance will be promoted as
	// the new master instance.
	FailoverTarget *bool `pulumi:"failoverTarget"`
	// Time in ms between replication
	// heartbeats.
	MasterHeartbeatPeriod *int `pulumi:"masterHeartbeatPeriod"`
	// Password for the replication connection.
	Password  *string `pulumi:"password"`
	SslCipher *string `pulumi:"sslCipher"`
	// Username for replication connection.
	Username *string `pulumi:"username"`
	// True if the master's common name
	// value is checked during the SSL handshake.
	VerifyServerCertificate *bool `pulumi:"verifyServerCertificate"`
}

type DatabaseInstanceReplicaConfigurationArgsInput interface {
	pulumi.Input

	ToDatabaseInstanceReplicaConfigurationArgsOutput() DatabaseInstanceReplicaConfigurationArgsOutput
	ToDatabaseInstanceReplicaConfigurationArgsOutputWithContext(context.Context) DatabaseInstanceReplicaConfigurationArgsOutput
}

type DatabaseInstanceReplicaConfigurationArgsArgs struct {
	// PEM representation of the trusted CA's x509
	// certificate.
	CaCertificate pulumi.StringPtrInput `pulumi:"caCertificate"`
	// PEM representation of the slave's x509
	// certificate.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// PEM representation of the slave's private key. The
	// corresponding public key in encoded in the `clientCertificate`.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// The number of seconds
	// between connect retries.
	ConnectRetryInterval pulumi.IntPtrInput `pulumi:"connectRetryInterval"`
	// Path to a SQL file in GCS from which slave
	// instances are created. Format is `gs://bucket/filename`.
	DumpFilePath pulumi.StringPtrInput `pulumi:"dumpFilePath"`
	// Specifies if the replica is the failover target.
	// If the field is set to true the replica will be designated as a failover replica.
	// If the master instance fails, the replica instance will be promoted as
	// the new master instance.
	FailoverTarget pulumi.BoolPtrInput `pulumi:"failoverTarget"`
	// Time in ms between replication
	// heartbeats.
	MasterHeartbeatPeriod pulumi.IntPtrInput `pulumi:"masterHeartbeatPeriod"`
	// Password for the replication connection.
	Password  pulumi.StringPtrInput `pulumi:"password"`
	SslCipher pulumi.StringPtrInput `pulumi:"sslCipher"`
	// Username for replication connection.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// True if the master's common name
	// value is checked during the SSL handshake.
	VerifyServerCertificate pulumi.BoolPtrInput `pulumi:"verifyServerCertificate"`
}

func (DatabaseInstanceReplicaConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReplicaConfigurationArgs)(nil)).Elem()
}

func (i DatabaseInstanceReplicaConfigurationArgsArgs) ToDatabaseInstanceReplicaConfigurationArgsOutput() DatabaseInstanceReplicaConfigurationArgsOutput {
	return i.ToDatabaseInstanceReplicaConfigurationArgsOutputWithContext(context.Background())
}

func (i DatabaseInstanceReplicaConfigurationArgsArgs) ToDatabaseInstanceReplicaConfigurationArgsOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationArgsOutput)
}

func (i DatabaseInstanceReplicaConfigurationArgsArgs) ToDatabaseInstanceReplicaConfigurationArgsPtrOutput() DatabaseInstanceReplicaConfigurationArgsPtrOutput {
	return i.ToDatabaseInstanceReplicaConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceReplicaConfigurationArgsArgs) ToDatabaseInstanceReplicaConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationArgsOutput).ToDatabaseInstanceReplicaConfigurationArgsPtrOutputWithContext(ctx)
}

type DatabaseInstanceReplicaConfigurationArgsPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceReplicaConfigurationArgsPtrOutput() DatabaseInstanceReplicaConfigurationArgsPtrOutput
	ToDatabaseInstanceReplicaConfigurationArgsPtrOutputWithContext(context.Context) DatabaseInstanceReplicaConfigurationArgsPtrOutput
}

type databaseInstanceReplicaConfigurationArgsPtrType DatabaseInstanceReplicaConfigurationArgsArgs

func DatabaseInstanceReplicaConfigurationArgsPtr(v *DatabaseInstanceReplicaConfigurationArgsArgs) DatabaseInstanceReplicaConfigurationArgsPtrInput {
	return (*databaseInstanceReplicaConfigurationArgsPtrType)(v)
}

func (*databaseInstanceReplicaConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceReplicaConfigurationArgs)(nil)).Elem()
}

func (i *databaseInstanceReplicaConfigurationArgsPtrType) ToDatabaseInstanceReplicaConfigurationArgsPtrOutput() DatabaseInstanceReplicaConfigurationArgsPtrOutput {
	return i.ToDatabaseInstanceReplicaConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceReplicaConfigurationArgsPtrType) ToDatabaseInstanceReplicaConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationArgsPtrOutput)
}

type DatabaseInstanceReplicaConfigurationArgsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReplicaConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReplicaConfigurationArgs)(nil)).Elem()
}

func (o DatabaseInstanceReplicaConfigurationArgsOutput) ToDatabaseInstanceReplicaConfigurationArgsOutput() DatabaseInstanceReplicaConfigurationArgsOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationArgsOutput) ToDatabaseInstanceReplicaConfigurationArgsOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationArgsOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationArgsOutput) ToDatabaseInstanceReplicaConfigurationArgsPtrOutput() DatabaseInstanceReplicaConfigurationArgsPtrOutput {
	return o.ToDatabaseInstanceReplicaConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceReplicaConfigurationArgsOutput) ToDatabaseInstanceReplicaConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *DatabaseInstanceReplicaConfigurationArgs {
		return &v
	}).(DatabaseInstanceReplicaConfigurationArgsPtrOutput)
}

// PEM representation of the trusted CA's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's private key. The
// corresponding public key in encoded in the `clientCertificate`.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// The number of seconds
// between connect retries.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) ConnectRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *int { return v.ConnectRetryInterval }).(pulumi.IntPtrOutput)
}

// Path to a SQL file in GCS from which slave
// instances are created. Format is `gs://bucket/filename`.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) DumpFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.DumpFilePath }).(pulumi.StringPtrOutput)
}

// Specifies if the replica is the failover target.
// If the field is set to true the replica will be designated as a failover replica.
// If the master instance fails, the replica instance will be promoted as
// the new master instance.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) FailoverTarget() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *bool { return v.FailoverTarget }).(pulumi.BoolPtrOutput)
}

// Time in ms between replication
// heartbeats.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) MasterHeartbeatPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *int { return v.MasterHeartbeatPeriod }).(pulumi.IntPtrOutput)
}

// Password for the replication connection.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceReplicaConfigurationArgsOutput) SslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.SslCipher }).(pulumi.StringPtrOutput)
}

// Username for replication connection.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// True if the master's common name
// value is checked during the SSL handshake.
func (o DatabaseInstanceReplicaConfigurationArgsOutput) VerifyServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *bool { return v.VerifyServerCertificate }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceReplicaConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReplicaConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceReplicaConfigurationArgs)(nil)).Elem()
}

func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) ToDatabaseInstanceReplicaConfigurationArgsPtrOutput() DatabaseInstanceReplicaConfigurationArgsPtrOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) ToDatabaseInstanceReplicaConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationArgsPtrOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) Elem() DatabaseInstanceReplicaConfigurationArgsOutput {
	return o.ApplyT(func(v *DatabaseInstanceReplicaConfigurationArgs) DatabaseInstanceReplicaConfigurationArgs { return *v }).(DatabaseInstanceReplicaConfigurationArgsOutput)
}

// PEM representation of the trusted CA's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's private key. The
// corresponding public key in encoded in the `clientCertificate`.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// The number of seconds
// between connect retries.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) ConnectRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *int { return v.ConnectRetryInterval }).(pulumi.IntPtrOutput)
}

// Path to a SQL file in GCS from which slave
// instances are created. Format is `gs://bucket/filename`.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) DumpFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.DumpFilePath }).(pulumi.StringPtrOutput)
}

// Specifies if the replica is the failover target.
// If the field is set to true the replica will be designated as a failover replica.
// If the master instance fails, the replica instance will be promoted as
// the new master instance.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) FailoverTarget() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *bool { return v.FailoverTarget }).(pulumi.BoolPtrOutput)
}

// Time in ms between replication
// heartbeats.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) MasterHeartbeatPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *int { return v.MasterHeartbeatPeriod }).(pulumi.IntPtrOutput)
}

// Password for the replication connection.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) SslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.SslCipher }).(pulumi.StringPtrOutput)
}

// Username for replication connection.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// True if the master's common name
// value is checked during the SSL handshake.
func (o DatabaseInstanceReplicaConfigurationArgsPtrOutput) VerifyServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationArgs) *bool { return v.VerifyServerCertificate }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceReplicaConfigurationState struct {
	// PEM representation of the trusted CA's x509
	// certificate.
	CaCertificate *string `pulumi:"caCertificate"`
	// PEM representation of the slave's x509
	// certificate.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// PEM representation of the slave's private key. The
	// corresponding public key in encoded in the `clientCertificate`.
	ClientKey *string `pulumi:"clientKey"`
	// The number of seconds
	// between connect retries.
	ConnectRetryInterval *int `pulumi:"connectRetryInterval"`
	// Path to a SQL file in GCS from which slave
	// instances are created. Format is `gs://bucket/filename`.
	DumpFilePath *string `pulumi:"dumpFilePath"`
	// Specifies if the replica is the failover target.
	// If the field is set to true the replica will be designated as a failover replica.
	// If the master instance fails, the replica instance will be promoted as
	// the new master instance.
	FailoverTarget *bool `pulumi:"failoverTarget"`
	// Time in ms between replication
	// heartbeats.
	MasterHeartbeatPeriod *int `pulumi:"masterHeartbeatPeriod"`
	// Password for the replication connection.
	Password  *string `pulumi:"password"`
	SslCipher *string `pulumi:"sslCipher"`
	// Username for replication connection.
	Username *string `pulumi:"username"`
	// True if the master's common name
	// value is checked during the SSL handshake.
	VerifyServerCertificate *bool `pulumi:"verifyServerCertificate"`
}

type DatabaseInstanceReplicaConfigurationStateInput interface {
	pulumi.Input

	ToDatabaseInstanceReplicaConfigurationStateOutput() DatabaseInstanceReplicaConfigurationStateOutput
	ToDatabaseInstanceReplicaConfigurationStateOutputWithContext(context.Context) DatabaseInstanceReplicaConfigurationStateOutput
}

type DatabaseInstanceReplicaConfigurationStateArgs struct {
	// PEM representation of the trusted CA's x509
	// certificate.
	CaCertificate pulumi.StringPtrInput `pulumi:"caCertificate"`
	// PEM representation of the slave's x509
	// certificate.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// PEM representation of the slave's private key. The
	// corresponding public key in encoded in the `clientCertificate`.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// The number of seconds
	// between connect retries.
	ConnectRetryInterval pulumi.IntPtrInput `pulumi:"connectRetryInterval"`
	// Path to a SQL file in GCS from which slave
	// instances are created. Format is `gs://bucket/filename`.
	DumpFilePath pulumi.StringPtrInput `pulumi:"dumpFilePath"`
	// Specifies if the replica is the failover target.
	// If the field is set to true the replica will be designated as a failover replica.
	// If the master instance fails, the replica instance will be promoted as
	// the new master instance.
	FailoverTarget pulumi.BoolPtrInput `pulumi:"failoverTarget"`
	// Time in ms between replication
	// heartbeats.
	MasterHeartbeatPeriod pulumi.IntPtrInput `pulumi:"masterHeartbeatPeriod"`
	// Password for the replication connection.
	Password  pulumi.StringPtrInput `pulumi:"password"`
	SslCipher pulumi.StringPtrInput `pulumi:"sslCipher"`
	// Username for replication connection.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// True if the master's common name
	// value is checked during the SSL handshake.
	VerifyServerCertificate pulumi.BoolPtrInput `pulumi:"verifyServerCertificate"`
}

func (DatabaseInstanceReplicaConfigurationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReplicaConfigurationState)(nil)).Elem()
}

func (i DatabaseInstanceReplicaConfigurationStateArgs) ToDatabaseInstanceReplicaConfigurationStateOutput() DatabaseInstanceReplicaConfigurationStateOutput {
	return i.ToDatabaseInstanceReplicaConfigurationStateOutputWithContext(context.Background())
}

func (i DatabaseInstanceReplicaConfigurationStateArgs) ToDatabaseInstanceReplicaConfigurationStateOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReplicaConfigurationStateOutput)
}

type DatabaseInstanceReplicaConfigurationStateOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReplicaConfigurationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReplicaConfigurationState)(nil)).Elem()
}

func (o DatabaseInstanceReplicaConfigurationStateOutput) ToDatabaseInstanceReplicaConfigurationStateOutput() DatabaseInstanceReplicaConfigurationStateOutput {
	return o
}

func (o DatabaseInstanceReplicaConfigurationStateOutput) ToDatabaseInstanceReplicaConfigurationStateOutputWithContext(ctx context.Context) DatabaseInstanceReplicaConfigurationStateOutput {
	return o
}

// PEM representation of the trusted CA's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationStateOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's x509
// certificate.
func (o DatabaseInstanceReplicaConfigurationStateOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM representation of the slave's private key. The
// corresponding public key in encoded in the `clientCertificate`.
func (o DatabaseInstanceReplicaConfigurationStateOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// The number of seconds
// between connect retries.
func (o DatabaseInstanceReplicaConfigurationStateOutput) ConnectRetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *int { return v.ConnectRetryInterval }).(pulumi.IntPtrOutput)
}

// Path to a SQL file in GCS from which slave
// instances are created. Format is `gs://bucket/filename`.
func (o DatabaseInstanceReplicaConfigurationStateOutput) DumpFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *string { return v.DumpFilePath }).(pulumi.StringPtrOutput)
}

// Specifies if the replica is the failover target.
// If the field is set to true the replica will be designated as a failover replica.
// If the master instance fails, the replica instance will be promoted as
// the new master instance.
func (o DatabaseInstanceReplicaConfigurationStateOutput) FailoverTarget() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *bool { return v.FailoverTarget }).(pulumi.BoolPtrOutput)
}

// Time in ms between replication
// heartbeats.
func (o DatabaseInstanceReplicaConfigurationStateOutput) MasterHeartbeatPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *int { return v.MasterHeartbeatPeriod }).(pulumi.IntPtrOutput)
}

// Password for the replication connection.
func (o DatabaseInstanceReplicaConfigurationStateOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceReplicaConfigurationStateOutput) SslCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *string { return v.SslCipher }).(pulumi.StringPtrOutput)
}

// Username for replication connection.
func (o DatabaseInstanceReplicaConfigurationStateOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// True if the master's common name
// value is checked during the SSL handshake.
func (o DatabaseInstanceReplicaConfigurationStateOutput) VerifyServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReplicaConfigurationState) *bool { return v.VerifyServerCertificate }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceServerCaCert struct {
	Cert       string `pulumi:"cert"`
	CommonName string `pulumi:"commonName"`
	CreateTime string `pulumi:"createTime"`
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime  string `pulumi:"expirationTime"`
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

type DatabaseInstanceServerCaCertInput interface {
	pulumi.Input

	ToDatabaseInstanceServerCaCertOutput() DatabaseInstanceServerCaCertOutput
	ToDatabaseInstanceServerCaCertOutputWithContext(context.Context) DatabaseInstanceServerCaCertOutput
}

type DatabaseInstanceServerCaCertArgs struct {
	Cert       pulumi.StringInput `pulumi:"cert"`
	CommonName pulumi.StringInput `pulumi:"commonName"`
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime  pulumi.StringInput `pulumi:"expirationTime"`
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (DatabaseInstanceServerCaCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceServerCaCert)(nil)).Elem()
}

func (i DatabaseInstanceServerCaCertArgs) ToDatabaseInstanceServerCaCertOutput() DatabaseInstanceServerCaCertOutput {
	return i.ToDatabaseInstanceServerCaCertOutputWithContext(context.Background())
}

func (i DatabaseInstanceServerCaCertArgs) ToDatabaseInstanceServerCaCertOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceServerCaCertOutput)
}

func (i DatabaseInstanceServerCaCertArgs) ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput {
	return i.ToDatabaseInstanceServerCaCertPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceServerCaCertArgs) ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceServerCaCertOutput).ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx)
}

type DatabaseInstanceServerCaCertPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput
	ToDatabaseInstanceServerCaCertPtrOutputWithContext(context.Context) DatabaseInstanceServerCaCertPtrOutput
}

type databaseInstanceServerCaCertPtrType DatabaseInstanceServerCaCertArgs

func DatabaseInstanceServerCaCertPtr(v *DatabaseInstanceServerCaCertArgs) DatabaseInstanceServerCaCertPtrInput {
	return (*databaseInstanceServerCaCertPtrType)(v)
}

func (*databaseInstanceServerCaCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceServerCaCert)(nil)).Elem()
}

func (i *databaseInstanceServerCaCertPtrType) ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput {
	return i.ToDatabaseInstanceServerCaCertPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceServerCaCertPtrType) ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceServerCaCertPtrOutput)
}

type DatabaseInstanceServerCaCertOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceServerCaCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceServerCaCert)(nil)).Elem()
}

func (o DatabaseInstanceServerCaCertOutput) ToDatabaseInstanceServerCaCertOutput() DatabaseInstanceServerCaCertOutput {
	return o
}

func (o DatabaseInstanceServerCaCertOutput) ToDatabaseInstanceServerCaCertOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertOutput {
	return o
}

func (o DatabaseInstanceServerCaCertOutput) ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput {
	return o.ToDatabaseInstanceServerCaCertPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceServerCaCertOutput) ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) *DatabaseInstanceServerCaCert {
		return &v
	}).(DatabaseInstanceServerCaCertPtrOutput)
}
func (o DatabaseInstanceServerCaCertOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.Cert }).(pulumi.StringOutput)
}

func (o DatabaseInstanceServerCaCertOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.CommonName }).(pulumi.StringOutput)
}

func (o DatabaseInstanceServerCaCertOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
// formatted date time string indicating when this whitelist expires.
func (o DatabaseInstanceServerCaCertOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

func (o DatabaseInstanceServerCaCertOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type DatabaseInstanceServerCaCertPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceServerCaCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceServerCaCert)(nil)).Elem()
}

func (o DatabaseInstanceServerCaCertPtrOutput) ToDatabaseInstanceServerCaCertPtrOutput() DatabaseInstanceServerCaCertPtrOutput {
	return o
}

func (o DatabaseInstanceServerCaCertPtrOutput) ToDatabaseInstanceServerCaCertPtrOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertPtrOutput {
	return o
}

func (o DatabaseInstanceServerCaCertPtrOutput) Elem() DatabaseInstanceServerCaCertOutput {
	return o.ApplyT(func(v *DatabaseInstanceServerCaCert) DatabaseInstanceServerCaCert { return *v }).(DatabaseInstanceServerCaCertOutput)
}

func (o DatabaseInstanceServerCaCertPtrOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.Cert }).(pulumi.StringOutput)
}

func (o DatabaseInstanceServerCaCertPtrOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.CommonName }).(pulumi.StringOutput)
}

func (o DatabaseInstanceServerCaCertPtrOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
// formatted date time string indicating when this whitelist expires.
func (o DatabaseInstanceServerCaCertPtrOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

func (o DatabaseInstanceServerCaCertPtrOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCert) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type DatabaseInstanceServerCaCertState struct {
	Cert       *string `pulumi:"cert"`
	CommonName *string `pulumi:"commonName"`
	CreateTime *string `pulumi:"createTime"`
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime  *string `pulumi:"expirationTime"`
	Sha1Fingerprint *string `pulumi:"sha1Fingerprint"`
}

type DatabaseInstanceServerCaCertStateInput interface {
	pulumi.Input

	ToDatabaseInstanceServerCaCertStateOutput() DatabaseInstanceServerCaCertStateOutput
	ToDatabaseInstanceServerCaCertStateOutputWithContext(context.Context) DatabaseInstanceServerCaCertStateOutput
}

type DatabaseInstanceServerCaCertStateArgs struct {
	Cert       pulumi.StringPtrInput `pulumi:"cert"`
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime  pulumi.StringPtrInput `pulumi:"expirationTime"`
	Sha1Fingerprint pulumi.StringPtrInput `pulumi:"sha1Fingerprint"`
}

func (DatabaseInstanceServerCaCertStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceServerCaCertState)(nil)).Elem()
}

func (i DatabaseInstanceServerCaCertStateArgs) ToDatabaseInstanceServerCaCertStateOutput() DatabaseInstanceServerCaCertStateOutput {
	return i.ToDatabaseInstanceServerCaCertStateOutputWithContext(context.Background())
}

func (i DatabaseInstanceServerCaCertStateArgs) ToDatabaseInstanceServerCaCertStateOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceServerCaCertStateOutput)
}

type DatabaseInstanceServerCaCertStateOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceServerCaCertStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceServerCaCertState)(nil)).Elem()
}

func (o DatabaseInstanceServerCaCertStateOutput) ToDatabaseInstanceServerCaCertStateOutput() DatabaseInstanceServerCaCertStateOutput {
	return o
}

func (o DatabaseInstanceServerCaCertStateOutput) ToDatabaseInstanceServerCaCertStateOutputWithContext(ctx context.Context) DatabaseInstanceServerCaCertStateOutput {
	return o
}

func (o DatabaseInstanceServerCaCertStateOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCertState) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceServerCaCertStateOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCertState) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceServerCaCertStateOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCertState) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
// formatted date time string indicating when this whitelist expires.
func (o DatabaseInstanceServerCaCertStateOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCertState) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceServerCaCertStateOutput) Sha1Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceServerCaCertState) *string { return v.Sha1Fingerprint }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettings struct {
	// This specifies when the instance should be
	// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
	ActivationPolicy string `pulumi:"activationPolicy"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// A list of Google App Engine (GAE) project names that are allowed to access this instance.
	AuthorizedGaeApplications []string `pulumi:"authorizedGaeApplications"`
	// This specifies whether a PostgreSQL instance
	// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
	AvailabilityType    string                                      `pulumi:"availabilityType"`
	BackupConfiguration DatabaseInstanceSettingsBackupConfiguration `pulumi:"backupConfiguration"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Specific to read instances, indicates
	// when crash-safe replication flags are enabled.
	CrashSafeReplication bool                                   `pulumi:"crashSafeReplication"`
	DatabaseFlags        []DatabaseInstanceSettingsDatabaseFlag `pulumi:"databaseFlags"`
	// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
	DiskAutoresize *bool `pulumi:"diskAutoresize"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
	DiskSize int `pulumi:"diskSize"`
	// The type of data disk: PD_SSD or PD_HDD.
	DiskType           string                                     `pulumi:"diskType"`
	IpConfiguration    DatabaseInstanceSettingsIpConfiguration    `pulumi:"ipConfiguration"`
	LocationPreference DatabaseInstanceSettingsLocationPreference `pulumi:"locationPreference"`
	MaintenanceWindow  *DatabaseInstanceSettingsMaintenanceWindow `pulumi:"maintenanceWindow"`
	// Pricing plan for this instance, can only be `PER_USE`.
	PricingPlan *string `pulumi:"pricingPlan"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
	ReplicationType *string `pulumi:"replicationType"`
	// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
	// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
	// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier string `pulumi:"tier"`
	// A set of key/value user label pairs to assign to the instance.
	UserLabels map[string]string `pulumi:"userLabels"`
	Version    int               `pulumi:"version"`
}

type DatabaseInstanceSettingsInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsOutput() DatabaseInstanceSettingsOutput
	ToDatabaseInstanceSettingsOutputWithContext(context.Context) DatabaseInstanceSettingsOutput
}

type DatabaseInstanceSettingsArgs struct {
	// This specifies when the instance should be
	// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
	ActivationPolicy pulumi.StringInput `pulumi:"activationPolicy"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// A list of Google App Engine (GAE) project names that are allowed to access this instance.
	AuthorizedGaeApplications pulumi.StringArrayInput `pulumi:"authorizedGaeApplications"`
	// This specifies whether a PostgreSQL instance
	// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
	AvailabilityType    pulumi.StringInput                               `pulumi:"availabilityType"`
	BackupConfiguration DatabaseInstanceSettingsBackupConfigurationInput `pulumi:"backupConfiguration"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Specific to read instances, indicates
	// when crash-safe replication flags are enabled.
	CrashSafeReplication pulumi.BoolInput                               `pulumi:"crashSafeReplication"`
	DatabaseFlags        DatabaseInstanceSettingsDatabaseFlagArrayInput `pulumi:"databaseFlags"`
	// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
	DiskAutoresize pulumi.BoolPtrInput `pulumi:"diskAutoresize"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// The type of data disk: PD_SSD or PD_HDD.
	DiskType           pulumi.StringInput                                `pulumi:"diskType"`
	IpConfiguration    DatabaseInstanceSettingsIpConfigurationInput      `pulumi:"ipConfiguration"`
	LocationPreference DatabaseInstanceSettingsLocationPreferenceInput   `pulumi:"locationPreference"`
	MaintenanceWindow  DatabaseInstanceSettingsMaintenanceWindowPtrInput `pulumi:"maintenanceWindow"`
	// Pricing plan for this instance, can only be `PER_USE`.
	PricingPlan pulumi.StringPtrInput `pulumi:"pricingPlan"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
	ReplicationType pulumi.StringPtrInput `pulumi:"replicationType"`
	// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
	// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
	// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier pulumi.StringInput `pulumi:"tier"`
	// A set of key/value user label pairs to assign to the instance.
	UserLabels pulumi.StringMapInput `pulumi:"userLabels"`
	Version    pulumi.IntInput       `pulumi:"version"`
}

func (DatabaseInstanceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettings)(nil)).Elem()
}

func (i DatabaseInstanceSettingsArgs) ToDatabaseInstanceSettingsOutput() DatabaseInstanceSettingsOutput {
	return i.ToDatabaseInstanceSettingsOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsArgs) ToDatabaseInstanceSettingsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsOutput)
}

func (i DatabaseInstanceSettingsArgs) ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput {
	return i.ToDatabaseInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsArgs) ToDatabaseInstanceSettingsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsOutput).ToDatabaseInstanceSettingsPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput
	ToDatabaseInstanceSettingsPtrOutputWithContext(context.Context) DatabaseInstanceSettingsPtrOutput
}

type databaseInstanceSettingsPtrType DatabaseInstanceSettingsArgs

func DatabaseInstanceSettingsPtr(v *DatabaseInstanceSettingsArgs) DatabaseInstanceSettingsPtrInput {
	return (*databaseInstanceSettingsPtrType)(v)
}

func (*databaseInstanceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettings)(nil)).Elem()
}

func (i *databaseInstanceSettingsPtrType) ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput {
	return i.ToDatabaseInstanceSettingsPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsPtrType) ToDatabaseInstanceSettingsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsPtrOutput)
}

type DatabaseInstanceSettingsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettings)(nil)).Elem()
}

func (o DatabaseInstanceSettingsOutput) ToDatabaseInstanceSettingsOutput() DatabaseInstanceSettingsOutput {
	return o
}

func (o DatabaseInstanceSettingsOutput) ToDatabaseInstanceSettingsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsOutput {
	return o
}

func (o DatabaseInstanceSettingsOutput) ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput {
	return o.ToDatabaseInstanceSettingsPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsOutput) ToDatabaseInstanceSettingsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *DatabaseInstanceSettings {
		return &v
	}).(DatabaseInstanceSettingsPtrOutput)
}

// This specifies when the instance should be
// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
func (o DatabaseInstanceSettingsOutput) ActivationPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) string { return v.ActivationPolicy }).(pulumi.StringOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// A list of Google App Engine (GAE) project names that are allowed to access this instance.
func (o DatabaseInstanceSettingsOutput) AuthorizedGaeApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) []string { return v.AuthorizedGaeApplications }).(pulumi.StringArrayOutput)
}

// This specifies whether a PostgreSQL instance
// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
func (o DatabaseInstanceSettingsOutput) AvailabilityType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) string { return v.AvailabilityType }).(pulumi.StringOutput)
}

func (o DatabaseInstanceSettingsOutput) BackupConfiguration() DatabaseInstanceSettingsBackupConfigurationOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) DatabaseInstanceSettingsBackupConfiguration {
		return v.BackupConfiguration
	}).(DatabaseInstanceSettingsBackupConfigurationOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Specific to read instances, indicates
// when crash-safe replication flags are enabled.
func (o DatabaseInstanceSettingsOutput) CrashSafeReplication() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) bool { return v.CrashSafeReplication }).(pulumi.BoolOutput)
}

func (o DatabaseInstanceSettingsOutput) DatabaseFlags() DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) []DatabaseInstanceSettingsDatabaseFlag { return v.DatabaseFlags }).(DatabaseInstanceSettingsDatabaseFlagArrayOutput)
}

// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
func (o DatabaseInstanceSettingsOutput) DiskAutoresize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *bool { return v.DiskAutoresize }).(pulumi.BoolPtrOutput)
}

// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
func (o DatabaseInstanceSettingsOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The type of data disk: PD_SSD or PD_HDD.
func (o DatabaseInstanceSettingsOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o DatabaseInstanceSettingsOutput) IpConfiguration() DatabaseInstanceSettingsIpConfigurationOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) DatabaseInstanceSettingsIpConfiguration { return v.IpConfiguration }).(DatabaseInstanceSettingsIpConfigurationOutput)
}

func (o DatabaseInstanceSettingsOutput) LocationPreference() DatabaseInstanceSettingsLocationPreferenceOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) DatabaseInstanceSettingsLocationPreference {
		return v.LocationPreference
	}).(DatabaseInstanceSettingsLocationPreferenceOutput)
}

func (o DatabaseInstanceSettingsOutput) MaintenanceWindow() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *DatabaseInstanceSettingsMaintenanceWindow {
		return v.MaintenanceWindow
	}).(DatabaseInstanceSettingsMaintenanceWindowPtrOutput)
}

// Pricing plan for this instance, can only be `PER_USE`.
func (o DatabaseInstanceSettingsOutput) PricingPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *string { return v.PricingPlan }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
func (o DatabaseInstanceSettingsOutput) ReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *string { return v.ReplicationType }).(pulumi.StringPtrOutput)
}

// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
func (o DatabaseInstanceSettingsOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) string { return v.Tier }).(pulumi.StringOutput)
}

// A set of key/value user label pairs to assign to the instance.
func (o DatabaseInstanceSettingsOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) map[string]string { return v.UserLabels }).(pulumi.StringMapOutput)
}

func (o DatabaseInstanceSettingsOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) int { return v.Version }).(pulumi.IntOutput)
}

type DatabaseInstanceSettingsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettings)(nil)).Elem()
}

func (o DatabaseInstanceSettingsPtrOutput) ToDatabaseInstanceSettingsPtrOutput() DatabaseInstanceSettingsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsPtrOutput) ToDatabaseInstanceSettingsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsPtrOutput) Elem() DatabaseInstanceSettingsOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettings) DatabaseInstanceSettings { return *v }).(DatabaseInstanceSettingsOutput)
}

// This specifies when the instance should be
// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
func (o DatabaseInstanceSettingsPtrOutput) ActivationPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) string { return v.ActivationPolicy }).(pulumi.StringOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// A list of Google App Engine (GAE) project names that are allowed to access this instance.
func (o DatabaseInstanceSettingsPtrOutput) AuthorizedGaeApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) []string { return v.AuthorizedGaeApplications }).(pulumi.StringArrayOutput)
}

// This specifies whether a PostgreSQL instance
// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
func (o DatabaseInstanceSettingsPtrOutput) AvailabilityType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) string { return v.AvailabilityType }).(pulumi.StringOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) BackupConfiguration() DatabaseInstanceSettingsBackupConfigurationOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) DatabaseInstanceSettingsBackupConfiguration {
		return v.BackupConfiguration
	}).(DatabaseInstanceSettingsBackupConfigurationOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Specific to read instances, indicates
// when crash-safe replication flags are enabled.
func (o DatabaseInstanceSettingsPtrOutput) CrashSafeReplication() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) bool { return v.CrashSafeReplication }).(pulumi.BoolOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) DatabaseFlags() DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) []DatabaseInstanceSettingsDatabaseFlag { return v.DatabaseFlags }).(DatabaseInstanceSettingsDatabaseFlagArrayOutput)
}

// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
func (o DatabaseInstanceSettingsPtrOutput) DiskAutoresize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *bool { return v.DiskAutoresize }).(pulumi.BoolPtrOutput)
}

// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
func (o DatabaseInstanceSettingsPtrOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The type of data disk: PD_SSD or PD_HDD.
func (o DatabaseInstanceSettingsPtrOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) IpConfiguration() DatabaseInstanceSettingsIpConfigurationOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) DatabaseInstanceSettingsIpConfiguration { return v.IpConfiguration }).(DatabaseInstanceSettingsIpConfigurationOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) LocationPreference() DatabaseInstanceSettingsLocationPreferenceOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) DatabaseInstanceSettingsLocationPreference {
		return v.LocationPreference
	}).(DatabaseInstanceSettingsLocationPreferenceOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) MaintenanceWindow() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *DatabaseInstanceSettingsMaintenanceWindow {
		return v.MaintenanceWindow
	}).(DatabaseInstanceSettingsMaintenanceWindowPtrOutput)
}

// Pricing plan for this instance, can only be `PER_USE`.
func (o DatabaseInstanceSettingsPtrOutput) PricingPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *string { return v.PricingPlan }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
func (o DatabaseInstanceSettingsPtrOutput) ReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) *string { return v.ReplicationType }).(pulumi.StringPtrOutput)
}

// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
func (o DatabaseInstanceSettingsPtrOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) string { return v.Tier }).(pulumi.StringOutput)
}

// A set of key/value user label pairs to assign to the instance.
func (o DatabaseInstanceSettingsPtrOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) map[string]string { return v.UserLabels }).(pulumi.StringMapOutput)
}

func (o DatabaseInstanceSettingsPtrOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseInstanceSettings) int { return v.Version }).(pulumi.IntOutput)
}

type DatabaseInstanceSettingsArgs struct {
	// This specifies when the instance should be
	// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
	ActivationPolicy *string `pulumi:"activationPolicy"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// A list of Google App Engine (GAE) project names that are allowed to access this instance.
	AuthorizedGaeApplications []string `pulumi:"authorizedGaeApplications"`
	// This specifies whether a PostgreSQL instance
	// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
	AvailabilityType    *string                                          `pulumi:"availabilityType"`
	BackupConfiguration *DatabaseInstanceSettingsBackupConfigurationArgs `pulumi:"backupConfiguration"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Specific to read instances, indicates
	// when crash-safe replication flags are enabled.
	CrashSafeReplication *bool                                      `pulumi:"crashSafeReplication"`
	DatabaseFlags        []DatabaseInstanceSettingsDatabaseFlagArgs `pulumi:"databaseFlags"`
	// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
	DiskAutoresize *bool `pulumi:"diskAutoresize"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
	DiskSize *int `pulumi:"diskSize"`
	// The type of data disk: PD_SSD or PD_HDD.
	DiskType           *string                                         `pulumi:"diskType"`
	IpConfiguration    *DatabaseInstanceSettingsIpConfigurationArgs    `pulumi:"ipConfiguration"`
	LocationPreference *DatabaseInstanceSettingsLocationPreferenceArgs `pulumi:"locationPreference"`
	MaintenanceWindow  *DatabaseInstanceSettingsMaintenanceWindowArgs  `pulumi:"maintenanceWindow"`
	// Pricing plan for this instance, can only be `PER_USE`.
	PricingPlan *string `pulumi:"pricingPlan"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
	ReplicationType *string `pulumi:"replicationType"`
	// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
	// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
	// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier string `pulumi:"tier"`
	// A set of key/value user label pairs to assign to the instance.
	UserLabels map[string]string `pulumi:"userLabels"`
	Version    *int              `pulumi:"version"`
}

type DatabaseInstanceSettingsArgsInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsArgsOutput() DatabaseInstanceSettingsArgsOutput
	ToDatabaseInstanceSettingsArgsOutputWithContext(context.Context) DatabaseInstanceSettingsArgsOutput
}

type DatabaseInstanceSettingsArgsArgs struct {
	// This specifies when the instance should be
	// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
	ActivationPolicy pulumi.StringPtrInput `pulumi:"activationPolicy"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// A list of Google App Engine (GAE) project names that are allowed to access this instance.
	AuthorizedGaeApplications pulumi.StringArrayInput `pulumi:"authorizedGaeApplications"`
	// This specifies whether a PostgreSQL instance
	// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
	AvailabilityType    pulumi.StringPtrInput                                   `pulumi:"availabilityType"`
	BackupConfiguration DatabaseInstanceSettingsBackupConfigurationArgsPtrInput `pulumi:"backupConfiguration"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Specific to read instances, indicates
	// when crash-safe replication flags are enabled.
	CrashSafeReplication pulumi.BoolPtrInput                                `pulumi:"crashSafeReplication"`
	DatabaseFlags        DatabaseInstanceSettingsDatabaseFlagArgsArrayInput `pulumi:"databaseFlags"`
	// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
	DiskAutoresize pulumi.BoolPtrInput `pulumi:"diskAutoresize"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// The type of data disk: PD_SSD or PD_HDD.
	DiskType           pulumi.StringPtrInput                                  `pulumi:"diskType"`
	IpConfiguration    DatabaseInstanceSettingsIpConfigurationArgsPtrInput    `pulumi:"ipConfiguration"`
	LocationPreference DatabaseInstanceSettingsLocationPreferenceArgsPtrInput `pulumi:"locationPreference"`
	MaintenanceWindow  DatabaseInstanceSettingsMaintenanceWindowArgsPtrInput  `pulumi:"maintenanceWindow"`
	// Pricing plan for this instance, can only be `PER_USE`.
	PricingPlan pulumi.StringPtrInput `pulumi:"pricingPlan"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
	ReplicationType pulumi.StringPtrInput `pulumi:"replicationType"`
	// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
	// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
	// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier pulumi.StringInput `pulumi:"tier"`
	// A set of key/value user label pairs to assign to the instance.
	UserLabels pulumi.StringMapInput `pulumi:"userLabels"`
	Version    pulumi.IntPtrInput    `pulumi:"version"`
}

func (DatabaseInstanceSettingsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsArgs)(nil)).Elem()
}

func (i DatabaseInstanceSettingsArgsArgs) ToDatabaseInstanceSettingsArgsOutput() DatabaseInstanceSettingsArgsOutput {
	return i.ToDatabaseInstanceSettingsArgsOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsArgsArgs) ToDatabaseInstanceSettingsArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsArgsOutput)
}

func (i DatabaseInstanceSettingsArgsArgs) ToDatabaseInstanceSettingsArgsPtrOutput() DatabaseInstanceSettingsArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsArgsPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsArgsArgs) ToDatabaseInstanceSettingsArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsArgsOutput).ToDatabaseInstanceSettingsArgsPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsArgsPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsArgsPtrOutput() DatabaseInstanceSettingsArgsPtrOutput
	ToDatabaseInstanceSettingsArgsPtrOutputWithContext(context.Context) DatabaseInstanceSettingsArgsPtrOutput
}

type databaseInstanceSettingsArgsPtrType DatabaseInstanceSettingsArgsArgs

func DatabaseInstanceSettingsArgsPtr(v *DatabaseInstanceSettingsArgsArgs) DatabaseInstanceSettingsArgsPtrInput {
	return (*databaseInstanceSettingsArgsPtrType)(v)
}

func (*databaseInstanceSettingsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsArgs)(nil)).Elem()
}

func (i *databaseInstanceSettingsArgsPtrType) ToDatabaseInstanceSettingsArgsPtrOutput() DatabaseInstanceSettingsArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsArgsPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsArgsPtrType) ToDatabaseInstanceSettingsArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsArgsPtrOutput)
}

type DatabaseInstanceSettingsArgsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsArgsOutput) ToDatabaseInstanceSettingsArgsOutput() DatabaseInstanceSettingsArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsArgsOutput) ToDatabaseInstanceSettingsArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsArgsOutput) ToDatabaseInstanceSettingsArgsPtrOutput() DatabaseInstanceSettingsArgsPtrOutput {
	return o.ToDatabaseInstanceSettingsArgsPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsArgsOutput) ToDatabaseInstanceSettingsArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *DatabaseInstanceSettingsArgs {
		return &v
	}).(DatabaseInstanceSettingsArgsPtrOutput)
}

// This specifies when the instance should be
// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
func (o DatabaseInstanceSettingsArgsOutput) ActivationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.ActivationPolicy }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// A list of Google App Engine (GAE) project names that are allowed to access this instance.
func (o DatabaseInstanceSettingsArgsOutput) AuthorizedGaeApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) []string { return v.AuthorizedGaeApplications }).(pulumi.StringArrayOutput)
}

// This specifies whether a PostgreSQL instance
// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
func (o DatabaseInstanceSettingsArgsOutput) AvailabilityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.AvailabilityType }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsArgsOutput) BackupConfiguration() DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *DatabaseInstanceSettingsBackupConfigurationArgs {
		return v.BackupConfiguration
	}).(DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Specific to read instances, indicates
// when crash-safe replication flags are enabled.
func (o DatabaseInstanceSettingsArgsOutput) CrashSafeReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *bool { return v.CrashSafeReplication }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsArgsOutput) DatabaseFlags() DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) []DatabaseInstanceSettingsDatabaseFlagArgs {
		return v.DatabaseFlags
	}).(DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput)
}

// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
func (o DatabaseInstanceSettingsArgsOutput) DiskAutoresize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *bool { return v.DiskAutoresize }).(pulumi.BoolPtrOutput)
}

// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
func (o DatabaseInstanceSettingsArgsOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// The type of data disk: PD_SSD or PD_HDD.
func (o DatabaseInstanceSettingsArgsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsArgsOutput) IpConfiguration() DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *DatabaseInstanceSettingsIpConfigurationArgs {
		return v.IpConfiguration
	}).(DatabaseInstanceSettingsIpConfigurationArgsPtrOutput)
}

func (o DatabaseInstanceSettingsArgsOutput) LocationPreference() DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *DatabaseInstanceSettingsLocationPreferenceArgs {
		return v.LocationPreference
	}).(DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput)
}

func (o DatabaseInstanceSettingsArgsOutput) MaintenanceWindow() DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *DatabaseInstanceSettingsMaintenanceWindowArgs {
		return v.MaintenanceWindow
	}).(DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput)
}

// Pricing plan for this instance, can only be `PER_USE`.
func (o DatabaseInstanceSettingsArgsOutput) PricingPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.PricingPlan }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
func (o DatabaseInstanceSettingsArgsOutput) ReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.ReplicationType }).(pulumi.StringPtrOutput)
}

// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
func (o DatabaseInstanceSettingsArgsOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) string { return v.Tier }).(pulumi.StringOutput)
}

// A set of key/value user label pairs to assign to the instance.
func (o DatabaseInstanceSettingsArgsOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) map[string]string { return v.UserLabels }).(pulumi.StringMapOutput)
}

func (o DatabaseInstanceSettingsArgsOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type DatabaseInstanceSettingsArgsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsArgsPtrOutput) ToDatabaseInstanceSettingsArgsPtrOutput() DatabaseInstanceSettingsArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsArgsPtrOutput) ToDatabaseInstanceSettingsArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsArgsPtrOutput) Elem() DatabaseInstanceSettingsArgsOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsArgs) DatabaseInstanceSettingsArgs { return *v }).(DatabaseInstanceSettingsArgsOutput)
}

// This specifies when the instance should be
// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
func (o DatabaseInstanceSettingsArgsPtrOutput) ActivationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.ActivationPolicy }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// A list of Google App Engine (GAE) project names that are allowed to access this instance.
func (o DatabaseInstanceSettingsArgsPtrOutput) AuthorizedGaeApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) []string { return v.AuthorizedGaeApplications }).(pulumi.StringArrayOutput)
}

// This specifies whether a PostgreSQL instance
// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
func (o DatabaseInstanceSettingsArgsPtrOutput) AvailabilityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.AvailabilityType }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsArgsPtrOutput) BackupConfiguration() DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *DatabaseInstanceSettingsBackupConfigurationArgs {
		return v.BackupConfiguration
	}).(DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Specific to read instances, indicates
// when crash-safe replication flags are enabled.
func (o DatabaseInstanceSettingsArgsPtrOutput) CrashSafeReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *bool { return v.CrashSafeReplication }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsArgsPtrOutput) DatabaseFlags() DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) []DatabaseInstanceSettingsDatabaseFlagArgs {
		return v.DatabaseFlags
	}).(DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput)
}

// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
func (o DatabaseInstanceSettingsArgsPtrOutput) DiskAutoresize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *bool { return v.DiskAutoresize }).(pulumi.BoolPtrOutput)
}

// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
func (o DatabaseInstanceSettingsArgsPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// The type of data disk: PD_SSD or PD_HDD.
func (o DatabaseInstanceSettingsArgsPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsArgsPtrOutput) IpConfiguration() DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *DatabaseInstanceSettingsIpConfigurationArgs {
		return v.IpConfiguration
	}).(DatabaseInstanceSettingsIpConfigurationArgsPtrOutput)
}

func (o DatabaseInstanceSettingsArgsPtrOutput) LocationPreference() DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *DatabaseInstanceSettingsLocationPreferenceArgs {
		return v.LocationPreference
	}).(DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput)
}

func (o DatabaseInstanceSettingsArgsPtrOutput) MaintenanceWindow() DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *DatabaseInstanceSettingsMaintenanceWindowArgs {
		return v.MaintenanceWindow
	}).(DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput)
}

// Pricing plan for this instance, can only be `PER_USE`.
func (o DatabaseInstanceSettingsArgsPtrOutput) PricingPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.PricingPlan }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
func (o DatabaseInstanceSettingsArgsPtrOutput) ReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *string { return v.ReplicationType }).(pulumi.StringPtrOutput)
}

// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
func (o DatabaseInstanceSettingsArgsPtrOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) string { return v.Tier }).(pulumi.StringOutput)
}

// A set of key/value user label pairs to assign to the instance.
func (o DatabaseInstanceSettingsArgsPtrOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) map[string]string { return v.UserLabels }).(pulumi.StringMapOutput)
}

func (o DatabaseInstanceSettingsArgsPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsArgs) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type DatabaseInstanceSettingsBackupConfiguration struct {
	// True if binary logging is enabled. If
	// `settings.backup_configuration.enabled` is false, this must be as well.
	// Cannot be used with Postgres.
	BinaryLogEnabled *bool `pulumi:"binaryLogEnabled"`
	// True if backup configuration is enabled.
	Enabled  *bool   `pulumi:"enabled"`
	Location *string `pulumi:"location"`
	// `HH:MM` format time indicating when backup
	// configuration starts.
	StartTime string `pulumi:"startTime"`
}

type DatabaseInstanceSettingsBackupConfigurationInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsBackupConfigurationOutput() DatabaseInstanceSettingsBackupConfigurationOutput
	ToDatabaseInstanceSettingsBackupConfigurationOutputWithContext(context.Context) DatabaseInstanceSettingsBackupConfigurationOutput
}

type DatabaseInstanceSettingsBackupConfigurationArgs struct {
	// True if binary logging is enabled. If
	// `settings.backup_configuration.enabled` is false, this must be as well.
	// Cannot be used with Postgres.
	BinaryLogEnabled pulumi.BoolPtrInput `pulumi:"binaryLogEnabled"`
	// True if backup configuration is enabled.
	Enabled  pulumi.BoolPtrInput   `pulumi:"enabled"`
	Location pulumi.StringPtrInput `pulumi:"location"`
	// `HH:MM` format time indicating when backup
	// configuration starts.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (DatabaseInstanceSettingsBackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsBackupConfiguration)(nil)).Elem()
}

func (i DatabaseInstanceSettingsBackupConfigurationArgs) ToDatabaseInstanceSettingsBackupConfigurationOutput() DatabaseInstanceSettingsBackupConfigurationOutput {
	return i.ToDatabaseInstanceSettingsBackupConfigurationOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsBackupConfigurationArgs) ToDatabaseInstanceSettingsBackupConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsBackupConfigurationOutput)
}

type DatabaseInstanceSettingsBackupConfigurationOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsBackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsBackupConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsBackupConfigurationOutput) ToDatabaseInstanceSettingsBackupConfigurationOutput() DatabaseInstanceSettingsBackupConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsBackupConfigurationOutput) ToDatabaseInstanceSettingsBackupConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationOutput {
	return o
}

// True if binary logging is enabled. If
// `settings.backup_configuration.enabled` is false, this must be as well.
// Cannot be used with Postgres.
func (o DatabaseInstanceSettingsBackupConfigurationOutput) BinaryLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfiguration) *bool { return v.BinaryLogEnabled }).(pulumi.BoolPtrOutput)
}

// True if backup configuration is enabled.
func (o DatabaseInstanceSettingsBackupConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsBackupConfigurationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfiguration) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// `HH:MM` format time indicating when backup
// configuration starts.
func (o DatabaseInstanceSettingsBackupConfigurationOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfiguration) string { return v.StartTime }).(pulumi.StringOutput)
}

type DatabaseInstanceSettingsBackupConfigurationArgs struct {
	// True if binary logging is enabled. If
	// `settings.backup_configuration.enabled` is false, this must be as well.
	// Cannot be used with Postgres.
	BinaryLogEnabled *bool `pulumi:"binaryLogEnabled"`
	// True if backup configuration is enabled.
	Enabled  *bool   `pulumi:"enabled"`
	Location *string `pulumi:"location"`
	// `HH:MM` format time indicating when backup
	// configuration starts.
	StartTime *string `pulumi:"startTime"`
}

type DatabaseInstanceSettingsBackupConfigurationArgsInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsBackupConfigurationArgsOutput() DatabaseInstanceSettingsBackupConfigurationArgsOutput
	ToDatabaseInstanceSettingsBackupConfigurationArgsOutputWithContext(context.Context) DatabaseInstanceSettingsBackupConfigurationArgsOutput
}

type DatabaseInstanceSettingsBackupConfigurationArgsArgs struct {
	// True if binary logging is enabled. If
	// `settings.backup_configuration.enabled` is false, this must be as well.
	// Cannot be used with Postgres.
	BinaryLogEnabled pulumi.BoolPtrInput `pulumi:"binaryLogEnabled"`
	// True if backup configuration is enabled.
	Enabled  pulumi.BoolPtrInput   `pulumi:"enabled"`
	Location pulumi.StringPtrInput `pulumi:"location"`
	// `HH:MM` format time indicating when backup
	// configuration starts.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (DatabaseInstanceSettingsBackupConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsBackupConfigurationArgs)(nil)).Elem()
}

func (i DatabaseInstanceSettingsBackupConfigurationArgsArgs) ToDatabaseInstanceSettingsBackupConfigurationArgsOutput() DatabaseInstanceSettingsBackupConfigurationArgsOutput {
	return i.ToDatabaseInstanceSettingsBackupConfigurationArgsOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsBackupConfigurationArgsArgs) ToDatabaseInstanceSettingsBackupConfigurationArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsBackupConfigurationArgsOutput)
}

func (i DatabaseInstanceSettingsBackupConfigurationArgsArgs) ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutput() DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsBackupConfigurationArgsArgs) ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsBackupConfigurationArgsOutput).ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsBackupConfigurationArgsPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutput() DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput
	ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutputWithContext(context.Context) DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput
}

type databaseInstanceSettingsBackupConfigurationArgsPtrType DatabaseInstanceSettingsBackupConfigurationArgsArgs

func DatabaseInstanceSettingsBackupConfigurationArgsPtr(v *DatabaseInstanceSettingsBackupConfigurationArgsArgs) DatabaseInstanceSettingsBackupConfigurationArgsPtrInput {
	return (*databaseInstanceSettingsBackupConfigurationArgsPtrType)(v)
}

func (*databaseInstanceSettingsBackupConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsBackupConfigurationArgs)(nil)).Elem()
}

func (i *databaseInstanceSettingsBackupConfigurationArgsPtrType) ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutput() DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsBackupConfigurationArgsPtrType) ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput)
}

type DatabaseInstanceSettingsBackupConfigurationArgsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsBackupConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsBackupConfigurationArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsBackupConfigurationArgsOutput) ToDatabaseInstanceSettingsBackupConfigurationArgsOutput() DatabaseInstanceSettingsBackupConfigurationArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsBackupConfigurationArgsOutput) ToDatabaseInstanceSettingsBackupConfigurationArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsBackupConfigurationArgsOutput) ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutput() DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return o.ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsBackupConfigurationArgsOutput) ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfigurationArgs) *DatabaseInstanceSettingsBackupConfigurationArgs {
		return &v
	}).(DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput)
}

// True if binary logging is enabled. If
// `settings.backup_configuration.enabled` is false, this must be as well.
// Cannot be used with Postgres.
func (o DatabaseInstanceSettingsBackupConfigurationArgsOutput) BinaryLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfigurationArgs) *bool { return v.BinaryLogEnabled }).(pulumi.BoolPtrOutput)
}

// True if backup configuration is enabled.
func (o DatabaseInstanceSettingsBackupConfigurationArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfigurationArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsBackupConfigurationArgsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfigurationArgs) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// `HH:MM` format time indicating when backup
// configuration starts.
func (o DatabaseInstanceSettingsBackupConfigurationArgsOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfigurationArgs) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsBackupConfigurationArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput) ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutput() DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput) ToDatabaseInstanceSettingsBackupConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput) Elem() DatabaseInstanceSettingsBackupConfigurationArgsOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsBackupConfigurationArgs) DatabaseInstanceSettingsBackupConfigurationArgs {
		return *v
	}).(DatabaseInstanceSettingsBackupConfigurationArgsOutput)
}

// True if binary logging is enabled. If
// `settings.backup_configuration.enabled` is false, this must be as well.
// Cannot be used with Postgres.
func (o DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput) BinaryLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfigurationArgs) *bool { return v.BinaryLogEnabled }).(pulumi.BoolPtrOutput)
}

// True if backup configuration is enabled.
func (o DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfigurationArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfigurationArgs) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// `HH:MM` format time indicating when backup
// configuration starts.
func (o DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsBackupConfigurationArgs) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsDatabaseFlag struct {
	// A name for this whitelist entry.
	Name string `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value string `pulumi:"value"`
}

type DatabaseInstanceSettingsDatabaseFlagInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsDatabaseFlagOutput() DatabaseInstanceSettingsDatabaseFlagOutput
	ToDatabaseInstanceSettingsDatabaseFlagOutputWithContext(context.Context) DatabaseInstanceSettingsDatabaseFlagOutput
}

type DatabaseInstanceSettingsDatabaseFlagArgs struct {
	// A name for this whitelist entry.
	Name pulumi.StringInput `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabaseInstanceSettingsDatabaseFlagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsDatabaseFlag)(nil)).Elem()
}

func (i DatabaseInstanceSettingsDatabaseFlagArgs) ToDatabaseInstanceSettingsDatabaseFlagOutput() DatabaseInstanceSettingsDatabaseFlagOutput {
	return i.ToDatabaseInstanceSettingsDatabaseFlagOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsDatabaseFlagArgs) ToDatabaseInstanceSettingsDatabaseFlagOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsDatabaseFlagOutput)
}

type DatabaseInstanceSettingsDatabaseFlagArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsDatabaseFlagArrayOutput() DatabaseInstanceSettingsDatabaseFlagArrayOutput
	ToDatabaseInstanceSettingsDatabaseFlagArrayOutputWithContext(context.Context) DatabaseInstanceSettingsDatabaseFlagArrayOutput
}

type DatabaseInstanceSettingsDatabaseFlagArray []DatabaseInstanceSettingsDatabaseFlagInput

func (DatabaseInstanceSettingsDatabaseFlagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsDatabaseFlag)(nil)).Elem()
}

func (i DatabaseInstanceSettingsDatabaseFlagArray) ToDatabaseInstanceSettingsDatabaseFlagArrayOutput() DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return i.ToDatabaseInstanceSettingsDatabaseFlagArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsDatabaseFlagArray) ToDatabaseInstanceSettingsDatabaseFlagArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsDatabaseFlagArrayOutput)
}

type DatabaseInstanceSettingsDatabaseFlagOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsDatabaseFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsDatabaseFlag)(nil)).Elem()
}

func (o DatabaseInstanceSettingsDatabaseFlagOutput) ToDatabaseInstanceSettingsDatabaseFlagOutput() DatabaseInstanceSettingsDatabaseFlagOutput {
	return o
}

func (o DatabaseInstanceSettingsDatabaseFlagOutput) ToDatabaseInstanceSettingsDatabaseFlagOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagOutput {
	return o
}

// A name for this whitelist entry.
func (o DatabaseInstanceSettingsDatabaseFlagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsDatabaseFlag) string { return v.Name }).(pulumi.StringOutput)
}

// A CIDR notation IPv4 or IPv6 address that is allowed to
// access this instance. Must be set even if other two attributes are not for
// the whitelist to become active.
func (o DatabaseInstanceSettingsDatabaseFlagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsDatabaseFlag) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseInstanceSettingsDatabaseFlagArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsDatabaseFlagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsDatabaseFlag)(nil)).Elem()
}

func (o DatabaseInstanceSettingsDatabaseFlagArrayOutput) ToDatabaseInstanceSettingsDatabaseFlagArrayOutput() DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsDatabaseFlagArrayOutput) ToDatabaseInstanceSettingsDatabaseFlagArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsDatabaseFlagArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceSettingsDatabaseFlagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceSettingsDatabaseFlag {
		return vs[0].([]DatabaseInstanceSettingsDatabaseFlag)[vs[1].(int)]
	}).(DatabaseInstanceSettingsDatabaseFlagOutput)
}

type DatabaseInstanceSettingsDatabaseFlagArgs struct {
	// A name for this whitelist entry.
	Name string `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value string `pulumi:"value"`
}

type DatabaseInstanceSettingsDatabaseFlagArgsInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsDatabaseFlagArgsOutput() DatabaseInstanceSettingsDatabaseFlagArgsOutput
	ToDatabaseInstanceSettingsDatabaseFlagArgsOutputWithContext(context.Context) DatabaseInstanceSettingsDatabaseFlagArgsOutput
}

type DatabaseInstanceSettingsDatabaseFlagArgsArgs struct {
	// A name for this whitelist entry.
	Name pulumi.StringInput `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabaseInstanceSettingsDatabaseFlagArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsDatabaseFlagArgs)(nil)).Elem()
}

func (i DatabaseInstanceSettingsDatabaseFlagArgsArgs) ToDatabaseInstanceSettingsDatabaseFlagArgsOutput() DatabaseInstanceSettingsDatabaseFlagArgsOutput {
	return i.ToDatabaseInstanceSettingsDatabaseFlagArgsOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsDatabaseFlagArgsArgs) ToDatabaseInstanceSettingsDatabaseFlagArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsDatabaseFlagArgsOutput)
}

type DatabaseInstanceSettingsDatabaseFlagArgsArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsDatabaseFlagArgsArrayOutput() DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput
	ToDatabaseInstanceSettingsDatabaseFlagArgsArrayOutputWithContext(context.Context) DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput
}

type DatabaseInstanceSettingsDatabaseFlagArgsArray []DatabaseInstanceSettingsDatabaseFlagArgsInput

func (DatabaseInstanceSettingsDatabaseFlagArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsDatabaseFlagArgs)(nil)).Elem()
}

func (i DatabaseInstanceSettingsDatabaseFlagArgsArray) ToDatabaseInstanceSettingsDatabaseFlagArgsArrayOutput() DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput {
	return i.ToDatabaseInstanceSettingsDatabaseFlagArgsArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsDatabaseFlagArgsArray) ToDatabaseInstanceSettingsDatabaseFlagArgsArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput)
}

type DatabaseInstanceSettingsDatabaseFlagArgsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsDatabaseFlagArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsDatabaseFlagArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsDatabaseFlagArgsOutput) ToDatabaseInstanceSettingsDatabaseFlagArgsOutput() DatabaseInstanceSettingsDatabaseFlagArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsDatabaseFlagArgsOutput) ToDatabaseInstanceSettingsDatabaseFlagArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagArgsOutput {
	return o
}

// A name for this whitelist entry.
func (o DatabaseInstanceSettingsDatabaseFlagArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsDatabaseFlagArgs) string { return v.Name }).(pulumi.StringOutput)
}

// A CIDR notation IPv4 or IPv6 address that is allowed to
// access this instance. Must be set even if other two attributes are not for
// the whitelist to become active.
func (o DatabaseInstanceSettingsDatabaseFlagArgsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsDatabaseFlagArgs) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsDatabaseFlagArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput) ToDatabaseInstanceSettingsDatabaseFlagArgsArrayOutput() DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput) ToDatabaseInstanceSettingsDatabaseFlagArgsArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceSettingsDatabaseFlagArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceSettingsDatabaseFlagArgs {
		return vs[0].([]DatabaseInstanceSettingsDatabaseFlagArgs)[vs[1].(int)]
	}).(DatabaseInstanceSettingsDatabaseFlagArgsOutput)
}

type DatabaseInstanceSettingsIpConfiguration struct {
	AuthorizedNetworks []DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork `pulumi:"authorizedNetworks"`
	// Whether this Cloud SQL instance should be assigned
	// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
	// `privateNetwork` must be configured.
	Ipv4Enabled bool `pulumi:"ipv4Enabled"`
	// The VPC network from which the Cloud SQL
	// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// Specifying a network enables private IP.
	// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork *string `pulumi:"privateNetwork"`
	// True if mysqld should default to `REQUIRE X509`
	// for users connecting over IP.
	RequireSsl *bool `pulumi:"requireSsl"`
}

type DatabaseInstanceSettingsIpConfigurationInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationOutput() DatabaseInstanceSettingsIpConfigurationOutput
	ToDatabaseInstanceSettingsIpConfigurationOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationOutput
}

type DatabaseInstanceSettingsIpConfigurationArgs struct {
	AuthorizedNetworks DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayInput `pulumi:"authorizedNetworks"`
	// Whether this Cloud SQL instance should be assigned
	// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
	// `privateNetwork` must be configured.
	Ipv4Enabled pulumi.BoolInput `pulumi:"ipv4Enabled"`
	// The VPC network from which the Cloud SQL
	// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// Specifying a network enables private IP.
	// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork pulumi.StringPtrInput `pulumi:"privateNetwork"`
	// True if mysqld should default to `REQUIRE X509`
	// for users connecting over IP.
	RequireSsl pulumi.BoolPtrInput `pulumi:"requireSsl"`
}

func (DatabaseInstanceSettingsIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfiguration)(nil)).Elem()
}

func (i DatabaseInstanceSettingsIpConfigurationArgs) ToDatabaseInstanceSettingsIpConfigurationOutput() DatabaseInstanceSettingsIpConfigurationOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationArgs) ToDatabaseInstanceSettingsIpConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationOutput)
}

type DatabaseInstanceSettingsIpConfigurationOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationOutput) ToDatabaseInstanceSettingsIpConfigurationOutput() DatabaseInstanceSettingsIpConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationOutput) ToDatabaseInstanceSettingsIpConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationOutput) AuthorizedNetworks() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfiguration) []DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork {
		return v.AuthorizedNetworks
	}).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput)
}

// Whether this Cloud SQL instance should be assigned
// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
// `privateNetwork` must be configured.
func (o DatabaseInstanceSettingsIpConfigurationOutput) Ipv4Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfiguration) bool { return v.Ipv4Enabled }).(pulumi.BoolOutput)
}

// The VPC network from which the Cloud SQL
// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
// Specifying a network enables private IP.
// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
// This setting can be updated, but it cannot be removed after it is set.
func (o DatabaseInstanceSettingsIpConfigurationOutput) PrivateNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfiguration) *string { return v.PrivateNetwork }).(pulumi.StringPtrOutput)
}

// True if mysqld should default to `REQUIRE X509`
// for users connecting over IP.
func (o DatabaseInstanceSettingsIpConfigurationOutput) RequireSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfiguration) *bool { return v.RequireSsl }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceSettingsIpConfigurationArgs struct {
	AuthorizedNetworks []DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs `pulumi:"authorizedNetworks"`
	// Whether this Cloud SQL instance should be assigned
	// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
	// `privateNetwork` must be configured.
	Ipv4Enabled *bool `pulumi:"ipv4Enabled"`
	// The VPC network from which the Cloud SQL
	// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// Specifying a network enables private IP.
	// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork *string `pulumi:"privateNetwork"`
	// True if mysqld should default to `REQUIRE X509`
	// for users connecting over IP.
	RequireSsl *bool `pulumi:"requireSsl"`
}

type DatabaseInstanceSettingsIpConfigurationArgsInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationArgsOutput() DatabaseInstanceSettingsIpConfigurationArgsOutput
	ToDatabaseInstanceSettingsIpConfigurationArgsOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationArgsOutput
}

type DatabaseInstanceSettingsIpConfigurationArgsArgs struct {
	AuthorizedNetworks DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayInput `pulumi:"authorizedNetworks"`
	// Whether this Cloud SQL instance should be assigned
	// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
	// `privateNetwork` must be configured.
	Ipv4Enabled pulumi.BoolPtrInput `pulumi:"ipv4Enabled"`
	// The VPC network from which the Cloud SQL
	// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// Specifying a network enables private IP.
	// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork pulumi.StringPtrInput `pulumi:"privateNetwork"`
	// True if mysqld should default to `REQUIRE X509`
	// for users connecting over IP.
	RequireSsl pulumi.BoolPtrInput `pulumi:"requireSsl"`
}

func (DatabaseInstanceSettingsIpConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfigurationArgs)(nil)).Elem()
}

func (i DatabaseInstanceSettingsIpConfigurationArgsArgs) ToDatabaseInstanceSettingsIpConfigurationArgsOutput() DatabaseInstanceSettingsIpConfigurationArgsOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationArgsOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationArgsArgs) ToDatabaseInstanceSettingsIpConfigurationArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationArgsOutput)
}

func (i DatabaseInstanceSettingsIpConfigurationArgsArgs) ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutput() DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationArgsArgs) ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationArgsOutput).ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsIpConfigurationArgsPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutput() DatabaseInstanceSettingsIpConfigurationArgsPtrOutput
	ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationArgsPtrOutput
}

type databaseInstanceSettingsIpConfigurationArgsPtrType DatabaseInstanceSettingsIpConfigurationArgsArgs

func DatabaseInstanceSettingsIpConfigurationArgsPtr(v *DatabaseInstanceSettingsIpConfigurationArgsArgs) DatabaseInstanceSettingsIpConfigurationArgsPtrInput {
	return (*databaseInstanceSettingsIpConfigurationArgsPtrType)(v)
}

func (*databaseInstanceSettingsIpConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsIpConfigurationArgs)(nil)).Elem()
}

func (i *databaseInstanceSettingsIpConfigurationArgsPtrType) ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutput() DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsIpConfigurationArgsPtrType) ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationArgsPtrOutput)
}

type DatabaseInstanceSettingsIpConfigurationArgsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfigurationArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationArgsOutput) ToDatabaseInstanceSettingsIpConfigurationArgsOutput() DatabaseInstanceSettingsIpConfigurationArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationArgsOutput) ToDatabaseInstanceSettingsIpConfigurationArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationArgsOutput) ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutput() DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return o.ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsIpConfigurationArgsOutput) ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationArgs) *DatabaseInstanceSettingsIpConfigurationArgs {
		return &v
	}).(DatabaseInstanceSettingsIpConfigurationArgsPtrOutput)
}
func (o DatabaseInstanceSettingsIpConfigurationArgsOutput) AuthorizedNetworks() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationArgs) []DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs {
		return v.AuthorizedNetworks
	}).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput)
}

// Whether this Cloud SQL instance should be assigned
// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
// `privateNetwork` must be configured.
func (o DatabaseInstanceSettingsIpConfigurationArgsOutput) Ipv4Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationArgs) *bool { return v.Ipv4Enabled }).(pulumi.BoolPtrOutput)
}

// The VPC network from which the Cloud SQL
// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
// Specifying a network enables private IP.
// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
// This setting can be updated, but it cannot be removed after it is set.
func (o DatabaseInstanceSettingsIpConfigurationArgsOutput) PrivateNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationArgs) *string { return v.PrivateNetwork }).(pulumi.StringPtrOutput)
}

// True if mysqld should default to `REQUIRE X509`
// for users connecting over IP.
func (o DatabaseInstanceSettingsIpConfigurationArgsOutput) RequireSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationArgs) *bool { return v.RequireSsl }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceSettingsIpConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsIpConfigurationArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationArgsPtrOutput) ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutput() DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationArgsPtrOutput) ToDatabaseInstanceSettingsIpConfigurationArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationArgsPtrOutput) Elem() DatabaseInstanceSettingsIpConfigurationArgsOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsIpConfigurationArgs) DatabaseInstanceSettingsIpConfigurationArgs {
		return *v
	}).(DatabaseInstanceSettingsIpConfigurationArgsOutput)
}

func (o DatabaseInstanceSettingsIpConfigurationArgsPtrOutput) AuthorizedNetworks() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationArgs) []DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs {
		return v.AuthorizedNetworks
	}).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput)
}

// Whether this Cloud SQL instance should be assigned
// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
// `privateNetwork` must be configured.
func (o DatabaseInstanceSettingsIpConfigurationArgsPtrOutput) Ipv4Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationArgs) *bool { return v.Ipv4Enabled }).(pulumi.BoolPtrOutput)
}

// The VPC network from which the Cloud SQL
// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
// Specifying a network enables private IP.
// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
// This setting can be updated, but it cannot be removed after it is set.
func (o DatabaseInstanceSettingsIpConfigurationArgsPtrOutput) PrivateNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationArgs) *string { return v.PrivateNetwork }).(pulumi.StringPtrOutput)
}

// True if mysqld should default to `REQUIRE X509`
// for users connecting over IP.
func (o DatabaseInstanceSettingsIpConfigurationArgsPtrOutput) RequireSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationArgs) *bool { return v.RequireSsl }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork struct {
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime *string `pulumi:"expirationTime"`
	// A name for this whitelist entry.
	Name *string `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value string `pulumi:"value"`
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput
	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs struct {
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime pulumi.StringPtrInput `pulumi:"expirationTime"`
	// A name for this whitelist entry.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput
	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray []DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkInput

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArray) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return o
}

// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
// formatted date time string indicating when this whitelist expires.
func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

// A name for this whitelist entry.
func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A CIDR notation IPv4 or IPv6 address that is allowed to
// access this instance. Must be set even if other two attributes are not for
// the whitelist to become active.
func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork {
		return vs[0].([]DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork)[vs[1].(int)]
	}).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs struct {
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime *string `pulumi:"expirationTime"`
	// A name for this whitelist entry.
	Name *string `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value string `pulumi:"value"`
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput
	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArgs struct {
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime pulumi.StringPtrInput `pulumi:"expirationTime"`
	// A name for this whitelist entry.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs)(nil)).Elem()
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArgs) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArgs) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput
	ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutputWithContext(context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArray []DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsInput

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs)(nil)).Elem()
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArray) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput {
	return i.ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArray) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput {
	return o
}

// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
// formatted date time string indicating when this whitelist expires.
func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs) *string { return v.ExpirationTime }).(pulumi.StringPtrOutput)
}

// A name for this whitelist entry.
func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A CIDR notation IPv4 or IPv6 address that is allowed to
// access this instance. Must be set even if other two attributes are not for
// the whitelist to become active.
func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput() DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput) ToDatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs {
		return vs[0].([]DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs)[vs[1].(int)]
	}).(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput)
}

type DatabaseInstanceSettingsLocationPreference struct {
	// A GAE application whose zone to remain
	// in. Must be in the same region as this instance.
	FollowGaeApplication *string `pulumi:"followGaeApplication"`
	// The preferred compute engine
	// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
	Zone *string `pulumi:"zone"`
}

type DatabaseInstanceSettingsLocationPreferenceInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsLocationPreferenceOutput() DatabaseInstanceSettingsLocationPreferenceOutput
	ToDatabaseInstanceSettingsLocationPreferenceOutputWithContext(context.Context) DatabaseInstanceSettingsLocationPreferenceOutput
}

type DatabaseInstanceSettingsLocationPreferenceArgs struct {
	// A GAE application whose zone to remain
	// in. Must be in the same region as this instance.
	FollowGaeApplication pulumi.StringPtrInput `pulumi:"followGaeApplication"`
	// The preferred compute engine
	// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DatabaseInstanceSettingsLocationPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsLocationPreference)(nil)).Elem()
}

func (i DatabaseInstanceSettingsLocationPreferenceArgs) ToDatabaseInstanceSettingsLocationPreferenceOutput() DatabaseInstanceSettingsLocationPreferenceOutput {
	return i.ToDatabaseInstanceSettingsLocationPreferenceOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsLocationPreferenceArgs) ToDatabaseInstanceSettingsLocationPreferenceOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsLocationPreferenceOutput)
}

type DatabaseInstanceSettingsLocationPreferenceOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsLocationPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsLocationPreference)(nil)).Elem()
}

func (o DatabaseInstanceSettingsLocationPreferenceOutput) ToDatabaseInstanceSettingsLocationPreferenceOutput() DatabaseInstanceSettingsLocationPreferenceOutput {
	return o
}

func (o DatabaseInstanceSettingsLocationPreferenceOutput) ToDatabaseInstanceSettingsLocationPreferenceOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceOutput {
	return o
}

// A GAE application whose zone to remain
// in. Must be in the same region as this instance.
func (o DatabaseInstanceSettingsLocationPreferenceOutput) FollowGaeApplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreference) *string { return v.FollowGaeApplication }).(pulumi.StringPtrOutput)
}

// The preferred compute engine
// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
func (o DatabaseInstanceSettingsLocationPreferenceOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreference) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsLocationPreferenceArgs struct {
	// A GAE application whose zone to remain
	// in. Must be in the same region as this instance.
	FollowGaeApplication *string `pulumi:"followGaeApplication"`
	// The preferred compute engine
	// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
	Zone *string `pulumi:"zone"`
}

type DatabaseInstanceSettingsLocationPreferenceArgsInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsLocationPreferenceArgsOutput() DatabaseInstanceSettingsLocationPreferenceArgsOutput
	ToDatabaseInstanceSettingsLocationPreferenceArgsOutputWithContext(context.Context) DatabaseInstanceSettingsLocationPreferenceArgsOutput
}

type DatabaseInstanceSettingsLocationPreferenceArgsArgs struct {
	// A GAE application whose zone to remain
	// in. Must be in the same region as this instance.
	FollowGaeApplication pulumi.StringPtrInput `pulumi:"followGaeApplication"`
	// The preferred compute engine
	// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DatabaseInstanceSettingsLocationPreferenceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsLocationPreferenceArgs)(nil)).Elem()
}

func (i DatabaseInstanceSettingsLocationPreferenceArgsArgs) ToDatabaseInstanceSettingsLocationPreferenceArgsOutput() DatabaseInstanceSettingsLocationPreferenceArgsOutput {
	return i.ToDatabaseInstanceSettingsLocationPreferenceArgsOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsLocationPreferenceArgsArgs) ToDatabaseInstanceSettingsLocationPreferenceArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsLocationPreferenceArgsOutput)
}

func (i DatabaseInstanceSettingsLocationPreferenceArgsArgs) ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutput() DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsLocationPreferenceArgsArgs) ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsLocationPreferenceArgsOutput).ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsLocationPreferenceArgsPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutput() DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput
	ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutputWithContext(context.Context) DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput
}

type databaseInstanceSettingsLocationPreferenceArgsPtrType DatabaseInstanceSettingsLocationPreferenceArgsArgs

func DatabaseInstanceSettingsLocationPreferenceArgsPtr(v *DatabaseInstanceSettingsLocationPreferenceArgsArgs) DatabaseInstanceSettingsLocationPreferenceArgsPtrInput {
	return (*databaseInstanceSettingsLocationPreferenceArgsPtrType)(v)
}

func (*databaseInstanceSettingsLocationPreferenceArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsLocationPreferenceArgs)(nil)).Elem()
}

func (i *databaseInstanceSettingsLocationPreferenceArgsPtrType) ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutput() DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsLocationPreferenceArgsPtrType) ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput)
}

type DatabaseInstanceSettingsLocationPreferenceArgsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsLocationPreferenceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsLocationPreferenceArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsLocationPreferenceArgsOutput) ToDatabaseInstanceSettingsLocationPreferenceArgsOutput() DatabaseInstanceSettingsLocationPreferenceArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsLocationPreferenceArgsOutput) ToDatabaseInstanceSettingsLocationPreferenceArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsLocationPreferenceArgsOutput) ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutput() DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return o.ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsLocationPreferenceArgsOutput) ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreferenceArgs) *DatabaseInstanceSettingsLocationPreferenceArgs {
		return &v
	}).(DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput)
}

// A GAE application whose zone to remain
// in. Must be in the same region as this instance.
func (o DatabaseInstanceSettingsLocationPreferenceArgsOutput) FollowGaeApplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreferenceArgs) *string { return v.FollowGaeApplication }).(pulumi.StringPtrOutput)
}

// The preferred compute engine
// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
func (o DatabaseInstanceSettingsLocationPreferenceArgsOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreferenceArgs) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsLocationPreferenceArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput) ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutput() DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput) ToDatabaseInstanceSettingsLocationPreferenceArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput) Elem() DatabaseInstanceSettingsLocationPreferenceArgsOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsLocationPreferenceArgs) DatabaseInstanceSettingsLocationPreferenceArgs {
		return *v
	}).(DatabaseInstanceSettingsLocationPreferenceArgsOutput)
}

// A GAE application whose zone to remain
// in. Must be in the same region as this instance.
func (o DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput) FollowGaeApplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreferenceArgs) *string { return v.FollowGaeApplication }).(pulumi.StringPtrOutput)
}

// The preferred compute engine
// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
func (o DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsLocationPreferenceArgs) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsMaintenanceWindow struct {
	// Day of week (`1-7`), starting on Monday
	Day *int `pulumi:"day"`
	// Hour of day (`0-23`), ignored if `day` not set
	Hour *int `pulumi:"hour"`
	// Receive updates earlier (`canary`) or later
	// (`stable`)
	UpdateTrack *string `pulumi:"updateTrack"`
}

type DatabaseInstanceSettingsMaintenanceWindowInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsMaintenanceWindowOutput() DatabaseInstanceSettingsMaintenanceWindowOutput
	ToDatabaseInstanceSettingsMaintenanceWindowOutputWithContext(context.Context) DatabaseInstanceSettingsMaintenanceWindowOutput
}

type DatabaseInstanceSettingsMaintenanceWindowArgs struct {
	// Day of week (`1-7`), starting on Monday
	Day pulumi.IntPtrInput `pulumi:"day"`
	// Hour of day (`0-23`), ignored if `day` not set
	Hour pulumi.IntPtrInput `pulumi:"hour"`
	// Receive updates earlier (`canary`) or later
	// (`stable`)
	UpdateTrack pulumi.StringPtrInput `pulumi:"updateTrack"`
}

func (DatabaseInstanceSettingsMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsMaintenanceWindow)(nil)).Elem()
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgs) ToDatabaseInstanceSettingsMaintenanceWindowOutput() DatabaseInstanceSettingsMaintenanceWindowOutput {
	return i.ToDatabaseInstanceSettingsMaintenanceWindowOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgs) ToDatabaseInstanceSettingsMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsMaintenanceWindowOutput)
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgs) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return i.ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgs) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsMaintenanceWindowOutput).ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput
	ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput
}

type databaseInstanceSettingsMaintenanceWindowPtrType DatabaseInstanceSettingsMaintenanceWindowArgs

func DatabaseInstanceSettingsMaintenanceWindowPtr(v *DatabaseInstanceSettingsMaintenanceWindowArgs) DatabaseInstanceSettingsMaintenanceWindowPtrInput {
	return (*databaseInstanceSettingsMaintenanceWindowPtrType)(v)
}

func (*databaseInstanceSettingsMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsMaintenanceWindow)(nil)).Elem()
}

func (i *databaseInstanceSettingsMaintenanceWindowPtrType) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return i.ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsMaintenanceWindowPtrType) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsMaintenanceWindowPtrOutput)
}

type DatabaseInstanceSettingsMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseInstanceSettingsMaintenanceWindowOutput) ToDatabaseInstanceSettingsMaintenanceWindowOutput() DatabaseInstanceSettingsMaintenanceWindowOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowOutput) ToDatabaseInstanceSettingsMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowOutput) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o.ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsMaintenanceWindowOutput) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *DatabaseInstanceSettingsMaintenanceWindow {
		return &v
	}).(DatabaseInstanceSettingsMaintenanceWindowPtrOutput)
}

// Day of week (`1-7`), starting on Monday
func (o DatabaseInstanceSettingsMaintenanceWindowOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Hour of day (`0-23`), ignored if `day` not set
func (o DatabaseInstanceSettingsMaintenanceWindowOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *int { return v.Hour }).(pulumi.IntPtrOutput)
}

// Receive updates earlier (`canary`) or later
// (`stable`)
func (o DatabaseInstanceSettingsMaintenanceWindowOutput) UpdateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *string { return v.UpdateTrack }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutput() DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) ToDatabaseInstanceSettingsMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) Elem() DatabaseInstanceSettingsMaintenanceWindowOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsMaintenanceWindow) DatabaseInstanceSettingsMaintenanceWindow {
		return *v
	}).(DatabaseInstanceSettingsMaintenanceWindowOutput)
}

// Day of week (`1-7`), starting on Monday
func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Hour of day (`0-23`), ignored if `day` not set
func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *int { return v.Hour }).(pulumi.IntPtrOutput)
}

// Receive updates earlier (`canary`) or later
// (`stable`)
func (o DatabaseInstanceSettingsMaintenanceWindowPtrOutput) UpdateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindow) *string { return v.UpdateTrack }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsMaintenanceWindowArgs struct {
	// Day of week (`1-7`), starting on Monday
	Day *int `pulumi:"day"`
	// Hour of day (`0-23`), ignored if `day` not set
	Hour *int `pulumi:"hour"`
	// Receive updates earlier (`canary`) or later
	// (`stable`)
	UpdateTrack *string `pulumi:"updateTrack"`
}

type DatabaseInstanceSettingsMaintenanceWindowArgsInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsMaintenanceWindowArgsOutput() DatabaseInstanceSettingsMaintenanceWindowArgsOutput
	ToDatabaseInstanceSettingsMaintenanceWindowArgsOutputWithContext(context.Context) DatabaseInstanceSettingsMaintenanceWindowArgsOutput
}

type DatabaseInstanceSettingsMaintenanceWindowArgsArgs struct {
	// Day of week (`1-7`), starting on Monday
	Day pulumi.IntPtrInput `pulumi:"day"`
	// Hour of day (`0-23`), ignored if `day` not set
	Hour pulumi.IntPtrInput `pulumi:"hour"`
	// Receive updates earlier (`canary`) or later
	// (`stable`)
	UpdateTrack pulumi.StringPtrInput `pulumi:"updateTrack"`
}

func (DatabaseInstanceSettingsMaintenanceWindowArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsMaintenanceWindowArgs)(nil)).Elem()
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgsArgs) ToDatabaseInstanceSettingsMaintenanceWindowArgsOutput() DatabaseInstanceSettingsMaintenanceWindowArgsOutput {
	return i.ToDatabaseInstanceSettingsMaintenanceWindowArgsOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgsArgs) ToDatabaseInstanceSettingsMaintenanceWindowArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsMaintenanceWindowArgsOutput)
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgsArgs) ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput() DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsMaintenanceWindowArgsArgs) ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsMaintenanceWindowArgsOutput).ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsMaintenanceWindowArgsPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput() DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput
	ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutputWithContext(context.Context) DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput
}

type databaseInstanceSettingsMaintenanceWindowArgsPtrType DatabaseInstanceSettingsMaintenanceWindowArgsArgs

func DatabaseInstanceSettingsMaintenanceWindowArgsPtr(v *DatabaseInstanceSettingsMaintenanceWindowArgsArgs) DatabaseInstanceSettingsMaintenanceWindowArgsPtrInput {
	return (*databaseInstanceSettingsMaintenanceWindowArgsPtrType)(v)
}

func (*databaseInstanceSettingsMaintenanceWindowArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsMaintenanceWindowArgs)(nil)).Elem()
}

func (i *databaseInstanceSettingsMaintenanceWindowArgsPtrType) ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput() DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return i.ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsMaintenanceWindowArgsPtrType) ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput)
}

type DatabaseInstanceSettingsMaintenanceWindowArgsOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsMaintenanceWindowArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsMaintenanceWindowArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsMaintenanceWindowArgsOutput) ToDatabaseInstanceSettingsMaintenanceWindowArgsOutput() DatabaseInstanceSettingsMaintenanceWindowArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowArgsOutput) ToDatabaseInstanceSettingsMaintenanceWindowArgsOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowArgsOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowArgsOutput) ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput() DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return o.ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsMaintenanceWindowArgsOutput) ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindowArgs) *DatabaseInstanceSettingsMaintenanceWindowArgs {
		return &v
	}).(DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput)
}

// Day of week (`1-7`), starting on Monday
func (o DatabaseInstanceSettingsMaintenanceWindowArgsOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindowArgs) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Hour of day (`0-23`), ignored if `day` not set
func (o DatabaseInstanceSettingsMaintenanceWindowArgsOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindowArgs) *int { return v.Hour }).(pulumi.IntPtrOutput)
}

// Receive updates earlier (`canary`) or later
// (`stable`)
func (o DatabaseInstanceSettingsMaintenanceWindowArgsOutput) UpdateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindowArgs) *string { return v.UpdateTrack }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsMaintenanceWindowArgs)(nil)).Elem()
}

func (o DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput) ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput() DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput) ToDatabaseInstanceSettingsMaintenanceWindowArgsPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput) Elem() DatabaseInstanceSettingsMaintenanceWindowArgsOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsMaintenanceWindowArgs) DatabaseInstanceSettingsMaintenanceWindowArgs {
		return *v
	}).(DatabaseInstanceSettingsMaintenanceWindowArgsOutput)
}

// Day of week (`1-7`), starting on Monday
func (o DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindowArgs) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Hour of day (`0-23`), ignored if `day` not set
func (o DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindowArgs) *int { return v.Hour }).(pulumi.IntPtrOutput)
}

// Receive updates earlier (`canary`) or later
// (`stable`)
func (o DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput) UpdateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsMaintenanceWindowArgs) *string { return v.UpdateTrack }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsState struct {
	// This specifies when the instance should be
	// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
	ActivationPolicy *string `pulumi:"activationPolicy"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// A list of Google App Engine (GAE) project names that are allowed to access this instance.
	AuthorizedGaeApplications []string `pulumi:"authorizedGaeApplications"`
	// This specifies whether a PostgreSQL instance
	// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
	AvailabilityType    *string                                           `pulumi:"availabilityType"`
	BackupConfiguration *DatabaseInstanceSettingsStateBackupConfiguration `pulumi:"backupConfiguration"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Specific to read instances, indicates
	// when crash-safe replication flags are enabled.
	CrashSafeReplication *bool                                       `pulumi:"crashSafeReplication"`
	DatabaseFlags        []DatabaseInstanceSettingsStateDatabaseFlag `pulumi:"databaseFlags"`
	// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
	DiskAutoresize *bool `pulumi:"diskAutoresize"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
	DiskSize *int `pulumi:"diskSize"`
	// The type of data disk: PD_SSD or PD_HDD.
	DiskType           *string                                          `pulumi:"diskType"`
	IpConfiguration    *DatabaseInstanceSettingsStateIpConfiguration    `pulumi:"ipConfiguration"`
	LocationPreference *DatabaseInstanceSettingsStateLocationPreference `pulumi:"locationPreference"`
	MaintenanceWindow  *DatabaseInstanceSettingsStateMaintenanceWindow  `pulumi:"maintenanceWindow"`
	// Pricing plan for this instance, can only be `PER_USE`.
	PricingPlan *string `pulumi:"pricingPlan"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
	ReplicationType *string `pulumi:"replicationType"`
	// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
	// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
	// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier string `pulumi:"tier"`
	// A set of key/value user label pairs to assign to the instance.
	UserLabels map[string]string `pulumi:"userLabels"`
	Version    *int              `pulumi:"version"`
}

type DatabaseInstanceSettingsStateInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateOutput() DatabaseInstanceSettingsStateOutput
	ToDatabaseInstanceSettingsStateOutputWithContext(context.Context) DatabaseInstanceSettingsStateOutput
}

type DatabaseInstanceSettingsStateArgs struct {
	// This specifies when the instance should be
	// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
	ActivationPolicy pulumi.StringPtrInput `pulumi:"activationPolicy"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// A list of Google App Engine (GAE) project names that are allowed to access this instance.
	AuthorizedGaeApplications pulumi.StringArrayInput `pulumi:"authorizedGaeApplications"`
	// This specifies whether a PostgreSQL instance
	// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
	AvailabilityType    pulumi.StringPtrInput                                    `pulumi:"availabilityType"`
	BackupConfiguration DatabaseInstanceSettingsStateBackupConfigurationPtrInput `pulumi:"backupConfiguration"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Specific to read instances, indicates
	// when crash-safe replication flags are enabled.
	CrashSafeReplication pulumi.BoolPtrInput                                 `pulumi:"crashSafeReplication"`
	DatabaseFlags        DatabaseInstanceSettingsStateDatabaseFlagArrayInput `pulumi:"databaseFlags"`
	// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
	DiskAutoresize pulumi.BoolPtrInput `pulumi:"diskAutoresize"`
	// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
	DiskSize pulumi.IntPtrInput `pulumi:"diskSize"`
	// The type of data disk: PD_SSD or PD_HDD.
	DiskType           pulumi.StringPtrInput                                   `pulumi:"diskType"`
	IpConfiguration    DatabaseInstanceSettingsStateIpConfigurationPtrInput    `pulumi:"ipConfiguration"`
	LocationPreference DatabaseInstanceSettingsStateLocationPreferencePtrInput `pulumi:"locationPreference"`
	MaintenanceWindow  DatabaseInstanceSettingsStateMaintenanceWindowPtrInput  `pulumi:"maintenanceWindow"`
	// Pricing plan for this instance, can only be `PER_USE`.
	PricingPlan pulumi.StringPtrInput `pulumi:"pricingPlan"`
	// This property is only applicable to First Generation instances.
	// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
	// for information on how to upgrade to Second Generation instances.
	// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
	ReplicationType pulumi.StringPtrInput `pulumi:"replicationType"`
	// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
	// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
	// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
	Tier pulumi.StringInput `pulumi:"tier"`
	// A set of key/value user label pairs to assign to the instance.
	UserLabels pulumi.StringMapInput `pulumi:"userLabels"`
	Version    pulumi.IntPtrInput    `pulumi:"version"`
}

func (DatabaseInstanceSettingsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsState)(nil)).Elem()
}

func (i DatabaseInstanceSettingsStateArgs) ToDatabaseInstanceSettingsStateOutput() DatabaseInstanceSettingsStateOutput {
	return i.ToDatabaseInstanceSettingsStateOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateArgs) ToDatabaseInstanceSettingsStateOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateOutput)
}

type DatabaseInstanceSettingsStateOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsState)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateOutput) ToDatabaseInstanceSettingsStateOutput() DatabaseInstanceSettingsStateOutput {
	return o
}

func (o DatabaseInstanceSettingsStateOutput) ToDatabaseInstanceSettingsStateOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateOutput {
	return o
}

// This specifies when the instance should be
// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
func (o DatabaseInstanceSettingsStateOutput) ActivationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *string { return v.ActivationPolicy }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// A list of Google App Engine (GAE) project names that are allowed to access this instance.
func (o DatabaseInstanceSettingsStateOutput) AuthorizedGaeApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) []string { return v.AuthorizedGaeApplications }).(pulumi.StringArrayOutput)
}

// This specifies whether a PostgreSQL instance
// should be set up for high availability (`REGIONAL`) or single zone (`ZONAL`).
func (o DatabaseInstanceSettingsStateOutput) AvailabilityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *string { return v.AvailabilityType }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsStateOutput) BackupConfiguration() DatabaseInstanceSettingsStateBackupConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *DatabaseInstanceSettingsStateBackupConfiguration {
		return v.BackupConfiguration
	}).(DatabaseInstanceSettingsStateBackupConfigurationPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Specific to read instances, indicates
// when crash-safe replication flags are enabled.
func (o DatabaseInstanceSettingsStateOutput) CrashSafeReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *bool { return v.CrashSafeReplication }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsStateOutput) DatabaseFlags() DatabaseInstanceSettingsStateDatabaseFlagArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) []DatabaseInstanceSettingsStateDatabaseFlag {
		return v.DatabaseFlags
	}).(DatabaseInstanceSettingsStateDatabaseFlagArrayOutput)
}

// Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `diskSize` - if this is set, do not set `diskSize`.
func (o DatabaseInstanceSettingsStateOutput) DiskAutoresize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *bool { return v.DiskAutoresize }).(pulumi.BoolPtrOutput)
}

// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
func (o DatabaseInstanceSettingsStateOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

// The type of data disk: PD_SSD or PD_HDD.
func (o DatabaseInstanceSettingsStateOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstanceSettingsStateOutput) IpConfiguration() DatabaseInstanceSettingsStateIpConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *DatabaseInstanceSettingsStateIpConfiguration {
		return v.IpConfiguration
	}).(DatabaseInstanceSettingsStateIpConfigurationPtrOutput)
}

func (o DatabaseInstanceSettingsStateOutput) LocationPreference() DatabaseInstanceSettingsStateLocationPreferencePtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *DatabaseInstanceSettingsStateLocationPreference {
		return v.LocationPreference
	}).(DatabaseInstanceSettingsStateLocationPreferencePtrOutput)
}

func (o DatabaseInstanceSettingsStateOutput) MaintenanceWindow() DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *DatabaseInstanceSettingsStateMaintenanceWindow {
		return v.MaintenanceWindow
	}).(DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput)
}

// Pricing plan for this instance, can only be `PER_USE`.
func (o DatabaseInstanceSettingsStateOutput) PricingPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *string { return v.PricingPlan }).(pulumi.StringPtrOutput)
}

// This property is only applicable to First Generation instances.
// First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
// for information on how to upgrade to Second Generation instances.
// Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
func (o DatabaseInstanceSettingsStateOutput) ReplicationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *string { return v.ReplicationType }).(pulumi.StringPtrOutput)
}

// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
// for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
func (o DatabaseInstanceSettingsStateOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) string { return v.Tier }).(pulumi.StringOutput)
}

// A set of key/value user label pairs to assign to the instance.
func (o DatabaseInstanceSettingsStateOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) map[string]string { return v.UserLabels }).(pulumi.StringMapOutput)
}

func (o DatabaseInstanceSettingsStateOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsState) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type DatabaseInstanceSettingsStateBackupConfiguration struct {
	// True if binary logging is enabled. If
	// `settings.backup_configuration.enabled` is false, this must be as well.
	// Cannot be used with Postgres.
	BinaryLogEnabled *bool `pulumi:"binaryLogEnabled"`
	// True if backup configuration is enabled.
	Enabled  *bool   `pulumi:"enabled"`
	Location *string `pulumi:"location"`
	// `HH:MM` format time indicating when backup
	// configuration starts.
	StartTime *string `pulumi:"startTime"`
}

type DatabaseInstanceSettingsStateBackupConfigurationInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateBackupConfigurationOutput() DatabaseInstanceSettingsStateBackupConfigurationOutput
	ToDatabaseInstanceSettingsStateBackupConfigurationOutputWithContext(context.Context) DatabaseInstanceSettingsStateBackupConfigurationOutput
}

type DatabaseInstanceSettingsStateBackupConfigurationArgs struct {
	// True if binary logging is enabled. If
	// `settings.backup_configuration.enabled` is false, this must be as well.
	// Cannot be used with Postgres.
	BinaryLogEnabled pulumi.BoolPtrInput `pulumi:"binaryLogEnabled"`
	// True if backup configuration is enabled.
	Enabled  pulumi.BoolPtrInput   `pulumi:"enabled"`
	Location pulumi.StringPtrInput `pulumi:"location"`
	// `HH:MM` format time indicating when backup
	// configuration starts.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (DatabaseInstanceSettingsStateBackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateBackupConfiguration)(nil)).Elem()
}

func (i DatabaseInstanceSettingsStateBackupConfigurationArgs) ToDatabaseInstanceSettingsStateBackupConfigurationOutput() DatabaseInstanceSettingsStateBackupConfigurationOutput {
	return i.ToDatabaseInstanceSettingsStateBackupConfigurationOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateBackupConfigurationArgs) ToDatabaseInstanceSettingsStateBackupConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateBackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateBackupConfigurationOutput)
}

func (i DatabaseInstanceSettingsStateBackupConfigurationArgs) ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutput() DatabaseInstanceSettingsStateBackupConfigurationPtrOutput {
	return i.ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateBackupConfigurationArgs) ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateBackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateBackupConfigurationOutput).ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsStateBackupConfigurationPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutput() DatabaseInstanceSettingsStateBackupConfigurationPtrOutput
	ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutputWithContext(context.Context) DatabaseInstanceSettingsStateBackupConfigurationPtrOutput
}

type databaseInstanceSettingsStateBackupConfigurationPtrType DatabaseInstanceSettingsStateBackupConfigurationArgs

func DatabaseInstanceSettingsStateBackupConfigurationPtr(v *DatabaseInstanceSettingsStateBackupConfigurationArgs) DatabaseInstanceSettingsStateBackupConfigurationPtrInput {
	return (*databaseInstanceSettingsStateBackupConfigurationPtrType)(v)
}

func (*databaseInstanceSettingsStateBackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsStateBackupConfiguration)(nil)).Elem()
}

func (i *databaseInstanceSettingsStateBackupConfigurationPtrType) ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutput() DatabaseInstanceSettingsStateBackupConfigurationPtrOutput {
	return i.ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsStateBackupConfigurationPtrType) ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateBackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateBackupConfigurationPtrOutput)
}

type DatabaseInstanceSettingsStateBackupConfigurationOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateBackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateBackupConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateBackupConfigurationOutput) ToDatabaseInstanceSettingsStateBackupConfigurationOutput() DatabaseInstanceSettingsStateBackupConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsStateBackupConfigurationOutput) ToDatabaseInstanceSettingsStateBackupConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateBackupConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsStateBackupConfigurationOutput) ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutput() DatabaseInstanceSettingsStateBackupConfigurationPtrOutput {
	return o.ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsStateBackupConfigurationOutput) ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateBackupConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateBackupConfiguration) *DatabaseInstanceSettingsStateBackupConfiguration {
		return &v
	}).(DatabaseInstanceSettingsStateBackupConfigurationPtrOutput)
}

// True if binary logging is enabled. If
// `settings.backup_configuration.enabled` is false, this must be as well.
// Cannot be used with Postgres.
func (o DatabaseInstanceSettingsStateBackupConfigurationOutput) BinaryLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateBackupConfiguration) *bool { return v.BinaryLogEnabled }).(pulumi.BoolPtrOutput)
}

// True if backup configuration is enabled.
func (o DatabaseInstanceSettingsStateBackupConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateBackupConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsStateBackupConfigurationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateBackupConfiguration) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// `HH:MM` format time indicating when backup
// configuration starts.
func (o DatabaseInstanceSettingsStateBackupConfigurationOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateBackupConfiguration) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsStateBackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateBackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsStateBackupConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateBackupConfigurationPtrOutput) ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutput() DatabaseInstanceSettingsStateBackupConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsStateBackupConfigurationPtrOutput) ToDatabaseInstanceSettingsStateBackupConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateBackupConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsStateBackupConfigurationPtrOutput) Elem() DatabaseInstanceSettingsStateBackupConfigurationOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsStateBackupConfiguration) DatabaseInstanceSettingsStateBackupConfiguration {
		return *v
	}).(DatabaseInstanceSettingsStateBackupConfigurationOutput)
}

// True if binary logging is enabled. If
// `settings.backup_configuration.enabled` is false, this must be as well.
// Cannot be used with Postgres.
func (o DatabaseInstanceSettingsStateBackupConfigurationPtrOutput) BinaryLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateBackupConfiguration) *bool { return v.BinaryLogEnabled }).(pulumi.BoolPtrOutput)
}

// True if backup configuration is enabled.
func (o DatabaseInstanceSettingsStateBackupConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateBackupConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DatabaseInstanceSettingsStateBackupConfigurationPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateBackupConfiguration) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// `HH:MM` format time indicating when backup
// configuration starts.
func (o DatabaseInstanceSettingsStateBackupConfigurationPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateBackupConfiguration) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsStateDatabaseFlag struct {
	// A name for this whitelist entry.
	Name string `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value string `pulumi:"value"`
}

type DatabaseInstanceSettingsStateDatabaseFlagInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateDatabaseFlagOutput() DatabaseInstanceSettingsStateDatabaseFlagOutput
	ToDatabaseInstanceSettingsStateDatabaseFlagOutputWithContext(context.Context) DatabaseInstanceSettingsStateDatabaseFlagOutput
}

type DatabaseInstanceSettingsStateDatabaseFlagArgs struct {
	// A name for this whitelist entry.
	Name pulumi.StringInput `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabaseInstanceSettingsStateDatabaseFlagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateDatabaseFlag)(nil)).Elem()
}

func (i DatabaseInstanceSettingsStateDatabaseFlagArgs) ToDatabaseInstanceSettingsStateDatabaseFlagOutput() DatabaseInstanceSettingsStateDatabaseFlagOutput {
	return i.ToDatabaseInstanceSettingsStateDatabaseFlagOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateDatabaseFlagArgs) ToDatabaseInstanceSettingsStateDatabaseFlagOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateDatabaseFlagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateDatabaseFlagOutput)
}

type DatabaseInstanceSettingsStateDatabaseFlagArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateDatabaseFlagArrayOutput() DatabaseInstanceSettingsStateDatabaseFlagArrayOutput
	ToDatabaseInstanceSettingsStateDatabaseFlagArrayOutputWithContext(context.Context) DatabaseInstanceSettingsStateDatabaseFlagArrayOutput
}

type DatabaseInstanceSettingsStateDatabaseFlagArray []DatabaseInstanceSettingsStateDatabaseFlagInput

func (DatabaseInstanceSettingsStateDatabaseFlagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsStateDatabaseFlag)(nil)).Elem()
}

func (i DatabaseInstanceSettingsStateDatabaseFlagArray) ToDatabaseInstanceSettingsStateDatabaseFlagArrayOutput() DatabaseInstanceSettingsStateDatabaseFlagArrayOutput {
	return i.ToDatabaseInstanceSettingsStateDatabaseFlagArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateDatabaseFlagArray) ToDatabaseInstanceSettingsStateDatabaseFlagArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateDatabaseFlagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateDatabaseFlagArrayOutput)
}

type DatabaseInstanceSettingsStateDatabaseFlagOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateDatabaseFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateDatabaseFlag)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateDatabaseFlagOutput) ToDatabaseInstanceSettingsStateDatabaseFlagOutput() DatabaseInstanceSettingsStateDatabaseFlagOutput {
	return o
}

func (o DatabaseInstanceSettingsStateDatabaseFlagOutput) ToDatabaseInstanceSettingsStateDatabaseFlagOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateDatabaseFlagOutput {
	return o
}

// A name for this whitelist entry.
func (o DatabaseInstanceSettingsStateDatabaseFlagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateDatabaseFlag) string { return v.Name }).(pulumi.StringOutput)
}

// A CIDR notation IPv4 or IPv6 address that is allowed to
// access this instance. Must be set even if other two attributes are not for
// the whitelist to become active.
func (o DatabaseInstanceSettingsStateDatabaseFlagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateDatabaseFlag) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseInstanceSettingsStateDatabaseFlagArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateDatabaseFlagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsStateDatabaseFlag)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateDatabaseFlagArrayOutput) ToDatabaseInstanceSettingsStateDatabaseFlagArrayOutput() DatabaseInstanceSettingsStateDatabaseFlagArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsStateDatabaseFlagArrayOutput) ToDatabaseInstanceSettingsStateDatabaseFlagArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateDatabaseFlagArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsStateDatabaseFlagArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceSettingsStateDatabaseFlagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceSettingsStateDatabaseFlag {
		return vs[0].([]DatabaseInstanceSettingsStateDatabaseFlag)[vs[1].(int)]
	}).(DatabaseInstanceSettingsStateDatabaseFlagOutput)
}

type DatabaseInstanceSettingsStateIpConfiguration struct {
	AuthorizedNetworks []DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork `pulumi:"authorizedNetworks"`
	// Whether this Cloud SQL instance should be assigned
	// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
	// `privateNetwork` must be configured.
	Ipv4Enabled *bool `pulumi:"ipv4Enabled"`
	// The VPC network from which the Cloud SQL
	// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// Specifying a network enables private IP.
	// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork *string `pulumi:"privateNetwork"`
	// True if mysqld should default to `REQUIRE X509`
	// for users connecting over IP.
	RequireSsl *bool `pulumi:"requireSsl"`
}

type DatabaseInstanceSettingsStateIpConfigurationInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateIpConfigurationOutput() DatabaseInstanceSettingsStateIpConfigurationOutput
	ToDatabaseInstanceSettingsStateIpConfigurationOutputWithContext(context.Context) DatabaseInstanceSettingsStateIpConfigurationOutput
}

type DatabaseInstanceSettingsStateIpConfigurationArgs struct {
	AuthorizedNetworks DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayInput `pulumi:"authorizedNetworks"`
	// Whether this Cloud SQL instance should be assigned
	// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
	// `privateNetwork` must be configured.
	Ipv4Enabled pulumi.BoolPtrInput `pulumi:"ipv4Enabled"`
	// The VPC network from which the Cloud SQL
	// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
	// Specifying a network enables private IP.
	// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
	// This setting can be updated, but it cannot be removed after it is set.
	PrivateNetwork pulumi.StringPtrInput `pulumi:"privateNetwork"`
	// True if mysqld should default to `REQUIRE X509`
	// for users connecting over IP.
	RequireSsl pulumi.BoolPtrInput `pulumi:"requireSsl"`
}

func (DatabaseInstanceSettingsStateIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateIpConfiguration)(nil)).Elem()
}

func (i DatabaseInstanceSettingsStateIpConfigurationArgs) ToDatabaseInstanceSettingsStateIpConfigurationOutput() DatabaseInstanceSettingsStateIpConfigurationOutput {
	return i.ToDatabaseInstanceSettingsStateIpConfigurationOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateIpConfigurationArgs) ToDatabaseInstanceSettingsStateIpConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateIpConfigurationOutput)
}

func (i DatabaseInstanceSettingsStateIpConfigurationArgs) ToDatabaseInstanceSettingsStateIpConfigurationPtrOutput() DatabaseInstanceSettingsStateIpConfigurationPtrOutput {
	return i.ToDatabaseInstanceSettingsStateIpConfigurationPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateIpConfigurationArgs) ToDatabaseInstanceSettingsStateIpConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateIpConfigurationOutput).ToDatabaseInstanceSettingsStateIpConfigurationPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsStateIpConfigurationPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateIpConfigurationPtrOutput() DatabaseInstanceSettingsStateIpConfigurationPtrOutput
	ToDatabaseInstanceSettingsStateIpConfigurationPtrOutputWithContext(context.Context) DatabaseInstanceSettingsStateIpConfigurationPtrOutput
}

type databaseInstanceSettingsStateIpConfigurationPtrType DatabaseInstanceSettingsStateIpConfigurationArgs

func DatabaseInstanceSettingsStateIpConfigurationPtr(v *DatabaseInstanceSettingsStateIpConfigurationArgs) DatabaseInstanceSettingsStateIpConfigurationPtrInput {
	return (*databaseInstanceSettingsStateIpConfigurationPtrType)(v)
}

func (*databaseInstanceSettingsStateIpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsStateIpConfiguration)(nil)).Elem()
}

func (i *databaseInstanceSettingsStateIpConfigurationPtrType) ToDatabaseInstanceSettingsStateIpConfigurationPtrOutput() DatabaseInstanceSettingsStateIpConfigurationPtrOutput {
	return i.ToDatabaseInstanceSettingsStateIpConfigurationPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsStateIpConfigurationPtrType) ToDatabaseInstanceSettingsStateIpConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateIpConfigurationPtrOutput)
}

type DatabaseInstanceSettingsStateIpConfigurationOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateIpConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateIpConfigurationOutput) ToDatabaseInstanceSettingsStateIpConfigurationOutput() DatabaseInstanceSettingsStateIpConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsStateIpConfigurationOutput) ToDatabaseInstanceSettingsStateIpConfigurationOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationOutput {
	return o
}

func (o DatabaseInstanceSettingsStateIpConfigurationOutput) ToDatabaseInstanceSettingsStateIpConfigurationPtrOutput() DatabaseInstanceSettingsStateIpConfigurationPtrOutput {
	return o.ToDatabaseInstanceSettingsStateIpConfigurationPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsStateIpConfigurationOutput) ToDatabaseInstanceSettingsStateIpConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfiguration) *DatabaseInstanceSettingsStateIpConfiguration {
		return &v
	}).(DatabaseInstanceSettingsStateIpConfigurationPtrOutput)
}
func (o DatabaseInstanceSettingsStateIpConfigurationOutput) AuthorizedNetworks() DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfiguration) []DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork {
		return v.AuthorizedNetworks
	}).(DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput)
}

// Whether this Cloud SQL instance should be assigned
// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
// `privateNetwork` must be configured.
func (o DatabaseInstanceSettingsStateIpConfigurationOutput) Ipv4Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfiguration) *bool { return v.Ipv4Enabled }).(pulumi.BoolPtrOutput)
}

// The VPC network from which the Cloud SQL
// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
// Specifying a network enables private IP.
// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
// This setting can be updated, but it cannot be removed after it is set.
func (o DatabaseInstanceSettingsStateIpConfigurationOutput) PrivateNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfiguration) *string { return v.PrivateNetwork }).(pulumi.StringPtrOutput)
}

// True if mysqld should default to `REQUIRE X509`
// for users connecting over IP.
func (o DatabaseInstanceSettingsStateIpConfigurationOutput) RequireSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfiguration) *bool { return v.RequireSsl }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceSettingsStateIpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateIpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsStateIpConfiguration)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateIpConfigurationPtrOutput) ToDatabaseInstanceSettingsStateIpConfigurationPtrOutput() DatabaseInstanceSettingsStateIpConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsStateIpConfigurationPtrOutput) ToDatabaseInstanceSettingsStateIpConfigurationPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsStateIpConfigurationPtrOutput) Elem() DatabaseInstanceSettingsStateIpConfigurationOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsStateIpConfiguration) DatabaseInstanceSettingsStateIpConfiguration {
		return *v
	}).(DatabaseInstanceSettingsStateIpConfigurationOutput)
}

func (o DatabaseInstanceSettingsStateIpConfigurationPtrOutput) AuthorizedNetworks() DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfiguration) []DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork {
		return v.AuthorizedNetworks
	}).(DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput)
}

// Whether this Cloud SQL instance should be assigned
// a public IPV4 address. Either `ipv4Enabled` must be enabled or a
// `privateNetwork` must be configured.
func (o DatabaseInstanceSettingsStateIpConfigurationPtrOutput) Ipv4Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfiguration) *bool { return v.Ipv4Enabled }).(pulumi.BoolPtrOutput)
}

// The VPC network from which the Cloud SQL
// instance is accessible for private IP. For example, projects/myProject/global/networks/default.
// Specifying a network enables private IP.
// Either `ipv4Enabled` must be enabled or a `privateNetwork` must be configured.
// This setting can be updated, but it cannot be removed after it is set.
func (o DatabaseInstanceSettingsStateIpConfigurationPtrOutput) PrivateNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfiguration) *string { return v.PrivateNetwork }).(pulumi.StringPtrOutput)
}

// True if mysqld should default to `REQUIRE X509`
// for users connecting over IP.
func (o DatabaseInstanceSettingsStateIpConfigurationPtrOutput) RequireSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfiguration) *bool { return v.RequireSsl }).(pulumi.BoolPtrOutput)
}

type DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork struct {
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime *string `pulumi:"expirationTime"`
	// A name for this whitelist entry.
	Name *string `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value string `pulumi:"value"`
}

type DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput() DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput
	ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutputWithContext(context.Context) DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput
}

type DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArgs struct {
	// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
	// formatted date time string indicating when this whitelist expires.
	ExpirationTime pulumi.StringPtrInput `pulumi:"expirationTime"`
	// A name for this whitelist entry.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A CIDR notation IPv4 or IPv6 address that is allowed to
	// access this instance. Must be set even if other two attributes are not for
	// the whitelist to become active.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (i DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArgs) ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput() DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput {
	return i.ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArgs) ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput)
}

type DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput() DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput
	ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutputWithContext(context.Context) DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput
}

type DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArray []DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkInput

func (DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (i DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArray) ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput() DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput {
	return i.ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArray) ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput)
}

type DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput) ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput() DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput {
	return o
}

func (o DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput) ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput {
	return o
}

// The [RFC 3339](https://tools.ietf.org/html/rfc3339)
// formatted date time string indicating when this whitelist expires.
func (o DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput) ExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork) *string {
		return v.ExpirationTime
	}).(pulumi.StringPtrOutput)
}

// A name for this whitelist entry.
func (o DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A CIDR notation IPv4 or IPv6 address that is allowed to
// access this instance. Must be set even if other two attributes are not for
// the whitelist to become active.
func (o DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput) ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput() DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput) ToDatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput {
	return o
}

func (o DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork {
		return vs[0].([]DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetwork)[vs[1].(int)]
	}).(DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput)
}

type DatabaseInstanceSettingsStateLocationPreference struct {
	// A GAE application whose zone to remain
	// in. Must be in the same region as this instance.
	FollowGaeApplication *string `pulumi:"followGaeApplication"`
	// The preferred compute engine
	// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
	Zone *string `pulumi:"zone"`
}

type DatabaseInstanceSettingsStateLocationPreferenceInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateLocationPreferenceOutput() DatabaseInstanceSettingsStateLocationPreferenceOutput
	ToDatabaseInstanceSettingsStateLocationPreferenceOutputWithContext(context.Context) DatabaseInstanceSettingsStateLocationPreferenceOutput
}

type DatabaseInstanceSettingsStateLocationPreferenceArgs struct {
	// A GAE application whose zone to remain
	// in. Must be in the same region as this instance.
	FollowGaeApplication pulumi.StringPtrInput `pulumi:"followGaeApplication"`
	// The preferred compute engine
	// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DatabaseInstanceSettingsStateLocationPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateLocationPreference)(nil)).Elem()
}

func (i DatabaseInstanceSettingsStateLocationPreferenceArgs) ToDatabaseInstanceSettingsStateLocationPreferenceOutput() DatabaseInstanceSettingsStateLocationPreferenceOutput {
	return i.ToDatabaseInstanceSettingsStateLocationPreferenceOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateLocationPreferenceArgs) ToDatabaseInstanceSettingsStateLocationPreferenceOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateLocationPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateLocationPreferenceOutput)
}

func (i DatabaseInstanceSettingsStateLocationPreferenceArgs) ToDatabaseInstanceSettingsStateLocationPreferencePtrOutput() DatabaseInstanceSettingsStateLocationPreferencePtrOutput {
	return i.ToDatabaseInstanceSettingsStateLocationPreferencePtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateLocationPreferenceArgs) ToDatabaseInstanceSettingsStateLocationPreferencePtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateLocationPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateLocationPreferenceOutput).ToDatabaseInstanceSettingsStateLocationPreferencePtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsStateLocationPreferencePtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateLocationPreferencePtrOutput() DatabaseInstanceSettingsStateLocationPreferencePtrOutput
	ToDatabaseInstanceSettingsStateLocationPreferencePtrOutputWithContext(context.Context) DatabaseInstanceSettingsStateLocationPreferencePtrOutput
}

type databaseInstanceSettingsStateLocationPreferencePtrType DatabaseInstanceSettingsStateLocationPreferenceArgs

func DatabaseInstanceSettingsStateLocationPreferencePtr(v *DatabaseInstanceSettingsStateLocationPreferenceArgs) DatabaseInstanceSettingsStateLocationPreferencePtrInput {
	return (*databaseInstanceSettingsStateLocationPreferencePtrType)(v)
}

func (*databaseInstanceSettingsStateLocationPreferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsStateLocationPreference)(nil)).Elem()
}

func (i *databaseInstanceSettingsStateLocationPreferencePtrType) ToDatabaseInstanceSettingsStateLocationPreferencePtrOutput() DatabaseInstanceSettingsStateLocationPreferencePtrOutput {
	return i.ToDatabaseInstanceSettingsStateLocationPreferencePtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsStateLocationPreferencePtrType) ToDatabaseInstanceSettingsStateLocationPreferencePtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateLocationPreferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateLocationPreferencePtrOutput)
}

type DatabaseInstanceSettingsStateLocationPreferenceOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateLocationPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateLocationPreference)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateLocationPreferenceOutput) ToDatabaseInstanceSettingsStateLocationPreferenceOutput() DatabaseInstanceSettingsStateLocationPreferenceOutput {
	return o
}

func (o DatabaseInstanceSettingsStateLocationPreferenceOutput) ToDatabaseInstanceSettingsStateLocationPreferenceOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateLocationPreferenceOutput {
	return o
}

func (o DatabaseInstanceSettingsStateLocationPreferenceOutput) ToDatabaseInstanceSettingsStateLocationPreferencePtrOutput() DatabaseInstanceSettingsStateLocationPreferencePtrOutput {
	return o.ToDatabaseInstanceSettingsStateLocationPreferencePtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsStateLocationPreferenceOutput) ToDatabaseInstanceSettingsStateLocationPreferencePtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateLocationPreferencePtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateLocationPreference) *DatabaseInstanceSettingsStateLocationPreference {
		return &v
	}).(DatabaseInstanceSettingsStateLocationPreferencePtrOutput)
}

// A GAE application whose zone to remain
// in. Must be in the same region as this instance.
func (o DatabaseInstanceSettingsStateLocationPreferenceOutput) FollowGaeApplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateLocationPreference) *string { return v.FollowGaeApplication }).(pulumi.StringPtrOutput)
}

// The preferred compute engine
// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
func (o DatabaseInstanceSettingsStateLocationPreferenceOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateLocationPreference) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsStateLocationPreferencePtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateLocationPreferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsStateLocationPreference)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateLocationPreferencePtrOutput) ToDatabaseInstanceSettingsStateLocationPreferencePtrOutput() DatabaseInstanceSettingsStateLocationPreferencePtrOutput {
	return o
}

func (o DatabaseInstanceSettingsStateLocationPreferencePtrOutput) ToDatabaseInstanceSettingsStateLocationPreferencePtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateLocationPreferencePtrOutput {
	return o
}

func (o DatabaseInstanceSettingsStateLocationPreferencePtrOutput) Elem() DatabaseInstanceSettingsStateLocationPreferenceOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsStateLocationPreference) DatabaseInstanceSettingsStateLocationPreference {
		return *v
	}).(DatabaseInstanceSettingsStateLocationPreferenceOutput)
}

// A GAE application whose zone to remain
// in. Must be in the same region as this instance.
func (o DatabaseInstanceSettingsStateLocationPreferencePtrOutput) FollowGaeApplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateLocationPreference) *string { return v.FollowGaeApplication }).(pulumi.StringPtrOutput)
}

// The preferred compute engine
// [zone](https://cloud.google.com/compute/docs/zones?hl=en).
func (o DatabaseInstanceSettingsStateLocationPreferencePtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateLocationPreference) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsStateMaintenanceWindow struct {
	// Day of week (`1-7`), starting on Monday
	Day *int `pulumi:"day"`
	// Hour of day (`0-23`), ignored if `day` not set
	Hour *int `pulumi:"hour"`
	// Receive updates earlier (`canary`) or later
	// (`stable`)
	UpdateTrack *string `pulumi:"updateTrack"`
}

type DatabaseInstanceSettingsStateMaintenanceWindowInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateMaintenanceWindowOutput() DatabaseInstanceSettingsStateMaintenanceWindowOutput
	ToDatabaseInstanceSettingsStateMaintenanceWindowOutputWithContext(context.Context) DatabaseInstanceSettingsStateMaintenanceWindowOutput
}

type DatabaseInstanceSettingsStateMaintenanceWindowArgs struct {
	// Day of week (`1-7`), starting on Monday
	Day pulumi.IntPtrInput `pulumi:"day"`
	// Hour of day (`0-23`), ignored if `day` not set
	Hour pulumi.IntPtrInput `pulumi:"hour"`
	// Receive updates earlier (`canary`) or later
	// (`stable`)
	UpdateTrack pulumi.StringPtrInput `pulumi:"updateTrack"`
}

func (DatabaseInstanceSettingsStateMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateMaintenanceWindow)(nil)).Elem()
}

func (i DatabaseInstanceSettingsStateMaintenanceWindowArgs) ToDatabaseInstanceSettingsStateMaintenanceWindowOutput() DatabaseInstanceSettingsStateMaintenanceWindowOutput {
	return i.ToDatabaseInstanceSettingsStateMaintenanceWindowOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateMaintenanceWindowArgs) ToDatabaseInstanceSettingsStateMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateMaintenanceWindowOutput)
}

func (i DatabaseInstanceSettingsStateMaintenanceWindowArgs) ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutput() DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput {
	return i.ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i DatabaseInstanceSettingsStateMaintenanceWindowArgs) ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateMaintenanceWindowOutput).ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutputWithContext(ctx)
}

type DatabaseInstanceSettingsStateMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutput() DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput
	ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutputWithContext(context.Context) DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput
}

type databaseInstanceSettingsStateMaintenanceWindowPtrType DatabaseInstanceSettingsStateMaintenanceWindowArgs

func DatabaseInstanceSettingsStateMaintenanceWindowPtr(v *DatabaseInstanceSettingsStateMaintenanceWindowArgs) DatabaseInstanceSettingsStateMaintenanceWindowPtrInput {
	return (*databaseInstanceSettingsStateMaintenanceWindowPtrType)(v)
}

func (*databaseInstanceSettingsStateMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsStateMaintenanceWindow)(nil)).Elem()
}

func (i *databaseInstanceSettingsStateMaintenanceWindowPtrType) ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutput() DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput {
	return i.ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *databaseInstanceSettingsStateMaintenanceWindowPtrType) ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput)
}

type DatabaseInstanceSettingsStateMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceSettingsStateMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateMaintenanceWindowOutput) ToDatabaseInstanceSettingsStateMaintenanceWindowOutput() DatabaseInstanceSettingsStateMaintenanceWindowOutput {
	return o
}

func (o DatabaseInstanceSettingsStateMaintenanceWindowOutput) ToDatabaseInstanceSettingsStateMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateMaintenanceWindowOutput {
	return o
}

func (o DatabaseInstanceSettingsStateMaintenanceWindowOutput) ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutput() DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput {
	return o.ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o DatabaseInstanceSettingsStateMaintenanceWindowOutput) ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateMaintenanceWindow) *DatabaseInstanceSettingsStateMaintenanceWindow {
		return &v
	}).(DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput)
}

// Day of week (`1-7`), starting on Monday
func (o DatabaseInstanceSettingsStateMaintenanceWindowOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateMaintenanceWindow) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Hour of day (`0-23`), ignored if `day` not set
func (o DatabaseInstanceSettingsStateMaintenanceWindowOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateMaintenanceWindow) *int { return v.Hour }).(pulumi.IntPtrOutput)
}

// Receive updates earlier (`canary`) or later
// (`stable`)
func (o DatabaseInstanceSettingsStateMaintenanceWindowOutput) UpdateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateMaintenanceWindow) *string { return v.UpdateTrack }).(pulumi.StringPtrOutput)
}

type DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstanceSettingsStateMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput) ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutput() DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput) ToDatabaseInstanceSettingsStateMaintenanceWindowPtrOutputWithContext(ctx context.Context) DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput {
	return o
}

func (o DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput) Elem() DatabaseInstanceSettingsStateMaintenanceWindowOutput {
	return o.ApplyT(func(v *DatabaseInstanceSettingsStateMaintenanceWindow) DatabaseInstanceSettingsStateMaintenanceWindow {
		return *v
	}).(DatabaseInstanceSettingsStateMaintenanceWindowOutput)
}

// Day of week (`1-7`), starting on Monday
func (o DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateMaintenanceWindow) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Hour of day (`0-23`), ignored if `day` not set
func (o DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput) Hour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateMaintenanceWindow) *int { return v.Hour }).(pulumi.IntPtrOutput)
}

// Receive updates earlier (`canary`) or later
// (`stable`)
func (o DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput) UpdateTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceSettingsStateMaintenanceWindow) *string { return v.UpdateTrack }).(pulumi.StringPtrOutput)
}

type GetCaCertsCert struct {
	// The CA certificate used to connect to the SQL instance via SSL.
	Cert string `pulumi:"cert"`
	// The CN valid for the CA cert.
	CommonName string `pulumi:"commonName"`
	// Creation time of the CA cert.
	CreateTime string `pulumi:"createTime"`
	// Expiration time of the CA cert.
	ExpirationTime string `pulumi:"expirationTime"`
	// SHA1 fingerprint of the CA cert.
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

type GetCaCertsCertInput interface {
	pulumi.Input

	ToGetCaCertsCertOutput() GetCaCertsCertOutput
	ToGetCaCertsCertOutputWithContext(context.Context) GetCaCertsCertOutput
}

type GetCaCertsCertArgs struct {
	// The CA certificate used to connect to the SQL instance via SSL.
	Cert pulumi.StringInput `pulumi:"cert"`
	// The CN valid for the CA cert.
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Creation time of the CA cert.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Expiration time of the CA cert.
	ExpirationTime pulumi.StringInput `pulumi:"expirationTime"`
	// SHA1 fingerprint of the CA cert.
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (GetCaCertsCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaCertsCert)(nil)).Elem()
}

func (i GetCaCertsCertArgs) ToGetCaCertsCertOutput() GetCaCertsCertOutput {
	return i.ToGetCaCertsCertOutputWithContext(context.Background())
}

func (i GetCaCertsCertArgs) ToGetCaCertsCertOutputWithContext(ctx context.Context) GetCaCertsCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaCertsCertOutput)
}

type GetCaCertsCertArrayInput interface {
	pulumi.Input

	ToGetCaCertsCertArrayOutput() GetCaCertsCertArrayOutput
	ToGetCaCertsCertArrayOutputWithContext(context.Context) GetCaCertsCertArrayOutput
}

type GetCaCertsCertArray []GetCaCertsCertInput

func (GetCaCertsCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaCertsCert)(nil)).Elem()
}

func (i GetCaCertsCertArray) ToGetCaCertsCertArrayOutput() GetCaCertsCertArrayOutput {
	return i.ToGetCaCertsCertArrayOutputWithContext(context.Background())
}

func (i GetCaCertsCertArray) ToGetCaCertsCertArrayOutputWithContext(ctx context.Context) GetCaCertsCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaCertsCertArrayOutput)
}

type GetCaCertsCertOutput struct{ *pulumi.OutputState }

func (GetCaCertsCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaCertsCert)(nil)).Elem()
}

func (o GetCaCertsCertOutput) ToGetCaCertsCertOutput() GetCaCertsCertOutput {
	return o
}

func (o GetCaCertsCertOutput) ToGetCaCertsCertOutputWithContext(ctx context.Context) GetCaCertsCertOutput {
	return o
}

// The CA certificate used to connect to the SQL instance via SSL.
func (o GetCaCertsCertOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.Cert }).(pulumi.StringOutput)
}

// The CN valid for the CA cert.
func (o GetCaCertsCertOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.CommonName }).(pulumi.StringOutput)
}

// Creation time of the CA cert.
func (o GetCaCertsCertOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Expiration time of the CA cert.
func (o GetCaCertsCertOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

// SHA1 fingerprint of the CA cert.
func (o GetCaCertsCertOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaCertsCert) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type GetCaCertsCertArrayOutput struct{ *pulumi.OutputState }

func (GetCaCertsCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaCertsCert)(nil)).Elem()
}

func (o GetCaCertsCertArrayOutput) ToGetCaCertsCertArrayOutput() GetCaCertsCertArrayOutput {
	return o
}

func (o GetCaCertsCertArrayOutput) ToGetCaCertsCertArrayOutputWithContext(ctx context.Context) GetCaCertsCertArrayOutput {
	return o
}

func (o GetCaCertsCertArrayOutput) Index(i pulumi.IntInput) GetCaCertsCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaCertsCert {
		return vs[0].([]GetCaCertsCert)[vs[1].(int)]
	}).(GetCaCertsCertOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseInstanceIpAddressOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceIpAddressArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceIpAddressStateOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceIpAddressStateArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReplicaConfigurationOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReplicaConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReplicaConfigurationArgsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReplicaConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReplicaConfigurationStateOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceServerCaCertOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceServerCaCertPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceServerCaCertStateOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsArgsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsArgsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsBackupConfigurationOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsBackupConfigurationArgsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsBackupConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsDatabaseFlagOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsDatabaseFlagArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsDatabaseFlagArgsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsDatabaseFlagArgsArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationArgsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgsArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsLocationPreferenceOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsLocationPreferenceArgsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsLocationPreferenceArgsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsMaintenanceWindowArgsOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsMaintenanceWindowArgsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateBackupConfigurationOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateBackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateDatabaseFlagOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateDatabaseFlagArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateIpConfigurationOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateIpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateIpConfigurationAuthorizedNetworkArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateLocationPreferenceOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateLocationPreferencePtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceSettingsStateMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(GetCaCertsCertOutput{})
	pulumi.RegisterOutputType(GetCaCertsCertArrayOutput{})
}
