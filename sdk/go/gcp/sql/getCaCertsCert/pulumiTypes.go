// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getCaCertsCert

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetCaCertsCert struct {
	Cert string `pulumi:"cert"`
	CommonName string `pulumi:"commonName"`
	CreateTime string `pulumi:"createTime"`
	ExpirationTime string `pulumi:"expirationTime"`
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

type GetCaCertsCertInput interface {
	pulumi.Input

	ToGetCaCertsCertOutput() GetCaCertsCertOutput
	ToGetCaCertsCertOutputWithContext(context.Context) GetCaCertsCertOutput
}

type GetCaCertsCertArgs struct {
	Cert pulumi.StringInput `pulumi:"cert"`
	CommonName pulumi.StringInput `pulumi:"commonName"`
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	ExpirationTime pulumi.StringInput `pulumi:"expirationTime"`
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (GetCaCertsCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaCertsCert)(nil)).Elem()
}

func (i GetCaCertsCertArgs) ToGetCaCertsCertOutput() GetCaCertsCertOutput {
	return i.ToGetCaCertsCertOutputWithContext(context.Background())
}

func (i GetCaCertsCertArgs) ToGetCaCertsCertOutputWithContext(ctx context.Context) GetCaCertsCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaCertsCertOutput)
}

type GetCaCertsCertArrayInput interface {
	pulumi.Input

	ToGetCaCertsCertArrayOutput() GetCaCertsCertArrayOutput
	ToGetCaCertsCertArrayOutputWithContext(context.Context) GetCaCertsCertArrayOutput
}

type GetCaCertsCertArray []GetCaCertsCertInput

func (GetCaCertsCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaCertsCert)(nil)).Elem()
}

func (i GetCaCertsCertArray) ToGetCaCertsCertArrayOutput() GetCaCertsCertArrayOutput {
	return i.ToGetCaCertsCertArrayOutputWithContext(context.Background())
}

func (i GetCaCertsCertArray) ToGetCaCertsCertArrayOutputWithContext(ctx context.Context) GetCaCertsCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaCertsCertArrayOutput)
}

type GetCaCertsCertOutput struct { *pulumi.OutputState }

func (GetCaCertsCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaCertsCert)(nil)).Elem()
}

func (o GetCaCertsCertOutput) ToGetCaCertsCertOutput() GetCaCertsCertOutput {
	return o
}

func (o GetCaCertsCertOutput) ToGetCaCertsCertOutputWithContext(ctx context.Context) GetCaCertsCertOutput {
	return o
}

func (o GetCaCertsCertOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func (v GetCaCertsCert) string { return v.Cert }).(pulumi.StringOutput)
}

func (o GetCaCertsCertOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func (v GetCaCertsCert) string { return v.CommonName }).(pulumi.StringOutput)
}

func (o GetCaCertsCertOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func (v GetCaCertsCert) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetCaCertsCertOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func (v GetCaCertsCert) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

func (o GetCaCertsCertOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func (v GetCaCertsCert) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type GetCaCertsCertArrayOutput struct { *pulumi.OutputState}

func (GetCaCertsCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaCertsCert)(nil)).Elem()
}

func (o GetCaCertsCertArrayOutput) ToGetCaCertsCertArrayOutput() GetCaCertsCertArrayOutput {
	return o
}

func (o GetCaCertsCertArrayOutput) ToGetCaCertsCertArrayOutputWithContext(ctx context.Context) GetCaCertsCertArrayOutput {
	return o
}

func (o GetCaCertsCertArrayOutput) Index(i pulumi.IntInput) GetCaCertsCertOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetCaCertsCert {
		return vs[0].([]GetCaCertsCert)[vs[1].(int)]
	}).(GetCaCertsCertOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCaCertsCertOutput{})
	pulumi.RegisterOutputType(GetCaCertsCertArrayOutput{})
}
