// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package firestore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type IndexField struct {
	ArrayConfig *string `pulumi:"arrayConfig"`
	FieldPath   *string `pulumi:"fieldPath"`
	Order       *string `pulumi:"order"`
}

type IndexFieldInput interface {
	pulumi.Input

	ToIndexFieldOutput() IndexFieldOutput
	ToIndexFieldOutputWithContext(context.Context) IndexFieldOutput
}

type IndexFieldArgs struct {
	ArrayConfig pulumi.StringPtrInput `pulumi:"arrayConfig"`
	FieldPath   pulumi.StringPtrInput `pulumi:"fieldPath"`
	Order       pulumi.StringPtrInput `pulumi:"order"`
}

func (IndexFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexField)(nil)).Elem()
}

func (i IndexFieldArgs) ToIndexFieldOutput() IndexFieldOutput {
	return i.ToIndexFieldOutputWithContext(context.Background())
}

func (i IndexFieldArgs) ToIndexFieldOutputWithContext(ctx context.Context) IndexFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexFieldOutput)
}

type IndexFieldArrayInput interface {
	pulumi.Input

	ToIndexFieldArrayOutput() IndexFieldArrayOutput
	ToIndexFieldArrayOutputWithContext(context.Context) IndexFieldArrayOutput
}

type IndexFieldArray []IndexFieldInput

func (IndexFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexField)(nil)).Elem()
}

func (i IndexFieldArray) ToIndexFieldArrayOutput() IndexFieldArrayOutput {
	return i.ToIndexFieldArrayOutputWithContext(context.Background())
}

func (i IndexFieldArray) ToIndexFieldArrayOutputWithContext(ctx context.Context) IndexFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexFieldArrayOutput)
}

type IndexFieldOutput struct{ *pulumi.OutputState }

func (IndexFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexField)(nil)).Elem()
}

func (o IndexFieldOutput) ToIndexFieldOutput() IndexFieldOutput {
	return o
}

func (o IndexFieldOutput) ToIndexFieldOutputWithContext(ctx context.Context) IndexFieldOutput {
	return o
}

func (o IndexFieldOutput) ArrayConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexField) *string { return v.ArrayConfig }).(pulumi.StringPtrOutput)
}

func (o IndexFieldOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexField) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

func (o IndexFieldOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexField) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type IndexFieldArrayOutput struct{ *pulumi.OutputState }

func (IndexFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexField)(nil)).Elem()
}

func (o IndexFieldArrayOutput) ToIndexFieldArrayOutput() IndexFieldArrayOutput {
	return o
}

func (o IndexFieldArrayOutput) ToIndexFieldArrayOutputWithContext(ctx context.Context) IndexFieldArrayOutput {
	return o
}

func (o IndexFieldArrayOutput) Index(i pulumi.IntInput) IndexFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndexField {
		return vs[0].([]IndexField)[vs[1].(int)]
	}).(IndexFieldOutput)
}

type IndexFieldArgs struct {
	ArrayConfig *string `pulumi:"arrayConfig"`
	FieldPath   *string `pulumi:"fieldPath"`
	Order       *string `pulumi:"order"`
}

type IndexFieldArgsInput interface {
	pulumi.Input

	ToIndexFieldArgsOutput() IndexFieldArgsOutput
	ToIndexFieldArgsOutputWithContext(context.Context) IndexFieldArgsOutput
}

type IndexFieldArgsArgs struct {
	ArrayConfig pulumi.StringPtrInput `pulumi:"arrayConfig"`
	FieldPath   pulumi.StringPtrInput `pulumi:"fieldPath"`
	Order       pulumi.StringPtrInput `pulumi:"order"`
}

func (IndexFieldArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexFieldArgs)(nil)).Elem()
}

func (i IndexFieldArgsArgs) ToIndexFieldArgsOutput() IndexFieldArgsOutput {
	return i.ToIndexFieldArgsOutputWithContext(context.Background())
}

func (i IndexFieldArgsArgs) ToIndexFieldArgsOutputWithContext(ctx context.Context) IndexFieldArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexFieldArgsOutput)
}

type IndexFieldArgsArrayInput interface {
	pulumi.Input

	ToIndexFieldArgsArrayOutput() IndexFieldArgsArrayOutput
	ToIndexFieldArgsArrayOutputWithContext(context.Context) IndexFieldArgsArrayOutput
}

type IndexFieldArgsArray []IndexFieldArgsInput

func (IndexFieldArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexFieldArgs)(nil)).Elem()
}

func (i IndexFieldArgsArray) ToIndexFieldArgsArrayOutput() IndexFieldArgsArrayOutput {
	return i.ToIndexFieldArgsArrayOutputWithContext(context.Background())
}

func (i IndexFieldArgsArray) ToIndexFieldArgsArrayOutputWithContext(ctx context.Context) IndexFieldArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexFieldArgsArrayOutput)
}

type IndexFieldArgsOutput struct{ *pulumi.OutputState }

func (IndexFieldArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexFieldArgs)(nil)).Elem()
}

func (o IndexFieldArgsOutput) ToIndexFieldArgsOutput() IndexFieldArgsOutput {
	return o
}

func (o IndexFieldArgsOutput) ToIndexFieldArgsOutputWithContext(ctx context.Context) IndexFieldArgsOutput {
	return o
}

func (o IndexFieldArgsOutput) ArrayConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexFieldArgs) *string { return v.ArrayConfig }).(pulumi.StringPtrOutput)
}

func (o IndexFieldArgsOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexFieldArgs) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

func (o IndexFieldArgsOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexFieldArgs) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type IndexFieldArgsArrayOutput struct{ *pulumi.OutputState }

func (IndexFieldArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexFieldArgs)(nil)).Elem()
}

func (o IndexFieldArgsArrayOutput) ToIndexFieldArgsArrayOutput() IndexFieldArgsArrayOutput {
	return o
}

func (o IndexFieldArgsArrayOutput) ToIndexFieldArgsArrayOutputWithContext(ctx context.Context) IndexFieldArgsArrayOutput {
	return o
}

func (o IndexFieldArgsArrayOutput) Index(i pulumi.IntInput) IndexFieldArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndexFieldArgs {
		return vs[0].([]IndexFieldArgs)[vs[1].(int)]
	}).(IndexFieldArgsOutput)
}

type IndexFieldState struct {
	ArrayConfig *string `pulumi:"arrayConfig"`
	FieldPath   *string `pulumi:"fieldPath"`
	Order       *string `pulumi:"order"`
}

type IndexFieldStateInput interface {
	pulumi.Input

	ToIndexFieldStateOutput() IndexFieldStateOutput
	ToIndexFieldStateOutputWithContext(context.Context) IndexFieldStateOutput
}

type IndexFieldStateArgs struct {
	ArrayConfig pulumi.StringPtrInput `pulumi:"arrayConfig"`
	FieldPath   pulumi.StringPtrInput `pulumi:"fieldPath"`
	Order       pulumi.StringPtrInput `pulumi:"order"`
}

func (IndexFieldStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexFieldState)(nil)).Elem()
}

func (i IndexFieldStateArgs) ToIndexFieldStateOutput() IndexFieldStateOutput {
	return i.ToIndexFieldStateOutputWithContext(context.Background())
}

func (i IndexFieldStateArgs) ToIndexFieldStateOutputWithContext(ctx context.Context) IndexFieldStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexFieldStateOutput)
}

type IndexFieldStateArrayInput interface {
	pulumi.Input

	ToIndexFieldStateArrayOutput() IndexFieldStateArrayOutput
	ToIndexFieldStateArrayOutputWithContext(context.Context) IndexFieldStateArrayOutput
}

type IndexFieldStateArray []IndexFieldStateInput

func (IndexFieldStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexFieldState)(nil)).Elem()
}

func (i IndexFieldStateArray) ToIndexFieldStateArrayOutput() IndexFieldStateArrayOutput {
	return i.ToIndexFieldStateArrayOutputWithContext(context.Background())
}

func (i IndexFieldStateArray) ToIndexFieldStateArrayOutputWithContext(ctx context.Context) IndexFieldStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexFieldStateArrayOutput)
}

type IndexFieldStateOutput struct{ *pulumi.OutputState }

func (IndexFieldStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexFieldState)(nil)).Elem()
}

func (o IndexFieldStateOutput) ToIndexFieldStateOutput() IndexFieldStateOutput {
	return o
}

func (o IndexFieldStateOutput) ToIndexFieldStateOutputWithContext(ctx context.Context) IndexFieldStateOutput {
	return o
}

func (o IndexFieldStateOutput) ArrayConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexFieldState) *string { return v.ArrayConfig }).(pulumi.StringPtrOutput)
}

func (o IndexFieldStateOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexFieldState) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

func (o IndexFieldStateOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexFieldState) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type IndexFieldStateArrayOutput struct{ *pulumi.OutputState }

func (IndexFieldStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexFieldState)(nil)).Elem()
}

func (o IndexFieldStateArrayOutput) ToIndexFieldStateArrayOutput() IndexFieldStateArrayOutput {
	return o
}

func (o IndexFieldStateArrayOutput) ToIndexFieldStateArrayOutputWithContext(ctx context.Context) IndexFieldStateArrayOutput {
	return o
}

func (o IndexFieldStateArrayOutput) Index(i pulumi.IntInput) IndexFieldStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndexFieldState {
		return vs[0].([]IndexFieldState)[vs[1].(int)]
	}).(IndexFieldStateOutput)
}

func init() {
	pulumi.RegisterOutputType(IndexFieldOutput{})
	pulumi.RegisterOutputType(IndexFieldArrayOutput{})
	pulumi.RegisterOutputType(IndexFieldArgsOutput{})
	pulumi.RegisterOutputType(IndexFieldArgsArrayOutput{})
	pulumi.RegisterOutputType(IndexFieldStateOutput{})
	pulumi.RegisterOutputType(IndexFieldStateArrayOutput{})
}
