// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package NodeNetworkEndpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type NodeNetworkEndpoint struct {
	IpAddress *string `pulumi:"ipAddress"`
	Port *int `pulumi:"port"`
}

type NodeNetworkEndpointInput interface {
	pulumi.Input

	ToNodeNetworkEndpointOutput() NodeNetworkEndpointOutput
	ToNodeNetworkEndpointOutputWithContext(context.Context) NodeNetworkEndpointOutput
}

type NodeNetworkEndpointArgs struct {
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (NodeNetworkEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeNetworkEndpoint)(nil)).Elem()
}

func (i NodeNetworkEndpointArgs) ToNodeNetworkEndpointOutput() NodeNetworkEndpointOutput {
	return i.ToNodeNetworkEndpointOutputWithContext(context.Background())
}

func (i NodeNetworkEndpointArgs) ToNodeNetworkEndpointOutputWithContext(ctx context.Context) NodeNetworkEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeNetworkEndpointOutput)
}

type NodeNetworkEndpointArrayInput interface {
	pulumi.Input

	ToNodeNetworkEndpointArrayOutput() NodeNetworkEndpointArrayOutput
	ToNodeNetworkEndpointArrayOutputWithContext(context.Context) NodeNetworkEndpointArrayOutput
}

type NodeNetworkEndpointArray []NodeNetworkEndpointInput

func (NodeNetworkEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeNetworkEndpoint)(nil)).Elem()
}

func (i NodeNetworkEndpointArray) ToNodeNetworkEndpointArrayOutput() NodeNetworkEndpointArrayOutput {
	return i.ToNodeNetworkEndpointArrayOutputWithContext(context.Background())
}

func (i NodeNetworkEndpointArray) ToNodeNetworkEndpointArrayOutputWithContext(ctx context.Context) NodeNetworkEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeNetworkEndpointArrayOutput)
}

type NodeNetworkEndpointOutput struct { *pulumi.OutputState }

func (NodeNetworkEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeNetworkEndpoint)(nil)).Elem()
}

func (o NodeNetworkEndpointOutput) ToNodeNetworkEndpointOutput() NodeNetworkEndpointOutput {
	return o
}

func (o NodeNetworkEndpointOutput) ToNodeNetworkEndpointOutputWithContext(ctx context.Context) NodeNetworkEndpointOutput {
	return o
}

func (o NodeNetworkEndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func (v NodeNetworkEndpoint) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o NodeNetworkEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v NodeNetworkEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type NodeNetworkEndpointArrayOutput struct { *pulumi.OutputState}

func (NodeNetworkEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeNetworkEndpoint)(nil)).Elem()
}

func (o NodeNetworkEndpointArrayOutput) ToNodeNetworkEndpointArrayOutput() NodeNetworkEndpointArrayOutput {
	return o
}

func (o NodeNetworkEndpointArrayOutput) ToNodeNetworkEndpointArrayOutputWithContext(ctx context.Context) NodeNetworkEndpointArrayOutput {
	return o
}

func (o NodeNetworkEndpointArrayOutput) Index(i pulumi.IntInput) NodeNetworkEndpointOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) NodeNetworkEndpoint {
		return vs[0].([]NodeNetworkEndpoint)[vs[1].(int)]
	}).(NodeNetworkEndpointOutput)
}

func init() {
	pulumi.RegisterOutputType(NodeNetworkEndpointOutput{})
	pulumi.RegisterOutputType(NodeNetworkEndpointArrayOutput{})
}
