// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package endpoints

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ServiceApi struct {
	Methods []ServiceApiMethod `pulumi:"methods"`
	Name    string             `pulumi:"name"`
	Syntax  string             `pulumi:"syntax"`
	Version string             `pulumi:"version"`
}

type ServiceApiInput interface {
	pulumi.Input

	ToServiceApiOutput() ServiceApiOutput
	ToServiceApiOutputWithContext(context.Context) ServiceApiOutput
}

type ServiceApiArgs struct {
	Methods ServiceApiMethodArrayInput `pulumi:"methods"`
	Name    pulumi.StringInput         `pulumi:"name"`
	Syntax  pulumi.StringInput         `pulumi:"syntax"`
	Version pulumi.StringInput         `pulumi:"version"`
}

func (ServiceApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApi)(nil)).Elem()
}

func (i ServiceApiArgs) ToServiceApiOutput() ServiceApiOutput {
	return i.ToServiceApiOutputWithContext(context.Background())
}

func (i ServiceApiArgs) ToServiceApiOutputWithContext(ctx context.Context) ServiceApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiOutput)
}

type ServiceApiArrayInput interface {
	pulumi.Input

	ToServiceApiArrayOutput() ServiceApiArrayOutput
	ToServiceApiArrayOutputWithContext(context.Context) ServiceApiArrayOutput
}

type ServiceApiArray []ServiceApiInput

func (ServiceApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApi)(nil)).Elem()
}

func (i ServiceApiArray) ToServiceApiArrayOutput() ServiceApiArrayOutput {
	return i.ToServiceApiArrayOutputWithContext(context.Background())
}

func (i ServiceApiArray) ToServiceApiArrayOutputWithContext(ctx context.Context) ServiceApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiArrayOutput)
}

type ServiceApiOutput struct{ *pulumi.OutputState }

func (ServiceApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApi)(nil)).Elem()
}

func (o ServiceApiOutput) ToServiceApiOutput() ServiceApiOutput {
	return o
}

func (o ServiceApiOutput) ToServiceApiOutputWithContext(ctx context.Context) ServiceApiOutput {
	return o
}

func (o ServiceApiOutput) Methods() ServiceApiMethodArrayOutput {
	return o.ApplyT(func(v ServiceApi) []ServiceApiMethod { return v.Methods }).(ServiceApiMethodArrayOutput)
}

func (o ServiceApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceApi) string { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceApiOutput) Syntax() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceApi) string { return v.Syntax }).(pulumi.StringOutput)
}

func (o ServiceApiOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceApi) string { return v.Version }).(pulumi.StringOutput)
}

type ServiceApiArrayOutput struct{ *pulumi.OutputState }

func (ServiceApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApi)(nil)).Elem()
}

func (o ServiceApiArrayOutput) ToServiceApiArrayOutput() ServiceApiArrayOutput {
	return o
}

func (o ServiceApiArrayOutput) ToServiceApiArrayOutputWithContext(ctx context.Context) ServiceApiArrayOutput {
	return o
}

func (o ServiceApiArrayOutput) Index(i pulumi.IntInput) ServiceApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceApi {
		return vs[0].([]ServiceApi)[vs[1].(int)]
	}).(ServiceApiOutput)
}

type ServiceApiMethod struct {
	Name         string `pulumi:"name"`
	RequestType  string `pulumi:"requestType"`
	ResponseType string `pulumi:"responseType"`
	Syntax       string `pulumi:"syntax"`
}

type ServiceApiMethodInput interface {
	pulumi.Input

	ToServiceApiMethodOutput() ServiceApiMethodOutput
	ToServiceApiMethodOutputWithContext(context.Context) ServiceApiMethodOutput
}

type ServiceApiMethodArgs struct {
	Name         pulumi.StringInput `pulumi:"name"`
	RequestType  pulumi.StringInput `pulumi:"requestType"`
	ResponseType pulumi.StringInput `pulumi:"responseType"`
	Syntax       pulumi.StringInput `pulumi:"syntax"`
}

func (ServiceApiMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiMethod)(nil)).Elem()
}

func (i ServiceApiMethodArgs) ToServiceApiMethodOutput() ServiceApiMethodOutput {
	return i.ToServiceApiMethodOutputWithContext(context.Background())
}

func (i ServiceApiMethodArgs) ToServiceApiMethodOutputWithContext(ctx context.Context) ServiceApiMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiMethodOutput)
}

type ServiceApiMethodArrayInput interface {
	pulumi.Input

	ToServiceApiMethodArrayOutput() ServiceApiMethodArrayOutput
	ToServiceApiMethodArrayOutputWithContext(context.Context) ServiceApiMethodArrayOutput
}

type ServiceApiMethodArray []ServiceApiMethodInput

func (ServiceApiMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiMethod)(nil)).Elem()
}

func (i ServiceApiMethodArray) ToServiceApiMethodArrayOutput() ServiceApiMethodArrayOutput {
	return i.ToServiceApiMethodArrayOutputWithContext(context.Background())
}

func (i ServiceApiMethodArray) ToServiceApiMethodArrayOutputWithContext(ctx context.Context) ServiceApiMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiMethodArrayOutput)
}

type ServiceApiMethodOutput struct{ *pulumi.OutputState }

func (ServiceApiMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiMethod)(nil)).Elem()
}

func (o ServiceApiMethodOutput) ToServiceApiMethodOutput() ServiceApiMethodOutput {
	return o
}

func (o ServiceApiMethodOutput) ToServiceApiMethodOutputWithContext(ctx context.Context) ServiceApiMethodOutput {
	return o
}

func (o ServiceApiMethodOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceApiMethod) string { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceApiMethodOutput) RequestType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceApiMethod) string { return v.RequestType }).(pulumi.StringOutput)
}

func (o ServiceApiMethodOutput) ResponseType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceApiMethod) string { return v.ResponseType }).(pulumi.StringOutput)
}

func (o ServiceApiMethodOutput) Syntax() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceApiMethod) string { return v.Syntax }).(pulumi.StringOutput)
}

type ServiceApiMethodArrayOutput struct{ *pulumi.OutputState }

func (ServiceApiMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiMethod)(nil)).Elem()
}

func (o ServiceApiMethodArrayOutput) ToServiceApiMethodArrayOutput() ServiceApiMethodArrayOutput {
	return o
}

func (o ServiceApiMethodArrayOutput) ToServiceApiMethodArrayOutputWithContext(ctx context.Context) ServiceApiMethodArrayOutput {
	return o
}

func (o ServiceApiMethodArrayOutput) Index(i pulumi.IntInput) ServiceApiMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceApiMethod {
		return vs[0].([]ServiceApiMethod)[vs[1].(int)]
	}).(ServiceApiMethodOutput)
}

type ServiceApiState struct {
	Methods []ServiceApiStateMethod `pulumi:"methods"`
	Name    *string                 `pulumi:"name"`
	Syntax  *string                 `pulumi:"syntax"`
	Version *string                 `pulumi:"version"`
}

type ServiceApiStateInput interface {
	pulumi.Input

	ToServiceApiStateOutput() ServiceApiStateOutput
	ToServiceApiStateOutputWithContext(context.Context) ServiceApiStateOutput
}

type ServiceApiStateArgs struct {
	Methods ServiceApiStateMethodArrayInput `pulumi:"methods"`
	Name    pulumi.StringPtrInput           `pulumi:"name"`
	Syntax  pulumi.StringPtrInput           `pulumi:"syntax"`
	Version pulumi.StringPtrInput           `pulumi:"version"`
}

func (ServiceApiStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiState)(nil)).Elem()
}

func (i ServiceApiStateArgs) ToServiceApiStateOutput() ServiceApiStateOutput {
	return i.ToServiceApiStateOutputWithContext(context.Background())
}

func (i ServiceApiStateArgs) ToServiceApiStateOutputWithContext(ctx context.Context) ServiceApiStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiStateOutput)
}

type ServiceApiStateArrayInput interface {
	pulumi.Input

	ToServiceApiStateArrayOutput() ServiceApiStateArrayOutput
	ToServiceApiStateArrayOutputWithContext(context.Context) ServiceApiStateArrayOutput
}

type ServiceApiStateArray []ServiceApiStateInput

func (ServiceApiStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiState)(nil)).Elem()
}

func (i ServiceApiStateArray) ToServiceApiStateArrayOutput() ServiceApiStateArrayOutput {
	return i.ToServiceApiStateArrayOutputWithContext(context.Background())
}

func (i ServiceApiStateArray) ToServiceApiStateArrayOutputWithContext(ctx context.Context) ServiceApiStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiStateArrayOutput)
}

type ServiceApiStateOutput struct{ *pulumi.OutputState }

func (ServiceApiStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiState)(nil)).Elem()
}

func (o ServiceApiStateOutput) ToServiceApiStateOutput() ServiceApiStateOutput {
	return o
}

func (o ServiceApiStateOutput) ToServiceApiStateOutputWithContext(ctx context.Context) ServiceApiStateOutput {
	return o
}

func (o ServiceApiStateOutput) Methods() ServiceApiStateMethodArrayOutput {
	return o.ApplyT(func(v ServiceApiState) []ServiceApiStateMethod { return v.Methods }).(ServiceApiStateMethodArrayOutput)
}

func (o ServiceApiStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServiceApiStateOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiState) *string { return v.Syntax }).(pulumi.StringPtrOutput)
}

func (o ServiceApiStateOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiState) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ServiceApiStateArrayOutput struct{ *pulumi.OutputState }

func (ServiceApiStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiState)(nil)).Elem()
}

func (o ServiceApiStateArrayOutput) ToServiceApiStateArrayOutput() ServiceApiStateArrayOutput {
	return o
}

func (o ServiceApiStateArrayOutput) ToServiceApiStateArrayOutputWithContext(ctx context.Context) ServiceApiStateArrayOutput {
	return o
}

func (o ServiceApiStateArrayOutput) Index(i pulumi.IntInput) ServiceApiStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceApiState {
		return vs[0].([]ServiceApiState)[vs[1].(int)]
	}).(ServiceApiStateOutput)
}

type ServiceApiStateMethod struct {
	Name         *string `pulumi:"name"`
	RequestType  *string `pulumi:"requestType"`
	ResponseType *string `pulumi:"responseType"`
	Syntax       *string `pulumi:"syntax"`
}

type ServiceApiStateMethodInput interface {
	pulumi.Input

	ToServiceApiStateMethodOutput() ServiceApiStateMethodOutput
	ToServiceApiStateMethodOutputWithContext(context.Context) ServiceApiStateMethodOutput
}

type ServiceApiStateMethodArgs struct {
	Name         pulumi.StringPtrInput `pulumi:"name"`
	RequestType  pulumi.StringPtrInput `pulumi:"requestType"`
	ResponseType pulumi.StringPtrInput `pulumi:"responseType"`
	Syntax       pulumi.StringPtrInput `pulumi:"syntax"`
}

func (ServiceApiStateMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiStateMethod)(nil)).Elem()
}

func (i ServiceApiStateMethodArgs) ToServiceApiStateMethodOutput() ServiceApiStateMethodOutput {
	return i.ToServiceApiStateMethodOutputWithContext(context.Background())
}

func (i ServiceApiStateMethodArgs) ToServiceApiStateMethodOutputWithContext(ctx context.Context) ServiceApiStateMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiStateMethodOutput)
}

type ServiceApiStateMethodArrayInput interface {
	pulumi.Input

	ToServiceApiStateMethodArrayOutput() ServiceApiStateMethodArrayOutput
	ToServiceApiStateMethodArrayOutputWithContext(context.Context) ServiceApiStateMethodArrayOutput
}

type ServiceApiStateMethodArray []ServiceApiStateMethodInput

func (ServiceApiStateMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiStateMethod)(nil)).Elem()
}

func (i ServiceApiStateMethodArray) ToServiceApiStateMethodArrayOutput() ServiceApiStateMethodArrayOutput {
	return i.ToServiceApiStateMethodArrayOutputWithContext(context.Background())
}

func (i ServiceApiStateMethodArray) ToServiceApiStateMethodArrayOutputWithContext(ctx context.Context) ServiceApiStateMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiStateMethodArrayOutput)
}

type ServiceApiStateMethodOutput struct{ *pulumi.OutputState }

func (ServiceApiStateMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiStateMethod)(nil)).Elem()
}

func (o ServiceApiStateMethodOutput) ToServiceApiStateMethodOutput() ServiceApiStateMethodOutput {
	return o
}

func (o ServiceApiStateMethodOutput) ToServiceApiStateMethodOutputWithContext(ctx context.Context) ServiceApiStateMethodOutput {
	return o
}

func (o ServiceApiStateMethodOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiStateMethod) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServiceApiStateMethodOutput) RequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiStateMethod) *string { return v.RequestType }).(pulumi.StringPtrOutput)
}

func (o ServiceApiStateMethodOutput) ResponseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiStateMethod) *string { return v.ResponseType }).(pulumi.StringPtrOutput)
}

func (o ServiceApiStateMethodOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceApiStateMethod) *string { return v.Syntax }).(pulumi.StringPtrOutput)
}

type ServiceApiStateMethodArrayOutput struct{ *pulumi.OutputState }

func (ServiceApiStateMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiStateMethod)(nil)).Elem()
}

func (o ServiceApiStateMethodArrayOutput) ToServiceApiStateMethodArrayOutput() ServiceApiStateMethodArrayOutput {
	return o
}

func (o ServiceApiStateMethodArrayOutput) ToServiceApiStateMethodArrayOutputWithContext(ctx context.Context) ServiceApiStateMethodArrayOutput {
	return o
}

func (o ServiceApiStateMethodArrayOutput) Index(i pulumi.IntInput) ServiceApiStateMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceApiStateMethod {
		return vs[0].([]ServiceApiStateMethod)[vs[1].(int)]
	}).(ServiceApiStateMethodOutput)
}

type ServiceEndpoint struct {
	Address string `pulumi:"address"`
	Name    string `pulumi:"name"`
}

type ServiceEndpointInput interface {
	pulumi.Input

	ToServiceEndpointOutput() ServiceEndpointOutput
	ToServiceEndpointOutputWithContext(context.Context) ServiceEndpointOutput
}

type ServiceEndpointArgs struct {
	Address pulumi.StringInput `pulumi:"address"`
	Name    pulumi.StringInput `pulumi:"name"`
}

func (ServiceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpoint)(nil)).Elem()
}

func (i ServiceEndpointArgs) ToServiceEndpointOutput() ServiceEndpointOutput {
	return i.ToServiceEndpointOutputWithContext(context.Background())
}

func (i ServiceEndpointArgs) ToServiceEndpointOutputWithContext(ctx context.Context) ServiceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointOutput)
}

type ServiceEndpointArrayInput interface {
	pulumi.Input

	ToServiceEndpointArrayOutput() ServiceEndpointArrayOutput
	ToServiceEndpointArrayOutputWithContext(context.Context) ServiceEndpointArrayOutput
}

type ServiceEndpointArray []ServiceEndpointInput

func (ServiceEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpoint)(nil)).Elem()
}

func (i ServiceEndpointArray) ToServiceEndpointArrayOutput() ServiceEndpointArrayOutput {
	return i.ToServiceEndpointArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointArray) ToServiceEndpointArrayOutputWithContext(ctx context.Context) ServiceEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointArrayOutput)
}

type ServiceEndpointOutput struct{ *pulumi.OutputState }

func (ServiceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpoint)(nil)).Elem()
}

func (o ServiceEndpointOutput) ToServiceEndpointOutput() ServiceEndpointOutput {
	return o
}

func (o ServiceEndpointOutput) ToServiceEndpointOutputWithContext(ctx context.Context) ServiceEndpointOutput {
	return o
}

func (o ServiceEndpointOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpoint) string { return v.Address }).(pulumi.StringOutput)
}

func (o ServiceEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpoint) string { return v.Name }).(pulumi.StringOutput)
}

type ServiceEndpointArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpoint)(nil)).Elem()
}

func (o ServiceEndpointArrayOutput) ToServiceEndpointArrayOutput() ServiceEndpointArrayOutput {
	return o
}

func (o ServiceEndpointArrayOutput) ToServiceEndpointArrayOutputWithContext(ctx context.Context) ServiceEndpointArrayOutput {
	return o
}

func (o ServiceEndpointArrayOutput) Index(i pulumi.IntInput) ServiceEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpoint {
		return vs[0].([]ServiceEndpoint)[vs[1].(int)]
	}).(ServiceEndpointOutput)
}

type ServiceEndpointState struct {
	Address *string `pulumi:"address"`
	Name    *string `pulumi:"name"`
}

type ServiceEndpointStateInput interface {
	pulumi.Input

	ToServiceEndpointStateOutput() ServiceEndpointStateOutput
	ToServiceEndpointStateOutputWithContext(context.Context) ServiceEndpointStateOutput
}

type ServiceEndpointStateArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
	Name    pulumi.StringPtrInput `pulumi:"name"`
}

func (ServiceEndpointStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointState)(nil)).Elem()
}

func (i ServiceEndpointStateArgs) ToServiceEndpointStateOutput() ServiceEndpointStateOutput {
	return i.ToServiceEndpointStateOutputWithContext(context.Background())
}

func (i ServiceEndpointStateArgs) ToServiceEndpointStateOutputWithContext(ctx context.Context) ServiceEndpointStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointStateOutput)
}

type ServiceEndpointStateArrayInput interface {
	pulumi.Input

	ToServiceEndpointStateArrayOutput() ServiceEndpointStateArrayOutput
	ToServiceEndpointStateArrayOutputWithContext(context.Context) ServiceEndpointStateArrayOutput
}

type ServiceEndpointStateArray []ServiceEndpointStateInput

func (ServiceEndpointStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointState)(nil)).Elem()
}

func (i ServiceEndpointStateArray) ToServiceEndpointStateArrayOutput() ServiceEndpointStateArrayOutput {
	return i.ToServiceEndpointStateArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointStateArray) ToServiceEndpointStateArrayOutputWithContext(ctx context.Context) ServiceEndpointStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointStateArrayOutput)
}

type ServiceEndpointStateOutput struct{ *pulumi.OutputState }

func (ServiceEndpointStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointState)(nil)).Elem()
}

func (o ServiceEndpointStateOutput) ToServiceEndpointStateOutput() ServiceEndpointStateOutput {
	return o
}

func (o ServiceEndpointStateOutput) ToServiceEndpointStateOutputWithContext(ctx context.Context) ServiceEndpointStateOutput {
	return o
}

func (o ServiceEndpointStateOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointState) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o ServiceEndpointStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServiceEndpointStateArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointState)(nil)).Elem()
}

func (o ServiceEndpointStateArrayOutput) ToServiceEndpointStateArrayOutput() ServiceEndpointStateArrayOutput {
	return o
}

func (o ServiceEndpointStateArrayOutput) ToServiceEndpointStateArrayOutputWithContext(ctx context.Context) ServiceEndpointStateArrayOutput {
	return o
}

func (o ServiceEndpointStateArrayOutput) Index(i pulumi.IntInput) ServiceEndpointStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointState {
		return vs[0].([]ServiceEndpointState)[vs[1].(int)]
	}).(ServiceEndpointStateOutput)
}

type ServiceIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ServiceIamBindingConditionInput interface {
	pulumi.Input

	ToServiceIamBindingConditionOutput() ServiceIamBindingConditionOutput
	ToServiceIamBindingConditionOutputWithContext(context.Context) ServiceIamBindingConditionOutput
}

type ServiceIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ServiceIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamBindingCondition)(nil)).Elem()
}

func (i ServiceIamBindingConditionArgs) ToServiceIamBindingConditionOutput() ServiceIamBindingConditionOutput {
	return i.ToServiceIamBindingConditionOutputWithContext(context.Background())
}

func (i ServiceIamBindingConditionArgs) ToServiceIamBindingConditionOutputWithContext(ctx context.Context) ServiceIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamBindingConditionOutput)
}

func (i ServiceIamBindingConditionArgs) ToServiceIamBindingConditionPtrOutput() ServiceIamBindingConditionPtrOutput {
	return i.ToServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i ServiceIamBindingConditionArgs) ToServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) ServiceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamBindingConditionOutput).ToServiceIamBindingConditionPtrOutputWithContext(ctx)
}

type ServiceIamBindingConditionPtrInput interface {
	pulumi.Input

	ToServiceIamBindingConditionPtrOutput() ServiceIamBindingConditionPtrOutput
	ToServiceIamBindingConditionPtrOutputWithContext(context.Context) ServiceIamBindingConditionPtrOutput
}

type serviceIamBindingConditionPtrType ServiceIamBindingConditionArgs

func ServiceIamBindingConditionPtr(v *ServiceIamBindingConditionArgs) ServiceIamBindingConditionPtrInput {
	return (*serviceIamBindingConditionPtrType)(v)
}

func (*serviceIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIamBindingCondition)(nil)).Elem()
}

func (i *serviceIamBindingConditionPtrType) ToServiceIamBindingConditionPtrOutput() ServiceIamBindingConditionPtrOutput {
	return i.ToServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *serviceIamBindingConditionPtrType) ToServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) ServiceIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamBindingConditionPtrOutput)
}

type ServiceIamBindingConditionOutput struct{ *pulumi.OutputState }

func (ServiceIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamBindingCondition)(nil)).Elem()
}

func (o ServiceIamBindingConditionOutput) ToServiceIamBindingConditionOutput() ServiceIamBindingConditionOutput {
	return o
}

func (o ServiceIamBindingConditionOutput) ToServiceIamBindingConditionOutputWithContext(ctx context.Context) ServiceIamBindingConditionOutput {
	return o
}

func (o ServiceIamBindingConditionOutput) ToServiceIamBindingConditionPtrOutput() ServiceIamBindingConditionPtrOutput {
	return o.ToServiceIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o ServiceIamBindingConditionOutput) ToServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) ServiceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v ServiceIamBindingCondition) *ServiceIamBindingCondition {
		return &v
	}).(ServiceIamBindingConditionPtrOutput)
}
func (o ServiceIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ServiceIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (ServiceIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIamBindingCondition)(nil)).Elem()
}

func (o ServiceIamBindingConditionPtrOutput) ToServiceIamBindingConditionPtrOutput() ServiceIamBindingConditionPtrOutput {
	return o
}

func (o ServiceIamBindingConditionPtrOutput) ToServiceIamBindingConditionPtrOutputWithContext(ctx context.Context) ServiceIamBindingConditionPtrOutput {
	return o
}

func (o ServiceIamBindingConditionPtrOutput) Elem() ServiceIamBindingConditionOutput {
	return o.ApplyT(func(v *ServiceIamBindingCondition) ServiceIamBindingCondition { return *v }).(ServiceIamBindingConditionOutput)
}

func (o ServiceIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ServiceIamBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ServiceIamBindingConditionArgsInput interface {
	pulumi.Input

	ToServiceIamBindingConditionArgsOutput() ServiceIamBindingConditionArgsOutput
	ToServiceIamBindingConditionArgsOutputWithContext(context.Context) ServiceIamBindingConditionArgsOutput
}

type ServiceIamBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ServiceIamBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamBindingConditionArgs)(nil)).Elem()
}

func (i ServiceIamBindingConditionArgsArgs) ToServiceIamBindingConditionArgsOutput() ServiceIamBindingConditionArgsOutput {
	return i.ToServiceIamBindingConditionArgsOutputWithContext(context.Background())
}

func (i ServiceIamBindingConditionArgsArgs) ToServiceIamBindingConditionArgsOutputWithContext(ctx context.Context) ServiceIamBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamBindingConditionArgsOutput)
}

func (i ServiceIamBindingConditionArgsArgs) ToServiceIamBindingConditionArgsPtrOutput() ServiceIamBindingConditionArgsPtrOutput {
	return i.ToServiceIamBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i ServiceIamBindingConditionArgsArgs) ToServiceIamBindingConditionArgsPtrOutputWithContext(ctx context.Context) ServiceIamBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamBindingConditionArgsOutput).ToServiceIamBindingConditionArgsPtrOutputWithContext(ctx)
}

type ServiceIamBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToServiceIamBindingConditionArgsPtrOutput() ServiceIamBindingConditionArgsPtrOutput
	ToServiceIamBindingConditionArgsPtrOutputWithContext(context.Context) ServiceIamBindingConditionArgsPtrOutput
}

type serviceIamBindingConditionArgsPtrType ServiceIamBindingConditionArgsArgs

func ServiceIamBindingConditionArgsPtr(v *ServiceIamBindingConditionArgsArgs) ServiceIamBindingConditionArgsPtrInput {
	return (*serviceIamBindingConditionArgsPtrType)(v)
}

func (*serviceIamBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIamBindingConditionArgs)(nil)).Elem()
}

func (i *serviceIamBindingConditionArgsPtrType) ToServiceIamBindingConditionArgsPtrOutput() ServiceIamBindingConditionArgsPtrOutput {
	return i.ToServiceIamBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *serviceIamBindingConditionArgsPtrType) ToServiceIamBindingConditionArgsPtrOutputWithContext(ctx context.Context) ServiceIamBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamBindingConditionArgsPtrOutput)
}

type ServiceIamBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (ServiceIamBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamBindingConditionArgs)(nil)).Elem()
}

func (o ServiceIamBindingConditionArgsOutput) ToServiceIamBindingConditionArgsOutput() ServiceIamBindingConditionArgsOutput {
	return o
}

func (o ServiceIamBindingConditionArgsOutput) ToServiceIamBindingConditionArgsOutputWithContext(ctx context.Context) ServiceIamBindingConditionArgsOutput {
	return o
}

func (o ServiceIamBindingConditionArgsOutput) ToServiceIamBindingConditionArgsPtrOutput() ServiceIamBindingConditionArgsPtrOutput {
	return o.ToServiceIamBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o ServiceIamBindingConditionArgsOutput) ToServiceIamBindingConditionArgsPtrOutputWithContext(ctx context.Context) ServiceIamBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionArgs) *ServiceIamBindingConditionArgs {
		return &v
	}).(ServiceIamBindingConditionArgsPtrOutput)
}
func (o ServiceIamBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type ServiceIamBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (ServiceIamBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIamBindingConditionArgs)(nil)).Elem()
}

func (o ServiceIamBindingConditionArgsPtrOutput) ToServiceIamBindingConditionArgsPtrOutput() ServiceIamBindingConditionArgsPtrOutput {
	return o
}

func (o ServiceIamBindingConditionArgsPtrOutput) ToServiceIamBindingConditionArgsPtrOutputWithContext(ctx context.Context) ServiceIamBindingConditionArgsPtrOutput {
	return o
}

func (o ServiceIamBindingConditionArgsPtrOutput) Elem() ServiceIamBindingConditionArgsOutput {
	return o.ApplyT(func(v *ServiceIamBindingConditionArgs) ServiceIamBindingConditionArgs { return *v }).(ServiceIamBindingConditionArgsOutput)
}

func (o ServiceIamBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type ServiceIamBindingConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ServiceIamBindingConditionStateInput interface {
	pulumi.Input

	ToServiceIamBindingConditionStateOutput() ServiceIamBindingConditionStateOutput
	ToServiceIamBindingConditionStateOutputWithContext(context.Context) ServiceIamBindingConditionStateOutput
}

type ServiceIamBindingConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ServiceIamBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamBindingConditionState)(nil)).Elem()
}

func (i ServiceIamBindingConditionStateArgs) ToServiceIamBindingConditionStateOutput() ServiceIamBindingConditionStateOutput {
	return i.ToServiceIamBindingConditionStateOutputWithContext(context.Background())
}

func (i ServiceIamBindingConditionStateArgs) ToServiceIamBindingConditionStateOutputWithContext(ctx context.Context) ServiceIamBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamBindingConditionStateOutput)
}

type ServiceIamBindingConditionStateOutput struct{ *pulumi.OutputState }

func (ServiceIamBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamBindingConditionState)(nil)).Elem()
}

func (o ServiceIamBindingConditionStateOutput) ToServiceIamBindingConditionStateOutput() ServiceIamBindingConditionStateOutput {
	return o
}

func (o ServiceIamBindingConditionStateOutput) ToServiceIamBindingConditionStateOutputWithContext(ctx context.Context) ServiceIamBindingConditionStateOutput {
	return o
}

func (o ServiceIamBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type ServiceIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ServiceIamMemberConditionInput interface {
	pulumi.Input

	ToServiceIamMemberConditionOutput() ServiceIamMemberConditionOutput
	ToServiceIamMemberConditionOutputWithContext(context.Context) ServiceIamMemberConditionOutput
}

type ServiceIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ServiceIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamMemberCondition)(nil)).Elem()
}

func (i ServiceIamMemberConditionArgs) ToServiceIamMemberConditionOutput() ServiceIamMemberConditionOutput {
	return i.ToServiceIamMemberConditionOutputWithContext(context.Background())
}

func (i ServiceIamMemberConditionArgs) ToServiceIamMemberConditionOutputWithContext(ctx context.Context) ServiceIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamMemberConditionOutput)
}

func (i ServiceIamMemberConditionArgs) ToServiceIamMemberConditionPtrOutput() ServiceIamMemberConditionPtrOutput {
	return i.ToServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i ServiceIamMemberConditionArgs) ToServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) ServiceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamMemberConditionOutput).ToServiceIamMemberConditionPtrOutputWithContext(ctx)
}

type ServiceIamMemberConditionPtrInput interface {
	pulumi.Input

	ToServiceIamMemberConditionPtrOutput() ServiceIamMemberConditionPtrOutput
	ToServiceIamMemberConditionPtrOutputWithContext(context.Context) ServiceIamMemberConditionPtrOutput
}

type serviceIamMemberConditionPtrType ServiceIamMemberConditionArgs

func ServiceIamMemberConditionPtr(v *ServiceIamMemberConditionArgs) ServiceIamMemberConditionPtrInput {
	return (*serviceIamMemberConditionPtrType)(v)
}

func (*serviceIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIamMemberCondition)(nil)).Elem()
}

func (i *serviceIamMemberConditionPtrType) ToServiceIamMemberConditionPtrOutput() ServiceIamMemberConditionPtrOutput {
	return i.ToServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *serviceIamMemberConditionPtrType) ToServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) ServiceIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamMemberConditionPtrOutput)
}

type ServiceIamMemberConditionOutput struct{ *pulumi.OutputState }

func (ServiceIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamMemberCondition)(nil)).Elem()
}

func (o ServiceIamMemberConditionOutput) ToServiceIamMemberConditionOutput() ServiceIamMemberConditionOutput {
	return o
}

func (o ServiceIamMemberConditionOutput) ToServiceIamMemberConditionOutputWithContext(ctx context.Context) ServiceIamMemberConditionOutput {
	return o
}

func (o ServiceIamMemberConditionOutput) ToServiceIamMemberConditionPtrOutput() ServiceIamMemberConditionPtrOutput {
	return o.ToServiceIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o ServiceIamMemberConditionOutput) ToServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) ServiceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v ServiceIamMemberCondition) *ServiceIamMemberCondition {
		return &v
	}).(ServiceIamMemberConditionPtrOutput)
}
func (o ServiceIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ServiceIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (ServiceIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIamMemberCondition)(nil)).Elem()
}

func (o ServiceIamMemberConditionPtrOutput) ToServiceIamMemberConditionPtrOutput() ServiceIamMemberConditionPtrOutput {
	return o
}

func (o ServiceIamMemberConditionPtrOutput) ToServiceIamMemberConditionPtrOutputWithContext(ctx context.Context) ServiceIamMemberConditionPtrOutput {
	return o
}

func (o ServiceIamMemberConditionPtrOutput) Elem() ServiceIamMemberConditionOutput {
	return o.ApplyT(func(v *ServiceIamMemberCondition) ServiceIamMemberCondition { return *v }).(ServiceIamMemberConditionOutput)
}

func (o ServiceIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ServiceIamMemberConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ServiceIamMemberConditionArgsInput interface {
	pulumi.Input

	ToServiceIamMemberConditionArgsOutput() ServiceIamMemberConditionArgsOutput
	ToServiceIamMemberConditionArgsOutputWithContext(context.Context) ServiceIamMemberConditionArgsOutput
}

type ServiceIamMemberConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ServiceIamMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamMemberConditionArgs)(nil)).Elem()
}

func (i ServiceIamMemberConditionArgsArgs) ToServiceIamMemberConditionArgsOutput() ServiceIamMemberConditionArgsOutput {
	return i.ToServiceIamMemberConditionArgsOutputWithContext(context.Background())
}

func (i ServiceIamMemberConditionArgsArgs) ToServiceIamMemberConditionArgsOutputWithContext(ctx context.Context) ServiceIamMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamMemberConditionArgsOutput)
}

func (i ServiceIamMemberConditionArgsArgs) ToServiceIamMemberConditionArgsPtrOutput() ServiceIamMemberConditionArgsPtrOutput {
	return i.ToServiceIamMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i ServiceIamMemberConditionArgsArgs) ToServiceIamMemberConditionArgsPtrOutputWithContext(ctx context.Context) ServiceIamMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamMemberConditionArgsOutput).ToServiceIamMemberConditionArgsPtrOutputWithContext(ctx)
}

type ServiceIamMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToServiceIamMemberConditionArgsPtrOutput() ServiceIamMemberConditionArgsPtrOutput
	ToServiceIamMemberConditionArgsPtrOutputWithContext(context.Context) ServiceIamMemberConditionArgsPtrOutput
}

type serviceIamMemberConditionArgsPtrType ServiceIamMemberConditionArgsArgs

func ServiceIamMemberConditionArgsPtr(v *ServiceIamMemberConditionArgsArgs) ServiceIamMemberConditionArgsPtrInput {
	return (*serviceIamMemberConditionArgsPtrType)(v)
}

func (*serviceIamMemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIamMemberConditionArgs)(nil)).Elem()
}

func (i *serviceIamMemberConditionArgsPtrType) ToServiceIamMemberConditionArgsPtrOutput() ServiceIamMemberConditionArgsPtrOutput {
	return i.ToServiceIamMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *serviceIamMemberConditionArgsPtrType) ToServiceIamMemberConditionArgsPtrOutputWithContext(ctx context.Context) ServiceIamMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamMemberConditionArgsPtrOutput)
}

type ServiceIamMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (ServiceIamMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamMemberConditionArgs)(nil)).Elem()
}

func (o ServiceIamMemberConditionArgsOutput) ToServiceIamMemberConditionArgsOutput() ServiceIamMemberConditionArgsOutput {
	return o
}

func (o ServiceIamMemberConditionArgsOutput) ToServiceIamMemberConditionArgsOutputWithContext(ctx context.Context) ServiceIamMemberConditionArgsOutput {
	return o
}

func (o ServiceIamMemberConditionArgsOutput) ToServiceIamMemberConditionArgsPtrOutput() ServiceIamMemberConditionArgsPtrOutput {
	return o.ToServiceIamMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o ServiceIamMemberConditionArgsOutput) ToServiceIamMemberConditionArgsPtrOutputWithContext(ctx context.Context) ServiceIamMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionArgs) *ServiceIamMemberConditionArgs {
		return &v
	}).(ServiceIamMemberConditionArgsPtrOutput)
}
func (o ServiceIamMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type ServiceIamMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (ServiceIamMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIamMemberConditionArgs)(nil)).Elem()
}

func (o ServiceIamMemberConditionArgsPtrOutput) ToServiceIamMemberConditionArgsPtrOutput() ServiceIamMemberConditionArgsPtrOutput {
	return o
}

func (o ServiceIamMemberConditionArgsPtrOutput) ToServiceIamMemberConditionArgsPtrOutputWithContext(ctx context.Context) ServiceIamMemberConditionArgsPtrOutput {
	return o
}

func (o ServiceIamMemberConditionArgsPtrOutput) Elem() ServiceIamMemberConditionArgsOutput {
	return o.ApplyT(func(v *ServiceIamMemberConditionArgs) ServiceIamMemberConditionArgs { return *v }).(ServiceIamMemberConditionArgsOutput)
}

func (o ServiceIamMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type ServiceIamMemberConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ServiceIamMemberConditionStateInput interface {
	pulumi.Input

	ToServiceIamMemberConditionStateOutput() ServiceIamMemberConditionStateOutput
	ToServiceIamMemberConditionStateOutputWithContext(context.Context) ServiceIamMemberConditionStateOutput
}

type ServiceIamMemberConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ServiceIamMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamMemberConditionState)(nil)).Elem()
}

func (i ServiceIamMemberConditionStateArgs) ToServiceIamMemberConditionStateOutput() ServiceIamMemberConditionStateOutput {
	return i.ToServiceIamMemberConditionStateOutputWithContext(context.Background())
}

func (i ServiceIamMemberConditionStateArgs) ToServiceIamMemberConditionStateOutputWithContext(ctx context.Context) ServiceIamMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIamMemberConditionStateOutput)
}

type ServiceIamMemberConditionStateOutput struct{ *pulumi.OutputState }

func (ServiceIamMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIamMemberConditionState)(nil)).Elem()
}

func (o ServiceIamMemberConditionStateOutput) ToServiceIamMemberConditionStateOutput() ServiceIamMemberConditionStateOutput {
	return o
}

func (o ServiceIamMemberConditionStateOutput) ToServiceIamMemberConditionStateOutputWithContext(ctx context.Context) ServiceIamMemberConditionStateOutput {
	return o
}

func (o ServiceIamMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceIamMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ServiceIamMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIamMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceApiOutput{})
	pulumi.RegisterOutputType(ServiceApiArrayOutput{})
	pulumi.RegisterOutputType(ServiceApiMethodOutput{})
	pulumi.RegisterOutputType(ServiceApiMethodArrayOutput{})
	pulumi.RegisterOutputType(ServiceApiStateOutput{})
	pulumi.RegisterOutputType(ServiceApiStateArrayOutput{})
	pulumi.RegisterOutputType(ServiceApiStateMethodOutput{})
	pulumi.RegisterOutputType(ServiceApiStateMethodArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointOutput{})
	pulumi.RegisterOutputType(ServiceEndpointArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointStateOutput{})
	pulumi.RegisterOutputType(ServiceEndpointStateArrayOutput{})
	pulumi.RegisterOutputType(ServiceIamBindingConditionOutput{})
	pulumi.RegisterOutputType(ServiceIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(ServiceIamBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(ServiceIamBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(ServiceIamBindingConditionStateOutput{})
	pulumi.RegisterOutputType(ServiceIamMemberConditionOutput{})
	pulumi.RegisterOutputType(ServiceIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(ServiceIamMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(ServiceIamMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(ServiceIamMemberConditionStateOutput{})
}
