// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ServiceApiMethod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ServiceApiMethod struct {
	Name *string `pulumi:"name"`
	RequestType *string `pulumi:"requestType"`
	ResponseType *string `pulumi:"responseType"`
	Syntax *string `pulumi:"syntax"`
}

type ServiceApiMethodInput interface {
	pulumi.Input

	ToServiceApiMethodOutput() ServiceApiMethodOutput
	ToServiceApiMethodOutputWithContext(context.Context) ServiceApiMethodOutput
}

type ServiceApiMethodArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
	RequestType pulumi.StringPtrInput `pulumi:"requestType"`
	ResponseType pulumi.StringPtrInput `pulumi:"responseType"`
	Syntax pulumi.StringPtrInput `pulumi:"syntax"`
}

func (ServiceApiMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiMethod)(nil)).Elem()
}

func (i ServiceApiMethodArgs) ToServiceApiMethodOutput() ServiceApiMethodOutput {
	return i.ToServiceApiMethodOutputWithContext(context.Background())
}

func (i ServiceApiMethodArgs) ToServiceApiMethodOutputWithContext(ctx context.Context) ServiceApiMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiMethodOutput)
}

type ServiceApiMethodArrayInput interface {
	pulumi.Input

	ToServiceApiMethodArrayOutput() ServiceApiMethodArrayOutput
	ToServiceApiMethodArrayOutputWithContext(context.Context) ServiceApiMethodArrayOutput
}

type ServiceApiMethodArray []ServiceApiMethodInput

func (ServiceApiMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiMethod)(nil)).Elem()
}

func (i ServiceApiMethodArray) ToServiceApiMethodArrayOutput() ServiceApiMethodArrayOutput {
	return i.ToServiceApiMethodArrayOutputWithContext(context.Background())
}

func (i ServiceApiMethodArray) ToServiceApiMethodArrayOutputWithContext(ctx context.Context) ServiceApiMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceApiMethodArrayOutput)
}

type ServiceApiMethodOutput struct { *pulumi.OutputState }

func (ServiceApiMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceApiMethod)(nil)).Elem()
}

func (o ServiceApiMethodOutput) ToServiceApiMethodOutput() ServiceApiMethodOutput {
	return o
}

func (o ServiceApiMethodOutput) ToServiceApiMethodOutputWithContext(ctx context.Context) ServiceApiMethodOutput {
	return o
}

func (o ServiceApiMethodOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceApiMethod) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServiceApiMethodOutput) RequestType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceApiMethod) *string { return v.RequestType }).(pulumi.StringPtrOutput)
}

func (o ServiceApiMethodOutput) ResponseType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceApiMethod) *string { return v.ResponseType }).(pulumi.StringPtrOutput)
}

func (o ServiceApiMethodOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceApiMethod) *string { return v.Syntax }).(pulumi.StringPtrOutput)
}

type ServiceApiMethodArrayOutput struct { *pulumi.OutputState}

func (ServiceApiMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceApiMethod)(nil)).Elem()
}

func (o ServiceApiMethodArrayOutput) ToServiceApiMethodArrayOutput() ServiceApiMethodArrayOutput {
	return o
}

func (o ServiceApiMethodArrayOutput) ToServiceApiMethodArrayOutputWithContext(ctx context.Context) ServiceApiMethodArrayOutput {
	return o
}

func (o ServiceApiMethodArrayOutput) Index(i pulumi.IntInput) ServiceApiMethodOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceApiMethod {
		return vs[0].([]ServiceApiMethod)[vs[1].(int)]
	}).(ServiceApiMethodOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceApiMethodOutput{})
	pulumi.RegisterOutputType(ServiceApiMethodArrayOutput{})
}
