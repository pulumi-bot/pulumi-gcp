// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RegistryCredential

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/kms/RegistryCredentialPublicKeyCertificate"
)

type RegistryCredential struct {
	PublicKeyCertificate kmsRegistryCredentialPublicKeyCertificate.RegistryCredentialPublicKeyCertificate `pulumi:"publicKeyCertificate"`
}

type RegistryCredentialInput interface {
	pulumi.Input

	ToRegistryCredentialOutput() RegistryCredentialOutput
	ToRegistryCredentialOutputWithContext(context.Context) RegistryCredentialOutput
}

type RegistryCredentialArgs struct {
	PublicKeyCertificate kmsRegistryCredentialPublicKeyCertificate.RegistryCredentialPublicKeyCertificateInput `pulumi:"publicKeyCertificate"`
}

func (RegistryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryCredential)(nil)).Elem()
}

func (i RegistryCredentialArgs) ToRegistryCredentialOutput() RegistryCredentialOutput {
	return i.ToRegistryCredentialOutputWithContext(context.Background())
}

func (i RegistryCredentialArgs) ToRegistryCredentialOutputWithContext(ctx context.Context) RegistryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryCredentialOutput)
}

type RegistryCredentialArrayInput interface {
	pulumi.Input

	ToRegistryCredentialArrayOutput() RegistryCredentialArrayOutput
	ToRegistryCredentialArrayOutputWithContext(context.Context) RegistryCredentialArrayOutput
}

type RegistryCredentialArray []RegistryCredentialInput

func (RegistryCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryCredential)(nil)).Elem()
}

func (i RegistryCredentialArray) ToRegistryCredentialArrayOutput() RegistryCredentialArrayOutput {
	return i.ToRegistryCredentialArrayOutputWithContext(context.Background())
}

func (i RegistryCredentialArray) ToRegistryCredentialArrayOutputWithContext(ctx context.Context) RegistryCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryCredentialArrayOutput)
}

type RegistryCredentialOutput struct { *pulumi.OutputState }

func (RegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryCredential)(nil)).Elem()
}

func (o RegistryCredentialOutput) ToRegistryCredentialOutput() RegistryCredentialOutput {
	return o
}

func (o RegistryCredentialOutput) ToRegistryCredentialOutputWithContext(ctx context.Context) RegistryCredentialOutput {
	return o
}

func (o RegistryCredentialOutput) PublicKeyCertificate() kmsRegistryCredentialPublicKeyCertificate.RegistryCredentialPublicKeyCertificateOutput {
	return o.ApplyT(func (v RegistryCredential) kmsRegistryCredentialPublicKeyCertificate.RegistryCredentialPublicKeyCertificate { return v.PublicKeyCertificate }).(kmsRegistryCredentialPublicKeyCertificate.RegistryCredentialPublicKeyCertificateOutput)
}

type RegistryCredentialArrayOutput struct { *pulumi.OutputState}

func (RegistryCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryCredential)(nil)).Elem()
}

func (o RegistryCredentialArrayOutput) ToRegistryCredentialArrayOutput() RegistryCredentialArrayOutput {
	return o
}

func (o RegistryCredentialArrayOutput) ToRegistryCredentialArrayOutputWithContext(ctx context.Context) RegistryCredentialArrayOutput {
	return o
}

func (o RegistryCredentialArrayOutput) Index(i pulumi.IntInput) RegistryCredentialOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RegistryCredential {
		return vs[0].([]RegistryCredential)[vs[1].(int)]
	}).(RegistryCredentialOutput)
}

func init() {
	pulumi.RegisterOutputType(RegistryCredentialOutput{})
	pulumi.RegisterOutputType(RegistryCredentialArrayOutput{})
}
