// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package CryptoKeyVersionTemplate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type CryptoKeyVersionTemplate struct {
	Algorithm string `pulumi:"algorithm"`
	ProtectionLevel *string `pulumi:"protectionLevel"`
}

type CryptoKeyVersionTemplateInput interface {
	pulumi.Input

	ToCryptoKeyVersionTemplateOutput() CryptoKeyVersionTemplateOutput
	ToCryptoKeyVersionTemplateOutputWithContext(context.Context) CryptoKeyVersionTemplateOutput
}

type CryptoKeyVersionTemplateArgs struct {
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	ProtectionLevel pulumi.StringPtrInput `pulumi:"protectionLevel"`
}

func (CryptoKeyVersionTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CryptoKeyVersionTemplate)(nil)).Elem()
}

func (i CryptoKeyVersionTemplateArgs) ToCryptoKeyVersionTemplateOutput() CryptoKeyVersionTemplateOutput {
	return i.ToCryptoKeyVersionTemplateOutputWithContext(context.Background())
}

func (i CryptoKeyVersionTemplateArgs) ToCryptoKeyVersionTemplateOutputWithContext(ctx context.Context) CryptoKeyVersionTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CryptoKeyVersionTemplateOutput)
}

func (i CryptoKeyVersionTemplateArgs) ToCryptoKeyVersionTemplatePtrOutput() CryptoKeyVersionTemplatePtrOutput {
	return i.ToCryptoKeyVersionTemplatePtrOutputWithContext(context.Background())
}

func (i CryptoKeyVersionTemplateArgs) ToCryptoKeyVersionTemplatePtrOutputWithContext(ctx context.Context) CryptoKeyVersionTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CryptoKeyVersionTemplateOutput).ToCryptoKeyVersionTemplatePtrOutputWithContext(ctx)
}

type CryptoKeyVersionTemplatePtrInput interface {
	pulumi.Input

	ToCryptoKeyVersionTemplatePtrOutput() CryptoKeyVersionTemplatePtrOutput
	ToCryptoKeyVersionTemplatePtrOutputWithContext(context.Context) CryptoKeyVersionTemplatePtrOutput
}

type cryptoKeyVersionTemplatePtrType CryptoKeyVersionTemplateArgs

func CryptoKeyVersionTemplatePtr(v *CryptoKeyVersionTemplateArgs) CryptoKeyVersionTemplatePtrInput {	return (*cryptoKeyVersionTemplatePtrType)(v)
}

func (*cryptoKeyVersionTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CryptoKeyVersionTemplate)(nil)).Elem()
}

func (i *cryptoKeyVersionTemplatePtrType) ToCryptoKeyVersionTemplatePtrOutput() CryptoKeyVersionTemplatePtrOutput {
	return i.ToCryptoKeyVersionTemplatePtrOutputWithContext(context.Background())
}

func (i *cryptoKeyVersionTemplatePtrType) ToCryptoKeyVersionTemplatePtrOutputWithContext(ctx context.Context) CryptoKeyVersionTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CryptoKeyVersionTemplatePtrOutput)
}

type CryptoKeyVersionTemplateOutput struct { *pulumi.OutputState }

func (CryptoKeyVersionTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CryptoKeyVersionTemplate)(nil)).Elem()
}

func (o CryptoKeyVersionTemplateOutput) ToCryptoKeyVersionTemplateOutput() CryptoKeyVersionTemplateOutput {
	return o
}

func (o CryptoKeyVersionTemplateOutput) ToCryptoKeyVersionTemplateOutputWithContext(ctx context.Context) CryptoKeyVersionTemplateOutput {
	return o
}

func (o CryptoKeyVersionTemplateOutput) ToCryptoKeyVersionTemplatePtrOutput() CryptoKeyVersionTemplatePtrOutput {
	return o.ToCryptoKeyVersionTemplatePtrOutputWithContext(context.Background())
}

func (o CryptoKeyVersionTemplateOutput) ToCryptoKeyVersionTemplatePtrOutputWithContext(ctx context.Context) CryptoKeyVersionTemplatePtrOutput {
	return o.ApplyT(func(v CryptoKeyVersionTemplate) *CryptoKeyVersionTemplate {
		return &v
	}).(CryptoKeyVersionTemplatePtrOutput)
}
func (o CryptoKeyVersionTemplateOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func (v CryptoKeyVersionTemplate) string { return v.Algorithm }).(pulumi.StringOutput)
}

func (o CryptoKeyVersionTemplateOutput) ProtectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CryptoKeyVersionTemplate) *string { return v.ProtectionLevel }).(pulumi.StringPtrOutput)
}

type CryptoKeyVersionTemplatePtrOutput struct { *pulumi.OutputState}

func (CryptoKeyVersionTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CryptoKeyVersionTemplate)(nil)).Elem()
}

func (o CryptoKeyVersionTemplatePtrOutput) ToCryptoKeyVersionTemplatePtrOutput() CryptoKeyVersionTemplatePtrOutput {
	return o
}

func (o CryptoKeyVersionTemplatePtrOutput) ToCryptoKeyVersionTemplatePtrOutputWithContext(ctx context.Context) CryptoKeyVersionTemplatePtrOutput {
	return o
}

func (o CryptoKeyVersionTemplatePtrOutput) Elem() CryptoKeyVersionTemplateOutput {
	return o.ApplyT(func (v *CryptoKeyVersionTemplate) CryptoKeyVersionTemplate { return *v }).(CryptoKeyVersionTemplateOutput)
}

func (o CryptoKeyVersionTemplatePtrOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func (v CryptoKeyVersionTemplate) string { return v.Algorithm }).(pulumi.StringOutput)
}

func (o CryptoKeyVersionTemplatePtrOutput) ProtectionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CryptoKeyVersionTemplate) *string { return v.ProtectionLevel }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CryptoKeyVersionTemplateOutput{})
	pulumi.RegisterOutputType(CryptoKeyVersionTemplatePtrOutput{})
}
