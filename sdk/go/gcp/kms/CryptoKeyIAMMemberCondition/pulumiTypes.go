// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package CryptoKeyIAMMemberCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type CryptoKeyIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type CryptoKeyIAMMemberConditionInput interface {
	pulumi.Input

	ToCryptoKeyIAMMemberConditionOutput() CryptoKeyIAMMemberConditionOutput
	ToCryptoKeyIAMMemberConditionOutputWithContext(context.Context) CryptoKeyIAMMemberConditionOutput
}

type CryptoKeyIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (CryptoKeyIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CryptoKeyIAMMemberCondition)(nil)).Elem()
}

func (i CryptoKeyIAMMemberConditionArgs) ToCryptoKeyIAMMemberConditionOutput() CryptoKeyIAMMemberConditionOutput {
	return i.ToCryptoKeyIAMMemberConditionOutputWithContext(context.Background())
}

func (i CryptoKeyIAMMemberConditionArgs) ToCryptoKeyIAMMemberConditionOutputWithContext(ctx context.Context) CryptoKeyIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CryptoKeyIAMMemberConditionOutput)
}

func (i CryptoKeyIAMMemberConditionArgs) ToCryptoKeyIAMMemberConditionPtrOutput() CryptoKeyIAMMemberConditionPtrOutput {
	return i.ToCryptoKeyIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i CryptoKeyIAMMemberConditionArgs) ToCryptoKeyIAMMemberConditionPtrOutputWithContext(ctx context.Context) CryptoKeyIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CryptoKeyIAMMemberConditionOutput).ToCryptoKeyIAMMemberConditionPtrOutputWithContext(ctx)
}

type CryptoKeyIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToCryptoKeyIAMMemberConditionPtrOutput() CryptoKeyIAMMemberConditionPtrOutput
	ToCryptoKeyIAMMemberConditionPtrOutputWithContext(context.Context) CryptoKeyIAMMemberConditionPtrOutput
}

type cryptoKeyIAMMemberConditionPtrType CryptoKeyIAMMemberConditionArgs

func CryptoKeyIAMMemberConditionPtr(v *CryptoKeyIAMMemberConditionArgs) CryptoKeyIAMMemberConditionPtrInput {	return (*cryptoKeyIAMMemberConditionPtrType)(v)
}

func (*cryptoKeyIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CryptoKeyIAMMemberCondition)(nil)).Elem()
}

func (i *cryptoKeyIAMMemberConditionPtrType) ToCryptoKeyIAMMemberConditionPtrOutput() CryptoKeyIAMMemberConditionPtrOutput {
	return i.ToCryptoKeyIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *cryptoKeyIAMMemberConditionPtrType) ToCryptoKeyIAMMemberConditionPtrOutputWithContext(ctx context.Context) CryptoKeyIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CryptoKeyIAMMemberConditionPtrOutput)
}

type CryptoKeyIAMMemberConditionOutput struct { *pulumi.OutputState }

func (CryptoKeyIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CryptoKeyIAMMemberCondition)(nil)).Elem()
}

func (o CryptoKeyIAMMemberConditionOutput) ToCryptoKeyIAMMemberConditionOutput() CryptoKeyIAMMemberConditionOutput {
	return o
}

func (o CryptoKeyIAMMemberConditionOutput) ToCryptoKeyIAMMemberConditionOutputWithContext(ctx context.Context) CryptoKeyIAMMemberConditionOutput {
	return o
}

func (o CryptoKeyIAMMemberConditionOutput) ToCryptoKeyIAMMemberConditionPtrOutput() CryptoKeyIAMMemberConditionPtrOutput {
	return o.ToCryptoKeyIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o CryptoKeyIAMMemberConditionOutput) ToCryptoKeyIAMMemberConditionPtrOutputWithContext(ctx context.Context) CryptoKeyIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v CryptoKeyIAMMemberCondition) *CryptoKeyIAMMemberCondition {
		return &v
	}).(CryptoKeyIAMMemberConditionPtrOutput)
}
func (o CryptoKeyIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CryptoKeyIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CryptoKeyIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v CryptoKeyIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o CryptoKeyIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v CryptoKeyIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type CryptoKeyIAMMemberConditionPtrOutput struct { *pulumi.OutputState}

func (CryptoKeyIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CryptoKeyIAMMemberCondition)(nil)).Elem()
}

func (o CryptoKeyIAMMemberConditionPtrOutput) ToCryptoKeyIAMMemberConditionPtrOutput() CryptoKeyIAMMemberConditionPtrOutput {
	return o
}

func (o CryptoKeyIAMMemberConditionPtrOutput) ToCryptoKeyIAMMemberConditionPtrOutputWithContext(ctx context.Context) CryptoKeyIAMMemberConditionPtrOutput {
	return o
}

func (o CryptoKeyIAMMemberConditionPtrOutput) Elem() CryptoKeyIAMMemberConditionOutput {
	return o.ApplyT(func (v *CryptoKeyIAMMemberCondition) CryptoKeyIAMMemberCondition { return *v }).(CryptoKeyIAMMemberConditionOutput)
}

func (o CryptoKeyIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CryptoKeyIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CryptoKeyIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v CryptoKeyIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o CryptoKeyIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v CryptoKeyIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CryptoKeyIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(CryptoKeyIAMMemberConditionPtrOutput{})
}
