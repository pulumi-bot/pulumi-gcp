// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package KeyRingIAMBindingCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type KeyRingIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type KeyRingIAMBindingConditionInput interface {
	pulumi.Input

	ToKeyRingIAMBindingConditionOutput() KeyRingIAMBindingConditionOutput
	ToKeyRingIAMBindingConditionOutputWithContext(context.Context) KeyRingIAMBindingConditionOutput
}

type KeyRingIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (KeyRingIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyRingIAMBindingCondition)(nil)).Elem()
}

func (i KeyRingIAMBindingConditionArgs) ToKeyRingIAMBindingConditionOutput() KeyRingIAMBindingConditionOutput {
	return i.ToKeyRingIAMBindingConditionOutputWithContext(context.Background())
}

func (i KeyRingIAMBindingConditionArgs) ToKeyRingIAMBindingConditionOutputWithContext(ctx context.Context) KeyRingIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRingIAMBindingConditionOutput)
}

func (i KeyRingIAMBindingConditionArgs) ToKeyRingIAMBindingConditionPtrOutput() KeyRingIAMBindingConditionPtrOutput {
	return i.ToKeyRingIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i KeyRingIAMBindingConditionArgs) ToKeyRingIAMBindingConditionPtrOutputWithContext(ctx context.Context) KeyRingIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRingIAMBindingConditionOutput).ToKeyRingIAMBindingConditionPtrOutputWithContext(ctx)
}

type KeyRingIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToKeyRingIAMBindingConditionPtrOutput() KeyRingIAMBindingConditionPtrOutput
	ToKeyRingIAMBindingConditionPtrOutputWithContext(context.Context) KeyRingIAMBindingConditionPtrOutput
}

type keyRingIAMBindingConditionPtrType KeyRingIAMBindingConditionArgs

func KeyRingIAMBindingConditionPtr(v *KeyRingIAMBindingConditionArgs) KeyRingIAMBindingConditionPtrInput {	return (*keyRingIAMBindingConditionPtrType)(v)
}

func (*keyRingIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyRingIAMBindingCondition)(nil)).Elem()
}

func (i *keyRingIAMBindingConditionPtrType) ToKeyRingIAMBindingConditionPtrOutput() KeyRingIAMBindingConditionPtrOutput {
	return i.ToKeyRingIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *keyRingIAMBindingConditionPtrType) ToKeyRingIAMBindingConditionPtrOutputWithContext(ctx context.Context) KeyRingIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRingIAMBindingConditionPtrOutput)
}

type KeyRingIAMBindingConditionOutput struct { *pulumi.OutputState }

func (KeyRingIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyRingIAMBindingCondition)(nil)).Elem()
}

func (o KeyRingIAMBindingConditionOutput) ToKeyRingIAMBindingConditionOutput() KeyRingIAMBindingConditionOutput {
	return o
}

func (o KeyRingIAMBindingConditionOutput) ToKeyRingIAMBindingConditionOutputWithContext(ctx context.Context) KeyRingIAMBindingConditionOutput {
	return o
}

func (o KeyRingIAMBindingConditionOutput) ToKeyRingIAMBindingConditionPtrOutput() KeyRingIAMBindingConditionPtrOutput {
	return o.ToKeyRingIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o KeyRingIAMBindingConditionOutput) ToKeyRingIAMBindingConditionPtrOutputWithContext(ctx context.Context) KeyRingIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v KeyRingIAMBindingCondition) *KeyRingIAMBindingCondition {
		return &v
	}).(KeyRingIAMBindingConditionPtrOutput)
}
func (o KeyRingIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v KeyRingIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o KeyRingIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v KeyRingIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o KeyRingIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v KeyRingIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type KeyRingIAMBindingConditionPtrOutput struct { *pulumi.OutputState}

func (KeyRingIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyRingIAMBindingCondition)(nil)).Elem()
}

func (o KeyRingIAMBindingConditionPtrOutput) ToKeyRingIAMBindingConditionPtrOutput() KeyRingIAMBindingConditionPtrOutput {
	return o
}

func (o KeyRingIAMBindingConditionPtrOutput) ToKeyRingIAMBindingConditionPtrOutputWithContext(ctx context.Context) KeyRingIAMBindingConditionPtrOutput {
	return o
}

func (o KeyRingIAMBindingConditionPtrOutput) Elem() KeyRingIAMBindingConditionOutput {
	return o.ApplyT(func (v *KeyRingIAMBindingCondition) KeyRingIAMBindingCondition { return *v }).(KeyRingIAMBindingConditionOutput)
}

func (o KeyRingIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v KeyRingIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o KeyRingIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v KeyRingIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o KeyRingIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v KeyRingIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(KeyRingIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(KeyRingIAMBindingConditionPtrOutput{})
}
