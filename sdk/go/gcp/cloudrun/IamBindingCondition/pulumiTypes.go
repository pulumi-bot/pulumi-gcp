// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package IamBindingCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type IamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type IamBindingConditionInput interface {
	pulumi.Input

	ToIamBindingConditionOutput() IamBindingConditionOutput
	ToIamBindingConditionOutputWithContext(context.Context) IamBindingConditionOutput
}

type IamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (IamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamBindingCondition)(nil)).Elem()
}

func (i IamBindingConditionArgs) ToIamBindingConditionOutput() IamBindingConditionOutput {
	return i.ToIamBindingConditionOutputWithContext(context.Background())
}

func (i IamBindingConditionArgs) ToIamBindingConditionOutputWithContext(ctx context.Context) IamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamBindingConditionOutput)
}

func (i IamBindingConditionArgs) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return i.ToIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i IamBindingConditionArgs) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamBindingConditionOutput).ToIamBindingConditionPtrOutputWithContext(ctx)
}

type IamBindingConditionPtrInput interface {
	pulumi.Input

	ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput
	ToIamBindingConditionPtrOutputWithContext(context.Context) IamBindingConditionPtrOutput
}

type iamBindingConditionPtrType IamBindingConditionArgs

func IamBindingConditionPtr(v *IamBindingConditionArgs) IamBindingConditionPtrInput {	return (*iamBindingConditionPtrType)(v)
}

func (*iamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamBindingCondition)(nil)).Elem()
}

func (i *iamBindingConditionPtrType) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return i.ToIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *iamBindingConditionPtrType) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamBindingConditionPtrOutput)
}

type IamBindingConditionOutput struct { *pulumi.OutputState }

func (IamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamBindingCondition)(nil)).Elem()
}

func (o IamBindingConditionOutput) ToIamBindingConditionOutput() IamBindingConditionOutput {
	return o
}

func (o IamBindingConditionOutput) ToIamBindingConditionOutputWithContext(ctx context.Context) IamBindingConditionOutput {
	return o
}

func (o IamBindingConditionOutput) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return o.ToIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o IamBindingConditionOutput) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return o.ApplyT(func(v IamBindingCondition) *IamBindingCondition {
		return &v
	}).(IamBindingConditionPtrOutput)
}
func (o IamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v IamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v IamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type IamBindingConditionPtrOutput struct { *pulumi.OutputState}

func (IamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamBindingCondition)(nil)).Elem()
}

func (o IamBindingConditionPtrOutput) ToIamBindingConditionPtrOutput() IamBindingConditionPtrOutput {
	return o
}

func (o IamBindingConditionPtrOutput) ToIamBindingConditionPtrOutputWithContext(ctx context.Context) IamBindingConditionPtrOutput {
	return o
}

func (o IamBindingConditionPtrOutput) Elem() IamBindingConditionOutput {
	return o.ApplyT(func (v *IamBindingCondition) IamBindingCondition { return *v }).(IamBindingConditionOutput)
}

func (o IamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IamBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v IamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o IamBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v IamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(IamBindingConditionOutput{})
	pulumi.RegisterOutputType(IamBindingConditionPtrOutput{})
}
