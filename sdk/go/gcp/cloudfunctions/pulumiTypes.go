// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfunctions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type FunctionEventTrigger struct {
	// The type of event to observe. For example: `"google.storage.object.finalize"`.
	// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/) for a
	// full reference of accepted triggers.
	EventType string `pulumi:"eventType"`
	// Specifies policy for failed executions. Structure is documented below.
	FailurePolicy *FunctionEventTriggerFailurePolicy `pulumi:"failurePolicy"`
	// Required. The name or partial URI of the resource from
	// which to observe events. For example, `"myBucket"` or `"projects/my-project/topics/my-topic"`
	Resource string `pulumi:"resource"`
}

// FunctionEventTriggerInput is an input type that accepts FunctionEventTriggerArgs and FunctionEventTriggerOutput values.
// You can construct a concrete instance of `FunctionEventTriggerInput` via:
//
//          FunctionEventTriggerArgs{...}
type FunctionEventTriggerInput interface {
	pulumi.Input

	ToFunctionEventTriggerOutput() FunctionEventTriggerOutput
	ToFunctionEventTriggerOutputWithContext(context.Context) FunctionEventTriggerOutput
}

type FunctionEventTriggerArgs struct {
	// The type of event to observe. For example: `"google.storage.object.finalize"`.
	// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/) for a
	// full reference of accepted triggers.
	EventType pulumi.StringInput `pulumi:"eventType"`
	// Specifies policy for failed executions. Structure is documented below.
	FailurePolicy FunctionEventTriggerFailurePolicyPtrInput `pulumi:"failurePolicy"`
	// Required. The name or partial URI of the resource from
	// which to observe events. For example, `"myBucket"` or `"projects/my-project/topics/my-topic"`
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (FunctionEventTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventTrigger)(nil)).Elem()
}

func (i FunctionEventTriggerArgs) ToFunctionEventTriggerOutput() FunctionEventTriggerOutput {
	return i.ToFunctionEventTriggerOutputWithContext(context.Background())
}

func (i FunctionEventTriggerArgs) ToFunctionEventTriggerOutputWithContext(ctx context.Context) FunctionEventTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerOutput)
}

func (i FunctionEventTriggerArgs) ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput {
	return i.ToFunctionEventTriggerPtrOutputWithContext(context.Background())
}

func (i FunctionEventTriggerArgs) ToFunctionEventTriggerPtrOutputWithContext(ctx context.Context) FunctionEventTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerOutput).ToFunctionEventTriggerPtrOutputWithContext(ctx)
}

// FunctionEventTriggerPtrInput is an input type that accepts FunctionEventTriggerArgs, FunctionEventTriggerPtr and FunctionEventTriggerPtrOutput values.
// You can construct a concrete instance of `FunctionEventTriggerPtrInput` via:
//
//          FunctionEventTriggerArgs{...}
//
//  or:
//
//          nil
type FunctionEventTriggerPtrInput interface {
	pulumi.Input

	ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput
	ToFunctionEventTriggerPtrOutputWithContext(context.Context) FunctionEventTriggerPtrOutput
}

type functionEventTriggerPtrType FunctionEventTriggerArgs

func FunctionEventTriggerPtr(v *FunctionEventTriggerArgs) FunctionEventTriggerPtrInput {
	return (*functionEventTriggerPtrType)(v)
}

func (*functionEventTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventTrigger)(nil)).Elem()
}

func (i *functionEventTriggerPtrType) ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput {
	return i.ToFunctionEventTriggerPtrOutputWithContext(context.Background())
}

func (i *functionEventTriggerPtrType) ToFunctionEventTriggerPtrOutputWithContext(ctx context.Context) FunctionEventTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerPtrOutput)
}

type FunctionEventTriggerOutput struct{ *pulumi.OutputState }

func (FunctionEventTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventTrigger)(nil)).Elem()
}

func (o FunctionEventTriggerOutput) ToFunctionEventTriggerOutput() FunctionEventTriggerOutput {
	return o
}

func (o FunctionEventTriggerOutput) ToFunctionEventTriggerOutputWithContext(ctx context.Context) FunctionEventTriggerOutput {
	return o
}

func (o FunctionEventTriggerOutput) ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput {
	return o.ToFunctionEventTriggerPtrOutputWithContext(context.Background())
}

func (o FunctionEventTriggerOutput) ToFunctionEventTriggerPtrOutputWithContext(ctx context.Context) FunctionEventTriggerPtrOutput {
	return o.ApplyT(func(v FunctionEventTrigger) *FunctionEventTrigger {
		return &v
	}).(FunctionEventTriggerPtrOutput)
}

// The type of event to observe. For example: `"google.storage.object.finalize"`.
// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/) for a
// full reference of accepted triggers.
func (o FunctionEventTriggerOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEventTrigger) string { return v.EventType }).(pulumi.StringOutput)
}

// Specifies policy for failed executions. Structure is documented below.
func (o FunctionEventTriggerOutput) FailurePolicy() FunctionEventTriggerFailurePolicyPtrOutput {
	return o.ApplyT(func(v FunctionEventTrigger) *FunctionEventTriggerFailurePolicy { return v.FailurePolicy }).(FunctionEventTriggerFailurePolicyPtrOutput)
}

// Required. The name or partial URI of the resource from
// which to observe events. For example, `"myBucket"` or `"projects/my-project/topics/my-topic"`
func (o FunctionEventTriggerOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEventTrigger) string { return v.Resource }).(pulumi.StringOutput)
}

type FunctionEventTriggerPtrOutput struct{ *pulumi.OutputState }

func (FunctionEventTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventTrigger)(nil)).Elem()
}

func (o FunctionEventTriggerPtrOutput) ToFunctionEventTriggerPtrOutput() FunctionEventTriggerPtrOutput {
	return o
}

func (o FunctionEventTriggerPtrOutput) ToFunctionEventTriggerPtrOutputWithContext(ctx context.Context) FunctionEventTriggerPtrOutput {
	return o
}

func (o FunctionEventTriggerPtrOutput) Elem() FunctionEventTriggerOutput {
	return o.ApplyT(func(v *FunctionEventTrigger) FunctionEventTrigger { return *v }).(FunctionEventTriggerOutput)
}

// The type of event to observe. For example: `"google.storage.object.finalize"`.
// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/) for a
// full reference of accepted triggers.
func (o FunctionEventTriggerPtrOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEventTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.EventType
	}).(pulumi.StringPtrOutput)
}

// Specifies policy for failed executions. Structure is documented below.
func (o FunctionEventTriggerPtrOutput) FailurePolicy() FunctionEventTriggerFailurePolicyPtrOutput {
	return o.ApplyT(func(v *FunctionEventTrigger) *FunctionEventTriggerFailurePolicy {
		if v == nil {
			return nil
		}
		return v.FailurePolicy
	}).(FunctionEventTriggerFailurePolicyPtrOutput)
}

// Required. The name or partial URI of the resource from
// which to observe events. For example, `"myBucket"` or `"projects/my-project/topics/my-topic"`
func (o FunctionEventTriggerPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEventTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

type FunctionEventTriggerFailurePolicy struct {
	// Whether the function should be retried on failure. Defaults to `false`.
	Retry bool `pulumi:"retry"`
}

// FunctionEventTriggerFailurePolicyInput is an input type that accepts FunctionEventTriggerFailurePolicyArgs and FunctionEventTriggerFailurePolicyOutput values.
// You can construct a concrete instance of `FunctionEventTriggerFailurePolicyInput` via:
//
//          FunctionEventTriggerFailurePolicyArgs{...}
type FunctionEventTriggerFailurePolicyInput interface {
	pulumi.Input

	ToFunctionEventTriggerFailurePolicyOutput() FunctionEventTriggerFailurePolicyOutput
	ToFunctionEventTriggerFailurePolicyOutputWithContext(context.Context) FunctionEventTriggerFailurePolicyOutput
}

type FunctionEventTriggerFailurePolicyArgs struct {
	// Whether the function should be retried on failure. Defaults to `false`.
	Retry pulumi.BoolInput `pulumi:"retry"`
}

func (FunctionEventTriggerFailurePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (i FunctionEventTriggerFailurePolicyArgs) ToFunctionEventTriggerFailurePolicyOutput() FunctionEventTriggerFailurePolicyOutput {
	return i.ToFunctionEventTriggerFailurePolicyOutputWithContext(context.Background())
}

func (i FunctionEventTriggerFailurePolicyArgs) ToFunctionEventTriggerFailurePolicyOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerFailurePolicyOutput)
}

func (i FunctionEventTriggerFailurePolicyArgs) ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput {
	return i.ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(context.Background())
}

func (i FunctionEventTriggerFailurePolicyArgs) ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerFailurePolicyOutput).ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx)
}

// FunctionEventTriggerFailurePolicyPtrInput is an input type that accepts FunctionEventTriggerFailurePolicyArgs, FunctionEventTriggerFailurePolicyPtr and FunctionEventTriggerFailurePolicyPtrOutput values.
// You can construct a concrete instance of `FunctionEventTriggerFailurePolicyPtrInput` via:
//
//          FunctionEventTriggerFailurePolicyArgs{...}
//
//  or:
//
//          nil
type FunctionEventTriggerFailurePolicyPtrInput interface {
	pulumi.Input

	ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput
	ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(context.Context) FunctionEventTriggerFailurePolicyPtrOutput
}

type functionEventTriggerFailurePolicyPtrType FunctionEventTriggerFailurePolicyArgs

func FunctionEventTriggerFailurePolicyPtr(v *FunctionEventTriggerFailurePolicyArgs) FunctionEventTriggerFailurePolicyPtrInput {
	return (*functionEventTriggerFailurePolicyPtrType)(v)
}

func (*functionEventTriggerFailurePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (i *functionEventTriggerFailurePolicyPtrType) ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput {
	return i.ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(context.Background())
}

func (i *functionEventTriggerFailurePolicyPtrType) ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventTriggerFailurePolicyPtrOutput)
}

type FunctionEventTriggerFailurePolicyOutput struct{ *pulumi.OutputState }

func (FunctionEventTriggerFailurePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (o FunctionEventTriggerFailurePolicyOutput) ToFunctionEventTriggerFailurePolicyOutput() FunctionEventTriggerFailurePolicyOutput {
	return o
}

func (o FunctionEventTriggerFailurePolicyOutput) ToFunctionEventTriggerFailurePolicyOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyOutput {
	return o
}

func (o FunctionEventTriggerFailurePolicyOutput) ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput {
	return o.ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(context.Background())
}

func (o FunctionEventTriggerFailurePolicyOutput) ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyPtrOutput {
	return o.ApplyT(func(v FunctionEventTriggerFailurePolicy) *FunctionEventTriggerFailurePolicy {
		return &v
	}).(FunctionEventTriggerFailurePolicyPtrOutput)
}

// Whether the function should be retried on failure. Defaults to `false`.
func (o FunctionEventTriggerFailurePolicyOutput) Retry() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionEventTriggerFailurePolicy) bool { return v.Retry }).(pulumi.BoolOutput)
}

type FunctionEventTriggerFailurePolicyPtrOutput struct{ *pulumi.OutputState }

func (FunctionEventTriggerFailurePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventTriggerFailurePolicy)(nil)).Elem()
}

func (o FunctionEventTriggerFailurePolicyPtrOutput) ToFunctionEventTriggerFailurePolicyPtrOutput() FunctionEventTriggerFailurePolicyPtrOutput {
	return o
}

func (o FunctionEventTriggerFailurePolicyPtrOutput) ToFunctionEventTriggerFailurePolicyPtrOutputWithContext(ctx context.Context) FunctionEventTriggerFailurePolicyPtrOutput {
	return o
}

func (o FunctionEventTriggerFailurePolicyPtrOutput) Elem() FunctionEventTriggerFailurePolicyOutput {
	return o.ApplyT(func(v *FunctionEventTriggerFailurePolicy) FunctionEventTriggerFailurePolicy { return *v }).(FunctionEventTriggerFailurePolicyOutput)
}

// Whether the function should be retried on failure. Defaults to `false`.
func (o FunctionEventTriggerFailurePolicyPtrOutput) Retry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionEventTriggerFailurePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Retry
	}).(pulumi.BoolPtrOutput)
}

type FunctionIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// FunctionIamBindingConditionInput is an input type that accepts FunctionIamBindingConditionArgs and FunctionIamBindingConditionOutput values.
// You can construct a concrete instance of `FunctionIamBindingConditionInput` via:
//
//          FunctionIamBindingConditionArgs{...}
type FunctionIamBindingConditionInput interface {
	pulumi.Input

	ToFunctionIamBindingConditionOutput() FunctionIamBindingConditionOutput
	ToFunctionIamBindingConditionOutputWithContext(context.Context) FunctionIamBindingConditionOutput
}

type FunctionIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (FunctionIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionIamBindingCondition)(nil)).Elem()
}

func (i FunctionIamBindingConditionArgs) ToFunctionIamBindingConditionOutput() FunctionIamBindingConditionOutput {
	return i.ToFunctionIamBindingConditionOutputWithContext(context.Background())
}

func (i FunctionIamBindingConditionArgs) ToFunctionIamBindingConditionOutputWithContext(ctx context.Context) FunctionIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamBindingConditionOutput)
}

func (i FunctionIamBindingConditionArgs) ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput {
	return i.ToFunctionIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i FunctionIamBindingConditionArgs) ToFunctionIamBindingConditionPtrOutputWithContext(ctx context.Context) FunctionIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamBindingConditionOutput).ToFunctionIamBindingConditionPtrOutputWithContext(ctx)
}

// FunctionIamBindingConditionPtrInput is an input type that accepts FunctionIamBindingConditionArgs, FunctionIamBindingConditionPtr and FunctionIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `FunctionIamBindingConditionPtrInput` via:
//
//          FunctionIamBindingConditionArgs{...}
//
//  or:
//
//          nil
type FunctionIamBindingConditionPtrInput interface {
	pulumi.Input

	ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput
	ToFunctionIamBindingConditionPtrOutputWithContext(context.Context) FunctionIamBindingConditionPtrOutput
}

type functionIamBindingConditionPtrType FunctionIamBindingConditionArgs

func FunctionIamBindingConditionPtr(v *FunctionIamBindingConditionArgs) FunctionIamBindingConditionPtrInput {
	return (*functionIamBindingConditionPtrType)(v)
}

func (*functionIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamBindingCondition)(nil)).Elem()
}

func (i *functionIamBindingConditionPtrType) ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput {
	return i.ToFunctionIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *functionIamBindingConditionPtrType) ToFunctionIamBindingConditionPtrOutputWithContext(ctx context.Context) FunctionIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamBindingConditionPtrOutput)
}

type FunctionIamBindingConditionOutput struct{ *pulumi.OutputState }

func (FunctionIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionIamBindingCondition)(nil)).Elem()
}

func (o FunctionIamBindingConditionOutput) ToFunctionIamBindingConditionOutput() FunctionIamBindingConditionOutput {
	return o
}

func (o FunctionIamBindingConditionOutput) ToFunctionIamBindingConditionOutputWithContext(ctx context.Context) FunctionIamBindingConditionOutput {
	return o
}

func (o FunctionIamBindingConditionOutput) ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput {
	return o.ToFunctionIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o FunctionIamBindingConditionOutput) ToFunctionIamBindingConditionPtrOutputWithContext(ctx context.Context) FunctionIamBindingConditionPtrOutput {
	return o.ApplyT(func(v FunctionIamBindingCondition) *FunctionIamBindingCondition {
		return &v
	}).(FunctionIamBindingConditionPtrOutput)
}
func (o FunctionIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FunctionIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o FunctionIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type FunctionIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (FunctionIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamBindingCondition)(nil)).Elem()
}

func (o FunctionIamBindingConditionPtrOutput) ToFunctionIamBindingConditionPtrOutput() FunctionIamBindingConditionPtrOutput {
	return o
}

func (o FunctionIamBindingConditionPtrOutput) ToFunctionIamBindingConditionPtrOutputWithContext(ctx context.Context) FunctionIamBindingConditionPtrOutput {
	return o
}

func (o FunctionIamBindingConditionPtrOutput) Elem() FunctionIamBindingConditionOutput {
	return o.ApplyT(func(v *FunctionIamBindingCondition) FunctionIamBindingCondition { return *v }).(FunctionIamBindingConditionOutput)
}

func (o FunctionIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o FunctionIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o FunctionIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type FunctionIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// FunctionIamMemberConditionInput is an input type that accepts FunctionIamMemberConditionArgs and FunctionIamMemberConditionOutput values.
// You can construct a concrete instance of `FunctionIamMemberConditionInput` via:
//
//          FunctionIamMemberConditionArgs{...}
type FunctionIamMemberConditionInput interface {
	pulumi.Input

	ToFunctionIamMemberConditionOutput() FunctionIamMemberConditionOutput
	ToFunctionIamMemberConditionOutputWithContext(context.Context) FunctionIamMemberConditionOutput
}

type FunctionIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (FunctionIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionIamMemberCondition)(nil)).Elem()
}

func (i FunctionIamMemberConditionArgs) ToFunctionIamMemberConditionOutput() FunctionIamMemberConditionOutput {
	return i.ToFunctionIamMemberConditionOutputWithContext(context.Background())
}

func (i FunctionIamMemberConditionArgs) ToFunctionIamMemberConditionOutputWithContext(ctx context.Context) FunctionIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamMemberConditionOutput)
}

func (i FunctionIamMemberConditionArgs) ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput {
	return i.ToFunctionIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i FunctionIamMemberConditionArgs) ToFunctionIamMemberConditionPtrOutputWithContext(ctx context.Context) FunctionIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamMemberConditionOutput).ToFunctionIamMemberConditionPtrOutputWithContext(ctx)
}

// FunctionIamMemberConditionPtrInput is an input type that accepts FunctionIamMemberConditionArgs, FunctionIamMemberConditionPtr and FunctionIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `FunctionIamMemberConditionPtrInput` via:
//
//          FunctionIamMemberConditionArgs{...}
//
//  or:
//
//          nil
type FunctionIamMemberConditionPtrInput interface {
	pulumi.Input

	ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput
	ToFunctionIamMemberConditionPtrOutputWithContext(context.Context) FunctionIamMemberConditionPtrOutput
}

type functionIamMemberConditionPtrType FunctionIamMemberConditionArgs

func FunctionIamMemberConditionPtr(v *FunctionIamMemberConditionArgs) FunctionIamMemberConditionPtrInput {
	return (*functionIamMemberConditionPtrType)(v)
}

func (*functionIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamMemberCondition)(nil)).Elem()
}

func (i *functionIamMemberConditionPtrType) ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput {
	return i.ToFunctionIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *functionIamMemberConditionPtrType) ToFunctionIamMemberConditionPtrOutputWithContext(ctx context.Context) FunctionIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionIamMemberConditionPtrOutput)
}

type FunctionIamMemberConditionOutput struct{ *pulumi.OutputState }

func (FunctionIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionIamMemberCondition)(nil)).Elem()
}

func (o FunctionIamMemberConditionOutput) ToFunctionIamMemberConditionOutput() FunctionIamMemberConditionOutput {
	return o
}

func (o FunctionIamMemberConditionOutput) ToFunctionIamMemberConditionOutputWithContext(ctx context.Context) FunctionIamMemberConditionOutput {
	return o
}

func (o FunctionIamMemberConditionOutput) ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput {
	return o.ToFunctionIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o FunctionIamMemberConditionOutput) ToFunctionIamMemberConditionPtrOutputWithContext(ctx context.Context) FunctionIamMemberConditionPtrOutput {
	return o.ApplyT(func(v FunctionIamMemberCondition) *FunctionIamMemberCondition {
		return &v
	}).(FunctionIamMemberConditionPtrOutput)
}
func (o FunctionIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FunctionIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o FunctionIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type FunctionIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (FunctionIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionIamMemberCondition)(nil)).Elem()
}

func (o FunctionIamMemberConditionPtrOutput) ToFunctionIamMemberConditionPtrOutput() FunctionIamMemberConditionPtrOutput {
	return o
}

func (o FunctionIamMemberConditionPtrOutput) ToFunctionIamMemberConditionPtrOutputWithContext(ctx context.Context) FunctionIamMemberConditionPtrOutput {
	return o
}

func (o FunctionIamMemberConditionPtrOutput) Elem() FunctionIamMemberConditionOutput {
	return o.ApplyT(func(v *FunctionIamMemberCondition) FunctionIamMemberCondition { return *v }).(FunctionIamMemberConditionOutput)
}

func (o FunctionIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o FunctionIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o FunctionIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type FunctionSourceRepository struct {
	DeployedUrl *string `pulumi:"deployedUrl"`
	// The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats:
	Url string `pulumi:"url"`
}

// FunctionSourceRepositoryInput is an input type that accepts FunctionSourceRepositoryArgs and FunctionSourceRepositoryOutput values.
// You can construct a concrete instance of `FunctionSourceRepositoryInput` via:
//
//          FunctionSourceRepositoryArgs{...}
type FunctionSourceRepositoryInput interface {
	pulumi.Input

	ToFunctionSourceRepositoryOutput() FunctionSourceRepositoryOutput
	ToFunctionSourceRepositoryOutputWithContext(context.Context) FunctionSourceRepositoryOutput
}

type FunctionSourceRepositoryArgs struct {
	DeployedUrl pulumi.StringPtrInput `pulumi:"deployedUrl"`
	// The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats:
	Url pulumi.StringInput `pulumi:"url"`
}

func (FunctionSourceRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSourceRepository)(nil)).Elem()
}

func (i FunctionSourceRepositoryArgs) ToFunctionSourceRepositoryOutput() FunctionSourceRepositoryOutput {
	return i.ToFunctionSourceRepositoryOutputWithContext(context.Background())
}

func (i FunctionSourceRepositoryArgs) ToFunctionSourceRepositoryOutputWithContext(ctx context.Context) FunctionSourceRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSourceRepositoryOutput)
}

func (i FunctionSourceRepositoryArgs) ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput {
	return i.ToFunctionSourceRepositoryPtrOutputWithContext(context.Background())
}

func (i FunctionSourceRepositoryArgs) ToFunctionSourceRepositoryPtrOutputWithContext(ctx context.Context) FunctionSourceRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSourceRepositoryOutput).ToFunctionSourceRepositoryPtrOutputWithContext(ctx)
}

// FunctionSourceRepositoryPtrInput is an input type that accepts FunctionSourceRepositoryArgs, FunctionSourceRepositoryPtr and FunctionSourceRepositoryPtrOutput values.
// You can construct a concrete instance of `FunctionSourceRepositoryPtrInput` via:
//
//          FunctionSourceRepositoryArgs{...}
//
//  or:
//
//          nil
type FunctionSourceRepositoryPtrInput interface {
	pulumi.Input

	ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput
	ToFunctionSourceRepositoryPtrOutputWithContext(context.Context) FunctionSourceRepositoryPtrOutput
}

type functionSourceRepositoryPtrType FunctionSourceRepositoryArgs

func FunctionSourceRepositoryPtr(v *FunctionSourceRepositoryArgs) FunctionSourceRepositoryPtrInput {
	return (*functionSourceRepositoryPtrType)(v)
}

func (*functionSourceRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSourceRepository)(nil)).Elem()
}

func (i *functionSourceRepositoryPtrType) ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput {
	return i.ToFunctionSourceRepositoryPtrOutputWithContext(context.Background())
}

func (i *functionSourceRepositoryPtrType) ToFunctionSourceRepositoryPtrOutputWithContext(ctx context.Context) FunctionSourceRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSourceRepositoryPtrOutput)
}

type FunctionSourceRepositoryOutput struct{ *pulumi.OutputState }

func (FunctionSourceRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSourceRepository)(nil)).Elem()
}

func (o FunctionSourceRepositoryOutput) ToFunctionSourceRepositoryOutput() FunctionSourceRepositoryOutput {
	return o
}

func (o FunctionSourceRepositoryOutput) ToFunctionSourceRepositoryOutputWithContext(ctx context.Context) FunctionSourceRepositoryOutput {
	return o
}

func (o FunctionSourceRepositoryOutput) ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput {
	return o.ToFunctionSourceRepositoryPtrOutputWithContext(context.Background())
}

func (o FunctionSourceRepositoryOutput) ToFunctionSourceRepositoryPtrOutputWithContext(ctx context.Context) FunctionSourceRepositoryPtrOutput {
	return o.ApplyT(func(v FunctionSourceRepository) *FunctionSourceRepository {
		return &v
	}).(FunctionSourceRepositoryPtrOutput)
}
func (o FunctionSourceRepositoryOutput) DeployedUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSourceRepository) *string { return v.DeployedUrl }).(pulumi.StringPtrOutput)
}

// The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats:
func (o FunctionSourceRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSourceRepository) string { return v.Url }).(pulumi.StringOutput)
}

type FunctionSourceRepositoryPtrOutput struct{ *pulumi.OutputState }

func (FunctionSourceRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSourceRepository)(nil)).Elem()
}

func (o FunctionSourceRepositoryPtrOutput) ToFunctionSourceRepositoryPtrOutput() FunctionSourceRepositoryPtrOutput {
	return o
}

func (o FunctionSourceRepositoryPtrOutput) ToFunctionSourceRepositoryPtrOutputWithContext(ctx context.Context) FunctionSourceRepositoryPtrOutput {
	return o
}

func (o FunctionSourceRepositoryPtrOutput) Elem() FunctionSourceRepositoryOutput {
	return o.ApplyT(func(v *FunctionSourceRepository) FunctionSourceRepository { return *v }).(FunctionSourceRepositoryOutput)
}

func (o FunctionSourceRepositoryPtrOutput) DeployedUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSourceRepository) *string {
		if v == nil {
			return nil
		}
		return v.DeployedUrl
	}).(pulumi.StringPtrOutput)
}

// The URL pointing to the hosted repository where the function is defined. There are supported Cloud Source Repository URLs in the following formats:
func (o FunctionSourceRepositoryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSourceRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GetFunctionEventTrigger struct {
	// The type of event to observe. For example: `"google.storage.object.finalize"`.
	// See the documentation on [calling Cloud Functions](https://cloud.google.com/functions/docs/calling/)
	// for a full reference of accepted triggers.
	EventType string `pulumi:"eventType"`
	// Policy for failed executions. Structure is documented below.
	FailurePolicies []GetFunctionEventTriggerFailurePolicy `pulumi:"failurePolicies"`
	// The name of the resource whose events are being observed, for example, `"myBucket"`
	Resource string `pulumi:"resource"`
}

type GetFunctionEventTriggerFailurePolicy struct {
	// Whether the function should be retried on failure.
	Retry bool `pulumi:"retry"`
}

type GetFunctionSourceRepository struct {
	DeployedUrl string `pulumi:"deployedUrl"`
	// The URL pointing to the hosted repository where the function is defined.
	Url string `pulumi:"url"`
}

func init() {
	pulumi.RegisterOutputType(FunctionEventTriggerOutput{})
	pulumi.RegisterOutputType(FunctionEventTriggerPtrOutput{})
	pulumi.RegisterOutputType(FunctionEventTriggerFailurePolicyOutput{})
	pulumi.RegisterOutputType(FunctionEventTriggerFailurePolicyPtrOutput{})
	pulumi.RegisterOutputType(FunctionIamBindingConditionOutput{})
	pulumi.RegisterOutputType(FunctionIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(FunctionIamMemberConditionOutput{})
	pulumi.RegisterOutputType(FunctionIamMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(FunctionSourceRepositoryOutput{})
	pulumi.RegisterOutputType(FunctionSourceRepositoryPtrOutput{})
	pulumi.RegisterOutputType(GetFunctionEventTriggerOutput{})
	pulumi.RegisterOutputType(GetFunctionEventTriggerArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionEventTriggerFailurePolicyOutput{})
	pulumi.RegisterOutputType(GetFunctionEventTriggerFailurePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionSourceRepositoryOutput{})
	pulumi.RegisterOutputType(GetFunctionSourceRepositoryArrayOutput{})
}
