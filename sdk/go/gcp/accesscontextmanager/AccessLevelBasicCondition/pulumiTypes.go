// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AccessLevelBasicCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/accesscontextmanager/AccessLevelBasicConditionDevicePolicy"
	"https:/github.com/pulumi/pulumi-gcp/accesscontextmanager/AccessLevelBasicConditionDevicePolicyOsConstraint"
)

type AccessLevelBasicCondition struct {
	DevicePolicy *accesscontextmanagerAccessLevelBasicConditionDevicePolicy.AccessLevelBasicConditionDevicePolicy `pulumi:"devicePolicy"`
	IpSubnetworks []string `pulumi:"ipSubnetworks"`
	Members []string `pulumi:"members"`
	Negate *bool `pulumi:"negate"`
	RequiredAccessLevels []string `pulumi:"requiredAccessLevels"`
}

type AccessLevelBasicConditionInput interface {
	pulumi.Input

	ToAccessLevelBasicConditionOutput() AccessLevelBasicConditionOutput
	ToAccessLevelBasicConditionOutputWithContext(context.Context) AccessLevelBasicConditionOutput
}

type AccessLevelBasicConditionArgs struct {
	DevicePolicy accesscontextmanagerAccessLevelBasicConditionDevicePolicy.AccessLevelBasicConditionDevicePolicyPtrInput `pulumi:"devicePolicy"`
	IpSubnetworks pulumi.StringArrayInput `pulumi:"ipSubnetworks"`
	Members pulumi.StringArrayInput `pulumi:"members"`
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	RequiredAccessLevels pulumi.StringArrayInput `pulumi:"requiredAccessLevels"`
}

func (AccessLevelBasicConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasicCondition)(nil)).Elem()
}

func (i AccessLevelBasicConditionArgs) ToAccessLevelBasicConditionOutput() AccessLevelBasicConditionOutput {
	return i.ToAccessLevelBasicConditionOutputWithContext(context.Background())
}

func (i AccessLevelBasicConditionArgs) ToAccessLevelBasicConditionOutputWithContext(ctx context.Context) AccessLevelBasicConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicConditionOutput)
}

type AccessLevelBasicConditionArrayInput interface {
	pulumi.Input

	ToAccessLevelBasicConditionArrayOutput() AccessLevelBasicConditionArrayOutput
	ToAccessLevelBasicConditionArrayOutputWithContext(context.Context) AccessLevelBasicConditionArrayOutput
}

type AccessLevelBasicConditionArray []AccessLevelBasicConditionInput

func (AccessLevelBasicConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessLevelBasicCondition)(nil)).Elem()
}

func (i AccessLevelBasicConditionArray) ToAccessLevelBasicConditionArrayOutput() AccessLevelBasicConditionArrayOutput {
	return i.ToAccessLevelBasicConditionArrayOutputWithContext(context.Background())
}

func (i AccessLevelBasicConditionArray) ToAccessLevelBasicConditionArrayOutputWithContext(ctx context.Context) AccessLevelBasicConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicConditionArrayOutput)
}

type AccessLevelBasicConditionOutput struct { *pulumi.OutputState }

func (AccessLevelBasicConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasicCondition)(nil)).Elem()
}

func (o AccessLevelBasicConditionOutput) ToAccessLevelBasicConditionOutput() AccessLevelBasicConditionOutput {
	return o
}

func (o AccessLevelBasicConditionOutput) ToAccessLevelBasicConditionOutputWithContext(ctx context.Context) AccessLevelBasicConditionOutput {
	return o
}

func (o AccessLevelBasicConditionOutput) DevicePolicy() accesscontextmanagerAccessLevelBasicConditionDevicePolicy.AccessLevelBasicConditionDevicePolicyPtrOutput {
	return o.ApplyT(func (v AccessLevelBasicCondition) *accesscontextmanagerAccessLevelBasicConditionDevicePolicy.AccessLevelBasicConditionDevicePolicy { return v.DevicePolicy }).(accesscontextmanagerAccessLevelBasicConditionDevicePolicy.AccessLevelBasicConditionDevicePolicyPtrOutput)
}

func (o AccessLevelBasicConditionOutput) IpSubnetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func (v AccessLevelBasicCondition) []string { return v.IpSubnetworks }).(pulumi.StringArrayOutput)
}

func (o AccessLevelBasicConditionOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func (v AccessLevelBasicCondition) []string { return v.Members }).(pulumi.StringArrayOutput)
}

func (o AccessLevelBasicConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v AccessLevelBasicCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

func (o AccessLevelBasicConditionOutput) RequiredAccessLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func (v AccessLevelBasicCondition) []string { return v.RequiredAccessLevels }).(pulumi.StringArrayOutput)
}

type AccessLevelBasicConditionArrayOutput struct { *pulumi.OutputState}

func (AccessLevelBasicConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessLevelBasicCondition)(nil)).Elem()
}

func (o AccessLevelBasicConditionArrayOutput) ToAccessLevelBasicConditionArrayOutput() AccessLevelBasicConditionArrayOutput {
	return o
}

func (o AccessLevelBasicConditionArrayOutput) ToAccessLevelBasicConditionArrayOutputWithContext(ctx context.Context) AccessLevelBasicConditionArrayOutput {
	return o
}

func (o AccessLevelBasicConditionArrayOutput) Index(i pulumi.IntInput) AccessLevelBasicConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) AccessLevelBasicCondition {
		return vs[0].([]AccessLevelBasicCondition)[vs[1].(int)]
	}).(AccessLevelBasicConditionOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessLevelBasicConditionOutput{})
	pulumi.RegisterOutputType(AccessLevelBasicConditionArrayOutput{})
}
