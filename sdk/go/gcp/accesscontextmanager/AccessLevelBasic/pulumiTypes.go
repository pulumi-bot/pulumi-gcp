// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AccessLevelBasic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/accesscontextmanager/AccessLevelBasicCondition"
	"https:/github.com/pulumi/pulumi-gcp/accesscontextmanager/AccessLevelBasicConditionDevicePolicy"
	"https:/github.com/pulumi/pulumi-gcp/accesscontextmanager/AccessLevelBasicConditionDevicePolicyOsConstraint"
)

type AccessLevelBasic struct {
	CombiningFunction *string `pulumi:"combiningFunction"`
	Conditions []accesscontextmanagerAccessLevelBasicCondition.AccessLevelBasicCondition `pulumi:"conditions"`
}

type AccessLevelBasicInput interface {
	pulumi.Input

	ToAccessLevelBasicOutput() AccessLevelBasicOutput
	ToAccessLevelBasicOutputWithContext(context.Context) AccessLevelBasicOutput
}

type AccessLevelBasicArgs struct {
	CombiningFunction pulumi.StringPtrInput `pulumi:"combiningFunction"`
	Conditions accesscontextmanagerAccessLevelBasicCondition.AccessLevelBasicConditionArrayInput `pulumi:"conditions"`
}

func (AccessLevelBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasic)(nil)).Elem()
}

func (i AccessLevelBasicArgs) ToAccessLevelBasicOutput() AccessLevelBasicOutput {
	return i.ToAccessLevelBasicOutputWithContext(context.Background())
}

func (i AccessLevelBasicArgs) ToAccessLevelBasicOutputWithContext(ctx context.Context) AccessLevelBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicOutput)
}

func (i AccessLevelBasicArgs) ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput {
	return i.ToAccessLevelBasicPtrOutputWithContext(context.Background())
}

func (i AccessLevelBasicArgs) ToAccessLevelBasicPtrOutputWithContext(ctx context.Context) AccessLevelBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicOutput).ToAccessLevelBasicPtrOutputWithContext(ctx)
}

type AccessLevelBasicPtrInput interface {
	pulumi.Input

	ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput
	ToAccessLevelBasicPtrOutputWithContext(context.Context) AccessLevelBasicPtrOutput
}

type accessLevelBasicPtrType AccessLevelBasicArgs

func AccessLevelBasicPtr(v *AccessLevelBasicArgs) AccessLevelBasicPtrInput {	return (*accessLevelBasicPtrType)(v)
}

func (*accessLevelBasicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLevelBasic)(nil)).Elem()
}

func (i *accessLevelBasicPtrType) ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput {
	return i.ToAccessLevelBasicPtrOutputWithContext(context.Background())
}

func (i *accessLevelBasicPtrType) ToAccessLevelBasicPtrOutputWithContext(ctx context.Context) AccessLevelBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLevelBasicPtrOutput)
}

type AccessLevelBasicOutput struct { *pulumi.OutputState }

func (AccessLevelBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessLevelBasic)(nil)).Elem()
}

func (o AccessLevelBasicOutput) ToAccessLevelBasicOutput() AccessLevelBasicOutput {
	return o
}

func (o AccessLevelBasicOutput) ToAccessLevelBasicOutputWithContext(ctx context.Context) AccessLevelBasicOutput {
	return o
}

func (o AccessLevelBasicOutput) ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput {
	return o.ToAccessLevelBasicPtrOutputWithContext(context.Background())
}

func (o AccessLevelBasicOutput) ToAccessLevelBasicPtrOutputWithContext(ctx context.Context) AccessLevelBasicPtrOutput {
	return o.ApplyT(func(v AccessLevelBasic) *AccessLevelBasic {
		return &v
	}).(AccessLevelBasicPtrOutput)
}
func (o AccessLevelBasicOutput) CombiningFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AccessLevelBasic) *string { return v.CombiningFunction }).(pulumi.StringPtrOutput)
}

func (o AccessLevelBasicOutput) Conditions() accesscontextmanagerAccessLevelBasicCondition.AccessLevelBasicConditionArrayOutput {
	return o.ApplyT(func (v AccessLevelBasic) []accesscontextmanagerAccessLevelBasicCondition.AccessLevelBasicCondition { return v.Conditions }).(accesscontextmanagerAccessLevelBasicCondition.AccessLevelBasicConditionArrayOutput)
}

type AccessLevelBasicPtrOutput struct { *pulumi.OutputState}

func (AccessLevelBasicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLevelBasic)(nil)).Elem()
}

func (o AccessLevelBasicPtrOutput) ToAccessLevelBasicPtrOutput() AccessLevelBasicPtrOutput {
	return o
}

func (o AccessLevelBasicPtrOutput) ToAccessLevelBasicPtrOutputWithContext(ctx context.Context) AccessLevelBasicPtrOutput {
	return o
}

func (o AccessLevelBasicPtrOutput) Elem() AccessLevelBasicOutput {
	return o.ApplyT(func (v *AccessLevelBasic) AccessLevelBasic { return *v }).(AccessLevelBasicOutput)
}

func (o AccessLevelBasicPtrOutput) CombiningFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AccessLevelBasic) *string { return v.CombiningFunction }).(pulumi.StringPtrOutput)
}

func (o AccessLevelBasicPtrOutput) Conditions() accesscontextmanagerAccessLevelBasicCondition.AccessLevelBasicConditionArrayOutput {
	return o.ApplyT(func (v AccessLevelBasic) []accesscontextmanagerAccessLevelBasicCondition.AccessLevelBasicCondition { return v.Conditions }).(accesscontextmanagerAccessLevelBasicCondition.AccessLevelBasicConditionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessLevelBasicOutput{})
	pulumi.RegisterOutputType(AccessLevelBasicPtrOutput{})
}
