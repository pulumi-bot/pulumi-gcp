// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TableColumnFamily

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TableColumnFamily struct {
	// The name of the column family.
	Family string `pulumi:"family"`
}

type TableColumnFamilyInput interface {
	pulumi.Input

	ToTableColumnFamilyOutput() TableColumnFamilyOutput
	ToTableColumnFamilyOutputWithContext(context.Context) TableColumnFamilyOutput
}

type TableColumnFamilyArgs struct {
	// The name of the column family.
	Family pulumi.StringInput `pulumi:"family"`
}

func (TableColumnFamilyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableColumnFamily)(nil)).Elem()
}

func (i TableColumnFamilyArgs) ToTableColumnFamilyOutput() TableColumnFamilyOutput {
	return i.ToTableColumnFamilyOutputWithContext(context.Background())
}

func (i TableColumnFamilyArgs) ToTableColumnFamilyOutputWithContext(ctx context.Context) TableColumnFamilyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableColumnFamilyOutput)
}

type TableColumnFamilyArrayInput interface {
	pulumi.Input

	ToTableColumnFamilyArrayOutput() TableColumnFamilyArrayOutput
	ToTableColumnFamilyArrayOutputWithContext(context.Context) TableColumnFamilyArrayOutput
}

type TableColumnFamilyArray []TableColumnFamilyInput

func (TableColumnFamilyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableColumnFamily)(nil)).Elem()
}

func (i TableColumnFamilyArray) ToTableColumnFamilyArrayOutput() TableColumnFamilyArrayOutput {
	return i.ToTableColumnFamilyArrayOutputWithContext(context.Background())
}

func (i TableColumnFamilyArray) ToTableColumnFamilyArrayOutputWithContext(ctx context.Context) TableColumnFamilyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableColumnFamilyArrayOutput)
}

type TableColumnFamilyOutput struct { *pulumi.OutputState }

func (TableColumnFamilyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableColumnFamily)(nil)).Elem()
}

func (o TableColumnFamilyOutput) ToTableColumnFamilyOutput() TableColumnFamilyOutput {
	return o
}

func (o TableColumnFamilyOutput) ToTableColumnFamilyOutputWithContext(ctx context.Context) TableColumnFamilyOutput {
	return o
}

// The name of the column family.
func (o TableColumnFamilyOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func (v TableColumnFamily) string { return v.Family }).(pulumi.StringOutput)
}

type TableColumnFamilyArrayOutput struct { *pulumi.OutputState}

func (TableColumnFamilyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableColumnFamily)(nil)).Elem()
}

func (o TableColumnFamilyArrayOutput) ToTableColumnFamilyArrayOutput() TableColumnFamilyArrayOutput {
	return o
}

func (o TableColumnFamilyArrayOutput) ToTableColumnFamilyArrayOutputWithContext(ctx context.Context) TableColumnFamilyArrayOutput {
	return o
}

func (o TableColumnFamilyArrayOutput) Index(i pulumi.IntInput) TableColumnFamilyOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) TableColumnFamily {
		return vs[0].([]TableColumnFamily)[vs[1].(int)]
	}).(TableColumnFamilyOutput)
}

func init() {
	pulumi.RegisterOutputType(TableColumnFamilyOutput{})
	pulumi.RegisterOutputType(TableColumnFamilyArrayOutput{})
}
