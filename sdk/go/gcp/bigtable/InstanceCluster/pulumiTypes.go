// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceCluster

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type InstanceCluster struct {
	ClusterId string `pulumi:"clusterId"`
	NumNodes *int `pulumi:"numNodes"`
	StorageType *string `pulumi:"storageType"`
	Zone string `pulumi:"zone"`
}

type InstanceClusterInput interface {
	pulumi.Input

	ToInstanceClusterOutput() InstanceClusterOutput
	ToInstanceClusterOutputWithContext(context.Context) InstanceClusterOutput
}

type InstanceClusterArgs struct {
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	NumNodes pulumi.IntPtrInput `pulumi:"numNodes"`
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (InstanceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCluster)(nil)).Elem()
}

func (i InstanceClusterArgs) ToInstanceClusterOutput() InstanceClusterOutput {
	return i.ToInstanceClusterOutputWithContext(context.Background())
}

func (i InstanceClusterArgs) ToInstanceClusterOutputWithContext(ctx context.Context) InstanceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterOutput)
}

type InstanceClusterArrayInput interface {
	pulumi.Input

	ToInstanceClusterArrayOutput() InstanceClusterArrayOutput
	ToInstanceClusterArrayOutputWithContext(context.Context) InstanceClusterArrayOutput
}

type InstanceClusterArray []InstanceClusterInput

func (InstanceClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceCluster)(nil)).Elem()
}

func (i InstanceClusterArray) ToInstanceClusterArrayOutput() InstanceClusterArrayOutput {
	return i.ToInstanceClusterArrayOutputWithContext(context.Background())
}

func (i InstanceClusterArray) ToInstanceClusterArrayOutputWithContext(ctx context.Context) InstanceClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceClusterArrayOutput)
}

type InstanceClusterOutput struct { *pulumi.OutputState }

func (InstanceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCluster)(nil)).Elem()
}

func (o InstanceClusterOutput) ToInstanceClusterOutput() InstanceClusterOutput {
	return o
}

func (o InstanceClusterOutput) ToInstanceClusterOutputWithContext(ctx context.Context) InstanceClusterOutput {
	return o
}

func (o InstanceClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceCluster) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o InstanceClusterOutput) NumNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceCluster) *int { return v.NumNodes }).(pulumi.IntPtrOutput)
}

func (o InstanceClusterOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceCluster) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

func (o InstanceClusterOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceCluster) string { return v.Zone }).(pulumi.StringOutput)
}

type InstanceClusterArrayOutput struct { *pulumi.OutputState}

func (InstanceClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceCluster)(nil)).Elem()
}

func (o InstanceClusterArrayOutput) ToInstanceClusterArrayOutput() InstanceClusterArrayOutput {
	return o
}

func (o InstanceClusterArrayOutput) ToInstanceClusterArrayOutputWithContext(ctx context.Context) InstanceClusterArrayOutput {
	return o
}

func (o InstanceClusterArrayOutput) Index(i pulumi.IntInput) InstanceClusterOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceCluster {
		return vs[0].([]InstanceCluster)[vs[1].(int)]
	}).(InstanceClusterOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceClusterOutput{})
	pulumi.RegisterOutputType(InstanceClusterArrayOutput{})
}
