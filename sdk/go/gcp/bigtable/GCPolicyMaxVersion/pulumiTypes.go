// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package GCPolicyMaxVersion

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GCPolicyMaxVersion struct {
	// Number of version before applying the GC policy.
	Number int `pulumi:"number"`
}

type GCPolicyMaxVersionInput interface {
	pulumi.Input

	ToGCPolicyMaxVersionOutput() GCPolicyMaxVersionOutput
	ToGCPolicyMaxVersionOutputWithContext(context.Context) GCPolicyMaxVersionOutput
}

type GCPolicyMaxVersionArgs struct {
	// Number of version before applying the GC policy.
	Number pulumi.IntInput `pulumi:"number"`
}

func (GCPolicyMaxVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxVersion)(nil)).Elem()
}

func (i GCPolicyMaxVersionArgs) ToGCPolicyMaxVersionOutput() GCPolicyMaxVersionOutput {
	return i.ToGCPolicyMaxVersionOutputWithContext(context.Background())
}

func (i GCPolicyMaxVersionArgs) ToGCPolicyMaxVersionOutputWithContext(ctx context.Context) GCPolicyMaxVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxVersionOutput)
}

type GCPolicyMaxVersionArrayInput interface {
	pulumi.Input

	ToGCPolicyMaxVersionArrayOutput() GCPolicyMaxVersionArrayOutput
	ToGCPolicyMaxVersionArrayOutputWithContext(context.Context) GCPolicyMaxVersionArrayOutput
}

type GCPolicyMaxVersionArray []GCPolicyMaxVersionInput

func (GCPolicyMaxVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GCPolicyMaxVersion)(nil)).Elem()
}

func (i GCPolicyMaxVersionArray) ToGCPolicyMaxVersionArrayOutput() GCPolicyMaxVersionArrayOutput {
	return i.ToGCPolicyMaxVersionArrayOutputWithContext(context.Background())
}

func (i GCPolicyMaxVersionArray) ToGCPolicyMaxVersionArrayOutputWithContext(ctx context.Context) GCPolicyMaxVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCPolicyMaxVersionArrayOutput)
}

type GCPolicyMaxVersionOutput struct { *pulumi.OutputState }

func (GCPolicyMaxVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GCPolicyMaxVersion)(nil)).Elem()
}

func (o GCPolicyMaxVersionOutput) ToGCPolicyMaxVersionOutput() GCPolicyMaxVersionOutput {
	return o
}

func (o GCPolicyMaxVersionOutput) ToGCPolicyMaxVersionOutputWithContext(ctx context.Context) GCPolicyMaxVersionOutput {
	return o
}

// Number of version before applying the GC policy.
func (o GCPolicyMaxVersionOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func (v GCPolicyMaxVersion) int { return v.Number }).(pulumi.IntOutput)
}

type GCPolicyMaxVersionArrayOutput struct { *pulumi.OutputState}

func (GCPolicyMaxVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GCPolicyMaxVersion)(nil)).Elem()
}

func (o GCPolicyMaxVersionArrayOutput) ToGCPolicyMaxVersionArrayOutput() GCPolicyMaxVersionArrayOutput {
	return o
}

func (o GCPolicyMaxVersionArrayOutput) ToGCPolicyMaxVersionArrayOutputWithContext(ctx context.Context) GCPolicyMaxVersionArrayOutput {
	return o
}

func (o GCPolicyMaxVersionArrayOutput) Index(i pulumi.IntInput) GCPolicyMaxVersionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GCPolicyMaxVersion {
		return vs[0].([]GCPolicyMaxVersion)[vs[1].(int)]
	}).(GCPolicyMaxVersionOutput)
}

func init() {
	pulumi.RegisterOutputType(GCPolicyMaxVersionOutput{})
	pulumi.RegisterOutputType(GCPolicyMaxVersionArrayOutput{})
}
