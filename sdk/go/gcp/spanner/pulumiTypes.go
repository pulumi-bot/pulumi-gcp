// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package spanner

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DatabaseIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type DatabaseIAMBindingConditionInput interface {
	pulumi.Input

	ToDatabaseIAMBindingConditionOutput() DatabaseIAMBindingConditionOutput
	ToDatabaseIAMBindingConditionOutputWithContext(context.Context) DatabaseIAMBindingConditionOutput
}

type DatabaseIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DatabaseIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMBindingCondition)(nil)).Elem()
}

func (i DatabaseIAMBindingConditionArgs) ToDatabaseIAMBindingConditionOutput() DatabaseIAMBindingConditionOutput {
	return i.ToDatabaseIAMBindingConditionOutputWithContext(context.Background())
}

func (i DatabaseIAMBindingConditionArgs) ToDatabaseIAMBindingConditionOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionOutput)
}

func (i DatabaseIAMBindingConditionArgs) ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput {
	return i.ToDatabaseIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i DatabaseIAMBindingConditionArgs) ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionOutput).ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx)
}

type DatabaseIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput
	ToDatabaseIAMBindingConditionPtrOutputWithContext(context.Context) DatabaseIAMBindingConditionPtrOutput
}

type databaseIAMBindingConditionPtrType DatabaseIAMBindingConditionArgs

func DatabaseIAMBindingConditionPtr(v *DatabaseIAMBindingConditionArgs) DatabaseIAMBindingConditionPtrInput {
	return (*databaseIAMBindingConditionPtrType)(v)
}

func (*databaseIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMBindingCondition)(nil)).Elem()
}

func (i *databaseIAMBindingConditionPtrType) ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput {
	return i.ToDatabaseIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *databaseIAMBindingConditionPtrType) ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionPtrOutput)
}

type DatabaseIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (DatabaseIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMBindingCondition)(nil)).Elem()
}

func (o DatabaseIAMBindingConditionOutput) ToDatabaseIAMBindingConditionOutput() DatabaseIAMBindingConditionOutput {
	return o
}

func (o DatabaseIAMBindingConditionOutput) ToDatabaseIAMBindingConditionOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionOutput {
	return o
}

func (o DatabaseIAMBindingConditionOutput) ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput {
	return o.ToDatabaseIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o DatabaseIAMBindingConditionOutput) ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v DatabaseIAMBindingCondition) *DatabaseIAMBindingCondition {
		return &v
	}).(DatabaseIAMBindingConditionPtrOutput)
}
func (o DatabaseIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (DatabaseIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMBindingCondition)(nil)).Elem()
}

func (o DatabaseIAMBindingConditionPtrOutput) ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput {
	return o
}

func (o DatabaseIAMBindingConditionPtrOutput) ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionPtrOutput {
	return o
}

func (o DatabaseIAMBindingConditionPtrOutput) Elem() DatabaseIAMBindingConditionOutput {
	return o.ApplyT(func(v *DatabaseIAMBindingCondition) DatabaseIAMBindingCondition { return *v }).(DatabaseIAMBindingConditionOutput)
}

func (o DatabaseIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type DatabaseIAMBindingConditionArgsInput interface {
	pulumi.Input

	ToDatabaseIAMBindingConditionArgsOutput() DatabaseIAMBindingConditionArgsOutput
	ToDatabaseIAMBindingConditionArgsOutputWithContext(context.Context) DatabaseIAMBindingConditionArgsOutput
}

type DatabaseIAMBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DatabaseIAMBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMBindingConditionArgs)(nil)).Elem()
}

func (i DatabaseIAMBindingConditionArgsArgs) ToDatabaseIAMBindingConditionArgsOutput() DatabaseIAMBindingConditionArgsOutput {
	return i.ToDatabaseIAMBindingConditionArgsOutputWithContext(context.Background())
}

func (i DatabaseIAMBindingConditionArgsArgs) ToDatabaseIAMBindingConditionArgsOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionArgsOutput)
}

func (i DatabaseIAMBindingConditionArgsArgs) ToDatabaseIAMBindingConditionArgsPtrOutput() DatabaseIAMBindingConditionArgsPtrOutput {
	return i.ToDatabaseIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i DatabaseIAMBindingConditionArgsArgs) ToDatabaseIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionArgsOutput).ToDatabaseIAMBindingConditionArgsPtrOutputWithContext(ctx)
}

type DatabaseIAMBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToDatabaseIAMBindingConditionArgsPtrOutput() DatabaseIAMBindingConditionArgsPtrOutput
	ToDatabaseIAMBindingConditionArgsPtrOutputWithContext(context.Context) DatabaseIAMBindingConditionArgsPtrOutput
}

type databaseIAMBindingConditionArgsPtrType DatabaseIAMBindingConditionArgsArgs

func DatabaseIAMBindingConditionArgsPtr(v *DatabaseIAMBindingConditionArgsArgs) DatabaseIAMBindingConditionArgsPtrInput {
	return (*databaseIAMBindingConditionArgsPtrType)(v)
}

func (*databaseIAMBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMBindingConditionArgs)(nil)).Elem()
}

func (i *databaseIAMBindingConditionArgsPtrType) ToDatabaseIAMBindingConditionArgsPtrOutput() DatabaseIAMBindingConditionArgsPtrOutput {
	return i.ToDatabaseIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *databaseIAMBindingConditionArgsPtrType) ToDatabaseIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionArgsPtrOutput)
}

type DatabaseIAMBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (DatabaseIAMBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMBindingConditionArgs)(nil)).Elem()
}

func (o DatabaseIAMBindingConditionArgsOutput) ToDatabaseIAMBindingConditionArgsOutput() DatabaseIAMBindingConditionArgsOutput {
	return o
}

func (o DatabaseIAMBindingConditionArgsOutput) ToDatabaseIAMBindingConditionArgsOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionArgsOutput {
	return o
}

func (o DatabaseIAMBindingConditionArgsOutput) ToDatabaseIAMBindingConditionArgsPtrOutput() DatabaseIAMBindingConditionArgsPtrOutput {
	return o.ToDatabaseIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o DatabaseIAMBindingConditionArgsOutput) ToDatabaseIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionArgs) *DatabaseIAMBindingConditionArgs {
		return &v
	}).(DatabaseIAMBindingConditionArgsPtrOutput)
}
func (o DatabaseIAMBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseIAMBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMBindingConditionArgs)(nil)).Elem()
}

func (o DatabaseIAMBindingConditionArgsPtrOutput) ToDatabaseIAMBindingConditionArgsPtrOutput() DatabaseIAMBindingConditionArgsPtrOutput {
	return o
}

func (o DatabaseIAMBindingConditionArgsPtrOutput) ToDatabaseIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionArgsPtrOutput {
	return o
}

func (o DatabaseIAMBindingConditionArgsPtrOutput) Elem() DatabaseIAMBindingConditionArgsOutput {
	return o.ApplyT(func(v *DatabaseIAMBindingConditionArgs) DatabaseIAMBindingConditionArgs { return *v }).(DatabaseIAMBindingConditionArgsOutput)
}

func (o DatabaseIAMBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMBindingConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type DatabaseIAMBindingConditionStateInput interface {
	pulumi.Input

	ToDatabaseIAMBindingConditionStateOutput() DatabaseIAMBindingConditionStateOutput
	ToDatabaseIAMBindingConditionStateOutputWithContext(context.Context) DatabaseIAMBindingConditionStateOutput
}

type DatabaseIAMBindingConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DatabaseIAMBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMBindingConditionState)(nil)).Elem()
}

func (i DatabaseIAMBindingConditionStateArgs) ToDatabaseIAMBindingConditionStateOutput() DatabaseIAMBindingConditionStateOutput {
	return i.ToDatabaseIAMBindingConditionStateOutputWithContext(context.Background())
}

func (i DatabaseIAMBindingConditionStateArgs) ToDatabaseIAMBindingConditionStateOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionStateOutput)
}

type DatabaseIAMBindingConditionStateOutput struct{ *pulumi.OutputState }

func (DatabaseIAMBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMBindingConditionState)(nil)).Elem()
}

func (o DatabaseIAMBindingConditionStateOutput) ToDatabaseIAMBindingConditionStateOutput() DatabaseIAMBindingConditionStateOutput {
	return o
}

func (o DatabaseIAMBindingConditionStateOutput) ToDatabaseIAMBindingConditionStateOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionStateOutput {
	return o
}

func (o DatabaseIAMBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type DatabaseIAMMemberConditionInput interface {
	pulumi.Input

	ToDatabaseIAMMemberConditionOutput() DatabaseIAMMemberConditionOutput
	ToDatabaseIAMMemberConditionOutputWithContext(context.Context) DatabaseIAMMemberConditionOutput
}

type DatabaseIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DatabaseIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMMemberCondition)(nil)).Elem()
}

func (i DatabaseIAMMemberConditionArgs) ToDatabaseIAMMemberConditionOutput() DatabaseIAMMemberConditionOutput {
	return i.ToDatabaseIAMMemberConditionOutputWithContext(context.Background())
}

func (i DatabaseIAMMemberConditionArgs) ToDatabaseIAMMemberConditionOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionOutput)
}

func (i DatabaseIAMMemberConditionArgs) ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput {
	return i.ToDatabaseIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i DatabaseIAMMemberConditionArgs) ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionOutput).ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx)
}

type DatabaseIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput
	ToDatabaseIAMMemberConditionPtrOutputWithContext(context.Context) DatabaseIAMMemberConditionPtrOutput
}

type databaseIAMMemberConditionPtrType DatabaseIAMMemberConditionArgs

func DatabaseIAMMemberConditionPtr(v *DatabaseIAMMemberConditionArgs) DatabaseIAMMemberConditionPtrInput {
	return (*databaseIAMMemberConditionPtrType)(v)
}

func (*databaseIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMMemberCondition)(nil)).Elem()
}

func (i *databaseIAMMemberConditionPtrType) ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput {
	return i.ToDatabaseIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *databaseIAMMemberConditionPtrType) ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionPtrOutput)
}

type DatabaseIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (DatabaseIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMMemberCondition)(nil)).Elem()
}

func (o DatabaseIAMMemberConditionOutput) ToDatabaseIAMMemberConditionOutput() DatabaseIAMMemberConditionOutput {
	return o
}

func (o DatabaseIAMMemberConditionOutput) ToDatabaseIAMMemberConditionOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionOutput {
	return o
}

func (o DatabaseIAMMemberConditionOutput) ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput {
	return o.ToDatabaseIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o DatabaseIAMMemberConditionOutput) ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v DatabaseIAMMemberCondition) *DatabaseIAMMemberCondition {
		return &v
	}).(DatabaseIAMMemberConditionPtrOutput)
}
func (o DatabaseIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (DatabaseIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMMemberCondition)(nil)).Elem()
}

func (o DatabaseIAMMemberConditionPtrOutput) ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput {
	return o
}

func (o DatabaseIAMMemberConditionPtrOutput) ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionPtrOutput {
	return o
}

func (o DatabaseIAMMemberConditionPtrOutput) Elem() DatabaseIAMMemberConditionOutput {
	return o.ApplyT(func(v *DatabaseIAMMemberCondition) DatabaseIAMMemberCondition { return *v }).(DatabaseIAMMemberConditionOutput)
}

func (o DatabaseIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMMemberConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type DatabaseIAMMemberConditionArgsInput interface {
	pulumi.Input

	ToDatabaseIAMMemberConditionArgsOutput() DatabaseIAMMemberConditionArgsOutput
	ToDatabaseIAMMemberConditionArgsOutputWithContext(context.Context) DatabaseIAMMemberConditionArgsOutput
}

type DatabaseIAMMemberConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DatabaseIAMMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMMemberConditionArgs)(nil)).Elem()
}

func (i DatabaseIAMMemberConditionArgsArgs) ToDatabaseIAMMemberConditionArgsOutput() DatabaseIAMMemberConditionArgsOutput {
	return i.ToDatabaseIAMMemberConditionArgsOutputWithContext(context.Background())
}

func (i DatabaseIAMMemberConditionArgsArgs) ToDatabaseIAMMemberConditionArgsOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionArgsOutput)
}

func (i DatabaseIAMMemberConditionArgsArgs) ToDatabaseIAMMemberConditionArgsPtrOutput() DatabaseIAMMemberConditionArgsPtrOutput {
	return i.ToDatabaseIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i DatabaseIAMMemberConditionArgsArgs) ToDatabaseIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionArgsOutput).ToDatabaseIAMMemberConditionArgsPtrOutputWithContext(ctx)
}

type DatabaseIAMMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToDatabaseIAMMemberConditionArgsPtrOutput() DatabaseIAMMemberConditionArgsPtrOutput
	ToDatabaseIAMMemberConditionArgsPtrOutputWithContext(context.Context) DatabaseIAMMemberConditionArgsPtrOutput
}

type databaseIAMMemberConditionArgsPtrType DatabaseIAMMemberConditionArgsArgs

func DatabaseIAMMemberConditionArgsPtr(v *DatabaseIAMMemberConditionArgsArgs) DatabaseIAMMemberConditionArgsPtrInput {
	return (*databaseIAMMemberConditionArgsPtrType)(v)
}

func (*databaseIAMMemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMMemberConditionArgs)(nil)).Elem()
}

func (i *databaseIAMMemberConditionArgsPtrType) ToDatabaseIAMMemberConditionArgsPtrOutput() DatabaseIAMMemberConditionArgsPtrOutput {
	return i.ToDatabaseIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *databaseIAMMemberConditionArgsPtrType) ToDatabaseIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionArgsPtrOutput)
}

type DatabaseIAMMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (DatabaseIAMMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMMemberConditionArgs)(nil)).Elem()
}

func (o DatabaseIAMMemberConditionArgsOutput) ToDatabaseIAMMemberConditionArgsOutput() DatabaseIAMMemberConditionArgsOutput {
	return o
}

func (o DatabaseIAMMemberConditionArgsOutput) ToDatabaseIAMMemberConditionArgsOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionArgsOutput {
	return o
}

func (o DatabaseIAMMemberConditionArgsOutput) ToDatabaseIAMMemberConditionArgsPtrOutput() DatabaseIAMMemberConditionArgsPtrOutput {
	return o.ToDatabaseIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o DatabaseIAMMemberConditionArgsOutput) ToDatabaseIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionArgs) *DatabaseIAMMemberConditionArgs {
		return &v
	}).(DatabaseIAMMemberConditionArgsPtrOutput)
}
func (o DatabaseIAMMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseIAMMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMMemberConditionArgs)(nil)).Elem()
}

func (o DatabaseIAMMemberConditionArgsPtrOutput) ToDatabaseIAMMemberConditionArgsPtrOutput() DatabaseIAMMemberConditionArgsPtrOutput {
	return o
}

func (o DatabaseIAMMemberConditionArgsPtrOutput) ToDatabaseIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionArgsPtrOutput {
	return o
}

func (o DatabaseIAMMemberConditionArgsPtrOutput) Elem() DatabaseIAMMemberConditionArgsOutput {
	return o.ApplyT(func(v *DatabaseIAMMemberConditionArgs) DatabaseIAMMemberConditionArgs { return *v }).(DatabaseIAMMemberConditionArgsOutput)
}

func (o DatabaseIAMMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMMemberConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type DatabaseIAMMemberConditionStateInput interface {
	pulumi.Input

	ToDatabaseIAMMemberConditionStateOutput() DatabaseIAMMemberConditionStateOutput
	ToDatabaseIAMMemberConditionStateOutputWithContext(context.Context) DatabaseIAMMemberConditionStateOutput
}

type DatabaseIAMMemberConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DatabaseIAMMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMMemberConditionState)(nil)).Elem()
}

func (i DatabaseIAMMemberConditionStateArgs) ToDatabaseIAMMemberConditionStateOutput() DatabaseIAMMemberConditionStateOutput {
	return i.ToDatabaseIAMMemberConditionStateOutputWithContext(context.Background())
}

func (i DatabaseIAMMemberConditionStateArgs) ToDatabaseIAMMemberConditionStateOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionStateOutput)
}

type DatabaseIAMMemberConditionStateOutput struct{ *pulumi.OutputState }

func (DatabaseIAMMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMMemberConditionState)(nil)).Elem()
}

func (o DatabaseIAMMemberConditionStateOutput) ToDatabaseIAMMemberConditionStateOutput() DatabaseIAMMemberConditionStateOutput {
	return o
}

func (o DatabaseIAMMemberConditionStateOutput) ToDatabaseIAMMemberConditionStateOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionStateOutput {
	return o
}

func (o DatabaseIAMMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseIAMMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type InstanceIAMBindingConditionInput interface {
	pulumi.Input

	ToInstanceIAMBindingConditionOutput() InstanceIAMBindingConditionOutput
	ToInstanceIAMBindingConditionOutputWithContext(context.Context) InstanceIAMBindingConditionOutput
}

type InstanceIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMBindingCondition)(nil)).Elem()
}

func (i InstanceIAMBindingConditionArgs) ToInstanceIAMBindingConditionOutput() InstanceIAMBindingConditionOutput {
	return i.ToInstanceIAMBindingConditionOutputWithContext(context.Background())
}

func (i InstanceIAMBindingConditionArgs) ToInstanceIAMBindingConditionOutputWithContext(ctx context.Context) InstanceIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMBindingConditionOutput)
}

func (i InstanceIAMBindingConditionArgs) ToInstanceIAMBindingConditionPtrOutput() InstanceIAMBindingConditionPtrOutput {
	return i.ToInstanceIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIAMBindingConditionArgs) ToInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMBindingConditionOutput).ToInstanceIAMBindingConditionPtrOutputWithContext(ctx)
}

type InstanceIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToInstanceIAMBindingConditionPtrOutput() InstanceIAMBindingConditionPtrOutput
	ToInstanceIAMBindingConditionPtrOutputWithContext(context.Context) InstanceIAMBindingConditionPtrOutput
}

type instanceIAMBindingConditionPtrType InstanceIAMBindingConditionArgs

func InstanceIAMBindingConditionPtr(v *InstanceIAMBindingConditionArgs) InstanceIAMBindingConditionPtrInput {
	return (*instanceIAMBindingConditionPtrType)(v)
}

func (*instanceIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIAMBindingCondition)(nil)).Elem()
}

func (i *instanceIAMBindingConditionPtrType) ToInstanceIAMBindingConditionPtrOutput() InstanceIAMBindingConditionPtrOutput {
	return i.ToInstanceIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIAMBindingConditionPtrType) ToInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMBindingConditionPtrOutput)
}

type InstanceIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (InstanceIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMBindingCondition)(nil)).Elem()
}

func (o InstanceIAMBindingConditionOutput) ToInstanceIAMBindingConditionOutput() InstanceIAMBindingConditionOutput {
	return o
}

func (o InstanceIAMBindingConditionOutput) ToInstanceIAMBindingConditionOutputWithContext(ctx context.Context) InstanceIAMBindingConditionOutput {
	return o
}

func (o InstanceIAMBindingConditionOutput) ToInstanceIAMBindingConditionPtrOutput() InstanceIAMBindingConditionPtrOutput {
	return o.ToInstanceIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIAMBindingConditionOutput) ToInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v InstanceIAMBindingCondition) *InstanceIAMBindingCondition {
		return &v
	}).(InstanceIAMBindingConditionPtrOutput)
}
func (o InstanceIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIAMBindingCondition)(nil)).Elem()
}

func (o InstanceIAMBindingConditionPtrOutput) ToInstanceIAMBindingConditionPtrOutput() InstanceIAMBindingConditionPtrOutput {
	return o
}

func (o InstanceIAMBindingConditionPtrOutput) ToInstanceIAMBindingConditionPtrOutputWithContext(ctx context.Context) InstanceIAMBindingConditionPtrOutput {
	return o
}

func (o InstanceIAMBindingConditionPtrOutput) Elem() InstanceIAMBindingConditionOutput {
	return o.ApplyT(func(v *InstanceIAMBindingCondition) InstanceIAMBindingCondition { return *v }).(InstanceIAMBindingConditionOutput)
}

func (o InstanceIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type InstanceIAMBindingConditionArgsInput interface {
	pulumi.Input

	ToInstanceIAMBindingConditionArgsOutput() InstanceIAMBindingConditionArgsOutput
	ToInstanceIAMBindingConditionArgsOutputWithContext(context.Context) InstanceIAMBindingConditionArgsOutput
}

type InstanceIAMBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIAMBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMBindingConditionArgs)(nil)).Elem()
}

func (i InstanceIAMBindingConditionArgsArgs) ToInstanceIAMBindingConditionArgsOutput() InstanceIAMBindingConditionArgsOutput {
	return i.ToInstanceIAMBindingConditionArgsOutputWithContext(context.Background())
}

func (i InstanceIAMBindingConditionArgsArgs) ToInstanceIAMBindingConditionArgsOutputWithContext(ctx context.Context) InstanceIAMBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMBindingConditionArgsOutput)
}

func (i InstanceIAMBindingConditionArgsArgs) ToInstanceIAMBindingConditionArgsPtrOutput() InstanceIAMBindingConditionArgsPtrOutput {
	return i.ToInstanceIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i InstanceIAMBindingConditionArgsArgs) ToInstanceIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) InstanceIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMBindingConditionArgsOutput).ToInstanceIAMBindingConditionArgsPtrOutputWithContext(ctx)
}

type InstanceIAMBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToInstanceIAMBindingConditionArgsPtrOutput() InstanceIAMBindingConditionArgsPtrOutput
	ToInstanceIAMBindingConditionArgsPtrOutputWithContext(context.Context) InstanceIAMBindingConditionArgsPtrOutput
}

type instanceIAMBindingConditionArgsPtrType InstanceIAMBindingConditionArgsArgs

func InstanceIAMBindingConditionArgsPtr(v *InstanceIAMBindingConditionArgsArgs) InstanceIAMBindingConditionArgsPtrInput {
	return (*instanceIAMBindingConditionArgsPtrType)(v)
}

func (*instanceIAMBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIAMBindingConditionArgs)(nil)).Elem()
}

func (i *instanceIAMBindingConditionArgsPtrType) ToInstanceIAMBindingConditionArgsPtrOutput() InstanceIAMBindingConditionArgsPtrOutput {
	return i.ToInstanceIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *instanceIAMBindingConditionArgsPtrType) ToInstanceIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) InstanceIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMBindingConditionArgsPtrOutput)
}

type InstanceIAMBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (InstanceIAMBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMBindingConditionArgs)(nil)).Elem()
}

func (o InstanceIAMBindingConditionArgsOutput) ToInstanceIAMBindingConditionArgsOutput() InstanceIAMBindingConditionArgsOutput {
	return o
}

func (o InstanceIAMBindingConditionArgsOutput) ToInstanceIAMBindingConditionArgsOutputWithContext(ctx context.Context) InstanceIAMBindingConditionArgsOutput {
	return o
}

func (o InstanceIAMBindingConditionArgsOutput) ToInstanceIAMBindingConditionArgsPtrOutput() InstanceIAMBindingConditionArgsPtrOutput {
	return o.ToInstanceIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o InstanceIAMBindingConditionArgsOutput) ToInstanceIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) InstanceIAMBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionArgs) *InstanceIAMBindingConditionArgs {
		return &v
	}).(InstanceIAMBindingConditionArgsPtrOutput)
}
func (o InstanceIAMBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (InstanceIAMBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIAMBindingConditionArgs)(nil)).Elem()
}

func (o InstanceIAMBindingConditionArgsPtrOutput) ToInstanceIAMBindingConditionArgsPtrOutput() InstanceIAMBindingConditionArgsPtrOutput {
	return o
}

func (o InstanceIAMBindingConditionArgsPtrOutput) ToInstanceIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) InstanceIAMBindingConditionArgsPtrOutput {
	return o
}

func (o InstanceIAMBindingConditionArgsPtrOutput) Elem() InstanceIAMBindingConditionArgsOutput {
	return o.ApplyT(func(v *InstanceIAMBindingConditionArgs) InstanceIAMBindingConditionArgs { return *v }).(InstanceIAMBindingConditionArgsOutput)
}

func (o InstanceIAMBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMBindingConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type InstanceIAMBindingConditionStateInput interface {
	pulumi.Input

	ToInstanceIAMBindingConditionStateOutput() InstanceIAMBindingConditionStateOutput
	ToInstanceIAMBindingConditionStateOutputWithContext(context.Context) InstanceIAMBindingConditionStateOutput
}

type InstanceIAMBindingConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIAMBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMBindingConditionState)(nil)).Elem()
}

func (i InstanceIAMBindingConditionStateArgs) ToInstanceIAMBindingConditionStateOutput() InstanceIAMBindingConditionStateOutput {
	return i.ToInstanceIAMBindingConditionStateOutputWithContext(context.Background())
}

func (i InstanceIAMBindingConditionStateArgs) ToInstanceIAMBindingConditionStateOutputWithContext(ctx context.Context) InstanceIAMBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMBindingConditionStateOutput)
}

type InstanceIAMBindingConditionStateOutput struct{ *pulumi.OutputState }

func (InstanceIAMBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMBindingConditionState)(nil)).Elem()
}

func (o InstanceIAMBindingConditionStateOutput) ToInstanceIAMBindingConditionStateOutput() InstanceIAMBindingConditionStateOutput {
	return o
}

func (o InstanceIAMBindingConditionStateOutput) ToInstanceIAMBindingConditionStateOutputWithContext(ctx context.Context) InstanceIAMBindingConditionStateOutput {
	return o
}

func (o InstanceIAMBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type InstanceIAMMemberConditionInput interface {
	pulumi.Input

	ToInstanceIAMMemberConditionOutput() InstanceIAMMemberConditionOutput
	ToInstanceIAMMemberConditionOutputWithContext(context.Context) InstanceIAMMemberConditionOutput
}

type InstanceIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMMemberCondition)(nil)).Elem()
}

func (i InstanceIAMMemberConditionArgs) ToInstanceIAMMemberConditionOutput() InstanceIAMMemberConditionOutput {
	return i.ToInstanceIAMMemberConditionOutputWithContext(context.Background())
}

func (i InstanceIAMMemberConditionArgs) ToInstanceIAMMemberConditionOutputWithContext(ctx context.Context) InstanceIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMMemberConditionOutput)
}

func (i InstanceIAMMemberConditionArgs) ToInstanceIAMMemberConditionPtrOutput() InstanceIAMMemberConditionPtrOutput {
	return i.ToInstanceIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i InstanceIAMMemberConditionArgs) ToInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMMemberConditionOutput).ToInstanceIAMMemberConditionPtrOutputWithContext(ctx)
}

type InstanceIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToInstanceIAMMemberConditionPtrOutput() InstanceIAMMemberConditionPtrOutput
	ToInstanceIAMMemberConditionPtrOutputWithContext(context.Context) InstanceIAMMemberConditionPtrOutput
}

type instanceIAMMemberConditionPtrType InstanceIAMMemberConditionArgs

func InstanceIAMMemberConditionPtr(v *InstanceIAMMemberConditionArgs) InstanceIAMMemberConditionPtrInput {
	return (*instanceIAMMemberConditionPtrType)(v)
}

func (*instanceIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIAMMemberCondition)(nil)).Elem()
}

func (i *instanceIAMMemberConditionPtrType) ToInstanceIAMMemberConditionPtrOutput() InstanceIAMMemberConditionPtrOutput {
	return i.ToInstanceIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *instanceIAMMemberConditionPtrType) ToInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMMemberConditionPtrOutput)
}

type InstanceIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (InstanceIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMMemberCondition)(nil)).Elem()
}

func (o InstanceIAMMemberConditionOutput) ToInstanceIAMMemberConditionOutput() InstanceIAMMemberConditionOutput {
	return o
}

func (o InstanceIAMMemberConditionOutput) ToInstanceIAMMemberConditionOutputWithContext(ctx context.Context) InstanceIAMMemberConditionOutput {
	return o
}

func (o InstanceIAMMemberConditionOutput) ToInstanceIAMMemberConditionPtrOutput() InstanceIAMMemberConditionPtrOutput {
	return o.ToInstanceIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o InstanceIAMMemberConditionOutput) ToInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v InstanceIAMMemberCondition) *InstanceIAMMemberCondition {
		return &v
	}).(InstanceIAMMemberConditionPtrOutput)
}
func (o InstanceIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (InstanceIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIAMMemberCondition)(nil)).Elem()
}

func (o InstanceIAMMemberConditionPtrOutput) ToInstanceIAMMemberConditionPtrOutput() InstanceIAMMemberConditionPtrOutput {
	return o
}

func (o InstanceIAMMemberConditionPtrOutput) ToInstanceIAMMemberConditionPtrOutputWithContext(ctx context.Context) InstanceIAMMemberConditionPtrOutput {
	return o
}

func (o InstanceIAMMemberConditionPtrOutput) Elem() InstanceIAMMemberConditionOutput {
	return o.ApplyT(func(v *InstanceIAMMemberCondition) InstanceIAMMemberCondition { return *v }).(InstanceIAMMemberConditionOutput)
}

func (o InstanceIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMMemberConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type InstanceIAMMemberConditionArgsInput interface {
	pulumi.Input

	ToInstanceIAMMemberConditionArgsOutput() InstanceIAMMemberConditionArgsOutput
	ToInstanceIAMMemberConditionArgsOutputWithContext(context.Context) InstanceIAMMemberConditionArgsOutput
}

type InstanceIAMMemberConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIAMMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMMemberConditionArgs)(nil)).Elem()
}

func (i InstanceIAMMemberConditionArgsArgs) ToInstanceIAMMemberConditionArgsOutput() InstanceIAMMemberConditionArgsOutput {
	return i.ToInstanceIAMMemberConditionArgsOutputWithContext(context.Background())
}

func (i InstanceIAMMemberConditionArgsArgs) ToInstanceIAMMemberConditionArgsOutputWithContext(ctx context.Context) InstanceIAMMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMMemberConditionArgsOutput)
}

func (i InstanceIAMMemberConditionArgsArgs) ToInstanceIAMMemberConditionArgsPtrOutput() InstanceIAMMemberConditionArgsPtrOutput {
	return i.ToInstanceIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i InstanceIAMMemberConditionArgsArgs) ToInstanceIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) InstanceIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMMemberConditionArgsOutput).ToInstanceIAMMemberConditionArgsPtrOutputWithContext(ctx)
}

type InstanceIAMMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToInstanceIAMMemberConditionArgsPtrOutput() InstanceIAMMemberConditionArgsPtrOutput
	ToInstanceIAMMemberConditionArgsPtrOutputWithContext(context.Context) InstanceIAMMemberConditionArgsPtrOutput
}

type instanceIAMMemberConditionArgsPtrType InstanceIAMMemberConditionArgsArgs

func InstanceIAMMemberConditionArgsPtr(v *InstanceIAMMemberConditionArgsArgs) InstanceIAMMemberConditionArgsPtrInput {
	return (*instanceIAMMemberConditionArgsPtrType)(v)
}

func (*instanceIAMMemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIAMMemberConditionArgs)(nil)).Elem()
}

func (i *instanceIAMMemberConditionArgsPtrType) ToInstanceIAMMemberConditionArgsPtrOutput() InstanceIAMMemberConditionArgsPtrOutput {
	return i.ToInstanceIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *instanceIAMMemberConditionArgsPtrType) ToInstanceIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) InstanceIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMMemberConditionArgsPtrOutput)
}

type InstanceIAMMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (InstanceIAMMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMMemberConditionArgs)(nil)).Elem()
}

func (o InstanceIAMMemberConditionArgsOutput) ToInstanceIAMMemberConditionArgsOutput() InstanceIAMMemberConditionArgsOutput {
	return o
}

func (o InstanceIAMMemberConditionArgsOutput) ToInstanceIAMMemberConditionArgsOutputWithContext(ctx context.Context) InstanceIAMMemberConditionArgsOutput {
	return o
}

func (o InstanceIAMMemberConditionArgsOutput) ToInstanceIAMMemberConditionArgsPtrOutput() InstanceIAMMemberConditionArgsPtrOutput {
	return o.ToInstanceIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o InstanceIAMMemberConditionArgsOutput) ToInstanceIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) InstanceIAMMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionArgs) *InstanceIAMMemberConditionArgs {
		return &v
	}).(InstanceIAMMemberConditionArgsPtrOutput)
}
func (o InstanceIAMMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (InstanceIAMMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceIAMMemberConditionArgs)(nil)).Elem()
}

func (o InstanceIAMMemberConditionArgsPtrOutput) ToInstanceIAMMemberConditionArgsPtrOutput() InstanceIAMMemberConditionArgsPtrOutput {
	return o
}

func (o InstanceIAMMemberConditionArgsPtrOutput) ToInstanceIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) InstanceIAMMemberConditionArgsPtrOutput {
	return o
}

func (o InstanceIAMMemberConditionArgsPtrOutput) Elem() InstanceIAMMemberConditionArgsOutput {
	return o.ApplyT(func(v *InstanceIAMMemberConditionArgs) InstanceIAMMemberConditionArgs { return *v }).(InstanceIAMMemberConditionArgsOutput)
}

func (o InstanceIAMMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type InstanceIAMMemberConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type InstanceIAMMemberConditionStateInput interface {
	pulumi.Input

	ToInstanceIAMMemberConditionStateOutput() InstanceIAMMemberConditionStateOutput
	ToInstanceIAMMemberConditionStateOutputWithContext(context.Context) InstanceIAMMemberConditionStateOutput
}

type InstanceIAMMemberConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (InstanceIAMMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMMemberConditionState)(nil)).Elem()
}

func (i InstanceIAMMemberConditionStateArgs) ToInstanceIAMMemberConditionStateOutput() InstanceIAMMemberConditionStateOutput {
	return i.ToInstanceIAMMemberConditionStateOutputWithContext(context.Background())
}

func (i InstanceIAMMemberConditionStateArgs) ToInstanceIAMMemberConditionStateOutputWithContext(ctx context.Context) InstanceIAMMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIAMMemberConditionStateOutput)
}

type InstanceIAMMemberConditionStateOutput struct{ *pulumi.OutputState }

func (InstanceIAMMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIAMMemberConditionState)(nil)).Elem()
}

func (o InstanceIAMMemberConditionStateOutput) ToInstanceIAMMemberConditionStateOutput() InstanceIAMMemberConditionStateOutput {
	return o
}

func (o InstanceIAMMemberConditionStateOutput) ToInstanceIAMMemberConditionStateOutputWithContext(ctx context.Context) InstanceIAMMemberConditionStateOutput {
	return o
}

func (o InstanceIAMMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceIAMMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o InstanceIAMMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceIAMMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(DatabaseIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(DatabaseIAMBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(DatabaseIAMBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseIAMBindingConditionStateOutput{})
	pulumi.RegisterOutputType(DatabaseIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(DatabaseIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(DatabaseIAMMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(DatabaseIAMMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseIAMMemberConditionStateOutput{})
	pulumi.RegisterOutputType(InstanceIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(InstanceIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceIAMBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(InstanceIAMBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(InstanceIAMBindingConditionStateOutput{})
	pulumi.RegisterOutputType(InstanceIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(InstanceIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(InstanceIAMMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(InstanceIAMMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(InstanceIAMMemberConditionStateOutput{})
}
