// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DatabaseIAMMemberCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DatabaseIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type DatabaseIAMMemberConditionInput interface {
	pulumi.Input

	ToDatabaseIAMMemberConditionOutput() DatabaseIAMMemberConditionOutput
	ToDatabaseIAMMemberConditionOutputWithContext(context.Context) DatabaseIAMMemberConditionOutput
}

type DatabaseIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (DatabaseIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMMemberCondition)(nil)).Elem()
}

func (i DatabaseIAMMemberConditionArgs) ToDatabaseIAMMemberConditionOutput() DatabaseIAMMemberConditionOutput {
	return i.ToDatabaseIAMMemberConditionOutputWithContext(context.Background())
}

func (i DatabaseIAMMemberConditionArgs) ToDatabaseIAMMemberConditionOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionOutput)
}

func (i DatabaseIAMMemberConditionArgs) ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput {
	return i.ToDatabaseIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i DatabaseIAMMemberConditionArgs) ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionOutput).ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx)
}

type DatabaseIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput
	ToDatabaseIAMMemberConditionPtrOutputWithContext(context.Context) DatabaseIAMMemberConditionPtrOutput
}

type databaseIAMMemberConditionPtrType DatabaseIAMMemberConditionArgs

func DatabaseIAMMemberConditionPtr(v *DatabaseIAMMemberConditionArgs) DatabaseIAMMemberConditionPtrInput {	return (*databaseIAMMemberConditionPtrType)(v)
}

func (*databaseIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMMemberCondition)(nil)).Elem()
}

func (i *databaseIAMMemberConditionPtrType) ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput {
	return i.ToDatabaseIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *databaseIAMMemberConditionPtrType) ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMMemberConditionPtrOutput)
}

type DatabaseIAMMemberConditionOutput struct { *pulumi.OutputState }

func (DatabaseIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMMemberCondition)(nil)).Elem()
}

func (o DatabaseIAMMemberConditionOutput) ToDatabaseIAMMemberConditionOutput() DatabaseIAMMemberConditionOutput {
	return o
}

func (o DatabaseIAMMemberConditionOutput) ToDatabaseIAMMemberConditionOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionOutput {
	return o
}

func (o DatabaseIAMMemberConditionOutput) ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput {
	return o.ToDatabaseIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o DatabaseIAMMemberConditionOutput) ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v DatabaseIAMMemberCondition) *DatabaseIAMMemberCondition {
		return &v
	}).(DatabaseIAMMemberConditionPtrOutput)
}
func (o DatabaseIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMMemberConditionPtrOutput struct { *pulumi.OutputState}

func (DatabaseIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMMemberCondition)(nil)).Elem()
}

func (o DatabaseIAMMemberConditionPtrOutput) ToDatabaseIAMMemberConditionPtrOutput() DatabaseIAMMemberConditionPtrOutput {
	return o
}

func (o DatabaseIAMMemberConditionPtrOutput) ToDatabaseIAMMemberConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMMemberConditionPtrOutput {
	return o
}

func (o DatabaseIAMMemberConditionPtrOutput) Elem() DatabaseIAMMemberConditionOutput {
	return o.ApplyT(func (v *DatabaseIAMMemberCondition) DatabaseIAMMemberCondition { return *v }).(DatabaseIAMMemberConditionOutput)
}

func (o DatabaseIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(DatabaseIAMMemberConditionPtrOutput{})
}
