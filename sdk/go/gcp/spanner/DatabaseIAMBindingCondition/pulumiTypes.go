// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DatabaseIAMBindingCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DatabaseIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type DatabaseIAMBindingConditionInput interface {
	pulumi.Input

	ToDatabaseIAMBindingConditionOutput() DatabaseIAMBindingConditionOutput
	ToDatabaseIAMBindingConditionOutputWithContext(context.Context) DatabaseIAMBindingConditionOutput
}

type DatabaseIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (DatabaseIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMBindingCondition)(nil)).Elem()
}

func (i DatabaseIAMBindingConditionArgs) ToDatabaseIAMBindingConditionOutput() DatabaseIAMBindingConditionOutput {
	return i.ToDatabaseIAMBindingConditionOutputWithContext(context.Background())
}

func (i DatabaseIAMBindingConditionArgs) ToDatabaseIAMBindingConditionOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionOutput)
}

func (i DatabaseIAMBindingConditionArgs) ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput {
	return i.ToDatabaseIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i DatabaseIAMBindingConditionArgs) ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionOutput).ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx)
}

type DatabaseIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput
	ToDatabaseIAMBindingConditionPtrOutputWithContext(context.Context) DatabaseIAMBindingConditionPtrOutput
}

type databaseIAMBindingConditionPtrType DatabaseIAMBindingConditionArgs

func DatabaseIAMBindingConditionPtr(v *DatabaseIAMBindingConditionArgs) DatabaseIAMBindingConditionPtrInput {	return (*databaseIAMBindingConditionPtrType)(v)
}

func (*databaseIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMBindingCondition)(nil)).Elem()
}

func (i *databaseIAMBindingConditionPtrType) ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput {
	return i.ToDatabaseIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *databaseIAMBindingConditionPtrType) ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseIAMBindingConditionPtrOutput)
}

type DatabaseIAMBindingConditionOutput struct { *pulumi.OutputState }

func (DatabaseIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseIAMBindingCondition)(nil)).Elem()
}

func (o DatabaseIAMBindingConditionOutput) ToDatabaseIAMBindingConditionOutput() DatabaseIAMBindingConditionOutput {
	return o
}

func (o DatabaseIAMBindingConditionOutput) ToDatabaseIAMBindingConditionOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionOutput {
	return o
}

func (o DatabaseIAMBindingConditionOutput) ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput {
	return o.ToDatabaseIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o DatabaseIAMBindingConditionOutput) ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v DatabaseIAMBindingCondition) *DatabaseIAMBindingCondition {
		return &v
	}).(DatabaseIAMBindingConditionPtrOutput)
}
func (o DatabaseIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DatabaseIAMBindingConditionPtrOutput struct { *pulumi.OutputState}

func (DatabaseIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseIAMBindingCondition)(nil)).Elem()
}

func (o DatabaseIAMBindingConditionPtrOutput) ToDatabaseIAMBindingConditionPtrOutput() DatabaseIAMBindingConditionPtrOutput {
	return o
}

func (o DatabaseIAMBindingConditionPtrOutput) ToDatabaseIAMBindingConditionPtrOutputWithContext(ctx context.Context) DatabaseIAMBindingConditionPtrOutput {
	return o
}

func (o DatabaseIAMBindingConditionPtrOutput) Elem() DatabaseIAMBindingConditionOutput {
	return o.ApplyT(func (v *DatabaseIAMBindingCondition) DatabaseIAMBindingCondition { return *v }).(DatabaseIAMBindingConditionOutput)
}

func (o DatabaseIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DatabaseIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DatabaseIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(DatabaseIAMBindingConditionPtrOutput{})
}
