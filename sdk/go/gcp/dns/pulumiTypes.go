// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ManagedZoneDnssecConfig struct {
	DefaultKeySpecs []ManagedZoneDnssecConfigDefaultKeySpec `pulumi:"defaultKeySpecs"`
	Kind            *string                                 `pulumi:"kind"`
	NonExistence    string                                  `pulumi:"nonExistence"`
	State           *string                                 `pulumi:"state"`
}

type ManagedZoneDnssecConfigInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigOutput() ManagedZoneDnssecConfigOutput
	ToManagedZoneDnssecConfigOutputWithContext(context.Context) ManagedZoneDnssecConfigOutput
}

type ManagedZoneDnssecConfigArgs struct {
	DefaultKeySpecs ManagedZoneDnssecConfigDefaultKeySpecArrayInput `pulumi:"defaultKeySpecs"`
	Kind            pulumi.StringPtrInput                           `pulumi:"kind"`
	NonExistence    pulumi.StringInput                              `pulumi:"nonExistence"`
	State           pulumi.StringPtrInput                           `pulumi:"state"`
}

func (ManagedZoneDnssecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfig)(nil)).Elem()
}

func (i ManagedZoneDnssecConfigArgs) ToManagedZoneDnssecConfigOutput() ManagedZoneDnssecConfigOutput {
	return i.ToManagedZoneDnssecConfigOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigArgs) ToManagedZoneDnssecConfigOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigOutput)
}

func (i ManagedZoneDnssecConfigArgs) ToManagedZoneDnssecConfigPtrOutput() ManagedZoneDnssecConfigPtrOutput {
	return i.ToManagedZoneDnssecConfigPtrOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigArgs) ToManagedZoneDnssecConfigPtrOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigOutput).ToManagedZoneDnssecConfigPtrOutputWithContext(ctx)
}

type ManagedZoneDnssecConfigPtrInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigPtrOutput() ManagedZoneDnssecConfigPtrOutput
	ToManagedZoneDnssecConfigPtrOutputWithContext(context.Context) ManagedZoneDnssecConfigPtrOutput
}

type managedZoneDnssecConfigPtrType ManagedZoneDnssecConfigArgs

func ManagedZoneDnssecConfigPtr(v *ManagedZoneDnssecConfigArgs) ManagedZoneDnssecConfigPtrInput {
	return (*managedZoneDnssecConfigPtrType)(v)
}

func (*managedZoneDnssecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZoneDnssecConfig)(nil)).Elem()
}

func (i *managedZoneDnssecConfigPtrType) ToManagedZoneDnssecConfigPtrOutput() ManagedZoneDnssecConfigPtrOutput {
	return i.ToManagedZoneDnssecConfigPtrOutputWithContext(context.Background())
}

func (i *managedZoneDnssecConfigPtrType) ToManagedZoneDnssecConfigPtrOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigPtrOutput)
}

type ManagedZoneDnssecConfigOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfig)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigOutput) ToManagedZoneDnssecConfigOutput() ManagedZoneDnssecConfigOutput {
	return o
}

func (o ManagedZoneDnssecConfigOutput) ToManagedZoneDnssecConfigOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigOutput {
	return o
}

func (o ManagedZoneDnssecConfigOutput) ToManagedZoneDnssecConfigPtrOutput() ManagedZoneDnssecConfigPtrOutput {
	return o.ToManagedZoneDnssecConfigPtrOutputWithContext(context.Background())
}

func (o ManagedZoneDnssecConfigOutput) ToManagedZoneDnssecConfigPtrOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfig) *ManagedZoneDnssecConfig {
		return &v
	}).(ManagedZoneDnssecConfigPtrOutput)
}
func (o ManagedZoneDnssecConfigOutput) DefaultKeySpecs() ManagedZoneDnssecConfigDefaultKeySpecArrayOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfig) []ManagedZoneDnssecConfigDefaultKeySpec { return v.DefaultKeySpecs }).(ManagedZoneDnssecConfigDefaultKeySpecArrayOutput)
}

func (o ManagedZoneDnssecConfigOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfig) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigOutput) NonExistence() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfig) string { return v.NonExistence }).(pulumi.StringOutput)
}

func (o ManagedZoneDnssecConfigOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfig) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedZoneDnssecConfigPtrOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZoneDnssecConfig)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigPtrOutput) ToManagedZoneDnssecConfigPtrOutput() ManagedZoneDnssecConfigPtrOutput {
	return o
}

func (o ManagedZoneDnssecConfigPtrOutput) ToManagedZoneDnssecConfigPtrOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigPtrOutput {
	return o
}

func (o ManagedZoneDnssecConfigPtrOutput) Elem() ManagedZoneDnssecConfigOutput {
	return o.ApplyT(func(v *ManagedZoneDnssecConfig) ManagedZoneDnssecConfig { return *v }).(ManagedZoneDnssecConfigOutput)
}

func (o ManagedZoneDnssecConfigPtrOutput) DefaultKeySpecs() ManagedZoneDnssecConfigDefaultKeySpecArrayOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfig) []ManagedZoneDnssecConfigDefaultKeySpec { return v.DefaultKeySpecs }).(ManagedZoneDnssecConfigDefaultKeySpecArrayOutput)
}

func (o ManagedZoneDnssecConfigPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfig) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigPtrOutput) NonExistence() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfig) string { return v.NonExistence }).(pulumi.StringOutput)
}

func (o ManagedZoneDnssecConfigPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfig) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedZoneDnssecConfigArgs struct {
	DefaultKeySpecs []ManagedZoneDnssecConfigDefaultKeySpecArgs `pulumi:"defaultKeySpecs"`
	Kind            *string                                     `pulumi:"kind"`
	NonExistence    *string                                     `pulumi:"nonExistence"`
	State           *string                                     `pulumi:"state"`
}

type ManagedZoneDnssecConfigArgsInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigArgsOutput() ManagedZoneDnssecConfigArgsOutput
	ToManagedZoneDnssecConfigArgsOutputWithContext(context.Context) ManagedZoneDnssecConfigArgsOutput
}

type ManagedZoneDnssecConfigArgsArgs struct {
	DefaultKeySpecs ManagedZoneDnssecConfigDefaultKeySpecArgsArrayInput `pulumi:"defaultKeySpecs"`
	Kind            pulumi.StringPtrInput                               `pulumi:"kind"`
	NonExistence    pulumi.StringPtrInput                               `pulumi:"nonExistence"`
	State           pulumi.StringPtrInput                               `pulumi:"state"`
}

func (ManagedZoneDnssecConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigArgs)(nil)).Elem()
}

func (i ManagedZoneDnssecConfigArgsArgs) ToManagedZoneDnssecConfigArgsOutput() ManagedZoneDnssecConfigArgsOutput {
	return i.ToManagedZoneDnssecConfigArgsOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigArgsArgs) ToManagedZoneDnssecConfigArgsOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigArgsOutput)
}

func (i ManagedZoneDnssecConfigArgsArgs) ToManagedZoneDnssecConfigArgsPtrOutput() ManagedZoneDnssecConfigArgsPtrOutput {
	return i.ToManagedZoneDnssecConfigArgsPtrOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigArgsArgs) ToManagedZoneDnssecConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigArgsOutput).ToManagedZoneDnssecConfigArgsPtrOutputWithContext(ctx)
}

type ManagedZoneDnssecConfigArgsPtrInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigArgsPtrOutput() ManagedZoneDnssecConfigArgsPtrOutput
	ToManagedZoneDnssecConfigArgsPtrOutputWithContext(context.Context) ManagedZoneDnssecConfigArgsPtrOutput
}

type managedZoneDnssecConfigArgsPtrType ManagedZoneDnssecConfigArgsArgs

func ManagedZoneDnssecConfigArgsPtr(v *ManagedZoneDnssecConfigArgsArgs) ManagedZoneDnssecConfigArgsPtrInput {
	return (*managedZoneDnssecConfigArgsPtrType)(v)
}

func (*managedZoneDnssecConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZoneDnssecConfigArgs)(nil)).Elem()
}

func (i *managedZoneDnssecConfigArgsPtrType) ToManagedZoneDnssecConfigArgsPtrOutput() ManagedZoneDnssecConfigArgsPtrOutput {
	return i.ToManagedZoneDnssecConfigArgsPtrOutputWithContext(context.Background())
}

func (i *managedZoneDnssecConfigArgsPtrType) ToManagedZoneDnssecConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigArgsPtrOutput)
}

type ManagedZoneDnssecConfigArgsOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigArgs)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigArgsOutput) ToManagedZoneDnssecConfigArgsOutput() ManagedZoneDnssecConfigArgsOutput {
	return o
}

func (o ManagedZoneDnssecConfigArgsOutput) ToManagedZoneDnssecConfigArgsOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigArgsOutput {
	return o
}

func (o ManagedZoneDnssecConfigArgsOutput) ToManagedZoneDnssecConfigArgsPtrOutput() ManagedZoneDnssecConfigArgsPtrOutput {
	return o.ToManagedZoneDnssecConfigArgsPtrOutputWithContext(context.Background())
}

func (o ManagedZoneDnssecConfigArgsOutput) ToManagedZoneDnssecConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigArgsPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigArgs) *ManagedZoneDnssecConfigArgs {
		return &v
	}).(ManagedZoneDnssecConfigArgsPtrOutput)
}
func (o ManagedZoneDnssecConfigArgsOutput) DefaultKeySpecs() ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigArgs) []ManagedZoneDnssecConfigDefaultKeySpecArgs {
		return v.DefaultKeySpecs
	}).(ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput)
}

func (o ManagedZoneDnssecConfigArgsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigArgs) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigArgsOutput) NonExistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigArgs) *string { return v.NonExistence }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigArgsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigArgs) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedZoneDnssecConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZoneDnssecConfigArgs)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigArgsPtrOutput) ToManagedZoneDnssecConfigArgsPtrOutput() ManagedZoneDnssecConfigArgsPtrOutput {
	return o
}

func (o ManagedZoneDnssecConfigArgsPtrOutput) ToManagedZoneDnssecConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigArgsPtrOutput {
	return o
}

func (o ManagedZoneDnssecConfigArgsPtrOutput) Elem() ManagedZoneDnssecConfigArgsOutput {
	return o.ApplyT(func(v *ManagedZoneDnssecConfigArgs) ManagedZoneDnssecConfigArgs { return *v }).(ManagedZoneDnssecConfigArgsOutput)
}

func (o ManagedZoneDnssecConfigArgsPtrOutput) DefaultKeySpecs() ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigArgs) []ManagedZoneDnssecConfigDefaultKeySpecArgs {
		return v.DefaultKeySpecs
	}).(ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput)
}

func (o ManagedZoneDnssecConfigArgsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigArgs) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigArgsPtrOutput) NonExistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigArgs) *string { return v.NonExistence }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigArgsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigArgs) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedZoneDnssecConfigDefaultKeySpec struct {
	Algorithm *string `pulumi:"algorithm"`
	KeyLength *int    `pulumi:"keyLength"`
	KeyType   *string `pulumi:"keyType"`
	Kind      *string `pulumi:"kind"`
}

type ManagedZoneDnssecConfigDefaultKeySpecInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigDefaultKeySpecOutput() ManagedZoneDnssecConfigDefaultKeySpecOutput
	ToManagedZoneDnssecConfigDefaultKeySpecOutputWithContext(context.Context) ManagedZoneDnssecConfigDefaultKeySpecOutput
}

type ManagedZoneDnssecConfigDefaultKeySpecArgs struct {
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	KeyLength pulumi.IntPtrInput    `pulumi:"keyLength"`
	KeyType   pulumi.StringPtrInput `pulumi:"keyType"`
	Kind      pulumi.StringPtrInput `pulumi:"kind"`
}

func (ManagedZoneDnssecConfigDefaultKeySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigDefaultKeySpec)(nil)).Elem()
}

func (i ManagedZoneDnssecConfigDefaultKeySpecArgs) ToManagedZoneDnssecConfigDefaultKeySpecOutput() ManagedZoneDnssecConfigDefaultKeySpecOutput {
	return i.ToManagedZoneDnssecConfigDefaultKeySpecOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigDefaultKeySpecArgs) ToManagedZoneDnssecConfigDefaultKeySpecOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigDefaultKeySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigDefaultKeySpecOutput)
}

type ManagedZoneDnssecConfigDefaultKeySpecArrayInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigDefaultKeySpecArrayOutput() ManagedZoneDnssecConfigDefaultKeySpecArrayOutput
	ToManagedZoneDnssecConfigDefaultKeySpecArrayOutputWithContext(context.Context) ManagedZoneDnssecConfigDefaultKeySpecArrayOutput
}

type ManagedZoneDnssecConfigDefaultKeySpecArray []ManagedZoneDnssecConfigDefaultKeySpecInput

func (ManagedZoneDnssecConfigDefaultKeySpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneDnssecConfigDefaultKeySpec)(nil)).Elem()
}

func (i ManagedZoneDnssecConfigDefaultKeySpecArray) ToManagedZoneDnssecConfigDefaultKeySpecArrayOutput() ManagedZoneDnssecConfigDefaultKeySpecArrayOutput {
	return i.ToManagedZoneDnssecConfigDefaultKeySpecArrayOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigDefaultKeySpecArray) ToManagedZoneDnssecConfigDefaultKeySpecArrayOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigDefaultKeySpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigDefaultKeySpecArrayOutput)
}

type ManagedZoneDnssecConfigDefaultKeySpecOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigDefaultKeySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigDefaultKeySpec)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigDefaultKeySpecOutput) ToManagedZoneDnssecConfigDefaultKeySpecOutput() ManagedZoneDnssecConfigDefaultKeySpecOutput {
	return o
}

func (o ManagedZoneDnssecConfigDefaultKeySpecOutput) ToManagedZoneDnssecConfigDefaultKeySpecOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigDefaultKeySpecOutput {
	return o
}

func (o ManagedZoneDnssecConfigDefaultKeySpecOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigDefaultKeySpec) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigDefaultKeySpecOutput) KeyLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigDefaultKeySpec) *int { return v.KeyLength }).(pulumi.IntPtrOutput)
}

func (o ManagedZoneDnssecConfigDefaultKeySpecOutput) KeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigDefaultKeySpec) *string { return v.KeyType }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigDefaultKeySpecOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigDefaultKeySpec) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

type ManagedZoneDnssecConfigDefaultKeySpecArrayOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigDefaultKeySpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneDnssecConfigDefaultKeySpec)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArrayOutput) ToManagedZoneDnssecConfigDefaultKeySpecArrayOutput() ManagedZoneDnssecConfigDefaultKeySpecArrayOutput {
	return o
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArrayOutput) ToManagedZoneDnssecConfigDefaultKeySpecArrayOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigDefaultKeySpecArrayOutput {
	return o
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArrayOutput) Index(i pulumi.IntInput) ManagedZoneDnssecConfigDefaultKeySpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedZoneDnssecConfigDefaultKeySpec {
		return vs[0].([]ManagedZoneDnssecConfigDefaultKeySpec)[vs[1].(int)]
	}).(ManagedZoneDnssecConfigDefaultKeySpecOutput)
}

type ManagedZoneDnssecConfigDefaultKeySpecArgs struct {
	Algorithm *string `pulumi:"algorithm"`
	KeyLength *int    `pulumi:"keyLength"`
	KeyType   *string `pulumi:"keyType"`
	Kind      *string `pulumi:"kind"`
}

type ManagedZoneDnssecConfigDefaultKeySpecArgsInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigDefaultKeySpecArgsOutput() ManagedZoneDnssecConfigDefaultKeySpecArgsOutput
	ToManagedZoneDnssecConfigDefaultKeySpecArgsOutputWithContext(context.Context) ManagedZoneDnssecConfigDefaultKeySpecArgsOutput
}

type ManagedZoneDnssecConfigDefaultKeySpecArgsArgs struct {
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	KeyLength pulumi.IntPtrInput    `pulumi:"keyLength"`
	KeyType   pulumi.StringPtrInput `pulumi:"keyType"`
	Kind      pulumi.StringPtrInput `pulumi:"kind"`
}

func (ManagedZoneDnssecConfigDefaultKeySpecArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigDefaultKeySpecArgs)(nil)).Elem()
}

func (i ManagedZoneDnssecConfigDefaultKeySpecArgsArgs) ToManagedZoneDnssecConfigDefaultKeySpecArgsOutput() ManagedZoneDnssecConfigDefaultKeySpecArgsOutput {
	return i.ToManagedZoneDnssecConfigDefaultKeySpecArgsOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigDefaultKeySpecArgsArgs) ToManagedZoneDnssecConfigDefaultKeySpecArgsOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigDefaultKeySpecArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigDefaultKeySpecArgsOutput)
}

type ManagedZoneDnssecConfigDefaultKeySpecArgsArrayInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput() ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput
	ToManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutputWithContext(context.Context) ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput
}

type ManagedZoneDnssecConfigDefaultKeySpecArgsArray []ManagedZoneDnssecConfigDefaultKeySpecArgsInput

func (ManagedZoneDnssecConfigDefaultKeySpecArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneDnssecConfigDefaultKeySpecArgs)(nil)).Elem()
}

func (i ManagedZoneDnssecConfigDefaultKeySpecArgsArray) ToManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput() ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput {
	return i.ToManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigDefaultKeySpecArgsArray) ToManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput)
}

type ManagedZoneDnssecConfigDefaultKeySpecArgsOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigDefaultKeySpecArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigDefaultKeySpecArgs)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArgsOutput) ToManagedZoneDnssecConfigDefaultKeySpecArgsOutput() ManagedZoneDnssecConfigDefaultKeySpecArgsOutput {
	return o
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArgsOutput) ToManagedZoneDnssecConfigDefaultKeySpecArgsOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigDefaultKeySpecArgsOutput {
	return o
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArgsOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigDefaultKeySpecArgs) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArgsOutput) KeyLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigDefaultKeySpecArgs) *int { return v.KeyLength }).(pulumi.IntPtrOutput)
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArgsOutput) KeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigDefaultKeySpecArgs) *string { return v.KeyType }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArgsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigDefaultKeySpecArgs) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

type ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneDnssecConfigDefaultKeySpecArgs)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput) ToManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput() ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput {
	return o
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput) ToManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput {
	return o
}

func (o ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput) Index(i pulumi.IntInput) ManagedZoneDnssecConfigDefaultKeySpecArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedZoneDnssecConfigDefaultKeySpecArgs {
		return vs[0].([]ManagedZoneDnssecConfigDefaultKeySpecArgs)[vs[1].(int)]
	}).(ManagedZoneDnssecConfigDefaultKeySpecArgsOutput)
}

type ManagedZoneDnssecConfigState struct {
	DefaultKeySpecs []ManagedZoneDnssecConfigStateDefaultKeySpec `pulumi:"defaultKeySpecs"`
	Kind            *string                                      `pulumi:"kind"`
	NonExistence    *string                                      `pulumi:"nonExistence"`
	State           *string                                      `pulumi:"state"`
}

type ManagedZoneDnssecConfigStateInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigStateOutput() ManagedZoneDnssecConfigStateOutput
	ToManagedZoneDnssecConfigStateOutputWithContext(context.Context) ManagedZoneDnssecConfigStateOutput
}

type ManagedZoneDnssecConfigStateArgs struct {
	DefaultKeySpecs ManagedZoneDnssecConfigStateDefaultKeySpecArrayInput `pulumi:"defaultKeySpecs"`
	Kind            pulumi.StringPtrInput                                `pulumi:"kind"`
	NonExistence    pulumi.StringPtrInput                                `pulumi:"nonExistence"`
	State           pulumi.StringPtrInput                                `pulumi:"state"`
}

func (ManagedZoneDnssecConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigState)(nil)).Elem()
}

func (i ManagedZoneDnssecConfigStateArgs) ToManagedZoneDnssecConfigStateOutput() ManagedZoneDnssecConfigStateOutput {
	return i.ToManagedZoneDnssecConfigStateOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigStateArgs) ToManagedZoneDnssecConfigStateOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigStateOutput)
}

type ManagedZoneDnssecConfigStateOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigState)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigStateOutput) ToManagedZoneDnssecConfigStateOutput() ManagedZoneDnssecConfigStateOutput {
	return o
}

func (o ManagedZoneDnssecConfigStateOutput) ToManagedZoneDnssecConfigStateOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigStateOutput {
	return o
}

func (o ManagedZoneDnssecConfigStateOutput) DefaultKeySpecs() ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigState) []ManagedZoneDnssecConfigStateDefaultKeySpec {
		return v.DefaultKeySpecs
	}).(ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput)
}

func (o ManagedZoneDnssecConfigStateOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigState) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigStateOutput) NonExistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigState) *string { return v.NonExistence }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigState) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedZoneDnssecConfigStateDefaultKeySpec struct {
	Algorithm *string `pulumi:"algorithm"`
	KeyLength *int    `pulumi:"keyLength"`
	KeyType   *string `pulumi:"keyType"`
	Kind      *string `pulumi:"kind"`
}

type ManagedZoneDnssecConfigStateDefaultKeySpecInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigStateDefaultKeySpecOutput() ManagedZoneDnssecConfigStateDefaultKeySpecOutput
	ToManagedZoneDnssecConfigStateDefaultKeySpecOutputWithContext(context.Context) ManagedZoneDnssecConfigStateDefaultKeySpecOutput
}

type ManagedZoneDnssecConfigStateDefaultKeySpecArgs struct {
	Algorithm pulumi.StringPtrInput `pulumi:"algorithm"`
	KeyLength pulumi.IntPtrInput    `pulumi:"keyLength"`
	KeyType   pulumi.StringPtrInput `pulumi:"keyType"`
	Kind      pulumi.StringPtrInput `pulumi:"kind"`
}

func (ManagedZoneDnssecConfigStateDefaultKeySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigStateDefaultKeySpec)(nil)).Elem()
}

func (i ManagedZoneDnssecConfigStateDefaultKeySpecArgs) ToManagedZoneDnssecConfigStateDefaultKeySpecOutput() ManagedZoneDnssecConfigStateDefaultKeySpecOutput {
	return i.ToManagedZoneDnssecConfigStateDefaultKeySpecOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigStateDefaultKeySpecArgs) ToManagedZoneDnssecConfigStateDefaultKeySpecOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigStateDefaultKeySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigStateDefaultKeySpecOutput)
}

type ManagedZoneDnssecConfigStateDefaultKeySpecArrayInput interface {
	pulumi.Input

	ToManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput() ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput
	ToManagedZoneDnssecConfigStateDefaultKeySpecArrayOutputWithContext(context.Context) ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput
}

type ManagedZoneDnssecConfigStateDefaultKeySpecArray []ManagedZoneDnssecConfigStateDefaultKeySpecInput

func (ManagedZoneDnssecConfigStateDefaultKeySpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneDnssecConfigStateDefaultKeySpec)(nil)).Elem()
}

func (i ManagedZoneDnssecConfigStateDefaultKeySpecArray) ToManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput() ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput {
	return i.ToManagedZoneDnssecConfigStateDefaultKeySpecArrayOutputWithContext(context.Background())
}

func (i ManagedZoneDnssecConfigStateDefaultKeySpecArray) ToManagedZoneDnssecConfigStateDefaultKeySpecArrayOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput)
}

type ManagedZoneDnssecConfigStateDefaultKeySpecOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigStateDefaultKeySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneDnssecConfigStateDefaultKeySpec)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigStateDefaultKeySpecOutput) ToManagedZoneDnssecConfigStateDefaultKeySpecOutput() ManagedZoneDnssecConfigStateDefaultKeySpecOutput {
	return o
}

func (o ManagedZoneDnssecConfigStateDefaultKeySpecOutput) ToManagedZoneDnssecConfigStateDefaultKeySpecOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigStateDefaultKeySpecOutput {
	return o
}

func (o ManagedZoneDnssecConfigStateDefaultKeySpecOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigStateDefaultKeySpec) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigStateDefaultKeySpecOutput) KeyLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigStateDefaultKeySpec) *int { return v.KeyLength }).(pulumi.IntPtrOutput)
}

func (o ManagedZoneDnssecConfigStateDefaultKeySpecOutput) KeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigStateDefaultKeySpec) *string { return v.KeyType }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneDnssecConfigStateDefaultKeySpecOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneDnssecConfigStateDefaultKeySpec) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

type ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput struct{ *pulumi.OutputState }

func (ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneDnssecConfigStateDefaultKeySpec)(nil)).Elem()
}

func (o ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput) ToManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput() ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput {
	return o
}

func (o ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput) ToManagedZoneDnssecConfigStateDefaultKeySpecArrayOutputWithContext(ctx context.Context) ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput {
	return o
}

func (o ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput) Index(i pulumi.IntInput) ManagedZoneDnssecConfigStateDefaultKeySpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedZoneDnssecConfigStateDefaultKeySpec {
		return vs[0].([]ManagedZoneDnssecConfigStateDefaultKeySpec)[vs[1].(int)]
	}).(ManagedZoneDnssecConfigStateDefaultKeySpecOutput)
}

type ManagedZoneForwardingConfig struct {
	TargetNameServers []ManagedZoneForwardingConfigTargetNameServer `pulumi:"targetNameServers"`
}

type ManagedZoneForwardingConfigInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigOutput() ManagedZoneForwardingConfigOutput
	ToManagedZoneForwardingConfigOutputWithContext(context.Context) ManagedZoneForwardingConfigOutput
}

type ManagedZoneForwardingConfigArgs struct {
	TargetNameServers ManagedZoneForwardingConfigTargetNameServerArrayInput `pulumi:"targetNameServers"`
}

func (ManagedZoneForwardingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfig)(nil)).Elem()
}

func (i ManagedZoneForwardingConfigArgs) ToManagedZoneForwardingConfigOutput() ManagedZoneForwardingConfigOutput {
	return i.ToManagedZoneForwardingConfigOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigArgs) ToManagedZoneForwardingConfigOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigOutput)
}

func (i ManagedZoneForwardingConfigArgs) ToManagedZoneForwardingConfigPtrOutput() ManagedZoneForwardingConfigPtrOutput {
	return i.ToManagedZoneForwardingConfigPtrOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigArgs) ToManagedZoneForwardingConfigPtrOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigOutput).ToManagedZoneForwardingConfigPtrOutputWithContext(ctx)
}

type ManagedZoneForwardingConfigPtrInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigPtrOutput() ManagedZoneForwardingConfigPtrOutput
	ToManagedZoneForwardingConfigPtrOutputWithContext(context.Context) ManagedZoneForwardingConfigPtrOutput
}

type managedZoneForwardingConfigPtrType ManagedZoneForwardingConfigArgs

func ManagedZoneForwardingConfigPtr(v *ManagedZoneForwardingConfigArgs) ManagedZoneForwardingConfigPtrInput {
	return (*managedZoneForwardingConfigPtrType)(v)
}

func (*managedZoneForwardingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZoneForwardingConfig)(nil)).Elem()
}

func (i *managedZoneForwardingConfigPtrType) ToManagedZoneForwardingConfigPtrOutput() ManagedZoneForwardingConfigPtrOutput {
	return i.ToManagedZoneForwardingConfigPtrOutputWithContext(context.Background())
}

func (i *managedZoneForwardingConfigPtrType) ToManagedZoneForwardingConfigPtrOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigPtrOutput)
}

type ManagedZoneForwardingConfigOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfig)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigOutput) ToManagedZoneForwardingConfigOutput() ManagedZoneForwardingConfigOutput {
	return o
}

func (o ManagedZoneForwardingConfigOutput) ToManagedZoneForwardingConfigOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigOutput {
	return o
}

func (o ManagedZoneForwardingConfigOutput) ToManagedZoneForwardingConfigPtrOutput() ManagedZoneForwardingConfigPtrOutput {
	return o.ToManagedZoneForwardingConfigPtrOutputWithContext(context.Background())
}

func (o ManagedZoneForwardingConfigOutput) ToManagedZoneForwardingConfigPtrOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigPtrOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfig) *ManagedZoneForwardingConfig {
		return &v
	}).(ManagedZoneForwardingConfigPtrOutput)
}
func (o ManagedZoneForwardingConfigOutput) TargetNameServers() ManagedZoneForwardingConfigTargetNameServerArrayOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfig) []ManagedZoneForwardingConfigTargetNameServer {
		return v.TargetNameServers
	}).(ManagedZoneForwardingConfigTargetNameServerArrayOutput)
}

type ManagedZoneForwardingConfigPtrOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZoneForwardingConfig)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigPtrOutput) ToManagedZoneForwardingConfigPtrOutput() ManagedZoneForwardingConfigPtrOutput {
	return o
}

func (o ManagedZoneForwardingConfigPtrOutput) ToManagedZoneForwardingConfigPtrOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigPtrOutput {
	return o
}

func (o ManagedZoneForwardingConfigPtrOutput) Elem() ManagedZoneForwardingConfigOutput {
	return o.ApplyT(func(v *ManagedZoneForwardingConfig) ManagedZoneForwardingConfig { return *v }).(ManagedZoneForwardingConfigOutput)
}

func (o ManagedZoneForwardingConfigPtrOutput) TargetNameServers() ManagedZoneForwardingConfigTargetNameServerArrayOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfig) []ManagedZoneForwardingConfigTargetNameServer {
		return v.TargetNameServers
	}).(ManagedZoneForwardingConfigTargetNameServerArrayOutput)
}

type ManagedZoneForwardingConfigArgs struct {
	TargetNameServers []ManagedZoneForwardingConfigTargetNameServerArgs `pulumi:"targetNameServers"`
}

type ManagedZoneForwardingConfigArgsInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigArgsOutput() ManagedZoneForwardingConfigArgsOutput
	ToManagedZoneForwardingConfigArgsOutputWithContext(context.Context) ManagedZoneForwardingConfigArgsOutput
}

type ManagedZoneForwardingConfigArgsArgs struct {
	TargetNameServers ManagedZoneForwardingConfigTargetNameServerArgsArrayInput `pulumi:"targetNameServers"`
}

func (ManagedZoneForwardingConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigArgs)(nil)).Elem()
}

func (i ManagedZoneForwardingConfigArgsArgs) ToManagedZoneForwardingConfigArgsOutput() ManagedZoneForwardingConfigArgsOutput {
	return i.ToManagedZoneForwardingConfigArgsOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigArgsArgs) ToManagedZoneForwardingConfigArgsOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigArgsOutput)
}

func (i ManagedZoneForwardingConfigArgsArgs) ToManagedZoneForwardingConfigArgsPtrOutput() ManagedZoneForwardingConfigArgsPtrOutput {
	return i.ToManagedZoneForwardingConfigArgsPtrOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigArgsArgs) ToManagedZoneForwardingConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigArgsOutput).ToManagedZoneForwardingConfigArgsPtrOutputWithContext(ctx)
}

type ManagedZoneForwardingConfigArgsPtrInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigArgsPtrOutput() ManagedZoneForwardingConfigArgsPtrOutput
	ToManagedZoneForwardingConfigArgsPtrOutputWithContext(context.Context) ManagedZoneForwardingConfigArgsPtrOutput
}

type managedZoneForwardingConfigArgsPtrType ManagedZoneForwardingConfigArgsArgs

func ManagedZoneForwardingConfigArgsPtr(v *ManagedZoneForwardingConfigArgsArgs) ManagedZoneForwardingConfigArgsPtrInput {
	return (*managedZoneForwardingConfigArgsPtrType)(v)
}

func (*managedZoneForwardingConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZoneForwardingConfigArgs)(nil)).Elem()
}

func (i *managedZoneForwardingConfigArgsPtrType) ToManagedZoneForwardingConfigArgsPtrOutput() ManagedZoneForwardingConfigArgsPtrOutput {
	return i.ToManagedZoneForwardingConfigArgsPtrOutputWithContext(context.Background())
}

func (i *managedZoneForwardingConfigArgsPtrType) ToManagedZoneForwardingConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigArgsPtrOutput)
}

type ManagedZoneForwardingConfigArgsOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigArgs)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigArgsOutput) ToManagedZoneForwardingConfigArgsOutput() ManagedZoneForwardingConfigArgsOutput {
	return o
}

func (o ManagedZoneForwardingConfigArgsOutput) ToManagedZoneForwardingConfigArgsOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigArgsOutput {
	return o
}

func (o ManagedZoneForwardingConfigArgsOutput) ToManagedZoneForwardingConfigArgsPtrOutput() ManagedZoneForwardingConfigArgsPtrOutput {
	return o.ToManagedZoneForwardingConfigArgsPtrOutputWithContext(context.Background())
}

func (o ManagedZoneForwardingConfigArgsOutput) ToManagedZoneForwardingConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigArgsPtrOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigArgs) *ManagedZoneForwardingConfigArgs {
		return &v
	}).(ManagedZoneForwardingConfigArgsPtrOutput)
}
func (o ManagedZoneForwardingConfigArgsOutput) TargetNameServers() ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigArgs) []ManagedZoneForwardingConfigTargetNameServerArgs {
		return v.TargetNameServers
	}).(ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput)
}

type ManagedZoneForwardingConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZoneForwardingConfigArgs)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigArgsPtrOutput) ToManagedZoneForwardingConfigArgsPtrOutput() ManagedZoneForwardingConfigArgsPtrOutput {
	return o
}

func (o ManagedZoneForwardingConfigArgsPtrOutput) ToManagedZoneForwardingConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigArgsPtrOutput {
	return o
}

func (o ManagedZoneForwardingConfigArgsPtrOutput) Elem() ManagedZoneForwardingConfigArgsOutput {
	return o.ApplyT(func(v *ManagedZoneForwardingConfigArgs) ManagedZoneForwardingConfigArgs { return *v }).(ManagedZoneForwardingConfigArgsOutput)
}

func (o ManagedZoneForwardingConfigArgsPtrOutput) TargetNameServers() ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigArgs) []ManagedZoneForwardingConfigTargetNameServerArgs {
		return v.TargetNameServers
	}).(ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput)
}

type ManagedZoneForwardingConfigState struct {
	TargetNameServers []ManagedZoneForwardingConfigStateTargetNameServer `pulumi:"targetNameServers"`
}

type ManagedZoneForwardingConfigStateInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigStateOutput() ManagedZoneForwardingConfigStateOutput
	ToManagedZoneForwardingConfigStateOutputWithContext(context.Context) ManagedZoneForwardingConfigStateOutput
}

type ManagedZoneForwardingConfigStateArgs struct {
	TargetNameServers ManagedZoneForwardingConfigStateTargetNameServerArrayInput `pulumi:"targetNameServers"`
}

func (ManagedZoneForwardingConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigState)(nil)).Elem()
}

func (i ManagedZoneForwardingConfigStateArgs) ToManagedZoneForwardingConfigStateOutput() ManagedZoneForwardingConfigStateOutput {
	return i.ToManagedZoneForwardingConfigStateOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigStateArgs) ToManagedZoneForwardingConfigStateOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigStateOutput)
}

type ManagedZoneForwardingConfigStateOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigState)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigStateOutput) ToManagedZoneForwardingConfigStateOutput() ManagedZoneForwardingConfigStateOutput {
	return o
}

func (o ManagedZoneForwardingConfigStateOutput) ToManagedZoneForwardingConfigStateOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigStateOutput {
	return o
}

func (o ManagedZoneForwardingConfigStateOutput) TargetNameServers() ManagedZoneForwardingConfigStateTargetNameServerArrayOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigState) []ManagedZoneForwardingConfigStateTargetNameServer {
		return v.TargetNameServers
	}).(ManagedZoneForwardingConfigStateTargetNameServerArrayOutput)
}

type ManagedZoneForwardingConfigStateTargetNameServer struct {
	ForwardingPath *string `pulumi:"forwardingPath"`
	Ipv4Address    string  `pulumi:"ipv4Address"`
}

type ManagedZoneForwardingConfigStateTargetNameServerInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigStateTargetNameServerOutput() ManagedZoneForwardingConfigStateTargetNameServerOutput
	ToManagedZoneForwardingConfigStateTargetNameServerOutputWithContext(context.Context) ManagedZoneForwardingConfigStateTargetNameServerOutput
}

type ManagedZoneForwardingConfigStateTargetNameServerArgs struct {
	ForwardingPath pulumi.StringPtrInput `pulumi:"forwardingPath"`
	Ipv4Address    pulumi.StringInput    `pulumi:"ipv4Address"`
}

func (ManagedZoneForwardingConfigStateTargetNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigStateTargetNameServer)(nil)).Elem()
}

func (i ManagedZoneForwardingConfigStateTargetNameServerArgs) ToManagedZoneForwardingConfigStateTargetNameServerOutput() ManagedZoneForwardingConfigStateTargetNameServerOutput {
	return i.ToManagedZoneForwardingConfigStateTargetNameServerOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigStateTargetNameServerArgs) ToManagedZoneForwardingConfigStateTargetNameServerOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigStateTargetNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigStateTargetNameServerOutput)
}

type ManagedZoneForwardingConfigStateTargetNameServerArrayInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigStateTargetNameServerArrayOutput() ManagedZoneForwardingConfigStateTargetNameServerArrayOutput
	ToManagedZoneForwardingConfigStateTargetNameServerArrayOutputWithContext(context.Context) ManagedZoneForwardingConfigStateTargetNameServerArrayOutput
}

type ManagedZoneForwardingConfigStateTargetNameServerArray []ManagedZoneForwardingConfigStateTargetNameServerInput

func (ManagedZoneForwardingConfigStateTargetNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneForwardingConfigStateTargetNameServer)(nil)).Elem()
}

func (i ManagedZoneForwardingConfigStateTargetNameServerArray) ToManagedZoneForwardingConfigStateTargetNameServerArrayOutput() ManagedZoneForwardingConfigStateTargetNameServerArrayOutput {
	return i.ToManagedZoneForwardingConfigStateTargetNameServerArrayOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigStateTargetNameServerArray) ToManagedZoneForwardingConfigStateTargetNameServerArrayOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigStateTargetNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigStateTargetNameServerArrayOutput)
}

type ManagedZoneForwardingConfigStateTargetNameServerOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigStateTargetNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigStateTargetNameServer)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigStateTargetNameServerOutput) ToManagedZoneForwardingConfigStateTargetNameServerOutput() ManagedZoneForwardingConfigStateTargetNameServerOutput {
	return o
}

func (o ManagedZoneForwardingConfigStateTargetNameServerOutput) ToManagedZoneForwardingConfigStateTargetNameServerOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigStateTargetNameServerOutput {
	return o
}

func (o ManagedZoneForwardingConfigStateTargetNameServerOutput) ForwardingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigStateTargetNameServer) *string { return v.ForwardingPath }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneForwardingConfigStateTargetNameServerOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigStateTargetNameServer) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

type ManagedZoneForwardingConfigStateTargetNameServerArrayOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigStateTargetNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneForwardingConfigStateTargetNameServer)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigStateTargetNameServerArrayOutput) ToManagedZoneForwardingConfigStateTargetNameServerArrayOutput() ManagedZoneForwardingConfigStateTargetNameServerArrayOutput {
	return o
}

func (o ManagedZoneForwardingConfigStateTargetNameServerArrayOutput) ToManagedZoneForwardingConfigStateTargetNameServerArrayOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigStateTargetNameServerArrayOutput {
	return o
}

func (o ManagedZoneForwardingConfigStateTargetNameServerArrayOutput) Index(i pulumi.IntInput) ManagedZoneForwardingConfigStateTargetNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedZoneForwardingConfigStateTargetNameServer {
		return vs[0].([]ManagedZoneForwardingConfigStateTargetNameServer)[vs[1].(int)]
	}).(ManagedZoneForwardingConfigStateTargetNameServerOutput)
}

type ManagedZoneForwardingConfigTargetNameServer struct {
	ForwardingPath *string `pulumi:"forwardingPath"`
	Ipv4Address    string  `pulumi:"ipv4Address"`
}

type ManagedZoneForwardingConfigTargetNameServerInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigTargetNameServerOutput() ManagedZoneForwardingConfigTargetNameServerOutput
	ToManagedZoneForwardingConfigTargetNameServerOutputWithContext(context.Context) ManagedZoneForwardingConfigTargetNameServerOutput
}

type ManagedZoneForwardingConfigTargetNameServerArgs struct {
	ForwardingPath pulumi.StringPtrInput `pulumi:"forwardingPath"`
	Ipv4Address    pulumi.StringInput    `pulumi:"ipv4Address"`
}

func (ManagedZoneForwardingConfigTargetNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigTargetNameServer)(nil)).Elem()
}

func (i ManagedZoneForwardingConfigTargetNameServerArgs) ToManagedZoneForwardingConfigTargetNameServerOutput() ManagedZoneForwardingConfigTargetNameServerOutput {
	return i.ToManagedZoneForwardingConfigTargetNameServerOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigTargetNameServerArgs) ToManagedZoneForwardingConfigTargetNameServerOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigTargetNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigTargetNameServerOutput)
}

type ManagedZoneForwardingConfigTargetNameServerArrayInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigTargetNameServerArrayOutput() ManagedZoneForwardingConfigTargetNameServerArrayOutput
	ToManagedZoneForwardingConfigTargetNameServerArrayOutputWithContext(context.Context) ManagedZoneForwardingConfigTargetNameServerArrayOutput
}

type ManagedZoneForwardingConfigTargetNameServerArray []ManagedZoneForwardingConfigTargetNameServerInput

func (ManagedZoneForwardingConfigTargetNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneForwardingConfigTargetNameServer)(nil)).Elem()
}

func (i ManagedZoneForwardingConfigTargetNameServerArray) ToManagedZoneForwardingConfigTargetNameServerArrayOutput() ManagedZoneForwardingConfigTargetNameServerArrayOutput {
	return i.ToManagedZoneForwardingConfigTargetNameServerArrayOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigTargetNameServerArray) ToManagedZoneForwardingConfigTargetNameServerArrayOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigTargetNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigTargetNameServerArrayOutput)
}

type ManagedZoneForwardingConfigTargetNameServerOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigTargetNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigTargetNameServer)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigTargetNameServerOutput) ToManagedZoneForwardingConfigTargetNameServerOutput() ManagedZoneForwardingConfigTargetNameServerOutput {
	return o
}

func (o ManagedZoneForwardingConfigTargetNameServerOutput) ToManagedZoneForwardingConfigTargetNameServerOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigTargetNameServerOutput {
	return o
}

func (o ManagedZoneForwardingConfigTargetNameServerOutput) ForwardingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigTargetNameServer) *string { return v.ForwardingPath }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneForwardingConfigTargetNameServerOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigTargetNameServer) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

type ManagedZoneForwardingConfigTargetNameServerArrayOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigTargetNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneForwardingConfigTargetNameServer)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigTargetNameServerArrayOutput) ToManagedZoneForwardingConfigTargetNameServerArrayOutput() ManagedZoneForwardingConfigTargetNameServerArrayOutput {
	return o
}

func (o ManagedZoneForwardingConfigTargetNameServerArrayOutput) ToManagedZoneForwardingConfigTargetNameServerArrayOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigTargetNameServerArrayOutput {
	return o
}

func (o ManagedZoneForwardingConfigTargetNameServerArrayOutput) Index(i pulumi.IntInput) ManagedZoneForwardingConfigTargetNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedZoneForwardingConfigTargetNameServer {
		return vs[0].([]ManagedZoneForwardingConfigTargetNameServer)[vs[1].(int)]
	}).(ManagedZoneForwardingConfigTargetNameServerOutput)
}

type ManagedZoneForwardingConfigTargetNameServerArgs struct {
	ForwardingPath *string `pulumi:"forwardingPath"`
	Ipv4Address    string  `pulumi:"ipv4Address"`
}

type ManagedZoneForwardingConfigTargetNameServerArgsInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigTargetNameServerArgsOutput() ManagedZoneForwardingConfigTargetNameServerArgsOutput
	ToManagedZoneForwardingConfigTargetNameServerArgsOutputWithContext(context.Context) ManagedZoneForwardingConfigTargetNameServerArgsOutput
}

type ManagedZoneForwardingConfigTargetNameServerArgsArgs struct {
	ForwardingPath pulumi.StringPtrInput `pulumi:"forwardingPath"`
	Ipv4Address    pulumi.StringInput    `pulumi:"ipv4Address"`
}

func (ManagedZoneForwardingConfigTargetNameServerArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigTargetNameServerArgs)(nil)).Elem()
}

func (i ManagedZoneForwardingConfigTargetNameServerArgsArgs) ToManagedZoneForwardingConfigTargetNameServerArgsOutput() ManagedZoneForwardingConfigTargetNameServerArgsOutput {
	return i.ToManagedZoneForwardingConfigTargetNameServerArgsOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigTargetNameServerArgsArgs) ToManagedZoneForwardingConfigTargetNameServerArgsOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigTargetNameServerArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigTargetNameServerArgsOutput)
}

type ManagedZoneForwardingConfigTargetNameServerArgsArrayInput interface {
	pulumi.Input

	ToManagedZoneForwardingConfigTargetNameServerArgsArrayOutput() ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput
	ToManagedZoneForwardingConfigTargetNameServerArgsArrayOutputWithContext(context.Context) ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput
}

type ManagedZoneForwardingConfigTargetNameServerArgsArray []ManagedZoneForwardingConfigTargetNameServerArgsInput

func (ManagedZoneForwardingConfigTargetNameServerArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneForwardingConfigTargetNameServerArgs)(nil)).Elem()
}

func (i ManagedZoneForwardingConfigTargetNameServerArgsArray) ToManagedZoneForwardingConfigTargetNameServerArgsArrayOutput() ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput {
	return i.ToManagedZoneForwardingConfigTargetNameServerArgsArrayOutputWithContext(context.Background())
}

func (i ManagedZoneForwardingConfigTargetNameServerArgsArray) ToManagedZoneForwardingConfigTargetNameServerArgsArrayOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput)
}

type ManagedZoneForwardingConfigTargetNameServerArgsOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigTargetNameServerArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZoneForwardingConfigTargetNameServerArgs)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigTargetNameServerArgsOutput) ToManagedZoneForwardingConfigTargetNameServerArgsOutput() ManagedZoneForwardingConfigTargetNameServerArgsOutput {
	return o
}

func (o ManagedZoneForwardingConfigTargetNameServerArgsOutput) ToManagedZoneForwardingConfigTargetNameServerArgsOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigTargetNameServerArgsOutput {
	return o
}

func (o ManagedZoneForwardingConfigTargetNameServerArgsOutput) ForwardingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigTargetNameServerArgs) *string { return v.ForwardingPath }).(pulumi.StringPtrOutput)
}

func (o ManagedZoneForwardingConfigTargetNameServerArgsOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZoneForwardingConfigTargetNameServerArgs) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

type ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput struct{ *pulumi.OutputState }

func (ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZoneForwardingConfigTargetNameServerArgs)(nil)).Elem()
}

func (o ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput) ToManagedZoneForwardingConfigTargetNameServerArgsArrayOutput() ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput {
	return o
}

func (o ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput) ToManagedZoneForwardingConfigTargetNameServerArgsArrayOutputWithContext(ctx context.Context) ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput {
	return o
}

func (o ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput) Index(i pulumi.IntInput) ManagedZoneForwardingConfigTargetNameServerArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedZoneForwardingConfigTargetNameServerArgs {
		return vs[0].([]ManagedZoneForwardingConfigTargetNameServerArgs)[vs[1].(int)]
	}).(ManagedZoneForwardingConfigTargetNameServerArgsOutput)
}

type ManagedZonePeeringConfig struct {
	TargetNetwork ManagedZonePeeringConfigTargetNetwork `pulumi:"targetNetwork"`
}

type ManagedZonePeeringConfigInput interface {
	pulumi.Input

	ToManagedZonePeeringConfigOutput() ManagedZonePeeringConfigOutput
	ToManagedZonePeeringConfigOutputWithContext(context.Context) ManagedZonePeeringConfigOutput
}

type ManagedZonePeeringConfigArgs struct {
	TargetNetwork ManagedZonePeeringConfigTargetNetworkInput `pulumi:"targetNetwork"`
}

func (ManagedZonePeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfig)(nil)).Elem()
}

func (i ManagedZonePeeringConfigArgs) ToManagedZonePeeringConfigOutput() ManagedZonePeeringConfigOutput {
	return i.ToManagedZonePeeringConfigOutputWithContext(context.Background())
}

func (i ManagedZonePeeringConfigArgs) ToManagedZonePeeringConfigOutputWithContext(ctx context.Context) ManagedZonePeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigOutput)
}

func (i ManagedZonePeeringConfigArgs) ToManagedZonePeeringConfigPtrOutput() ManagedZonePeeringConfigPtrOutput {
	return i.ToManagedZonePeeringConfigPtrOutputWithContext(context.Background())
}

func (i ManagedZonePeeringConfigArgs) ToManagedZonePeeringConfigPtrOutputWithContext(ctx context.Context) ManagedZonePeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigOutput).ToManagedZonePeeringConfigPtrOutputWithContext(ctx)
}

type ManagedZonePeeringConfigPtrInput interface {
	pulumi.Input

	ToManagedZonePeeringConfigPtrOutput() ManagedZonePeeringConfigPtrOutput
	ToManagedZonePeeringConfigPtrOutputWithContext(context.Context) ManagedZonePeeringConfigPtrOutput
}

type managedZonePeeringConfigPtrType ManagedZonePeeringConfigArgs

func ManagedZonePeeringConfigPtr(v *ManagedZonePeeringConfigArgs) ManagedZonePeeringConfigPtrInput {
	return (*managedZonePeeringConfigPtrType)(v)
}

func (*managedZonePeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZonePeeringConfig)(nil)).Elem()
}

func (i *managedZonePeeringConfigPtrType) ToManagedZonePeeringConfigPtrOutput() ManagedZonePeeringConfigPtrOutput {
	return i.ToManagedZonePeeringConfigPtrOutputWithContext(context.Background())
}

func (i *managedZonePeeringConfigPtrType) ToManagedZonePeeringConfigPtrOutputWithContext(ctx context.Context) ManagedZonePeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigPtrOutput)
}

type ManagedZonePeeringConfigOutput struct{ *pulumi.OutputState }

func (ManagedZonePeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfig)(nil)).Elem()
}

func (o ManagedZonePeeringConfigOutput) ToManagedZonePeeringConfigOutput() ManagedZonePeeringConfigOutput {
	return o
}

func (o ManagedZonePeeringConfigOutput) ToManagedZonePeeringConfigOutputWithContext(ctx context.Context) ManagedZonePeeringConfigOutput {
	return o
}

func (o ManagedZonePeeringConfigOutput) ToManagedZonePeeringConfigPtrOutput() ManagedZonePeeringConfigPtrOutput {
	return o.ToManagedZonePeeringConfigPtrOutputWithContext(context.Background())
}

func (o ManagedZonePeeringConfigOutput) ToManagedZonePeeringConfigPtrOutputWithContext(ctx context.Context) ManagedZonePeeringConfigPtrOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfig) *ManagedZonePeeringConfig {
		return &v
	}).(ManagedZonePeeringConfigPtrOutput)
}
func (o ManagedZonePeeringConfigOutput) TargetNetwork() ManagedZonePeeringConfigTargetNetworkOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfig) ManagedZonePeeringConfigTargetNetwork { return v.TargetNetwork }).(ManagedZonePeeringConfigTargetNetworkOutput)
}

type ManagedZonePeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (ManagedZonePeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZonePeeringConfig)(nil)).Elem()
}

func (o ManagedZonePeeringConfigPtrOutput) ToManagedZonePeeringConfigPtrOutput() ManagedZonePeeringConfigPtrOutput {
	return o
}

func (o ManagedZonePeeringConfigPtrOutput) ToManagedZonePeeringConfigPtrOutputWithContext(ctx context.Context) ManagedZonePeeringConfigPtrOutput {
	return o
}

func (o ManagedZonePeeringConfigPtrOutput) Elem() ManagedZonePeeringConfigOutput {
	return o.ApplyT(func(v *ManagedZonePeeringConfig) ManagedZonePeeringConfig { return *v }).(ManagedZonePeeringConfigOutput)
}

func (o ManagedZonePeeringConfigPtrOutput) TargetNetwork() ManagedZonePeeringConfigTargetNetworkOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfig) ManagedZonePeeringConfigTargetNetwork { return v.TargetNetwork }).(ManagedZonePeeringConfigTargetNetworkOutput)
}

type ManagedZonePeeringConfigArgs struct {
	TargetNetwork ManagedZonePeeringConfigTargetNetworkArgs `pulumi:"targetNetwork"`
}

type ManagedZonePeeringConfigArgsInput interface {
	pulumi.Input

	ToManagedZonePeeringConfigArgsOutput() ManagedZonePeeringConfigArgsOutput
	ToManagedZonePeeringConfigArgsOutputWithContext(context.Context) ManagedZonePeeringConfigArgsOutput
}

type ManagedZonePeeringConfigArgsArgs struct {
	TargetNetwork ManagedZonePeeringConfigTargetNetworkArgsInput `pulumi:"targetNetwork"`
}

func (ManagedZonePeeringConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigArgs)(nil)).Elem()
}

func (i ManagedZonePeeringConfigArgsArgs) ToManagedZonePeeringConfigArgsOutput() ManagedZonePeeringConfigArgsOutput {
	return i.ToManagedZonePeeringConfigArgsOutputWithContext(context.Background())
}

func (i ManagedZonePeeringConfigArgsArgs) ToManagedZonePeeringConfigArgsOutputWithContext(ctx context.Context) ManagedZonePeeringConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigArgsOutput)
}

func (i ManagedZonePeeringConfigArgsArgs) ToManagedZonePeeringConfigArgsPtrOutput() ManagedZonePeeringConfigArgsPtrOutput {
	return i.ToManagedZonePeeringConfigArgsPtrOutputWithContext(context.Background())
}

func (i ManagedZonePeeringConfigArgsArgs) ToManagedZonePeeringConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZonePeeringConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigArgsOutput).ToManagedZonePeeringConfigArgsPtrOutputWithContext(ctx)
}

type ManagedZonePeeringConfigArgsPtrInput interface {
	pulumi.Input

	ToManagedZonePeeringConfigArgsPtrOutput() ManagedZonePeeringConfigArgsPtrOutput
	ToManagedZonePeeringConfigArgsPtrOutputWithContext(context.Context) ManagedZonePeeringConfigArgsPtrOutput
}

type managedZonePeeringConfigArgsPtrType ManagedZonePeeringConfigArgsArgs

func ManagedZonePeeringConfigArgsPtr(v *ManagedZonePeeringConfigArgsArgs) ManagedZonePeeringConfigArgsPtrInput {
	return (*managedZonePeeringConfigArgsPtrType)(v)
}

func (*managedZonePeeringConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZonePeeringConfigArgs)(nil)).Elem()
}

func (i *managedZonePeeringConfigArgsPtrType) ToManagedZonePeeringConfigArgsPtrOutput() ManagedZonePeeringConfigArgsPtrOutput {
	return i.ToManagedZonePeeringConfigArgsPtrOutputWithContext(context.Background())
}

func (i *managedZonePeeringConfigArgsPtrType) ToManagedZonePeeringConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZonePeeringConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigArgsPtrOutput)
}

type ManagedZonePeeringConfigArgsOutput struct{ *pulumi.OutputState }

func (ManagedZonePeeringConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigArgs)(nil)).Elem()
}

func (o ManagedZonePeeringConfigArgsOutput) ToManagedZonePeeringConfigArgsOutput() ManagedZonePeeringConfigArgsOutput {
	return o
}

func (o ManagedZonePeeringConfigArgsOutput) ToManagedZonePeeringConfigArgsOutputWithContext(ctx context.Context) ManagedZonePeeringConfigArgsOutput {
	return o
}

func (o ManagedZonePeeringConfigArgsOutput) ToManagedZonePeeringConfigArgsPtrOutput() ManagedZonePeeringConfigArgsPtrOutput {
	return o.ToManagedZonePeeringConfigArgsPtrOutputWithContext(context.Background())
}

func (o ManagedZonePeeringConfigArgsOutput) ToManagedZonePeeringConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZonePeeringConfigArgsPtrOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfigArgs) *ManagedZonePeeringConfigArgs {
		return &v
	}).(ManagedZonePeeringConfigArgsPtrOutput)
}
func (o ManagedZonePeeringConfigArgsOutput) TargetNetwork() ManagedZonePeeringConfigTargetNetworkArgsOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfigArgs) ManagedZonePeeringConfigTargetNetworkArgs {
		return v.TargetNetwork
	}).(ManagedZonePeeringConfigTargetNetworkArgsOutput)
}

type ManagedZonePeeringConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ManagedZonePeeringConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZonePeeringConfigArgs)(nil)).Elem()
}

func (o ManagedZonePeeringConfigArgsPtrOutput) ToManagedZonePeeringConfigArgsPtrOutput() ManagedZonePeeringConfigArgsPtrOutput {
	return o
}

func (o ManagedZonePeeringConfigArgsPtrOutput) ToManagedZonePeeringConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZonePeeringConfigArgsPtrOutput {
	return o
}

func (o ManagedZonePeeringConfigArgsPtrOutput) Elem() ManagedZonePeeringConfigArgsOutput {
	return o.ApplyT(func(v *ManagedZonePeeringConfigArgs) ManagedZonePeeringConfigArgs { return *v }).(ManagedZonePeeringConfigArgsOutput)
}

func (o ManagedZonePeeringConfigArgsPtrOutput) TargetNetwork() ManagedZonePeeringConfigTargetNetworkArgsOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfigArgs) ManagedZonePeeringConfigTargetNetworkArgs {
		return v.TargetNetwork
	}).(ManagedZonePeeringConfigTargetNetworkArgsOutput)
}

type ManagedZonePeeringConfigState struct {
	TargetNetwork ManagedZonePeeringConfigStateTargetNetwork `pulumi:"targetNetwork"`
}

type ManagedZonePeeringConfigStateInput interface {
	pulumi.Input

	ToManagedZonePeeringConfigStateOutput() ManagedZonePeeringConfigStateOutput
	ToManagedZonePeeringConfigStateOutputWithContext(context.Context) ManagedZonePeeringConfigStateOutput
}

type ManagedZonePeeringConfigStateArgs struct {
	TargetNetwork ManagedZonePeeringConfigStateTargetNetworkInput `pulumi:"targetNetwork"`
}

func (ManagedZonePeeringConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigState)(nil)).Elem()
}

func (i ManagedZonePeeringConfigStateArgs) ToManagedZonePeeringConfigStateOutput() ManagedZonePeeringConfigStateOutput {
	return i.ToManagedZonePeeringConfigStateOutputWithContext(context.Background())
}

func (i ManagedZonePeeringConfigStateArgs) ToManagedZonePeeringConfigStateOutputWithContext(ctx context.Context) ManagedZonePeeringConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigStateOutput)
}

type ManagedZonePeeringConfigStateOutput struct{ *pulumi.OutputState }

func (ManagedZonePeeringConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigState)(nil)).Elem()
}

func (o ManagedZonePeeringConfigStateOutput) ToManagedZonePeeringConfigStateOutput() ManagedZonePeeringConfigStateOutput {
	return o
}

func (o ManagedZonePeeringConfigStateOutput) ToManagedZonePeeringConfigStateOutputWithContext(ctx context.Context) ManagedZonePeeringConfigStateOutput {
	return o
}

func (o ManagedZonePeeringConfigStateOutput) TargetNetwork() ManagedZonePeeringConfigStateTargetNetworkOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfigState) ManagedZonePeeringConfigStateTargetNetwork {
		return v.TargetNetwork
	}).(ManagedZonePeeringConfigStateTargetNetworkOutput)
}

type ManagedZonePeeringConfigStateTargetNetwork struct {
	NetworkUrl string `pulumi:"networkUrl"`
}

type ManagedZonePeeringConfigStateTargetNetworkInput interface {
	pulumi.Input

	ToManagedZonePeeringConfigStateTargetNetworkOutput() ManagedZonePeeringConfigStateTargetNetworkOutput
	ToManagedZonePeeringConfigStateTargetNetworkOutputWithContext(context.Context) ManagedZonePeeringConfigStateTargetNetworkOutput
}

type ManagedZonePeeringConfigStateTargetNetworkArgs struct {
	NetworkUrl pulumi.StringInput `pulumi:"networkUrl"`
}

func (ManagedZonePeeringConfigStateTargetNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigStateTargetNetwork)(nil)).Elem()
}

func (i ManagedZonePeeringConfigStateTargetNetworkArgs) ToManagedZonePeeringConfigStateTargetNetworkOutput() ManagedZonePeeringConfigStateTargetNetworkOutput {
	return i.ToManagedZonePeeringConfigStateTargetNetworkOutputWithContext(context.Background())
}

func (i ManagedZonePeeringConfigStateTargetNetworkArgs) ToManagedZonePeeringConfigStateTargetNetworkOutputWithContext(ctx context.Context) ManagedZonePeeringConfigStateTargetNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigStateTargetNetworkOutput)
}

type ManagedZonePeeringConfigStateTargetNetworkOutput struct{ *pulumi.OutputState }

func (ManagedZonePeeringConfigStateTargetNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigStateTargetNetwork)(nil)).Elem()
}

func (o ManagedZonePeeringConfigStateTargetNetworkOutput) ToManagedZonePeeringConfigStateTargetNetworkOutput() ManagedZonePeeringConfigStateTargetNetworkOutput {
	return o
}

func (o ManagedZonePeeringConfigStateTargetNetworkOutput) ToManagedZonePeeringConfigStateTargetNetworkOutputWithContext(ctx context.Context) ManagedZonePeeringConfigStateTargetNetworkOutput {
	return o
}

func (o ManagedZonePeeringConfigStateTargetNetworkOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfigStateTargetNetwork) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

type ManagedZonePeeringConfigTargetNetwork struct {
	NetworkUrl string `pulumi:"networkUrl"`
}

type ManagedZonePeeringConfigTargetNetworkInput interface {
	pulumi.Input

	ToManagedZonePeeringConfigTargetNetworkOutput() ManagedZonePeeringConfigTargetNetworkOutput
	ToManagedZonePeeringConfigTargetNetworkOutputWithContext(context.Context) ManagedZonePeeringConfigTargetNetworkOutput
}

type ManagedZonePeeringConfigTargetNetworkArgs struct {
	NetworkUrl pulumi.StringInput `pulumi:"networkUrl"`
}

func (ManagedZonePeeringConfigTargetNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigTargetNetwork)(nil)).Elem()
}

func (i ManagedZonePeeringConfigTargetNetworkArgs) ToManagedZonePeeringConfigTargetNetworkOutput() ManagedZonePeeringConfigTargetNetworkOutput {
	return i.ToManagedZonePeeringConfigTargetNetworkOutputWithContext(context.Background())
}

func (i ManagedZonePeeringConfigTargetNetworkArgs) ToManagedZonePeeringConfigTargetNetworkOutputWithContext(ctx context.Context) ManagedZonePeeringConfigTargetNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigTargetNetworkOutput)
}

type ManagedZonePeeringConfigTargetNetworkOutput struct{ *pulumi.OutputState }

func (ManagedZonePeeringConfigTargetNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigTargetNetwork)(nil)).Elem()
}

func (o ManagedZonePeeringConfigTargetNetworkOutput) ToManagedZonePeeringConfigTargetNetworkOutput() ManagedZonePeeringConfigTargetNetworkOutput {
	return o
}

func (o ManagedZonePeeringConfigTargetNetworkOutput) ToManagedZonePeeringConfigTargetNetworkOutputWithContext(ctx context.Context) ManagedZonePeeringConfigTargetNetworkOutput {
	return o
}

func (o ManagedZonePeeringConfigTargetNetworkOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfigTargetNetwork) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

type ManagedZonePeeringConfigTargetNetworkArgs struct {
	NetworkUrl string `pulumi:"networkUrl"`
}

type ManagedZonePeeringConfigTargetNetworkArgsInput interface {
	pulumi.Input

	ToManagedZonePeeringConfigTargetNetworkArgsOutput() ManagedZonePeeringConfigTargetNetworkArgsOutput
	ToManagedZonePeeringConfigTargetNetworkArgsOutputWithContext(context.Context) ManagedZonePeeringConfigTargetNetworkArgsOutput
}

type ManagedZonePeeringConfigTargetNetworkArgsArgs struct {
	NetworkUrl pulumi.StringInput `pulumi:"networkUrl"`
}

func (ManagedZonePeeringConfigTargetNetworkArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigTargetNetworkArgs)(nil)).Elem()
}

func (i ManagedZonePeeringConfigTargetNetworkArgsArgs) ToManagedZonePeeringConfigTargetNetworkArgsOutput() ManagedZonePeeringConfigTargetNetworkArgsOutput {
	return i.ToManagedZonePeeringConfigTargetNetworkArgsOutputWithContext(context.Background())
}

func (i ManagedZonePeeringConfigTargetNetworkArgsArgs) ToManagedZonePeeringConfigTargetNetworkArgsOutputWithContext(ctx context.Context) ManagedZonePeeringConfigTargetNetworkArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePeeringConfigTargetNetworkArgsOutput)
}

type ManagedZonePeeringConfigTargetNetworkArgsOutput struct{ *pulumi.OutputState }

func (ManagedZonePeeringConfigTargetNetworkArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePeeringConfigTargetNetworkArgs)(nil)).Elem()
}

func (o ManagedZonePeeringConfigTargetNetworkArgsOutput) ToManagedZonePeeringConfigTargetNetworkArgsOutput() ManagedZonePeeringConfigTargetNetworkArgsOutput {
	return o
}

func (o ManagedZonePeeringConfigTargetNetworkArgsOutput) ToManagedZonePeeringConfigTargetNetworkArgsOutputWithContext(ctx context.Context) ManagedZonePeeringConfigTargetNetworkArgsOutput {
	return o
}

func (o ManagedZonePeeringConfigTargetNetworkArgsOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZonePeeringConfigTargetNetworkArgs) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

type ManagedZonePrivateVisibilityConfig struct {
	Networks []ManagedZonePrivateVisibilityConfigNetwork `pulumi:"networks"`
}

type ManagedZonePrivateVisibilityConfigInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigOutput() ManagedZonePrivateVisibilityConfigOutput
	ToManagedZonePrivateVisibilityConfigOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigOutput
}

type ManagedZonePrivateVisibilityConfigArgs struct {
	Networks ManagedZonePrivateVisibilityConfigNetworkArrayInput `pulumi:"networks"`
}

func (ManagedZonePrivateVisibilityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfig)(nil)).Elem()
}

func (i ManagedZonePrivateVisibilityConfigArgs) ToManagedZonePrivateVisibilityConfigOutput() ManagedZonePrivateVisibilityConfigOutput {
	return i.ToManagedZonePrivateVisibilityConfigOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigArgs) ToManagedZonePrivateVisibilityConfigOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigOutput)
}

func (i ManagedZonePrivateVisibilityConfigArgs) ToManagedZonePrivateVisibilityConfigPtrOutput() ManagedZonePrivateVisibilityConfigPtrOutput {
	return i.ToManagedZonePrivateVisibilityConfigPtrOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigArgs) ToManagedZonePrivateVisibilityConfigPtrOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigOutput).ToManagedZonePrivateVisibilityConfigPtrOutputWithContext(ctx)
}

type ManagedZonePrivateVisibilityConfigPtrInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigPtrOutput() ManagedZonePrivateVisibilityConfigPtrOutput
	ToManagedZonePrivateVisibilityConfigPtrOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigPtrOutput
}

type managedZonePrivateVisibilityConfigPtrType ManagedZonePrivateVisibilityConfigArgs

func ManagedZonePrivateVisibilityConfigPtr(v *ManagedZonePrivateVisibilityConfigArgs) ManagedZonePrivateVisibilityConfigPtrInput {
	return (*managedZonePrivateVisibilityConfigPtrType)(v)
}

func (*managedZonePrivateVisibilityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZonePrivateVisibilityConfig)(nil)).Elem()
}

func (i *managedZonePrivateVisibilityConfigPtrType) ToManagedZonePrivateVisibilityConfigPtrOutput() ManagedZonePrivateVisibilityConfigPtrOutput {
	return i.ToManagedZonePrivateVisibilityConfigPtrOutputWithContext(context.Background())
}

func (i *managedZonePrivateVisibilityConfigPtrType) ToManagedZonePrivateVisibilityConfigPtrOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigPtrOutput)
}

type ManagedZonePrivateVisibilityConfigOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfig)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigOutput) ToManagedZonePrivateVisibilityConfigOutput() ManagedZonePrivateVisibilityConfigOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigOutput) ToManagedZonePrivateVisibilityConfigOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigOutput) ToManagedZonePrivateVisibilityConfigPtrOutput() ManagedZonePrivateVisibilityConfigPtrOutput {
	return o.ToManagedZonePrivateVisibilityConfigPtrOutputWithContext(context.Background())
}

func (o ManagedZonePrivateVisibilityConfigOutput) ToManagedZonePrivateVisibilityConfigPtrOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigPtrOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfig) *ManagedZonePrivateVisibilityConfig {
		return &v
	}).(ManagedZonePrivateVisibilityConfigPtrOutput)
}
func (o ManagedZonePrivateVisibilityConfigOutput) Networks() ManagedZonePrivateVisibilityConfigNetworkArrayOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfig) []ManagedZonePrivateVisibilityConfigNetwork {
		return v.Networks
	}).(ManagedZonePrivateVisibilityConfigNetworkArrayOutput)
}

type ManagedZonePrivateVisibilityConfigPtrOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZonePrivateVisibilityConfig)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigPtrOutput) ToManagedZonePrivateVisibilityConfigPtrOutput() ManagedZonePrivateVisibilityConfigPtrOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigPtrOutput) ToManagedZonePrivateVisibilityConfigPtrOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigPtrOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigPtrOutput) Elem() ManagedZonePrivateVisibilityConfigOutput {
	return o.ApplyT(func(v *ManagedZonePrivateVisibilityConfig) ManagedZonePrivateVisibilityConfig { return *v }).(ManagedZonePrivateVisibilityConfigOutput)
}

func (o ManagedZonePrivateVisibilityConfigPtrOutput) Networks() ManagedZonePrivateVisibilityConfigNetworkArrayOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfig) []ManagedZonePrivateVisibilityConfigNetwork {
		return v.Networks
	}).(ManagedZonePrivateVisibilityConfigNetworkArrayOutput)
}

type ManagedZonePrivateVisibilityConfigArgs struct {
	Networks []ManagedZonePrivateVisibilityConfigNetworkArgs `pulumi:"networks"`
}

type ManagedZonePrivateVisibilityConfigArgsInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigArgsOutput() ManagedZonePrivateVisibilityConfigArgsOutput
	ToManagedZonePrivateVisibilityConfigArgsOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigArgsOutput
}

type ManagedZonePrivateVisibilityConfigArgsArgs struct {
	Networks ManagedZonePrivateVisibilityConfigNetworkArgsArrayInput `pulumi:"networks"`
}

func (ManagedZonePrivateVisibilityConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigArgs)(nil)).Elem()
}

func (i ManagedZonePrivateVisibilityConfigArgsArgs) ToManagedZonePrivateVisibilityConfigArgsOutput() ManagedZonePrivateVisibilityConfigArgsOutput {
	return i.ToManagedZonePrivateVisibilityConfigArgsOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigArgsArgs) ToManagedZonePrivateVisibilityConfigArgsOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigArgsOutput)
}

func (i ManagedZonePrivateVisibilityConfigArgsArgs) ToManagedZonePrivateVisibilityConfigArgsPtrOutput() ManagedZonePrivateVisibilityConfigArgsPtrOutput {
	return i.ToManagedZonePrivateVisibilityConfigArgsPtrOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigArgsArgs) ToManagedZonePrivateVisibilityConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigArgsOutput).ToManagedZonePrivateVisibilityConfigArgsPtrOutputWithContext(ctx)
}

type ManagedZonePrivateVisibilityConfigArgsPtrInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigArgsPtrOutput() ManagedZonePrivateVisibilityConfigArgsPtrOutput
	ToManagedZonePrivateVisibilityConfigArgsPtrOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigArgsPtrOutput
}

type managedZonePrivateVisibilityConfigArgsPtrType ManagedZonePrivateVisibilityConfigArgsArgs

func ManagedZonePrivateVisibilityConfigArgsPtr(v *ManagedZonePrivateVisibilityConfigArgsArgs) ManagedZonePrivateVisibilityConfigArgsPtrInput {
	return (*managedZonePrivateVisibilityConfigArgsPtrType)(v)
}

func (*managedZonePrivateVisibilityConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZonePrivateVisibilityConfigArgs)(nil)).Elem()
}

func (i *managedZonePrivateVisibilityConfigArgsPtrType) ToManagedZonePrivateVisibilityConfigArgsPtrOutput() ManagedZonePrivateVisibilityConfigArgsPtrOutput {
	return i.ToManagedZonePrivateVisibilityConfigArgsPtrOutputWithContext(context.Background())
}

func (i *managedZonePrivateVisibilityConfigArgsPtrType) ToManagedZonePrivateVisibilityConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigArgsPtrOutput)
}

type ManagedZonePrivateVisibilityConfigArgsOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigArgs)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigArgsOutput) ToManagedZonePrivateVisibilityConfigArgsOutput() ManagedZonePrivateVisibilityConfigArgsOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigArgsOutput) ToManagedZonePrivateVisibilityConfigArgsOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigArgsOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigArgsOutput) ToManagedZonePrivateVisibilityConfigArgsPtrOutput() ManagedZonePrivateVisibilityConfigArgsPtrOutput {
	return o.ToManagedZonePrivateVisibilityConfigArgsPtrOutputWithContext(context.Background())
}

func (o ManagedZonePrivateVisibilityConfigArgsOutput) ToManagedZonePrivateVisibilityConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigArgsPtrOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfigArgs) *ManagedZonePrivateVisibilityConfigArgs {
		return &v
	}).(ManagedZonePrivateVisibilityConfigArgsPtrOutput)
}
func (o ManagedZonePrivateVisibilityConfigArgsOutput) Networks() ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfigArgs) []ManagedZonePrivateVisibilityConfigNetworkArgs {
		return v.Networks
	}).(ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput)
}

type ManagedZonePrivateVisibilityConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZonePrivateVisibilityConfigArgs)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigArgsPtrOutput) ToManagedZonePrivateVisibilityConfigArgsPtrOutput() ManagedZonePrivateVisibilityConfigArgsPtrOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigArgsPtrOutput) ToManagedZonePrivateVisibilityConfigArgsPtrOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigArgsPtrOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigArgsPtrOutput) Elem() ManagedZonePrivateVisibilityConfigArgsOutput {
	return o.ApplyT(func(v *ManagedZonePrivateVisibilityConfigArgs) ManagedZonePrivateVisibilityConfigArgs { return *v }).(ManagedZonePrivateVisibilityConfigArgsOutput)
}

func (o ManagedZonePrivateVisibilityConfigArgsPtrOutput) Networks() ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfigArgs) []ManagedZonePrivateVisibilityConfigNetworkArgs {
		return v.Networks
	}).(ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput)
}

type ManagedZonePrivateVisibilityConfigNetwork struct {
	NetworkUrl string `pulumi:"networkUrl"`
}

type ManagedZonePrivateVisibilityConfigNetworkInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigNetworkOutput() ManagedZonePrivateVisibilityConfigNetworkOutput
	ToManagedZonePrivateVisibilityConfigNetworkOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigNetworkOutput
}

type ManagedZonePrivateVisibilityConfigNetworkArgs struct {
	NetworkUrl pulumi.StringInput `pulumi:"networkUrl"`
}

func (ManagedZonePrivateVisibilityConfigNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigNetwork)(nil)).Elem()
}

func (i ManagedZonePrivateVisibilityConfigNetworkArgs) ToManagedZonePrivateVisibilityConfigNetworkOutput() ManagedZonePrivateVisibilityConfigNetworkOutput {
	return i.ToManagedZonePrivateVisibilityConfigNetworkOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigNetworkArgs) ToManagedZonePrivateVisibilityConfigNetworkOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigNetworkOutput)
}

type ManagedZonePrivateVisibilityConfigNetworkArrayInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigNetworkArrayOutput() ManagedZonePrivateVisibilityConfigNetworkArrayOutput
	ToManagedZonePrivateVisibilityConfigNetworkArrayOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigNetworkArrayOutput
}

type ManagedZonePrivateVisibilityConfigNetworkArray []ManagedZonePrivateVisibilityConfigNetworkInput

func (ManagedZonePrivateVisibilityConfigNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZonePrivateVisibilityConfigNetwork)(nil)).Elem()
}

func (i ManagedZonePrivateVisibilityConfigNetworkArray) ToManagedZonePrivateVisibilityConfigNetworkArrayOutput() ManagedZonePrivateVisibilityConfigNetworkArrayOutput {
	return i.ToManagedZonePrivateVisibilityConfigNetworkArrayOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigNetworkArray) ToManagedZonePrivateVisibilityConfigNetworkArrayOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigNetworkArrayOutput)
}

type ManagedZonePrivateVisibilityConfigNetworkOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigNetwork)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigNetworkOutput) ToManagedZonePrivateVisibilityConfigNetworkOutput() ManagedZonePrivateVisibilityConfigNetworkOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigNetworkOutput) ToManagedZonePrivateVisibilityConfigNetworkOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigNetworkOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigNetworkOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfigNetwork) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

type ManagedZonePrivateVisibilityConfigNetworkArrayOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZonePrivateVisibilityConfigNetwork)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigNetworkArrayOutput) ToManagedZonePrivateVisibilityConfigNetworkArrayOutput() ManagedZonePrivateVisibilityConfigNetworkArrayOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigNetworkArrayOutput) ToManagedZonePrivateVisibilityConfigNetworkArrayOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigNetworkArrayOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigNetworkArrayOutput) Index(i pulumi.IntInput) ManagedZonePrivateVisibilityConfigNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedZonePrivateVisibilityConfigNetwork {
		return vs[0].([]ManagedZonePrivateVisibilityConfigNetwork)[vs[1].(int)]
	}).(ManagedZonePrivateVisibilityConfigNetworkOutput)
}

type ManagedZonePrivateVisibilityConfigNetworkArgs struct {
	NetworkUrl string `pulumi:"networkUrl"`
}

type ManagedZonePrivateVisibilityConfigNetworkArgsInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigNetworkArgsOutput() ManagedZonePrivateVisibilityConfigNetworkArgsOutput
	ToManagedZonePrivateVisibilityConfigNetworkArgsOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigNetworkArgsOutput
}

type ManagedZonePrivateVisibilityConfigNetworkArgsArgs struct {
	NetworkUrl pulumi.StringInput `pulumi:"networkUrl"`
}

func (ManagedZonePrivateVisibilityConfigNetworkArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigNetworkArgs)(nil)).Elem()
}

func (i ManagedZonePrivateVisibilityConfigNetworkArgsArgs) ToManagedZonePrivateVisibilityConfigNetworkArgsOutput() ManagedZonePrivateVisibilityConfigNetworkArgsOutput {
	return i.ToManagedZonePrivateVisibilityConfigNetworkArgsOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigNetworkArgsArgs) ToManagedZonePrivateVisibilityConfigNetworkArgsOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigNetworkArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigNetworkArgsOutput)
}

type ManagedZonePrivateVisibilityConfigNetworkArgsArrayInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput() ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput
	ToManagedZonePrivateVisibilityConfigNetworkArgsArrayOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput
}

type ManagedZonePrivateVisibilityConfigNetworkArgsArray []ManagedZonePrivateVisibilityConfigNetworkArgsInput

func (ManagedZonePrivateVisibilityConfigNetworkArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZonePrivateVisibilityConfigNetworkArgs)(nil)).Elem()
}

func (i ManagedZonePrivateVisibilityConfigNetworkArgsArray) ToManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput() ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput {
	return i.ToManagedZonePrivateVisibilityConfigNetworkArgsArrayOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigNetworkArgsArray) ToManagedZonePrivateVisibilityConfigNetworkArgsArrayOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput)
}

type ManagedZonePrivateVisibilityConfigNetworkArgsOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigNetworkArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigNetworkArgs)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigNetworkArgsOutput) ToManagedZonePrivateVisibilityConfigNetworkArgsOutput() ManagedZonePrivateVisibilityConfigNetworkArgsOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigNetworkArgsOutput) ToManagedZonePrivateVisibilityConfigNetworkArgsOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigNetworkArgsOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigNetworkArgsOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfigNetworkArgs) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

type ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZonePrivateVisibilityConfigNetworkArgs)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput) ToManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput() ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput) ToManagedZonePrivateVisibilityConfigNetworkArgsArrayOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput) Index(i pulumi.IntInput) ManagedZonePrivateVisibilityConfigNetworkArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedZonePrivateVisibilityConfigNetworkArgs {
		return vs[0].([]ManagedZonePrivateVisibilityConfigNetworkArgs)[vs[1].(int)]
	}).(ManagedZonePrivateVisibilityConfigNetworkArgsOutput)
}

type ManagedZonePrivateVisibilityConfigState struct {
	Networks []ManagedZonePrivateVisibilityConfigStateNetwork `pulumi:"networks"`
}

type ManagedZonePrivateVisibilityConfigStateInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigStateOutput() ManagedZonePrivateVisibilityConfigStateOutput
	ToManagedZonePrivateVisibilityConfigStateOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigStateOutput
}

type ManagedZonePrivateVisibilityConfigStateArgs struct {
	Networks ManagedZonePrivateVisibilityConfigStateNetworkArrayInput `pulumi:"networks"`
}

func (ManagedZonePrivateVisibilityConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigState)(nil)).Elem()
}

func (i ManagedZonePrivateVisibilityConfigStateArgs) ToManagedZonePrivateVisibilityConfigStateOutput() ManagedZonePrivateVisibilityConfigStateOutput {
	return i.ToManagedZonePrivateVisibilityConfigStateOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigStateArgs) ToManagedZonePrivateVisibilityConfigStateOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigStateOutput)
}

type ManagedZonePrivateVisibilityConfigStateOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigState)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigStateOutput) ToManagedZonePrivateVisibilityConfigStateOutput() ManagedZonePrivateVisibilityConfigStateOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigStateOutput) ToManagedZonePrivateVisibilityConfigStateOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigStateOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigStateOutput) Networks() ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfigState) []ManagedZonePrivateVisibilityConfigStateNetwork {
		return v.Networks
	}).(ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput)
}

type ManagedZonePrivateVisibilityConfigStateNetwork struct {
	NetworkUrl string `pulumi:"networkUrl"`
}

type ManagedZonePrivateVisibilityConfigStateNetworkInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigStateNetworkOutput() ManagedZonePrivateVisibilityConfigStateNetworkOutput
	ToManagedZonePrivateVisibilityConfigStateNetworkOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigStateNetworkOutput
}

type ManagedZonePrivateVisibilityConfigStateNetworkArgs struct {
	NetworkUrl pulumi.StringInput `pulumi:"networkUrl"`
}

func (ManagedZonePrivateVisibilityConfigStateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigStateNetwork)(nil)).Elem()
}

func (i ManagedZonePrivateVisibilityConfigStateNetworkArgs) ToManagedZonePrivateVisibilityConfigStateNetworkOutput() ManagedZonePrivateVisibilityConfigStateNetworkOutput {
	return i.ToManagedZonePrivateVisibilityConfigStateNetworkOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigStateNetworkArgs) ToManagedZonePrivateVisibilityConfigStateNetworkOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigStateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigStateNetworkOutput)
}

type ManagedZonePrivateVisibilityConfigStateNetworkArrayInput interface {
	pulumi.Input

	ToManagedZonePrivateVisibilityConfigStateNetworkArrayOutput() ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput
	ToManagedZonePrivateVisibilityConfigStateNetworkArrayOutputWithContext(context.Context) ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput
}

type ManagedZonePrivateVisibilityConfigStateNetworkArray []ManagedZonePrivateVisibilityConfigStateNetworkInput

func (ManagedZonePrivateVisibilityConfigStateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZonePrivateVisibilityConfigStateNetwork)(nil)).Elem()
}

func (i ManagedZonePrivateVisibilityConfigStateNetworkArray) ToManagedZonePrivateVisibilityConfigStateNetworkArrayOutput() ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput {
	return i.ToManagedZonePrivateVisibilityConfigStateNetworkArrayOutputWithContext(context.Background())
}

func (i ManagedZonePrivateVisibilityConfigStateNetworkArray) ToManagedZonePrivateVisibilityConfigStateNetworkArrayOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput)
}

type ManagedZonePrivateVisibilityConfigStateNetworkOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigStateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedZonePrivateVisibilityConfigStateNetwork)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigStateNetworkOutput) ToManagedZonePrivateVisibilityConfigStateNetworkOutput() ManagedZonePrivateVisibilityConfigStateNetworkOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigStateNetworkOutput) ToManagedZonePrivateVisibilityConfigStateNetworkOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigStateNetworkOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigStateNetworkOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedZonePrivateVisibilityConfigStateNetwork) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

type ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput struct{ *pulumi.OutputState }

func (ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedZonePrivateVisibilityConfigStateNetwork)(nil)).Elem()
}

func (o ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput) ToManagedZonePrivateVisibilityConfigStateNetworkArrayOutput() ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput) ToManagedZonePrivateVisibilityConfigStateNetworkArrayOutputWithContext(ctx context.Context) ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput {
	return o
}

func (o ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput) Index(i pulumi.IntInput) ManagedZonePrivateVisibilityConfigStateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedZonePrivateVisibilityConfigStateNetwork {
		return vs[0].([]ManagedZonePrivateVisibilityConfigStateNetwork)[vs[1].(int)]
	}).(ManagedZonePrivateVisibilityConfigStateNetworkOutput)
}

type PolicyAlternativeNameServerConfig struct {
	TargetNameServers []PolicyAlternativeNameServerConfigTargetNameServer `pulumi:"targetNameServers"`
}

type PolicyAlternativeNameServerConfigInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigOutput() PolicyAlternativeNameServerConfigOutput
	ToPolicyAlternativeNameServerConfigOutputWithContext(context.Context) PolicyAlternativeNameServerConfigOutput
}

type PolicyAlternativeNameServerConfigArgs struct {
	TargetNameServers PolicyAlternativeNameServerConfigTargetNameServerArrayInput `pulumi:"targetNameServers"`
}

func (PolicyAlternativeNameServerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfig)(nil)).Elem()
}

func (i PolicyAlternativeNameServerConfigArgs) ToPolicyAlternativeNameServerConfigOutput() PolicyAlternativeNameServerConfigOutput {
	return i.ToPolicyAlternativeNameServerConfigOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigArgs) ToPolicyAlternativeNameServerConfigOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigOutput)
}

func (i PolicyAlternativeNameServerConfigArgs) ToPolicyAlternativeNameServerConfigPtrOutput() PolicyAlternativeNameServerConfigPtrOutput {
	return i.ToPolicyAlternativeNameServerConfigPtrOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigArgs) ToPolicyAlternativeNameServerConfigPtrOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigOutput).ToPolicyAlternativeNameServerConfigPtrOutputWithContext(ctx)
}

type PolicyAlternativeNameServerConfigPtrInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigPtrOutput() PolicyAlternativeNameServerConfigPtrOutput
	ToPolicyAlternativeNameServerConfigPtrOutputWithContext(context.Context) PolicyAlternativeNameServerConfigPtrOutput
}

type policyAlternativeNameServerConfigPtrType PolicyAlternativeNameServerConfigArgs

func PolicyAlternativeNameServerConfigPtr(v *PolicyAlternativeNameServerConfigArgs) PolicyAlternativeNameServerConfigPtrInput {
	return (*policyAlternativeNameServerConfigPtrType)(v)
}

func (*policyAlternativeNameServerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAlternativeNameServerConfig)(nil)).Elem()
}

func (i *policyAlternativeNameServerConfigPtrType) ToPolicyAlternativeNameServerConfigPtrOutput() PolicyAlternativeNameServerConfigPtrOutput {
	return i.ToPolicyAlternativeNameServerConfigPtrOutputWithContext(context.Background())
}

func (i *policyAlternativeNameServerConfigPtrType) ToPolicyAlternativeNameServerConfigPtrOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigPtrOutput)
}

type PolicyAlternativeNameServerConfigOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfig)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigOutput) ToPolicyAlternativeNameServerConfigOutput() PolicyAlternativeNameServerConfigOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigOutput) ToPolicyAlternativeNameServerConfigOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigOutput) ToPolicyAlternativeNameServerConfigPtrOutput() PolicyAlternativeNameServerConfigPtrOutput {
	return o.ToPolicyAlternativeNameServerConfigPtrOutputWithContext(context.Background())
}

func (o PolicyAlternativeNameServerConfigOutput) ToPolicyAlternativeNameServerConfigPtrOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigPtrOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfig) *PolicyAlternativeNameServerConfig {
		return &v
	}).(PolicyAlternativeNameServerConfigPtrOutput)
}
func (o PolicyAlternativeNameServerConfigOutput) TargetNameServers() PolicyAlternativeNameServerConfigTargetNameServerArrayOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfig) []PolicyAlternativeNameServerConfigTargetNameServer {
		return v.TargetNameServers
	}).(PolicyAlternativeNameServerConfigTargetNameServerArrayOutput)
}

type PolicyAlternativeNameServerConfigPtrOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAlternativeNameServerConfig)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigPtrOutput) ToPolicyAlternativeNameServerConfigPtrOutput() PolicyAlternativeNameServerConfigPtrOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigPtrOutput) ToPolicyAlternativeNameServerConfigPtrOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigPtrOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigPtrOutput) Elem() PolicyAlternativeNameServerConfigOutput {
	return o.ApplyT(func(v *PolicyAlternativeNameServerConfig) PolicyAlternativeNameServerConfig { return *v }).(PolicyAlternativeNameServerConfigOutput)
}

func (o PolicyAlternativeNameServerConfigPtrOutput) TargetNameServers() PolicyAlternativeNameServerConfigTargetNameServerArrayOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfig) []PolicyAlternativeNameServerConfigTargetNameServer {
		return v.TargetNameServers
	}).(PolicyAlternativeNameServerConfigTargetNameServerArrayOutput)
}

type PolicyAlternativeNameServerConfigArgs struct {
	TargetNameServers []PolicyAlternativeNameServerConfigTargetNameServerArgs `pulumi:"targetNameServers"`
}

type PolicyAlternativeNameServerConfigArgsInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigArgsOutput() PolicyAlternativeNameServerConfigArgsOutput
	ToPolicyAlternativeNameServerConfigArgsOutputWithContext(context.Context) PolicyAlternativeNameServerConfigArgsOutput
}

type PolicyAlternativeNameServerConfigArgsArgs struct {
	TargetNameServers PolicyAlternativeNameServerConfigTargetNameServerArgsArrayInput `pulumi:"targetNameServers"`
}

func (PolicyAlternativeNameServerConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigArgs)(nil)).Elem()
}

func (i PolicyAlternativeNameServerConfigArgsArgs) ToPolicyAlternativeNameServerConfigArgsOutput() PolicyAlternativeNameServerConfigArgsOutput {
	return i.ToPolicyAlternativeNameServerConfigArgsOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigArgsArgs) ToPolicyAlternativeNameServerConfigArgsOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigArgsOutput)
}

func (i PolicyAlternativeNameServerConfigArgsArgs) ToPolicyAlternativeNameServerConfigArgsPtrOutput() PolicyAlternativeNameServerConfigArgsPtrOutput {
	return i.ToPolicyAlternativeNameServerConfigArgsPtrOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigArgsArgs) ToPolicyAlternativeNameServerConfigArgsPtrOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigArgsOutput).ToPolicyAlternativeNameServerConfigArgsPtrOutputWithContext(ctx)
}

type PolicyAlternativeNameServerConfigArgsPtrInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigArgsPtrOutput() PolicyAlternativeNameServerConfigArgsPtrOutput
	ToPolicyAlternativeNameServerConfigArgsPtrOutputWithContext(context.Context) PolicyAlternativeNameServerConfigArgsPtrOutput
}

type policyAlternativeNameServerConfigArgsPtrType PolicyAlternativeNameServerConfigArgsArgs

func PolicyAlternativeNameServerConfigArgsPtr(v *PolicyAlternativeNameServerConfigArgsArgs) PolicyAlternativeNameServerConfigArgsPtrInput {
	return (*policyAlternativeNameServerConfigArgsPtrType)(v)
}

func (*policyAlternativeNameServerConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAlternativeNameServerConfigArgs)(nil)).Elem()
}

func (i *policyAlternativeNameServerConfigArgsPtrType) ToPolicyAlternativeNameServerConfigArgsPtrOutput() PolicyAlternativeNameServerConfigArgsPtrOutput {
	return i.ToPolicyAlternativeNameServerConfigArgsPtrOutputWithContext(context.Background())
}

func (i *policyAlternativeNameServerConfigArgsPtrType) ToPolicyAlternativeNameServerConfigArgsPtrOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigArgsPtrOutput)
}

type PolicyAlternativeNameServerConfigArgsOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigArgs)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigArgsOutput) ToPolicyAlternativeNameServerConfigArgsOutput() PolicyAlternativeNameServerConfigArgsOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigArgsOutput) ToPolicyAlternativeNameServerConfigArgsOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigArgsOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigArgsOutput) ToPolicyAlternativeNameServerConfigArgsPtrOutput() PolicyAlternativeNameServerConfigArgsPtrOutput {
	return o.ToPolicyAlternativeNameServerConfigArgsPtrOutputWithContext(context.Background())
}

func (o PolicyAlternativeNameServerConfigArgsOutput) ToPolicyAlternativeNameServerConfigArgsPtrOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigArgsPtrOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfigArgs) *PolicyAlternativeNameServerConfigArgs {
		return &v
	}).(PolicyAlternativeNameServerConfigArgsPtrOutput)
}
func (o PolicyAlternativeNameServerConfigArgsOutput) TargetNameServers() PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfigArgs) []PolicyAlternativeNameServerConfigTargetNameServerArgs {
		return v.TargetNameServers
	}).(PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput)
}

type PolicyAlternativeNameServerConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyAlternativeNameServerConfigArgs)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigArgsPtrOutput) ToPolicyAlternativeNameServerConfigArgsPtrOutput() PolicyAlternativeNameServerConfigArgsPtrOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigArgsPtrOutput) ToPolicyAlternativeNameServerConfigArgsPtrOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigArgsPtrOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigArgsPtrOutput) Elem() PolicyAlternativeNameServerConfigArgsOutput {
	return o.ApplyT(func(v *PolicyAlternativeNameServerConfigArgs) PolicyAlternativeNameServerConfigArgs { return *v }).(PolicyAlternativeNameServerConfigArgsOutput)
}

func (o PolicyAlternativeNameServerConfigArgsPtrOutput) TargetNameServers() PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfigArgs) []PolicyAlternativeNameServerConfigTargetNameServerArgs {
		return v.TargetNameServers
	}).(PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput)
}

type PolicyAlternativeNameServerConfigState struct {
	TargetNameServers []PolicyAlternativeNameServerConfigStateTargetNameServer `pulumi:"targetNameServers"`
}

type PolicyAlternativeNameServerConfigStateInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigStateOutput() PolicyAlternativeNameServerConfigStateOutput
	ToPolicyAlternativeNameServerConfigStateOutputWithContext(context.Context) PolicyAlternativeNameServerConfigStateOutput
}

type PolicyAlternativeNameServerConfigStateArgs struct {
	TargetNameServers PolicyAlternativeNameServerConfigStateTargetNameServerArrayInput `pulumi:"targetNameServers"`
}

func (PolicyAlternativeNameServerConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigState)(nil)).Elem()
}

func (i PolicyAlternativeNameServerConfigStateArgs) ToPolicyAlternativeNameServerConfigStateOutput() PolicyAlternativeNameServerConfigStateOutput {
	return i.ToPolicyAlternativeNameServerConfigStateOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigStateArgs) ToPolicyAlternativeNameServerConfigStateOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigStateOutput)
}

type PolicyAlternativeNameServerConfigStateOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigState)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigStateOutput) ToPolicyAlternativeNameServerConfigStateOutput() PolicyAlternativeNameServerConfigStateOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigStateOutput) ToPolicyAlternativeNameServerConfigStateOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigStateOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigStateOutput) TargetNameServers() PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfigState) []PolicyAlternativeNameServerConfigStateTargetNameServer {
		return v.TargetNameServers
	}).(PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput)
}

type PolicyAlternativeNameServerConfigStateTargetNameServer struct {
	Ipv4Address string `pulumi:"ipv4Address"`
}

type PolicyAlternativeNameServerConfigStateTargetNameServerInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigStateTargetNameServerOutput() PolicyAlternativeNameServerConfigStateTargetNameServerOutput
	ToPolicyAlternativeNameServerConfigStateTargetNameServerOutputWithContext(context.Context) PolicyAlternativeNameServerConfigStateTargetNameServerOutput
}

type PolicyAlternativeNameServerConfigStateTargetNameServerArgs struct {
	Ipv4Address pulumi.StringInput `pulumi:"ipv4Address"`
}

func (PolicyAlternativeNameServerConfigStateTargetNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigStateTargetNameServer)(nil)).Elem()
}

func (i PolicyAlternativeNameServerConfigStateTargetNameServerArgs) ToPolicyAlternativeNameServerConfigStateTargetNameServerOutput() PolicyAlternativeNameServerConfigStateTargetNameServerOutput {
	return i.ToPolicyAlternativeNameServerConfigStateTargetNameServerOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigStateTargetNameServerArgs) ToPolicyAlternativeNameServerConfigStateTargetNameServerOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigStateTargetNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigStateTargetNameServerOutput)
}

type PolicyAlternativeNameServerConfigStateTargetNameServerArrayInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput() PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput
	ToPolicyAlternativeNameServerConfigStateTargetNameServerArrayOutputWithContext(context.Context) PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput
}

type PolicyAlternativeNameServerConfigStateTargetNameServerArray []PolicyAlternativeNameServerConfigStateTargetNameServerInput

func (PolicyAlternativeNameServerConfigStateTargetNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAlternativeNameServerConfigStateTargetNameServer)(nil)).Elem()
}

func (i PolicyAlternativeNameServerConfigStateTargetNameServerArray) ToPolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput() PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput {
	return i.ToPolicyAlternativeNameServerConfigStateTargetNameServerArrayOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigStateTargetNameServerArray) ToPolicyAlternativeNameServerConfigStateTargetNameServerArrayOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput)
}

type PolicyAlternativeNameServerConfigStateTargetNameServerOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigStateTargetNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigStateTargetNameServer)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigStateTargetNameServerOutput) ToPolicyAlternativeNameServerConfigStateTargetNameServerOutput() PolicyAlternativeNameServerConfigStateTargetNameServerOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigStateTargetNameServerOutput) ToPolicyAlternativeNameServerConfigStateTargetNameServerOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigStateTargetNameServerOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigStateTargetNameServerOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfigStateTargetNameServer) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

type PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAlternativeNameServerConfigStateTargetNameServer)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput) ToPolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput() PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput) ToPolicyAlternativeNameServerConfigStateTargetNameServerArrayOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput) Index(i pulumi.IntInput) PolicyAlternativeNameServerConfigStateTargetNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAlternativeNameServerConfigStateTargetNameServer {
		return vs[0].([]PolicyAlternativeNameServerConfigStateTargetNameServer)[vs[1].(int)]
	}).(PolicyAlternativeNameServerConfigStateTargetNameServerOutput)
}

type PolicyAlternativeNameServerConfigTargetNameServer struct {
	Ipv4Address string `pulumi:"ipv4Address"`
}

type PolicyAlternativeNameServerConfigTargetNameServerInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigTargetNameServerOutput() PolicyAlternativeNameServerConfigTargetNameServerOutput
	ToPolicyAlternativeNameServerConfigTargetNameServerOutputWithContext(context.Context) PolicyAlternativeNameServerConfigTargetNameServerOutput
}

type PolicyAlternativeNameServerConfigTargetNameServerArgs struct {
	Ipv4Address pulumi.StringInput `pulumi:"ipv4Address"`
}

func (PolicyAlternativeNameServerConfigTargetNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigTargetNameServer)(nil)).Elem()
}

func (i PolicyAlternativeNameServerConfigTargetNameServerArgs) ToPolicyAlternativeNameServerConfigTargetNameServerOutput() PolicyAlternativeNameServerConfigTargetNameServerOutput {
	return i.ToPolicyAlternativeNameServerConfigTargetNameServerOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigTargetNameServerArgs) ToPolicyAlternativeNameServerConfigTargetNameServerOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigTargetNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigTargetNameServerOutput)
}

type PolicyAlternativeNameServerConfigTargetNameServerArrayInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigTargetNameServerArrayOutput() PolicyAlternativeNameServerConfigTargetNameServerArrayOutput
	ToPolicyAlternativeNameServerConfigTargetNameServerArrayOutputWithContext(context.Context) PolicyAlternativeNameServerConfigTargetNameServerArrayOutput
}

type PolicyAlternativeNameServerConfigTargetNameServerArray []PolicyAlternativeNameServerConfigTargetNameServerInput

func (PolicyAlternativeNameServerConfigTargetNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAlternativeNameServerConfigTargetNameServer)(nil)).Elem()
}

func (i PolicyAlternativeNameServerConfigTargetNameServerArray) ToPolicyAlternativeNameServerConfigTargetNameServerArrayOutput() PolicyAlternativeNameServerConfigTargetNameServerArrayOutput {
	return i.ToPolicyAlternativeNameServerConfigTargetNameServerArrayOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigTargetNameServerArray) ToPolicyAlternativeNameServerConfigTargetNameServerArrayOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigTargetNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigTargetNameServerArrayOutput)
}

type PolicyAlternativeNameServerConfigTargetNameServerOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigTargetNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigTargetNameServer)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigTargetNameServerOutput) ToPolicyAlternativeNameServerConfigTargetNameServerOutput() PolicyAlternativeNameServerConfigTargetNameServerOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigTargetNameServerOutput) ToPolicyAlternativeNameServerConfigTargetNameServerOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigTargetNameServerOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigTargetNameServerOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfigTargetNameServer) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

type PolicyAlternativeNameServerConfigTargetNameServerArrayOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigTargetNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAlternativeNameServerConfigTargetNameServer)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigTargetNameServerArrayOutput) ToPolicyAlternativeNameServerConfigTargetNameServerArrayOutput() PolicyAlternativeNameServerConfigTargetNameServerArrayOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigTargetNameServerArrayOutput) ToPolicyAlternativeNameServerConfigTargetNameServerArrayOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigTargetNameServerArrayOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigTargetNameServerArrayOutput) Index(i pulumi.IntInput) PolicyAlternativeNameServerConfigTargetNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAlternativeNameServerConfigTargetNameServer {
		return vs[0].([]PolicyAlternativeNameServerConfigTargetNameServer)[vs[1].(int)]
	}).(PolicyAlternativeNameServerConfigTargetNameServerOutput)
}

type PolicyAlternativeNameServerConfigTargetNameServerArgs struct {
	Ipv4Address string `pulumi:"ipv4Address"`
}

type PolicyAlternativeNameServerConfigTargetNameServerArgsInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigTargetNameServerArgsOutput() PolicyAlternativeNameServerConfigTargetNameServerArgsOutput
	ToPolicyAlternativeNameServerConfigTargetNameServerArgsOutputWithContext(context.Context) PolicyAlternativeNameServerConfigTargetNameServerArgsOutput
}

type PolicyAlternativeNameServerConfigTargetNameServerArgsArgs struct {
	Ipv4Address pulumi.StringInput `pulumi:"ipv4Address"`
}

func (PolicyAlternativeNameServerConfigTargetNameServerArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigTargetNameServerArgs)(nil)).Elem()
}

func (i PolicyAlternativeNameServerConfigTargetNameServerArgsArgs) ToPolicyAlternativeNameServerConfigTargetNameServerArgsOutput() PolicyAlternativeNameServerConfigTargetNameServerArgsOutput {
	return i.ToPolicyAlternativeNameServerConfigTargetNameServerArgsOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigTargetNameServerArgsArgs) ToPolicyAlternativeNameServerConfigTargetNameServerArgsOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigTargetNameServerArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigTargetNameServerArgsOutput)
}

type PolicyAlternativeNameServerConfigTargetNameServerArgsArrayInput interface {
	pulumi.Input

	ToPolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput() PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput
	ToPolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutputWithContext(context.Context) PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput
}

type PolicyAlternativeNameServerConfigTargetNameServerArgsArray []PolicyAlternativeNameServerConfigTargetNameServerArgsInput

func (PolicyAlternativeNameServerConfigTargetNameServerArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAlternativeNameServerConfigTargetNameServerArgs)(nil)).Elem()
}

func (i PolicyAlternativeNameServerConfigTargetNameServerArgsArray) ToPolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput() PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput {
	return i.ToPolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutputWithContext(context.Background())
}

func (i PolicyAlternativeNameServerConfigTargetNameServerArgsArray) ToPolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput)
}

type PolicyAlternativeNameServerConfigTargetNameServerArgsOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigTargetNameServerArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyAlternativeNameServerConfigTargetNameServerArgs)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigTargetNameServerArgsOutput) ToPolicyAlternativeNameServerConfigTargetNameServerArgsOutput() PolicyAlternativeNameServerConfigTargetNameServerArgsOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigTargetNameServerArgsOutput) ToPolicyAlternativeNameServerConfigTargetNameServerArgsOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigTargetNameServerArgsOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigTargetNameServerArgsOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyAlternativeNameServerConfigTargetNameServerArgs) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

type PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput struct{ *pulumi.OutputState }

func (PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyAlternativeNameServerConfigTargetNameServerArgs)(nil)).Elem()
}

func (o PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput) ToPolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput() PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput) ToPolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutputWithContext(ctx context.Context) PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput {
	return o
}

func (o PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput) Index(i pulumi.IntInput) PolicyAlternativeNameServerConfigTargetNameServerArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyAlternativeNameServerConfigTargetNameServerArgs {
		return vs[0].([]PolicyAlternativeNameServerConfigTargetNameServerArgs)[vs[1].(int)]
	}).(PolicyAlternativeNameServerConfigTargetNameServerArgsOutput)
}

type PolicyNetwork struct {
	NetworkUrl string `pulumi:"networkUrl"`
}

type PolicyNetworkInput interface {
	pulumi.Input

	ToPolicyNetworkOutput() PolicyNetworkOutput
	ToPolicyNetworkOutputWithContext(context.Context) PolicyNetworkOutput
}

type PolicyNetworkArgs struct {
	NetworkUrl pulumi.StringInput `pulumi:"networkUrl"`
}

func (PolicyNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetwork)(nil)).Elem()
}

func (i PolicyNetworkArgs) ToPolicyNetworkOutput() PolicyNetworkOutput {
	return i.ToPolicyNetworkOutputWithContext(context.Background())
}

func (i PolicyNetworkArgs) ToPolicyNetworkOutputWithContext(ctx context.Context) PolicyNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkOutput)
}

type PolicyNetworkArrayInput interface {
	pulumi.Input

	ToPolicyNetworkArrayOutput() PolicyNetworkArrayOutput
	ToPolicyNetworkArrayOutputWithContext(context.Context) PolicyNetworkArrayOutput
}

type PolicyNetworkArray []PolicyNetworkInput

func (PolicyNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetwork)(nil)).Elem()
}

func (i PolicyNetworkArray) ToPolicyNetworkArrayOutput() PolicyNetworkArrayOutput {
	return i.ToPolicyNetworkArrayOutputWithContext(context.Background())
}

func (i PolicyNetworkArray) ToPolicyNetworkArrayOutputWithContext(ctx context.Context) PolicyNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkArrayOutput)
}

type PolicyNetworkOutput struct{ *pulumi.OutputState }

func (PolicyNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetwork)(nil)).Elem()
}

func (o PolicyNetworkOutput) ToPolicyNetworkOutput() PolicyNetworkOutput {
	return o
}

func (o PolicyNetworkOutput) ToPolicyNetworkOutputWithContext(ctx context.Context) PolicyNetworkOutput {
	return o
}

func (o PolicyNetworkOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyNetwork) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

type PolicyNetworkArrayOutput struct{ *pulumi.OutputState }

func (PolicyNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetwork)(nil)).Elem()
}

func (o PolicyNetworkArrayOutput) ToPolicyNetworkArrayOutput() PolicyNetworkArrayOutput {
	return o
}

func (o PolicyNetworkArrayOutput) ToPolicyNetworkArrayOutputWithContext(ctx context.Context) PolicyNetworkArrayOutput {
	return o
}

func (o PolicyNetworkArrayOutput) Index(i pulumi.IntInput) PolicyNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyNetwork {
		return vs[0].([]PolicyNetwork)[vs[1].(int)]
	}).(PolicyNetworkOutput)
}

type PolicyNetworkArgs struct {
	NetworkUrl string `pulumi:"networkUrl"`
}

type PolicyNetworkArgsInput interface {
	pulumi.Input

	ToPolicyNetworkArgsOutput() PolicyNetworkArgsOutput
	ToPolicyNetworkArgsOutputWithContext(context.Context) PolicyNetworkArgsOutput
}

type PolicyNetworkArgsArgs struct {
	NetworkUrl pulumi.StringInput `pulumi:"networkUrl"`
}

func (PolicyNetworkArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkArgs)(nil)).Elem()
}

func (i PolicyNetworkArgsArgs) ToPolicyNetworkArgsOutput() PolicyNetworkArgsOutput {
	return i.ToPolicyNetworkArgsOutputWithContext(context.Background())
}

func (i PolicyNetworkArgsArgs) ToPolicyNetworkArgsOutputWithContext(ctx context.Context) PolicyNetworkArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkArgsOutput)
}

type PolicyNetworkArgsArrayInput interface {
	pulumi.Input

	ToPolicyNetworkArgsArrayOutput() PolicyNetworkArgsArrayOutput
	ToPolicyNetworkArgsArrayOutputWithContext(context.Context) PolicyNetworkArgsArrayOutput
}

type PolicyNetworkArgsArray []PolicyNetworkArgsInput

func (PolicyNetworkArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkArgs)(nil)).Elem()
}

func (i PolicyNetworkArgsArray) ToPolicyNetworkArgsArrayOutput() PolicyNetworkArgsArrayOutput {
	return i.ToPolicyNetworkArgsArrayOutputWithContext(context.Background())
}

func (i PolicyNetworkArgsArray) ToPolicyNetworkArgsArrayOutputWithContext(ctx context.Context) PolicyNetworkArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkArgsArrayOutput)
}

type PolicyNetworkArgsOutput struct{ *pulumi.OutputState }

func (PolicyNetworkArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkArgs)(nil)).Elem()
}

func (o PolicyNetworkArgsOutput) ToPolicyNetworkArgsOutput() PolicyNetworkArgsOutput {
	return o
}

func (o PolicyNetworkArgsOutput) ToPolicyNetworkArgsOutputWithContext(ctx context.Context) PolicyNetworkArgsOutput {
	return o
}

func (o PolicyNetworkArgsOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyNetworkArgs) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

type PolicyNetworkArgsArrayOutput struct{ *pulumi.OutputState }

func (PolicyNetworkArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkArgs)(nil)).Elem()
}

func (o PolicyNetworkArgsArrayOutput) ToPolicyNetworkArgsArrayOutput() PolicyNetworkArgsArrayOutput {
	return o
}

func (o PolicyNetworkArgsArrayOutput) ToPolicyNetworkArgsArrayOutputWithContext(ctx context.Context) PolicyNetworkArgsArrayOutput {
	return o
}

func (o PolicyNetworkArgsArrayOutput) Index(i pulumi.IntInput) PolicyNetworkArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyNetworkArgs {
		return vs[0].([]PolicyNetworkArgs)[vs[1].(int)]
	}).(PolicyNetworkArgsOutput)
}

type PolicyNetworkState struct {
	NetworkUrl string `pulumi:"networkUrl"`
}

type PolicyNetworkStateInput interface {
	pulumi.Input

	ToPolicyNetworkStateOutput() PolicyNetworkStateOutput
	ToPolicyNetworkStateOutputWithContext(context.Context) PolicyNetworkStateOutput
}

type PolicyNetworkStateArgs struct {
	NetworkUrl pulumi.StringInput `pulumi:"networkUrl"`
}

func (PolicyNetworkStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkState)(nil)).Elem()
}

func (i PolicyNetworkStateArgs) ToPolicyNetworkStateOutput() PolicyNetworkStateOutput {
	return i.ToPolicyNetworkStateOutputWithContext(context.Background())
}

func (i PolicyNetworkStateArgs) ToPolicyNetworkStateOutputWithContext(ctx context.Context) PolicyNetworkStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkStateOutput)
}

type PolicyNetworkStateArrayInput interface {
	pulumi.Input

	ToPolicyNetworkStateArrayOutput() PolicyNetworkStateArrayOutput
	ToPolicyNetworkStateArrayOutputWithContext(context.Context) PolicyNetworkStateArrayOutput
}

type PolicyNetworkStateArray []PolicyNetworkStateInput

func (PolicyNetworkStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkState)(nil)).Elem()
}

func (i PolicyNetworkStateArray) ToPolicyNetworkStateArrayOutput() PolicyNetworkStateArrayOutput {
	return i.ToPolicyNetworkStateArrayOutputWithContext(context.Background())
}

func (i PolicyNetworkStateArray) ToPolicyNetworkStateArrayOutputWithContext(ctx context.Context) PolicyNetworkStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyNetworkStateArrayOutput)
}

type PolicyNetworkStateOutput struct{ *pulumi.OutputState }

func (PolicyNetworkStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyNetworkState)(nil)).Elem()
}

func (o PolicyNetworkStateOutput) ToPolicyNetworkStateOutput() PolicyNetworkStateOutput {
	return o
}

func (o PolicyNetworkStateOutput) ToPolicyNetworkStateOutputWithContext(ctx context.Context) PolicyNetworkStateOutput {
	return o
}

func (o PolicyNetworkStateOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyNetworkState) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

type PolicyNetworkStateArrayOutput struct{ *pulumi.OutputState }

func (PolicyNetworkStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyNetworkState)(nil)).Elem()
}

func (o PolicyNetworkStateArrayOutput) ToPolicyNetworkStateArrayOutput() PolicyNetworkStateArrayOutput {
	return o
}

func (o PolicyNetworkStateArrayOutput) ToPolicyNetworkStateArrayOutputWithContext(ctx context.Context) PolicyNetworkStateArrayOutput {
	return o
}

func (o PolicyNetworkStateArrayOutput) Index(i pulumi.IntInput) PolicyNetworkStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyNetworkState {
		return vs[0].([]PolicyNetworkState)[vs[1].(int)]
	}).(PolicyNetworkStateOutput)
}

type GetKeysKeySigningKey struct {
	// String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time. Possible values are `ecdsap256sha256`, `ecdsap384sha384`, `rsasha1`, `rsasha256`, and `rsasha512`.
	Algorithm string `pulumi:"algorithm"`
	// The time that this resource was created in the control plane. This is in RFC3339 text format.
	CreationTime string `pulumi:"creationTime"`
	// A mutable string of at most 1024 characters associated with this resource for the user's convenience.
	Description string `pulumi:"description"`
	// A list of cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Each contains:
	// - `digest` - The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.
	// - `type` - Specifies the algorithm used to calculate this digest. Possible values are `sha1`, `sha256` and `sha384`
	Digests []GetKeysKeySigningKeyDigest `pulumi:"digests"`
	// The DS record based on the KSK record. This is used when [delegating](https://cloud.google.com/dns/docs/dnssec-advanced#subdelegation) DNSSEC-signed subdomains.
	DsRecord string `pulumi:"dsRecord"`
	// Unique identifier for the resource; defined by the server.
	Id string `pulumi:"id"`
	// Active keys will be used to sign subsequent changes to the ManagedZone. Inactive keys will still be present as DNSKEY Resource Records for the use of resolvers validating existing signatures.
	IsActive bool `pulumi:"isActive"`
	// Length of the key in bits. Specified at creation time then immutable.
	KeyLength int `pulumi:"keyLength"`
	// The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B.
	KeyTag int `pulumi:"keyTag"`
	// Base64 encoded public half of this key.
	PublicKey string `pulumi:"publicKey"`
}

type GetKeysKeySigningKeyInput interface {
	pulumi.Input

	ToGetKeysKeySigningKeyOutput() GetKeysKeySigningKeyOutput
	ToGetKeysKeySigningKeyOutputWithContext(context.Context) GetKeysKeySigningKeyOutput
}

type GetKeysKeySigningKeyArgs struct {
	// String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time. Possible values are `ecdsap256sha256`, `ecdsap384sha384`, `rsasha1`, `rsasha256`, and `rsasha512`.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The time that this resource was created in the control plane. This is in RFC3339 text format.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// A mutable string of at most 1024 characters associated with this resource for the user's convenience.
	Description pulumi.StringInput `pulumi:"description"`
	// A list of cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Each contains:
	// - `digest` - The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.
	// - `type` - Specifies the algorithm used to calculate this digest. Possible values are `sha1`, `sha256` and `sha384`
	Digests GetKeysKeySigningKeyDigestArrayInput `pulumi:"digests"`
	// The DS record based on the KSK record. This is used when [delegating](https://cloud.google.com/dns/docs/dnssec-advanced#subdelegation) DNSSEC-signed subdomains.
	DsRecord pulumi.StringInput `pulumi:"dsRecord"`
	// Unique identifier for the resource; defined by the server.
	Id pulumi.StringInput `pulumi:"id"`
	// Active keys will be used to sign subsequent changes to the ManagedZone. Inactive keys will still be present as DNSKEY Resource Records for the use of resolvers validating existing signatures.
	IsActive pulumi.BoolInput `pulumi:"isActive"`
	// Length of the key in bits. Specified at creation time then immutable.
	KeyLength pulumi.IntInput `pulumi:"keyLength"`
	// The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B.
	KeyTag pulumi.IntInput `pulumi:"keyTag"`
	// Base64 encoded public half of this key.
	PublicKey pulumi.StringInput `pulumi:"publicKey"`
}

func (GetKeysKeySigningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeySigningKey)(nil)).Elem()
}

func (i GetKeysKeySigningKeyArgs) ToGetKeysKeySigningKeyOutput() GetKeysKeySigningKeyOutput {
	return i.ToGetKeysKeySigningKeyOutputWithContext(context.Background())
}

func (i GetKeysKeySigningKeyArgs) ToGetKeysKeySigningKeyOutputWithContext(ctx context.Context) GetKeysKeySigningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeySigningKeyOutput)
}

type GetKeysKeySigningKeyArrayInput interface {
	pulumi.Input

	ToGetKeysKeySigningKeyArrayOutput() GetKeysKeySigningKeyArrayOutput
	ToGetKeysKeySigningKeyArrayOutputWithContext(context.Context) GetKeysKeySigningKeyArrayOutput
}

type GetKeysKeySigningKeyArray []GetKeysKeySigningKeyInput

func (GetKeysKeySigningKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeySigningKey)(nil)).Elem()
}

func (i GetKeysKeySigningKeyArray) ToGetKeysKeySigningKeyArrayOutput() GetKeysKeySigningKeyArrayOutput {
	return i.ToGetKeysKeySigningKeyArrayOutputWithContext(context.Background())
}

func (i GetKeysKeySigningKeyArray) ToGetKeysKeySigningKeyArrayOutputWithContext(ctx context.Context) GetKeysKeySigningKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeySigningKeyArrayOutput)
}

type GetKeysKeySigningKeyOutput struct{ *pulumi.OutputState }

func (GetKeysKeySigningKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeySigningKey)(nil)).Elem()
}

func (o GetKeysKeySigningKeyOutput) ToGetKeysKeySigningKeyOutput() GetKeysKeySigningKeyOutput {
	return o
}

func (o GetKeysKeySigningKeyOutput) ToGetKeysKeySigningKeyOutputWithContext(ctx context.Context) GetKeysKeySigningKeyOutput {
	return o
}

// String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time. Possible values are `ecdsap256sha256`, `ecdsap384sha384`, `rsasha1`, `rsasha256`, and `rsasha512`.
func (o GetKeysKeySigningKeyOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The time that this resource was created in the control plane. This is in RFC3339 text format.
func (o GetKeysKeySigningKeyOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) string { return v.CreationTime }).(pulumi.StringOutput)
}

// A mutable string of at most 1024 characters associated with this resource for the user's convenience.
func (o GetKeysKeySigningKeyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) string { return v.Description }).(pulumi.StringOutput)
}

// A list of cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Each contains:
// - `digest` - The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.
// - `type` - Specifies the algorithm used to calculate this digest. Possible values are `sha1`, `sha256` and `sha384`
func (o GetKeysKeySigningKeyOutput) Digests() GetKeysKeySigningKeyDigestArrayOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) []GetKeysKeySigningKeyDigest { return v.Digests }).(GetKeysKeySigningKeyDigestArrayOutput)
}

// The DS record based on the KSK record. This is used when [delegating](https://cloud.google.com/dns/docs/dnssec-advanced#subdelegation) DNSSEC-signed subdomains.
func (o GetKeysKeySigningKeyOutput) DsRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) string { return v.DsRecord }).(pulumi.StringOutput)
}

// Unique identifier for the resource; defined by the server.
func (o GetKeysKeySigningKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) string { return v.Id }).(pulumi.StringOutput)
}

// Active keys will be used to sign subsequent changes to the ManagedZone. Inactive keys will still be present as DNSKEY Resource Records for the use of resolvers validating existing signatures.
func (o GetKeysKeySigningKeyOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) bool { return v.IsActive }).(pulumi.BoolOutput)
}

// Length of the key in bits. Specified at creation time then immutable.
func (o GetKeysKeySigningKeyOutput) KeyLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) int { return v.KeyLength }).(pulumi.IntOutput)
}

// The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B.
func (o GetKeysKeySigningKeyOutput) KeyTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) int { return v.KeyTag }).(pulumi.IntOutput)
}

// Base64 encoded public half of this key.
func (o GetKeysKeySigningKeyOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysKeySigningKey) string { return v.PublicKey }).(pulumi.StringOutput)
}

type GetKeysKeySigningKeyArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeySigningKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeySigningKey)(nil)).Elem()
}

func (o GetKeysKeySigningKeyArrayOutput) ToGetKeysKeySigningKeyArrayOutput() GetKeysKeySigningKeyArrayOutput {
	return o
}

func (o GetKeysKeySigningKeyArrayOutput) ToGetKeysKeySigningKeyArrayOutputWithContext(ctx context.Context) GetKeysKeySigningKeyArrayOutput {
	return o
}

func (o GetKeysKeySigningKeyArrayOutput) Index(i pulumi.IntInput) GetKeysKeySigningKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKeySigningKey {
		return vs[0].([]GetKeysKeySigningKey)[vs[1].(int)]
	}).(GetKeysKeySigningKeyOutput)
}

type GetKeysKeySigningKeyDigest struct {
	Digest *string `pulumi:"digest"`
	Type   *string `pulumi:"type"`
}

type GetKeysKeySigningKeyDigestInput interface {
	pulumi.Input

	ToGetKeysKeySigningKeyDigestOutput() GetKeysKeySigningKeyDigestOutput
	ToGetKeysKeySigningKeyDigestOutputWithContext(context.Context) GetKeysKeySigningKeyDigestOutput
}

type GetKeysKeySigningKeyDigestArgs struct {
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (GetKeysKeySigningKeyDigestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeySigningKeyDigest)(nil)).Elem()
}

func (i GetKeysKeySigningKeyDigestArgs) ToGetKeysKeySigningKeyDigestOutput() GetKeysKeySigningKeyDigestOutput {
	return i.ToGetKeysKeySigningKeyDigestOutputWithContext(context.Background())
}

func (i GetKeysKeySigningKeyDigestArgs) ToGetKeysKeySigningKeyDigestOutputWithContext(ctx context.Context) GetKeysKeySigningKeyDigestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeySigningKeyDigestOutput)
}

type GetKeysKeySigningKeyDigestArrayInput interface {
	pulumi.Input

	ToGetKeysKeySigningKeyDigestArrayOutput() GetKeysKeySigningKeyDigestArrayOutput
	ToGetKeysKeySigningKeyDigestArrayOutputWithContext(context.Context) GetKeysKeySigningKeyDigestArrayOutput
}

type GetKeysKeySigningKeyDigestArray []GetKeysKeySigningKeyDigestInput

func (GetKeysKeySigningKeyDigestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeySigningKeyDigest)(nil)).Elem()
}

func (i GetKeysKeySigningKeyDigestArray) ToGetKeysKeySigningKeyDigestArrayOutput() GetKeysKeySigningKeyDigestArrayOutput {
	return i.ToGetKeysKeySigningKeyDigestArrayOutputWithContext(context.Background())
}

func (i GetKeysKeySigningKeyDigestArray) ToGetKeysKeySigningKeyDigestArrayOutputWithContext(ctx context.Context) GetKeysKeySigningKeyDigestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysKeySigningKeyDigestArrayOutput)
}

type GetKeysKeySigningKeyDigestOutput struct{ *pulumi.OutputState }

func (GetKeysKeySigningKeyDigestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysKeySigningKeyDigest)(nil)).Elem()
}

func (o GetKeysKeySigningKeyDigestOutput) ToGetKeysKeySigningKeyDigestOutput() GetKeysKeySigningKeyDigestOutput {
	return o
}

func (o GetKeysKeySigningKeyDigestOutput) ToGetKeysKeySigningKeyDigestOutputWithContext(ctx context.Context) GetKeysKeySigningKeyDigestOutput {
	return o
}

func (o GetKeysKeySigningKeyDigestOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysKeySigningKeyDigest) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

func (o GetKeysKeySigningKeyDigestOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysKeySigningKeyDigest) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetKeysKeySigningKeyDigestArrayOutput struct{ *pulumi.OutputState }

func (GetKeysKeySigningKeyDigestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysKeySigningKeyDigest)(nil)).Elem()
}

func (o GetKeysKeySigningKeyDigestArrayOutput) ToGetKeysKeySigningKeyDigestArrayOutput() GetKeysKeySigningKeyDigestArrayOutput {
	return o
}

func (o GetKeysKeySigningKeyDigestArrayOutput) ToGetKeysKeySigningKeyDigestArrayOutputWithContext(ctx context.Context) GetKeysKeySigningKeyDigestArrayOutput {
	return o
}

func (o GetKeysKeySigningKeyDigestArrayOutput) Index(i pulumi.IntInput) GetKeysKeySigningKeyDigestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysKeySigningKeyDigest {
		return vs[0].([]GetKeysKeySigningKeyDigest)[vs[1].(int)]
	}).(GetKeysKeySigningKeyDigestOutput)
}

type GetKeysZoneSigningKey struct {
	// String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time. Possible values are `ecdsap256sha256`, `ecdsap384sha384`, `rsasha1`, `rsasha256`, and `rsasha512`.
	Algorithm string `pulumi:"algorithm"`
	// The time that this resource was created in the control plane. This is in RFC3339 text format.
	CreationTime string `pulumi:"creationTime"`
	// A mutable string of at most 1024 characters associated with this resource for the user's convenience.
	Description string `pulumi:"description"`
	// A list of cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Each contains:
	// - `digest` - The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.
	// - `type` - Specifies the algorithm used to calculate this digest. Possible values are `sha1`, `sha256` and `sha384`
	Digests []GetKeysZoneSigningKeyDigest `pulumi:"digests"`
	// Unique identifier for the resource; defined by the server.
	Id string `pulumi:"id"`
	// Active keys will be used to sign subsequent changes to the ManagedZone. Inactive keys will still be present as DNSKEY Resource Records for the use of resolvers validating existing signatures.
	IsActive bool `pulumi:"isActive"`
	// Length of the key in bits. Specified at creation time then immutable.
	KeyLength int `pulumi:"keyLength"`
	// The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B.
	KeyTag int `pulumi:"keyTag"`
	// Base64 encoded public half of this key.
	PublicKey string `pulumi:"publicKey"`
}

type GetKeysZoneSigningKeyInput interface {
	pulumi.Input

	ToGetKeysZoneSigningKeyOutput() GetKeysZoneSigningKeyOutput
	ToGetKeysZoneSigningKeyOutputWithContext(context.Context) GetKeysZoneSigningKeyOutput
}

type GetKeysZoneSigningKeyArgs struct {
	// String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time. Possible values are `ecdsap256sha256`, `ecdsap384sha384`, `rsasha1`, `rsasha256`, and `rsasha512`.
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// The time that this resource was created in the control plane. This is in RFC3339 text format.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// A mutable string of at most 1024 characters associated with this resource for the user's convenience.
	Description pulumi.StringInput `pulumi:"description"`
	// A list of cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Each contains:
	// - `digest` - The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.
	// - `type` - Specifies the algorithm used to calculate this digest. Possible values are `sha1`, `sha256` and `sha384`
	Digests GetKeysZoneSigningKeyDigestArrayInput `pulumi:"digests"`
	// Unique identifier for the resource; defined by the server.
	Id pulumi.StringInput `pulumi:"id"`
	// Active keys will be used to sign subsequent changes to the ManagedZone. Inactive keys will still be present as DNSKEY Resource Records for the use of resolvers validating existing signatures.
	IsActive pulumi.BoolInput `pulumi:"isActive"`
	// Length of the key in bits. Specified at creation time then immutable.
	KeyLength pulumi.IntInput `pulumi:"keyLength"`
	// The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B.
	KeyTag pulumi.IntInput `pulumi:"keyTag"`
	// Base64 encoded public half of this key.
	PublicKey pulumi.StringInput `pulumi:"publicKey"`
}

func (GetKeysZoneSigningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysZoneSigningKey)(nil)).Elem()
}

func (i GetKeysZoneSigningKeyArgs) ToGetKeysZoneSigningKeyOutput() GetKeysZoneSigningKeyOutput {
	return i.ToGetKeysZoneSigningKeyOutputWithContext(context.Background())
}

func (i GetKeysZoneSigningKeyArgs) ToGetKeysZoneSigningKeyOutputWithContext(ctx context.Context) GetKeysZoneSigningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysZoneSigningKeyOutput)
}

type GetKeysZoneSigningKeyArrayInput interface {
	pulumi.Input

	ToGetKeysZoneSigningKeyArrayOutput() GetKeysZoneSigningKeyArrayOutput
	ToGetKeysZoneSigningKeyArrayOutputWithContext(context.Context) GetKeysZoneSigningKeyArrayOutput
}

type GetKeysZoneSigningKeyArray []GetKeysZoneSigningKeyInput

func (GetKeysZoneSigningKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysZoneSigningKey)(nil)).Elem()
}

func (i GetKeysZoneSigningKeyArray) ToGetKeysZoneSigningKeyArrayOutput() GetKeysZoneSigningKeyArrayOutput {
	return i.ToGetKeysZoneSigningKeyArrayOutputWithContext(context.Background())
}

func (i GetKeysZoneSigningKeyArray) ToGetKeysZoneSigningKeyArrayOutputWithContext(ctx context.Context) GetKeysZoneSigningKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysZoneSigningKeyArrayOutput)
}

type GetKeysZoneSigningKeyOutput struct{ *pulumi.OutputState }

func (GetKeysZoneSigningKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysZoneSigningKey)(nil)).Elem()
}

func (o GetKeysZoneSigningKeyOutput) ToGetKeysZoneSigningKeyOutput() GetKeysZoneSigningKeyOutput {
	return o
}

func (o GetKeysZoneSigningKeyOutput) ToGetKeysZoneSigningKeyOutputWithContext(ctx context.Context) GetKeysZoneSigningKeyOutput {
	return o
}

// String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time. Possible values are `ecdsap256sha256`, `ecdsap384sha384`, `rsasha1`, `rsasha256`, and `rsasha512`.
func (o GetKeysZoneSigningKeyOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKey) string { return v.Algorithm }).(pulumi.StringOutput)
}

// The time that this resource was created in the control plane. This is in RFC3339 text format.
func (o GetKeysZoneSigningKeyOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKey) string { return v.CreationTime }).(pulumi.StringOutput)
}

// A mutable string of at most 1024 characters associated with this resource for the user's convenience.
func (o GetKeysZoneSigningKeyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKey) string { return v.Description }).(pulumi.StringOutput)
}

// A list of cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Each contains:
// - `digest` - The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.
// - `type` - Specifies the algorithm used to calculate this digest. Possible values are `sha1`, `sha256` and `sha384`
func (o GetKeysZoneSigningKeyOutput) Digests() GetKeysZoneSigningKeyDigestArrayOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKey) []GetKeysZoneSigningKeyDigest { return v.Digests }).(GetKeysZoneSigningKeyDigestArrayOutput)
}

// Unique identifier for the resource; defined by the server.
func (o GetKeysZoneSigningKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKey) string { return v.Id }).(pulumi.StringOutput)
}

// Active keys will be used to sign subsequent changes to the ManagedZone. Inactive keys will still be present as DNSKEY Resource Records for the use of resolvers validating existing signatures.
func (o GetKeysZoneSigningKeyOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKey) bool { return v.IsActive }).(pulumi.BoolOutput)
}

// Length of the key in bits. Specified at creation time then immutable.
func (o GetKeysZoneSigningKeyOutput) KeyLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKey) int { return v.KeyLength }).(pulumi.IntOutput)
}

// The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B.
func (o GetKeysZoneSigningKeyOutput) KeyTag() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKey) int { return v.KeyTag }).(pulumi.IntOutput)
}

// Base64 encoded public half of this key.
func (o GetKeysZoneSigningKeyOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKey) string { return v.PublicKey }).(pulumi.StringOutput)
}

type GetKeysZoneSigningKeyArrayOutput struct{ *pulumi.OutputState }

func (GetKeysZoneSigningKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysZoneSigningKey)(nil)).Elem()
}

func (o GetKeysZoneSigningKeyArrayOutput) ToGetKeysZoneSigningKeyArrayOutput() GetKeysZoneSigningKeyArrayOutput {
	return o
}

func (o GetKeysZoneSigningKeyArrayOutput) ToGetKeysZoneSigningKeyArrayOutputWithContext(ctx context.Context) GetKeysZoneSigningKeyArrayOutput {
	return o
}

func (o GetKeysZoneSigningKeyArrayOutput) Index(i pulumi.IntInput) GetKeysZoneSigningKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysZoneSigningKey {
		return vs[0].([]GetKeysZoneSigningKey)[vs[1].(int)]
	}).(GetKeysZoneSigningKeyOutput)
}

type GetKeysZoneSigningKeyDigest struct {
	Digest *string `pulumi:"digest"`
	Type   *string `pulumi:"type"`
}

type GetKeysZoneSigningKeyDigestInput interface {
	pulumi.Input

	ToGetKeysZoneSigningKeyDigestOutput() GetKeysZoneSigningKeyDigestOutput
	ToGetKeysZoneSigningKeyDigestOutputWithContext(context.Context) GetKeysZoneSigningKeyDigestOutput
}

type GetKeysZoneSigningKeyDigestArgs struct {
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (GetKeysZoneSigningKeyDigestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysZoneSigningKeyDigest)(nil)).Elem()
}

func (i GetKeysZoneSigningKeyDigestArgs) ToGetKeysZoneSigningKeyDigestOutput() GetKeysZoneSigningKeyDigestOutput {
	return i.ToGetKeysZoneSigningKeyDigestOutputWithContext(context.Background())
}

func (i GetKeysZoneSigningKeyDigestArgs) ToGetKeysZoneSigningKeyDigestOutputWithContext(ctx context.Context) GetKeysZoneSigningKeyDigestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysZoneSigningKeyDigestOutput)
}

type GetKeysZoneSigningKeyDigestArrayInput interface {
	pulumi.Input

	ToGetKeysZoneSigningKeyDigestArrayOutput() GetKeysZoneSigningKeyDigestArrayOutput
	ToGetKeysZoneSigningKeyDigestArrayOutputWithContext(context.Context) GetKeysZoneSigningKeyDigestArrayOutput
}

type GetKeysZoneSigningKeyDigestArray []GetKeysZoneSigningKeyDigestInput

func (GetKeysZoneSigningKeyDigestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysZoneSigningKeyDigest)(nil)).Elem()
}

func (i GetKeysZoneSigningKeyDigestArray) ToGetKeysZoneSigningKeyDigestArrayOutput() GetKeysZoneSigningKeyDigestArrayOutput {
	return i.ToGetKeysZoneSigningKeyDigestArrayOutputWithContext(context.Background())
}

func (i GetKeysZoneSigningKeyDigestArray) ToGetKeysZoneSigningKeyDigestArrayOutputWithContext(ctx context.Context) GetKeysZoneSigningKeyDigestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeysZoneSigningKeyDigestArrayOutput)
}

type GetKeysZoneSigningKeyDigestOutput struct{ *pulumi.OutputState }

func (GetKeysZoneSigningKeyDigestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysZoneSigningKeyDigest)(nil)).Elem()
}

func (o GetKeysZoneSigningKeyDigestOutput) ToGetKeysZoneSigningKeyDigestOutput() GetKeysZoneSigningKeyDigestOutput {
	return o
}

func (o GetKeysZoneSigningKeyDigestOutput) ToGetKeysZoneSigningKeyDigestOutputWithContext(ctx context.Context) GetKeysZoneSigningKeyDigestOutput {
	return o
}

func (o GetKeysZoneSigningKeyDigestOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKeyDigest) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

func (o GetKeysZoneSigningKeyDigestOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysZoneSigningKeyDigest) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetKeysZoneSigningKeyDigestArrayOutput struct{ *pulumi.OutputState }

func (GetKeysZoneSigningKeyDigestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeysZoneSigningKeyDigest)(nil)).Elem()
}

func (o GetKeysZoneSigningKeyDigestArrayOutput) ToGetKeysZoneSigningKeyDigestArrayOutput() GetKeysZoneSigningKeyDigestArrayOutput {
	return o
}

func (o GetKeysZoneSigningKeyDigestArrayOutput) ToGetKeysZoneSigningKeyDigestArrayOutputWithContext(ctx context.Context) GetKeysZoneSigningKeyDigestArrayOutput {
	return o
}

func (o GetKeysZoneSigningKeyDigestArrayOutput) Index(i pulumi.IntInput) GetKeysZoneSigningKeyDigestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeysZoneSigningKeyDigest {
		return vs[0].([]GetKeysZoneSigningKeyDigest)[vs[1].(int)]
	}).(GetKeysZoneSigningKeyDigestOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigPtrOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigArgsOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigDefaultKeySpecOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigDefaultKeySpecArrayOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigDefaultKeySpecArgsOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigDefaultKeySpecArgsArrayOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigStateOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigStateDefaultKeySpecOutput{})
	pulumi.RegisterOutputType(ManagedZoneDnssecConfigStateDefaultKeySpecArrayOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigPtrOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigArgsOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigStateOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigStateTargetNameServerOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigStateTargetNameServerArrayOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigTargetNameServerOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigTargetNameServerArrayOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigTargetNameServerArgsOutput{})
	pulumi.RegisterOutputType(ManagedZoneForwardingConfigTargetNameServerArgsArrayOutput{})
	pulumi.RegisterOutputType(ManagedZonePeeringConfigOutput{})
	pulumi.RegisterOutputType(ManagedZonePeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(ManagedZonePeeringConfigArgsOutput{})
	pulumi.RegisterOutputType(ManagedZonePeeringConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ManagedZonePeeringConfigStateOutput{})
	pulumi.RegisterOutputType(ManagedZonePeeringConfigStateTargetNetworkOutput{})
	pulumi.RegisterOutputType(ManagedZonePeeringConfigTargetNetworkOutput{})
	pulumi.RegisterOutputType(ManagedZonePeeringConfigTargetNetworkArgsOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigPtrOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigArgsOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigNetworkOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigNetworkArrayOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigNetworkArgsOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigNetworkArgsArrayOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigStateOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigStateNetworkOutput{})
	pulumi.RegisterOutputType(ManagedZonePrivateVisibilityConfigStateNetworkArrayOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigPtrOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigArgsOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigStateOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigStateTargetNameServerOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigStateTargetNameServerArrayOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigTargetNameServerOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigTargetNameServerArrayOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigTargetNameServerArgsOutput{})
	pulumi.RegisterOutputType(PolicyAlternativeNameServerConfigTargetNameServerArgsArrayOutput{})
	pulumi.RegisterOutputType(PolicyNetworkOutput{})
	pulumi.RegisterOutputType(PolicyNetworkArrayOutput{})
	pulumi.RegisterOutputType(PolicyNetworkArgsOutput{})
	pulumi.RegisterOutputType(PolicyNetworkArgsArrayOutput{})
	pulumi.RegisterOutputType(PolicyNetworkStateOutput{})
	pulumi.RegisterOutputType(PolicyNetworkStateArrayOutput{})
	pulumi.RegisterOutputType(GetKeysKeySigningKeyOutput{})
	pulumi.RegisterOutputType(GetKeysKeySigningKeyArrayOutput{})
	pulumi.RegisterOutputType(GetKeysKeySigningKeyDigestOutput{})
	pulumi.RegisterOutputType(GetKeysKeySigningKeyDigestArrayOutput{})
	pulumi.RegisterOutputType(GetKeysZoneSigningKeyOutput{})
	pulumi.RegisterOutputType(GetKeysZoneSigningKeyArrayOutput{})
	pulumi.RegisterOutputType(GetKeysZoneSigningKeyDigestOutput{})
	pulumi.RegisterOutputType(GetKeysZoneSigningKeyDigestArrayOutput{})
}
