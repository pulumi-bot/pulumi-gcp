// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type BucketCor struct {
	// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Methods []string `pulumi:"methods"`
	// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origins []string `pulumi:"origins"`
	// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
	ResponseHeaders []string `pulumi:"responseHeaders"`
}

type BucketCorInput interface {
	pulumi.Input

	ToBucketCorOutput() BucketCorOutput
	ToBucketCorOutputWithContext(context.Context) BucketCorOutput
}

type BucketCorArgs struct {
	// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origins pulumi.StringArrayInput `pulumi:"origins"`
	// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
	ResponseHeaders pulumi.StringArrayInput `pulumi:"responseHeaders"`
}

func (BucketCorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCor)(nil)).Elem()
}

func (i BucketCorArgs) ToBucketCorOutput() BucketCorOutput {
	return i.ToBucketCorOutputWithContext(context.Background())
}

func (i BucketCorArgs) ToBucketCorOutputWithContext(ctx context.Context) BucketCorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorOutput)
}

type BucketCorArrayInput interface {
	pulumi.Input

	ToBucketCorArrayOutput() BucketCorArrayOutput
	ToBucketCorArrayOutputWithContext(context.Context) BucketCorArrayOutput
}

type BucketCorArray []BucketCorInput

func (BucketCorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCor)(nil)).Elem()
}

func (i BucketCorArray) ToBucketCorArrayOutput() BucketCorArrayOutput {
	return i.ToBucketCorArrayOutputWithContext(context.Background())
}

func (i BucketCorArray) ToBucketCorArrayOutputWithContext(ctx context.Context) BucketCorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorArrayOutput)
}

type BucketCorOutput struct{ *pulumi.OutputState }

func (BucketCorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCor)(nil)).Elem()
}

func (o BucketCorOutput) ToBucketCorOutput() BucketCorOutput {
	return o
}

func (o BucketCorOutput) ToBucketCorOutputWithContext(ctx context.Context) BucketCorOutput {
	return o
}

// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
func (o BucketCorOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketCor) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
func (o BucketCorOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCor) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
func (o BucketCorOutput) Origins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCor) []string { return v.Origins }).(pulumi.StringArrayOutput)
}

// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
func (o BucketCorOutput) ResponseHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCor) []string { return v.ResponseHeaders }).(pulumi.StringArrayOutput)
}

type BucketCorArrayOutput struct{ *pulumi.OutputState }

func (BucketCorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCor)(nil)).Elem()
}

func (o BucketCorArrayOutput) ToBucketCorArrayOutput() BucketCorArrayOutput {
	return o
}

func (o BucketCorArrayOutput) ToBucketCorArrayOutputWithContext(ctx context.Context) BucketCorArrayOutput {
	return o
}

func (o BucketCorArrayOutput) Index(i pulumi.IntInput) BucketCorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketCor {
		return vs[0].([]BucketCor)[vs[1].(int)]
	}).(BucketCorOutput)
}

type BucketCorArgs struct {
	// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Methods []string `pulumi:"methods"`
	// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origins []string `pulumi:"origins"`
	// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
	ResponseHeaders []string `pulumi:"responseHeaders"`
}

type BucketCorArgsInput interface {
	pulumi.Input

	ToBucketCorArgsOutput() BucketCorArgsOutput
	ToBucketCorArgsOutputWithContext(context.Context) BucketCorArgsOutput
}

type BucketCorArgsArgs struct {
	// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origins pulumi.StringArrayInput `pulumi:"origins"`
	// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
	ResponseHeaders pulumi.StringArrayInput `pulumi:"responseHeaders"`
}

func (BucketCorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorArgs)(nil)).Elem()
}

func (i BucketCorArgsArgs) ToBucketCorArgsOutput() BucketCorArgsOutput {
	return i.ToBucketCorArgsOutputWithContext(context.Background())
}

func (i BucketCorArgsArgs) ToBucketCorArgsOutputWithContext(ctx context.Context) BucketCorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorArgsOutput)
}

type BucketCorArgsArrayInput interface {
	pulumi.Input

	ToBucketCorArgsArrayOutput() BucketCorArgsArrayOutput
	ToBucketCorArgsArrayOutputWithContext(context.Context) BucketCorArgsArrayOutput
}

type BucketCorArgsArray []BucketCorArgsInput

func (BucketCorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorArgs)(nil)).Elem()
}

func (i BucketCorArgsArray) ToBucketCorArgsArrayOutput() BucketCorArgsArrayOutput {
	return i.ToBucketCorArgsArrayOutputWithContext(context.Background())
}

func (i BucketCorArgsArray) ToBucketCorArgsArrayOutputWithContext(ctx context.Context) BucketCorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorArgsArrayOutput)
}

type BucketCorArgsOutput struct{ *pulumi.OutputState }

func (BucketCorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorArgs)(nil)).Elem()
}

func (o BucketCorArgsOutput) ToBucketCorArgsOutput() BucketCorArgsOutput {
	return o
}

func (o BucketCorArgsOutput) ToBucketCorArgsOutputWithContext(ctx context.Context) BucketCorArgsOutput {
	return o
}

// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
func (o BucketCorArgsOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketCorArgs) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
func (o BucketCorArgsOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorArgs) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
func (o BucketCorArgsOutput) Origins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorArgs) []string { return v.Origins }).(pulumi.StringArrayOutput)
}

// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
func (o BucketCorArgsOutput) ResponseHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorArgs) []string { return v.ResponseHeaders }).(pulumi.StringArrayOutput)
}

type BucketCorArgsArrayOutput struct{ *pulumi.OutputState }

func (BucketCorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorArgs)(nil)).Elem()
}

func (o BucketCorArgsArrayOutput) ToBucketCorArgsArrayOutput() BucketCorArgsArrayOutput {
	return o
}

func (o BucketCorArgsArrayOutput) ToBucketCorArgsArrayOutputWithContext(ctx context.Context) BucketCorArgsArrayOutput {
	return o
}

func (o BucketCorArgsArrayOutput) Index(i pulumi.IntInput) BucketCorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketCorArgs {
		return vs[0].([]BucketCorArgs)[vs[1].(int)]
	}).(BucketCorArgsOutput)
}

type BucketCorState struct {
	// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Methods []string `pulumi:"methods"`
	// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origins []string `pulumi:"origins"`
	// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
	ResponseHeaders []string `pulumi:"responseHeaders"`
}

type BucketCorStateInput interface {
	pulumi.Input

	ToBucketCorStateOutput() BucketCorStateOutput
	ToBucketCorStateOutputWithContext(context.Context) BucketCorStateOutput
}

type BucketCorStateArgs struct {
	// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Methods pulumi.StringArrayInput `pulumi:"methods"`
	// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origins pulumi.StringArrayInput `pulumi:"origins"`
	// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
	ResponseHeaders pulumi.StringArrayInput `pulumi:"responseHeaders"`
}

func (BucketCorStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorState)(nil)).Elem()
}

func (i BucketCorStateArgs) ToBucketCorStateOutput() BucketCorStateOutput {
	return i.ToBucketCorStateOutputWithContext(context.Background())
}

func (i BucketCorStateArgs) ToBucketCorStateOutputWithContext(ctx context.Context) BucketCorStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorStateOutput)
}

type BucketCorStateArrayInput interface {
	pulumi.Input

	ToBucketCorStateArrayOutput() BucketCorStateArrayOutput
	ToBucketCorStateArrayOutputWithContext(context.Context) BucketCorStateArrayOutput
}

type BucketCorStateArray []BucketCorStateInput

func (BucketCorStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorState)(nil)).Elem()
}

func (i BucketCorStateArray) ToBucketCorStateArrayOutput() BucketCorStateArrayOutput {
	return i.ToBucketCorStateArrayOutputWithContext(context.Background())
}

func (i BucketCorStateArray) ToBucketCorStateArrayOutputWithContext(ctx context.Context) BucketCorStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorStateArrayOutput)
}

type BucketCorStateOutput struct{ *pulumi.OutputState }

func (BucketCorStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorState)(nil)).Elem()
}

func (o BucketCorStateOutput) ToBucketCorStateOutput() BucketCorStateOutput {
	return o
}

func (o BucketCorStateOutput) ToBucketCorStateOutputWithContext(ctx context.Context) BucketCorStateOutput {
	return o
}

// The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
func (o BucketCorStateOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketCorState) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
func (o BucketCorStateOutput) Methods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorState) []string { return v.Methods }).(pulumi.StringArrayOutput)
}

// The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
func (o BucketCorStateOutput) Origins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorState) []string { return v.Origins }).(pulumi.StringArrayOutput)
}

// The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
func (o BucketCorStateOutput) ResponseHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorState) []string { return v.ResponseHeaders }).(pulumi.StringArrayOutput)
}

type BucketCorStateArrayOutput struct{ *pulumi.OutputState }

func (BucketCorStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorState)(nil)).Elem()
}

func (o BucketCorStateArrayOutput) ToBucketCorStateArrayOutput() BucketCorStateArrayOutput {
	return o
}

func (o BucketCorStateArrayOutput) ToBucketCorStateArrayOutputWithContext(ctx context.Context) BucketCorStateArrayOutput {
	return o
}

func (o BucketCorStateArrayOutput) Index(i pulumi.IntInput) BucketCorStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketCorState {
		return vs[0].([]BucketCorState)[vs[1].(int)]
	}).(BucketCorStateOutput)
}

type BucketEncryption struct {
	DefaultKmsKeyName string `pulumi:"defaultKmsKeyName"`
}

type BucketEncryptionInput interface {
	pulumi.Input

	ToBucketEncryptionOutput() BucketEncryptionOutput
	ToBucketEncryptionOutputWithContext(context.Context) BucketEncryptionOutput
}

type BucketEncryptionArgs struct {
	DefaultKmsKeyName pulumi.StringInput `pulumi:"defaultKmsKeyName"`
}

func (BucketEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryption)(nil)).Elem()
}

func (i BucketEncryptionArgs) ToBucketEncryptionOutput() BucketEncryptionOutput {
	return i.ToBucketEncryptionOutputWithContext(context.Background())
}

func (i BucketEncryptionArgs) ToBucketEncryptionOutputWithContext(ctx context.Context) BucketEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionOutput)
}

func (i BucketEncryptionArgs) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return i.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i BucketEncryptionArgs) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionOutput).ToBucketEncryptionPtrOutputWithContext(ctx)
}

type BucketEncryptionPtrInput interface {
	pulumi.Input

	ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput
	ToBucketEncryptionPtrOutputWithContext(context.Context) BucketEncryptionPtrOutput
}

type bucketEncryptionPtrType BucketEncryptionArgs

func BucketEncryptionPtr(v *BucketEncryptionArgs) BucketEncryptionPtrInput {
	return (*bucketEncryptionPtrType)(v)
}

func (*bucketEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryption)(nil)).Elem()
}

func (i *bucketEncryptionPtrType) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return i.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i *bucketEncryptionPtrType) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionPtrOutput)
}

type BucketEncryptionOutput struct{ *pulumi.OutputState }

func (BucketEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryption)(nil)).Elem()
}

func (o BucketEncryptionOutput) ToBucketEncryptionOutput() BucketEncryptionOutput {
	return o
}

func (o BucketEncryptionOutput) ToBucketEncryptionOutputWithContext(ctx context.Context) BucketEncryptionOutput {
	return o
}

func (o BucketEncryptionOutput) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return o.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (o BucketEncryptionOutput) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return o.ApplyT(func(v BucketEncryption) *BucketEncryption {
		return &v
	}).(BucketEncryptionPtrOutput)
}
func (o BucketEncryptionOutput) DefaultKmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v BucketEncryption) string { return v.DefaultKmsKeyName }).(pulumi.StringOutput)
}

type BucketEncryptionPtrOutput struct{ *pulumi.OutputState }

func (BucketEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryption)(nil)).Elem()
}

func (o BucketEncryptionPtrOutput) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return o
}

func (o BucketEncryptionPtrOutput) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return o
}

func (o BucketEncryptionPtrOutput) Elem() BucketEncryptionOutput {
	return o.ApplyT(func(v *BucketEncryption) BucketEncryption { return *v }).(BucketEncryptionOutput)
}

func (o BucketEncryptionPtrOutput) DefaultKmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v BucketEncryption) string { return v.DefaultKmsKeyName }).(pulumi.StringOutput)
}

type BucketEncryptionArgs struct {
	DefaultKmsKeyName string `pulumi:"defaultKmsKeyName"`
}

type BucketEncryptionArgsInput interface {
	pulumi.Input

	ToBucketEncryptionArgsOutput() BucketEncryptionArgsOutput
	ToBucketEncryptionArgsOutputWithContext(context.Context) BucketEncryptionArgsOutput
}

type BucketEncryptionArgsArgs struct {
	DefaultKmsKeyName pulumi.StringInput `pulumi:"defaultKmsKeyName"`
}

func (BucketEncryptionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryptionArgs)(nil)).Elem()
}

func (i BucketEncryptionArgsArgs) ToBucketEncryptionArgsOutput() BucketEncryptionArgsOutput {
	return i.ToBucketEncryptionArgsOutputWithContext(context.Background())
}

func (i BucketEncryptionArgsArgs) ToBucketEncryptionArgsOutputWithContext(ctx context.Context) BucketEncryptionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionArgsOutput)
}

func (i BucketEncryptionArgsArgs) ToBucketEncryptionArgsPtrOutput() BucketEncryptionArgsPtrOutput {
	return i.ToBucketEncryptionArgsPtrOutputWithContext(context.Background())
}

func (i BucketEncryptionArgsArgs) ToBucketEncryptionArgsPtrOutputWithContext(ctx context.Context) BucketEncryptionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionArgsOutput).ToBucketEncryptionArgsPtrOutputWithContext(ctx)
}

type BucketEncryptionArgsPtrInput interface {
	pulumi.Input

	ToBucketEncryptionArgsPtrOutput() BucketEncryptionArgsPtrOutput
	ToBucketEncryptionArgsPtrOutputWithContext(context.Context) BucketEncryptionArgsPtrOutput
}

type bucketEncryptionArgsPtrType BucketEncryptionArgsArgs

func BucketEncryptionArgsPtr(v *BucketEncryptionArgsArgs) BucketEncryptionArgsPtrInput {
	return (*bucketEncryptionArgsPtrType)(v)
}

func (*bucketEncryptionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryptionArgs)(nil)).Elem()
}

func (i *bucketEncryptionArgsPtrType) ToBucketEncryptionArgsPtrOutput() BucketEncryptionArgsPtrOutput {
	return i.ToBucketEncryptionArgsPtrOutputWithContext(context.Background())
}

func (i *bucketEncryptionArgsPtrType) ToBucketEncryptionArgsPtrOutputWithContext(ctx context.Context) BucketEncryptionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionArgsPtrOutput)
}

type BucketEncryptionArgsOutput struct{ *pulumi.OutputState }

func (BucketEncryptionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryptionArgs)(nil)).Elem()
}

func (o BucketEncryptionArgsOutput) ToBucketEncryptionArgsOutput() BucketEncryptionArgsOutput {
	return o
}

func (o BucketEncryptionArgsOutput) ToBucketEncryptionArgsOutputWithContext(ctx context.Context) BucketEncryptionArgsOutput {
	return o
}

func (o BucketEncryptionArgsOutput) ToBucketEncryptionArgsPtrOutput() BucketEncryptionArgsPtrOutput {
	return o.ToBucketEncryptionArgsPtrOutputWithContext(context.Background())
}

func (o BucketEncryptionArgsOutput) ToBucketEncryptionArgsPtrOutputWithContext(ctx context.Context) BucketEncryptionArgsPtrOutput {
	return o.ApplyT(func(v BucketEncryptionArgs) *BucketEncryptionArgs {
		return &v
	}).(BucketEncryptionArgsPtrOutput)
}
func (o BucketEncryptionArgsOutput) DefaultKmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v BucketEncryptionArgs) string { return v.DefaultKmsKeyName }).(pulumi.StringOutput)
}

type BucketEncryptionArgsPtrOutput struct{ *pulumi.OutputState }

func (BucketEncryptionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryptionArgs)(nil)).Elem()
}

func (o BucketEncryptionArgsPtrOutput) ToBucketEncryptionArgsPtrOutput() BucketEncryptionArgsPtrOutput {
	return o
}

func (o BucketEncryptionArgsPtrOutput) ToBucketEncryptionArgsPtrOutputWithContext(ctx context.Context) BucketEncryptionArgsPtrOutput {
	return o
}

func (o BucketEncryptionArgsPtrOutput) Elem() BucketEncryptionArgsOutput {
	return o.ApplyT(func(v *BucketEncryptionArgs) BucketEncryptionArgs { return *v }).(BucketEncryptionArgsOutput)
}

func (o BucketEncryptionArgsPtrOutput) DefaultKmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v BucketEncryptionArgs) string { return v.DefaultKmsKeyName }).(pulumi.StringOutput)
}

type BucketEncryptionState struct {
	DefaultKmsKeyName string `pulumi:"defaultKmsKeyName"`
}

type BucketEncryptionStateInput interface {
	pulumi.Input

	ToBucketEncryptionStateOutput() BucketEncryptionStateOutput
	ToBucketEncryptionStateOutputWithContext(context.Context) BucketEncryptionStateOutput
}

type BucketEncryptionStateArgs struct {
	DefaultKmsKeyName pulumi.StringInput `pulumi:"defaultKmsKeyName"`
}

func (BucketEncryptionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryptionState)(nil)).Elem()
}

func (i BucketEncryptionStateArgs) ToBucketEncryptionStateOutput() BucketEncryptionStateOutput {
	return i.ToBucketEncryptionStateOutputWithContext(context.Background())
}

func (i BucketEncryptionStateArgs) ToBucketEncryptionStateOutputWithContext(ctx context.Context) BucketEncryptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionStateOutput)
}

type BucketEncryptionStateOutput struct{ *pulumi.OutputState }

func (BucketEncryptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryptionState)(nil)).Elem()
}

func (o BucketEncryptionStateOutput) ToBucketEncryptionStateOutput() BucketEncryptionStateOutput {
	return o
}

func (o BucketEncryptionStateOutput) ToBucketEncryptionStateOutputWithContext(ctx context.Context) BucketEncryptionStateOutput {
	return o
}

func (o BucketEncryptionStateOutput) DefaultKmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v BucketEncryptionState) string { return v.DefaultKmsKeyName }).(pulumi.StringOutput)
}

type BucketIAMBindingCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type BucketIAMBindingConditionInput interface {
	pulumi.Input

	ToBucketIAMBindingConditionOutput() BucketIAMBindingConditionOutput
	ToBucketIAMBindingConditionOutputWithContext(context.Context) BucketIAMBindingConditionOutput
}

type BucketIAMBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (BucketIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMBindingCondition)(nil)).Elem()
}

func (i BucketIAMBindingConditionArgs) ToBucketIAMBindingConditionOutput() BucketIAMBindingConditionOutput {
	return i.ToBucketIAMBindingConditionOutputWithContext(context.Background())
}

func (i BucketIAMBindingConditionArgs) ToBucketIAMBindingConditionOutputWithContext(ctx context.Context) BucketIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionOutput)
}

func (i BucketIAMBindingConditionArgs) ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput {
	return i.ToBucketIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i BucketIAMBindingConditionArgs) ToBucketIAMBindingConditionPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionOutput).ToBucketIAMBindingConditionPtrOutputWithContext(ctx)
}

type BucketIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput
	ToBucketIAMBindingConditionPtrOutputWithContext(context.Context) BucketIAMBindingConditionPtrOutput
}

type bucketIAMBindingConditionPtrType BucketIAMBindingConditionArgs

func BucketIAMBindingConditionPtr(v *BucketIAMBindingConditionArgs) BucketIAMBindingConditionPtrInput {
	return (*bucketIAMBindingConditionPtrType)(v)
}

func (*bucketIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMBindingCondition)(nil)).Elem()
}

func (i *bucketIAMBindingConditionPtrType) ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput {
	return i.ToBucketIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *bucketIAMBindingConditionPtrType) ToBucketIAMBindingConditionPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionPtrOutput)
}

type BucketIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (BucketIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMBindingCondition)(nil)).Elem()
}

func (o BucketIAMBindingConditionOutput) ToBucketIAMBindingConditionOutput() BucketIAMBindingConditionOutput {
	return o
}

func (o BucketIAMBindingConditionOutput) ToBucketIAMBindingConditionOutputWithContext(ctx context.Context) BucketIAMBindingConditionOutput {
	return o
}

func (o BucketIAMBindingConditionOutput) ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput {
	return o.ToBucketIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o BucketIAMBindingConditionOutput) ToBucketIAMBindingConditionPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) *BucketIAMBindingCondition {
		return &v
	}).(BucketIAMBindingConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (BucketIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMBindingCondition)(nil)).Elem()
}

func (o BucketIAMBindingConditionPtrOutput) ToBucketIAMBindingConditionPtrOutput() BucketIAMBindingConditionPtrOutput {
	return o
}

func (o BucketIAMBindingConditionPtrOutput) ToBucketIAMBindingConditionPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionPtrOutput {
	return o
}

func (o BucketIAMBindingConditionPtrOutput) Elem() BucketIAMBindingConditionOutput {
	return o.ApplyT(func(v *BucketIAMBindingCondition) BucketIAMBindingCondition { return *v }).(BucketIAMBindingConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMBindingConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type BucketIAMBindingConditionArgsInput interface {
	pulumi.Input

	ToBucketIAMBindingConditionArgsOutput() BucketIAMBindingConditionArgsOutput
	ToBucketIAMBindingConditionArgsOutputWithContext(context.Context) BucketIAMBindingConditionArgsOutput
}

type BucketIAMBindingConditionArgsArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (BucketIAMBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMBindingConditionArgs)(nil)).Elem()
}

func (i BucketIAMBindingConditionArgsArgs) ToBucketIAMBindingConditionArgsOutput() BucketIAMBindingConditionArgsOutput {
	return i.ToBucketIAMBindingConditionArgsOutputWithContext(context.Background())
}

func (i BucketIAMBindingConditionArgsArgs) ToBucketIAMBindingConditionArgsOutputWithContext(ctx context.Context) BucketIAMBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionArgsOutput)
}

func (i BucketIAMBindingConditionArgsArgs) ToBucketIAMBindingConditionArgsPtrOutput() BucketIAMBindingConditionArgsPtrOutput {
	return i.ToBucketIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i BucketIAMBindingConditionArgsArgs) ToBucketIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionArgsOutput).ToBucketIAMBindingConditionArgsPtrOutputWithContext(ctx)
}

type BucketIAMBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToBucketIAMBindingConditionArgsPtrOutput() BucketIAMBindingConditionArgsPtrOutput
	ToBucketIAMBindingConditionArgsPtrOutputWithContext(context.Context) BucketIAMBindingConditionArgsPtrOutput
}

type bucketIAMBindingConditionArgsPtrType BucketIAMBindingConditionArgsArgs

func BucketIAMBindingConditionArgsPtr(v *BucketIAMBindingConditionArgsArgs) BucketIAMBindingConditionArgsPtrInput {
	return (*bucketIAMBindingConditionArgsPtrType)(v)
}

func (*bucketIAMBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMBindingConditionArgs)(nil)).Elem()
}

func (i *bucketIAMBindingConditionArgsPtrType) ToBucketIAMBindingConditionArgsPtrOutput() BucketIAMBindingConditionArgsPtrOutput {
	return i.ToBucketIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *bucketIAMBindingConditionArgsPtrType) ToBucketIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionArgsPtrOutput)
}

type BucketIAMBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (BucketIAMBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMBindingConditionArgs)(nil)).Elem()
}

func (o BucketIAMBindingConditionArgsOutput) ToBucketIAMBindingConditionArgsOutput() BucketIAMBindingConditionArgsOutput {
	return o
}

func (o BucketIAMBindingConditionArgsOutput) ToBucketIAMBindingConditionArgsOutputWithContext(ctx context.Context) BucketIAMBindingConditionArgsOutput {
	return o
}

func (o BucketIAMBindingConditionArgsOutput) ToBucketIAMBindingConditionArgsPtrOutput() BucketIAMBindingConditionArgsPtrOutput {
	return o.ToBucketIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o BucketIAMBindingConditionArgsOutput) ToBucketIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionArgs) *BucketIAMBindingConditionArgs {
		return &v
	}).(BucketIAMBindingConditionArgsPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (BucketIAMBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMBindingConditionArgs)(nil)).Elem()
}

func (o BucketIAMBindingConditionArgsPtrOutput) ToBucketIAMBindingConditionArgsPtrOutput() BucketIAMBindingConditionArgsPtrOutput {
	return o
}

func (o BucketIAMBindingConditionArgsPtrOutput) ToBucketIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) BucketIAMBindingConditionArgsPtrOutput {
	return o
}

func (o BucketIAMBindingConditionArgsPtrOutput) Elem() BucketIAMBindingConditionArgsOutput {
	return o.ApplyT(func(v *BucketIAMBindingConditionArgs) BucketIAMBindingConditionArgs { return *v }).(BucketIAMBindingConditionArgsOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMBindingConditionState struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type BucketIAMBindingConditionStateInput interface {
	pulumi.Input

	ToBucketIAMBindingConditionStateOutput() BucketIAMBindingConditionStateOutput
	ToBucketIAMBindingConditionStateOutputWithContext(context.Context) BucketIAMBindingConditionStateOutput
}

type BucketIAMBindingConditionStateArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (BucketIAMBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMBindingConditionState)(nil)).Elem()
}

func (i BucketIAMBindingConditionStateArgs) ToBucketIAMBindingConditionStateOutput() BucketIAMBindingConditionStateOutput {
	return i.ToBucketIAMBindingConditionStateOutputWithContext(context.Background())
}

func (i BucketIAMBindingConditionStateArgs) ToBucketIAMBindingConditionStateOutputWithContext(ctx context.Context) BucketIAMBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMBindingConditionStateOutput)
}

type BucketIAMBindingConditionStateOutput struct{ *pulumi.OutputState }

func (BucketIAMBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMBindingConditionState)(nil)).Elem()
}

func (o BucketIAMBindingConditionStateOutput) ToBucketIAMBindingConditionStateOutput() BucketIAMBindingConditionStateOutput {
	return o
}

func (o BucketIAMBindingConditionStateOutput) ToBucketIAMBindingConditionStateOutputWithContext(ctx context.Context) BucketIAMBindingConditionStateOutput {
	return o
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMMemberCondition struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type BucketIAMMemberConditionInput interface {
	pulumi.Input

	ToBucketIAMMemberConditionOutput() BucketIAMMemberConditionOutput
	ToBucketIAMMemberConditionOutputWithContext(context.Context) BucketIAMMemberConditionOutput
}

type BucketIAMMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (BucketIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMemberCondition)(nil)).Elem()
}

func (i BucketIAMMemberConditionArgs) ToBucketIAMMemberConditionOutput() BucketIAMMemberConditionOutput {
	return i.ToBucketIAMMemberConditionOutputWithContext(context.Background())
}

func (i BucketIAMMemberConditionArgs) ToBucketIAMMemberConditionOutputWithContext(ctx context.Context) BucketIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionOutput)
}

func (i BucketIAMMemberConditionArgs) ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput {
	return i.ToBucketIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i BucketIAMMemberConditionArgs) ToBucketIAMMemberConditionPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionOutput).ToBucketIAMMemberConditionPtrOutputWithContext(ctx)
}

type BucketIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput
	ToBucketIAMMemberConditionPtrOutputWithContext(context.Context) BucketIAMMemberConditionPtrOutput
}

type bucketIAMMemberConditionPtrType BucketIAMMemberConditionArgs

func BucketIAMMemberConditionPtr(v *BucketIAMMemberConditionArgs) BucketIAMMemberConditionPtrInput {
	return (*bucketIAMMemberConditionPtrType)(v)
}

func (*bucketIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMMemberCondition)(nil)).Elem()
}

func (i *bucketIAMMemberConditionPtrType) ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput {
	return i.ToBucketIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *bucketIAMMemberConditionPtrType) ToBucketIAMMemberConditionPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionPtrOutput)
}

type BucketIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (BucketIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMemberCondition)(nil)).Elem()
}

func (o BucketIAMMemberConditionOutput) ToBucketIAMMemberConditionOutput() BucketIAMMemberConditionOutput {
	return o
}

func (o BucketIAMMemberConditionOutput) ToBucketIAMMemberConditionOutputWithContext(ctx context.Context) BucketIAMMemberConditionOutput {
	return o
}

func (o BucketIAMMemberConditionOutput) ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput {
	return o.ToBucketIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o BucketIAMMemberConditionOutput) ToBucketIAMMemberConditionPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) *BucketIAMMemberCondition {
		return &v
	}).(BucketIAMMemberConditionPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (BucketIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMMemberCondition)(nil)).Elem()
}

func (o BucketIAMMemberConditionPtrOutput) ToBucketIAMMemberConditionPtrOutput() BucketIAMMemberConditionPtrOutput {
	return o
}

func (o BucketIAMMemberConditionPtrOutput) ToBucketIAMMemberConditionPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionPtrOutput {
	return o
}

func (o BucketIAMMemberConditionPtrOutput) Elem() BucketIAMMemberConditionOutput {
	return o.ApplyT(func(v *BucketIAMMemberCondition) BucketIAMMemberCondition { return *v }).(BucketIAMMemberConditionOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMMemberConditionArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type BucketIAMMemberConditionArgsInput interface {
	pulumi.Input

	ToBucketIAMMemberConditionArgsOutput() BucketIAMMemberConditionArgsOutput
	ToBucketIAMMemberConditionArgsOutputWithContext(context.Context) BucketIAMMemberConditionArgsOutput
}

type BucketIAMMemberConditionArgsArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (BucketIAMMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMemberConditionArgs)(nil)).Elem()
}

func (i BucketIAMMemberConditionArgsArgs) ToBucketIAMMemberConditionArgsOutput() BucketIAMMemberConditionArgsOutput {
	return i.ToBucketIAMMemberConditionArgsOutputWithContext(context.Background())
}

func (i BucketIAMMemberConditionArgsArgs) ToBucketIAMMemberConditionArgsOutputWithContext(ctx context.Context) BucketIAMMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionArgsOutput)
}

func (i BucketIAMMemberConditionArgsArgs) ToBucketIAMMemberConditionArgsPtrOutput() BucketIAMMemberConditionArgsPtrOutput {
	return i.ToBucketIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i BucketIAMMemberConditionArgsArgs) ToBucketIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionArgsOutput).ToBucketIAMMemberConditionArgsPtrOutputWithContext(ctx)
}

type BucketIAMMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToBucketIAMMemberConditionArgsPtrOutput() BucketIAMMemberConditionArgsPtrOutput
	ToBucketIAMMemberConditionArgsPtrOutputWithContext(context.Context) BucketIAMMemberConditionArgsPtrOutput
}

type bucketIAMMemberConditionArgsPtrType BucketIAMMemberConditionArgsArgs

func BucketIAMMemberConditionArgsPtr(v *BucketIAMMemberConditionArgsArgs) BucketIAMMemberConditionArgsPtrInput {
	return (*bucketIAMMemberConditionArgsPtrType)(v)
}

func (*bucketIAMMemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMMemberConditionArgs)(nil)).Elem()
}

func (i *bucketIAMMemberConditionArgsPtrType) ToBucketIAMMemberConditionArgsPtrOutput() BucketIAMMemberConditionArgsPtrOutput {
	return i.ToBucketIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *bucketIAMMemberConditionArgsPtrType) ToBucketIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionArgsPtrOutput)
}

type BucketIAMMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (BucketIAMMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMemberConditionArgs)(nil)).Elem()
}

func (o BucketIAMMemberConditionArgsOutput) ToBucketIAMMemberConditionArgsOutput() BucketIAMMemberConditionArgsOutput {
	return o
}

func (o BucketIAMMemberConditionArgsOutput) ToBucketIAMMemberConditionArgsOutputWithContext(ctx context.Context) BucketIAMMemberConditionArgsOutput {
	return o
}

func (o BucketIAMMemberConditionArgsOutput) ToBucketIAMMemberConditionArgsPtrOutput() BucketIAMMemberConditionArgsPtrOutput {
	return o.ToBucketIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o BucketIAMMemberConditionArgsOutput) ToBucketIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionArgs) *BucketIAMMemberConditionArgs {
		return &v
	}).(BucketIAMMemberConditionArgsPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (BucketIAMMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIAMMemberConditionArgs)(nil)).Elem()
}

func (o BucketIAMMemberConditionArgsPtrOutput) ToBucketIAMMemberConditionArgsPtrOutput() BucketIAMMemberConditionArgsPtrOutput {
	return o
}

func (o BucketIAMMemberConditionArgsPtrOutput) ToBucketIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) BucketIAMMemberConditionArgsPtrOutput {
	return o
}

func (o BucketIAMMemberConditionArgsPtrOutput) Elem() BucketIAMMemberConditionArgsOutput {
	return o.ApplyT(func(v *BucketIAMMemberConditionArgs) BucketIAMMemberConditionArgs { return *v }).(BucketIAMMemberConditionArgsOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type BucketIAMMemberConditionState struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title string `pulumi:"title"`
}

type BucketIAMMemberConditionStateInput interface {
	pulumi.Input

	ToBucketIAMMemberConditionStateOutput() BucketIAMMemberConditionStateOutput
	ToBucketIAMMemberConditionStateOutputWithContext(context.Context) BucketIAMMemberConditionStateOutput
}

type BucketIAMMemberConditionStateArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// A title for the expression, i.e. a short string describing its purpose.
	Title pulumi.StringInput `pulumi:"title"`
}

func (BucketIAMMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMemberConditionState)(nil)).Elem()
}

func (i BucketIAMMemberConditionStateArgs) ToBucketIAMMemberConditionStateOutput() BucketIAMMemberConditionStateOutput {
	return i.ToBucketIAMMemberConditionStateOutputWithContext(context.Background())
}

func (i BucketIAMMemberConditionStateArgs) ToBucketIAMMemberConditionStateOutputWithContext(ctx context.Context) BucketIAMMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIAMMemberConditionStateOutput)
}

type BucketIAMMemberConditionStateOutput struct{ *pulumi.OutputState }

func (BucketIAMMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIAMMemberConditionState)(nil)).Elem()
}

func (o BucketIAMMemberConditionStateOutput) ToBucketIAMMemberConditionStateOutput() BucketIAMMemberConditionStateOutput {
	return o
}

func (o BucketIAMMemberConditionStateOutput) ToBucketIAMMemberConditionStateOutputWithContext(ctx context.Context) BucketIAMMemberConditionStateOutput {
	return o
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o BucketIAMMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o BucketIAMMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

// A title for the expression, i.e. a short string describing its purpose.
func (o BucketIAMMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIAMMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type BucketLifecycleRule struct {
	// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
	Action BucketLifecycleRuleAction `pulumi:"action"`
	// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
	Condition BucketLifecycleRuleCondition `pulumi:"condition"`
}

type BucketLifecycleRuleInput interface {
	pulumi.Input

	ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput
	ToBucketLifecycleRuleOutputWithContext(context.Context) BucketLifecycleRuleOutput
}

type BucketLifecycleRuleArgs struct {
	// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
	Action BucketLifecycleRuleActionInput `pulumi:"action"`
	// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
	Condition BucketLifecycleRuleConditionInput `pulumi:"condition"`
}

func (BucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRule)(nil)).Elem()
}

func (i BucketLifecycleRuleArgs) ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput {
	return i.ToBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArgs) ToBucketLifecycleRuleOutputWithContext(ctx context.Context) BucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleOutput)
}

type BucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput
	ToBucketLifecycleRuleArrayOutputWithContext(context.Context) BucketLifecycleRuleArrayOutput
}

type BucketLifecycleRuleArray []BucketLifecycleRuleInput

func (BucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRule)(nil)).Elem()
}

func (i BucketLifecycleRuleArray) ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput {
	return i.ToBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArray) ToBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleArrayOutput)
}

type BucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRule)(nil)).Elem()
}

func (o BucketLifecycleRuleOutput) ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput {
	return o
}

func (o BucketLifecycleRuleOutput) ToBucketLifecycleRuleOutputWithContext(ctx context.Context) BucketLifecycleRuleOutput {
	return o
}

// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
func (o BucketLifecycleRuleOutput) Action() BucketLifecycleRuleActionOutput {
	return o.ApplyT(func(v BucketLifecycleRule) BucketLifecycleRuleAction { return v.Action }).(BucketLifecycleRuleActionOutput)
}

// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
func (o BucketLifecycleRuleOutput) Condition() BucketLifecycleRuleConditionOutput {
	return o.ApplyT(func(v BucketLifecycleRule) BucketLifecycleRuleCondition { return v.Condition }).(BucketLifecycleRuleConditionOutput)
}

type BucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRule)(nil)).Elem()
}

func (o BucketLifecycleRuleArrayOutput) ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput {
	return o
}

func (o BucketLifecycleRuleArrayOutput) ToBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArrayOutput {
	return o
}

func (o BucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRule {
		return vs[0].([]BucketLifecycleRule)[vs[1].(int)]
	}).(BucketLifecycleRuleOutput)
}

type BucketLifecycleRuleAction struct {
	// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
	StorageClass *string `pulumi:"storageClass"`
	// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
	Type string `pulumi:"type"`
}

type BucketLifecycleRuleActionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleActionOutput() BucketLifecycleRuleActionOutput
	ToBucketLifecycleRuleActionOutputWithContext(context.Context) BucketLifecycleRuleActionOutput
}

type BucketLifecycleRuleActionArgs struct {
	// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
	// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BucketLifecycleRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleAction)(nil)).Elem()
}

func (i BucketLifecycleRuleActionArgs) ToBucketLifecycleRuleActionOutput() BucketLifecycleRuleActionOutput {
	return i.ToBucketLifecycleRuleActionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleActionArgs) ToBucketLifecycleRuleActionOutputWithContext(ctx context.Context) BucketLifecycleRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleActionOutput)
}

type BucketLifecycleRuleActionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleAction)(nil)).Elem()
}

func (o BucketLifecycleRuleActionOutput) ToBucketLifecycleRuleActionOutput() BucketLifecycleRuleActionOutput {
	return o
}

func (o BucketLifecycleRuleActionOutput) ToBucketLifecycleRuleActionOutputWithContext(ctx context.Context) BucketLifecycleRuleActionOutput {
	return o
}

// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
func (o BucketLifecycleRuleActionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleAction) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
func (o BucketLifecycleRuleActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleAction) string { return v.Type }).(pulumi.StringOutput)
}

type BucketLifecycleRuleActionArgs struct {
	// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
	StorageClass *string `pulumi:"storageClass"`
	// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
	Type string `pulumi:"type"`
}

type BucketLifecycleRuleActionArgsInput interface {
	pulumi.Input

	ToBucketLifecycleRuleActionArgsOutput() BucketLifecycleRuleActionArgsOutput
	ToBucketLifecycleRuleActionArgsOutputWithContext(context.Context) BucketLifecycleRuleActionArgsOutput
}

type BucketLifecycleRuleActionArgsArgs struct {
	// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
	// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BucketLifecycleRuleActionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleActionArgs)(nil)).Elem()
}

func (i BucketLifecycleRuleActionArgsArgs) ToBucketLifecycleRuleActionArgsOutput() BucketLifecycleRuleActionArgsOutput {
	return i.ToBucketLifecycleRuleActionArgsOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleActionArgsArgs) ToBucketLifecycleRuleActionArgsOutputWithContext(ctx context.Context) BucketLifecycleRuleActionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleActionArgsOutput)
}

type BucketLifecycleRuleActionArgsOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleActionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleActionArgs)(nil)).Elem()
}

func (o BucketLifecycleRuleActionArgsOutput) ToBucketLifecycleRuleActionArgsOutput() BucketLifecycleRuleActionArgsOutput {
	return o
}

func (o BucketLifecycleRuleActionArgsOutput) ToBucketLifecycleRuleActionArgsOutputWithContext(ctx context.Context) BucketLifecycleRuleActionArgsOutput {
	return o
}

// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
func (o BucketLifecycleRuleActionArgsOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleActionArgs) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
func (o BucketLifecycleRuleActionArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleActionArgs) string { return v.Type }).(pulumi.StringOutput)
}

type BucketLifecycleRuleArgs struct {
	// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
	Action BucketLifecycleRuleActionArgs `pulumi:"action"`
	// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
	Condition BucketLifecycleRuleConditionArgs `pulumi:"condition"`
}

type BucketLifecycleRuleArgsInput interface {
	pulumi.Input

	ToBucketLifecycleRuleArgsOutput() BucketLifecycleRuleArgsOutput
	ToBucketLifecycleRuleArgsOutputWithContext(context.Context) BucketLifecycleRuleArgsOutput
}

type BucketLifecycleRuleArgsArgs struct {
	// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
	Action BucketLifecycleRuleActionArgsInput `pulumi:"action"`
	// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
	Condition BucketLifecycleRuleConditionArgsInput `pulumi:"condition"`
}

func (BucketLifecycleRuleArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleArgs)(nil)).Elem()
}

func (i BucketLifecycleRuleArgsArgs) ToBucketLifecycleRuleArgsOutput() BucketLifecycleRuleArgsOutput {
	return i.ToBucketLifecycleRuleArgsOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArgsArgs) ToBucketLifecycleRuleArgsOutputWithContext(ctx context.Context) BucketLifecycleRuleArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleArgsOutput)
}

type BucketLifecycleRuleArgsArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleArgsArrayOutput() BucketLifecycleRuleArgsArrayOutput
	ToBucketLifecycleRuleArgsArrayOutputWithContext(context.Context) BucketLifecycleRuleArgsArrayOutput
}

type BucketLifecycleRuleArgsArray []BucketLifecycleRuleArgsInput

func (BucketLifecycleRuleArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleArgs)(nil)).Elem()
}

func (i BucketLifecycleRuleArgsArray) ToBucketLifecycleRuleArgsArrayOutput() BucketLifecycleRuleArgsArrayOutput {
	return i.ToBucketLifecycleRuleArgsArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArgsArray) ToBucketLifecycleRuleArgsArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleArgsArrayOutput)
}

type BucketLifecycleRuleArgsOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleArgs)(nil)).Elem()
}

func (o BucketLifecycleRuleArgsOutput) ToBucketLifecycleRuleArgsOutput() BucketLifecycleRuleArgsOutput {
	return o
}

func (o BucketLifecycleRuleArgsOutput) ToBucketLifecycleRuleArgsOutputWithContext(ctx context.Context) BucketLifecycleRuleArgsOutput {
	return o
}

// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
func (o BucketLifecycleRuleArgsOutput) Action() BucketLifecycleRuleActionArgsOutput {
	return o.ApplyT(func(v BucketLifecycleRuleArgs) BucketLifecycleRuleActionArgs { return v.Action }).(BucketLifecycleRuleActionArgsOutput)
}

// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
func (o BucketLifecycleRuleArgsOutput) Condition() BucketLifecycleRuleConditionArgsOutput {
	return o.ApplyT(func(v BucketLifecycleRuleArgs) BucketLifecycleRuleConditionArgs { return v.Condition }).(BucketLifecycleRuleConditionArgsOutput)
}

type BucketLifecycleRuleArgsArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleArgs)(nil)).Elem()
}

func (o BucketLifecycleRuleArgsArrayOutput) ToBucketLifecycleRuleArgsArrayOutput() BucketLifecycleRuleArgsArrayOutput {
	return o
}

func (o BucketLifecycleRuleArgsArrayOutput) ToBucketLifecycleRuleArgsArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArgsArrayOutput {
	return o
}

func (o BucketLifecycleRuleArgsArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRuleArgs {
		return vs[0].([]BucketLifecycleRuleArgs)[vs[1].(int)]
	}).(BucketLifecycleRuleArgsOutput)
}

type BucketLifecycleRuleCondition struct {
	// Minimum age of an object in days to satisfy this condition.
	Age *int `pulumi:"age"`
	// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
	CreatedBefore *string `pulumi:"createdBefore"`
	// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
	MatchesStorageClasses []string `pulumi:"matchesStorageClasses"`
	// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
	NumNewerVersions *int `pulumi:"numNewerVersions"`
	// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
	WithState string `pulumi:"withState"`
}

type BucketLifecycleRuleConditionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleConditionOutput() BucketLifecycleRuleConditionOutput
	ToBucketLifecycleRuleConditionOutputWithContext(context.Context) BucketLifecycleRuleConditionOutput
}

type BucketLifecycleRuleConditionArgs struct {
	// Minimum age of an object in days to satisfy this condition.
	Age pulumi.IntPtrInput `pulumi:"age"`
	// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
	CreatedBefore pulumi.StringPtrInput `pulumi:"createdBefore"`
	// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
	MatchesStorageClasses pulumi.StringArrayInput `pulumi:"matchesStorageClasses"`
	// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
	NumNewerVersions pulumi.IntPtrInput `pulumi:"numNewerVersions"`
	// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
	WithState pulumi.StringInput `pulumi:"withState"`
}

func (BucketLifecycleRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleCondition)(nil)).Elem()
}

func (i BucketLifecycleRuleConditionArgs) ToBucketLifecycleRuleConditionOutput() BucketLifecycleRuleConditionOutput {
	return i.ToBucketLifecycleRuleConditionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleConditionArgs) ToBucketLifecycleRuleConditionOutputWithContext(ctx context.Context) BucketLifecycleRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleConditionOutput)
}

type BucketLifecycleRuleConditionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleCondition)(nil)).Elem()
}

func (o BucketLifecycleRuleConditionOutput) ToBucketLifecycleRuleConditionOutput() BucketLifecycleRuleConditionOutput {
	return o
}

func (o BucketLifecycleRuleConditionOutput) ToBucketLifecycleRuleConditionOutputWithContext(ctx context.Context) BucketLifecycleRuleConditionOutput {
	return o
}

// Minimum age of an object in days to satisfy this condition.
func (o BucketLifecycleRuleConditionOutput) Age() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) *int { return v.Age }).(pulumi.IntPtrOutput)
}

// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
func (o BucketLifecycleRuleConditionOutput) CreatedBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) *string { return v.CreatedBefore }).(pulumi.StringPtrOutput)
}

// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
func (o BucketLifecycleRuleConditionOutput) MatchesStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) []string { return v.MatchesStorageClasses }).(pulumi.StringArrayOutput)
}

// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
func (o BucketLifecycleRuleConditionOutput) NumNewerVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) *int { return v.NumNewerVersions }).(pulumi.IntPtrOutput)
}

// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
func (o BucketLifecycleRuleConditionOutput) WithState() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleCondition) string { return v.WithState }).(pulumi.StringOutput)
}

type BucketLifecycleRuleConditionArgs struct {
	// Minimum age of an object in days to satisfy this condition.
	Age *int `pulumi:"age"`
	// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
	CreatedBefore *string `pulumi:"createdBefore"`
	// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
	MatchesStorageClasses []string `pulumi:"matchesStorageClasses"`
	// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
	NumNewerVersions *int `pulumi:"numNewerVersions"`
	// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
	WithState *string `pulumi:"withState"`
}

type BucketLifecycleRuleConditionArgsInput interface {
	pulumi.Input

	ToBucketLifecycleRuleConditionArgsOutput() BucketLifecycleRuleConditionArgsOutput
	ToBucketLifecycleRuleConditionArgsOutputWithContext(context.Context) BucketLifecycleRuleConditionArgsOutput
}

type BucketLifecycleRuleConditionArgsArgs struct {
	// Minimum age of an object in days to satisfy this condition.
	Age pulumi.IntPtrInput `pulumi:"age"`
	// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
	CreatedBefore pulumi.StringPtrInput `pulumi:"createdBefore"`
	// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
	MatchesStorageClasses pulumi.StringArrayInput `pulumi:"matchesStorageClasses"`
	// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
	NumNewerVersions pulumi.IntPtrInput `pulumi:"numNewerVersions"`
	// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
	WithState pulumi.StringPtrInput `pulumi:"withState"`
}

func (BucketLifecycleRuleConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleConditionArgs)(nil)).Elem()
}

func (i BucketLifecycleRuleConditionArgsArgs) ToBucketLifecycleRuleConditionArgsOutput() BucketLifecycleRuleConditionArgsOutput {
	return i.ToBucketLifecycleRuleConditionArgsOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleConditionArgsArgs) ToBucketLifecycleRuleConditionArgsOutputWithContext(ctx context.Context) BucketLifecycleRuleConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleConditionArgsOutput)
}

type BucketLifecycleRuleConditionArgsOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleConditionArgs)(nil)).Elem()
}

func (o BucketLifecycleRuleConditionArgsOutput) ToBucketLifecycleRuleConditionArgsOutput() BucketLifecycleRuleConditionArgsOutput {
	return o
}

func (o BucketLifecycleRuleConditionArgsOutput) ToBucketLifecycleRuleConditionArgsOutputWithContext(ctx context.Context) BucketLifecycleRuleConditionArgsOutput {
	return o
}

// Minimum age of an object in days to satisfy this condition.
func (o BucketLifecycleRuleConditionArgsOutput) Age() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleConditionArgs) *int { return v.Age }).(pulumi.IntPtrOutput)
}

// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
func (o BucketLifecycleRuleConditionArgsOutput) CreatedBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleConditionArgs) *string { return v.CreatedBefore }).(pulumi.StringPtrOutput)
}

// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
func (o BucketLifecycleRuleConditionArgsOutput) MatchesStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRuleConditionArgs) []string { return v.MatchesStorageClasses }).(pulumi.StringArrayOutput)
}

// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
func (o BucketLifecycleRuleConditionArgsOutput) NumNewerVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleConditionArgs) *int { return v.NumNewerVersions }).(pulumi.IntPtrOutput)
}

// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
func (o BucketLifecycleRuleConditionArgsOutput) WithState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleConditionArgs) *string { return v.WithState }).(pulumi.StringPtrOutput)
}

type BucketLifecycleRuleState struct {
	// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
	Action BucketLifecycleRuleStateAction `pulumi:"action"`
	// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
	Condition BucketLifecycleRuleStateCondition `pulumi:"condition"`
}

type BucketLifecycleRuleStateInput interface {
	pulumi.Input

	ToBucketLifecycleRuleStateOutput() BucketLifecycleRuleStateOutput
	ToBucketLifecycleRuleStateOutputWithContext(context.Context) BucketLifecycleRuleStateOutput
}

type BucketLifecycleRuleStateArgs struct {
	// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
	Action BucketLifecycleRuleStateActionInput `pulumi:"action"`
	// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
	Condition BucketLifecycleRuleStateConditionInput `pulumi:"condition"`
}

func (BucketLifecycleRuleStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleState)(nil)).Elem()
}

func (i BucketLifecycleRuleStateArgs) ToBucketLifecycleRuleStateOutput() BucketLifecycleRuleStateOutput {
	return i.ToBucketLifecycleRuleStateOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleStateArgs) ToBucketLifecycleRuleStateOutputWithContext(ctx context.Context) BucketLifecycleRuleStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleStateOutput)
}

type BucketLifecycleRuleStateArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleStateArrayOutput() BucketLifecycleRuleStateArrayOutput
	ToBucketLifecycleRuleStateArrayOutputWithContext(context.Context) BucketLifecycleRuleStateArrayOutput
}

type BucketLifecycleRuleStateArray []BucketLifecycleRuleStateInput

func (BucketLifecycleRuleStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleState)(nil)).Elem()
}

func (i BucketLifecycleRuleStateArray) ToBucketLifecycleRuleStateArrayOutput() BucketLifecycleRuleStateArrayOutput {
	return i.ToBucketLifecycleRuleStateArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleStateArray) ToBucketLifecycleRuleStateArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleStateArrayOutput)
}

type BucketLifecycleRuleStateOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleState)(nil)).Elem()
}

func (o BucketLifecycleRuleStateOutput) ToBucketLifecycleRuleStateOutput() BucketLifecycleRuleStateOutput {
	return o
}

func (o BucketLifecycleRuleStateOutput) ToBucketLifecycleRuleStateOutputWithContext(ctx context.Context) BucketLifecycleRuleStateOutput {
	return o
}

// The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
func (o BucketLifecycleRuleStateOutput) Action() BucketLifecycleRuleStateActionOutput {
	return o.ApplyT(func(v BucketLifecycleRuleState) BucketLifecycleRuleStateAction { return v.Action }).(BucketLifecycleRuleStateActionOutput)
}

// The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
func (o BucketLifecycleRuleStateOutput) Condition() BucketLifecycleRuleStateConditionOutput {
	return o.ApplyT(func(v BucketLifecycleRuleState) BucketLifecycleRuleStateCondition { return v.Condition }).(BucketLifecycleRuleStateConditionOutput)
}

type BucketLifecycleRuleStateArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleState)(nil)).Elem()
}

func (o BucketLifecycleRuleStateArrayOutput) ToBucketLifecycleRuleStateArrayOutput() BucketLifecycleRuleStateArrayOutput {
	return o
}

func (o BucketLifecycleRuleStateArrayOutput) ToBucketLifecycleRuleStateArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleStateArrayOutput {
	return o
}

func (o BucketLifecycleRuleStateArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRuleState {
		return vs[0].([]BucketLifecycleRuleState)[vs[1].(int)]
	}).(BucketLifecycleRuleStateOutput)
}

type BucketLifecycleRuleStateAction struct {
	// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
	StorageClass *string `pulumi:"storageClass"`
	// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
	Type string `pulumi:"type"`
}

type BucketLifecycleRuleStateActionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleStateActionOutput() BucketLifecycleRuleStateActionOutput
	ToBucketLifecycleRuleStateActionOutputWithContext(context.Context) BucketLifecycleRuleStateActionOutput
}

type BucketLifecycleRuleStateActionArgs struct {
	// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
	// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BucketLifecycleRuleStateActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleStateAction)(nil)).Elem()
}

func (i BucketLifecycleRuleStateActionArgs) ToBucketLifecycleRuleStateActionOutput() BucketLifecycleRuleStateActionOutput {
	return i.ToBucketLifecycleRuleStateActionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleStateActionArgs) ToBucketLifecycleRuleStateActionOutputWithContext(ctx context.Context) BucketLifecycleRuleStateActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleStateActionOutput)
}

type BucketLifecycleRuleStateActionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleStateActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleStateAction)(nil)).Elem()
}

func (o BucketLifecycleRuleStateActionOutput) ToBucketLifecycleRuleStateActionOutput() BucketLifecycleRuleStateActionOutput {
	return o
}

func (o BucketLifecycleRuleStateActionOutput) ToBucketLifecycleRuleStateActionOutputWithContext(ctx context.Context) BucketLifecycleRuleStateActionOutput {
	return o
}

// The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
func (o BucketLifecycleRuleStateActionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleStateAction) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
func (o BucketLifecycleRuleStateActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleStateAction) string { return v.Type }).(pulumi.StringOutput)
}

type BucketLifecycleRuleStateCondition struct {
	// Minimum age of an object in days to satisfy this condition.
	Age *int `pulumi:"age"`
	// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
	CreatedBefore *string `pulumi:"createdBefore"`
	// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
	MatchesStorageClasses []string `pulumi:"matchesStorageClasses"`
	// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
	NumNewerVersions *int `pulumi:"numNewerVersions"`
	// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
	WithState *string `pulumi:"withState"`
}

type BucketLifecycleRuleStateConditionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleStateConditionOutput() BucketLifecycleRuleStateConditionOutput
	ToBucketLifecycleRuleStateConditionOutputWithContext(context.Context) BucketLifecycleRuleStateConditionOutput
}

type BucketLifecycleRuleStateConditionArgs struct {
	// Minimum age of an object in days to satisfy this condition.
	Age pulumi.IntPtrInput `pulumi:"age"`
	// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
	CreatedBefore pulumi.StringPtrInput `pulumi:"createdBefore"`
	// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
	MatchesStorageClasses pulumi.StringArrayInput `pulumi:"matchesStorageClasses"`
	// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
	NumNewerVersions pulumi.IntPtrInput `pulumi:"numNewerVersions"`
	// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
	WithState pulumi.StringPtrInput `pulumi:"withState"`
}

func (BucketLifecycleRuleStateConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleStateCondition)(nil)).Elem()
}

func (i BucketLifecycleRuleStateConditionArgs) ToBucketLifecycleRuleStateConditionOutput() BucketLifecycleRuleStateConditionOutput {
	return i.ToBucketLifecycleRuleStateConditionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleStateConditionArgs) ToBucketLifecycleRuleStateConditionOutputWithContext(ctx context.Context) BucketLifecycleRuleStateConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleStateConditionOutput)
}

type BucketLifecycleRuleStateConditionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleStateConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleStateCondition)(nil)).Elem()
}

func (o BucketLifecycleRuleStateConditionOutput) ToBucketLifecycleRuleStateConditionOutput() BucketLifecycleRuleStateConditionOutput {
	return o
}

func (o BucketLifecycleRuleStateConditionOutput) ToBucketLifecycleRuleStateConditionOutputWithContext(ctx context.Context) BucketLifecycleRuleStateConditionOutput {
	return o
}

// Minimum age of an object in days to satisfy this condition.
func (o BucketLifecycleRuleStateConditionOutput) Age() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleStateCondition) *int { return v.Age }).(pulumi.IntPtrOutput)
}

// Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
func (o BucketLifecycleRuleStateConditionOutput) CreatedBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleStateCondition) *string { return v.CreatedBefore }).(pulumi.StringPtrOutput)
}

// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
func (o BucketLifecycleRuleStateConditionOutput) MatchesStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRuleStateCondition) []string { return v.MatchesStorageClasses }).(pulumi.StringArrayOutput)
}

// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
func (o BucketLifecycleRuleStateConditionOutput) NumNewerVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleStateCondition) *int { return v.NumNewerVersions }).(pulumi.IntPtrOutput)
}

// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
func (o BucketLifecycleRuleStateConditionOutput) WithState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleStateCondition) *string { return v.WithState }).(pulumi.StringPtrOutput)
}

type BucketLogging struct {
	// The bucket that will receive log objects.
	LogBucket string `pulumi:"logBucket"`
	// The object prefix for log objects. If it's not provided,
	// by default GCS sets this to this bucket's name.
	LogObjectPrefix string `pulumi:"logObjectPrefix"`
}

type BucketLoggingInput interface {
	pulumi.Input

	ToBucketLoggingOutput() BucketLoggingOutput
	ToBucketLoggingOutputWithContext(context.Context) BucketLoggingOutput
}

type BucketLoggingArgs struct {
	// The bucket that will receive log objects.
	LogBucket pulumi.StringInput `pulumi:"logBucket"`
	// The object prefix for log objects. If it's not provided,
	// by default GCS sets this to this bucket's name.
	LogObjectPrefix pulumi.StringInput `pulumi:"logObjectPrefix"`
}

func (BucketLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (i BucketLoggingArgs) ToBucketLoggingOutput() BucketLoggingOutput {
	return i.ToBucketLoggingOutputWithContext(context.Background())
}

func (i BucketLoggingArgs) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingOutput)
}

func (i BucketLoggingArgs) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return i.ToBucketLoggingPtrOutputWithContext(context.Background())
}

func (i BucketLoggingArgs) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingOutput).ToBucketLoggingPtrOutputWithContext(ctx)
}

type BucketLoggingPtrInput interface {
	pulumi.Input

	ToBucketLoggingPtrOutput() BucketLoggingPtrOutput
	ToBucketLoggingPtrOutputWithContext(context.Context) BucketLoggingPtrOutput
}

type bucketLoggingPtrType BucketLoggingArgs

func BucketLoggingPtr(v *BucketLoggingArgs) BucketLoggingPtrInput {
	return (*bucketLoggingPtrType)(v)
}

func (*bucketLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLogging)(nil)).Elem()
}

func (i *bucketLoggingPtrType) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return i.ToBucketLoggingPtrOutputWithContext(context.Background())
}

func (i *bucketLoggingPtrType) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingPtrOutput)
}

type BucketLoggingOutput struct{ *pulumi.OutputState }

func (BucketLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (o BucketLoggingOutput) ToBucketLoggingOutput() BucketLoggingOutput {
	return o
}

func (o BucketLoggingOutput) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return o
}

func (o BucketLoggingOutput) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return o.ToBucketLoggingPtrOutputWithContext(context.Background())
}

func (o BucketLoggingOutput) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return o.ApplyT(func(v BucketLogging) *BucketLogging {
		return &v
	}).(BucketLoggingPtrOutput)
}

// The bucket that will receive log objects.
func (o BucketLoggingOutput) LogBucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLogging) string { return v.LogBucket }).(pulumi.StringOutput)
}

// The object prefix for log objects. If it's not provided,
// by default GCS sets this to this bucket's name.
func (o BucketLoggingOutput) LogObjectPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLogging) string { return v.LogObjectPrefix }).(pulumi.StringOutput)
}

type BucketLoggingPtrOutput struct{ *pulumi.OutputState }

func (BucketLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLogging)(nil)).Elem()
}

func (o BucketLoggingPtrOutput) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return o
}

func (o BucketLoggingPtrOutput) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return o
}

func (o BucketLoggingPtrOutput) Elem() BucketLoggingOutput {
	return o.ApplyT(func(v *BucketLogging) BucketLogging { return *v }).(BucketLoggingOutput)
}

// The bucket that will receive log objects.
func (o BucketLoggingPtrOutput) LogBucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLogging) string { return v.LogBucket }).(pulumi.StringOutput)
}

// The object prefix for log objects. If it's not provided,
// by default GCS sets this to this bucket's name.
func (o BucketLoggingPtrOutput) LogObjectPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLogging) string { return v.LogObjectPrefix }).(pulumi.StringOutput)
}

type BucketLoggingArgs struct {
	// The bucket that will receive log objects.
	LogBucket string `pulumi:"logBucket"`
	// The object prefix for log objects. If it's not provided,
	// by default GCS sets this to this bucket's name.
	LogObjectPrefix *string `pulumi:"logObjectPrefix"`
}

type BucketLoggingArgsInput interface {
	pulumi.Input

	ToBucketLoggingArgsOutput() BucketLoggingArgsOutput
	ToBucketLoggingArgsOutputWithContext(context.Context) BucketLoggingArgsOutput
}

type BucketLoggingArgsArgs struct {
	// The bucket that will receive log objects.
	LogBucket pulumi.StringInput `pulumi:"logBucket"`
	// The object prefix for log objects. If it's not provided,
	// by default GCS sets this to this bucket's name.
	LogObjectPrefix pulumi.StringPtrInput `pulumi:"logObjectPrefix"`
}

func (BucketLoggingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLoggingArgs)(nil)).Elem()
}

func (i BucketLoggingArgsArgs) ToBucketLoggingArgsOutput() BucketLoggingArgsOutput {
	return i.ToBucketLoggingArgsOutputWithContext(context.Background())
}

func (i BucketLoggingArgsArgs) ToBucketLoggingArgsOutputWithContext(ctx context.Context) BucketLoggingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingArgsOutput)
}

func (i BucketLoggingArgsArgs) ToBucketLoggingArgsPtrOutput() BucketLoggingArgsPtrOutput {
	return i.ToBucketLoggingArgsPtrOutputWithContext(context.Background())
}

func (i BucketLoggingArgsArgs) ToBucketLoggingArgsPtrOutputWithContext(ctx context.Context) BucketLoggingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingArgsOutput).ToBucketLoggingArgsPtrOutputWithContext(ctx)
}

type BucketLoggingArgsPtrInput interface {
	pulumi.Input

	ToBucketLoggingArgsPtrOutput() BucketLoggingArgsPtrOutput
	ToBucketLoggingArgsPtrOutputWithContext(context.Context) BucketLoggingArgsPtrOutput
}

type bucketLoggingArgsPtrType BucketLoggingArgsArgs

func BucketLoggingArgsPtr(v *BucketLoggingArgsArgs) BucketLoggingArgsPtrInput {
	return (*bucketLoggingArgsPtrType)(v)
}

func (*bucketLoggingArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLoggingArgs)(nil)).Elem()
}

func (i *bucketLoggingArgsPtrType) ToBucketLoggingArgsPtrOutput() BucketLoggingArgsPtrOutput {
	return i.ToBucketLoggingArgsPtrOutputWithContext(context.Background())
}

func (i *bucketLoggingArgsPtrType) ToBucketLoggingArgsPtrOutputWithContext(ctx context.Context) BucketLoggingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingArgsPtrOutput)
}

type BucketLoggingArgsOutput struct{ *pulumi.OutputState }

func (BucketLoggingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLoggingArgs)(nil)).Elem()
}

func (o BucketLoggingArgsOutput) ToBucketLoggingArgsOutput() BucketLoggingArgsOutput {
	return o
}

func (o BucketLoggingArgsOutput) ToBucketLoggingArgsOutputWithContext(ctx context.Context) BucketLoggingArgsOutput {
	return o
}

func (o BucketLoggingArgsOutput) ToBucketLoggingArgsPtrOutput() BucketLoggingArgsPtrOutput {
	return o.ToBucketLoggingArgsPtrOutputWithContext(context.Background())
}

func (o BucketLoggingArgsOutput) ToBucketLoggingArgsPtrOutputWithContext(ctx context.Context) BucketLoggingArgsPtrOutput {
	return o.ApplyT(func(v BucketLoggingArgs) *BucketLoggingArgs {
		return &v
	}).(BucketLoggingArgsPtrOutput)
}

// The bucket that will receive log objects.
func (o BucketLoggingArgsOutput) LogBucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLoggingArgs) string { return v.LogBucket }).(pulumi.StringOutput)
}

// The object prefix for log objects. If it's not provided,
// by default GCS sets this to this bucket's name.
func (o BucketLoggingArgsOutput) LogObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLoggingArgs) *string { return v.LogObjectPrefix }).(pulumi.StringPtrOutput)
}

type BucketLoggingArgsPtrOutput struct{ *pulumi.OutputState }

func (BucketLoggingArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLoggingArgs)(nil)).Elem()
}

func (o BucketLoggingArgsPtrOutput) ToBucketLoggingArgsPtrOutput() BucketLoggingArgsPtrOutput {
	return o
}

func (o BucketLoggingArgsPtrOutput) ToBucketLoggingArgsPtrOutputWithContext(ctx context.Context) BucketLoggingArgsPtrOutput {
	return o
}

func (o BucketLoggingArgsPtrOutput) Elem() BucketLoggingArgsOutput {
	return o.ApplyT(func(v *BucketLoggingArgs) BucketLoggingArgs { return *v }).(BucketLoggingArgsOutput)
}

// The bucket that will receive log objects.
func (o BucketLoggingArgsPtrOutput) LogBucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLoggingArgs) string { return v.LogBucket }).(pulumi.StringOutput)
}

// The object prefix for log objects. If it's not provided,
// by default GCS sets this to this bucket's name.
func (o BucketLoggingArgsPtrOutput) LogObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLoggingArgs) *string { return v.LogObjectPrefix }).(pulumi.StringPtrOutput)
}

type BucketLoggingState struct {
	// The bucket that will receive log objects.
	LogBucket string `pulumi:"logBucket"`
	// The object prefix for log objects. If it's not provided,
	// by default GCS sets this to this bucket's name.
	LogObjectPrefix *string `pulumi:"logObjectPrefix"`
}

type BucketLoggingStateInput interface {
	pulumi.Input

	ToBucketLoggingStateOutput() BucketLoggingStateOutput
	ToBucketLoggingStateOutputWithContext(context.Context) BucketLoggingStateOutput
}

type BucketLoggingStateArgs struct {
	// The bucket that will receive log objects.
	LogBucket pulumi.StringInput `pulumi:"logBucket"`
	// The object prefix for log objects. If it's not provided,
	// by default GCS sets this to this bucket's name.
	LogObjectPrefix pulumi.StringPtrInput `pulumi:"logObjectPrefix"`
}

func (BucketLoggingStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLoggingState)(nil)).Elem()
}

func (i BucketLoggingStateArgs) ToBucketLoggingStateOutput() BucketLoggingStateOutput {
	return i.ToBucketLoggingStateOutputWithContext(context.Background())
}

func (i BucketLoggingStateArgs) ToBucketLoggingStateOutputWithContext(ctx context.Context) BucketLoggingStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingStateOutput)
}

type BucketLoggingStateOutput struct{ *pulumi.OutputState }

func (BucketLoggingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLoggingState)(nil)).Elem()
}

func (o BucketLoggingStateOutput) ToBucketLoggingStateOutput() BucketLoggingStateOutput {
	return o
}

func (o BucketLoggingStateOutput) ToBucketLoggingStateOutputWithContext(ctx context.Context) BucketLoggingStateOutput {
	return o
}

// The bucket that will receive log objects.
func (o BucketLoggingStateOutput) LogBucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLoggingState) string { return v.LogBucket }).(pulumi.StringOutput)
}

// The object prefix for log objects. If it's not provided,
// by default GCS sets this to this bucket's name.
func (o BucketLoggingStateOutput) LogObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLoggingState) *string { return v.LogObjectPrefix }).(pulumi.StringPtrOutput)
}

type BucketRetentionPolicy struct {
	// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
	IsLocked *bool `pulumi:"isLocked"`
	// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
	RetentionPeriod int `pulumi:"retentionPeriod"`
}

type BucketRetentionPolicyInput interface {
	pulumi.Input

	ToBucketRetentionPolicyOutput() BucketRetentionPolicyOutput
	ToBucketRetentionPolicyOutputWithContext(context.Context) BucketRetentionPolicyOutput
}

type BucketRetentionPolicyArgs struct {
	// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
	IsLocked pulumi.BoolPtrInput `pulumi:"isLocked"`
	// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
	RetentionPeriod pulumi.IntInput `pulumi:"retentionPeriod"`
}

func (BucketRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicy)(nil)).Elem()
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyOutput() BucketRetentionPolicyOutput {
	return i.ToBucketRetentionPolicyOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyOutputWithContext(ctx context.Context) BucketRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyOutput)
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return i.ToBucketRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyOutput).ToBucketRetentionPolicyPtrOutputWithContext(ctx)
}

type BucketRetentionPolicyPtrInput interface {
	pulumi.Input

	ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput
	ToBucketRetentionPolicyPtrOutputWithContext(context.Context) BucketRetentionPolicyPtrOutput
}

type bucketRetentionPolicyPtrType BucketRetentionPolicyArgs

func BucketRetentionPolicyPtr(v *BucketRetentionPolicyArgs) BucketRetentionPolicyPtrInput {
	return (*bucketRetentionPolicyPtrType)(v)
}

func (*bucketRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicy)(nil)).Elem()
}

func (i *bucketRetentionPolicyPtrType) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return i.ToBucketRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *bucketRetentionPolicyPtrType) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyPtrOutput)
}

type BucketRetentionPolicyOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicy)(nil)).Elem()
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyOutput() BucketRetentionPolicyOutput {
	return o
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyOutputWithContext(ctx context.Context) BucketRetentionPolicyOutput {
	return o
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return o.ToBucketRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) *BucketRetentionPolicy {
		return &v
	}).(BucketRetentionPolicyPtrOutput)
}

// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
func (o BucketRetentionPolicyOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) *bool { return v.IsLocked }).(pulumi.BoolPtrOutput)
}

// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
func (o BucketRetentionPolicyOutput) RetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) int { return v.RetentionPeriod }).(pulumi.IntOutput)
}

type BucketRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicy)(nil)).Elem()
}

func (o BucketRetentionPolicyPtrOutput) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return o
}

func (o BucketRetentionPolicyPtrOutput) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return o
}

func (o BucketRetentionPolicyPtrOutput) Elem() BucketRetentionPolicyOutput {
	return o.ApplyT(func(v *BucketRetentionPolicy) BucketRetentionPolicy { return *v }).(BucketRetentionPolicyOutput)
}

// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
func (o BucketRetentionPolicyPtrOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) *bool { return v.IsLocked }).(pulumi.BoolPtrOutput)
}

// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
func (o BucketRetentionPolicyPtrOutput) RetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) int { return v.RetentionPeriod }).(pulumi.IntOutput)
}

type BucketRetentionPolicyArgs struct {
	// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
	IsLocked *bool `pulumi:"isLocked"`
	// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
	RetentionPeriod int `pulumi:"retentionPeriod"`
}

type BucketRetentionPolicyArgsInput interface {
	pulumi.Input

	ToBucketRetentionPolicyArgsOutput() BucketRetentionPolicyArgsOutput
	ToBucketRetentionPolicyArgsOutputWithContext(context.Context) BucketRetentionPolicyArgsOutput
}

type BucketRetentionPolicyArgsArgs struct {
	// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
	IsLocked pulumi.BoolPtrInput `pulumi:"isLocked"`
	// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
	RetentionPeriod pulumi.IntInput `pulumi:"retentionPeriod"`
}

func (BucketRetentionPolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicyArgs)(nil)).Elem()
}

func (i BucketRetentionPolicyArgsArgs) ToBucketRetentionPolicyArgsOutput() BucketRetentionPolicyArgsOutput {
	return i.ToBucketRetentionPolicyArgsOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyArgsArgs) ToBucketRetentionPolicyArgsOutputWithContext(ctx context.Context) BucketRetentionPolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyArgsOutput)
}

func (i BucketRetentionPolicyArgsArgs) ToBucketRetentionPolicyArgsPtrOutput() BucketRetentionPolicyArgsPtrOutput {
	return i.ToBucketRetentionPolicyArgsPtrOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyArgsArgs) ToBucketRetentionPolicyArgsPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyArgsOutput).ToBucketRetentionPolicyArgsPtrOutputWithContext(ctx)
}

type BucketRetentionPolicyArgsPtrInput interface {
	pulumi.Input

	ToBucketRetentionPolicyArgsPtrOutput() BucketRetentionPolicyArgsPtrOutput
	ToBucketRetentionPolicyArgsPtrOutputWithContext(context.Context) BucketRetentionPolicyArgsPtrOutput
}

type bucketRetentionPolicyArgsPtrType BucketRetentionPolicyArgsArgs

func BucketRetentionPolicyArgsPtr(v *BucketRetentionPolicyArgsArgs) BucketRetentionPolicyArgsPtrInput {
	return (*bucketRetentionPolicyArgsPtrType)(v)
}

func (*bucketRetentionPolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicyArgs)(nil)).Elem()
}

func (i *bucketRetentionPolicyArgsPtrType) ToBucketRetentionPolicyArgsPtrOutput() BucketRetentionPolicyArgsPtrOutput {
	return i.ToBucketRetentionPolicyArgsPtrOutputWithContext(context.Background())
}

func (i *bucketRetentionPolicyArgsPtrType) ToBucketRetentionPolicyArgsPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyArgsPtrOutput)
}

type BucketRetentionPolicyArgsOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicyArgs)(nil)).Elem()
}

func (o BucketRetentionPolicyArgsOutput) ToBucketRetentionPolicyArgsOutput() BucketRetentionPolicyArgsOutput {
	return o
}

func (o BucketRetentionPolicyArgsOutput) ToBucketRetentionPolicyArgsOutputWithContext(ctx context.Context) BucketRetentionPolicyArgsOutput {
	return o
}

func (o BucketRetentionPolicyArgsOutput) ToBucketRetentionPolicyArgsPtrOutput() BucketRetentionPolicyArgsPtrOutput {
	return o.ToBucketRetentionPolicyArgsPtrOutputWithContext(context.Background())
}

func (o BucketRetentionPolicyArgsOutput) ToBucketRetentionPolicyArgsPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyArgsPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicyArgs) *BucketRetentionPolicyArgs {
		return &v
	}).(BucketRetentionPolicyArgsPtrOutput)
}

// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
func (o BucketRetentionPolicyArgsOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicyArgs) *bool { return v.IsLocked }).(pulumi.BoolPtrOutput)
}

// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
func (o BucketRetentionPolicyArgsOutput) RetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v BucketRetentionPolicyArgs) int { return v.RetentionPeriod }).(pulumi.IntOutput)
}

type BucketRetentionPolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicyArgs)(nil)).Elem()
}

func (o BucketRetentionPolicyArgsPtrOutput) ToBucketRetentionPolicyArgsPtrOutput() BucketRetentionPolicyArgsPtrOutput {
	return o
}

func (o BucketRetentionPolicyArgsPtrOutput) ToBucketRetentionPolicyArgsPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyArgsPtrOutput {
	return o
}

func (o BucketRetentionPolicyArgsPtrOutput) Elem() BucketRetentionPolicyArgsOutput {
	return o.ApplyT(func(v *BucketRetentionPolicyArgs) BucketRetentionPolicyArgs { return *v }).(BucketRetentionPolicyArgsOutput)
}

// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
func (o BucketRetentionPolicyArgsPtrOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicyArgs) *bool { return v.IsLocked }).(pulumi.BoolPtrOutput)
}

// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
func (o BucketRetentionPolicyArgsPtrOutput) RetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v BucketRetentionPolicyArgs) int { return v.RetentionPeriod }).(pulumi.IntOutput)
}

type BucketRetentionPolicyState struct {
	// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
	IsLocked *bool `pulumi:"isLocked"`
	// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
	RetentionPeriod int `pulumi:"retentionPeriod"`
}

type BucketRetentionPolicyStateInput interface {
	pulumi.Input

	ToBucketRetentionPolicyStateOutput() BucketRetentionPolicyStateOutput
	ToBucketRetentionPolicyStateOutputWithContext(context.Context) BucketRetentionPolicyStateOutput
}

type BucketRetentionPolicyStateArgs struct {
	// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
	IsLocked pulumi.BoolPtrInput `pulumi:"isLocked"`
	// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
	RetentionPeriod pulumi.IntInput `pulumi:"retentionPeriod"`
}

func (BucketRetentionPolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicyState)(nil)).Elem()
}

func (i BucketRetentionPolicyStateArgs) ToBucketRetentionPolicyStateOutput() BucketRetentionPolicyStateOutput {
	return i.ToBucketRetentionPolicyStateOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyStateArgs) ToBucketRetentionPolicyStateOutputWithContext(ctx context.Context) BucketRetentionPolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyStateOutput)
}

type BucketRetentionPolicyStateOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicyState)(nil)).Elem()
}

func (o BucketRetentionPolicyStateOutput) ToBucketRetentionPolicyStateOutput() BucketRetentionPolicyStateOutput {
	return o
}

func (o BucketRetentionPolicyStateOutput) ToBucketRetentionPolicyStateOutputWithContext(ctx context.Context) BucketRetentionPolicyStateOutput {
	return o
}

// If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
func (o BucketRetentionPolicyStateOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicyState) *bool { return v.IsLocked }).(pulumi.BoolPtrOutput)
}

// The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
func (o BucketRetentionPolicyStateOutput) RetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v BucketRetentionPolicyState) int { return v.RetentionPeriod }).(pulumi.IntOutput)
}

type BucketVersioning struct {
	// While set to `true`, versioning is fully enabled for this bucket.
	Enabled bool `pulumi:"enabled"`
}

type BucketVersioningInput interface {
	pulumi.Input

	ToBucketVersioningOutput() BucketVersioningOutput
	ToBucketVersioningOutputWithContext(context.Context) BucketVersioningOutput
}

type BucketVersioningArgs struct {
	// While set to `true`, versioning is fully enabled for this bucket.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (BucketVersioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioning)(nil)).Elem()
}

func (i BucketVersioningArgs) ToBucketVersioningOutput() BucketVersioningOutput {
	return i.ToBucketVersioningOutputWithContext(context.Background())
}

func (i BucketVersioningArgs) ToBucketVersioningOutputWithContext(ctx context.Context) BucketVersioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningOutput)
}

func (i BucketVersioningArgs) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return i.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (i BucketVersioningArgs) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningOutput).ToBucketVersioningPtrOutputWithContext(ctx)
}

type BucketVersioningPtrInput interface {
	pulumi.Input

	ToBucketVersioningPtrOutput() BucketVersioningPtrOutput
	ToBucketVersioningPtrOutputWithContext(context.Context) BucketVersioningPtrOutput
}

type bucketVersioningPtrType BucketVersioningArgs

func BucketVersioningPtr(v *BucketVersioningArgs) BucketVersioningPtrInput {
	return (*bucketVersioningPtrType)(v)
}

func (*bucketVersioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioning)(nil)).Elem()
}

func (i *bucketVersioningPtrType) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return i.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (i *bucketVersioningPtrType) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningPtrOutput)
}

type BucketVersioningOutput struct{ *pulumi.OutputState }

func (BucketVersioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioning)(nil)).Elem()
}

func (o BucketVersioningOutput) ToBucketVersioningOutput() BucketVersioningOutput {
	return o
}

func (o BucketVersioningOutput) ToBucketVersioningOutputWithContext(ctx context.Context) BucketVersioningOutput {
	return o
}

func (o BucketVersioningOutput) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return o.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (o BucketVersioningOutput) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return o.ApplyT(func(v BucketVersioning) *BucketVersioning {
		return &v
	}).(BucketVersioningPtrOutput)
}

// While set to `true`, versioning is fully enabled for this bucket.
func (o BucketVersioningOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketVersioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BucketVersioningPtrOutput struct{ *pulumi.OutputState }

func (BucketVersioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioning)(nil)).Elem()
}

func (o BucketVersioningPtrOutput) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return o
}

func (o BucketVersioningPtrOutput) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return o
}

func (o BucketVersioningPtrOutput) Elem() BucketVersioningOutput {
	return o.ApplyT(func(v *BucketVersioning) BucketVersioning { return *v }).(BucketVersioningOutput)
}

// While set to `true`, versioning is fully enabled for this bucket.
func (o BucketVersioningPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketVersioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BucketVersioningArgs struct {
	// While set to `true`, versioning is fully enabled for this bucket.
	Enabled bool `pulumi:"enabled"`
}

type BucketVersioningArgsInput interface {
	pulumi.Input

	ToBucketVersioningArgsOutput() BucketVersioningArgsOutput
	ToBucketVersioningArgsOutputWithContext(context.Context) BucketVersioningArgsOutput
}

type BucketVersioningArgsArgs struct {
	// While set to `true`, versioning is fully enabled for this bucket.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (BucketVersioningArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioningArgs)(nil)).Elem()
}

func (i BucketVersioningArgsArgs) ToBucketVersioningArgsOutput() BucketVersioningArgsOutput {
	return i.ToBucketVersioningArgsOutputWithContext(context.Background())
}

func (i BucketVersioningArgsArgs) ToBucketVersioningArgsOutputWithContext(ctx context.Context) BucketVersioningArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningArgsOutput)
}

func (i BucketVersioningArgsArgs) ToBucketVersioningArgsPtrOutput() BucketVersioningArgsPtrOutput {
	return i.ToBucketVersioningArgsPtrOutputWithContext(context.Background())
}

func (i BucketVersioningArgsArgs) ToBucketVersioningArgsPtrOutputWithContext(ctx context.Context) BucketVersioningArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningArgsOutput).ToBucketVersioningArgsPtrOutputWithContext(ctx)
}

type BucketVersioningArgsPtrInput interface {
	pulumi.Input

	ToBucketVersioningArgsPtrOutput() BucketVersioningArgsPtrOutput
	ToBucketVersioningArgsPtrOutputWithContext(context.Context) BucketVersioningArgsPtrOutput
}

type bucketVersioningArgsPtrType BucketVersioningArgsArgs

func BucketVersioningArgsPtr(v *BucketVersioningArgsArgs) BucketVersioningArgsPtrInput {
	return (*bucketVersioningArgsPtrType)(v)
}

func (*bucketVersioningArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioningArgs)(nil)).Elem()
}

func (i *bucketVersioningArgsPtrType) ToBucketVersioningArgsPtrOutput() BucketVersioningArgsPtrOutput {
	return i.ToBucketVersioningArgsPtrOutputWithContext(context.Background())
}

func (i *bucketVersioningArgsPtrType) ToBucketVersioningArgsPtrOutputWithContext(ctx context.Context) BucketVersioningArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningArgsPtrOutput)
}

type BucketVersioningArgsOutput struct{ *pulumi.OutputState }

func (BucketVersioningArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioningArgs)(nil)).Elem()
}

func (o BucketVersioningArgsOutput) ToBucketVersioningArgsOutput() BucketVersioningArgsOutput {
	return o
}

func (o BucketVersioningArgsOutput) ToBucketVersioningArgsOutputWithContext(ctx context.Context) BucketVersioningArgsOutput {
	return o
}

func (o BucketVersioningArgsOutput) ToBucketVersioningArgsPtrOutput() BucketVersioningArgsPtrOutput {
	return o.ToBucketVersioningArgsPtrOutputWithContext(context.Background())
}

func (o BucketVersioningArgsOutput) ToBucketVersioningArgsPtrOutputWithContext(ctx context.Context) BucketVersioningArgsPtrOutput {
	return o.ApplyT(func(v BucketVersioningArgs) *BucketVersioningArgs {
		return &v
	}).(BucketVersioningArgsPtrOutput)
}

// While set to `true`, versioning is fully enabled for this bucket.
func (o BucketVersioningArgsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketVersioningArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BucketVersioningArgsPtrOutput struct{ *pulumi.OutputState }

func (BucketVersioningArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioningArgs)(nil)).Elem()
}

func (o BucketVersioningArgsPtrOutput) ToBucketVersioningArgsPtrOutput() BucketVersioningArgsPtrOutput {
	return o
}

func (o BucketVersioningArgsPtrOutput) ToBucketVersioningArgsPtrOutputWithContext(ctx context.Context) BucketVersioningArgsPtrOutput {
	return o
}

func (o BucketVersioningArgsPtrOutput) Elem() BucketVersioningArgsOutput {
	return o.ApplyT(func(v *BucketVersioningArgs) BucketVersioningArgs { return *v }).(BucketVersioningArgsOutput)
}

// While set to `true`, versioning is fully enabled for this bucket.
func (o BucketVersioningArgsPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketVersioningArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BucketVersioningState struct {
	// While set to `true`, versioning is fully enabled for this bucket.
	Enabled bool `pulumi:"enabled"`
}

type BucketVersioningStateInput interface {
	pulumi.Input

	ToBucketVersioningStateOutput() BucketVersioningStateOutput
	ToBucketVersioningStateOutputWithContext(context.Context) BucketVersioningStateOutput
}

type BucketVersioningStateArgs struct {
	// While set to `true`, versioning is fully enabled for this bucket.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (BucketVersioningStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioningState)(nil)).Elem()
}

func (i BucketVersioningStateArgs) ToBucketVersioningStateOutput() BucketVersioningStateOutput {
	return i.ToBucketVersioningStateOutputWithContext(context.Background())
}

func (i BucketVersioningStateArgs) ToBucketVersioningStateOutputWithContext(ctx context.Context) BucketVersioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningStateOutput)
}

type BucketVersioningStateOutput struct{ *pulumi.OutputState }

func (BucketVersioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioningState)(nil)).Elem()
}

func (o BucketVersioningStateOutput) ToBucketVersioningStateOutput() BucketVersioningStateOutput {
	return o
}

func (o BucketVersioningStateOutput) ToBucketVersioningStateOutputWithContext(ctx context.Context) BucketVersioningStateOutput {
	return o
}

// While set to `true`, versioning is fully enabled for this bucket.
func (o BucketVersioningStateOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketVersioningState) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BucketWebsite struct {
	// Behaves as the bucket's directory index where
	// missing objects are treated as potential directories.
	MainPageSuffix *string `pulumi:"mainPageSuffix"`
	// The custom object to return when a requested
	// resource is not found.
	NotFoundPage *string `pulumi:"notFoundPage"`
}

type BucketWebsiteInput interface {
	pulumi.Input

	ToBucketWebsiteOutput() BucketWebsiteOutput
	ToBucketWebsiteOutputWithContext(context.Context) BucketWebsiteOutput
}

type BucketWebsiteArgs struct {
	// Behaves as the bucket's directory index where
	// missing objects are treated as potential directories.
	MainPageSuffix pulumi.StringPtrInput `pulumi:"mainPageSuffix"`
	// The custom object to return when a requested
	// resource is not found.
	NotFoundPage pulumi.StringPtrInput `pulumi:"notFoundPage"`
}

func (BucketWebsiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return i.ToBucketWebsiteOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput)
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput).ToBucketWebsitePtrOutputWithContext(ctx)
}

type BucketWebsitePtrInput interface {
	pulumi.Input

	ToBucketWebsitePtrOutput() BucketWebsitePtrOutput
	ToBucketWebsitePtrOutputWithContext(context.Context) BucketWebsitePtrOutput
}

type bucketWebsitePtrType BucketWebsiteArgs

func BucketWebsitePtr(v *BucketWebsiteArgs) BucketWebsitePtrInput {
	return (*bucketWebsitePtrType)(v)
}

func (*bucketWebsitePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsitePtrOutput)
}

type BucketWebsiteOutput struct{ *pulumi.OutputState }

func (BucketWebsiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o.ApplyT(func(v BucketWebsite) *BucketWebsite {
		return &v
	}).(BucketWebsitePtrOutput)
}

// Behaves as the bucket's directory index where
// missing objects are treated as potential directories.
func (o BucketWebsiteOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.MainPageSuffix }).(pulumi.StringPtrOutput)
}

// The custom object to return when a requested
// resource is not found.
func (o BucketWebsiteOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.NotFoundPage }).(pulumi.StringPtrOutput)
}

type BucketWebsitePtrOutput struct{ *pulumi.OutputState }

func (BucketWebsitePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) Elem() BucketWebsiteOutput {
	return o.ApplyT(func(v *BucketWebsite) BucketWebsite { return *v }).(BucketWebsiteOutput)
}

// Behaves as the bucket's directory index where
// missing objects are treated as potential directories.
func (o BucketWebsitePtrOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.MainPageSuffix }).(pulumi.StringPtrOutput)
}

// The custom object to return when a requested
// resource is not found.
func (o BucketWebsitePtrOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.NotFoundPage }).(pulumi.StringPtrOutput)
}

type BucketWebsiteArgs struct {
	// Behaves as the bucket's directory index where
	// missing objects are treated as potential directories.
	MainPageSuffix *string `pulumi:"mainPageSuffix"`
	// The custom object to return when a requested
	// resource is not found.
	NotFoundPage *string `pulumi:"notFoundPage"`
}

type BucketWebsiteArgsInput interface {
	pulumi.Input

	ToBucketWebsiteArgsOutput() BucketWebsiteArgsOutput
	ToBucketWebsiteArgsOutputWithContext(context.Context) BucketWebsiteArgsOutput
}

type BucketWebsiteArgsArgs struct {
	// Behaves as the bucket's directory index where
	// missing objects are treated as potential directories.
	MainPageSuffix pulumi.StringPtrInput `pulumi:"mainPageSuffix"`
	// The custom object to return when a requested
	// resource is not found.
	NotFoundPage pulumi.StringPtrInput `pulumi:"notFoundPage"`
}

func (BucketWebsiteArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsiteArgs)(nil)).Elem()
}

func (i BucketWebsiteArgsArgs) ToBucketWebsiteArgsOutput() BucketWebsiteArgsOutput {
	return i.ToBucketWebsiteArgsOutputWithContext(context.Background())
}

func (i BucketWebsiteArgsArgs) ToBucketWebsiteArgsOutputWithContext(ctx context.Context) BucketWebsiteArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteArgsOutput)
}

func (i BucketWebsiteArgsArgs) ToBucketWebsiteArgsPtrOutput() BucketWebsiteArgsPtrOutput {
	return i.ToBucketWebsiteArgsPtrOutputWithContext(context.Background())
}

func (i BucketWebsiteArgsArgs) ToBucketWebsiteArgsPtrOutputWithContext(ctx context.Context) BucketWebsiteArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteArgsOutput).ToBucketWebsiteArgsPtrOutputWithContext(ctx)
}

type BucketWebsiteArgsPtrInput interface {
	pulumi.Input

	ToBucketWebsiteArgsPtrOutput() BucketWebsiteArgsPtrOutput
	ToBucketWebsiteArgsPtrOutputWithContext(context.Context) BucketWebsiteArgsPtrOutput
}

type bucketWebsiteArgsPtrType BucketWebsiteArgsArgs

func BucketWebsiteArgsPtr(v *BucketWebsiteArgsArgs) BucketWebsiteArgsPtrInput {
	return (*bucketWebsiteArgsPtrType)(v)
}

func (*bucketWebsiteArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteArgs)(nil)).Elem()
}

func (i *bucketWebsiteArgsPtrType) ToBucketWebsiteArgsPtrOutput() BucketWebsiteArgsPtrOutput {
	return i.ToBucketWebsiteArgsPtrOutputWithContext(context.Background())
}

func (i *bucketWebsiteArgsPtrType) ToBucketWebsiteArgsPtrOutputWithContext(ctx context.Context) BucketWebsiteArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteArgsPtrOutput)
}

type BucketWebsiteArgsOutput struct{ *pulumi.OutputState }

func (BucketWebsiteArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsiteArgs)(nil)).Elem()
}

func (o BucketWebsiteArgsOutput) ToBucketWebsiteArgsOutput() BucketWebsiteArgsOutput {
	return o
}

func (o BucketWebsiteArgsOutput) ToBucketWebsiteArgsOutputWithContext(ctx context.Context) BucketWebsiteArgsOutput {
	return o
}

func (o BucketWebsiteArgsOutput) ToBucketWebsiteArgsPtrOutput() BucketWebsiteArgsPtrOutput {
	return o.ToBucketWebsiteArgsPtrOutputWithContext(context.Background())
}

func (o BucketWebsiteArgsOutput) ToBucketWebsiteArgsPtrOutputWithContext(ctx context.Context) BucketWebsiteArgsPtrOutput {
	return o.ApplyT(func(v BucketWebsiteArgs) *BucketWebsiteArgs {
		return &v
	}).(BucketWebsiteArgsPtrOutput)
}

// Behaves as the bucket's directory index where
// missing objects are treated as potential directories.
func (o BucketWebsiteArgsOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsiteArgs) *string { return v.MainPageSuffix }).(pulumi.StringPtrOutput)
}

// The custom object to return when a requested
// resource is not found.
func (o BucketWebsiteArgsOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsiteArgs) *string { return v.NotFoundPage }).(pulumi.StringPtrOutput)
}

type BucketWebsiteArgsPtrOutput struct{ *pulumi.OutputState }

func (BucketWebsiteArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteArgs)(nil)).Elem()
}

func (o BucketWebsiteArgsPtrOutput) ToBucketWebsiteArgsPtrOutput() BucketWebsiteArgsPtrOutput {
	return o
}

func (o BucketWebsiteArgsPtrOutput) ToBucketWebsiteArgsPtrOutputWithContext(ctx context.Context) BucketWebsiteArgsPtrOutput {
	return o
}

func (o BucketWebsiteArgsPtrOutput) Elem() BucketWebsiteArgsOutput {
	return o.ApplyT(func(v *BucketWebsiteArgs) BucketWebsiteArgs { return *v }).(BucketWebsiteArgsOutput)
}

// Behaves as the bucket's directory index where
// missing objects are treated as potential directories.
func (o BucketWebsiteArgsPtrOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsiteArgs) *string { return v.MainPageSuffix }).(pulumi.StringPtrOutput)
}

// The custom object to return when a requested
// resource is not found.
func (o BucketWebsiteArgsPtrOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsiteArgs) *string { return v.NotFoundPage }).(pulumi.StringPtrOutput)
}

type BucketWebsiteState struct {
	// Behaves as the bucket's directory index where
	// missing objects are treated as potential directories.
	MainPageSuffix *string `pulumi:"mainPageSuffix"`
	// The custom object to return when a requested
	// resource is not found.
	NotFoundPage *string `pulumi:"notFoundPage"`
}

type BucketWebsiteStateInput interface {
	pulumi.Input

	ToBucketWebsiteStateOutput() BucketWebsiteStateOutput
	ToBucketWebsiteStateOutputWithContext(context.Context) BucketWebsiteStateOutput
}

type BucketWebsiteStateArgs struct {
	// Behaves as the bucket's directory index where
	// missing objects are treated as potential directories.
	MainPageSuffix pulumi.StringPtrInput `pulumi:"mainPageSuffix"`
	// The custom object to return when a requested
	// resource is not found.
	NotFoundPage pulumi.StringPtrInput `pulumi:"notFoundPage"`
}

func (BucketWebsiteStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsiteState)(nil)).Elem()
}

func (i BucketWebsiteStateArgs) ToBucketWebsiteStateOutput() BucketWebsiteStateOutput {
	return i.ToBucketWebsiteStateOutputWithContext(context.Background())
}

func (i BucketWebsiteStateArgs) ToBucketWebsiteStateOutputWithContext(ctx context.Context) BucketWebsiteStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteStateOutput)
}

type BucketWebsiteStateOutput struct{ *pulumi.OutputState }

func (BucketWebsiteStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsiteState)(nil)).Elem()
}

func (o BucketWebsiteStateOutput) ToBucketWebsiteStateOutput() BucketWebsiteStateOutput {
	return o
}

func (o BucketWebsiteStateOutput) ToBucketWebsiteStateOutputWithContext(ctx context.Context) BucketWebsiteStateOutput {
	return o
}

// Behaves as the bucket's directory index where
// missing objects are treated as potential directories.
func (o BucketWebsiteStateOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsiteState) *string { return v.MainPageSuffix }).(pulumi.StringPtrOutput)
}

// The custom object to return when a requested
// resource is not found.
func (o BucketWebsiteStateOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsiteState) *string { return v.NotFoundPage }).(pulumi.StringPtrOutput)
}

type DefaultObjectAccessControlProjectTeam struct {
	ProjectNumber *string `pulumi:"projectNumber"`
	Team          *string `pulumi:"team"`
}

type DefaultObjectAccessControlProjectTeamInput interface {
	pulumi.Input

	ToDefaultObjectAccessControlProjectTeamOutput() DefaultObjectAccessControlProjectTeamOutput
	ToDefaultObjectAccessControlProjectTeamOutputWithContext(context.Context) DefaultObjectAccessControlProjectTeamOutput
}

type DefaultObjectAccessControlProjectTeamArgs struct {
	ProjectNumber pulumi.StringPtrInput `pulumi:"projectNumber"`
	Team          pulumi.StringPtrInput `pulumi:"team"`
}

func (DefaultObjectAccessControlProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamOutput() DefaultObjectAccessControlProjectTeamOutput {
	return i.ToDefaultObjectAccessControlProjectTeamOutputWithContext(context.Background())
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamOutput)
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return i.ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamOutput).ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx)
}

type DefaultObjectAccessControlProjectTeamPtrInput interface {
	pulumi.Input

	ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput
	ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Context) DefaultObjectAccessControlProjectTeamPtrOutput
}

type defaultObjectAccessControlProjectTeamPtrType DefaultObjectAccessControlProjectTeamArgs

func DefaultObjectAccessControlProjectTeamPtr(v *DefaultObjectAccessControlProjectTeamArgs) DefaultObjectAccessControlProjectTeamPtrInput {
	return (*defaultObjectAccessControlProjectTeamPtrType)(v)
}

func (*defaultObjectAccessControlProjectTeamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i *defaultObjectAccessControlProjectTeamPtrType) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return i.ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i *defaultObjectAccessControlProjectTeamPtrType) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamPtrOutput)
}

type DefaultObjectAccessControlProjectTeamOutput struct{ *pulumi.OutputState }

func (DefaultObjectAccessControlProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamOutput() DefaultObjectAccessControlProjectTeamOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return o.ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *DefaultObjectAccessControlProjectTeam {
		return &v
	}).(DefaultObjectAccessControlProjectTeamPtrOutput)
}
func (o DefaultObjectAccessControlProjectTeamOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

func (o DefaultObjectAccessControlProjectTeamOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type DefaultObjectAccessControlProjectTeamPtrOutput struct{ *pulumi.OutputState }

func (DefaultObjectAccessControlProjectTeamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) Elem() DefaultObjectAccessControlProjectTeamOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeam) DefaultObjectAccessControlProjectTeam { return *v }).(DefaultObjectAccessControlProjectTeamOutput)
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type DefaultObjectAccessControlProjectTeamState struct {
	ProjectNumber *string `pulumi:"projectNumber"`
	Team          *string `pulumi:"team"`
}

type DefaultObjectAccessControlProjectTeamStateInput interface {
	pulumi.Input

	ToDefaultObjectAccessControlProjectTeamStateOutput() DefaultObjectAccessControlProjectTeamStateOutput
	ToDefaultObjectAccessControlProjectTeamStateOutputWithContext(context.Context) DefaultObjectAccessControlProjectTeamStateOutput
}

type DefaultObjectAccessControlProjectTeamStateArgs struct {
	ProjectNumber pulumi.StringPtrInput `pulumi:"projectNumber"`
	Team          pulumi.StringPtrInput `pulumi:"team"`
}

func (DefaultObjectAccessControlProjectTeamStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeamState)(nil)).Elem()
}

func (i DefaultObjectAccessControlProjectTeamStateArgs) ToDefaultObjectAccessControlProjectTeamStateOutput() DefaultObjectAccessControlProjectTeamStateOutput {
	return i.ToDefaultObjectAccessControlProjectTeamStateOutputWithContext(context.Background())
}

func (i DefaultObjectAccessControlProjectTeamStateArgs) ToDefaultObjectAccessControlProjectTeamStateOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamStateOutput)
}

type DefaultObjectAccessControlProjectTeamStateOutput struct{ *pulumi.OutputState }

func (DefaultObjectAccessControlProjectTeamStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeamState)(nil)).Elem()
}

func (o DefaultObjectAccessControlProjectTeamStateOutput) ToDefaultObjectAccessControlProjectTeamStateOutput() DefaultObjectAccessControlProjectTeamStateOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamStateOutput) ToDefaultObjectAccessControlProjectTeamStateOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamStateOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamStateOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeamState) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

func (o DefaultObjectAccessControlProjectTeamStateOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeamState) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type ObjectAccessControlProjectTeam struct {
	ProjectNumber *string `pulumi:"projectNumber"`
	Team          *string `pulumi:"team"`
}

type ObjectAccessControlProjectTeamInput interface {
	pulumi.Input

	ToObjectAccessControlProjectTeamOutput() ObjectAccessControlProjectTeamOutput
	ToObjectAccessControlProjectTeamOutputWithContext(context.Context) ObjectAccessControlProjectTeamOutput
}

type ObjectAccessControlProjectTeamArgs struct {
	ProjectNumber pulumi.StringPtrInput `pulumi:"projectNumber"`
	Team          pulumi.StringPtrInput `pulumi:"team"`
}

func (ObjectAccessControlProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamOutput() ObjectAccessControlProjectTeamOutput {
	return i.ToObjectAccessControlProjectTeamOutputWithContext(context.Background())
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamOutput)
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return i.ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamOutput).ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx)
}

type ObjectAccessControlProjectTeamPtrInput interface {
	pulumi.Input

	ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput
	ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Context) ObjectAccessControlProjectTeamPtrOutput
}

type objectAccessControlProjectTeamPtrType ObjectAccessControlProjectTeamArgs

func ObjectAccessControlProjectTeamPtr(v *ObjectAccessControlProjectTeamArgs) ObjectAccessControlProjectTeamPtrInput {
	return (*objectAccessControlProjectTeamPtrType)(v)
}

func (*objectAccessControlProjectTeamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i *objectAccessControlProjectTeamPtrType) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return i.ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i *objectAccessControlProjectTeamPtrType) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamPtrOutput)
}

type ObjectAccessControlProjectTeamOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamOutput() ObjectAccessControlProjectTeamOutput {
	return o
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamOutput {
	return o
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return o.ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *ObjectAccessControlProjectTeam {
		return &v
	}).(ObjectAccessControlProjectTeamPtrOutput)
}
func (o ObjectAccessControlProjectTeamOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

func (o ObjectAccessControlProjectTeamOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type ObjectAccessControlProjectTeamPtrOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlProjectTeamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o ObjectAccessControlProjectTeamPtrOutput) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o ObjectAccessControlProjectTeamPtrOutput) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o ObjectAccessControlProjectTeamPtrOutput) Elem() ObjectAccessControlProjectTeamOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeam) ObjectAccessControlProjectTeam { return *v }).(ObjectAccessControlProjectTeamOutput)
}

func (o ObjectAccessControlProjectTeamPtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

func (o ObjectAccessControlProjectTeamPtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type ObjectAccessControlProjectTeamState struct {
	ProjectNumber *string `pulumi:"projectNumber"`
	Team          *string `pulumi:"team"`
}

type ObjectAccessControlProjectTeamStateInput interface {
	pulumi.Input

	ToObjectAccessControlProjectTeamStateOutput() ObjectAccessControlProjectTeamStateOutput
	ToObjectAccessControlProjectTeamStateOutputWithContext(context.Context) ObjectAccessControlProjectTeamStateOutput
}

type ObjectAccessControlProjectTeamStateArgs struct {
	ProjectNumber pulumi.StringPtrInput `pulumi:"projectNumber"`
	Team          pulumi.StringPtrInput `pulumi:"team"`
}

func (ObjectAccessControlProjectTeamStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeamState)(nil)).Elem()
}

func (i ObjectAccessControlProjectTeamStateArgs) ToObjectAccessControlProjectTeamStateOutput() ObjectAccessControlProjectTeamStateOutput {
	return i.ToObjectAccessControlProjectTeamStateOutputWithContext(context.Background())
}

func (i ObjectAccessControlProjectTeamStateArgs) ToObjectAccessControlProjectTeamStateOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamStateOutput)
}

type ObjectAccessControlProjectTeamStateOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlProjectTeamStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeamState)(nil)).Elem()
}

func (o ObjectAccessControlProjectTeamStateOutput) ToObjectAccessControlProjectTeamStateOutput() ObjectAccessControlProjectTeamStateOutput {
	return o
}

func (o ObjectAccessControlProjectTeamStateOutput) ToObjectAccessControlProjectTeamStateOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamStateOutput {
	return o
}

func (o ObjectAccessControlProjectTeamStateOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeamState) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

func (o ObjectAccessControlProjectTeamStateOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeamState) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type TransferJobSchedule struct {
	// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
	ScheduleEndDate *TransferJobScheduleScheduleEndDate `pulumi:"scheduleEndDate"`
	// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
	ScheduleStartDate TransferJobScheduleScheduleStartDate `pulumi:"scheduleStartDate"`
	// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
	StartTimeOfDay *TransferJobScheduleStartTimeOfDay `pulumi:"startTimeOfDay"`
}

type TransferJobScheduleInput interface {
	pulumi.Input

	ToTransferJobScheduleOutput() TransferJobScheduleOutput
	ToTransferJobScheduleOutputWithContext(context.Context) TransferJobScheduleOutput
}

type TransferJobScheduleArgs struct {
	// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
	ScheduleEndDate TransferJobScheduleScheduleEndDatePtrInput `pulumi:"scheduleEndDate"`
	// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
	ScheduleStartDate TransferJobScheduleScheduleStartDateInput `pulumi:"scheduleStartDate"`
	// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
	StartTimeOfDay TransferJobScheduleStartTimeOfDayPtrInput `pulumi:"startTimeOfDay"`
}

func (TransferJobScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobSchedule)(nil)).Elem()
}

func (i TransferJobScheduleArgs) ToTransferJobScheduleOutput() TransferJobScheduleOutput {
	return i.ToTransferJobScheduleOutputWithContext(context.Background())
}

func (i TransferJobScheduleArgs) ToTransferJobScheduleOutputWithContext(ctx context.Context) TransferJobScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleOutput)
}

func (i TransferJobScheduleArgs) ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput {
	return i.ToTransferJobSchedulePtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleArgs) ToTransferJobSchedulePtrOutputWithContext(ctx context.Context) TransferJobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleOutput).ToTransferJobSchedulePtrOutputWithContext(ctx)
}

type TransferJobSchedulePtrInput interface {
	pulumi.Input

	ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput
	ToTransferJobSchedulePtrOutputWithContext(context.Context) TransferJobSchedulePtrOutput
}

type transferJobSchedulePtrType TransferJobScheduleArgs

func TransferJobSchedulePtr(v *TransferJobScheduleArgs) TransferJobSchedulePtrInput {
	return (*transferJobSchedulePtrType)(v)
}

func (*transferJobSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobSchedule)(nil)).Elem()
}

func (i *transferJobSchedulePtrType) ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput {
	return i.ToTransferJobSchedulePtrOutputWithContext(context.Background())
}

func (i *transferJobSchedulePtrType) ToTransferJobSchedulePtrOutputWithContext(ctx context.Context) TransferJobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobSchedulePtrOutput)
}

type TransferJobScheduleOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobSchedule)(nil)).Elem()
}

func (o TransferJobScheduleOutput) ToTransferJobScheduleOutput() TransferJobScheduleOutput {
	return o
}

func (o TransferJobScheduleOutput) ToTransferJobScheduleOutputWithContext(ctx context.Context) TransferJobScheduleOutput {
	return o
}

func (o TransferJobScheduleOutput) ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput {
	return o.ToTransferJobSchedulePtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleOutput) ToTransferJobSchedulePtrOutputWithContext(ctx context.Context) TransferJobSchedulePtrOutput {
	return o.ApplyT(func(v TransferJobSchedule) *TransferJobSchedule {
		return &v
	}).(TransferJobSchedulePtrOutput)
}

// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
func (o TransferJobScheduleOutput) ScheduleEndDate() TransferJobScheduleScheduleEndDatePtrOutput {
	return o.ApplyT(func(v TransferJobSchedule) *TransferJobScheduleScheduleEndDate { return v.ScheduleEndDate }).(TransferJobScheduleScheduleEndDatePtrOutput)
}

// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
func (o TransferJobScheduleOutput) ScheduleStartDate() TransferJobScheduleScheduleStartDateOutput {
	return o.ApplyT(func(v TransferJobSchedule) TransferJobScheduleScheduleStartDate { return v.ScheduleStartDate }).(TransferJobScheduleScheduleStartDateOutput)
}

// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
func (o TransferJobScheduleOutput) StartTimeOfDay() TransferJobScheduleStartTimeOfDayPtrOutput {
	return o.ApplyT(func(v TransferJobSchedule) *TransferJobScheduleStartTimeOfDay { return v.StartTimeOfDay }).(TransferJobScheduleStartTimeOfDayPtrOutput)
}

type TransferJobSchedulePtrOutput struct{ *pulumi.OutputState }

func (TransferJobSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobSchedule)(nil)).Elem()
}

func (o TransferJobSchedulePtrOutput) ToTransferJobSchedulePtrOutput() TransferJobSchedulePtrOutput {
	return o
}

func (o TransferJobSchedulePtrOutput) ToTransferJobSchedulePtrOutputWithContext(ctx context.Context) TransferJobSchedulePtrOutput {
	return o
}

func (o TransferJobSchedulePtrOutput) Elem() TransferJobScheduleOutput {
	return o.ApplyT(func(v *TransferJobSchedule) TransferJobSchedule { return *v }).(TransferJobScheduleOutput)
}

// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
func (o TransferJobSchedulePtrOutput) ScheduleEndDate() TransferJobScheduleScheduleEndDatePtrOutput {
	return o.ApplyT(func(v TransferJobSchedule) *TransferJobScheduleScheduleEndDate { return v.ScheduleEndDate }).(TransferJobScheduleScheduleEndDatePtrOutput)
}

// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
func (o TransferJobSchedulePtrOutput) ScheduleStartDate() TransferJobScheduleScheduleStartDateOutput {
	return o.ApplyT(func(v TransferJobSchedule) TransferJobScheduleScheduleStartDate { return v.ScheduleStartDate }).(TransferJobScheduleScheduleStartDateOutput)
}

// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
func (o TransferJobSchedulePtrOutput) StartTimeOfDay() TransferJobScheduleStartTimeOfDayPtrOutput {
	return o.ApplyT(func(v TransferJobSchedule) *TransferJobScheduleStartTimeOfDay { return v.StartTimeOfDay }).(TransferJobScheduleStartTimeOfDayPtrOutput)
}

type TransferJobScheduleArgs struct {
	// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
	ScheduleEndDate *TransferJobScheduleScheduleEndDateArgs `pulumi:"scheduleEndDate"`
	// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
	ScheduleStartDate TransferJobScheduleScheduleStartDateArgs `pulumi:"scheduleStartDate"`
	// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
	StartTimeOfDay *TransferJobScheduleStartTimeOfDayArgs `pulumi:"startTimeOfDay"`
}

type TransferJobScheduleArgsInput interface {
	pulumi.Input

	ToTransferJobScheduleArgsOutput() TransferJobScheduleArgsOutput
	ToTransferJobScheduleArgsOutputWithContext(context.Context) TransferJobScheduleArgsOutput
}

type TransferJobScheduleArgsArgs struct {
	// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
	ScheduleEndDate TransferJobScheduleScheduleEndDateArgsPtrInput `pulumi:"scheduleEndDate"`
	// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
	ScheduleStartDate TransferJobScheduleScheduleStartDateArgsInput `pulumi:"scheduleStartDate"`
	// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
	StartTimeOfDay TransferJobScheduleStartTimeOfDayArgsPtrInput `pulumi:"startTimeOfDay"`
}

func (TransferJobScheduleArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleArgs)(nil)).Elem()
}

func (i TransferJobScheduleArgsArgs) ToTransferJobScheduleArgsOutput() TransferJobScheduleArgsOutput {
	return i.ToTransferJobScheduleArgsOutputWithContext(context.Background())
}

func (i TransferJobScheduleArgsArgs) ToTransferJobScheduleArgsOutputWithContext(ctx context.Context) TransferJobScheduleArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleArgsOutput)
}

func (i TransferJobScheduleArgsArgs) ToTransferJobScheduleArgsPtrOutput() TransferJobScheduleArgsPtrOutput {
	return i.ToTransferJobScheduleArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleArgsArgs) ToTransferJobScheduleArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleArgsOutput).ToTransferJobScheduleArgsPtrOutputWithContext(ctx)
}

type TransferJobScheduleArgsPtrInput interface {
	pulumi.Input

	ToTransferJobScheduleArgsPtrOutput() TransferJobScheduleArgsPtrOutput
	ToTransferJobScheduleArgsPtrOutputWithContext(context.Context) TransferJobScheduleArgsPtrOutput
}

type transferJobScheduleArgsPtrType TransferJobScheduleArgsArgs

func TransferJobScheduleArgsPtr(v *TransferJobScheduleArgsArgs) TransferJobScheduleArgsPtrInput {
	return (*transferJobScheduleArgsPtrType)(v)
}

func (*transferJobScheduleArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleArgs)(nil)).Elem()
}

func (i *transferJobScheduleArgsPtrType) ToTransferJobScheduleArgsPtrOutput() TransferJobScheduleArgsPtrOutput {
	return i.ToTransferJobScheduleArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleArgsPtrType) ToTransferJobScheduleArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleArgsPtrOutput)
}

type TransferJobScheduleArgsOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleArgs)(nil)).Elem()
}

func (o TransferJobScheduleArgsOutput) ToTransferJobScheduleArgsOutput() TransferJobScheduleArgsOutput {
	return o
}

func (o TransferJobScheduleArgsOutput) ToTransferJobScheduleArgsOutputWithContext(ctx context.Context) TransferJobScheduleArgsOutput {
	return o
}

func (o TransferJobScheduleArgsOutput) ToTransferJobScheduleArgsPtrOutput() TransferJobScheduleArgsPtrOutput {
	return o.ToTransferJobScheduleArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleArgsOutput) ToTransferJobScheduleArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleArgsPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleArgs) *TransferJobScheduleArgs {
		return &v
	}).(TransferJobScheduleArgsPtrOutput)
}

// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
func (o TransferJobScheduleArgsOutput) ScheduleEndDate() TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleArgs) *TransferJobScheduleScheduleEndDateArgs { return v.ScheduleEndDate }).(TransferJobScheduleScheduleEndDateArgsPtrOutput)
}

// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
func (o TransferJobScheduleArgsOutput) ScheduleStartDate() TransferJobScheduleScheduleStartDateArgsOutput {
	return o.ApplyT(func(v TransferJobScheduleArgs) TransferJobScheduleScheduleStartDateArgs { return v.ScheduleStartDate }).(TransferJobScheduleScheduleStartDateArgsOutput)
}

// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
func (o TransferJobScheduleArgsOutput) StartTimeOfDay() TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleArgs) *TransferJobScheduleStartTimeOfDayArgs { return v.StartTimeOfDay }).(TransferJobScheduleStartTimeOfDayArgsPtrOutput)
}

type TransferJobScheduleArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleArgs)(nil)).Elem()
}

func (o TransferJobScheduleArgsPtrOutput) ToTransferJobScheduleArgsPtrOutput() TransferJobScheduleArgsPtrOutput {
	return o
}

func (o TransferJobScheduleArgsPtrOutput) ToTransferJobScheduleArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleArgsPtrOutput {
	return o
}

func (o TransferJobScheduleArgsPtrOutput) Elem() TransferJobScheduleArgsOutput {
	return o.ApplyT(func(v *TransferJobScheduleArgs) TransferJobScheduleArgs { return *v }).(TransferJobScheduleArgsOutput)
}

// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
func (o TransferJobScheduleArgsPtrOutput) ScheduleEndDate() TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleArgs) *TransferJobScheduleScheduleEndDateArgs { return v.ScheduleEndDate }).(TransferJobScheduleScheduleEndDateArgsPtrOutput)
}

// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
func (o TransferJobScheduleArgsPtrOutput) ScheduleStartDate() TransferJobScheduleScheduleStartDateArgsOutput {
	return o.ApplyT(func(v TransferJobScheduleArgs) TransferJobScheduleScheduleStartDateArgs { return v.ScheduleStartDate }).(TransferJobScheduleScheduleStartDateArgsOutput)
}

// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
func (o TransferJobScheduleArgsPtrOutput) StartTimeOfDay() TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleArgs) *TransferJobScheduleStartTimeOfDayArgs { return v.StartTimeOfDay }).(TransferJobScheduleStartTimeOfDayArgsPtrOutput)
}

type TransferJobScheduleScheduleEndDate struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day int `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month int `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year int `pulumi:"year"`
}

type TransferJobScheduleScheduleEndDateInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleEndDateOutput() TransferJobScheduleScheduleEndDateOutput
	ToTransferJobScheduleScheduleEndDateOutputWithContext(context.Context) TransferJobScheduleScheduleEndDateOutput
}

type TransferJobScheduleScheduleEndDateArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year pulumi.IntInput `pulumi:"year"`
}

func (TransferJobScheduleScheduleEndDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleEndDate)(nil)).Elem()
}

func (i TransferJobScheduleScheduleEndDateArgs) ToTransferJobScheduleScheduleEndDateOutput() TransferJobScheduleScheduleEndDateOutput {
	return i.ToTransferJobScheduleScheduleEndDateOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleEndDateArgs) ToTransferJobScheduleScheduleEndDateOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleEndDateOutput)
}

func (i TransferJobScheduleScheduleEndDateArgs) ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput {
	return i.ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleEndDateArgs) ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleEndDateOutput).ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx)
}

type TransferJobScheduleScheduleEndDatePtrInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput
	ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(context.Context) TransferJobScheduleScheduleEndDatePtrOutput
}

type transferJobScheduleScheduleEndDatePtrType TransferJobScheduleScheduleEndDateArgs

func TransferJobScheduleScheduleEndDatePtr(v *TransferJobScheduleScheduleEndDateArgs) TransferJobScheduleScheduleEndDatePtrInput {
	return (*transferJobScheduleScheduleEndDatePtrType)(v)
}

func (*transferJobScheduleScheduleEndDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleScheduleEndDate)(nil)).Elem()
}

func (i *transferJobScheduleScheduleEndDatePtrType) ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput {
	return i.ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleScheduleEndDatePtrType) ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleEndDatePtrOutput)
}

type TransferJobScheduleScheduleEndDateOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleEndDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleEndDate)(nil)).Elem()
}

func (o TransferJobScheduleScheduleEndDateOutput) ToTransferJobScheduleScheduleEndDateOutput() TransferJobScheduleScheduleEndDateOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDateOutput) ToTransferJobScheduleScheduleEndDateOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDateOutput) ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput {
	return o.ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleScheduleEndDateOutput) ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDatePtrOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) *TransferJobScheduleScheduleEndDate {
		return &v
	}).(TransferJobScheduleScheduleEndDatePtrOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleEndDateOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleEndDateOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleEndDateOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleScheduleEndDatePtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleEndDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleScheduleEndDate)(nil)).Elem()
}

func (o TransferJobScheduleScheduleEndDatePtrOutput) ToTransferJobScheduleScheduleEndDatePtrOutput() TransferJobScheduleScheduleEndDatePtrOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDatePtrOutput) ToTransferJobScheduleScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDatePtrOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDatePtrOutput) Elem() TransferJobScheduleScheduleEndDateOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleEndDate) TransferJobScheduleScheduleEndDate { return *v }).(TransferJobScheduleScheduleEndDateOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleEndDatePtrOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleEndDatePtrOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleEndDatePtrOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDate) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleScheduleEndDateArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day int `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month int `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year int `pulumi:"year"`
}

type TransferJobScheduleScheduleEndDateArgsInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleEndDateArgsOutput() TransferJobScheduleScheduleEndDateArgsOutput
	ToTransferJobScheduleScheduleEndDateArgsOutputWithContext(context.Context) TransferJobScheduleScheduleEndDateArgsOutput
}

type TransferJobScheduleScheduleEndDateArgsArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year pulumi.IntInput `pulumi:"year"`
}

func (TransferJobScheduleScheduleEndDateArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleEndDateArgs)(nil)).Elem()
}

func (i TransferJobScheduleScheduleEndDateArgsArgs) ToTransferJobScheduleScheduleEndDateArgsOutput() TransferJobScheduleScheduleEndDateArgsOutput {
	return i.ToTransferJobScheduleScheduleEndDateArgsOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleEndDateArgsArgs) ToTransferJobScheduleScheduleEndDateArgsOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleEndDateArgsOutput)
}

func (i TransferJobScheduleScheduleEndDateArgsArgs) ToTransferJobScheduleScheduleEndDateArgsPtrOutput() TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return i.ToTransferJobScheduleScheduleEndDateArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleEndDateArgsArgs) ToTransferJobScheduleScheduleEndDateArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleEndDateArgsOutput).ToTransferJobScheduleScheduleEndDateArgsPtrOutputWithContext(ctx)
}

type TransferJobScheduleScheduleEndDateArgsPtrInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleEndDateArgsPtrOutput() TransferJobScheduleScheduleEndDateArgsPtrOutput
	ToTransferJobScheduleScheduleEndDateArgsPtrOutputWithContext(context.Context) TransferJobScheduleScheduleEndDateArgsPtrOutput
}

type transferJobScheduleScheduleEndDateArgsPtrType TransferJobScheduleScheduleEndDateArgsArgs

func TransferJobScheduleScheduleEndDateArgsPtr(v *TransferJobScheduleScheduleEndDateArgsArgs) TransferJobScheduleScheduleEndDateArgsPtrInput {
	return (*transferJobScheduleScheduleEndDateArgsPtrType)(v)
}

func (*transferJobScheduleScheduleEndDateArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleScheduleEndDateArgs)(nil)).Elem()
}

func (i *transferJobScheduleScheduleEndDateArgsPtrType) ToTransferJobScheduleScheduleEndDateArgsPtrOutput() TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return i.ToTransferJobScheduleScheduleEndDateArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleScheduleEndDateArgsPtrType) ToTransferJobScheduleScheduleEndDateArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleEndDateArgsPtrOutput)
}

type TransferJobScheduleScheduleEndDateArgsOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleEndDateArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleEndDateArgs)(nil)).Elem()
}

func (o TransferJobScheduleScheduleEndDateArgsOutput) ToTransferJobScheduleScheduleEndDateArgsOutput() TransferJobScheduleScheduleEndDateArgsOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDateArgsOutput) ToTransferJobScheduleScheduleEndDateArgsOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateArgsOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDateArgsOutput) ToTransferJobScheduleScheduleEndDateArgsPtrOutput() TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return o.ToTransferJobScheduleScheduleEndDateArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleScheduleEndDateArgsOutput) ToTransferJobScheduleScheduleEndDateArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDateArgs) *TransferJobScheduleScheduleEndDateArgs {
		return &v
	}).(TransferJobScheduleScheduleEndDateArgsPtrOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleEndDateArgsOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDateArgs) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleEndDateArgsOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDateArgs) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleEndDateArgsOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDateArgs) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleScheduleEndDateArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleEndDateArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleScheduleEndDateArgs)(nil)).Elem()
}

func (o TransferJobScheduleScheduleEndDateArgsPtrOutput) ToTransferJobScheduleScheduleEndDateArgsPtrOutput() TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDateArgsPtrOutput) ToTransferJobScheduleScheduleEndDateArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleScheduleEndDateArgsPtrOutput {
	return o
}

func (o TransferJobScheduleScheduleEndDateArgsPtrOutput) Elem() TransferJobScheduleScheduleEndDateArgsOutput {
	return o.ApplyT(func(v *TransferJobScheduleScheduleEndDateArgs) TransferJobScheduleScheduleEndDateArgs { return *v }).(TransferJobScheduleScheduleEndDateArgsOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleEndDateArgsPtrOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDateArgs) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleEndDateArgsPtrOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDateArgs) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleEndDateArgsPtrOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleEndDateArgs) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleScheduleStartDate struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day int `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month int `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year int `pulumi:"year"`
}

type TransferJobScheduleScheduleStartDateInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleStartDateOutput() TransferJobScheduleScheduleStartDateOutput
	ToTransferJobScheduleScheduleStartDateOutputWithContext(context.Context) TransferJobScheduleScheduleStartDateOutput
}

type TransferJobScheduleScheduleStartDateArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year pulumi.IntInput `pulumi:"year"`
}

func (TransferJobScheduleScheduleStartDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleStartDate)(nil)).Elem()
}

func (i TransferJobScheduleScheduleStartDateArgs) ToTransferJobScheduleScheduleStartDateOutput() TransferJobScheduleScheduleStartDateOutput {
	return i.ToTransferJobScheduleScheduleStartDateOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleStartDateArgs) ToTransferJobScheduleScheduleStartDateOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleStartDateOutput)
}

type TransferJobScheduleScheduleStartDateOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleStartDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleStartDate)(nil)).Elem()
}

func (o TransferJobScheduleScheduleStartDateOutput) ToTransferJobScheduleScheduleStartDateOutput() TransferJobScheduleScheduleStartDateOutput {
	return o
}

func (o TransferJobScheduleScheduleStartDateOutput) ToTransferJobScheduleScheduleStartDateOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDateOutput {
	return o
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleStartDateOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDate) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleStartDateOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDate) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleStartDateOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDate) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleScheduleStartDateArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day int `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month int `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year int `pulumi:"year"`
}

type TransferJobScheduleScheduleStartDateArgsInput interface {
	pulumi.Input

	ToTransferJobScheduleScheduleStartDateArgsOutput() TransferJobScheduleScheduleStartDateArgsOutput
	ToTransferJobScheduleScheduleStartDateArgsOutputWithContext(context.Context) TransferJobScheduleScheduleStartDateArgsOutput
}

type TransferJobScheduleScheduleStartDateArgsArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year pulumi.IntInput `pulumi:"year"`
}

func (TransferJobScheduleScheduleStartDateArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleStartDateArgs)(nil)).Elem()
}

func (i TransferJobScheduleScheduleStartDateArgsArgs) ToTransferJobScheduleScheduleStartDateArgsOutput() TransferJobScheduleScheduleStartDateArgsOutput {
	return i.ToTransferJobScheduleScheduleStartDateArgsOutputWithContext(context.Background())
}

func (i TransferJobScheduleScheduleStartDateArgsArgs) ToTransferJobScheduleScheduleStartDateArgsOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDateArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleScheduleStartDateArgsOutput)
}

type TransferJobScheduleScheduleStartDateArgsOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleScheduleStartDateArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleScheduleStartDateArgs)(nil)).Elem()
}

func (o TransferJobScheduleScheduleStartDateArgsOutput) ToTransferJobScheduleScheduleStartDateArgsOutput() TransferJobScheduleScheduleStartDateArgsOutput {
	return o
}

func (o TransferJobScheduleScheduleStartDateArgsOutput) ToTransferJobScheduleScheduleStartDateArgsOutputWithContext(ctx context.Context) TransferJobScheduleScheduleStartDateArgsOutput {
	return o
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleScheduleStartDateArgsOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDateArgs) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleScheduleStartDateArgsOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDateArgs) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleScheduleStartDateArgsOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleScheduleStartDateArgs) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleStartTimeOfDay struct {
	// Hours of day in 24 hour format. Should be from 0 to 23
	Hours int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds int `pulumi:"seconds"`
}

type TransferJobScheduleStartTimeOfDayInput interface {
	pulumi.Input

	ToTransferJobScheduleStartTimeOfDayOutput() TransferJobScheduleStartTimeOfDayOutput
	ToTransferJobScheduleStartTimeOfDayOutputWithContext(context.Context) TransferJobScheduleStartTimeOfDayOutput
}

type TransferJobScheduleStartTimeOfDayArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TransferJobScheduleStartTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStartTimeOfDay)(nil)).Elem()
}

func (i TransferJobScheduleStartTimeOfDayArgs) ToTransferJobScheduleStartTimeOfDayOutput() TransferJobScheduleStartTimeOfDayOutput {
	return i.ToTransferJobScheduleStartTimeOfDayOutputWithContext(context.Background())
}

func (i TransferJobScheduleStartTimeOfDayArgs) ToTransferJobScheduleStartTimeOfDayOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStartTimeOfDayOutput)
}

func (i TransferJobScheduleStartTimeOfDayArgs) ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput {
	return i.ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleStartTimeOfDayArgs) ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStartTimeOfDayOutput).ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx)
}

type TransferJobScheduleStartTimeOfDayPtrInput interface {
	pulumi.Input

	ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput
	ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(context.Context) TransferJobScheduleStartTimeOfDayPtrOutput
}

type transferJobScheduleStartTimeOfDayPtrType TransferJobScheduleStartTimeOfDayArgs

func TransferJobScheduleStartTimeOfDayPtr(v *TransferJobScheduleStartTimeOfDayArgs) TransferJobScheduleStartTimeOfDayPtrInput {
	return (*transferJobScheduleStartTimeOfDayPtrType)(v)
}

func (*transferJobScheduleStartTimeOfDayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStartTimeOfDay)(nil)).Elem()
}

func (i *transferJobScheduleStartTimeOfDayPtrType) ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput {
	return i.ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleStartTimeOfDayPtrType) ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStartTimeOfDayPtrOutput)
}

type TransferJobScheduleStartTimeOfDayOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStartTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStartTimeOfDay)(nil)).Elem()
}

func (o TransferJobScheduleStartTimeOfDayOutput) ToTransferJobScheduleStartTimeOfDayOutput() TransferJobScheduleStartTimeOfDayOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayOutput) ToTransferJobScheduleStartTimeOfDayOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayOutput) ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput {
	return o.ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleStartTimeOfDayOutput) ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) *TransferJobScheduleStartTimeOfDay {
		return &v
	}).(TransferJobScheduleStartTimeOfDayPtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23
func (o TransferJobScheduleStartTimeOfDayOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TransferJobScheduleStartTimeOfDayOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Seconds }).(pulumi.IntOutput)
}

type TransferJobScheduleStartTimeOfDayPtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStartTimeOfDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStartTimeOfDay)(nil)).Elem()
}

func (o TransferJobScheduleStartTimeOfDayPtrOutput) ToTransferJobScheduleStartTimeOfDayPtrOutput() TransferJobScheduleStartTimeOfDayPtrOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayPtrOutput) ToTransferJobScheduleStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayPtrOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayPtrOutput) Elem() TransferJobScheduleStartTimeOfDayOutput {
	return o.ApplyT(func(v *TransferJobScheduleStartTimeOfDay) TransferJobScheduleStartTimeOfDay { return *v }).(TransferJobScheduleStartTimeOfDayOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23
func (o TransferJobScheduleStartTimeOfDayPtrOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayPtrOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TransferJobScheduleStartTimeOfDayPtrOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayPtrOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDay) int { return v.Seconds }).(pulumi.IntOutput)
}

type TransferJobScheduleStartTimeOfDayArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23
	Hours int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds int `pulumi:"seconds"`
}

type TransferJobScheduleStartTimeOfDayArgsInput interface {
	pulumi.Input

	ToTransferJobScheduleStartTimeOfDayArgsOutput() TransferJobScheduleStartTimeOfDayArgsOutput
	ToTransferJobScheduleStartTimeOfDayArgsOutputWithContext(context.Context) TransferJobScheduleStartTimeOfDayArgsOutput
}

type TransferJobScheduleStartTimeOfDayArgsArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TransferJobScheduleStartTimeOfDayArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStartTimeOfDayArgs)(nil)).Elem()
}

func (i TransferJobScheduleStartTimeOfDayArgsArgs) ToTransferJobScheduleStartTimeOfDayArgsOutput() TransferJobScheduleStartTimeOfDayArgsOutput {
	return i.ToTransferJobScheduleStartTimeOfDayArgsOutputWithContext(context.Background())
}

func (i TransferJobScheduleStartTimeOfDayArgsArgs) ToTransferJobScheduleStartTimeOfDayArgsOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStartTimeOfDayArgsOutput)
}

func (i TransferJobScheduleStartTimeOfDayArgsArgs) ToTransferJobScheduleStartTimeOfDayArgsPtrOutput() TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return i.ToTransferJobScheduleStartTimeOfDayArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleStartTimeOfDayArgsArgs) ToTransferJobScheduleStartTimeOfDayArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStartTimeOfDayArgsOutput).ToTransferJobScheduleStartTimeOfDayArgsPtrOutputWithContext(ctx)
}

type TransferJobScheduleStartTimeOfDayArgsPtrInput interface {
	pulumi.Input

	ToTransferJobScheduleStartTimeOfDayArgsPtrOutput() TransferJobScheduleStartTimeOfDayArgsPtrOutput
	ToTransferJobScheduleStartTimeOfDayArgsPtrOutputWithContext(context.Context) TransferJobScheduleStartTimeOfDayArgsPtrOutput
}

type transferJobScheduleStartTimeOfDayArgsPtrType TransferJobScheduleStartTimeOfDayArgsArgs

func TransferJobScheduleStartTimeOfDayArgsPtr(v *TransferJobScheduleStartTimeOfDayArgsArgs) TransferJobScheduleStartTimeOfDayArgsPtrInput {
	return (*transferJobScheduleStartTimeOfDayArgsPtrType)(v)
}

func (*transferJobScheduleStartTimeOfDayArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStartTimeOfDayArgs)(nil)).Elem()
}

func (i *transferJobScheduleStartTimeOfDayArgsPtrType) ToTransferJobScheduleStartTimeOfDayArgsPtrOutput() TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return i.ToTransferJobScheduleStartTimeOfDayArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleStartTimeOfDayArgsPtrType) ToTransferJobScheduleStartTimeOfDayArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStartTimeOfDayArgsPtrOutput)
}

type TransferJobScheduleStartTimeOfDayArgsOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStartTimeOfDayArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStartTimeOfDayArgs)(nil)).Elem()
}

func (o TransferJobScheduleStartTimeOfDayArgsOutput) ToTransferJobScheduleStartTimeOfDayArgsOutput() TransferJobScheduleStartTimeOfDayArgsOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayArgsOutput) ToTransferJobScheduleStartTimeOfDayArgsOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayArgsOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayArgsOutput) ToTransferJobScheduleStartTimeOfDayArgsPtrOutput() TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return o.ToTransferJobScheduleStartTimeOfDayArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleStartTimeOfDayArgsOutput) ToTransferJobScheduleStartTimeOfDayArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDayArgs) *TransferJobScheduleStartTimeOfDayArgs {
		return &v
	}).(TransferJobScheduleStartTimeOfDayArgsPtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23
func (o TransferJobScheduleStartTimeOfDayArgsOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDayArgs) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayArgsOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDayArgs) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TransferJobScheduleStartTimeOfDayArgsOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDayArgs) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayArgsOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDayArgs) int { return v.Seconds }).(pulumi.IntOutput)
}

type TransferJobScheduleStartTimeOfDayArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStartTimeOfDayArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStartTimeOfDayArgs)(nil)).Elem()
}

func (o TransferJobScheduleStartTimeOfDayArgsPtrOutput) ToTransferJobScheduleStartTimeOfDayArgsPtrOutput() TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayArgsPtrOutput) ToTransferJobScheduleStartTimeOfDayArgsPtrOutputWithContext(ctx context.Context) TransferJobScheduleStartTimeOfDayArgsPtrOutput {
	return o
}

func (o TransferJobScheduleStartTimeOfDayArgsPtrOutput) Elem() TransferJobScheduleStartTimeOfDayArgsOutput {
	return o.ApplyT(func(v *TransferJobScheduleStartTimeOfDayArgs) TransferJobScheduleStartTimeOfDayArgs { return *v }).(TransferJobScheduleStartTimeOfDayArgsOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23
func (o TransferJobScheduleStartTimeOfDayArgsPtrOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDayArgs) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayArgsPtrOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDayArgs) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TransferJobScheduleStartTimeOfDayArgsPtrOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDayArgs) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o TransferJobScheduleStartTimeOfDayArgsPtrOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStartTimeOfDayArgs) int { return v.Seconds }).(pulumi.IntOutput)
}

type TransferJobScheduleState struct {
	// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
	ScheduleEndDate *TransferJobScheduleStateScheduleEndDate `pulumi:"scheduleEndDate"`
	// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
	ScheduleStartDate TransferJobScheduleStateScheduleStartDate `pulumi:"scheduleStartDate"`
	// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
	StartTimeOfDay *TransferJobScheduleStateStartTimeOfDay `pulumi:"startTimeOfDay"`
}

type TransferJobScheduleStateInput interface {
	pulumi.Input

	ToTransferJobScheduleStateOutput() TransferJobScheduleStateOutput
	ToTransferJobScheduleStateOutputWithContext(context.Context) TransferJobScheduleStateOutput
}

type TransferJobScheduleStateArgs struct {
	// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
	ScheduleEndDate TransferJobScheduleStateScheduleEndDatePtrInput `pulumi:"scheduleEndDate"`
	// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
	ScheduleStartDate TransferJobScheduleStateScheduleStartDateInput `pulumi:"scheduleStartDate"`
	// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
	StartTimeOfDay TransferJobScheduleStateStartTimeOfDayPtrInput `pulumi:"startTimeOfDay"`
}

func (TransferJobScheduleStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleState)(nil)).Elem()
}

func (i TransferJobScheduleStateArgs) ToTransferJobScheduleStateOutput() TransferJobScheduleStateOutput {
	return i.ToTransferJobScheduleStateOutputWithContext(context.Background())
}

func (i TransferJobScheduleStateArgs) ToTransferJobScheduleStateOutputWithContext(ctx context.Context) TransferJobScheduleStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStateOutput)
}

type TransferJobScheduleStateOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleState)(nil)).Elem()
}

func (o TransferJobScheduleStateOutput) ToTransferJobScheduleStateOutput() TransferJobScheduleStateOutput {
	return o
}

func (o TransferJobScheduleStateOutput) ToTransferJobScheduleStateOutputWithContext(ctx context.Context) TransferJobScheduleStateOutput {
	return o
}

// The last day the recurring transfer will be run. If `scheduleEndDate` is the same as `scheduleStartDate`, the transfer will be executed only once. Structure documented below.
func (o TransferJobScheduleStateOutput) ScheduleEndDate() TransferJobScheduleStateScheduleEndDatePtrOutput {
	return o.ApplyT(func(v TransferJobScheduleState) *TransferJobScheduleStateScheduleEndDate { return v.ScheduleEndDate }).(TransferJobScheduleStateScheduleEndDatePtrOutput)
}

// The first day the recurring transfer is scheduled to run. If `scheduleStartDate` is in the past, the transfer will run for the first time on the following day. Structure documented below.
func (o TransferJobScheduleStateOutput) ScheduleStartDate() TransferJobScheduleStateScheduleStartDateOutput {
	return o.ApplyT(func(v TransferJobScheduleState) TransferJobScheduleStateScheduleStartDate {
		return v.ScheduleStartDate
	}).(TransferJobScheduleStateScheduleStartDateOutput)
}

// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
func (o TransferJobScheduleStateOutput) StartTimeOfDay() TransferJobScheduleStateStartTimeOfDayPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleState) *TransferJobScheduleStateStartTimeOfDay { return v.StartTimeOfDay }).(TransferJobScheduleStateStartTimeOfDayPtrOutput)
}

type TransferJobScheduleStateScheduleEndDate struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day int `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month int `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year int `pulumi:"year"`
}

type TransferJobScheduleStateScheduleEndDateInput interface {
	pulumi.Input

	ToTransferJobScheduleStateScheduleEndDateOutput() TransferJobScheduleStateScheduleEndDateOutput
	ToTransferJobScheduleStateScheduleEndDateOutputWithContext(context.Context) TransferJobScheduleStateScheduleEndDateOutput
}

type TransferJobScheduleStateScheduleEndDateArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year pulumi.IntInput `pulumi:"year"`
}

func (TransferJobScheduleStateScheduleEndDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStateScheduleEndDate)(nil)).Elem()
}

func (i TransferJobScheduleStateScheduleEndDateArgs) ToTransferJobScheduleStateScheduleEndDateOutput() TransferJobScheduleStateScheduleEndDateOutput {
	return i.ToTransferJobScheduleStateScheduleEndDateOutputWithContext(context.Background())
}

func (i TransferJobScheduleStateScheduleEndDateArgs) ToTransferJobScheduleStateScheduleEndDateOutputWithContext(ctx context.Context) TransferJobScheduleStateScheduleEndDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStateScheduleEndDateOutput)
}

func (i TransferJobScheduleStateScheduleEndDateArgs) ToTransferJobScheduleStateScheduleEndDatePtrOutput() TransferJobScheduleStateScheduleEndDatePtrOutput {
	return i.ToTransferJobScheduleStateScheduleEndDatePtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleStateScheduleEndDateArgs) ToTransferJobScheduleStateScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleStateScheduleEndDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStateScheduleEndDateOutput).ToTransferJobScheduleStateScheduleEndDatePtrOutputWithContext(ctx)
}

type TransferJobScheduleStateScheduleEndDatePtrInput interface {
	pulumi.Input

	ToTransferJobScheduleStateScheduleEndDatePtrOutput() TransferJobScheduleStateScheduleEndDatePtrOutput
	ToTransferJobScheduleStateScheduleEndDatePtrOutputWithContext(context.Context) TransferJobScheduleStateScheduleEndDatePtrOutput
}

type transferJobScheduleStateScheduleEndDatePtrType TransferJobScheduleStateScheduleEndDateArgs

func TransferJobScheduleStateScheduleEndDatePtr(v *TransferJobScheduleStateScheduleEndDateArgs) TransferJobScheduleStateScheduleEndDatePtrInput {
	return (*transferJobScheduleStateScheduleEndDatePtrType)(v)
}

func (*transferJobScheduleStateScheduleEndDatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStateScheduleEndDate)(nil)).Elem()
}

func (i *transferJobScheduleStateScheduleEndDatePtrType) ToTransferJobScheduleStateScheduleEndDatePtrOutput() TransferJobScheduleStateScheduleEndDatePtrOutput {
	return i.ToTransferJobScheduleStateScheduleEndDatePtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleStateScheduleEndDatePtrType) ToTransferJobScheduleStateScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleStateScheduleEndDatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStateScheduleEndDatePtrOutput)
}

type TransferJobScheduleStateScheduleEndDateOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStateScheduleEndDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStateScheduleEndDate)(nil)).Elem()
}

func (o TransferJobScheduleStateScheduleEndDateOutput) ToTransferJobScheduleStateScheduleEndDateOutput() TransferJobScheduleStateScheduleEndDateOutput {
	return o
}

func (o TransferJobScheduleStateScheduleEndDateOutput) ToTransferJobScheduleStateScheduleEndDateOutputWithContext(ctx context.Context) TransferJobScheduleStateScheduleEndDateOutput {
	return o
}

func (o TransferJobScheduleStateScheduleEndDateOutput) ToTransferJobScheduleStateScheduleEndDatePtrOutput() TransferJobScheduleStateScheduleEndDatePtrOutput {
	return o.ToTransferJobScheduleStateScheduleEndDatePtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleStateScheduleEndDateOutput) ToTransferJobScheduleStateScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleStateScheduleEndDatePtrOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleEndDate) *TransferJobScheduleStateScheduleEndDate {
		return &v
	}).(TransferJobScheduleStateScheduleEndDatePtrOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleStateScheduleEndDateOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleEndDate) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleStateScheduleEndDateOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleEndDate) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleStateScheduleEndDateOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleEndDate) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleStateScheduleEndDatePtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStateScheduleEndDatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStateScheduleEndDate)(nil)).Elem()
}

func (o TransferJobScheduleStateScheduleEndDatePtrOutput) ToTransferJobScheduleStateScheduleEndDatePtrOutput() TransferJobScheduleStateScheduleEndDatePtrOutput {
	return o
}

func (o TransferJobScheduleStateScheduleEndDatePtrOutput) ToTransferJobScheduleStateScheduleEndDatePtrOutputWithContext(ctx context.Context) TransferJobScheduleStateScheduleEndDatePtrOutput {
	return o
}

func (o TransferJobScheduleStateScheduleEndDatePtrOutput) Elem() TransferJobScheduleStateScheduleEndDateOutput {
	return o.ApplyT(func(v *TransferJobScheduleStateScheduleEndDate) TransferJobScheduleStateScheduleEndDate { return *v }).(TransferJobScheduleStateScheduleEndDateOutput)
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleStateScheduleEndDatePtrOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleEndDate) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleStateScheduleEndDatePtrOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleEndDate) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleStateScheduleEndDatePtrOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleEndDate) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleStateScheduleStartDate struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day int `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month int `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year int `pulumi:"year"`
}

type TransferJobScheduleStateScheduleStartDateInput interface {
	pulumi.Input

	ToTransferJobScheduleStateScheduleStartDateOutput() TransferJobScheduleStateScheduleStartDateOutput
	ToTransferJobScheduleStateScheduleStartDateOutputWithContext(context.Context) TransferJobScheduleStateScheduleStartDateOutput
}

type TransferJobScheduleStateScheduleStartDateArgs struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of year. Must be from 1 to 12.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of date. Must be from 1 to 9999.
	Year pulumi.IntInput `pulumi:"year"`
}

func (TransferJobScheduleStateScheduleStartDateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStateScheduleStartDate)(nil)).Elem()
}

func (i TransferJobScheduleStateScheduleStartDateArgs) ToTransferJobScheduleStateScheduleStartDateOutput() TransferJobScheduleStateScheduleStartDateOutput {
	return i.ToTransferJobScheduleStateScheduleStartDateOutputWithContext(context.Background())
}

func (i TransferJobScheduleStateScheduleStartDateArgs) ToTransferJobScheduleStateScheduleStartDateOutputWithContext(ctx context.Context) TransferJobScheduleStateScheduleStartDateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStateScheduleStartDateOutput)
}

type TransferJobScheduleStateScheduleStartDateOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStateScheduleStartDateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStateScheduleStartDate)(nil)).Elem()
}

func (o TransferJobScheduleStateScheduleStartDateOutput) ToTransferJobScheduleStateScheduleStartDateOutput() TransferJobScheduleStateScheduleStartDateOutput {
	return o
}

func (o TransferJobScheduleStateScheduleStartDateOutput) ToTransferJobScheduleStateScheduleStartDateOutputWithContext(ctx context.Context) TransferJobScheduleStateScheduleStartDateOutput {
	return o
}

// Day of month. Must be from 1 to 31 and valid for the year and month.
func (o TransferJobScheduleStateScheduleStartDateOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleStartDate) int { return v.Day }).(pulumi.IntOutput)
}

// Month of year. Must be from 1 to 12.
func (o TransferJobScheduleStateScheduleStartDateOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleStartDate) int { return v.Month }).(pulumi.IntOutput)
}

// Year of date. Must be from 1 to 9999.
func (o TransferJobScheduleStateScheduleStartDateOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateScheduleStartDate) int { return v.Year }).(pulumi.IntOutput)
}

type TransferJobScheduleStateStartTimeOfDay struct {
	// Hours of day in 24 hour format. Should be from 0 to 23
	Hours int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds int `pulumi:"seconds"`
}

type TransferJobScheduleStateStartTimeOfDayInput interface {
	pulumi.Input

	ToTransferJobScheduleStateStartTimeOfDayOutput() TransferJobScheduleStateStartTimeOfDayOutput
	ToTransferJobScheduleStateStartTimeOfDayOutputWithContext(context.Context) TransferJobScheduleStateStartTimeOfDayOutput
}

type TransferJobScheduleStateStartTimeOfDayArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23
	Hours pulumi.IntInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (TransferJobScheduleStateStartTimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStateStartTimeOfDay)(nil)).Elem()
}

func (i TransferJobScheduleStateStartTimeOfDayArgs) ToTransferJobScheduleStateStartTimeOfDayOutput() TransferJobScheduleStateStartTimeOfDayOutput {
	return i.ToTransferJobScheduleStateStartTimeOfDayOutputWithContext(context.Background())
}

func (i TransferJobScheduleStateStartTimeOfDayArgs) ToTransferJobScheduleStateStartTimeOfDayOutputWithContext(ctx context.Context) TransferJobScheduleStateStartTimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStateStartTimeOfDayOutput)
}

func (i TransferJobScheduleStateStartTimeOfDayArgs) ToTransferJobScheduleStateStartTimeOfDayPtrOutput() TransferJobScheduleStateStartTimeOfDayPtrOutput {
	return i.ToTransferJobScheduleStateStartTimeOfDayPtrOutputWithContext(context.Background())
}

func (i TransferJobScheduleStateStartTimeOfDayArgs) ToTransferJobScheduleStateStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStateStartTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStateStartTimeOfDayOutput).ToTransferJobScheduleStateStartTimeOfDayPtrOutputWithContext(ctx)
}

type TransferJobScheduleStateStartTimeOfDayPtrInput interface {
	pulumi.Input

	ToTransferJobScheduleStateStartTimeOfDayPtrOutput() TransferJobScheduleStateStartTimeOfDayPtrOutput
	ToTransferJobScheduleStateStartTimeOfDayPtrOutputWithContext(context.Context) TransferJobScheduleStateStartTimeOfDayPtrOutput
}

type transferJobScheduleStateStartTimeOfDayPtrType TransferJobScheduleStateStartTimeOfDayArgs

func TransferJobScheduleStateStartTimeOfDayPtr(v *TransferJobScheduleStateStartTimeOfDayArgs) TransferJobScheduleStateStartTimeOfDayPtrInput {
	return (*transferJobScheduleStateStartTimeOfDayPtrType)(v)
}

func (*transferJobScheduleStateStartTimeOfDayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStateStartTimeOfDay)(nil)).Elem()
}

func (i *transferJobScheduleStateStartTimeOfDayPtrType) ToTransferJobScheduleStateStartTimeOfDayPtrOutput() TransferJobScheduleStateStartTimeOfDayPtrOutput {
	return i.ToTransferJobScheduleStateStartTimeOfDayPtrOutputWithContext(context.Background())
}

func (i *transferJobScheduleStateStartTimeOfDayPtrType) ToTransferJobScheduleStateStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStateStartTimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobScheduleStateStartTimeOfDayPtrOutput)
}

type TransferJobScheduleStateStartTimeOfDayOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStateStartTimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobScheduleStateStartTimeOfDay)(nil)).Elem()
}

func (o TransferJobScheduleStateStartTimeOfDayOutput) ToTransferJobScheduleStateStartTimeOfDayOutput() TransferJobScheduleStateStartTimeOfDayOutput {
	return o
}

func (o TransferJobScheduleStateStartTimeOfDayOutput) ToTransferJobScheduleStateStartTimeOfDayOutputWithContext(ctx context.Context) TransferJobScheduleStateStartTimeOfDayOutput {
	return o
}

func (o TransferJobScheduleStateStartTimeOfDayOutput) ToTransferJobScheduleStateStartTimeOfDayPtrOutput() TransferJobScheduleStateStartTimeOfDayPtrOutput {
	return o.ToTransferJobScheduleStateStartTimeOfDayPtrOutputWithContext(context.Background())
}

func (o TransferJobScheduleStateStartTimeOfDayOutput) ToTransferJobScheduleStateStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStateStartTimeOfDayPtrOutput {
	return o.ApplyT(func(v TransferJobScheduleStateStartTimeOfDay) *TransferJobScheduleStateStartTimeOfDay {
		return &v
	}).(TransferJobScheduleStateStartTimeOfDayPtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23
func (o TransferJobScheduleStateStartTimeOfDayOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateStartTimeOfDay) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TransferJobScheduleStateStartTimeOfDayOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateStartTimeOfDay) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TransferJobScheduleStateStartTimeOfDayOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateStartTimeOfDay) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o TransferJobScheduleStateStartTimeOfDayOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateStartTimeOfDay) int { return v.Seconds }).(pulumi.IntOutput)
}

type TransferJobScheduleStateStartTimeOfDayPtrOutput struct{ *pulumi.OutputState }

func (TransferJobScheduleStateStartTimeOfDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobScheduleStateStartTimeOfDay)(nil)).Elem()
}

func (o TransferJobScheduleStateStartTimeOfDayPtrOutput) ToTransferJobScheduleStateStartTimeOfDayPtrOutput() TransferJobScheduleStateStartTimeOfDayPtrOutput {
	return o
}

func (o TransferJobScheduleStateStartTimeOfDayPtrOutput) ToTransferJobScheduleStateStartTimeOfDayPtrOutputWithContext(ctx context.Context) TransferJobScheduleStateStartTimeOfDayPtrOutput {
	return o
}

func (o TransferJobScheduleStateStartTimeOfDayPtrOutput) Elem() TransferJobScheduleStateStartTimeOfDayOutput {
	return o.ApplyT(func(v *TransferJobScheduleStateStartTimeOfDay) TransferJobScheduleStateStartTimeOfDay { return *v }).(TransferJobScheduleStateStartTimeOfDayOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23
func (o TransferJobScheduleStateStartTimeOfDayPtrOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateStartTimeOfDay) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TransferJobScheduleStateStartTimeOfDayPtrOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateStartTimeOfDay) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TransferJobScheduleStateStartTimeOfDayPtrOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateStartTimeOfDay) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59.
func (o TransferJobScheduleStateStartTimeOfDayPtrOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TransferJobScheduleStateStartTimeOfDay) int { return v.Seconds }).(pulumi.IntOutput)
}

type TransferJobTransferSpec struct {
	// An AWS S3 data source. Structure documented below.
	AwsS3DataSource *TransferJobTransferSpecAwsS3DataSource `pulumi:"awsS3DataSource"`
	// A Google Cloud Storage data sink. Structure documented below.
	GcsDataSink *TransferJobTransferSpecGcsDataSink `pulumi:"gcsDataSink"`
	// A Google Cloud Storage data source. Structure documented below.
	GcsDataSource *TransferJobTransferSpecGcsDataSource `pulumi:"gcsDataSource"`
	// An HTTP URL data source. Structure documented below.
	HttpDataSource *TransferJobTransferSpecHttpDataSource `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
	ObjectConditions *TransferJobTransferSpecObjectConditions `pulumi:"objectConditions"`
	// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
	TransferOptions *TransferJobTransferSpecTransferOptions `pulumi:"transferOptions"`
}

type TransferJobTransferSpecInput interface {
	pulumi.Input

	ToTransferJobTransferSpecOutput() TransferJobTransferSpecOutput
	ToTransferJobTransferSpecOutputWithContext(context.Context) TransferJobTransferSpecOutput
}

type TransferJobTransferSpecArgs struct {
	// An AWS S3 data source. Structure documented below.
	AwsS3DataSource TransferJobTransferSpecAwsS3DataSourcePtrInput `pulumi:"awsS3DataSource"`
	// A Google Cloud Storage data sink. Structure documented below.
	GcsDataSink TransferJobTransferSpecGcsDataSinkPtrInput `pulumi:"gcsDataSink"`
	// A Google Cloud Storage data source. Structure documented below.
	GcsDataSource TransferJobTransferSpecGcsDataSourcePtrInput `pulumi:"gcsDataSource"`
	// An HTTP URL data source. Structure documented below.
	HttpDataSource TransferJobTransferSpecHttpDataSourcePtrInput `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
	ObjectConditions TransferJobTransferSpecObjectConditionsPtrInput `pulumi:"objectConditions"`
	// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
	TransferOptions TransferJobTransferSpecTransferOptionsPtrInput `pulumi:"transferOptions"`
}

func (TransferJobTransferSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpec)(nil)).Elem()
}

func (i TransferJobTransferSpecArgs) ToTransferJobTransferSpecOutput() TransferJobTransferSpecOutput {
	return i.ToTransferJobTransferSpecOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecArgs) ToTransferJobTransferSpecOutputWithContext(ctx context.Context) TransferJobTransferSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecOutput)
}

func (i TransferJobTransferSpecArgs) ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput {
	return i.ToTransferJobTransferSpecPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecArgs) ToTransferJobTransferSpecPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecOutput).ToTransferJobTransferSpecPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput
	ToTransferJobTransferSpecPtrOutputWithContext(context.Context) TransferJobTransferSpecPtrOutput
}

type transferJobTransferSpecPtrType TransferJobTransferSpecArgs

func TransferJobTransferSpecPtr(v *TransferJobTransferSpecArgs) TransferJobTransferSpecPtrInput {
	return (*transferJobTransferSpecPtrType)(v)
}

func (*transferJobTransferSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpec)(nil)).Elem()
}

func (i *transferJobTransferSpecPtrType) ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput {
	return i.ToTransferJobTransferSpecPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecPtrType) ToTransferJobTransferSpecPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecPtrOutput)
}

type TransferJobTransferSpecOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpec)(nil)).Elem()
}

func (o TransferJobTransferSpecOutput) ToTransferJobTransferSpecOutput() TransferJobTransferSpecOutput {
	return o
}

func (o TransferJobTransferSpecOutput) ToTransferJobTransferSpecOutputWithContext(ctx context.Context) TransferJobTransferSpecOutput {
	return o
}

func (o TransferJobTransferSpecOutput) ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput {
	return o.ToTransferJobTransferSpecPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecOutput) ToTransferJobTransferSpecPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpec {
		return &v
	}).(TransferJobTransferSpecPtrOutput)
}

// An AWS S3 data source. Structure documented below.
func (o TransferJobTransferSpecOutput) AwsS3DataSource() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecAwsS3DataSource { return v.AwsS3DataSource }).(TransferJobTransferSpecAwsS3DataSourcePtrOutput)
}

// A Google Cloud Storage data sink. Structure documented below.
func (o TransferJobTransferSpecOutput) GcsDataSink() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecGcsDataSink { return v.GcsDataSink }).(TransferJobTransferSpecGcsDataSinkPtrOutput)
}

// A Google Cloud Storage data source. Structure documented below.
func (o TransferJobTransferSpecOutput) GcsDataSource() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecGcsDataSource { return v.GcsDataSource }).(TransferJobTransferSpecGcsDataSourcePtrOutput)
}

// An HTTP URL data source. Structure documented below.
func (o TransferJobTransferSpecOutput) HttpDataSource() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecHttpDataSource { return v.HttpDataSource }).(TransferJobTransferSpecHttpDataSourcePtrOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
func (o TransferJobTransferSpecOutput) ObjectConditions() TransferJobTransferSpecObjectConditionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecObjectConditions { return v.ObjectConditions }).(TransferJobTransferSpecObjectConditionsPtrOutput)
}

// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
func (o TransferJobTransferSpecOutput) TransferOptions() TransferJobTransferSpecTransferOptionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecTransferOptions { return v.TransferOptions }).(TransferJobTransferSpecTransferOptionsPtrOutput)
}

type TransferJobTransferSpecPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpec)(nil)).Elem()
}

func (o TransferJobTransferSpecPtrOutput) ToTransferJobTransferSpecPtrOutput() TransferJobTransferSpecPtrOutput {
	return o
}

func (o TransferJobTransferSpecPtrOutput) ToTransferJobTransferSpecPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecPtrOutput {
	return o
}

func (o TransferJobTransferSpecPtrOutput) Elem() TransferJobTransferSpecOutput {
	return o.ApplyT(func(v *TransferJobTransferSpec) TransferJobTransferSpec { return *v }).(TransferJobTransferSpecOutput)
}

// An AWS S3 data source. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) AwsS3DataSource() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecAwsS3DataSource { return v.AwsS3DataSource }).(TransferJobTransferSpecAwsS3DataSourcePtrOutput)
}

// A Google Cloud Storage data sink. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) GcsDataSink() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecGcsDataSink { return v.GcsDataSink }).(TransferJobTransferSpecGcsDataSinkPtrOutput)
}

// A Google Cloud Storage data source. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) GcsDataSource() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecGcsDataSource { return v.GcsDataSource }).(TransferJobTransferSpecGcsDataSourcePtrOutput)
}

// An HTTP URL data source. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) HttpDataSource() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecHttpDataSource { return v.HttpDataSource }).(TransferJobTransferSpecHttpDataSourcePtrOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) ObjectConditions() TransferJobTransferSpecObjectConditionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecObjectConditions { return v.ObjectConditions }).(TransferJobTransferSpecObjectConditionsPtrOutput)
}

// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
func (o TransferJobTransferSpecPtrOutput) TransferOptions() TransferJobTransferSpecTransferOptionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpec) *TransferJobTransferSpecTransferOptions { return v.TransferOptions }).(TransferJobTransferSpecTransferOptionsPtrOutput)
}

type TransferJobTransferSpecArgs struct {
	// An AWS S3 data source. Structure documented below.
	AwsS3DataSource *TransferJobTransferSpecAwsS3DataSourceArgs `pulumi:"awsS3DataSource"`
	// A Google Cloud Storage data sink. Structure documented below.
	GcsDataSink *TransferJobTransferSpecGcsDataSinkArgs `pulumi:"gcsDataSink"`
	// A Google Cloud Storage data source. Structure documented below.
	GcsDataSource *TransferJobTransferSpecGcsDataSourceArgs `pulumi:"gcsDataSource"`
	// An HTTP URL data source. Structure documented below.
	HttpDataSource *TransferJobTransferSpecHttpDataSourceArgs `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
	ObjectConditions *TransferJobTransferSpecObjectConditionsArgs `pulumi:"objectConditions"`
	// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
	TransferOptions *TransferJobTransferSpecTransferOptionsArgs `pulumi:"transferOptions"`
}

type TransferJobTransferSpecArgsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecArgsOutput() TransferJobTransferSpecArgsOutput
	ToTransferJobTransferSpecArgsOutputWithContext(context.Context) TransferJobTransferSpecArgsOutput
}

type TransferJobTransferSpecArgsArgs struct {
	// An AWS S3 data source. Structure documented below.
	AwsS3DataSource TransferJobTransferSpecAwsS3DataSourceArgsPtrInput `pulumi:"awsS3DataSource"`
	// A Google Cloud Storage data sink. Structure documented below.
	GcsDataSink TransferJobTransferSpecGcsDataSinkArgsPtrInput `pulumi:"gcsDataSink"`
	// A Google Cloud Storage data source. Structure documented below.
	GcsDataSource TransferJobTransferSpecGcsDataSourceArgsPtrInput `pulumi:"gcsDataSource"`
	// An HTTP URL data source. Structure documented below.
	HttpDataSource TransferJobTransferSpecHttpDataSourceArgsPtrInput `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
	ObjectConditions TransferJobTransferSpecObjectConditionsArgsPtrInput `pulumi:"objectConditions"`
	// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
	TransferOptions TransferJobTransferSpecTransferOptionsArgsPtrInput `pulumi:"transferOptions"`
}

func (TransferJobTransferSpecArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecArgs)(nil)).Elem()
}

func (i TransferJobTransferSpecArgsArgs) ToTransferJobTransferSpecArgsOutput() TransferJobTransferSpecArgsOutput {
	return i.ToTransferJobTransferSpecArgsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecArgsArgs) ToTransferJobTransferSpecArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecArgsOutput)
}

func (i TransferJobTransferSpecArgsArgs) ToTransferJobTransferSpecArgsPtrOutput() TransferJobTransferSpecArgsPtrOutput {
	return i.ToTransferJobTransferSpecArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecArgsArgs) ToTransferJobTransferSpecArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecArgsOutput).ToTransferJobTransferSpecArgsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecArgsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecArgsPtrOutput() TransferJobTransferSpecArgsPtrOutput
	ToTransferJobTransferSpecArgsPtrOutputWithContext(context.Context) TransferJobTransferSpecArgsPtrOutput
}

type transferJobTransferSpecArgsPtrType TransferJobTransferSpecArgsArgs

func TransferJobTransferSpecArgsPtr(v *TransferJobTransferSpecArgsArgs) TransferJobTransferSpecArgsPtrInput {
	return (*transferJobTransferSpecArgsPtrType)(v)
}

func (*transferJobTransferSpecArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecArgs)(nil)).Elem()
}

func (i *transferJobTransferSpecArgsPtrType) ToTransferJobTransferSpecArgsPtrOutput() TransferJobTransferSpecArgsPtrOutput {
	return i.ToTransferJobTransferSpecArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecArgsPtrType) ToTransferJobTransferSpecArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecArgsPtrOutput)
}

type TransferJobTransferSpecArgsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecArgsOutput) ToTransferJobTransferSpecArgsOutput() TransferJobTransferSpecArgsOutput {
	return o
}

func (o TransferJobTransferSpecArgsOutput) ToTransferJobTransferSpecArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecArgsOutput {
	return o
}

func (o TransferJobTransferSpecArgsOutput) ToTransferJobTransferSpecArgsPtrOutput() TransferJobTransferSpecArgsPtrOutput {
	return o.ToTransferJobTransferSpecArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecArgsOutput) ToTransferJobTransferSpecArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecArgs {
		return &v
	}).(TransferJobTransferSpecArgsPtrOutput)
}

// An AWS S3 data source. Structure documented below.
func (o TransferJobTransferSpecArgsOutput) AwsS3DataSource() TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecAwsS3DataSourceArgs {
		return v.AwsS3DataSource
	}).(TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput)
}

// A Google Cloud Storage data sink. Structure documented below.
func (o TransferJobTransferSpecArgsOutput) GcsDataSink() TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecGcsDataSinkArgs { return v.GcsDataSink }).(TransferJobTransferSpecGcsDataSinkArgsPtrOutput)
}

// A Google Cloud Storage data source. Structure documented below.
func (o TransferJobTransferSpecArgsOutput) GcsDataSource() TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecGcsDataSourceArgs { return v.GcsDataSource }).(TransferJobTransferSpecGcsDataSourceArgsPtrOutput)
}

// An HTTP URL data source. Structure documented below.
func (o TransferJobTransferSpecArgsOutput) HttpDataSource() TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecHttpDataSourceArgs {
		return v.HttpDataSource
	}).(TransferJobTransferSpecHttpDataSourceArgsPtrOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
func (o TransferJobTransferSpecArgsOutput) ObjectConditions() TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecObjectConditionsArgs {
		return v.ObjectConditions
	}).(TransferJobTransferSpecObjectConditionsArgsPtrOutput)
}

// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
func (o TransferJobTransferSpecArgsOutput) TransferOptions() TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecTransferOptionsArgs {
		return v.TransferOptions
	}).(TransferJobTransferSpecTransferOptionsArgsPtrOutput)
}

type TransferJobTransferSpecArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecArgsPtrOutput) ToTransferJobTransferSpecArgsPtrOutput() TransferJobTransferSpecArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecArgsPtrOutput) ToTransferJobTransferSpecArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecArgsPtrOutput) Elem() TransferJobTransferSpecArgsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecArgs) TransferJobTransferSpecArgs { return *v }).(TransferJobTransferSpecArgsOutput)
}

// An AWS S3 data source. Structure documented below.
func (o TransferJobTransferSpecArgsPtrOutput) AwsS3DataSource() TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecAwsS3DataSourceArgs {
		return v.AwsS3DataSource
	}).(TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput)
}

// A Google Cloud Storage data sink. Structure documented below.
func (o TransferJobTransferSpecArgsPtrOutput) GcsDataSink() TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecGcsDataSinkArgs { return v.GcsDataSink }).(TransferJobTransferSpecGcsDataSinkArgsPtrOutput)
}

// A Google Cloud Storage data source. Structure documented below.
func (o TransferJobTransferSpecArgsPtrOutput) GcsDataSource() TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecGcsDataSourceArgs { return v.GcsDataSource }).(TransferJobTransferSpecGcsDataSourceArgsPtrOutput)
}

// An HTTP URL data source. Structure documented below.
func (o TransferJobTransferSpecArgsPtrOutput) HttpDataSource() TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecHttpDataSourceArgs {
		return v.HttpDataSource
	}).(TransferJobTransferSpecHttpDataSourceArgsPtrOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
func (o TransferJobTransferSpecArgsPtrOutput) ObjectConditions() TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecObjectConditionsArgs {
		return v.ObjectConditions
	}).(TransferJobTransferSpecObjectConditionsArgsPtrOutput)
}

// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
func (o TransferJobTransferSpecArgsPtrOutput) TransferOptions() TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecArgs) *TransferJobTransferSpecTransferOptionsArgs {
		return v.TransferOptions
	}).(TransferJobTransferSpecTransferOptionsArgsPtrOutput)
}

type TransferJobTransferSpecAwsS3DataSource struct {
	// AWS credentials block.
	AwsAccessKey TransferJobTransferSpecAwsS3DataSourceAwsAccessKey `pulumi:"awsAccessKey"`
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

type TransferJobTransferSpecAwsS3DataSourceInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourceOutput() TransferJobTransferSpecAwsS3DataSourceOutput
	ToTransferJobTransferSpecAwsS3DataSourceOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourceOutput
}

type TransferJobTransferSpecAwsS3DataSourceArgs struct {
	// AWS credentials block.
	AwsAccessKey TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyInput `pulumi:"awsAccessKey"`
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecAwsS3DataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSource)(nil)).Elem()
}

func (i TransferJobTransferSpecAwsS3DataSourceArgs) ToTransferJobTransferSpecAwsS3DataSourceOutput() TransferJobTransferSpecAwsS3DataSourceOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceArgs) ToTransferJobTransferSpecAwsS3DataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceOutput)
}

func (i TransferJobTransferSpecAwsS3DataSourceArgs) ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceArgs) ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceOutput).ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx)
}

type TransferJobTransferSpecAwsS3DataSourcePtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput
	ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput
}

type transferJobTransferSpecAwsS3DataSourcePtrType TransferJobTransferSpecAwsS3DataSourceArgs

func TransferJobTransferSpecAwsS3DataSourcePtr(v *TransferJobTransferSpecAwsS3DataSourceArgs) TransferJobTransferSpecAwsS3DataSourcePtrInput {
	return (*transferJobTransferSpecAwsS3DataSourcePtrType)(v)
}

func (*transferJobTransferSpecAwsS3DataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecAwsS3DataSource)(nil)).Elem()
}

func (i *transferJobTransferSpecAwsS3DataSourcePtrType) ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecAwsS3DataSourcePtrType) ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourcePtrOutput)
}

type TransferJobTransferSpecAwsS3DataSourceOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourceOutput) ToTransferJobTransferSpecAwsS3DataSourceOutput() TransferJobTransferSpecAwsS3DataSourceOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceOutput) ToTransferJobTransferSpecAwsS3DataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceOutput) ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o.ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecAwsS3DataSourceOutput) ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSource) *TransferJobTransferSpecAwsS3DataSource {
		return &v
	}).(TransferJobTransferSpecAwsS3DataSourcePtrOutput)
}

// AWS credentials block.
func (o TransferJobTransferSpecAwsS3DataSourceOutput) AwsAccessKey() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSource) TransferJobTransferSpecAwsS3DataSourceAwsAccessKey {
		return v.AwsAccessKey
	}).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecAwsS3DataSourceOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecAwsS3DataSourcePtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecAwsS3DataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) ToTransferJobTransferSpecAwsS3DataSourcePtrOutput() TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) ToTransferJobTransferSpecAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) Elem() TransferJobTransferSpecAwsS3DataSourceOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecAwsS3DataSource) TransferJobTransferSpecAwsS3DataSource { return *v }).(TransferJobTransferSpecAwsS3DataSourceOutput)
}

// AWS credentials block.
func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) AwsAccessKey() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSource) TransferJobTransferSpecAwsS3DataSourceAwsAccessKey {
		return v.AwsAccessKey
	}).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecAwsS3DataSourcePtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecAwsS3DataSourceArgs struct {
	// AWS credentials block.
	AwsAccessKey TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs `pulumi:"awsAccessKey"`
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

type TransferJobTransferSpecAwsS3DataSourceArgsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourceArgsOutput() TransferJobTransferSpecAwsS3DataSourceArgsOutput
	ToTransferJobTransferSpecAwsS3DataSourceArgsOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourceArgsOutput
}

type TransferJobTransferSpecAwsS3DataSourceArgsArgs struct {
	// AWS credentials block.
	AwsAccessKey TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsInput `pulumi:"awsAccessKey"`
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecAwsS3DataSourceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSourceArgs)(nil)).Elem()
}

func (i TransferJobTransferSpecAwsS3DataSourceArgsArgs) ToTransferJobTransferSpecAwsS3DataSourceArgsOutput() TransferJobTransferSpecAwsS3DataSourceArgsOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceArgsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceArgsArgs) ToTransferJobTransferSpecAwsS3DataSourceArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceArgsOutput)
}

func (i TransferJobTransferSpecAwsS3DataSourceArgsArgs) ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutput() TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceArgsArgs) ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceArgsOutput).ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecAwsS3DataSourceArgsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutput() TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput
	ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput
}

type transferJobTransferSpecAwsS3DataSourceArgsPtrType TransferJobTransferSpecAwsS3DataSourceArgsArgs

func TransferJobTransferSpecAwsS3DataSourceArgsPtr(v *TransferJobTransferSpecAwsS3DataSourceArgsArgs) TransferJobTransferSpecAwsS3DataSourceArgsPtrInput {
	return (*transferJobTransferSpecAwsS3DataSourceArgsPtrType)(v)
}

func (*transferJobTransferSpecAwsS3DataSourceArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecAwsS3DataSourceArgs)(nil)).Elem()
}

func (i *transferJobTransferSpecAwsS3DataSourceArgsPtrType) ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutput() TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecAwsS3DataSourceArgsPtrType) ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput)
}

type TransferJobTransferSpecAwsS3DataSourceArgsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSourceArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourceArgsOutput) ToTransferJobTransferSpecAwsS3DataSourceArgsOutput() TransferJobTransferSpecAwsS3DataSourceArgsOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceArgsOutput) ToTransferJobTransferSpecAwsS3DataSourceArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceArgsOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceArgsOutput) ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutput() TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return o.ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecAwsS3DataSourceArgsOutput) ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceArgs) *TransferJobTransferSpecAwsS3DataSourceArgs {
		return &v
	}).(TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput)
}

// AWS credentials block.
func (o TransferJobTransferSpecAwsS3DataSourceArgsOutput) AwsAccessKey() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceArgs) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs {
		return v.AwsAccessKey
	}).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecAwsS3DataSourceArgsOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceArgs) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecAwsS3DataSourceArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput) ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutput() TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput) ToTransferJobTransferSpecAwsS3DataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput) Elem() TransferJobTransferSpecAwsS3DataSourceArgsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecAwsS3DataSourceArgs) TransferJobTransferSpecAwsS3DataSourceArgs {
		return *v
	}).(TransferJobTransferSpecAwsS3DataSourceArgsOutput)
}

// AWS credentials block.
func (o TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput) AwsAccessKey() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceArgs) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs {
		return v.AwsAccessKey
	}).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceArgs) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKey struct {
	// AWS Key ID.
	AccessKeyId string `pulumi:"accessKeyId"`
	// AWS Secret Access Key.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput
	ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs struct {
	// AWS Key ID.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// AWS Secret Access Key.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSourceAwsAccessKey)(nil)).Elem()
}

func (i TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput)
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSourceAwsAccessKey)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput {
	return o
}

// AWS Key ID.
func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceAwsAccessKey) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// AWS Secret Access Key.
func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceAwsAccessKey) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs struct {
	// AWS Key ID.
	AccessKeyId string `pulumi:"accessKeyId"`
	// AWS Secret Access Key.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput
	ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutputWithContext(context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsArgs struct {
	// AWS Key ID.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// AWS Secret Access Key.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs)(nil)).Elem()
}

func (i TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsArgs) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput {
	return i.ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsArgs) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput)
}

type TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput() TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput {
	return o
}

func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput) ToTransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput {
	return o
}

// AWS Key ID.
func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// AWS Secret Access Key.
func (o TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSink struct {
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

type TransferJobTransferSpecGcsDataSinkInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSinkOutput() TransferJobTransferSpecGcsDataSinkOutput
	ToTransferJobTransferSpecGcsDataSinkOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSinkOutput
}

type TransferJobTransferSpecGcsDataSinkArgs struct {
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecGcsDataSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSink)(nil)).Elem()
}

func (i TransferJobTransferSpecGcsDataSinkArgs) ToTransferJobTransferSpecGcsDataSinkOutput() TransferJobTransferSpecGcsDataSinkOutput {
	return i.ToTransferJobTransferSpecGcsDataSinkOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSinkArgs) ToTransferJobTransferSpecGcsDataSinkOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSinkOutput)
}

func (i TransferJobTransferSpecGcsDataSinkArgs) ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSinkArgs) ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSinkOutput).ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecGcsDataSinkPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput
	ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput
}

type transferJobTransferSpecGcsDataSinkPtrType TransferJobTransferSpecGcsDataSinkArgs

func TransferJobTransferSpecGcsDataSinkPtr(v *TransferJobTransferSpecGcsDataSinkArgs) TransferJobTransferSpecGcsDataSinkPtrInput {
	return (*transferJobTransferSpecGcsDataSinkPtrType)(v)
}

func (*transferJobTransferSpecGcsDataSinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSink)(nil)).Elem()
}

func (i *transferJobTransferSpecGcsDataSinkPtrType) ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecGcsDataSinkPtrType) ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSinkPtrOutput)
}

type TransferJobTransferSpecGcsDataSinkOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSink)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSinkOutput) ToTransferJobTransferSpecGcsDataSinkOutput() TransferJobTransferSpecGcsDataSinkOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkOutput) ToTransferJobTransferSpecGcsDataSinkOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkOutput) ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o.ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecGcsDataSinkOutput) ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSink) *TransferJobTransferSpecGcsDataSink {
		return &v
	}).(TransferJobTransferSpecGcsDataSinkPtrOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSinkOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSink) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSinkPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSink)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSinkPtrOutput) ToTransferJobTransferSpecGcsDataSinkPtrOutput() TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkPtrOutput) ToTransferJobTransferSpecGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkPtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkPtrOutput) Elem() TransferJobTransferSpecGcsDataSinkOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecGcsDataSink) TransferJobTransferSpecGcsDataSink { return *v }).(TransferJobTransferSpecGcsDataSinkOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSinkPtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSink) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSinkArgs struct {
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

type TransferJobTransferSpecGcsDataSinkArgsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSinkArgsOutput() TransferJobTransferSpecGcsDataSinkArgsOutput
	ToTransferJobTransferSpecGcsDataSinkArgsOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSinkArgsOutput
}

type TransferJobTransferSpecGcsDataSinkArgsArgs struct {
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecGcsDataSinkArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSinkArgs)(nil)).Elem()
}

func (i TransferJobTransferSpecGcsDataSinkArgsArgs) ToTransferJobTransferSpecGcsDataSinkArgsOutput() TransferJobTransferSpecGcsDataSinkArgsOutput {
	return i.ToTransferJobTransferSpecGcsDataSinkArgsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSinkArgsArgs) ToTransferJobTransferSpecGcsDataSinkArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSinkArgsOutput)
}

func (i TransferJobTransferSpecGcsDataSinkArgsArgs) ToTransferJobTransferSpecGcsDataSinkArgsPtrOutput() TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSinkArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSinkArgsArgs) ToTransferJobTransferSpecGcsDataSinkArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSinkArgsOutput).ToTransferJobTransferSpecGcsDataSinkArgsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecGcsDataSinkArgsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSinkArgsPtrOutput() TransferJobTransferSpecGcsDataSinkArgsPtrOutput
	ToTransferJobTransferSpecGcsDataSinkArgsPtrOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSinkArgsPtrOutput
}

type transferJobTransferSpecGcsDataSinkArgsPtrType TransferJobTransferSpecGcsDataSinkArgsArgs

func TransferJobTransferSpecGcsDataSinkArgsPtr(v *TransferJobTransferSpecGcsDataSinkArgsArgs) TransferJobTransferSpecGcsDataSinkArgsPtrInput {
	return (*transferJobTransferSpecGcsDataSinkArgsPtrType)(v)
}

func (*transferJobTransferSpecGcsDataSinkArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSinkArgs)(nil)).Elem()
}

func (i *transferJobTransferSpecGcsDataSinkArgsPtrType) ToTransferJobTransferSpecGcsDataSinkArgsPtrOutput() TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSinkArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecGcsDataSinkArgsPtrType) ToTransferJobTransferSpecGcsDataSinkArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSinkArgsPtrOutput)
}

type TransferJobTransferSpecGcsDataSinkArgsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSinkArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSinkArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSinkArgsOutput) ToTransferJobTransferSpecGcsDataSinkArgsOutput() TransferJobTransferSpecGcsDataSinkArgsOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkArgsOutput) ToTransferJobTransferSpecGcsDataSinkArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkArgsOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkArgsOutput) ToTransferJobTransferSpecGcsDataSinkArgsPtrOutput() TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return o.ToTransferJobTransferSpecGcsDataSinkArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecGcsDataSinkArgsOutput) ToTransferJobTransferSpecGcsDataSinkArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSinkArgs) *TransferJobTransferSpecGcsDataSinkArgs {
		return &v
	}).(TransferJobTransferSpecGcsDataSinkArgsPtrOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSinkArgsOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSinkArgs) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSinkArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSinkArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSinkArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSinkArgsPtrOutput) ToTransferJobTransferSpecGcsDataSinkArgsPtrOutput() TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkArgsPtrOutput) ToTransferJobTransferSpecGcsDataSinkArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSinkArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSinkArgsPtrOutput) Elem() TransferJobTransferSpecGcsDataSinkArgsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecGcsDataSinkArgs) TransferJobTransferSpecGcsDataSinkArgs { return *v }).(TransferJobTransferSpecGcsDataSinkArgsOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSinkArgsPtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSinkArgs) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSource struct {
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

type TransferJobTransferSpecGcsDataSourceInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSourceOutput() TransferJobTransferSpecGcsDataSourceOutput
	ToTransferJobTransferSpecGcsDataSourceOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSourceOutput
}

type TransferJobTransferSpecGcsDataSourceArgs struct {
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecGcsDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSource)(nil)).Elem()
}

func (i TransferJobTransferSpecGcsDataSourceArgs) ToTransferJobTransferSpecGcsDataSourceOutput() TransferJobTransferSpecGcsDataSourceOutput {
	return i.ToTransferJobTransferSpecGcsDataSourceOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSourceArgs) ToTransferJobTransferSpecGcsDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSourceOutput)
}

func (i TransferJobTransferSpecGcsDataSourceArgs) ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSourceArgs) ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSourceOutput).ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx)
}

type TransferJobTransferSpecGcsDataSourcePtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput
	ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput
}

type transferJobTransferSpecGcsDataSourcePtrType TransferJobTransferSpecGcsDataSourceArgs

func TransferJobTransferSpecGcsDataSourcePtr(v *TransferJobTransferSpecGcsDataSourceArgs) TransferJobTransferSpecGcsDataSourcePtrInput {
	return (*transferJobTransferSpecGcsDataSourcePtrType)(v)
}

func (*transferJobTransferSpecGcsDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSource)(nil)).Elem()
}

func (i *transferJobTransferSpecGcsDataSourcePtrType) ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecGcsDataSourcePtrType) ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSourcePtrOutput)
}

type TransferJobTransferSpecGcsDataSourceOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSourceOutput) ToTransferJobTransferSpecGcsDataSourceOutput() TransferJobTransferSpecGcsDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourceOutput) ToTransferJobTransferSpecGcsDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourceOutput) ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o.ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecGcsDataSourceOutput) ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSource) *TransferJobTransferSpecGcsDataSource {
		return &v
	}).(TransferJobTransferSpecGcsDataSourcePtrOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSourceOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSourcePtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSourcePtrOutput) ToTransferJobTransferSpecGcsDataSourcePtrOutput() TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourcePtrOutput) ToTransferJobTransferSpecGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourcePtrOutput) Elem() TransferJobTransferSpecGcsDataSourceOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecGcsDataSource) TransferJobTransferSpecGcsDataSource { return *v }).(TransferJobTransferSpecGcsDataSourceOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSourcePtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSourceArgs struct {
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

type TransferJobTransferSpecGcsDataSourceArgsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSourceArgsOutput() TransferJobTransferSpecGcsDataSourceArgsOutput
	ToTransferJobTransferSpecGcsDataSourceArgsOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSourceArgsOutput
}

type TransferJobTransferSpecGcsDataSourceArgsArgs struct {
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecGcsDataSourceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSourceArgs)(nil)).Elem()
}

func (i TransferJobTransferSpecGcsDataSourceArgsArgs) ToTransferJobTransferSpecGcsDataSourceArgsOutput() TransferJobTransferSpecGcsDataSourceArgsOutput {
	return i.ToTransferJobTransferSpecGcsDataSourceArgsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSourceArgsArgs) ToTransferJobTransferSpecGcsDataSourceArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSourceArgsOutput)
}

func (i TransferJobTransferSpecGcsDataSourceArgsArgs) ToTransferJobTransferSpecGcsDataSourceArgsPtrOutput() TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSourceArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecGcsDataSourceArgsArgs) ToTransferJobTransferSpecGcsDataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSourceArgsOutput).ToTransferJobTransferSpecGcsDataSourceArgsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecGcsDataSourceArgsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecGcsDataSourceArgsPtrOutput() TransferJobTransferSpecGcsDataSourceArgsPtrOutput
	ToTransferJobTransferSpecGcsDataSourceArgsPtrOutputWithContext(context.Context) TransferJobTransferSpecGcsDataSourceArgsPtrOutput
}

type transferJobTransferSpecGcsDataSourceArgsPtrType TransferJobTransferSpecGcsDataSourceArgsArgs

func TransferJobTransferSpecGcsDataSourceArgsPtr(v *TransferJobTransferSpecGcsDataSourceArgsArgs) TransferJobTransferSpecGcsDataSourceArgsPtrInput {
	return (*transferJobTransferSpecGcsDataSourceArgsPtrType)(v)
}

func (*transferJobTransferSpecGcsDataSourceArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSourceArgs)(nil)).Elem()
}

func (i *transferJobTransferSpecGcsDataSourceArgsPtrType) ToTransferJobTransferSpecGcsDataSourceArgsPtrOutput() TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return i.ToTransferJobTransferSpecGcsDataSourceArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecGcsDataSourceArgsPtrType) ToTransferJobTransferSpecGcsDataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecGcsDataSourceArgsPtrOutput)
}

type TransferJobTransferSpecGcsDataSourceArgsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSourceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecGcsDataSourceArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSourceArgsOutput) ToTransferJobTransferSpecGcsDataSourceArgsOutput() TransferJobTransferSpecGcsDataSourceArgsOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourceArgsOutput) ToTransferJobTransferSpecGcsDataSourceArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceArgsOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourceArgsOutput) ToTransferJobTransferSpecGcsDataSourceArgsPtrOutput() TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return o.ToTransferJobTransferSpecGcsDataSourceArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecGcsDataSourceArgsOutput) ToTransferJobTransferSpecGcsDataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSourceArgs) *TransferJobTransferSpecGcsDataSourceArgs {
		return &v
	}).(TransferJobTransferSpecGcsDataSourceArgsPtrOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSourceArgsOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSourceArgs) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecGcsDataSourceArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecGcsDataSourceArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecGcsDataSourceArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecGcsDataSourceArgsPtrOutput) ToTransferJobTransferSpecGcsDataSourceArgsPtrOutput() TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourceArgsPtrOutput) ToTransferJobTransferSpecGcsDataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecGcsDataSourceArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecGcsDataSourceArgsPtrOutput) Elem() TransferJobTransferSpecGcsDataSourceArgsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecGcsDataSourceArgs) TransferJobTransferSpecGcsDataSourceArgs { return *v }).(TransferJobTransferSpecGcsDataSourceArgsOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecGcsDataSourceArgsPtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecGcsDataSourceArgs) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecHttpDataSource struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl string `pulumi:"listUrl"`
}

type TransferJobTransferSpecHttpDataSourceInput interface {
	pulumi.Input

	ToTransferJobTransferSpecHttpDataSourceOutput() TransferJobTransferSpecHttpDataSourceOutput
	ToTransferJobTransferSpecHttpDataSourceOutputWithContext(context.Context) TransferJobTransferSpecHttpDataSourceOutput
}

type TransferJobTransferSpecHttpDataSourceArgs struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl pulumi.StringInput `pulumi:"listUrl"`
}

func (TransferJobTransferSpecHttpDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecHttpDataSource)(nil)).Elem()
}

func (i TransferJobTransferSpecHttpDataSourceArgs) ToTransferJobTransferSpecHttpDataSourceOutput() TransferJobTransferSpecHttpDataSourceOutput {
	return i.ToTransferJobTransferSpecHttpDataSourceOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecHttpDataSourceArgs) ToTransferJobTransferSpecHttpDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecHttpDataSourceOutput)
}

func (i TransferJobTransferSpecHttpDataSourceArgs) ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecHttpDataSourceArgs) ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecHttpDataSourceOutput).ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx)
}

type TransferJobTransferSpecHttpDataSourcePtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput
	ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput
}

type transferJobTransferSpecHttpDataSourcePtrType TransferJobTransferSpecHttpDataSourceArgs

func TransferJobTransferSpecHttpDataSourcePtr(v *TransferJobTransferSpecHttpDataSourceArgs) TransferJobTransferSpecHttpDataSourcePtrInput {
	return (*transferJobTransferSpecHttpDataSourcePtrType)(v)
}

func (*transferJobTransferSpecHttpDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecHttpDataSource)(nil)).Elem()
}

func (i *transferJobTransferSpecHttpDataSourcePtrType) ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecHttpDataSourcePtrType) ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecHttpDataSourcePtrOutput)
}

type TransferJobTransferSpecHttpDataSourceOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecHttpDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecHttpDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecHttpDataSourceOutput) ToTransferJobTransferSpecHttpDataSourceOutput() TransferJobTransferSpecHttpDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourceOutput) ToTransferJobTransferSpecHttpDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourceOutput) ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o.ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecHttpDataSourceOutput) ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecHttpDataSource) *TransferJobTransferSpecHttpDataSource {
		return &v
	}).(TransferJobTransferSpecHttpDataSourcePtrOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o TransferJobTransferSpecHttpDataSourceOutput) ListUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecHttpDataSource) string { return v.ListUrl }).(pulumi.StringOutput)
}

type TransferJobTransferSpecHttpDataSourcePtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecHttpDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecHttpDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecHttpDataSourcePtrOutput) ToTransferJobTransferSpecHttpDataSourcePtrOutput() TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourcePtrOutput) ToTransferJobTransferSpecHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourcePtrOutput) Elem() TransferJobTransferSpecHttpDataSourceOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecHttpDataSource) TransferJobTransferSpecHttpDataSource { return *v }).(TransferJobTransferSpecHttpDataSourceOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o TransferJobTransferSpecHttpDataSourcePtrOutput) ListUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecHttpDataSource) string { return v.ListUrl }).(pulumi.StringOutput)
}

type TransferJobTransferSpecHttpDataSourceArgs struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl string `pulumi:"listUrl"`
}

type TransferJobTransferSpecHttpDataSourceArgsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecHttpDataSourceArgsOutput() TransferJobTransferSpecHttpDataSourceArgsOutput
	ToTransferJobTransferSpecHttpDataSourceArgsOutputWithContext(context.Context) TransferJobTransferSpecHttpDataSourceArgsOutput
}

type TransferJobTransferSpecHttpDataSourceArgsArgs struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl pulumi.StringInput `pulumi:"listUrl"`
}

func (TransferJobTransferSpecHttpDataSourceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecHttpDataSourceArgs)(nil)).Elem()
}

func (i TransferJobTransferSpecHttpDataSourceArgsArgs) ToTransferJobTransferSpecHttpDataSourceArgsOutput() TransferJobTransferSpecHttpDataSourceArgsOutput {
	return i.ToTransferJobTransferSpecHttpDataSourceArgsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecHttpDataSourceArgsArgs) ToTransferJobTransferSpecHttpDataSourceArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecHttpDataSourceArgsOutput)
}

func (i TransferJobTransferSpecHttpDataSourceArgsArgs) ToTransferJobTransferSpecHttpDataSourceArgsPtrOutput() TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return i.ToTransferJobTransferSpecHttpDataSourceArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecHttpDataSourceArgsArgs) ToTransferJobTransferSpecHttpDataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecHttpDataSourceArgsOutput).ToTransferJobTransferSpecHttpDataSourceArgsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecHttpDataSourceArgsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecHttpDataSourceArgsPtrOutput() TransferJobTransferSpecHttpDataSourceArgsPtrOutput
	ToTransferJobTransferSpecHttpDataSourceArgsPtrOutputWithContext(context.Context) TransferJobTransferSpecHttpDataSourceArgsPtrOutput
}

type transferJobTransferSpecHttpDataSourceArgsPtrType TransferJobTransferSpecHttpDataSourceArgsArgs

func TransferJobTransferSpecHttpDataSourceArgsPtr(v *TransferJobTransferSpecHttpDataSourceArgsArgs) TransferJobTransferSpecHttpDataSourceArgsPtrInput {
	return (*transferJobTransferSpecHttpDataSourceArgsPtrType)(v)
}

func (*transferJobTransferSpecHttpDataSourceArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecHttpDataSourceArgs)(nil)).Elem()
}

func (i *transferJobTransferSpecHttpDataSourceArgsPtrType) ToTransferJobTransferSpecHttpDataSourceArgsPtrOutput() TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return i.ToTransferJobTransferSpecHttpDataSourceArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecHttpDataSourceArgsPtrType) ToTransferJobTransferSpecHttpDataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecHttpDataSourceArgsPtrOutput)
}

type TransferJobTransferSpecHttpDataSourceArgsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecHttpDataSourceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecHttpDataSourceArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecHttpDataSourceArgsOutput) ToTransferJobTransferSpecHttpDataSourceArgsOutput() TransferJobTransferSpecHttpDataSourceArgsOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourceArgsOutput) ToTransferJobTransferSpecHttpDataSourceArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceArgsOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourceArgsOutput) ToTransferJobTransferSpecHttpDataSourceArgsPtrOutput() TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return o.ToTransferJobTransferSpecHttpDataSourceArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecHttpDataSourceArgsOutput) ToTransferJobTransferSpecHttpDataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecHttpDataSourceArgs) *TransferJobTransferSpecHttpDataSourceArgs {
		return &v
	}).(TransferJobTransferSpecHttpDataSourceArgsPtrOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o TransferJobTransferSpecHttpDataSourceArgsOutput) ListUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecHttpDataSourceArgs) string { return v.ListUrl }).(pulumi.StringOutput)
}

type TransferJobTransferSpecHttpDataSourceArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecHttpDataSourceArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecHttpDataSourceArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecHttpDataSourceArgsPtrOutput) ToTransferJobTransferSpecHttpDataSourceArgsPtrOutput() TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourceArgsPtrOutput) ToTransferJobTransferSpecHttpDataSourceArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecHttpDataSourceArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecHttpDataSourceArgsPtrOutput) Elem() TransferJobTransferSpecHttpDataSourceArgsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecHttpDataSourceArgs) TransferJobTransferSpecHttpDataSourceArgs {
		return *v
	}).(TransferJobTransferSpecHttpDataSourceArgsOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o TransferJobTransferSpecHttpDataSourceArgsPtrOutput) ListUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecHttpDataSourceArgs) string { return v.ListUrl }).(pulumi.StringOutput)
}

type TransferJobTransferSpecObjectConditions struct {
	// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	ExcludePrefixes []string `pulumi:"excludePrefixes"`
	// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	IncludePrefixes []string `pulumi:"includePrefixes"`
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MaxTimeElapsedSinceLastModification *string `pulumi:"maxTimeElapsedSinceLastModification"`
	//
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MinTimeElapsedSinceLastModification *string `pulumi:"minTimeElapsedSinceLastModification"`
}

type TransferJobTransferSpecObjectConditionsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecObjectConditionsOutput() TransferJobTransferSpecObjectConditionsOutput
	ToTransferJobTransferSpecObjectConditionsOutputWithContext(context.Context) TransferJobTransferSpecObjectConditionsOutput
}

type TransferJobTransferSpecObjectConditionsArgs struct {
	// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	ExcludePrefixes pulumi.StringArrayInput `pulumi:"excludePrefixes"`
	// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	IncludePrefixes pulumi.StringArrayInput `pulumi:"includePrefixes"`
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MaxTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"maxTimeElapsedSinceLastModification"`
	//
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MinTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"minTimeElapsedSinceLastModification"`
}

func (TransferJobTransferSpecObjectConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecObjectConditions)(nil)).Elem()
}

func (i TransferJobTransferSpecObjectConditionsArgs) ToTransferJobTransferSpecObjectConditionsOutput() TransferJobTransferSpecObjectConditionsOutput {
	return i.ToTransferJobTransferSpecObjectConditionsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecObjectConditionsArgs) ToTransferJobTransferSpecObjectConditionsOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecObjectConditionsOutput)
}

func (i TransferJobTransferSpecObjectConditionsArgs) ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput {
	return i.ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecObjectConditionsArgs) ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecObjectConditionsOutput).ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecObjectConditionsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput
	ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(context.Context) TransferJobTransferSpecObjectConditionsPtrOutput
}

type transferJobTransferSpecObjectConditionsPtrType TransferJobTransferSpecObjectConditionsArgs

func TransferJobTransferSpecObjectConditionsPtr(v *TransferJobTransferSpecObjectConditionsArgs) TransferJobTransferSpecObjectConditionsPtrInput {
	return (*transferJobTransferSpecObjectConditionsPtrType)(v)
}

func (*transferJobTransferSpecObjectConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecObjectConditions)(nil)).Elem()
}

func (i *transferJobTransferSpecObjectConditionsPtrType) ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput {
	return i.ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecObjectConditionsPtrType) ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecObjectConditionsPtrOutput)
}

type TransferJobTransferSpecObjectConditionsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecObjectConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecObjectConditions)(nil)).Elem()
}

func (o TransferJobTransferSpecObjectConditionsOutput) ToTransferJobTransferSpecObjectConditionsOutput() TransferJobTransferSpecObjectConditionsOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsOutput) ToTransferJobTransferSpecObjectConditionsOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsOutput) ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput {
	return o.ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecObjectConditionsOutput) ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) *TransferJobTransferSpecObjectConditions {
		return &v
	}).(TransferJobTransferSpecObjectConditionsPtrOutput)
}

// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) []string { return v.ExcludePrefixes }).(pulumi.StringArrayOutput)
}

// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) []string { return v.IncludePrefixes }).(pulumi.StringArrayOutput)
}

// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) *string { return v.MaxTimeElapsedSinceLastModification }).(pulumi.StringPtrOutput)
}

//
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) *string { return v.MinTimeElapsedSinceLastModification }).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecObjectConditionsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecObjectConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecObjectConditions)(nil)).Elem()
}

func (o TransferJobTransferSpecObjectConditionsPtrOutput) ToTransferJobTransferSpecObjectConditionsPtrOutput() TransferJobTransferSpecObjectConditionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsPtrOutput) ToTransferJobTransferSpecObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsPtrOutput) Elem() TransferJobTransferSpecObjectConditionsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecObjectConditions) TransferJobTransferSpecObjectConditions { return *v }).(TransferJobTransferSpecObjectConditionsOutput)
}

// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsPtrOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) []string { return v.ExcludePrefixes }).(pulumi.StringArrayOutput)
}

// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsPtrOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) []string { return v.IncludePrefixes }).(pulumi.StringArrayOutput)
}

// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsPtrOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) *string { return v.MaxTimeElapsedSinceLastModification }).(pulumi.StringPtrOutput)
}

//
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsPtrOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditions) *string { return v.MinTimeElapsedSinceLastModification }).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecObjectConditionsArgs struct {
	// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	ExcludePrefixes []string `pulumi:"excludePrefixes"`
	// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	IncludePrefixes []string `pulumi:"includePrefixes"`
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MaxTimeElapsedSinceLastModification *string `pulumi:"maxTimeElapsedSinceLastModification"`
	//
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MinTimeElapsedSinceLastModification *string `pulumi:"minTimeElapsedSinceLastModification"`
}

type TransferJobTransferSpecObjectConditionsArgsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecObjectConditionsArgsOutput() TransferJobTransferSpecObjectConditionsArgsOutput
	ToTransferJobTransferSpecObjectConditionsArgsOutputWithContext(context.Context) TransferJobTransferSpecObjectConditionsArgsOutput
}

type TransferJobTransferSpecObjectConditionsArgsArgs struct {
	// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	ExcludePrefixes pulumi.StringArrayInput `pulumi:"excludePrefixes"`
	// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	IncludePrefixes pulumi.StringArrayInput `pulumi:"includePrefixes"`
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MaxTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"maxTimeElapsedSinceLastModification"`
	//
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MinTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"minTimeElapsedSinceLastModification"`
}

func (TransferJobTransferSpecObjectConditionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecObjectConditionsArgs)(nil)).Elem()
}

func (i TransferJobTransferSpecObjectConditionsArgsArgs) ToTransferJobTransferSpecObjectConditionsArgsOutput() TransferJobTransferSpecObjectConditionsArgsOutput {
	return i.ToTransferJobTransferSpecObjectConditionsArgsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecObjectConditionsArgsArgs) ToTransferJobTransferSpecObjectConditionsArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecObjectConditionsArgsOutput)
}

func (i TransferJobTransferSpecObjectConditionsArgsArgs) ToTransferJobTransferSpecObjectConditionsArgsPtrOutput() TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return i.ToTransferJobTransferSpecObjectConditionsArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecObjectConditionsArgsArgs) ToTransferJobTransferSpecObjectConditionsArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecObjectConditionsArgsOutput).ToTransferJobTransferSpecObjectConditionsArgsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecObjectConditionsArgsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecObjectConditionsArgsPtrOutput() TransferJobTransferSpecObjectConditionsArgsPtrOutput
	ToTransferJobTransferSpecObjectConditionsArgsPtrOutputWithContext(context.Context) TransferJobTransferSpecObjectConditionsArgsPtrOutput
}

type transferJobTransferSpecObjectConditionsArgsPtrType TransferJobTransferSpecObjectConditionsArgsArgs

func TransferJobTransferSpecObjectConditionsArgsPtr(v *TransferJobTransferSpecObjectConditionsArgsArgs) TransferJobTransferSpecObjectConditionsArgsPtrInput {
	return (*transferJobTransferSpecObjectConditionsArgsPtrType)(v)
}

func (*transferJobTransferSpecObjectConditionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecObjectConditionsArgs)(nil)).Elem()
}

func (i *transferJobTransferSpecObjectConditionsArgsPtrType) ToTransferJobTransferSpecObjectConditionsArgsPtrOutput() TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return i.ToTransferJobTransferSpecObjectConditionsArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecObjectConditionsArgsPtrType) ToTransferJobTransferSpecObjectConditionsArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecObjectConditionsArgsPtrOutput)
}

type TransferJobTransferSpecObjectConditionsArgsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecObjectConditionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecObjectConditionsArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecObjectConditionsArgsOutput) ToTransferJobTransferSpecObjectConditionsArgsOutput() TransferJobTransferSpecObjectConditionsArgsOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsArgsOutput) ToTransferJobTransferSpecObjectConditionsArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsArgsOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsArgsOutput) ToTransferJobTransferSpecObjectConditionsArgsPtrOutput() TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return o.ToTransferJobTransferSpecObjectConditionsArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecObjectConditionsArgsOutput) ToTransferJobTransferSpecObjectConditionsArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditionsArgs) *TransferJobTransferSpecObjectConditionsArgs {
		return &v
	}).(TransferJobTransferSpecObjectConditionsArgsPtrOutput)
}

// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsArgsOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditionsArgs) []string { return v.ExcludePrefixes }).(pulumi.StringArrayOutput)
}

// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsArgsOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditionsArgs) []string { return v.IncludePrefixes }).(pulumi.StringArrayOutput)
}

// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsArgsOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditionsArgs) *string {
		return v.MaxTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

//
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsArgsOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditionsArgs) *string {
		return v.MinTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecObjectConditionsArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecObjectConditionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecObjectConditionsArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecObjectConditionsArgsPtrOutput) ToTransferJobTransferSpecObjectConditionsArgsPtrOutput() TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsArgsPtrOutput) ToTransferJobTransferSpecObjectConditionsArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecObjectConditionsArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecObjectConditionsArgsPtrOutput) Elem() TransferJobTransferSpecObjectConditionsArgsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecObjectConditionsArgs) TransferJobTransferSpecObjectConditionsArgs {
		return *v
	}).(TransferJobTransferSpecObjectConditionsArgsOutput)
}

// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsArgsPtrOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditionsArgs) []string { return v.ExcludePrefixes }).(pulumi.StringArrayOutput)
}

// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecObjectConditionsArgsPtrOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditionsArgs) []string { return v.IncludePrefixes }).(pulumi.StringArrayOutput)
}

// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsArgsPtrOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditionsArgs) *string {
		return v.MaxTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

//
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecObjectConditionsArgsPtrOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecObjectConditionsArgs) *string {
		return v.MinTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecState struct {
	// An AWS S3 data source. Structure documented below.
	AwsS3DataSource *TransferJobTransferSpecStateAwsS3DataSource `pulumi:"awsS3DataSource"`
	// A Google Cloud Storage data sink. Structure documented below.
	GcsDataSink *TransferJobTransferSpecStateGcsDataSink `pulumi:"gcsDataSink"`
	// A Google Cloud Storage data source. Structure documented below.
	GcsDataSource *TransferJobTransferSpecStateGcsDataSource `pulumi:"gcsDataSource"`
	// An HTTP URL data source. Structure documented below.
	HttpDataSource *TransferJobTransferSpecStateHttpDataSource `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
	ObjectConditions *TransferJobTransferSpecStateObjectConditions `pulumi:"objectConditions"`
	// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
	TransferOptions *TransferJobTransferSpecStateTransferOptions `pulumi:"transferOptions"`
}

type TransferJobTransferSpecStateInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateOutput() TransferJobTransferSpecStateOutput
	ToTransferJobTransferSpecStateOutputWithContext(context.Context) TransferJobTransferSpecStateOutput
}

type TransferJobTransferSpecStateArgs struct {
	// An AWS S3 data source. Structure documented below.
	AwsS3DataSource TransferJobTransferSpecStateAwsS3DataSourcePtrInput `pulumi:"awsS3DataSource"`
	// A Google Cloud Storage data sink. Structure documented below.
	GcsDataSink TransferJobTransferSpecStateGcsDataSinkPtrInput `pulumi:"gcsDataSink"`
	// A Google Cloud Storage data source. Structure documented below.
	GcsDataSource TransferJobTransferSpecStateGcsDataSourcePtrInput `pulumi:"gcsDataSource"`
	// An HTTP URL data source. Structure documented below.
	HttpDataSource TransferJobTransferSpecStateHttpDataSourcePtrInput `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
	ObjectConditions TransferJobTransferSpecStateObjectConditionsPtrInput `pulumi:"objectConditions"`
	// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
	TransferOptions TransferJobTransferSpecStateTransferOptionsPtrInput `pulumi:"transferOptions"`
}

func (TransferJobTransferSpecStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecState)(nil)).Elem()
}

func (i TransferJobTransferSpecStateArgs) ToTransferJobTransferSpecStateOutput() TransferJobTransferSpecStateOutput {
	return i.ToTransferJobTransferSpecStateOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateArgs) ToTransferJobTransferSpecStateOutputWithContext(ctx context.Context) TransferJobTransferSpecStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateOutput)
}

type TransferJobTransferSpecStateOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecState)(nil)).Elem()
}

func (o TransferJobTransferSpecStateOutput) ToTransferJobTransferSpecStateOutput() TransferJobTransferSpecStateOutput {
	return o
}

func (o TransferJobTransferSpecStateOutput) ToTransferJobTransferSpecStateOutputWithContext(ctx context.Context) TransferJobTransferSpecStateOutput {
	return o
}

// An AWS S3 data source. Structure documented below.
func (o TransferJobTransferSpecStateOutput) AwsS3DataSource() TransferJobTransferSpecStateAwsS3DataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecState) *TransferJobTransferSpecStateAwsS3DataSource {
		return v.AwsS3DataSource
	}).(TransferJobTransferSpecStateAwsS3DataSourcePtrOutput)
}

// A Google Cloud Storage data sink. Structure documented below.
func (o TransferJobTransferSpecStateOutput) GcsDataSink() TransferJobTransferSpecStateGcsDataSinkPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecState) *TransferJobTransferSpecStateGcsDataSink { return v.GcsDataSink }).(TransferJobTransferSpecStateGcsDataSinkPtrOutput)
}

// A Google Cloud Storage data source. Structure documented below.
func (o TransferJobTransferSpecStateOutput) GcsDataSource() TransferJobTransferSpecStateGcsDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecState) *TransferJobTransferSpecStateGcsDataSource {
		return v.GcsDataSource
	}).(TransferJobTransferSpecStateGcsDataSourcePtrOutput)
}

// An HTTP URL data source. Structure documented below.
func (o TransferJobTransferSpecStateOutput) HttpDataSource() TransferJobTransferSpecStateHttpDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecState) *TransferJobTransferSpecStateHttpDataSource {
		return v.HttpDataSource
	}).(TransferJobTransferSpecStateHttpDataSourcePtrOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
func (o TransferJobTransferSpecStateOutput) ObjectConditions() TransferJobTransferSpecStateObjectConditionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecState) *TransferJobTransferSpecStateObjectConditions {
		return v.ObjectConditions
	}).(TransferJobTransferSpecStateObjectConditionsPtrOutput)
}

// Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects' `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
func (o TransferJobTransferSpecStateOutput) TransferOptions() TransferJobTransferSpecStateTransferOptionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecState) *TransferJobTransferSpecStateTransferOptions {
		return v.TransferOptions
	}).(TransferJobTransferSpecStateTransferOptionsPtrOutput)
}

type TransferJobTransferSpecStateAwsS3DataSource struct {
	// AWS credentials block.
	AwsAccessKey TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKey `pulumi:"awsAccessKey"`
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

type TransferJobTransferSpecStateAwsS3DataSourceInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateAwsS3DataSourceOutput() TransferJobTransferSpecStateAwsS3DataSourceOutput
	ToTransferJobTransferSpecStateAwsS3DataSourceOutputWithContext(context.Context) TransferJobTransferSpecStateAwsS3DataSourceOutput
}

type TransferJobTransferSpecStateAwsS3DataSourceArgs struct {
	// AWS credentials block.
	AwsAccessKey TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyInput `pulumi:"awsAccessKey"`
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecStateAwsS3DataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateAwsS3DataSource)(nil)).Elem()
}

func (i TransferJobTransferSpecStateAwsS3DataSourceArgs) ToTransferJobTransferSpecStateAwsS3DataSourceOutput() TransferJobTransferSpecStateAwsS3DataSourceOutput {
	return i.ToTransferJobTransferSpecStateAwsS3DataSourceOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateAwsS3DataSourceArgs) ToTransferJobTransferSpecStateAwsS3DataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecStateAwsS3DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateAwsS3DataSourceOutput)
}

func (i TransferJobTransferSpecStateAwsS3DataSourceArgs) ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutput() TransferJobTransferSpecStateAwsS3DataSourcePtrOutput {
	return i.ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateAwsS3DataSourceArgs) ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateAwsS3DataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateAwsS3DataSourceOutput).ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutputWithContext(ctx)
}

type TransferJobTransferSpecStateAwsS3DataSourcePtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutput() TransferJobTransferSpecStateAwsS3DataSourcePtrOutput
	ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutputWithContext(context.Context) TransferJobTransferSpecStateAwsS3DataSourcePtrOutput
}

type transferJobTransferSpecStateAwsS3DataSourcePtrType TransferJobTransferSpecStateAwsS3DataSourceArgs

func TransferJobTransferSpecStateAwsS3DataSourcePtr(v *TransferJobTransferSpecStateAwsS3DataSourceArgs) TransferJobTransferSpecStateAwsS3DataSourcePtrInput {
	return (*transferJobTransferSpecStateAwsS3DataSourcePtrType)(v)
}

func (*transferJobTransferSpecStateAwsS3DataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateAwsS3DataSource)(nil)).Elem()
}

func (i *transferJobTransferSpecStateAwsS3DataSourcePtrType) ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutput() TransferJobTransferSpecStateAwsS3DataSourcePtrOutput {
	return i.ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecStateAwsS3DataSourcePtrType) ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateAwsS3DataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateAwsS3DataSourcePtrOutput)
}

type TransferJobTransferSpecStateAwsS3DataSourceOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateAwsS3DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateAwsS3DataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecStateAwsS3DataSourceOutput) ToTransferJobTransferSpecStateAwsS3DataSourceOutput() TransferJobTransferSpecStateAwsS3DataSourceOutput {
	return o
}

func (o TransferJobTransferSpecStateAwsS3DataSourceOutput) ToTransferJobTransferSpecStateAwsS3DataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecStateAwsS3DataSourceOutput {
	return o
}

func (o TransferJobTransferSpecStateAwsS3DataSourceOutput) ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutput() TransferJobTransferSpecStateAwsS3DataSourcePtrOutput {
	return o.ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecStateAwsS3DataSourceOutput) ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateAwsS3DataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateAwsS3DataSource) *TransferJobTransferSpecStateAwsS3DataSource {
		return &v
	}).(TransferJobTransferSpecStateAwsS3DataSourcePtrOutput)
}

// AWS credentials block.
func (o TransferJobTransferSpecStateAwsS3DataSourceOutput) AwsAccessKey() TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateAwsS3DataSource) TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKey {
		return v.AwsAccessKey
	}).(TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecStateAwsS3DataSourceOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateAwsS3DataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecStateAwsS3DataSourcePtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateAwsS3DataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateAwsS3DataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecStateAwsS3DataSourcePtrOutput) ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutput() TransferJobTransferSpecStateAwsS3DataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecStateAwsS3DataSourcePtrOutput) ToTransferJobTransferSpecStateAwsS3DataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateAwsS3DataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecStateAwsS3DataSourcePtrOutput) Elem() TransferJobTransferSpecStateAwsS3DataSourceOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecStateAwsS3DataSource) TransferJobTransferSpecStateAwsS3DataSource {
		return *v
	}).(TransferJobTransferSpecStateAwsS3DataSourceOutput)
}

// AWS credentials block.
func (o TransferJobTransferSpecStateAwsS3DataSourcePtrOutput) AwsAccessKey() TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateAwsS3DataSource) TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKey {
		return v.AwsAccessKey
	}).(TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecStateAwsS3DataSourcePtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateAwsS3DataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKey struct {
	// AWS Key ID.
	AccessKeyId string `pulumi:"accessKeyId"`
	// AWS Secret Access Key.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

type TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput() TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput
	ToTransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutputWithContext(context.Context) TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput
}

type TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyArgs struct {
	// AWS Key ID.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// AWS Secret Access Key.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKey)(nil)).Elem()
}

func (i TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyArgs) ToTransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput() TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput {
	return i.ToTransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyArgs) ToTransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutputWithContext(ctx context.Context) TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput)
}

type TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKey)(nil)).Elem()
}

func (o TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput) ToTransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput() TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput {
	return o
}

func (o TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput) ToTransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutputWithContext(ctx context.Context) TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput {
	return o
}

// AWS Key ID.
func (o TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKey) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// AWS Secret Access Key.
func (o TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKey) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type TransferJobTransferSpecStateGcsDataSink struct {
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

type TransferJobTransferSpecStateGcsDataSinkInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateGcsDataSinkOutput() TransferJobTransferSpecStateGcsDataSinkOutput
	ToTransferJobTransferSpecStateGcsDataSinkOutputWithContext(context.Context) TransferJobTransferSpecStateGcsDataSinkOutput
}

type TransferJobTransferSpecStateGcsDataSinkArgs struct {
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecStateGcsDataSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateGcsDataSink)(nil)).Elem()
}

func (i TransferJobTransferSpecStateGcsDataSinkArgs) ToTransferJobTransferSpecStateGcsDataSinkOutput() TransferJobTransferSpecStateGcsDataSinkOutput {
	return i.ToTransferJobTransferSpecStateGcsDataSinkOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateGcsDataSinkArgs) ToTransferJobTransferSpecStateGcsDataSinkOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateGcsDataSinkOutput)
}

func (i TransferJobTransferSpecStateGcsDataSinkArgs) ToTransferJobTransferSpecStateGcsDataSinkPtrOutput() TransferJobTransferSpecStateGcsDataSinkPtrOutput {
	return i.ToTransferJobTransferSpecStateGcsDataSinkPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateGcsDataSinkArgs) ToTransferJobTransferSpecStateGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateGcsDataSinkOutput).ToTransferJobTransferSpecStateGcsDataSinkPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecStateGcsDataSinkPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateGcsDataSinkPtrOutput() TransferJobTransferSpecStateGcsDataSinkPtrOutput
	ToTransferJobTransferSpecStateGcsDataSinkPtrOutputWithContext(context.Context) TransferJobTransferSpecStateGcsDataSinkPtrOutput
}

type transferJobTransferSpecStateGcsDataSinkPtrType TransferJobTransferSpecStateGcsDataSinkArgs

func TransferJobTransferSpecStateGcsDataSinkPtr(v *TransferJobTransferSpecStateGcsDataSinkArgs) TransferJobTransferSpecStateGcsDataSinkPtrInput {
	return (*transferJobTransferSpecStateGcsDataSinkPtrType)(v)
}

func (*transferJobTransferSpecStateGcsDataSinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateGcsDataSink)(nil)).Elem()
}

func (i *transferJobTransferSpecStateGcsDataSinkPtrType) ToTransferJobTransferSpecStateGcsDataSinkPtrOutput() TransferJobTransferSpecStateGcsDataSinkPtrOutput {
	return i.ToTransferJobTransferSpecStateGcsDataSinkPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecStateGcsDataSinkPtrType) ToTransferJobTransferSpecStateGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateGcsDataSinkPtrOutput)
}

type TransferJobTransferSpecStateGcsDataSinkOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateGcsDataSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateGcsDataSink)(nil)).Elem()
}

func (o TransferJobTransferSpecStateGcsDataSinkOutput) ToTransferJobTransferSpecStateGcsDataSinkOutput() TransferJobTransferSpecStateGcsDataSinkOutput {
	return o
}

func (o TransferJobTransferSpecStateGcsDataSinkOutput) ToTransferJobTransferSpecStateGcsDataSinkOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSinkOutput {
	return o
}

func (o TransferJobTransferSpecStateGcsDataSinkOutput) ToTransferJobTransferSpecStateGcsDataSinkPtrOutput() TransferJobTransferSpecStateGcsDataSinkPtrOutput {
	return o.ToTransferJobTransferSpecStateGcsDataSinkPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecStateGcsDataSinkOutput) ToTransferJobTransferSpecStateGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSinkPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateGcsDataSink) *TransferJobTransferSpecStateGcsDataSink {
		return &v
	}).(TransferJobTransferSpecStateGcsDataSinkPtrOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecStateGcsDataSinkOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateGcsDataSink) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecStateGcsDataSinkPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateGcsDataSinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateGcsDataSink)(nil)).Elem()
}

func (o TransferJobTransferSpecStateGcsDataSinkPtrOutput) ToTransferJobTransferSpecStateGcsDataSinkPtrOutput() TransferJobTransferSpecStateGcsDataSinkPtrOutput {
	return o
}

func (o TransferJobTransferSpecStateGcsDataSinkPtrOutput) ToTransferJobTransferSpecStateGcsDataSinkPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSinkPtrOutput {
	return o
}

func (o TransferJobTransferSpecStateGcsDataSinkPtrOutput) Elem() TransferJobTransferSpecStateGcsDataSinkOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecStateGcsDataSink) TransferJobTransferSpecStateGcsDataSink { return *v }).(TransferJobTransferSpecStateGcsDataSinkOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecStateGcsDataSinkPtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateGcsDataSink) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecStateGcsDataSource struct {
	// S3 Bucket name.
	BucketName string `pulumi:"bucketName"`
}

type TransferJobTransferSpecStateGcsDataSourceInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateGcsDataSourceOutput() TransferJobTransferSpecStateGcsDataSourceOutput
	ToTransferJobTransferSpecStateGcsDataSourceOutputWithContext(context.Context) TransferJobTransferSpecStateGcsDataSourceOutput
}

type TransferJobTransferSpecStateGcsDataSourceArgs struct {
	// S3 Bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (TransferJobTransferSpecStateGcsDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateGcsDataSource)(nil)).Elem()
}

func (i TransferJobTransferSpecStateGcsDataSourceArgs) ToTransferJobTransferSpecStateGcsDataSourceOutput() TransferJobTransferSpecStateGcsDataSourceOutput {
	return i.ToTransferJobTransferSpecStateGcsDataSourceOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateGcsDataSourceArgs) ToTransferJobTransferSpecStateGcsDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateGcsDataSourceOutput)
}

func (i TransferJobTransferSpecStateGcsDataSourceArgs) ToTransferJobTransferSpecStateGcsDataSourcePtrOutput() TransferJobTransferSpecStateGcsDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecStateGcsDataSourcePtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateGcsDataSourceArgs) ToTransferJobTransferSpecStateGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateGcsDataSourceOutput).ToTransferJobTransferSpecStateGcsDataSourcePtrOutputWithContext(ctx)
}

type TransferJobTransferSpecStateGcsDataSourcePtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateGcsDataSourcePtrOutput() TransferJobTransferSpecStateGcsDataSourcePtrOutput
	ToTransferJobTransferSpecStateGcsDataSourcePtrOutputWithContext(context.Context) TransferJobTransferSpecStateGcsDataSourcePtrOutput
}

type transferJobTransferSpecStateGcsDataSourcePtrType TransferJobTransferSpecStateGcsDataSourceArgs

func TransferJobTransferSpecStateGcsDataSourcePtr(v *TransferJobTransferSpecStateGcsDataSourceArgs) TransferJobTransferSpecStateGcsDataSourcePtrInput {
	return (*transferJobTransferSpecStateGcsDataSourcePtrType)(v)
}

func (*transferJobTransferSpecStateGcsDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateGcsDataSource)(nil)).Elem()
}

func (i *transferJobTransferSpecStateGcsDataSourcePtrType) ToTransferJobTransferSpecStateGcsDataSourcePtrOutput() TransferJobTransferSpecStateGcsDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecStateGcsDataSourcePtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecStateGcsDataSourcePtrType) ToTransferJobTransferSpecStateGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateGcsDataSourcePtrOutput)
}

type TransferJobTransferSpecStateGcsDataSourceOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateGcsDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateGcsDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecStateGcsDataSourceOutput) ToTransferJobTransferSpecStateGcsDataSourceOutput() TransferJobTransferSpecStateGcsDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecStateGcsDataSourceOutput) ToTransferJobTransferSpecStateGcsDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecStateGcsDataSourceOutput) ToTransferJobTransferSpecStateGcsDataSourcePtrOutput() TransferJobTransferSpecStateGcsDataSourcePtrOutput {
	return o.ToTransferJobTransferSpecStateGcsDataSourcePtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecStateGcsDataSourceOutput) ToTransferJobTransferSpecStateGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateGcsDataSource) *TransferJobTransferSpecStateGcsDataSource {
		return &v
	}).(TransferJobTransferSpecStateGcsDataSourcePtrOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecStateGcsDataSourceOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateGcsDataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecStateGcsDataSourcePtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateGcsDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateGcsDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecStateGcsDataSourcePtrOutput) ToTransferJobTransferSpecStateGcsDataSourcePtrOutput() TransferJobTransferSpecStateGcsDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecStateGcsDataSourcePtrOutput) ToTransferJobTransferSpecStateGcsDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateGcsDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecStateGcsDataSourcePtrOutput) Elem() TransferJobTransferSpecStateGcsDataSourceOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecStateGcsDataSource) TransferJobTransferSpecStateGcsDataSource {
		return *v
	}).(TransferJobTransferSpecStateGcsDataSourceOutput)
}

// S3 Bucket name.
func (o TransferJobTransferSpecStateGcsDataSourcePtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateGcsDataSource) string { return v.BucketName }).(pulumi.StringOutput)
}

type TransferJobTransferSpecStateHttpDataSource struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl string `pulumi:"listUrl"`
}

type TransferJobTransferSpecStateHttpDataSourceInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateHttpDataSourceOutput() TransferJobTransferSpecStateHttpDataSourceOutput
	ToTransferJobTransferSpecStateHttpDataSourceOutputWithContext(context.Context) TransferJobTransferSpecStateHttpDataSourceOutput
}

type TransferJobTransferSpecStateHttpDataSourceArgs struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl pulumi.StringInput `pulumi:"listUrl"`
}

func (TransferJobTransferSpecStateHttpDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateHttpDataSource)(nil)).Elem()
}

func (i TransferJobTransferSpecStateHttpDataSourceArgs) ToTransferJobTransferSpecStateHttpDataSourceOutput() TransferJobTransferSpecStateHttpDataSourceOutput {
	return i.ToTransferJobTransferSpecStateHttpDataSourceOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateHttpDataSourceArgs) ToTransferJobTransferSpecStateHttpDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecStateHttpDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateHttpDataSourceOutput)
}

func (i TransferJobTransferSpecStateHttpDataSourceArgs) ToTransferJobTransferSpecStateHttpDataSourcePtrOutput() TransferJobTransferSpecStateHttpDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecStateHttpDataSourcePtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateHttpDataSourceArgs) ToTransferJobTransferSpecStateHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateHttpDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateHttpDataSourceOutput).ToTransferJobTransferSpecStateHttpDataSourcePtrOutputWithContext(ctx)
}

type TransferJobTransferSpecStateHttpDataSourcePtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateHttpDataSourcePtrOutput() TransferJobTransferSpecStateHttpDataSourcePtrOutput
	ToTransferJobTransferSpecStateHttpDataSourcePtrOutputWithContext(context.Context) TransferJobTransferSpecStateHttpDataSourcePtrOutput
}

type transferJobTransferSpecStateHttpDataSourcePtrType TransferJobTransferSpecStateHttpDataSourceArgs

func TransferJobTransferSpecStateHttpDataSourcePtr(v *TransferJobTransferSpecStateHttpDataSourceArgs) TransferJobTransferSpecStateHttpDataSourcePtrInput {
	return (*transferJobTransferSpecStateHttpDataSourcePtrType)(v)
}

func (*transferJobTransferSpecStateHttpDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateHttpDataSource)(nil)).Elem()
}

func (i *transferJobTransferSpecStateHttpDataSourcePtrType) ToTransferJobTransferSpecStateHttpDataSourcePtrOutput() TransferJobTransferSpecStateHttpDataSourcePtrOutput {
	return i.ToTransferJobTransferSpecStateHttpDataSourcePtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecStateHttpDataSourcePtrType) ToTransferJobTransferSpecStateHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateHttpDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateHttpDataSourcePtrOutput)
}

type TransferJobTransferSpecStateHttpDataSourceOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateHttpDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateHttpDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecStateHttpDataSourceOutput) ToTransferJobTransferSpecStateHttpDataSourceOutput() TransferJobTransferSpecStateHttpDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecStateHttpDataSourceOutput) ToTransferJobTransferSpecStateHttpDataSourceOutputWithContext(ctx context.Context) TransferJobTransferSpecStateHttpDataSourceOutput {
	return o
}

func (o TransferJobTransferSpecStateHttpDataSourceOutput) ToTransferJobTransferSpecStateHttpDataSourcePtrOutput() TransferJobTransferSpecStateHttpDataSourcePtrOutput {
	return o.ToTransferJobTransferSpecStateHttpDataSourcePtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecStateHttpDataSourceOutput) ToTransferJobTransferSpecStateHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateHttpDataSourcePtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateHttpDataSource) *TransferJobTransferSpecStateHttpDataSource {
		return &v
	}).(TransferJobTransferSpecStateHttpDataSourcePtrOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o TransferJobTransferSpecStateHttpDataSourceOutput) ListUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateHttpDataSource) string { return v.ListUrl }).(pulumi.StringOutput)
}

type TransferJobTransferSpecStateHttpDataSourcePtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateHttpDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateHttpDataSource)(nil)).Elem()
}

func (o TransferJobTransferSpecStateHttpDataSourcePtrOutput) ToTransferJobTransferSpecStateHttpDataSourcePtrOutput() TransferJobTransferSpecStateHttpDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecStateHttpDataSourcePtrOutput) ToTransferJobTransferSpecStateHttpDataSourcePtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateHttpDataSourcePtrOutput {
	return o
}

func (o TransferJobTransferSpecStateHttpDataSourcePtrOutput) Elem() TransferJobTransferSpecStateHttpDataSourceOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecStateHttpDataSource) TransferJobTransferSpecStateHttpDataSource {
		return *v
	}).(TransferJobTransferSpecStateHttpDataSourceOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o TransferJobTransferSpecStateHttpDataSourcePtrOutput) ListUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateHttpDataSource) string { return v.ListUrl }).(pulumi.StringOutput)
}

type TransferJobTransferSpecStateObjectConditions struct {
	// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	ExcludePrefixes []string `pulumi:"excludePrefixes"`
	// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	IncludePrefixes []string `pulumi:"includePrefixes"`
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MaxTimeElapsedSinceLastModification *string `pulumi:"maxTimeElapsedSinceLastModification"`
	//
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MinTimeElapsedSinceLastModification *string `pulumi:"minTimeElapsedSinceLastModification"`
}

type TransferJobTransferSpecStateObjectConditionsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateObjectConditionsOutput() TransferJobTransferSpecStateObjectConditionsOutput
	ToTransferJobTransferSpecStateObjectConditionsOutputWithContext(context.Context) TransferJobTransferSpecStateObjectConditionsOutput
}

type TransferJobTransferSpecStateObjectConditionsArgs struct {
	// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	ExcludePrefixes pulumi.StringArrayInput `pulumi:"excludePrefixes"`
	// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
	IncludePrefixes pulumi.StringArrayInput `pulumi:"includePrefixes"`
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MaxTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"maxTimeElapsedSinceLastModification"`
	//
	// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	MinTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"minTimeElapsedSinceLastModification"`
}

func (TransferJobTransferSpecStateObjectConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateObjectConditions)(nil)).Elem()
}

func (i TransferJobTransferSpecStateObjectConditionsArgs) ToTransferJobTransferSpecStateObjectConditionsOutput() TransferJobTransferSpecStateObjectConditionsOutput {
	return i.ToTransferJobTransferSpecStateObjectConditionsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateObjectConditionsArgs) ToTransferJobTransferSpecStateObjectConditionsOutputWithContext(ctx context.Context) TransferJobTransferSpecStateObjectConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateObjectConditionsOutput)
}

func (i TransferJobTransferSpecStateObjectConditionsArgs) ToTransferJobTransferSpecStateObjectConditionsPtrOutput() TransferJobTransferSpecStateObjectConditionsPtrOutput {
	return i.ToTransferJobTransferSpecStateObjectConditionsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateObjectConditionsArgs) ToTransferJobTransferSpecStateObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateObjectConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateObjectConditionsOutput).ToTransferJobTransferSpecStateObjectConditionsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecStateObjectConditionsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateObjectConditionsPtrOutput() TransferJobTransferSpecStateObjectConditionsPtrOutput
	ToTransferJobTransferSpecStateObjectConditionsPtrOutputWithContext(context.Context) TransferJobTransferSpecStateObjectConditionsPtrOutput
}

type transferJobTransferSpecStateObjectConditionsPtrType TransferJobTransferSpecStateObjectConditionsArgs

func TransferJobTransferSpecStateObjectConditionsPtr(v *TransferJobTransferSpecStateObjectConditionsArgs) TransferJobTransferSpecStateObjectConditionsPtrInput {
	return (*transferJobTransferSpecStateObjectConditionsPtrType)(v)
}

func (*transferJobTransferSpecStateObjectConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateObjectConditions)(nil)).Elem()
}

func (i *transferJobTransferSpecStateObjectConditionsPtrType) ToTransferJobTransferSpecStateObjectConditionsPtrOutput() TransferJobTransferSpecStateObjectConditionsPtrOutput {
	return i.ToTransferJobTransferSpecStateObjectConditionsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecStateObjectConditionsPtrType) ToTransferJobTransferSpecStateObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateObjectConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateObjectConditionsPtrOutput)
}

type TransferJobTransferSpecStateObjectConditionsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateObjectConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateObjectConditions)(nil)).Elem()
}

func (o TransferJobTransferSpecStateObjectConditionsOutput) ToTransferJobTransferSpecStateObjectConditionsOutput() TransferJobTransferSpecStateObjectConditionsOutput {
	return o
}

func (o TransferJobTransferSpecStateObjectConditionsOutput) ToTransferJobTransferSpecStateObjectConditionsOutputWithContext(ctx context.Context) TransferJobTransferSpecStateObjectConditionsOutput {
	return o
}

func (o TransferJobTransferSpecStateObjectConditionsOutput) ToTransferJobTransferSpecStateObjectConditionsPtrOutput() TransferJobTransferSpecStateObjectConditionsPtrOutput {
	return o.ToTransferJobTransferSpecStateObjectConditionsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecStateObjectConditionsOutput) ToTransferJobTransferSpecStateObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateObjectConditionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateObjectConditions) *TransferJobTransferSpecStateObjectConditions {
		return &v
	}).(TransferJobTransferSpecStateObjectConditionsPtrOutput)
}

// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecStateObjectConditionsOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateObjectConditions) []string { return v.ExcludePrefixes }).(pulumi.StringArrayOutput)
}

// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecStateObjectConditionsOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateObjectConditions) []string { return v.IncludePrefixes }).(pulumi.StringArrayOutput)
}

// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecStateObjectConditionsOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateObjectConditions) *string {
		return v.MaxTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

//
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecStateObjectConditionsOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateObjectConditions) *string {
		return v.MinTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecStateObjectConditionsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateObjectConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateObjectConditions)(nil)).Elem()
}

func (o TransferJobTransferSpecStateObjectConditionsPtrOutput) ToTransferJobTransferSpecStateObjectConditionsPtrOutput() TransferJobTransferSpecStateObjectConditionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecStateObjectConditionsPtrOutput) ToTransferJobTransferSpecStateObjectConditionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateObjectConditionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecStateObjectConditionsPtrOutput) Elem() TransferJobTransferSpecStateObjectConditionsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecStateObjectConditions) TransferJobTransferSpecStateObjectConditions {
		return *v
	}).(TransferJobTransferSpecStateObjectConditionsOutput)
}

// `excludePrefixes` must follow the requirements described for `includePrefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecStateObjectConditionsPtrOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateObjectConditions) []string { return v.ExcludePrefixes }).(pulumi.StringArrayOutput)
}

// If `includeRefixes` is specified, objects that satisfy the object conditions must have names that start with one of the `includePrefixes` and that do not start with any of the `excludePrefixes`. If `includePrefixes` is not specified, all objects except those that have names starting with one of the `excludePrefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
func (o TransferJobTransferSpecStateObjectConditionsPtrOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateObjectConditions) []string { return v.IncludePrefixes }).(pulumi.StringArrayOutput)
}

// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecStateObjectConditionsPtrOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateObjectConditions) *string {
		return v.MaxTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

//
// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
func (o TransferJobTransferSpecStateObjectConditionsPtrOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateObjectConditions) *string {
		return v.MinTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

type TransferJobTransferSpecStateTransferOptions struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer *bool `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. Note that this option and
	// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
	DeleteObjectsUniqueInSink *bool `pulumi:"deleteObjectsUniqueInSink"`
	// Whether overwriting objects that already exist in the sink is allowed.
	OverwriteObjectsAlreadyExistingInSink *bool `pulumi:"overwriteObjectsAlreadyExistingInSink"`
}

type TransferJobTransferSpecStateTransferOptionsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateTransferOptionsOutput() TransferJobTransferSpecStateTransferOptionsOutput
	ToTransferJobTransferSpecStateTransferOptionsOutputWithContext(context.Context) TransferJobTransferSpecStateTransferOptionsOutput
}

type TransferJobTransferSpecStateTransferOptionsArgs struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer pulumi.BoolPtrInput `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. Note that this option and
	// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
	DeleteObjectsUniqueInSink pulumi.BoolPtrInput `pulumi:"deleteObjectsUniqueInSink"`
	// Whether overwriting objects that already exist in the sink is allowed.
	OverwriteObjectsAlreadyExistingInSink pulumi.BoolPtrInput `pulumi:"overwriteObjectsAlreadyExistingInSink"`
}

func (TransferJobTransferSpecStateTransferOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateTransferOptions)(nil)).Elem()
}

func (i TransferJobTransferSpecStateTransferOptionsArgs) ToTransferJobTransferSpecStateTransferOptionsOutput() TransferJobTransferSpecStateTransferOptionsOutput {
	return i.ToTransferJobTransferSpecStateTransferOptionsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateTransferOptionsArgs) ToTransferJobTransferSpecStateTransferOptionsOutputWithContext(ctx context.Context) TransferJobTransferSpecStateTransferOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateTransferOptionsOutput)
}

func (i TransferJobTransferSpecStateTransferOptionsArgs) ToTransferJobTransferSpecStateTransferOptionsPtrOutput() TransferJobTransferSpecStateTransferOptionsPtrOutput {
	return i.ToTransferJobTransferSpecStateTransferOptionsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecStateTransferOptionsArgs) ToTransferJobTransferSpecStateTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateTransferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateTransferOptionsOutput).ToTransferJobTransferSpecStateTransferOptionsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecStateTransferOptionsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecStateTransferOptionsPtrOutput() TransferJobTransferSpecStateTransferOptionsPtrOutput
	ToTransferJobTransferSpecStateTransferOptionsPtrOutputWithContext(context.Context) TransferJobTransferSpecStateTransferOptionsPtrOutput
}

type transferJobTransferSpecStateTransferOptionsPtrType TransferJobTransferSpecStateTransferOptionsArgs

func TransferJobTransferSpecStateTransferOptionsPtr(v *TransferJobTransferSpecStateTransferOptionsArgs) TransferJobTransferSpecStateTransferOptionsPtrInput {
	return (*transferJobTransferSpecStateTransferOptionsPtrType)(v)
}

func (*transferJobTransferSpecStateTransferOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateTransferOptions)(nil)).Elem()
}

func (i *transferJobTransferSpecStateTransferOptionsPtrType) ToTransferJobTransferSpecStateTransferOptionsPtrOutput() TransferJobTransferSpecStateTransferOptionsPtrOutput {
	return i.ToTransferJobTransferSpecStateTransferOptionsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecStateTransferOptionsPtrType) ToTransferJobTransferSpecStateTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateTransferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecStateTransferOptionsPtrOutput)
}

type TransferJobTransferSpecStateTransferOptionsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateTransferOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecStateTransferOptions)(nil)).Elem()
}

func (o TransferJobTransferSpecStateTransferOptionsOutput) ToTransferJobTransferSpecStateTransferOptionsOutput() TransferJobTransferSpecStateTransferOptionsOutput {
	return o
}

func (o TransferJobTransferSpecStateTransferOptionsOutput) ToTransferJobTransferSpecStateTransferOptionsOutputWithContext(ctx context.Context) TransferJobTransferSpecStateTransferOptionsOutput {
	return o
}

func (o TransferJobTransferSpecStateTransferOptionsOutput) ToTransferJobTransferSpecStateTransferOptionsPtrOutput() TransferJobTransferSpecStateTransferOptionsPtrOutput {
	return o.ToTransferJobTransferSpecStateTransferOptionsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecStateTransferOptionsOutput) ToTransferJobTransferSpecStateTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateTransferOptionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateTransferOptions) *TransferJobTransferSpecStateTransferOptions {
		return &v
	}).(TransferJobTransferSpecStateTransferOptionsPtrOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
func (o TransferJobTransferSpecStateTransferOptionsOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateTransferOptions) *bool {
		return v.DeleteObjectsFromSourceAfterTransfer
	}).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. Note that this option and
// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
func (o TransferJobTransferSpecStateTransferOptionsOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateTransferOptions) *bool { return v.DeleteObjectsUniqueInSink }).(pulumi.BoolPtrOutput)
}

// Whether overwriting objects that already exist in the sink is allowed.
func (o TransferJobTransferSpecStateTransferOptionsOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateTransferOptions) *bool {
		return v.OverwriteObjectsAlreadyExistingInSink
	}).(pulumi.BoolPtrOutput)
}

type TransferJobTransferSpecStateTransferOptionsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecStateTransferOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecStateTransferOptions)(nil)).Elem()
}

func (o TransferJobTransferSpecStateTransferOptionsPtrOutput) ToTransferJobTransferSpecStateTransferOptionsPtrOutput() TransferJobTransferSpecStateTransferOptionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecStateTransferOptionsPtrOutput) ToTransferJobTransferSpecStateTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecStateTransferOptionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecStateTransferOptionsPtrOutput) Elem() TransferJobTransferSpecStateTransferOptionsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecStateTransferOptions) TransferJobTransferSpecStateTransferOptions {
		return *v
	}).(TransferJobTransferSpecStateTransferOptionsOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
func (o TransferJobTransferSpecStateTransferOptionsPtrOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateTransferOptions) *bool {
		return v.DeleteObjectsFromSourceAfterTransfer
	}).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. Note that this option and
// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
func (o TransferJobTransferSpecStateTransferOptionsPtrOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateTransferOptions) *bool { return v.DeleteObjectsUniqueInSink }).(pulumi.BoolPtrOutput)
}

// Whether overwriting objects that already exist in the sink is allowed.
func (o TransferJobTransferSpecStateTransferOptionsPtrOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecStateTransferOptions) *bool {
		return v.OverwriteObjectsAlreadyExistingInSink
	}).(pulumi.BoolPtrOutput)
}

type TransferJobTransferSpecTransferOptions struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer *bool `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. Note that this option and
	// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
	DeleteObjectsUniqueInSink *bool `pulumi:"deleteObjectsUniqueInSink"`
	// Whether overwriting objects that already exist in the sink is allowed.
	OverwriteObjectsAlreadyExistingInSink *bool `pulumi:"overwriteObjectsAlreadyExistingInSink"`
}

type TransferJobTransferSpecTransferOptionsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecTransferOptionsOutput() TransferJobTransferSpecTransferOptionsOutput
	ToTransferJobTransferSpecTransferOptionsOutputWithContext(context.Context) TransferJobTransferSpecTransferOptionsOutput
}

type TransferJobTransferSpecTransferOptionsArgs struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer pulumi.BoolPtrInput `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. Note that this option and
	// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
	DeleteObjectsUniqueInSink pulumi.BoolPtrInput `pulumi:"deleteObjectsUniqueInSink"`
	// Whether overwriting objects that already exist in the sink is allowed.
	OverwriteObjectsAlreadyExistingInSink pulumi.BoolPtrInput `pulumi:"overwriteObjectsAlreadyExistingInSink"`
}

func (TransferJobTransferSpecTransferOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecTransferOptions)(nil)).Elem()
}

func (i TransferJobTransferSpecTransferOptionsArgs) ToTransferJobTransferSpecTransferOptionsOutput() TransferJobTransferSpecTransferOptionsOutput {
	return i.ToTransferJobTransferSpecTransferOptionsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecTransferOptionsArgs) ToTransferJobTransferSpecTransferOptionsOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecTransferOptionsOutput)
}

func (i TransferJobTransferSpecTransferOptionsArgs) ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput {
	return i.ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecTransferOptionsArgs) ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecTransferOptionsOutput).ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecTransferOptionsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput
	ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(context.Context) TransferJobTransferSpecTransferOptionsPtrOutput
}

type transferJobTransferSpecTransferOptionsPtrType TransferJobTransferSpecTransferOptionsArgs

func TransferJobTransferSpecTransferOptionsPtr(v *TransferJobTransferSpecTransferOptionsArgs) TransferJobTransferSpecTransferOptionsPtrInput {
	return (*transferJobTransferSpecTransferOptionsPtrType)(v)
}

func (*transferJobTransferSpecTransferOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecTransferOptions)(nil)).Elem()
}

func (i *transferJobTransferSpecTransferOptionsPtrType) ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput {
	return i.ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecTransferOptionsPtrType) ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecTransferOptionsPtrOutput)
}

type TransferJobTransferSpecTransferOptionsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecTransferOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecTransferOptions)(nil)).Elem()
}

func (o TransferJobTransferSpecTransferOptionsOutput) ToTransferJobTransferSpecTransferOptionsOutput() TransferJobTransferSpecTransferOptionsOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsOutput) ToTransferJobTransferSpecTransferOptionsOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsOutput) ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput {
	return o.ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecTransferOptionsOutput) ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *TransferJobTransferSpecTransferOptions {
		return &v
	}).(TransferJobTransferSpecTransferOptionsPtrOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *bool { return v.DeleteObjectsFromSourceAfterTransfer }).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. Note that this option and
// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *bool { return v.DeleteObjectsUniqueInSink }).(pulumi.BoolPtrOutput)
}

// Whether overwriting objects that already exist in the sink is allowed.
func (o TransferJobTransferSpecTransferOptionsOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *bool { return v.OverwriteObjectsAlreadyExistingInSink }).(pulumi.BoolPtrOutput)
}

type TransferJobTransferSpecTransferOptionsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecTransferOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecTransferOptions)(nil)).Elem()
}

func (o TransferJobTransferSpecTransferOptionsPtrOutput) ToTransferJobTransferSpecTransferOptionsPtrOutput() TransferJobTransferSpecTransferOptionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsPtrOutput) ToTransferJobTransferSpecTransferOptionsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsPtrOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsPtrOutput) Elem() TransferJobTransferSpecTransferOptionsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecTransferOptions) TransferJobTransferSpecTransferOptions { return *v }).(TransferJobTransferSpecTransferOptionsOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsPtrOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *bool { return v.DeleteObjectsFromSourceAfterTransfer }).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. Note that this option and
// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsPtrOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *bool { return v.DeleteObjectsUniqueInSink }).(pulumi.BoolPtrOutput)
}

// Whether overwriting objects that already exist in the sink is allowed.
func (o TransferJobTransferSpecTransferOptionsPtrOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptions) *bool { return v.OverwriteObjectsAlreadyExistingInSink }).(pulumi.BoolPtrOutput)
}

type TransferJobTransferSpecTransferOptionsArgs struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer *bool `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. Note that this option and
	// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
	DeleteObjectsUniqueInSink *bool `pulumi:"deleteObjectsUniqueInSink"`
	// Whether overwriting objects that already exist in the sink is allowed.
	OverwriteObjectsAlreadyExistingInSink *bool `pulumi:"overwriteObjectsAlreadyExistingInSink"`
}

type TransferJobTransferSpecTransferOptionsArgsInput interface {
	pulumi.Input

	ToTransferJobTransferSpecTransferOptionsArgsOutput() TransferJobTransferSpecTransferOptionsArgsOutput
	ToTransferJobTransferSpecTransferOptionsArgsOutputWithContext(context.Context) TransferJobTransferSpecTransferOptionsArgsOutput
}

type TransferJobTransferSpecTransferOptionsArgsArgs struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer pulumi.BoolPtrInput `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. Note that this option and
	// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
	DeleteObjectsUniqueInSink pulumi.BoolPtrInput `pulumi:"deleteObjectsUniqueInSink"`
	// Whether overwriting objects that already exist in the sink is allowed.
	OverwriteObjectsAlreadyExistingInSink pulumi.BoolPtrInput `pulumi:"overwriteObjectsAlreadyExistingInSink"`
}

func (TransferJobTransferSpecTransferOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecTransferOptionsArgs)(nil)).Elem()
}

func (i TransferJobTransferSpecTransferOptionsArgsArgs) ToTransferJobTransferSpecTransferOptionsArgsOutput() TransferJobTransferSpecTransferOptionsArgsOutput {
	return i.ToTransferJobTransferSpecTransferOptionsArgsOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecTransferOptionsArgsArgs) ToTransferJobTransferSpecTransferOptionsArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecTransferOptionsArgsOutput)
}

func (i TransferJobTransferSpecTransferOptionsArgsArgs) ToTransferJobTransferSpecTransferOptionsArgsPtrOutput() TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return i.ToTransferJobTransferSpecTransferOptionsArgsPtrOutputWithContext(context.Background())
}

func (i TransferJobTransferSpecTransferOptionsArgsArgs) ToTransferJobTransferSpecTransferOptionsArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecTransferOptionsArgsOutput).ToTransferJobTransferSpecTransferOptionsArgsPtrOutputWithContext(ctx)
}

type TransferJobTransferSpecTransferOptionsArgsPtrInput interface {
	pulumi.Input

	ToTransferJobTransferSpecTransferOptionsArgsPtrOutput() TransferJobTransferSpecTransferOptionsArgsPtrOutput
	ToTransferJobTransferSpecTransferOptionsArgsPtrOutputWithContext(context.Context) TransferJobTransferSpecTransferOptionsArgsPtrOutput
}

type transferJobTransferSpecTransferOptionsArgsPtrType TransferJobTransferSpecTransferOptionsArgsArgs

func TransferJobTransferSpecTransferOptionsArgsPtr(v *TransferJobTransferSpecTransferOptionsArgsArgs) TransferJobTransferSpecTransferOptionsArgsPtrInput {
	return (*transferJobTransferSpecTransferOptionsArgsPtrType)(v)
}

func (*transferJobTransferSpecTransferOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecTransferOptionsArgs)(nil)).Elem()
}

func (i *transferJobTransferSpecTransferOptionsArgsPtrType) ToTransferJobTransferSpecTransferOptionsArgsPtrOutput() TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return i.ToTransferJobTransferSpecTransferOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *transferJobTransferSpecTransferOptionsArgsPtrType) ToTransferJobTransferSpecTransferOptionsArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferJobTransferSpecTransferOptionsArgsPtrOutput)
}

type TransferJobTransferSpecTransferOptionsArgsOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecTransferOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferJobTransferSpecTransferOptionsArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecTransferOptionsArgsOutput) ToTransferJobTransferSpecTransferOptionsArgsOutput() TransferJobTransferSpecTransferOptionsArgsOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsArgsOutput) ToTransferJobTransferSpecTransferOptionsArgsOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsArgsOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsArgsOutput) ToTransferJobTransferSpecTransferOptionsArgsPtrOutput() TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return o.ToTransferJobTransferSpecTransferOptionsArgsPtrOutputWithContext(context.Background())
}

func (o TransferJobTransferSpecTransferOptionsArgsOutput) ToTransferJobTransferSpecTransferOptionsArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptionsArgs) *TransferJobTransferSpecTransferOptionsArgs {
		return &v
	}).(TransferJobTransferSpecTransferOptionsArgsPtrOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsArgsOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptionsArgs) *bool {
		return v.DeleteObjectsFromSourceAfterTransfer
	}).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. Note that this option and
// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsArgsOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptionsArgs) *bool { return v.DeleteObjectsUniqueInSink }).(pulumi.BoolPtrOutput)
}

// Whether overwriting objects that already exist in the sink is allowed.
func (o TransferJobTransferSpecTransferOptionsArgsOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptionsArgs) *bool {
		return v.OverwriteObjectsAlreadyExistingInSink
	}).(pulumi.BoolPtrOutput)
}

type TransferJobTransferSpecTransferOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (TransferJobTransferSpecTransferOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferJobTransferSpecTransferOptionsArgs)(nil)).Elem()
}

func (o TransferJobTransferSpecTransferOptionsArgsPtrOutput) ToTransferJobTransferSpecTransferOptionsArgsPtrOutput() TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsArgsPtrOutput) ToTransferJobTransferSpecTransferOptionsArgsPtrOutputWithContext(ctx context.Context) TransferJobTransferSpecTransferOptionsArgsPtrOutput {
	return o
}

func (o TransferJobTransferSpecTransferOptionsArgsPtrOutput) Elem() TransferJobTransferSpecTransferOptionsArgsOutput {
	return o.ApplyT(func(v *TransferJobTransferSpecTransferOptionsArgs) TransferJobTransferSpecTransferOptionsArgs {
		return *v
	}).(TransferJobTransferSpecTransferOptionsArgsOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `deleteObjectsUniqueInSink` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsArgsPtrOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptionsArgs) *bool {
		return v.DeleteObjectsFromSourceAfterTransfer
	}).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. Note that this option and
// `deleteObjectsFromSourceAfterTransfer` are mutually exclusive.
func (o TransferJobTransferSpecTransferOptionsArgsPtrOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptionsArgs) *bool { return v.DeleteObjectsUniqueInSink }).(pulumi.BoolPtrOutput)
}

// Whether overwriting objects that already exist in the sink is allowed.
func (o TransferJobTransferSpecTransferOptionsArgsPtrOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferJobTransferSpecTransferOptionsArgs) *bool {
		return v.OverwriteObjectsAlreadyExistingInSink
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketCorOutput{})
	pulumi.RegisterOutputType(BucketCorArrayOutput{})
	pulumi.RegisterOutputType(BucketCorArgsOutput{})
	pulumi.RegisterOutputType(BucketCorArgsArrayOutput{})
	pulumi.RegisterOutputType(BucketCorStateOutput{})
	pulumi.RegisterOutputType(BucketCorStateArrayOutput{})
	pulumi.RegisterOutputType(BucketEncryptionOutput{})
	pulumi.RegisterOutputType(BucketEncryptionPtrOutput{})
	pulumi.RegisterOutputType(BucketEncryptionArgsOutput{})
	pulumi.RegisterOutputType(BucketEncryptionArgsPtrOutput{})
	pulumi.RegisterOutputType(BucketEncryptionStateOutput{})
	pulumi.RegisterOutputType(BucketIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(BucketIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(BucketIAMBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(BucketIAMBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(BucketIAMBindingConditionStateOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(BucketIAMMemberConditionStateOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleActionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleActionArgsOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleArgsOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleArgsArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleConditionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleConditionArgsOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleStateOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleStateArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleStateActionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleStateConditionOutput{})
	pulumi.RegisterOutputType(BucketLoggingOutput{})
	pulumi.RegisterOutputType(BucketLoggingPtrOutput{})
	pulumi.RegisterOutputType(BucketLoggingArgsOutput{})
	pulumi.RegisterOutputType(BucketLoggingArgsPtrOutput{})
	pulumi.RegisterOutputType(BucketLoggingStateOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyArgsOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyStateOutput{})
	pulumi.RegisterOutputType(BucketVersioningOutput{})
	pulumi.RegisterOutputType(BucketVersioningPtrOutput{})
	pulumi.RegisterOutputType(BucketVersioningArgsOutput{})
	pulumi.RegisterOutputType(BucketVersioningArgsPtrOutput{})
	pulumi.RegisterOutputType(BucketVersioningStateOutput{})
	pulumi.RegisterOutputType(BucketWebsiteOutput{})
	pulumi.RegisterOutputType(BucketWebsitePtrOutput{})
	pulumi.RegisterOutputType(BucketWebsiteArgsOutput{})
	pulumi.RegisterOutputType(BucketWebsiteArgsPtrOutput{})
	pulumi.RegisterOutputType(BucketWebsiteStateOutput{})
	pulumi.RegisterOutputType(DefaultObjectAccessControlProjectTeamOutput{})
	pulumi.RegisterOutputType(DefaultObjectAccessControlProjectTeamPtrOutput{})
	pulumi.RegisterOutputType(DefaultObjectAccessControlProjectTeamStateOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlProjectTeamOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlProjectTeamPtrOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlProjectTeamStateOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleOutput{})
	pulumi.RegisterOutputType(TransferJobSchedulePtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleArgsOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleArgsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleEndDateOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleEndDatePtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleEndDateArgsOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleEndDateArgsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleStartDateOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleScheduleStartDateArgsOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStartTimeOfDayOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStartTimeOfDayPtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStartTimeOfDayArgsOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStartTimeOfDayArgsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStateOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStateScheduleEndDateOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStateScheduleEndDatePtrOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStateScheduleStartDateOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStateStartTimeOfDayOutput{})
	pulumi.RegisterOutputType(TransferJobScheduleStateStartTimeOfDayPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecArgsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecArgsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourceOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourcePtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourceArgsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourceArgsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSinkOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSinkPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSinkArgsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSinkArgsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSourceOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSourcePtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSourceArgsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecGcsDataSourceArgsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecHttpDataSourceOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecHttpDataSourcePtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecHttpDataSourceArgsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecHttpDataSourceArgsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecObjectConditionsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecObjectConditionsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecObjectConditionsArgsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecObjectConditionsArgsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateAwsS3DataSourceOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateAwsS3DataSourcePtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateAwsS3DataSourceAwsAccessKeyOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateGcsDataSinkOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateGcsDataSinkPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateGcsDataSourceOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateGcsDataSourcePtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateHttpDataSourceOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateHttpDataSourcePtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateObjectConditionsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateObjectConditionsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateTransferOptionsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecStateTransferOptionsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecTransferOptionsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecTransferOptionsPtrOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecTransferOptionsArgsOutput{})
	pulumi.RegisterOutputType(TransferJobTransferSpecTransferOptionsArgsPtrOutput{})
}
