// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pubsub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SubscriptionExpirationPolicy struct {
	Ttl string `pulumi:"ttl"`
}

type SubscriptionExpirationPolicyInput interface {
	pulumi.Input

	ToSubscriptionExpirationPolicyOutput() SubscriptionExpirationPolicyOutput
	ToSubscriptionExpirationPolicyOutputWithContext(context.Context) SubscriptionExpirationPolicyOutput
}

type SubscriptionExpirationPolicyArgs struct {
	Ttl pulumi.StringInput `pulumi:"ttl"`
}

func (SubscriptionExpirationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionExpirationPolicy)(nil)).Elem()
}

func (i SubscriptionExpirationPolicyArgs) ToSubscriptionExpirationPolicyOutput() SubscriptionExpirationPolicyOutput {
	return i.ToSubscriptionExpirationPolicyOutputWithContext(context.Background())
}

func (i SubscriptionExpirationPolicyArgs) ToSubscriptionExpirationPolicyOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyOutput)
}

func (i SubscriptionExpirationPolicyArgs) ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput {
	return i.ToSubscriptionExpirationPolicyPtrOutputWithContext(context.Background())
}

func (i SubscriptionExpirationPolicyArgs) ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyOutput).ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx)
}

type SubscriptionExpirationPolicyPtrInput interface {
	pulumi.Input

	ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput
	ToSubscriptionExpirationPolicyPtrOutputWithContext(context.Context) SubscriptionExpirationPolicyPtrOutput
}

type subscriptionExpirationPolicyPtrType SubscriptionExpirationPolicyArgs

func SubscriptionExpirationPolicyPtr(v *SubscriptionExpirationPolicyArgs) SubscriptionExpirationPolicyPtrInput {
	return (*subscriptionExpirationPolicyPtrType)(v)
}

func (*subscriptionExpirationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionExpirationPolicy)(nil)).Elem()
}

func (i *subscriptionExpirationPolicyPtrType) ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput {
	return i.ToSubscriptionExpirationPolicyPtrOutputWithContext(context.Background())
}

func (i *subscriptionExpirationPolicyPtrType) ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyPtrOutput)
}

type SubscriptionExpirationPolicyOutput struct{ *pulumi.OutputState }

func (SubscriptionExpirationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionExpirationPolicy)(nil)).Elem()
}

func (o SubscriptionExpirationPolicyOutput) ToSubscriptionExpirationPolicyOutput() SubscriptionExpirationPolicyOutput {
	return o
}

func (o SubscriptionExpirationPolicyOutput) ToSubscriptionExpirationPolicyOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyOutput {
	return o
}

func (o SubscriptionExpirationPolicyOutput) ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput {
	return o.ToSubscriptionExpirationPolicyPtrOutputWithContext(context.Background())
}

func (o SubscriptionExpirationPolicyOutput) ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyPtrOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicy) *SubscriptionExpirationPolicy {
		return &v
	}).(SubscriptionExpirationPolicyPtrOutput)
}
func (o SubscriptionExpirationPolicyOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicy) string { return v.Ttl }).(pulumi.StringOutput)
}

type SubscriptionExpirationPolicyPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionExpirationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionExpirationPolicy)(nil)).Elem()
}

func (o SubscriptionExpirationPolicyPtrOutput) ToSubscriptionExpirationPolicyPtrOutput() SubscriptionExpirationPolicyPtrOutput {
	return o
}

func (o SubscriptionExpirationPolicyPtrOutput) ToSubscriptionExpirationPolicyPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyPtrOutput {
	return o
}

func (o SubscriptionExpirationPolicyPtrOutput) Elem() SubscriptionExpirationPolicyOutput {
	return o.ApplyT(func(v *SubscriptionExpirationPolicy) SubscriptionExpirationPolicy { return *v }).(SubscriptionExpirationPolicyOutput)
}

func (o SubscriptionExpirationPolicyPtrOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicy) string { return v.Ttl }).(pulumi.StringOutput)
}

type SubscriptionExpirationPolicyArgs struct {
	Ttl string `pulumi:"ttl"`
}

type SubscriptionExpirationPolicyArgsInput interface {
	pulumi.Input

	ToSubscriptionExpirationPolicyArgsOutput() SubscriptionExpirationPolicyArgsOutput
	ToSubscriptionExpirationPolicyArgsOutputWithContext(context.Context) SubscriptionExpirationPolicyArgsOutput
}

type SubscriptionExpirationPolicyArgsArgs struct {
	Ttl pulumi.StringInput `pulumi:"ttl"`
}

func (SubscriptionExpirationPolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionExpirationPolicyArgs)(nil)).Elem()
}

func (i SubscriptionExpirationPolicyArgsArgs) ToSubscriptionExpirationPolicyArgsOutput() SubscriptionExpirationPolicyArgsOutput {
	return i.ToSubscriptionExpirationPolicyArgsOutputWithContext(context.Background())
}

func (i SubscriptionExpirationPolicyArgsArgs) ToSubscriptionExpirationPolicyArgsOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyArgsOutput)
}

func (i SubscriptionExpirationPolicyArgsArgs) ToSubscriptionExpirationPolicyArgsPtrOutput() SubscriptionExpirationPolicyArgsPtrOutput {
	return i.ToSubscriptionExpirationPolicyArgsPtrOutputWithContext(context.Background())
}

func (i SubscriptionExpirationPolicyArgsArgs) ToSubscriptionExpirationPolicyArgsPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyArgsOutput).ToSubscriptionExpirationPolicyArgsPtrOutputWithContext(ctx)
}

type SubscriptionExpirationPolicyArgsPtrInput interface {
	pulumi.Input

	ToSubscriptionExpirationPolicyArgsPtrOutput() SubscriptionExpirationPolicyArgsPtrOutput
	ToSubscriptionExpirationPolicyArgsPtrOutputWithContext(context.Context) SubscriptionExpirationPolicyArgsPtrOutput
}

type subscriptionExpirationPolicyArgsPtrType SubscriptionExpirationPolicyArgsArgs

func SubscriptionExpirationPolicyArgsPtr(v *SubscriptionExpirationPolicyArgsArgs) SubscriptionExpirationPolicyArgsPtrInput {
	return (*subscriptionExpirationPolicyArgsPtrType)(v)
}

func (*subscriptionExpirationPolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionExpirationPolicyArgs)(nil)).Elem()
}

func (i *subscriptionExpirationPolicyArgsPtrType) ToSubscriptionExpirationPolicyArgsPtrOutput() SubscriptionExpirationPolicyArgsPtrOutput {
	return i.ToSubscriptionExpirationPolicyArgsPtrOutputWithContext(context.Background())
}

func (i *subscriptionExpirationPolicyArgsPtrType) ToSubscriptionExpirationPolicyArgsPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyArgsPtrOutput)
}

type SubscriptionExpirationPolicyArgsOutput struct{ *pulumi.OutputState }

func (SubscriptionExpirationPolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionExpirationPolicyArgs)(nil)).Elem()
}

func (o SubscriptionExpirationPolicyArgsOutput) ToSubscriptionExpirationPolicyArgsOutput() SubscriptionExpirationPolicyArgsOutput {
	return o
}

func (o SubscriptionExpirationPolicyArgsOutput) ToSubscriptionExpirationPolicyArgsOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyArgsOutput {
	return o
}

func (o SubscriptionExpirationPolicyArgsOutput) ToSubscriptionExpirationPolicyArgsPtrOutput() SubscriptionExpirationPolicyArgsPtrOutput {
	return o.ToSubscriptionExpirationPolicyArgsPtrOutputWithContext(context.Background())
}

func (o SubscriptionExpirationPolicyArgsOutput) ToSubscriptionExpirationPolicyArgsPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyArgsPtrOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicyArgs) *SubscriptionExpirationPolicyArgs {
		return &v
	}).(SubscriptionExpirationPolicyArgsPtrOutput)
}
func (o SubscriptionExpirationPolicyArgsOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicyArgs) string { return v.Ttl }).(pulumi.StringOutput)
}

type SubscriptionExpirationPolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionExpirationPolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionExpirationPolicyArgs)(nil)).Elem()
}

func (o SubscriptionExpirationPolicyArgsPtrOutput) ToSubscriptionExpirationPolicyArgsPtrOutput() SubscriptionExpirationPolicyArgsPtrOutput {
	return o
}

func (o SubscriptionExpirationPolicyArgsPtrOutput) ToSubscriptionExpirationPolicyArgsPtrOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyArgsPtrOutput {
	return o
}

func (o SubscriptionExpirationPolicyArgsPtrOutput) Elem() SubscriptionExpirationPolicyArgsOutput {
	return o.ApplyT(func(v *SubscriptionExpirationPolicyArgs) SubscriptionExpirationPolicyArgs { return *v }).(SubscriptionExpirationPolicyArgsOutput)
}

func (o SubscriptionExpirationPolicyArgsPtrOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicyArgs) string { return v.Ttl }).(pulumi.StringOutput)
}

type SubscriptionExpirationPolicyState struct {
	Ttl string `pulumi:"ttl"`
}

type SubscriptionExpirationPolicyStateInput interface {
	pulumi.Input

	ToSubscriptionExpirationPolicyStateOutput() SubscriptionExpirationPolicyStateOutput
	ToSubscriptionExpirationPolicyStateOutputWithContext(context.Context) SubscriptionExpirationPolicyStateOutput
}

type SubscriptionExpirationPolicyStateArgs struct {
	Ttl pulumi.StringInput `pulumi:"ttl"`
}

func (SubscriptionExpirationPolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionExpirationPolicyState)(nil)).Elem()
}

func (i SubscriptionExpirationPolicyStateArgs) ToSubscriptionExpirationPolicyStateOutput() SubscriptionExpirationPolicyStateOutput {
	return i.ToSubscriptionExpirationPolicyStateOutputWithContext(context.Background())
}

func (i SubscriptionExpirationPolicyStateArgs) ToSubscriptionExpirationPolicyStateOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionExpirationPolicyStateOutput)
}

type SubscriptionExpirationPolicyStateOutput struct{ *pulumi.OutputState }

func (SubscriptionExpirationPolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionExpirationPolicyState)(nil)).Elem()
}

func (o SubscriptionExpirationPolicyStateOutput) ToSubscriptionExpirationPolicyStateOutput() SubscriptionExpirationPolicyStateOutput {
	return o
}

func (o SubscriptionExpirationPolicyStateOutput) ToSubscriptionExpirationPolicyStateOutputWithContext(ctx context.Context) SubscriptionExpirationPolicyStateOutput {
	return o
}

func (o SubscriptionExpirationPolicyStateOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionExpirationPolicyState) string { return v.Ttl }).(pulumi.StringOutput)
}

type SubscriptionIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type SubscriptionIAMBindingConditionInput interface {
	pulumi.Input

	ToSubscriptionIAMBindingConditionOutput() SubscriptionIAMBindingConditionOutput
	ToSubscriptionIAMBindingConditionOutputWithContext(context.Context) SubscriptionIAMBindingConditionOutput
}

type SubscriptionIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SubscriptionIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionOutput() SubscriptionIAMBindingConditionOutput {
	return i.ToSubscriptionIAMBindingConditionOutputWithContext(context.Background())
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionOutput)
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return i.ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionOutput).ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx)
}

type SubscriptionIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput
	ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Context) SubscriptionIAMBindingConditionPtrOutput
}

type subscriptionIAMBindingConditionPtrType SubscriptionIAMBindingConditionArgs

func SubscriptionIAMBindingConditionPtr(v *SubscriptionIAMBindingConditionArgs) SubscriptionIAMBindingConditionPtrInput {
	return (*subscriptionIAMBindingConditionPtrType)(v)
}

func (*subscriptionIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (i *subscriptionIAMBindingConditionPtrType) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return i.ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *subscriptionIAMBindingConditionPtrType) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionPtrOutput)
}

type SubscriptionIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionOutput() SubscriptionIAMBindingConditionOutput {
	return o
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionOutput {
	return o
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return o.ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) *SubscriptionIAMBindingCondition {
		return &v
	}).(SubscriptionIAMBindingConditionPtrOutput)
}
func (o SubscriptionIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (o SubscriptionIAMBindingConditionPtrOutput) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return o
}

func (o SubscriptionIAMBindingConditionPtrOutput) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return o
}

func (o SubscriptionIAMBindingConditionPtrOutput) Elem() SubscriptionIAMBindingConditionOutput {
	return o.ApplyT(func(v *SubscriptionIAMBindingCondition) SubscriptionIAMBindingCondition { return *v }).(SubscriptionIAMBindingConditionOutput)
}

func (o SubscriptionIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type SubscriptionIAMBindingConditionArgsInput interface {
	pulumi.Input

	ToSubscriptionIAMBindingConditionArgsOutput() SubscriptionIAMBindingConditionArgsOutput
	ToSubscriptionIAMBindingConditionArgsOutputWithContext(context.Context) SubscriptionIAMBindingConditionArgsOutput
}

type SubscriptionIAMBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SubscriptionIAMBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingConditionArgs)(nil)).Elem()
}

func (i SubscriptionIAMBindingConditionArgsArgs) ToSubscriptionIAMBindingConditionArgsOutput() SubscriptionIAMBindingConditionArgsOutput {
	return i.ToSubscriptionIAMBindingConditionArgsOutputWithContext(context.Background())
}

func (i SubscriptionIAMBindingConditionArgsArgs) ToSubscriptionIAMBindingConditionArgsOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionArgsOutput)
}

func (i SubscriptionIAMBindingConditionArgsArgs) ToSubscriptionIAMBindingConditionArgsPtrOutput() SubscriptionIAMBindingConditionArgsPtrOutput {
	return i.ToSubscriptionIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i SubscriptionIAMBindingConditionArgsArgs) ToSubscriptionIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionArgsOutput).ToSubscriptionIAMBindingConditionArgsPtrOutputWithContext(ctx)
}

type SubscriptionIAMBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToSubscriptionIAMBindingConditionArgsPtrOutput() SubscriptionIAMBindingConditionArgsPtrOutput
	ToSubscriptionIAMBindingConditionArgsPtrOutputWithContext(context.Context) SubscriptionIAMBindingConditionArgsPtrOutput
}

type subscriptionIAMBindingConditionArgsPtrType SubscriptionIAMBindingConditionArgsArgs

func SubscriptionIAMBindingConditionArgsPtr(v *SubscriptionIAMBindingConditionArgsArgs) SubscriptionIAMBindingConditionArgsPtrInput {
	return (*subscriptionIAMBindingConditionArgsPtrType)(v)
}

func (*subscriptionIAMBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMBindingConditionArgs)(nil)).Elem()
}

func (i *subscriptionIAMBindingConditionArgsPtrType) ToSubscriptionIAMBindingConditionArgsPtrOutput() SubscriptionIAMBindingConditionArgsPtrOutput {
	return i.ToSubscriptionIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *subscriptionIAMBindingConditionArgsPtrType) ToSubscriptionIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionArgsPtrOutput)
}

type SubscriptionIAMBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingConditionArgs)(nil)).Elem()
}

func (o SubscriptionIAMBindingConditionArgsOutput) ToSubscriptionIAMBindingConditionArgsOutput() SubscriptionIAMBindingConditionArgsOutput {
	return o
}

func (o SubscriptionIAMBindingConditionArgsOutput) ToSubscriptionIAMBindingConditionArgsOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionArgsOutput {
	return o
}

func (o SubscriptionIAMBindingConditionArgsOutput) ToSubscriptionIAMBindingConditionArgsPtrOutput() SubscriptionIAMBindingConditionArgsPtrOutput {
	return o.ToSubscriptionIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o SubscriptionIAMBindingConditionArgsOutput) ToSubscriptionIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionArgs) *SubscriptionIAMBindingConditionArgs {
		return &v
	}).(SubscriptionIAMBindingConditionArgsPtrOutput)
}
func (o SubscriptionIAMBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMBindingConditionArgs)(nil)).Elem()
}

func (o SubscriptionIAMBindingConditionArgsPtrOutput) ToSubscriptionIAMBindingConditionArgsPtrOutput() SubscriptionIAMBindingConditionArgsPtrOutput {
	return o
}

func (o SubscriptionIAMBindingConditionArgsPtrOutput) ToSubscriptionIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionArgsPtrOutput {
	return o
}

func (o SubscriptionIAMBindingConditionArgsPtrOutput) Elem() SubscriptionIAMBindingConditionArgsOutput {
	return o.ApplyT(func(v *SubscriptionIAMBindingConditionArgs) SubscriptionIAMBindingConditionArgs { return *v }).(SubscriptionIAMBindingConditionArgsOutput)
}

func (o SubscriptionIAMBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMBindingConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type SubscriptionIAMBindingConditionStateInput interface {
	pulumi.Input

	ToSubscriptionIAMBindingConditionStateOutput() SubscriptionIAMBindingConditionStateOutput
	ToSubscriptionIAMBindingConditionStateOutputWithContext(context.Context) SubscriptionIAMBindingConditionStateOutput
}

type SubscriptionIAMBindingConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SubscriptionIAMBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingConditionState)(nil)).Elem()
}

func (i SubscriptionIAMBindingConditionStateArgs) ToSubscriptionIAMBindingConditionStateOutput() SubscriptionIAMBindingConditionStateOutput {
	return i.ToSubscriptionIAMBindingConditionStateOutputWithContext(context.Background())
}

func (i SubscriptionIAMBindingConditionStateArgs) ToSubscriptionIAMBindingConditionStateOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionStateOutput)
}

type SubscriptionIAMBindingConditionStateOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingConditionState)(nil)).Elem()
}

func (o SubscriptionIAMBindingConditionStateOutput) ToSubscriptionIAMBindingConditionStateOutput() SubscriptionIAMBindingConditionStateOutput {
	return o
}

func (o SubscriptionIAMBindingConditionStateOutput) ToSubscriptionIAMBindingConditionStateOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionStateOutput {
	return o
}

func (o SubscriptionIAMBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type SubscriptionIAMMemberConditionInput interface {
	pulumi.Input

	ToSubscriptionIAMMemberConditionOutput() SubscriptionIAMMemberConditionOutput
	ToSubscriptionIAMMemberConditionOutputWithContext(context.Context) SubscriptionIAMMemberConditionOutput
}

type SubscriptionIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SubscriptionIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionOutput() SubscriptionIAMMemberConditionOutput {
	return i.ToSubscriptionIAMMemberConditionOutputWithContext(context.Background())
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionOutput)
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return i.ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionOutput).ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx)
}

type SubscriptionIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput
	ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Context) SubscriptionIAMMemberConditionPtrOutput
}

type subscriptionIAMMemberConditionPtrType SubscriptionIAMMemberConditionArgs

func SubscriptionIAMMemberConditionPtr(v *SubscriptionIAMMemberConditionArgs) SubscriptionIAMMemberConditionPtrInput {
	return (*subscriptionIAMMemberConditionPtrType)(v)
}

func (*subscriptionIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (i *subscriptionIAMMemberConditionPtrType) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return i.ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *subscriptionIAMMemberConditionPtrType) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionPtrOutput)
}

type SubscriptionIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionOutput() SubscriptionIAMMemberConditionOutput {
	return o
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionOutput {
	return o
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return o.ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) *SubscriptionIAMMemberCondition {
		return &v
	}).(SubscriptionIAMMemberConditionPtrOutput)
}
func (o SubscriptionIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (o SubscriptionIAMMemberConditionPtrOutput) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return o
}

func (o SubscriptionIAMMemberConditionPtrOutput) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return o
}

func (o SubscriptionIAMMemberConditionPtrOutput) Elem() SubscriptionIAMMemberConditionOutput {
	return o.ApplyT(func(v *SubscriptionIAMMemberCondition) SubscriptionIAMMemberCondition { return *v }).(SubscriptionIAMMemberConditionOutput)
}

func (o SubscriptionIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMMemberConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type SubscriptionIAMMemberConditionArgsInput interface {
	pulumi.Input

	ToSubscriptionIAMMemberConditionArgsOutput() SubscriptionIAMMemberConditionArgsOutput
	ToSubscriptionIAMMemberConditionArgsOutputWithContext(context.Context) SubscriptionIAMMemberConditionArgsOutput
}

type SubscriptionIAMMemberConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SubscriptionIAMMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberConditionArgs)(nil)).Elem()
}

func (i SubscriptionIAMMemberConditionArgsArgs) ToSubscriptionIAMMemberConditionArgsOutput() SubscriptionIAMMemberConditionArgsOutput {
	return i.ToSubscriptionIAMMemberConditionArgsOutputWithContext(context.Background())
}

func (i SubscriptionIAMMemberConditionArgsArgs) ToSubscriptionIAMMemberConditionArgsOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionArgsOutput)
}

func (i SubscriptionIAMMemberConditionArgsArgs) ToSubscriptionIAMMemberConditionArgsPtrOutput() SubscriptionIAMMemberConditionArgsPtrOutput {
	return i.ToSubscriptionIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i SubscriptionIAMMemberConditionArgsArgs) ToSubscriptionIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionArgsOutput).ToSubscriptionIAMMemberConditionArgsPtrOutputWithContext(ctx)
}

type SubscriptionIAMMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToSubscriptionIAMMemberConditionArgsPtrOutput() SubscriptionIAMMemberConditionArgsPtrOutput
	ToSubscriptionIAMMemberConditionArgsPtrOutputWithContext(context.Context) SubscriptionIAMMemberConditionArgsPtrOutput
}

type subscriptionIAMMemberConditionArgsPtrType SubscriptionIAMMemberConditionArgsArgs

func SubscriptionIAMMemberConditionArgsPtr(v *SubscriptionIAMMemberConditionArgsArgs) SubscriptionIAMMemberConditionArgsPtrInput {
	return (*subscriptionIAMMemberConditionArgsPtrType)(v)
}

func (*subscriptionIAMMemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMMemberConditionArgs)(nil)).Elem()
}

func (i *subscriptionIAMMemberConditionArgsPtrType) ToSubscriptionIAMMemberConditionArgsPtrOutput() SubscriptionIAMMemberConditionArgsPtrOutput {
	return i.ToSubscriptionIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *subscriptionIAMMemberConditionArgsPtrType) ToSubscriptionIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionArgsPtrOutput)
}

type SubscriptionIAMMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberConditionArgs)(nil)).Elem()
}

func (o SubscriptionIAMMemberConditionArgsOutput) ToSubscriptionIAMMemberConditionArgsOutput() SubscriptionIAMMemberConditionArgsOutput {
	return o
}

func (o SubscriptionIAMMemberConditionArgsOutput) ToSubscriptionIAMMemberConditionArgsOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionArgsOutput {
	return o
}

func (o SubscriptionIAMMemberConditionArgsOutput) ToSubscriptionIAMMemberConditionArgsPtrOutput() SubscriptionIAMMemberConditionArgsPtrOutput {
	return o.ToSubscriptionIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o SubscriptionIAMMemberConditionArgsOutput) ToSubscriptionIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionArgs) *SubscriptionIAMMemberConditionArgs {
		return &v
	}).(SubscriptionIAMMemberConditionArgsPtrOutput)
}
func (o SubscriptionIAMMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMMemberConditionArgs)(nil)).Elem()
}

func (o SubscriptionIAMMemberConditionArgsPtrOutput) ToSubscriptionIAMMemberConditionArgsPtrOutput() SubscriptionIAMMemberConditionArgsPtrOutput {
	return o
}

func (o SubscriptionIAMMemberConditionArgsPtrOutput) ToSubscriptionIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionArgsPtrOutput {
	return o
}

func (o SubscriptionIAMMemberConditionArgsPtrOutput) Elem() SubscriptionIAMMemberConditionArgsOutput {
	return o.ApplyT(func(v *SubscriptionIAMMemberConditionArgs) SubscriptionIAMMemberConditionArgs { return *v }).(SubscriptionIAMMemberConditionArgsOutput)
}

func (o SubscriptionIAMMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMMemberConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type SubscriptionIAMMemberConditionStateInput interface {
	pulumi.Input

	ToSubscriptionIAMMemberConditionStateOutput() SubscriptionIAMMemberConditionStateOutput
	ToSubscriptionIAMMemberConditionStateOutputWithContext(context.Context) SubscriptionIAMMemberConditionStateOutput
}

type SubscriptionIAMMemberConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (SubscriptionIAMMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberConditionState)(nil)).Elem()
}

func (i SubscriptionIAMMemberConditionStateArgs) ToSubscriptionIAMMemberConditionStateOutput() SubscriptionIAMMemberConditionStateOutput {
	return i.ToSubscriptionIAMMemberConditionStateOutputWithContext(context.Background())
}

func (i SubscriptionIAMMemberConditionStateArgs) ToSubscriptionIAMMemberConditionStateOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionStateOutput)
}

type SubscriptionIAMMemberConditionStateOutput struct{ *pulumi.OutputState }

func (SubscriptionIAMMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberConditionState)(nil)).Elem()
}

func (o SubscriptionIAMMemberConditionStateOutput) ToSubscriptionIAMMemberConditionStateOutput() SubscriptionIAMMemberConditionStateOutput {
	return o
}

func (o SubscriptionIAMMemberConditionStateOutput) ToSubscriptionIAMMemberConditionStateOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionStateOutput {
	return o
}

func (o SubscriptionIAMMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionPushConfig struct {
	Attributes   map[string]string                `pulumi:"attributes"`
	OidcToken    *SubscriptionPushConfigOidcToken `pulumi:"oidcToken"`
	PushEndpoint string                           `pulumi:"pushEndpoint"`
}

type SubscriptionPushConfigInput interface {
	pulumi.Input

	ToSubscriptionPushConfigOutput() SubscriptionPushConfigOutput
	ToSubscriptionPushConfigOutputWithContext(context.Context) SubscriptionPushConfigOutput
}

type SubscriptionPushConfigArgs struct {
	Attributes   pulumi.StringMapInput                   `pulumi:"attributes"`
	OidcToken    SubscriptionPushConfigOidcTokenPtrInput `pulumi:"oidcToken"`
	PushEndpoint pulumi.StringInput                      `pulumi:"pushEndpoint"`
}

func (SubscriptionPushConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfig)(nil)).Elem()
}

func (i SubscriptionPushConfigArgs) ToSubscriptionPushConfigOutput() SubscriptionPushConfigOutput {
	return i.ToSubscriptionPushConfigOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigArgs) ToSubscriptionPushConfigOutputWithContext(ctx context.Context) SubscriptionPushConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOutput)
}

func (i SubscriptionPushConfigArgs) ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput {
	return i.ToSubscriptionPushConfigPtrOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigArgs) ToSubscriptionPushConfigPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOutput).ToSubscriptionPushConfigPtrOutputWithContext(ctx)
}

type SubscriptionPushConfigPtrInput interface {
	pulumi.Input

	ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput
	ToSubscriptionPushConfigPtrOutputWithContext(context.Context) SubscriptionPushConfigPtrOutput
}

type subscriptionPushConfigPtrType SubscriptionPushConfigArgs

func SubscriptionPushConfigPtr(v *SubscriptionPushConfigArgs) SubscriptionPushConfigPtrInput {
	return (*subscriptionPushConfigPtrType)(v)
}

func (*subscriptionPushConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfig)(nil)).Elem()
}

func (i *subscriptionPushConfigPtrType) ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput {
	return i.ToSubscriptionPushConfigPtrOutputWithContext(context.Background())
}

func (i *subscriptionPushConfigPtrType) ToSubscriptionPushConfigPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigPtrOutput)
}

type SubscriptionPushConfigOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfig)(nil)).Elem()
}

func (o SubscriptionPushConfigOutput) ToSubscriptionPushConfigOutput() SubscriptionPushConfigOutput {
	return o
}

func (o SubscriptionPushConfigOutput) ToSubscriptionPushConfigOutputWithContext(ctx context.Context) SubscriptionPushConfigOutput {
	return o
}

func (o SubscriptionPushConfigOutput) ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput {
	return o.ToSubscriptionPushConfigPtrOutputWithContext(context.Background())
}

func (o SubscriptionPushConfigOutput) ToSubscriptionPushConfigPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) *SubscriptionPushConfig {
		return &v
	}).(SubscriptionPushConfigPtrOutput)
}
func (o SubscriptionPushConfigOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

func (o SubscriptionPushConfigOutput) OidcToken() SubscriptionPushConfigOidcTokenPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) *SubscriptionPushConfigOidcToken { return v.OidcToken }).(SubscriptionPushConfigOidcTokenPtrOutput)
}

func (o SubscriptionPushConfigOutput) PushEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) string { return v.PushEndpoint }).(pulumi.StringOutput)
}

type SubscriptionPushConfigPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfig)(nil)).Elem()
}

func (o SubscriptionPushConfigPtrOutput) ToSubscriptionPushConfigPtrOutput() SubscriptionPushConfigPtrOutput {
	return o
}

func (o SubscriptionPushConfigPtrOutput) ToSubscriptionPushConfigPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigPtrOutput {
	return o
}

func (o SubscriptionPushConfigPtrOutput) Elem() SubscriptionPushConfigOutput {
	return o.ApplyT(func(v *SubscriptionPushConfig) SubscriptionPushConfig { return *v }).(SubscriptionPushConfigOutput)
}

func (o SubscriptionPushConfigPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

func (o SubscriptionPushConfigPtrOutput) OidcToken() SubscriptionPushConfigOidcTokenPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) *SubscriptionPushConfigOidcToken { return v.OidcToken }).(SubscriptionPushConfigOidcTokenPtrOutput)
}

func (o SubscriptionPushConfigPtrOutput) PushEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfig) string { return v.PushEndpoint }).(pulumi.StringOutput)
}

type SubscriptionPushConfigArgs struct {
	Attributes   map[string]string                    `pulumi:"attributes"`
	OidcToken    *SubscriptionPushConfigOidcTokenArgs `pulumi:"oidcToken"`
	PushEndpoint string                               `pulumi:"pushEndpoint"`
}

type SubscriptionPushConfigArgsInput interface {
	pulumi.Input

	ToSubscriptionPushConfigArgsOutput() SubscriptionPushConfigArgsOutput
	ToSubscriptionPushConfigArgsOutputWithContext(context.Context) SubscriptionPushConfigArgsOutput
}

type SubscriptionPushConfigArgsArgs struct {
	Attributes   pulumi.StringMapInput                       `pulumi:"attributes"`
	OidcToken    SubscriptionPushConfigOidcTokenArgsPtrInput `pulumi:"oidcToken"`
	PushEndpoint pulumi.StringInput                          `pulumi:"pushEndpoint"`
}

func (SubscriptionPushConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigArgs)(nil)).Elem()
}

func (i SubscriptionPushConfigArgsArgs) ToSubscriptionPushConfigArgsOutput() SubscriptionPushConfigArgsOutput {
	return i.ToSubscriptionPushConfigArgsOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigArgsArgs) ToSubscriptionPushConfigArgsOutputWithContext(ctx context.Context) SubscriptionPushConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigArgsOutput)
}

func (i SubscriptionPushConfigArgsArgs) ToSubscriptionPushConfigArgsPtrOutput() SubscriptionPushConfigArgsPtrOutput {
	return i.ToSubscriptionPushConfigArgsPtrOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigArgsArgs) ToSubscriptionPushConfigArgsPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigArgsOutput).ToSubscriptionPushConfigArgsPtrOutputWithContext(ctx)
}

type SubscriptionPushConfigArgsPtrInput interface {
	pulumi.Input

	ToSubscriptionPushConfigArgsPtrOutput() SubscriptionPushConfigArgsPtrOutput
	ToSubscriptionPushConfigArgsPtrOutputWithContext(context.Context) SubscriptionPushConfigArgsPtrOutput
}

type subscriptionPushConfigArgsPtrType SubscriptionPushConfigArgsArgs

func SubscriptionPushConfigArgsPtr(v *SubscriptionPushConfigArgsArgs) SubscriptionPushConfigArgsPtrInput {
	return (*subscriptionPushConfigArgsPtrType)(v)
}

func (*subscriptionPushConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigArgs)(nil)).Elem()
}

func (i *subscriptionPushConfigArgsPtrType) ToSubscriptionPushConfigArgsPtrOutput() SubscriptionPushConfigArgsPtrOutput {
	return i.ToSubscriptionPushConfigArgsPtrOutputWithContext(context.Background())
}

func (i *subscriptionPushConfigArgsPtrType) ToSubscriptionPushConfigArgsPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigArgsPtrOutput)
}

type SubscriptionPushConfigArgsOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigArgs)(nil)).Elem()
}

func (o SubscriptionPushConfigArgsOutput) ToSubscriptionPushConfigArgsOutput() SubscriptionPushConfigArgsOutput {
	return o
}

func (o SubscriptionPushConfigArgsOutput) ToSubscriptionPushConfigArgsOutputWithContext(ctx context.Context) SubscriptionPushConfigArgsOutput {
	return o
}

func (o SubscriptionPushConfigArgsOutput) ToSubscriptionPushConfigArgsPtrOutput() SubscriptionPushConfigArgsPtrOutput {
	return o.ToSubscriptionPushConfigArgsPtrOutputWithContext(context.Background())
}

func (o SubscriptionPushConfigArgsOutput) ToSubscriptionPushConfigArgsPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigArgsPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigArgs) *SubscriptionPushConfigArgs {
		return &v
	}).(SubscriptionPushConfigArgsPtrOutput)
}
func (o SubscriptionPushConfigArgsOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubscriptionPushConfigArgs) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

func (o SubscriptionPushConfigArgsOutput) OidcToken() SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigArgs) *SubscriptionPushConfigOidcTokenArgs { return v.OidcToken }).(SubscriptionPushConfigOidcTokenArgsPtrOutput)
}

func (o SubscriptionPushConfigArgsOutput) PushEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigArgs) string { return v.PushEndpoint }).(pulumi.StringOutput)
}

type SubscriptionPushConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigArgs)(nil)).Elem()
}

func (o SubscriptionPushConfigArgsPtrOutput) ToSubscriptionPushConfigArgsPtrOutput() SubscriptionPushConfigArgsPtrOutput {
	return o
}

func (o SubscriptionPushConfigArgsPtrOutput) ToSubscriptionPushConfigArgsPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigArgsPtrOutput {
	return o
}

func (o SubscriptionPushConfigArgsPtrOutput) Elem() SubscriptionPushConfigArgsOutput {
	return o.ApplyT(func(v *SubscriptionPushConfigArgs) SubscriptionPushConfigArgs { return *v }).(SubscriptionPushConfigArgsOutput)
}

func (o SubscriptionPushConfigArgsPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubscriptionPushConfigArgs) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

func (o SubscriptionPushConfigArgsPtrOutput) OidcToken() SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigArgs) *SubscriptionPushConfigOidcTokenArgs { return v.OidcToken }).(SubscriptionPushConfigOidcTokenArgsPtrOutput)
}

func (o SubscriptionPushConfigArgsPtrOutput) PushEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigArgs) string { return v.PushEndpoint }).(pulumi.StringOutput)
}

type SubscriptionPushConfigOidcToken struct {
	Audience            *string `pulumi:"audience"`
	ServiceAccountEmail string  `pulumi:"serviceAccountEmail"`
}

type SubscriptionPushConfigOidcTokenInput interface {
	pulumi.Input

	ToSubscriptionPushConfigOidcTokenOutput() SubscriptionPushConfigOidcTokenOutput
	ToSubscriptionPushConfigOidcTokenOutputWithContext(context.Context) SubscriptionPushConfigOidcTokenOutput
}

type SubscriptionPushConfigOidcTokenArgs struct {
	Audience            pulumi.StringPtrInput `pulumi:"audience"`
	ServiceAccountEmail pulumi.StringInput    `pulumi:"serviceAccountEmail"`
}

func (SubscriptionPushConfigOidcTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigOidcToken)(nil)).Elem()
}

func (i SubscriptionPushConfigOidcTokenArgs) ToSubscriptionPushConfigOidcTokenOutput() SubscriptionPushConfigOidcTokenOutput {
	return i.ToSubscriptionPushConfigOidcTokenOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigOidcTokenArgs) ToSubscriptionPushConfigOidcTokenOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOidcTokenOutput)
}

func (i SubscriptionPushConfigOidcTokenArgs) ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput {
	return i.ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigOidcTokenArgs) ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOidcTokenOutput).ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx)
}

type SubscriptionPushConfigOidcTokenPtrInput interface {
	pulumi.Input

	ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput
	ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(context.Context) SubscriptionPushConfigOidcTokenPtrOutput
}

type subscriptionPushConfigOidcTokenPtrType SubscriptionPushConfigOidcTokenArgs

func SubscriptionPushConfigOidcTokenPtr(v *SubscriptionPushConfigOidcTokenArgs) SubscriptionPushConfigOidcTokenPtrInput {
	return (*subscriptionPushConfigOidcTokenPtrType)(v)
}

func (*subscriptionPushConfigOidcTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigOidcToken)(nil)).Elem()
}

func (i *subscriptionPushConfigOidcTokenPtrType) ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput {
	return i.ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(context.Background())
}

func (i *subscriptionPushConfigOidcTokenPtrType) ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOidcTokenPtrOutput)
}

type SubscriptionPushConfigOidcTokenOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigOidcTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigOidcToken)(nil)).Elem()
}

func (o SubscriptionPushConfigOidcTokenOutput) ToSubscriptionPushConfigOidcTokenOutput() SubscriptionPushConfigOidcTokenOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenOutput) ToSubscriptionPushConfigOidcTokenOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenOutput) ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput {
	return o.ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(context.Background())
}

func (o SubscriptionPushConfigOidcTokenOutput) ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) *SubscriptionPushConfigOidcToken {
		return &v
	}).(SubscriptionPushConfigOidcTokenPtrOutput)
}
func (o SubscriptionPushConfigOidcTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPushConfigOidcTokenOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type SubscriptionPushConfigOidcTokenPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigOidcTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigOidcToken)(nil)).Elem()
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) ToSubscriptionPushConfigOidcTokenPtrOutput() SubscriptionPushConfigOidcTokenPtrOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) ToSubscriptionPushConfigOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenPtrOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) Elem() SubscriptionPushConfigOidcTokenOutput {
	return o.ApplyT(func(v *SubscriptionPushConfigOidcToken) SubscriptionPushConfigOidcToken { return *v }).(SubscriptionPushConfigOidcTokenOutput)
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPushConfigOidcTokenPtrOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type SubscriptionPushConfigOidcTokenArgs struct {
	Audience            *string `pulumi:"audience"`
	ServiceAccountEmail string  `pulumi:"serviceAccountEmail"`
}

type SubscriptionPushConfigOidcTokenArgsInput interface {
	pulumi.Input

	ToSubscriptionPushConfigOidcTokenArgsOutput() SubscriptionPushConfigOidcTokenArgsOutput
	ToSubscriptionPushConfigOidcTokenArgsOutputWithContext(context.Context) SubscriptionPushConfigOidcTokenArgsOutput
}

type SubscriptionPushConfigOidcTokenArgsArgs struct {
	Audience            pulumi.StringPtrInput `pulumi:"audience"`
	ServiceAccountEmail pulumi.StringInput    `pulumi:"serviceAccountEmail"`
}

func (SubscriptionPushConfigOidcTokenArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigOidcTokenArgs)(nil)).Elem()
}

func (i SubscriptionPushConfigOidcTokenArgsArgs) ToSubscriptionPushConfigOidcTokenArgsOutput() SubscriptionPushConfigOidcTokenArgsOutput {
	return i.ToSubscriptionPushConfigOidcTokenArgsOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigOidcTokenArgsArgs) ToSubscriptionPushConfigOidcTokenArgsOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOidcTokenArgsOutput)
}

func (i SubscriptionPushConfigOidcTokenArgsArgs) ToSubscriptionPushConfigOidcTokenArgsPtrOutput() SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return i.ToSubscriptionPushConfigOidcTokenArgsPtrOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigOidcTokenArgsArgs) ToSubscriptionPushConfigOidcTokenArgsPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOidcTokenArgsOutput).ToSubscriptionPushConfigOidcTokenArgsPtrOutputWithContext(ctx)
}

type SubscriptionPushConfigOidcTokenArgsPtrInput interface {
	pulumi.Input

	ToSubscriptionPushConfigOidcTokenArgsPtrOutput() SubscriptionPushConfigOidcTokenArgsPtrOutput
	ToSubscriptionPushConfigOidcTokenArgsPtrOutputWithContext(context.Context) SubscriptionPushConfigOidcTokenArgsPtrOutput
}

type subscriptionPushConfigOidcTokenArgsPtrType SubscriptionPushConfigOidcTokenArgsArgs

func SubscriptionPushConfigOidcTokenArgsPtr(v *SubscriptionPushConfigOidcTokenArgsArgs) SubscriptionPushConfigOidcTokenArgsPtrInput {
	return (*subscriptionPushConfigOidcTokenArgsPtrType)(v)
}

func (*subscriptionPushConfigOidcTokenArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigOidcTokenArgs)(nil)).Elem()
}

func (i *subscriptionPushConfigOidcTokenArgsPtrType) ToSubscriptionPushConfigOidcTokenArgsPtrOutput() SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return i.ToSubscriptionPushConfigOidcTokenArgsPtrOutputWithContext(context.Background())
}

func (i *subscriptionPushConfigOidcTokenArgsPtrType) ToSubscriptionPushConfigOidcTokenArgsPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigOidcTokenArgsPtrOutput)
}

type SubscriptionPushConfigOidcTokenArgsOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigOidcTokenArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigOidcTokenArgs)(nil)).Elem()
}

func (o SubscriptionPushConfigOidcTokenArgsOutput) ToSubscriptionPushConfigOidcTokenArgsOutput() SubscriptionPushConfigOidcTokenArgsOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenArgsOutput) ToSubscriptionPushConfigOidcTokenArgsOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenArgsOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenArgsOutput) ToSubscriptionPushConfigOidcTokenArgsPtrOutput() SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return o.ToSubscriptionPushConfigOidcTokenArgsPtrOutputWithContext(context.Background())
}

func (o SubscriptionPushConfigOidcTokenArgsOutput) ToSubscriptionPushConfigOidcTokenArgsPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcTokenArgs) *SubscriptionPushConfigOidcTokenArgs {
		return &v
	}).(SubscriptionPushConfigOidcTokenArgsPtrOutput)
}
func (o SubscriptionPushConfigOidcTokenArgsOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcTokenArgs) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPushConfigOidcTokenArgsOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcTokenArgs) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type SubscriptionPushConfigOidcTokenArgsPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigOidcTokenArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigOidcTokenArgs)(nil)).Elem()
}

func (o SubscriptionPushConfigOidcTokenArgsPtrOutput) ToSubscriptionPushConfigOidcTokenArgsPtrOutput() SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenArgsPtrOutput) ToSubscriptionPushConfigOidcTokenArgsPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigOidcTokenArgsPtrOutput {
	return o
}

func (o SubscriptionPushConfigOidcTokenArgsPtrOutput) Elem() SubscriptionPushConfigOidcTokenArgsOutput {
	return o.ApplyT(func(v *SubscriptionPushConfigOidcTokenArgs) SubscriptionPushConfigOidcTokenArgs { return *v }).(SubscriptionPushConfigOidcTokenArgsOutput)
}

func (o SubscriptionPushConfigOidcTokenArgsPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcTokenArgs) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPushConfigOidcTokenArgsPtrOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigOidcTokenArgs) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type SubscriptionPushConfigState struct {
	Attributes   map[string]string                     `pulumi:"attributes"`
	OidcToken    *SubscriptionPushConfigStateOidcToken `pulumi:"oidcToken"`
	PushEndpoint string                                `pulumi:"pushEndpoint"`
}

type SubscriptionPushConfigStateInput interface {
	pulumi.Input

	ToSubscriptionPushConfigStateOutput() SubscriptionPushConfigStateOutput
	ToSubscriptionPushConfigStateOutputWithContext(context.Context) SubscriptionPushConfigStateOutput
}

type SubscriptionPushConfigStateArgs struct {
	Attributes   pulumi.StringMapInput                        `pulumi:"attributes"`
	OidcToken    SubscriptionPushConfigStateOidcTokenPtrInput `pulumi:"oidcToken"`
	PushEndpoint pulumi.StringInput                           `pulumi:"pushEndpoint"`
}

func (SubscriptionPushConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigState)(nil)).Elem()
}

func (i SubscriptionPushConfigStateArgs) ToSubscriptionPushConfigStateOutput() SubscriptionPushConfigStateOutput {
	return i.ToSubscriptionPushConfigStateOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigStateArgs) ToSubscriptionPushConfigStateOutputWithContext(ctx context.Context) SubscriptionPushConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigStateOutput)
}

type SubscriptionPushConfigStateOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigState)(nil)).Elem()
}

func (o SubscriptionPushConfigStateOutput) ToSubscriptionPushConfigStateOutput() SubscriptionPushConfigStateOutput {
	return o
}

func (o SubscriptionPushConfigStateOutput) ToSubscriptionPushConfigStateOutputWithContext(ctx context.Context) SubscriptionPushConfigStateOutput {
	return o
}

func (o SubscriptionPushConfigStateOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v SubscriptionPushConfigState) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

func (o SubscriptionPushConfigStateOutput) OidcToken() SubscriptionPushConfigStateOidcTokenPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigState) *SubscriptionPushConfigStateOidcToken { return v.OidcToken }).(SubscriptionPushConfigStateOidcTokenPtrOutput)
}

func (o SubscriptionPushConfigStateOutput) PushEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigState) string { return v.PushEndpoint }).(pulumi.StringOutput)
}

type SubscriptionPushConfigStateOidcToken struct {
	Audience            *string `pulumi:"audience"`
	ServiceAccountEmail string  `pulumi:"serviceAccountEmail"`
}

type SubscriptionPushConfigStateOidcTokenInput interface {
	pulumi.Input

	ToSubscriptionPushConfigStateOidcTokenOutput() SubscriptionPushConfigStateOidcTokenOutput
	ToSubscriptionPushConfigStateOidcTokenOutputWithContext(context.Context) SubscriptionPushConfigStateOidcTokenOutput
}

type SubscriptionPushConfigStateOidcTokenArgs struct {
	Audience            pulumi.StringPtrInput `pulumi:"audience"`
	ServiceAccountEmail pulumi.StringInput    `pulumi:"serviceAccountEmail"`
}

func (SubscriptionPushConfigStateOidcTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigStateOidcToken)(nil)).Elem()
}

func (i SubscriptionPushConfigStateOidcTokenArgs) ToSubscriptionPushConfigStateOidcTokenOutput() SubscriptionPushConfigStateOidcTokenOutput {
	return i.ToSubscriptionPushConfigStateOidcTokenOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigStateOidcTokenArgs) ToSubscriptionPushConfigStateOidcTokenOutputWithContext(ctx context.Context) SubscriptionPushConfigStateOidcTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigStateOidcTokenOutput)
}

func (i SubscriptionPushConfigStateOidcTokenArgs) ToSubscriptionPushConfigStateOidcTokenPtrOutput() SubscriptionPushConfigStateOidcTokenPtrOutput {
	return i.ToSubscriptionPushConfigStateOidcTokenPtrOutputWithContext(context.Background())
}

func (i SubscriptionPushConfigStateOidcTokenArgs) ToSubscriptionPushConfigStateOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigStateOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigStateOidcTokenOutput).ToSubscriptionPushConfigStateOidcTokenPtrOutputWithContext(ctx)
}

type SubscriptionPushConfigStateOidcTokenPtrInput interface {
	pulumi.Input

	ToSubscriptionPushConfigStateOidcTokenPtrOutput() SubscriptionPushConfigStateOidcTokenPtrOutput
	ToSubscriptionPushConfigStateOidcTokenPtrOutputWithContext(context.Context) SubscriptionPushConfigStateOidcTokenPtrOutput
}

type subscriptionPushConfigStateOidcTokenPtrType SubscriptionPushConfigStateOidcTokenArgs

func SubscriptionPushConfigStateOidcTokenPtr(v *SubscriptionPushConfigStateOidcTokenArgs) SubscriptionPushConfigStateOidcTokenPtrInput {
	return (*subscriptionPushConfigStateOidcTokenPtrType)(v)
}

func (*subscriptionPushConfigStateOidcTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigStateOidcToken)(nil)).Elem()
}

func (i *subscriptionPushConfigStateOidcTokenPtrType) ToSubscriptionPushConfigStateOidcTokenPtrOutput() SubscriptionPushConfigStateOidcTokenPtrOutput {
	return i.ToSubscriptionPushConfigStateOidcTokenPtrOutputWithContext(context.Background())
}

func (i *subscriptionPushConfigStateOidcTokenPtrType) ToSubscriptionPushConfigStateOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigStateOidcTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionPushConfigStateOidcTokenPtrOutput)
}

type SubscriptionPushConfigStateOidcTokenOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigStateOidcTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionPushConfigStateOidcToken)(nil)).Elem()
}

func (o SubscriptionPushConfigStateOidcTokenOutput) ToSubscriptionPushConfigStateOidcTokenOutput() SubscriptionPushConfigStateOidcTokenOutput {
	return o
}

func (o SubscriptionPushConfigStateOidcTokenOutput) ToSubscriptionPushConfigStateOidcTokenOutputWithContext(ctx context.Context) SubscriptionPushConfigStateOidcTokenOutput {
	return o
}

func (o SubscriptionPushConfigStateOidcTokenOutput) ToSubscriptionPushConfigStateOidcTokenPtrOutput() SubscriptionPushConfigStateOidcTokenPtrOutput {
	return o.ToSubscriptionPushConfigStateOidcTokenPtrOutputWithContext(context.Background())
}

func (o SubscriptionPushConfigStateOidcTokenOutput) ToSubscriptionPushConfigStateOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigStateOidcTokenPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigStateOidcToken) *SubscriptionPushConfigStateOidcToken {
		return &v
	}).(SubscriptionPushConfigStateOidcTokenPtrOutput)
}
func (o SubscriptionPushConfigStateOidcTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigStateOidcToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPushConfigStateOidcTokenOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigStateOidcToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type SubscriptionPushConfigStateOidcTokenPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionPushConfigStateOidcTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionPushConfigStateOidcToken)(nil)).Elem()
}

func (o SubscriptionPushConfigStateOidcTokenPtrOutput) ToSubscriptionPushConfigStateOidcTokenPtrOutput() SubscriptionPushConfigStateOidcTokenPtrOutput {
	return o
}

func (o SubscriptionPushConfigStateOidcTokenPtrOutput) ToSubscriptionPushConfigStateOidcTokenPtrOutputWithContext(ctx context.Context) SubscriptionPushConfigStateOidcTokenPtrOutput {
	return o
}

func (o SubscriptionPushConfigStateOidcTokenPtrOutput) Elem() SubscriptionPushConfigStateOidcTokenOutput {
	return o.ApplyT(func(v *SubscriptionPushConfigStateOidcToken) SubscriptionPushConfigStateOidcToken { return *v }).(SubscriptionPushConfigStateOidcTokenOutput)
}

func (o SubscriptionPushConfigStateOidcTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriptionPushConfigStateOidcToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o SubscriptionPushConfigStateOidcTokenPtrOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriptionPushConfigStateOidcToken) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type TopicIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type TopicIAMBindingConditionInput interface {
	pulumi.Input

	ToTopicIAMBindingConditionOutput() TopicIAMBindingConditionOutput
	ToTopicIAMBindingConditionOutputWithContext(context.Context) TopicIAMBindingConditionOutput
}

type TopicIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TopicIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMBindingCondition)(nil)).Elem()
}

func (i TopicIAMBindingConditionArgs) ToTopicIAMBindingConditionOutput() TopicIAMBindingConditionOutput {
	return i.ToTopicIAMBindingConditionOutputWithContext(context.Background())
}

func (i TopicIAMBindingConditionArgs) ToTopicIAMBindingConditionOutputWithContext(ctx context.Context) TopicIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionOutput)
}

func (i TopicIAMBindingConditionArgs) ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput {
	return i.ToTopicIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i TopicIAMBindingConditionArgs) ToTopicIAMBindingConditionPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionOutput).ToTopicIAMBindingConditionPtrOutputWithContext(ctx)
}

type TopicIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput
	ToTopicIAMBindingConditionPtrOutputWithContext(context.Context) TopicIAMBindingConditionPtrOutput
}

type topicIAMBindingConditionPtrType TopicIAMBindingConditionArgs

func TopicIAMBindingConditionPtr(v *TopicIAMBindingConditionArgs) TopicIAMBindingConditionPtrInput {
	return (*topicIAMBindingConditionPtrType)(v)
}

func (*topicIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMBindingCondition)(nil)).Elem()
}

func (i *topicIAMBindingConditionPtrType) ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput {
	return i.ToTopicIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *topicIAMBindingConditionPtrType) ToTopicIAMBindingConditionPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionPtrOutput)
}

type TopicIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (TopicIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMBindingCondition)(nil)).Elem()
}

func (o TopicIAMBindingConditionOutput) ToTopicIAMBindingConditionOutput() TopicIAMBindingConditionOutput {
	return o
}

func (o TopicIAMBindingConditionOutput) ToTopicIAMBindingConditionOutputWithContext(ctx context.Context) TopicIAMBindingConditionOutput {
	return o
}

func (o TopicIAMBindingConditionOutput) ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput {
	return o.ToTopicIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o TopicIAMBindingConditionOutput) ToTopicIAMBindingConditionPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) *TopicIAMBindingCondition {
		return &v
	}).(TopicIAMBindingConditionPtrOutput)
}
func (o TopicIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (TopicIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMBindingCondition)(nil)).Elem()
}

func (o TopicIAMBindingConditionPtrOutput) ToTopicIAMBindingConditionPtrOutput() TopicIAMBindingConditionPtrOutput {
	return o
}

func (o TopicIAMBindingConditionPtrOutput) ToTopicIAMBindingConditionPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionPtrOutput {
	return o
}

func (o TopicIAMBindingConditionPtrOutput) Elem() TopicIAMBindingConditionOutput {
	return o.ApplyT(func(v *TopicIAMBindingCondition) TopicIAMBindingCondition { return *v }).(TopicIAMBindingConditionOutput)
}

func (o TopicIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type TopicIAMBindingConditionArgsInput interface {
	pulumi.Input

	ToTopicIAMBindingConditionArgsOutput() TopicIAMBindingConditionArgsOutput
	ToTopicIAMBindingConditionArgsOutputWithContext(context.Context) TopicIAMBindingConditionArgsOutput
}

type TopicIAMBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TopicIAMBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMBindingConditionArgs)(nil)).Elem()
}

func (i TopicIAMBindingConditionArgsArgs) ToTopicIAMBindingConditionArgsOutput() TopicIAMBindingConditionArgsOutput {
	return i.ToTopicIAMBindingConditionArgsOutputWithContext(context.Background())
}

func (i TopicIAMBindingConditionArgsArgs) ToTopicIAMBindingConditionArgsOutputWithContext(ctx context.Context) TopicIAMBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionArgsOutput)
}

func (i TopicIAMBindingConditionArgsArgs) ToTopicIAMBindingConditionArgsPtrOutput() TopicIAMBindingConditionArgsPtrOutput {
	return i.ToTopicIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i TopicIAMBindingConditionArgsArgs) ToTopicIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionArgsOutput).ToTopicIAMBindingConditionArgsPtrOutputWithContext(ctx)
}

type TopicIAMBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToTopicIAMBindingConditionArgsPtrOutput() TopicIAMBindingConditionArgsPtrOutput
	ToTopicIAMBindingConditionArgsPtrOutputWithContext(context.Context) TopicIAMBindingConditionArgsPtrOutput
}

type topicIAMBindingConditionArgsPtrType TopicIAMBindingConditionArgsArgs

func TopicIAMBindingConditionArgsPtr(v *TopicIAMBindingConditionArgsArgs) TopicIAMBindingConditionArgsPtrInput {
	return (*topicIAMBindingConditionArgsPtrType)(v)
}

func (*topicIAMBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMBindingConditionArgs)(nil)).Elem()
}

func (i *topicIAMBindingConditionArgsPtrType) ToTopicIAMBindingConditionArgsPtrOutput() TopicIAMBindingConditionArgsPtrOutput {
	return i.ToTopicIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *topicIAMBindingConditionArgsPtrType) ToTopicIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionArgsPtrOutput)
}

type TopicIAMBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (TopicIAMBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMBindingConditionArgs)(nil)).Elem()
}

func (o TopicIAMBindingConditionArgsOutput) ToTopicIAMBindingConditionArgsOutput() TopicIAMBindingConditionArgsOutput {
	return o
}

func (o TopicIAMBindingConditionArgsOutput) ToTopicIAMBindingConditionArgsOutputWithContext(ctx context.Context) TopicIAMBindingConditionArgsOutput {
	return o
}

func (o TopicIAMBindingConditionArgsOutput) ToTopicIAMBindingConditionArgsPtrOutput() TopicIAMBindingConditionArgsPtrOutput {
	return o.ToTopicIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o TopicIAMBindingConditionArgsOutput) ToTopicIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionArgs) *TopicIAMBindingConditionArgs {
		return &v
	}).(TopicIAMBindingConditionArgsPtrOutput)
}
func (o TopicIAMBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (TopicIAMBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMBindingConditionArgs)(nil)).Elem()
}

func (o TopicIAMBindingConditionArgsPtrOutput) ToTopicIAMBindingConditionArgsPtrOutput() TopicIAMBindingConditionArgsPtrOutput {
	return o
}

func (o TopicIAMBindingConditionArgsPtrOutput) ToTopicIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) TopicIAMBindingConditionArgsPtrOutput {
	return o
}

func (o TopicIAMBindingConditionArgsPtrOutput) Elem() TopicIAMBindingConditionArgsOutput {
	return o.ApplyT(func(v *TopicIAMBindingConditionArgs) TopicIAMBindingConditionArgs { return *v }).(TopicIAMBindingConditionArgsOutput)
}

func (o TopicIAMBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMBindingConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type TopicIAMBindingConditionStateInput interface {
	pulumi.Input

	ToTopicIAMBindingConditionStateOutput() TopicIAMBindingConditionStateOutput
	ToTopicIAMBindingConditionStateOutputWithContext(context.Context) TopicIAMBindingConditionStateOutput
}

type TopicIAMBindingConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TopicIAMBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMBindingConditionState)(nil)).Elem()
}

func (i TopicIAMBindingConditionStateArgs) ToTopicIAMBindingConditionStateOutput() TopicIAMBindingConditionStateOutput {
	return i.ToTopicIAMBindingConditionStateOutputWithContext(context.Background())
}

func (i TopicIAMBindingConditionStateArgs) ToTopicIAMBindingConditionStateOutputWithContext(ctx context.Context) TopicIAMBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMBindingConditionStateOutput)
}

type TopicIAMBindingConditionStateOutput struct{ *pulumi.OutputState }

func (TopicIAMBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMBindingConditionState)(nil)).Elem()
}

func (o TopicIAMBindingConditionStateOutput) ToTopicIAMBindingConditionStateOutput() TopicIAMBindingConditionStateOutput {
	return o
}

func (o TopicIAMBindingConditionStateOutput) ToTopicIAMBindingConditionStateOutputWithContext(ctx context.Context) TopicIAMBindingConditionStateOutput {
	return o
}

func (o TopicIAMBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type TopicIAMMemberConditionInput interface {
	pulumi.Input

	ToTopicIAMMemberConditionOutput() TopicIAMMemberConditionOutput
	ToTopicIAMMemberConditionOutputWithContext(context.Context) TopicIAMMemberConditionOutput
}

type TopicIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TopicIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMMemberCondition)(nil)).Elem()
}

func (i TopicIAMMemberConditionArgs) ToTopicIAMMemberConditionOutput() TopicIAMMemberConditionOutput {
	return i.ToTopicIAMMemberConditionOutputWithContext(context.Background())
}

func (i TopicIAMMemberConditionArgs) ToTopicIAMMemberConditionOutputWithContext(ctx context.Context) TopicIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionOutput)
}

func (i TopicIAMMemberConditionArgs) ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput {
	return i.ToTopicIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i TopicIAMMemberConditionArgs) ToTopicIAMMemberConditionPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionOutput).ToTopicIAMMemberConditionPtrOutputWithContext(ctx)
}

type TopicIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput
	ToTopicIAMMemberConditionPtrOutputWithContext(context.Context) TopicIAMMemberConditionPtrOutput
}

type topicIAMMemberConditionPtrType TopicIAMMemberConditionArgs

func TopicIAMMemberConditionPtr(v *TopicIAMMemberConditionArgs) TopicIAMMemberConditionPtrInput {
	return (*topicIAMMemberConditionPtrType)(v)
}

func (*topicIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMMemberCondition)(nil)).Elem()
}

func (i *topicIAMMemberConditionPtrType) ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput {
	return i.ToTopicIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *topicIAMMemberConditionPtrType) ToTopicIAMMemberConditionPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionPtrOutput)
}

type TopicIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (TopicIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMMemberCondition)(nil)).Elem()
}

func (o TopicIAMMemberConditionOutput) ToTopicIAMMemberConditionOutput() TopicIAMMemberConditionOutput {
	return o
}

func (o TopicIAMMemberConditionOutput) ToTopicIAMMemberConditionOutputWithContext(ctx context.Context) TopicIAMMemberConditionOutput {
	return o
}

func (o TopicIAMMemberConditionOutput) ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput {
	return o.ToTopicIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o TopicIAMMemberConditionOutput) ToTopicIAMMemberConditionPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) *TopicIAMMemberCondition {
		return &v
	}).(TopicIAMMemberConditionPtrOutput)
}
func (o TopicIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (TopicIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMMemberCondition)(nil)).Elem()
}

func (o TopicIAMMemberConditionPtrOutput) ToTopicIAMMemberConditionPtrOutput() TopicIAMMemberConditionPtrOutput {
	return o
}

func (o TopicIAMMemberConditionPtrOutput) ToTopicIAMMemberConditionPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionPtrOutput {
	return o
}

func (o TopicIAMMemberConditionPtrOutput) Elem() TopicIAMMemberConditionOutput {
	return o.ApplyT(func(v *TopicIAMMemberCondition) TopicIAMMemberCondition { return *v }).(TopicIAMMemberConditionOutput)
}

func (o TopicIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMMemberConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type TopicIAMMemberConditionArgsInput interface {
	pulumi.Input

	ToTopicIAMMemberConditionArgsOutput() TopicIAMMemberConditionArgsOutput
	ToTopicIAMMemberConditionArgsOutputWithContext(context.Context) TopicIAMMemberConditionArgsOutput
}

type TopicIAMMemberConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TopicIAMMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMMemberConditionArgs)(nil)).Elem()
}

func (i TopicIAMMemberConditionArgsArgs) ToTopicIAMMemberConditionArgsOutput() TopicIAMMemberConditionArgsOutput {
	return i.ToTopicIAMMemberConditionArgsOutputWithContext(context.Background())
}

func (i TopicIAMMemberConditionArgsArgs) ToTopicIAMMemberConditionArgsOutputWithContext(ctx context.Context) TopicIAMMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionArgsOutput)
}

func (i TopicIAMMemberConditionArgsArgs) ToTopicIAMMemberConditionArgsPtrOutput() TopicIAMMemberConditionArgsPtrOutput {
	return i.ToTopicIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i TopicIAMMemberConditionArgsArgs) ToTopicIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionArgsOutput).ToTopicIAMMemberConditionArgsPtrOutputWithContext(ctx)
}

type TopicIAMMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToTopicIAMMemberConditionArgsPtrOutput() TopicIAMMemberConditionArgsPtrOutput
	ToTopicIAMMemberConditionArgsPtrOutputWithContext(context.Context) TopicIAMMemberConditionArgsPtrOutput
}

type topicIAMMemberConditionArgsPtrType TopicIAMMemberConditionArgsArgs

func TopicIAMMemberConditionArgsPtr(v *TopicIAMMemberConditionArgsArgs) TopicIAMMemberConditionArgsPtrInput {
	return (*topicIAMMemberConditionArgsPtrType)(v)
}

func (*topicIAMMemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMMemberConditionArgs)(nil)).Elem()
}

func (i *topicIAMMemberConditionArgsPtrType) ToTopicIAMMemberConditionArgsPtrOutput() TopicIAMMemberConditionArgsPtrOutput {
	return i.ToTopicIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *topicIAMMemberConditionArgsPtrType) ToTopicIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionArgsPtrOutput)
}

type TopicIAMMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (TopicIAMMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMMemberConditionArgs)(nil)).Elem()
}

func (o TopicIAMMemberConditionArgsOutput) ToTopicIAMMemberConditionArgsOutput() TopicIAMMemberConditionArgsOutput {
	return o
}

func (o TopicIAMMemberConditionArgsOutput) ToTopicIAMMemberConditionArgsOutputWithContext(ctx context.Context) TopicIAMMemberConditionArgsOutput {
	return o
}

func (o TopicIAMMemberConditionArgsOutput) ToTopicIAMMemberConditionArgsPtrOutput() TopicIAMMemberConditionArgsPtrOutput {
	return o.ToTopicIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o TopicIAMMemberConditionArgsOutput) ToTopicIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionArgs) *TopicIAMMemberConditionArgs {
		return &v
	}).(TopicIAMMemberConditionArgsPtrOutput)
}
func (o TopicIAMMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (TopicIAMMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicIAMMemberConditionArgs)(nil)).Elem()
}

func (o TopicIAMMemberConditionArgsPtrOutput) ToTopicIAMMemberConditionArgsPtrOutput() TopicIAMMemberConditionArgsPtrOutput {
	return o
}

func (o TopicIAMMemberConditionArgsPtrOutput) ToTopicIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) TopicIAMMemberConditionArgsPtrOutput {
	return o
}

func (o TopicIAMMemberConditionArgsPtrOutput) Elem() TopicIAMMemberConditionArgsOutput {
	return o.ApplyT(func(v *TopicIAMMemberConditionArgs) TopicIAMMemberConditionArgs { return *v }).(TopicIAMMemberConditionArgsOutput)
}

func (o TopicIAMMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type TopicIAMMemberConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type TopicIAMMemberConditionStateInput interface {
	pulumi.Input

	ToTopicIAMMemberConditionStateOutput() TopicIAMMemberConditionStateOutput
	ToTopicIAMMemberConditionStateOutputWithContext(context.Context) TopicIAMMemberConditionStateOutput
}

type TopicIAMMemberConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (TopicIAMMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMMemberConditionState)(nil)).Elem()
}

func (i TopicIAMMemberConditionStateArgs) ToTopicIAMMemberConditionStateOutput() TopicIAMMemberConditionStateOutput {
	return i.ToTopicIAMMemberConditionStateOutputWithContext(context.Background())
}

func (i TopicIAMMemberConditionStateArgs) ToTopicIAMMemberConditionStateOutputWithContext(ctx context.Context) TopicIAMMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicIAMMemberConditionStateOutput)
}

type TopicIAMMemberConditionStateOutput struct{ *pulumi.OutputState }

func (TopicIAMMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicIAMMemberConditionState)(nil)).Elem()
}

func (o TopicIAMMemberConditionStateOutput) ToTopicIAMMemberConditionStateOutput() TopicIAMMemberConditionStateOutput {
	return o
}

func (o TopicIAMMemberConditionStateOutput) ToTopicIAMMemberConditionStateOutputWithContext(ctx context.Context) TopicIAMMemberConditionStateOutput {
	return o
}

func (o TopicIAMMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o TopicIAMMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o TopicIAMMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v TopicIAMMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type TopicMessageStoragePolicy struct {
	AllowedPersistenceRegions []string `pulumi:"allowedPersistenceRegions"`
}

type TopicMessageStoragePolicyInput interface {
	pulumi.Input

	ToTopicMessageStoragePolicyOutput() TopicMessageStoragePolicyOutput
	ToTopicMessageStoragePolicyOutputWithContext(context.Context) TopicMessageStoragePolicyOutput
}

type TopicMessageStoragePolicyArgs struct {
	AllowedPersistenceRegions pulumi.StringArrayInput `pulumi:"allowedPersistenceRegions"`
}

func (TopicMessageStoragePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicMessageStoragePolicy)(nil)).Elem()
}

func (i TopicMessageStoragePolicyArgs) ToTopicMessageStoragePolicyOutput() TopicMessageStoragePolicyOutput {
	return i.ToTopicMessageStoragePolicyOutputWithContext(context.Background())
}

func (i TopicMessageStoragePolicyArgs) ToTopicMessageStoragePolicyOutputWithContext(ctx context.Context) TopicMessageStoragePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyOutput)
}

func (i TopicMessageStoragePolicyArgs) ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput {
	return i.ToTopicMessageStoragePolicyPtrOutputWithContext(context.Background())
}

func (i TopicMessageStoragePolicyArgs) ToTopicMessageStoragePolicyPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyOutput).ToTopicMessageStoragePolicyPtrOutputWithContext(ctx)
}

type TopicMessageStoragePolicyPtrInput interface {
	pulumi.Input

	ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput
	ToTopicMessageStoragePolicyPtrOutputWithContext(context.Context) TopicMessageStoragePolicyPtrOutput
}

type topicMessageStoragePolicyPtrType TopicMessageStoragePolicyArgs

func TopicMessageStoragePolicyPtr(v *TopicMessageStoragePolicyArgs) TopicMessageStoragePolicyPtrInput {
	return (*topicMessageStoragePolicyPtrType)(v)
}

func (*topicMessageStoragePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicMessageStoragePolicy)(nil)).Elem()
}

func (i *topicMessageStoragePolicyPtrType) ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput {
	return i.ToTopicMessageStoragePolicyPtrOutputWithContext(context.Background())
}

func (i *topicMessageStoragePolicyPtrType) ToTopicMessageStoragePolicyPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyPtrOutput)
}

type TopicMessageStoragePolicyOutput struct{ *pulumi.OutputState }

func (TopicMessageStoragePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicMessageStoragePolicy)(nil)).Elem()
}

func (o TopicMessageStoragePolicyOutput) ToTopicMessageStoragePolicyOutput() TopicMessageStoragePolicyOutput {
	return o
}

func (o TopicMessageStoragePolicyOutput) ToTopicMessageStoragePolicyOutputWithContext(ctx context.Context) TopicMessageStoragePolicyOutput {
	return o
}

func (o TopicMessageStoragePolicyOutput) ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput {
	return o.ToTopicMessageStoragePolicyPtrOutputWithContext(context.Background())
}

func (o TopicMessageStoragePolicyOutput) ToTopicMessageStoragePolicyPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyPtrOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicy) *TopicMessageStoragePolicy {
		return &v
	}).(TopicMessageStoragePolicyPtrOutput)
}
func (o TopicMessageStoragePolicyOutput) AllowedPersistenceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicy) []string { return v.AllowedPersistenceRegions }).(pulumi.StringArrayOutput)
}

type TopicMessageStoragePolicyPtrOutput struct{ *pulumi.OutputState }

func (TopicMessageStoragePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicMessageStoragePolicy)(nil)).Elem()
}

func (o TopicMessageStoragePolicyPtrOutput) ToTopicMessageStoragePolicyPtrOutput() TopicMessageStoragePolicyPtrOutput {
	return o
}

func (o TopicMessageStoragePolicyPtrOutput) ToTopicMessageStoragePolicyPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyPtrOutput {
	return o
}

func (o TopicMessageStoragePolicyPtrOutput) Elem() TopicMessageStoragePolicyOutput {
	return o.ApplyT(func(v *TopicMessageStoragePolicy) TopicMessageStoragePolicy { return *v }).(TopicMessageStoragePolicyOutput)
}

func (o TopicMessageStoragePolicyPtrOutput) AllowedPersistenceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicy) []string { return v.AllowedPersistenceRegions }).(pulumi.StringArrayOutput)
}

type TopicMessageStoragePolicyArgs struct {
	AllowedPersistenceRegions []string `pulumi:"allowedPersistenceRegions"`
}

type TopicMessageStoragePolicyArgsInput interface {
	pulumi.Input

	ToTopicMessageStoragePolicyArgsOutput() TopicMessageStoragePolicyArgsOutput
	ToTopicMessageStoragePolicyArgsOutputWithContext(context.Context) TopicMessageStoragePolicyArgsOutput
}

type TopicMessageStoragePolicyArgsArgs struct {
	AllowedPersistenceRegions pulumi.StringArrayInput `pulumi:"allowedPersistenceRegions"`
}

func (TopicMessageStoragePolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicMessageStoragePolicyArgs)(nil)).Elem()
}

func (i TopicMessageStoragePolicyArgsArgs) ToTopicMessageStoragePolicyArgsOutput() TopicMessageStoragePolicyArgsOutput {
	return i.ToTopicMessageStoragePolicyArgsOutputWithContext(context.Background())
}

func (i TopicMessageStoragePolicyArgsArgs) ToTopicMessageStoragePolicyArgsOutputWithContext(ctx context.Context) TopicMessageStoragePolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyArgsOutput)
}

func (i TopicMessageStoragePolicyArgsArgs) ToTopicMessageStoragePolicyArgsPtrOutput() TopicMessageStoragePolicyArgsPtrOutput {
	return i.ToTopicMessageStoragePolicyArgsPtrOutputWithContext(context.Background())
}

func (i TopicMessageStoragePolicyArgsArgs) ToTopicMessageStoragePolicyArgsPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyArgsOutput).ToTopicMessageStoragePolicyArgsPtrOutputWithContext(ctx)
}

type TopicMessageStoragePolicyArgsPtrInput interface {
	pulumi.Input

	ToTopicMessageStoragePolicyArgsPtrOutput() TopicMessageStoragePolicyArgsPtrOutput
	ToTopicMessageStoragePolicyArgsPtrOutputWithContext(context.Context) TopicMessageStoragePolicyArgsPtrOutput
}

type topicMessageStoragePolicyArgsPtrType TopicMessageStoragePolicyArgsArgs

func TopicMessageStoragePolicyArgsPtr(v *TopicMessageStoragePolicyArgsArgs) TopicMessageStoragePolicyArgsPtrInput {
	return (*topicMessageStoragePolicyArgsPtrType)(v)
}

func (*topicMessageStoragePolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicMessageStoragePolicyArgs)(nil)).Elem()
}

func (i *topicMessageStoragePolicyArgsPtrType) ToTopicMessageStoragePolicyArgsPtrOutput() TopicMessageStoragePolicyArgsPtrOutput {
	return i.ToTopicMessageStoragePolicyArgsPtrOutputWithContext(context.Background())
}

func (i *topicMessageStoragePolicyArgsPtrType) ToTopicMessageStoragePolicyArgsPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyArgsPtrOutput)
}

type TopicMessageStoragePolicyArgsOutput struct{ *pulumi.OutputState }

func (TopicMessageStoragePolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicMessageStoragePolicyArgs)(nil)).Elem()
}

func (o TopicMessageStoragePolicyArgsOutput) ToTopicMessageStoragePolicyArgsOutput() TopicMessageStoragePolicyArgsOutput {
	return o
}

func (o TopicMessageStoragePolicyArgsOutput) ToTopicMessageStoragePolicyArgsOutputWithContext(ctx context.Context) TopicMessageStoragePolicyArgsOutput {
	return o
}

func (o TopicMessageStoragePolicyArgsOutput) ToTopicMessageStoragePolicyArgsPtrOutput() TopicMessageStoragePolicyArgsPtrOutput {
	return o.ToTopicMessageStoragePolicyArgsPtrOutputWithContext(context.Background())
}

func (o TopicMessageStoragePolicyArgsOutput) ToTopicMessageStoragePolicyArgsPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyArgsPtrOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicyArgs) *TopicMessageStoragePolicyArgs {
		return &v
	}).(TopicMessageStoragePolicyArgsPtrOutput)
}
func (o TopicMessageStoragePolicyArgsOutput) AllowedPersistenceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicyArgs) []string { return v.AllowedPersistenceRegions }).(pulumi.StringArrayOutput)
}

type TopicMessageStoragePolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (TopicMessageStoragePolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicMessageStoragePolicyArgs)(nil)).Elem()
}

func (o TopicMessageStoragePolicyArgsPtrOutput) ToTopicMessageStoragePolicyArgsPtrOutput() TopicMessageStoragePolicyArgsPtrOutput {
	return o
}

func (o TopicMessageStoragePolicyArgsPtrOutput) ToTopicMessageStoragePolicyArgsPtrOutputWithContext(ctx context.Context) TopicMessageStoragePolicyArgsPtrOutput {
	return o
}

func (o TopicMessageStoragePolicyArgsPtrOutput) Elem() TopicMessageStoragePolicyArgsOutput {
	return o.ApplyT(func(v *TopicMessageStoragePolicyArgs) TopicMessageStoragePolicyArgs { return *v }).(TopicMessageStoragePolicyArgsOutput)
}

func (o TopicMessageStoragePolicyArgsPtrOutput) AllowedPersistenceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicyArgs) []string { return v.AllowedPersistenceRegions }).(pulumi.StringArrayOutput)
}

type TopicMessageStoragePolicyState struct {
	AllowedPersistenceRegions []string `pulumi:"allowedPersistenceRegions"`
}

type TopicMessageStoragePolicyStateInput interface {
	pulumi.Input

	ToTopicMessageStoragePolicyStateOutput() TopicMessageStoragePolicyStateOutput
	ToTopicMessageStoragePolicyStateOutputWithContext(context.Context) TopicMessageStoragePolicyStateOutput
}

type TopicMessageStoragePolicyStateArgs struct {
	AllowedPersistenceRegions pulumi.StringArrayInput `pulumi:"allowedPersistenceRegions"`
}

func (TopicMessageStoragePolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicMessageStoragePolicyState)(nil)).Elem()
}

func (i TopicMessageStoragePolicyStateArgs) ToTopicMessageStoragePolicyStateOutput() TopicMessageStoragePolicyStateOutput {
	return i.ToTopicMessageStoragePolicyStateOutputWithContext(context.Background())
}

func (i TopicMessageStoragePolicyStateArgs) ToTopicMessageStoragePolicyStateOutputWithContext(ctx context.Context) TopicMessageStoragePolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicMessageStoragePolicyStateOutput)
}

type TopicMessageStoragePolicyStateOutput struct{ *pulumi.OutputState }

func (TopicMessageStoragePolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicMessageStoragePolicyState)(nil)).Elem()
}

func (o TopicMessageStoragePolicyStateOutput) ToTopicMessageStoragePolicyStateOutput() TopicMessageStoragePolicyStateOutput {
	return o
}

func (o TopicMessageStoragePolicyStateOutput) ToTopicMessageStoragePolicyStateOutputWithContext(ctx context.Context) TopicMessageStoragePolicyStateOutput {
	return o
}

func (o TopicMessageStoragePolicyStateOutput) AllowedPersistenceRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TopicMessageStoragePolicyState) []string { return v.AllowedPersistenceRegions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(SubscriptionExpirationPolicyOutput{})
	pulumi.RegisterOutputType(SubscriptionExpirationPolicyPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionExpirationPolicyArgsOutput{})
	pulumi.RegisterOutputType(SubscriptionExpirationPolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionExpirationPolicyStateOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMBindingConditionStateOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMMemberConditionStateOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigArgsOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigOidcTokenOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigOidcTokenPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigOidcTokenArgsOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigOidcTokenArgsPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigStateOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigStateOidcTokenOutput{})
	pulumi.RegisterOutputType(SubscriptionPushConfigStateOidcTokenPtrOutput{})
	pulumi.RegisterOutputType(TopicIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(TopicIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(TopicIAMBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(TopicIAMBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(TopicIAMBindingConditionStateOutput{})
	pulumi.RegisterOutputType(TopicIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(TopicIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(TopicIAMMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(TopicIAMMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(TopicIAMMemberConditionStateOutput{})
	pulumi.RegisterOutputType(TopicMessageStoragePolicyOutput{})
	pulumi.RegisterOutputType(TopicMessageStoragePolicyPtrOutput{})
	pulumi.RegisterOutputType(TopicMessageStoragePolicyArgsOutput{})
	pulumi.RegisterOutputType(TopicMessageStoragePolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(TopicMessageStoragePolicyStateOutput{})
}
