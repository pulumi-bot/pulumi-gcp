// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package SubscriptionIAMBindingCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SubscriptionIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type SubscriptionIAMBindingConditionInput interface {
	pulumi.Input

	ToSubscriptionIAMBindingConditionOutput() SubscriptionIAMBindingConditionOutput
	ToSubscriptionIAMBindingConditionOutputWithContext(context.Context) SubscriptionIAMBindingConditionOutput
}

type SubscriptionIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (SubscriptionIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionOutput() SubscriptionIAMBindingConditionOutput {
	return i.ToSubscriptionIAMBindingConditionOutputWithContext(context.Background())
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionOutput)
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return i.ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i SubscriptionIAMBindingConditionArgs) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionOutput).ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx)
}

type SubscriptionIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput
	ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Context) SubscriptionIAMBindingConditionPtrOutput
}

type subscriptionIAMBindingConditionPtrType SubscriptionIAMBindingConditionArgs

func SubscriptionIAMBindingConditionPtr(v *SubscriptionIAMBindingConditionArgs) SubscriptionIAMBindingConditionPtrInput {	return (*subscriptionIAMBindingConditionPtrType)(v)
}

func (*subscriptionIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (i *subscriptionIAMBindingConditionPtrType) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return i.ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *subscriptionIAMBindingConditionPtrType) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMBindingConditionPtrOutput)
}

type SubscriptionIAMBindingConditionOutput struct { *pulumi.OutputState }

func (SubscriptionIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionOutput() SubscriptionIAMBindingConditionOutput {
	return o
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionOutput {
	return o
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return o.ToSubscriptionIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o SubscriptionIAMBindingConditionOutput) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMBindingCondition) *SubscriptionIAMBindingCondition {
		return &v
	}).(SubscriptionIAMBindingConditionPtrOutput)
}
func (o SubscriptionIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SubscriptionIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v SubscriptionIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v SubscriptionIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMBindingConditionPtrOutput struct { *pulumi.OutputState}

func (SubscriptionIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMBindingCondition)(nil)).Elem()
}

func (o SubscriptionIAMBindingConditionPtrOutput) ToSubscriptionIAMBindingConditionPtrOutput() SubscriptionIAMBindingConditionPtrOutput {
	return o
}

func (o SubscriptionIAMBindingConditionPtrOutput) ToSubscriptionIAMBindingConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMBindingConditionPtrOutput {
	return o
}

func (o SubscriptionIAMBindingConditionPtrOutput) Elem() SubscriptionIAMBindingConditionOutput {
	return o.ApplyT(func (v *SubscriptionIAMBindingCondition) SubscriptionIAMBindingCondition { return *v }).(SubscriptionIAMBindingConditionOutput)
}

func (o SubscriptionIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SubscriptionIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v SubscriptionIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v SubscriptionIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SubscriptionIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMBindingConditionPtrOutput{})
}
