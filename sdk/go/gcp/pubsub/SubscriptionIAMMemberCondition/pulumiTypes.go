// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package SubscriptionIAMMemberCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SubscriptionIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type SubscriptionIAMMemberConditionInput interface {
	pulumi.Input

	ToSubscriptionIAMMemberConditionOutput() SubscriptionIAMMemberConditionOutput
	ToSubscriptionIAMMemberConditionOutputWithContext(context.Context) SubscriptionIAMMemberConditionOutput
}

type SubscriptionIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (SubscriptionIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionOutput() SubscriptionIAMMemberConditionOutput {
	return i.ToSubscriptionIAMMemberConditionOutputWithContext(context.Background())
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionOutput)
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return i.ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i SubscriptionIAMMemberConditionArgs) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionOutput).ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx)
}

type SubscriptionIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput
	ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Context) SubscriptionIAMMemberConditionPtrOutput
}

type subscriptionIAMMemberConditionPtrType SubscriptionIAMMemberConditionArgs

func SubscriptionIAMMemberConditionPtr(v *SubscriptionIAMMemberConditionArgs) SubscriptionIAMMemberConditionPtrInput {	return (*subscriptionIAMMemberConditionPtrType)(v)
}

func (*subscriptionIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (i *subscriptionIAMMemberConditionPtrType) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return i.ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *subscriptionIAMMemberConditionPtrType) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIAMMemberConditionPtrOutput)
}

type SubscriptionIAMMemberConditionOutput struct { *pulumi.OutputState }

func (SubscriptionIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionOutput() SubscriptionIAMMemberConditionOutput {
	return o
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionOutput {
	return o
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return o.ToSubscriptionIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o SubscriptionIAMMemberConditionOutput) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v SubscriptionIAMMemberCondition) *SubscriptionIAMMemberCondition {
		return &v
	}).(SubscriptionIAMMemberConditionPtrOutput)
}
func (o SubscriptionIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SubscriptionIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v SubscriptionIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v SubscriptionIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubscriptionIAMMemberConditionPtrOutput struct { *pulumi.OutputState}

func (SubscriptionIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIAMMemberCondition)(nil)).Elem()
}

func (o SubscriptionIAMMemberConditionPtrOutput) ToSubscriptionIAMMemberConditionPtrOutput() SubscriptionIAMMemberConditionPtrOutput {
	return o
}

func (o SubscriptionIAMMemberConditionPtrOutput) ToSubscriptionIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubscriptionIAMMemberConditionPtrOutput {
	return o
}

func (o SubscriptionIAMMemberConditionPtrOutput) Elem() SubscriptionIAMMemberConditionOutput {
	return o.ApplyT(func (v *SubscriptionIAMMemberCondition) SubscriptionIAMMemberCondition { return *v }).(SubscriptionIAMMemberConditionOutput)
}

func (o SubscriptionIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SubscriptionIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubscriptionIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v SubscriptionIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubscriptionIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v SubscriptionIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SubscriptionIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(SubscriptionIAMMemberConditionPtrOutput{})
}
