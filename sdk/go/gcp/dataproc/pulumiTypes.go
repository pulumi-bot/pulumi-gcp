// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dataproc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AutoscalingPolicyBasicAlgorithm struct {
	CooldownPeriod *string                                   `pulumi:"cooldownPeriod"`
	YarnConfig     AutoscalingPolicyBasicAlgorithmYarnConfig `pulumi:"yarnConfig"`
}

type AutoscalingPolicyBasicAlgorithmInput interface {
	pulumi.Input

	ToAutoscalingPolicyBasicAlgorithmOutput() AutoscalingPolicyBasicAlgorithmOutput
	ToAutoscalingPolicyBasicAlgorithmOutputWithContext(context.Context) AutoscalingPolicyBasicAlgorithmOutput
}

type AutoscalingPolicyBasicAlgorithmArgs struct {
	CooldownPeriod pulumi.StringPtrInput                          `pulumi:"cooldownPeriod"`
	YarnConfig     AutoscalingPolicyBasicAlgorithmYarnConfigInput `pulumi:"yarnConfig"`
}

func (AutoscalingPolicyBasicAlgorithmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithm)(nil)).Elem()
}

func (i AutoscalingPolicyBasicAlgorithmArgs) ToAutoscalingPolicyBasicAlgorithmOutput() AutoscalingPolicyBasicAlgorithmOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmOutputWithContext(context.Background())
}

func (i AutoscalingPolicyBasicAlgorithmArgs) ToAutoscalingPolicyBasicAlgorithmOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmOutput)
}

func (i AutoscalingPolicyBasicAlgorithmArgs) ToAutoscalingPolicyBasicAlgorithmPtrOutput() AutoscalingPolicyBasicAlgorithmPtrOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmPtrOutputWithContext(context.Background())
}

func (i AutoscalingPolicyBasicAlgorithmArgs) ToAutoscalingPolicyBasicAlgorithmPtrOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmOutput).ToAutoscalingPolicyBasicAlgorithmPtrOutputWithContext(ctx)
}

type AutoscalingPolicyBasicAlgorithmPtrInput interface {
	pulumi.Input

	ToAutoscalingPolicyBasicAlgorithmPtrOutput() AutoscalingPolicyBasicAlgorithmPtrOutput
	ToAutoscalingPolicyBasicAlgorithmPtrOutputWithContext(context.Context) AutoscalingPolicyBasicAlgorithmPtrOutput
}

type autoscalingPolicyBasicAlgorithmPtrType AutoscalingPolicyBasicAlgorithmArgs

func AutoscalingPolicyBasicAlgorithmPtr(v *AutoscalingPolicyBasicAlgorithmArgs) AutoscalingPolicyBasicAlgorithmPtrInput {
	return (*autoscalingPolicyBasicAlgorithmPtrType)(v)
}

func (*autoscalingPolicyBasicAlgorithmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyBasicAlgorithm)(nil)).Elem()
}

func (i *autoscalingPolicyBasicAlgorithmPtrType) ToAutoscalingPolicyBasicAlgorithmPtrOutput() AutoscalingPolicyBasicAlgorithmPtrOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmPtrOutputWithContext(context.Background())
}

func (i *autoscalingPolicyBasicAlgorithmPtrType) ToAutoscalingPolicyBasicAlgorithmPtrOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmPtrOutput)
}

type AutoscalingPolicyBasicAlgorithmOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyBasicAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithm)(nil)).Elem()
}

func (o AutoscalingPolicyBasicAlgorithmOutput) ToAutoscalingPolicyBasicAlgorithmOutput() AutoscalingPolicyBasicAlgorithmOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmOutput) ToAutoscalingPolicyBasicAlgorithmOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmOutput) ToAutoscalingPolicyBasicAlgorithmPtrOutput() AutoscalingPolicyBasicAlgorithmPtrOutput {
	return o.ToAutoscalingPolicyBasicAlgorithmPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyBasicAlgorithmOutput) ToAutoscalingPolicyBasicAlgorithmPtrOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithm) *AutoscalingPolicyBasicAlgorithm {
		return &v
	}).(AutoscalingPolicyBasicAlgorithmPtrOutput)
}
func (o AutoscalingPolicyBasicAlgorithmOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithm) *string { return v.CooldownPeriod }).(pulumi.StringPtrOutput)
}

func (o AutoscalingPolicyBasicAlgorithmOutput) YarnConfig() AutoscalingPolicyBasicAlgorithmYarnConfigOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithm) AutoscalingPolicyBasicAlgorithmYarnConfig {
		return v.YarnConfig
	}).(AutoscalingPolicyBasicAlgorithmYarnConfigOutput)
}

type AutoscalingPolicyBasicAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyBasicAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyBasicAlgorithm)(nil)).Elem()
}

func (o AutoscalingPolicyBasicAlgorithmPtrOutput) ToAutoscalingPolicyBasicAlgorithmPtrOutput() AutoscalingPolicyBasicAlgorithmPtrOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmPtrOutput) ToAutoscalingPolicyBasicAlgorithmPtrOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmPtrOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmPtrOutput) Elem() AutoscalingPolicyBasicAlgorithmOutput {
	return o.ApplyT(func(v *AutoscalingPolicyBasicAlgorithm) AutoscalingPolicyBasicAlgorithm { return *v }).(AutoscalingPolicyBasicAlgorithmOutput)
}

func (o AutoscalingPolicyBasicAlgorithmPtrOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithm) *string { return v.CooldownPeriod }).(pulumi.StringPtrOutput)
}

func (o AutoscalingPolicyBasicAlgorithmPtrOutput) YarnConfig() AutoscalingPolicyBasicAlgorithmYarnConfigOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithm) AutoscalingPolicyBasicAlgorithmYarnConfig {
		return v.YarnConfig
	}).(AutoscalingPolicyBasicAlgorithmYarnConfigOutput)
}

type AutoscalingPolicyBasicAlgorithmArgs struct {
	CooldownPeriod *string                                       `pulumi:"cooldownPeriod"`
	YarnConfig     AutoscalingPolicyBasicAlgorithmYarnConfigArgs `pulumi:"yarnConfig"`
}

type AutoscalingPolicyBasicAlgorithmArgsInput interface {
	pulumi.Input

	ToAutoscalingPolicyBasicAlgorithmArgsOutput() AutoscalingPolicyBasicAlgorithmArgsOutput
	ToAutoscalingPolicyBasicAlgorithmArgsOutputWithContext(context.Context) AutoscalingPolicyBasicAlgorithmArgsOutput
}

type AutoscalingPolicyBasicAlgorithmArgsArgs struct {
	CooldownPeriod pulumi.StringPtrInput                              `pulumi:"cooldownPeriod"`
	YarnConfig     AutoscalingPolicyBasicAlgorithmYarnConfigArgsInput `pulumi:"yarnConfig"`
}

func (AutoscalingPolicyBasicAlgorithmArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmArgs)(nil)).Elem()
}

func (i AutoscalingPolicyBasicAlgorithmArgsArgs) ToAutoscalingPolicyBasicAlgorithmArgsOutput() AutoscalingPolicyBasicAlgorithmArgsOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmArgsOutputWithContext(context.Background())
}

func (i AutoscalingPolicyBasicAlgorithmArgsArgs) ToAutoscalingPolicyBasicAlgorithmArgsOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmArgsOutput)
}

func (i AutoscalingPolicyBasicAlgorithmArgsArgs) ToAutoscalingPolicyBasicAlgorithmArgsPtrOutput() AutoscalingPolicyBasicAlgorithmArgsPtrOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmArgsPtrOutputWithContext(context.Background())
}

func (i AutoscalingPolicyBasicAlgorithmArgsArgs) ToAutoscalingPolicyBasicAlgorithmArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmArgsOutput).ToAutoscalingPolicyBasicAlgorithmArgsPtrOutputWithContext(ctx)
}

type AutoscalingPolicyBasicAlgorithmArgsPtrInput interface {
	pulumi.Input

	ToAutoscalingPolicyBasicAlgorithmArgsPtrOutput() AutoscalingPolicyBasicAlgorithmArgsPtrOutput
	ToAutoscalingPolicyBasicAlgorithmArgsPtrOutputWithContext(context.Context) AutoscalingPolicyBasicAlgorithmArgsPtrOutput
}

type autoscalingPolicyBasicAlgorithmArgsPtrType AutoscalingPolicyBasicAlgorithmArgsArgs

func AutoscalingPolicyBasicAlgorithmArgsPtr(v *AutoscalingPolicyBasicAlgorithmArgsArgs) AutoscalingPolicyBasicAlgorithmArgsPtrInput {
	return (*autoscalingPolicyBasicAlgorithmArgsPtrType)(v)
}

func (*autoscalingPolicyBasicAlgorithmArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyBasicAlgorithmArgs)(nil)).Elem()
}

func (i *autoscalingPolicyBasicAlgorithmArgsPtrType) ToAutoscalingPolicyBasicAlgorithmArgsPtrOutput() AutoscalingPolicyBasicAlgorithmArgsPtrOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmArgsPtrOutputWithContext(context.Background())
}

func (i *autoscalingPolicyBasicAlgorithmArgsPtrType) ToAutoscalingPolicyBasicAlgorithmArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmArgsPtrOutput)
}

type AutoscalingPolicyBasicAlgorithmArgsOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyBasicAlgorithmArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmArgs)(nil)).Elem()
}

func (o AutoscalingPolicyBasicAlgorithmArgsOutput) ToAutoscalingPolicyBasicAlgorithmArgsOutput() AutoscalingPolicyBasicAlgorithmArgsOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmArgsOutput) ToAutoscalingPolicyBasicAlgorithmArgsOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmArgsOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmArgsOutput) ToAutoscalingPolicyBasicAlgorithmArgsPtrOutput() AutoscalingPolicyBasicAlgorithmArgsPtrOutput {
	return o.ToAutoscalingPolicyBasicAlgorithmArgsPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyBasicAlgorithmArgsOutput) ToAutoscalingPolicyBasicAlgorithmArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmArgsPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmArgs) *AutoscalingPolicyBasicAlgorithmArgs {
		return &v
	}).(AutoscalingPolicyBasicAlgorithmArgsPtrOutput)
}
func (o AutoscalingPolicyBasicAlgorithmArgsOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmArgs) *string { return v.CooldownPeriod }).(pulumi.StringPtrOutput)
}

func (o AutoscalingPolicyBasicAlgorithmArgsOutput) YarnConfig() AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmArgs) AutoscalingPolicyBasicAlgorithmYarnConfigArgs {
		return v.YarnConfig
	}).(AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput)
}

type AutoscalingPolicyBasicAlgorithmArgsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyBasicAlgorithmArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyBasicAlgorithmArgs)(nil)).Elem()
}

func (o AutoscalingPolicyBasicAlgorithmArgsPtrOutput) ToAutoscalingPolicyBasicAlgorithmArgsPtrOutput() AutoscalingPolicyBasicAlgorithmArgsPtrOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmArgsPtrOutput) ToAutoscalingPolicyBasicAlgorithmArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmArgsPtrOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmArgsPtrOutput) Elem() AutoscalingPolicyBasicAlgorithmArgsOutput {
	return o.ApplyT(func(v *AutoscalingPolicyBasicAlgorithmArgs) AutoscalingPolicyBasicAlgorithmArgs { return *v }).(AutoscalingPolicyBasicAlgorithmArgsOutput)
}

func (o AutoscalingPolicyBasicAlgorithmArgsPtrOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmArgs) *string { return v.CooldownPeriod }).(pulumi.StringPtrOutput)
}

func (o AutoscalingPolicyBasicAlgorithmArgsPtrOutput) YarnConfig() AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmArgs) AutoscalingPolicyBasicAlgorithmYarnConfigArgs {
		return v.YarnConfig
	}).(AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput)
}

type AutoscalingPolicyBasicAlgorithmState struct {
	CooldownPeriod *string                                        `pulumi:"cooldownPeriod"`
	YarnConfig     AutoscalingPolicyBasicAlgorithmStateYarnConfig `pulumi:"yarnConfig"`
}

type AutoscalingPolicyBasicAlgorithmStateInput interface {
	pulumi.Input

	ToAutoscalingPolicyBasicAlgorithmStateOutput() AutoscalingPolicyBasicAlgorithmStateOutput
	ToAutoscalingPolicyBasicAlgorithmStateOutputWithContext(context.Context) AutoscalingPolicyBasicAlgorithmStateOutput
}

type AutoscalingPolicyBasicAlgorithmStateArgs struct {
	CooldownPeriod pulumi.StringPtrInput                               `pulumi:"cooldownPeriod"`
	YarnConfig     AutoscalingPolicyBasicAlgorithmStateYarnConfigInput `pulumi:"yarnConfig"`
}

func (AutoscalingPolicyBasicAlgorithmStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmState)(nil)).Elem()
}

func (i AutoscalingPolicyBasicAlgorithmStateArgs) ToAutoscalingPolicyBasicAlgorithmStateOutput() AutoscalingPolicyBasicAlgorithmStateOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmStateOutputWithContext(context.Background())
}

func (i AutoscalingPolicyBasicAlgorithmStateArgs) ToAutoscalingPolicyBasicAlgorithmStateOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmStateOutput)
}

type AutoscalingPolicyBasicAlgorithmStateOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyBasicAlgorithmStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmState)(nil)).Elem()
}

func (o AutoscalingPolicyBasicAlgorithmStateOutput) ToAutoscalingPolicyBasicAlgorithmStateOutput() AutoscalingPolicyBasicAlgorithmStateOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmStateOutput) ToAutoscalingPolicyBasicAlgorithmStateOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmStateOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmStateOutput) CooldownPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmState) *string { return v.CooldownPeriod }).(pulumi.StringPtrOutput)
}

func (o AutoscalingPolicyBasicAlgorithmStateOutput) YarnConfig() AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmState) AutoscalingPolicyBasicAlgorithmStateYarnConfig {
		return v.YarnConfig
	}).(AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput)
}

type AutoscalingPolicyBasicAlgorithmStateYarnConfig struct {
	GracefulDecommissionTimeout string   `pulumi:"gracefulDecommissionTimeout"`
	ScaleDownFactor             float64  `pulumi:"scaleDownFactor"`
	ScaleDownMinWorkerFraction  *float64 `pulumi:"scaleDownMinWorkerFraction"`
	ScaleUpFactor               float64  `pulumi:"scaleUpFactor"`
	ScaleUpMinWorkerFraction    *float64 `pulumi:"scaleUpMinWorkerFraction"`
}

type AutoscalingPolicyBasicAlgorithmStateYarnConfigInput interface {
	pulumi.Input

	ToAutoscalingPolicyBasicAlgorithmStateYarnConfigOutput() AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput
	ToAutoscalingPolicyBasicAlgorithmStateYarnConfigOutputWithContext(context.Context) AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput
}

type AutoscalingPolicyBasicAlgorithmStateYarnConfigArgs struct {
	GracefulDecommissionTimeout pulumi.StringInput     `pulumi:"gracefulDecommissionTimeout"`
	ScaleDownFactor             pulumi.Float64Input    `pulumi:"scaleDownFactor"`
	ScaleDownMinWorkerFraction  pulumi.Float64PtrInput `pulumi:"scaleDownMinWorkerFraction"`
	ScaleUpFactor               pulumi.Float64Input    `pulumi:"scaleUpFactor"`
	ScaleUpMinWorkerFraction    pulumi.Float64PtrInput `pulumi:"scaleUpMinWorkerFraction"`
}

func (AutoscalingPolicyBasicAlgorithmStateYarnConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmStateYarnConfig)(nil)).Elem()
}

func (i AutoscalingPolicyBasicAlgorithmStateYarnConfigArgs) ToAutoscalingPolicyBasicAlgorithmStateYarnConfigOutput() AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmStateYarnConfigOutputWithContext(context.Background())
}

func (i AutoscalingPolicyBasicAlgorithmStateYarnConfigArgs) ToAutoscalingPolicyBasicAlgorithmStateYarnConfigOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput)
}

type AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmStateYarnConfig)(nil)).Elem()
}

func (o AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput) ToAutoscalingPolicyBasicAlgorithmStateYarnConfigOutput() AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput) ToAutoscalingPolicyBasicAlgorithmStateYarnConfigOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput) GracefulDecommissionTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmStateYarnConfig) string { return v.GracefulDecommissionTimeout }).(pulumi.StringOutput)
}

func (o AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput) ScaleDownFactor() pulumi.Float64Output {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmStateYarnConfig) float64 { return v.ScaleDownFactor }).(pulumi.Float64Output)
}

func (o AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput) ScaleDownMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmStateYarnConfig) *float64 { return v.ScaleDownMinWorkerFraction }).(pulumi.Float64PtrOutput)
}

func (o AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput) ScaleUpFactor() pulumi.Float64Output {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmStateYarnConfig) float64 { return v.ScaleUpFactor }).(pulumi.Float64Output)
}

func (o AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput) ScaleUpMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmStateYarnConfig) *float64 { return v.ScaleUpMinWorkerFraction }).(pulumi.Float64PtrOutput)
}

type AutoscalingPolicyBasicAlgorithmYarnConfig struct {
	GracefulDecommissionTimeout string   `pulumi:"gracefulDecommissionTimeout"`
	ScaleDownFactor             float64  `pulumi:"scaleDownFactor"`
	ScaleDownMinWorkerFraction  *float64 `pulumi:"scaleDownMinWorkerFraction"`
	ScaleUpFactor               float64  `pulumi:"scaleUpFactor"`
	ScaleUpMinWorkerFraction    *float64 `pulumi:"scaleUpMinWorkerFraction"`
}

type AutoscalingPolicyBasicAlgorithmYarnConfigInput interface {
	pulumi.Input

	ToAutoscalingPolicyBasicAlgorithmYarnConfigOutput() AutoscalingPolicyBasicAlgorithmYarnConfigOutput
	ToAutoscalingPolicyBasicAlgorithmYarnConfigOutputWithContext(context.Context) AutoscalingPolicyBasicAlgorithmYarnConfigOutput
}

type AutoscalingPolicyBasicAlgorithmYarnConfigArgs struct {
	GracefulDecommissionTimeout pulumi.StringInput     `pulumi:"gracefulDecommissionTimeout"`
	ScaleDownFactor             pulumi.Float64Input    `pulumi:"scaleDownFactor"`
	ScaleDownMinWorkerFraction  pulumi.Float64PtrInput `pulumi:"scaleDownMinWorkerFraction"`
	ScaleUpFactor               pulumi.Float64Input    `pulumi:"scaleUpFactor"`
	ScaleUpMinWorkerFraction    pulumi.Float64PtrInput `pulumi:"scaleUpMinWorkerFraction"`
}

func (AutoscalingPolicyBasicAlgorithmYarnConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmYarnConfig)(nil)).Elem()
}

func (i AutoscalingPolicyBasicAlgorithmYarnConfigArgs) ToAutoscalingPolicyBasicAlgorithmYarnConfigOutput() AutoscalingPolicyBasicAlgorithmYarnConfigOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmYarnConfigOutputWithContext(context.Background())
}

func (i AutoscalingPolicyBasicAlgorithmYarnConfigArgs) ToAutoscalingPolicyBasicAlgorithmYarnConfigOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmYarnConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmYarnConfigOutput)
}

type AutoscalingPolicyBasicAlgorithmYarnConfigOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyBasicAlgorithmYarnConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmYarnConfig)(nil)).Elem()
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigOutput) ToAutoscalingPolicyBasicAlgorithmYarnConfigOutput() AutoscalingPolicyBasicAlgorithmYarnConfigOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigOutput) ToAutoscalingPolicyBasicAlgorithmYarnConfigOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmYarnConfigOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigOutput) GracefulDecommissionTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfig) string { return v.GracefulDecommissionTimeout }).(pulumi.StringOutput)
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigOutput) ScaleDownFactor() pulumi.Float64Output {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfig) float64 { return v.ScaleDownFactor }).(pulumi.Float64Output)
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigOutput) ScaleDownMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfig) *float64 { return v.ScaleDownMinWorkerFraction }).(pulumi.Float64PtrOutput)
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigOutput) ScaleUpFactor() pulumi.Float64Output {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfig) float64 { return v.ScaleUpFactor }).(pulumi.Float64Output)
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigOutput) ScaleUpMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfig) *float64 { return v.ScaleUpMinWorkerFraction }).(pulumi.Float64PtrOutput)
}

type AutoscalingPolicyBasicAlgorithmYarnConfigArgs struct {
	GracefulDecommissionTimeout string   `pulumi:"gracefulDecommissionTimeout"`
	ScaleDownFactor             float64  `pulumi:"scaleDownFactor"`
	ScaleDownMinWorkerFraction  *float64 `pulumi:"scaleDownMinWorkerFraction"`
	ScaleUpFactor               float64  `pulumi:"scaleUpFactor"`
	ScaleUpMinWorkerFraction    *float64 `pulumi:"scaleUpMinWorkerFraction"`
}

type AutoscalingPolicyBasicAlgorithmYarnConfigArgsInput interface {
	pulumi.Input

	ToAutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput() AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput
	ToAutoscalingPolicyBasicAlgorithmYarnConfigArgsOutputWithContext(context.Context) AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput
}

type AutoscalingPolicyBasicAlgorithmYarnConfigArgsArgs struct {
	GracefulDecommissionTimeout pulumi.StringInput     `pulumi:"gracefulDecommissionTimeout"`
	ScaleDownFactor             pulumi.Float64Input    `pulumi:"scaleDownFactor"`
	ScaleDownMinWorkerFraction  pulumi.Float64PtrInput `pulumi:"scaleDownMinWorkerFraction"`
	ScaleUpFactor               pulumi.Float64Input    `pulumi:"scaleUpFactor"`
	ScaleUpMinWorkerFraction    pulumi.Float64PtrInput `pulumi:"scaleUpMinWorkerFraction"`
}

func (AutoscalingPolicyBasicAlgorithmYarnConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmYarnConfigArgs)(nil)).Elem()
}

func (i AutoscalingPolicyBasicAlgorithmYarnConfigArgsArgs) ToAutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput() AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput {
	return i.ToAutoscalingPolicyBasicAlgorithmYarnConfigArgsOutputWithContext(context.Background())
}

func (i AutoscalingPolicyBasicAlgorithmYarnConfigArgsArgs) ToAutoscalingPolicyBasicAlgorithmYarnConfigArgsOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput)
}

type AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyBasicAlgorithmYarnConfigArgs)(nil)).Elem()
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput) ToAutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput() AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput) ToAutoscalingPolicyBasicAlgorithmYarnConfigArgsOutputWithContext(ctx context.Context) AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput {
	return o
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput) GracefulDecommissionTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfigArgs) string { return v.GracefulDecommissionTimeout }).(pulumi.StringOutput)
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput) ScaleDownFactor() pulumi.Float64Output {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfigArgs) float64 { return v.ScaleDownFactor }).(pulumi.Float64Output)
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput) ScaleDownMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfigArgs) *float64 { return v.ScaleDownMinWorkerFraction }).(pulumi.Float64PtrOutput)
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput) ScaleUpFactor() pulumi.Float64Output {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfigArgs) float64 { return v.ScaleUpFactor }).(pulumi.Float64Output)
}

func (o AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput) ScaleUpMinWorkerFraction() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyBasicAlgorithmYarnConfigArgs) *float64 { return v.ScaleUpMinWorkerFraction }).(pulumi.Float64PtrOutput)
}

type AutoscalingPolicySecondaryWorkerConfig struct {
	MaxInstances *int `pulumi:"maxInstances"`
	MinInstances *int `pulumi:"minInstances"`
	Weight       *int `pulumi:"weight"`
}

type AutoscalingPolicySecondaryWorkerConfigInput interface {
	pulumi.Input

	ToAutoscalingPolicySecondaryWorkerConfigOutput() AutoscalingPolicySecondaryWorkerConfigOutput
	ToAutoscalingPolicySecondaryWorkerConfigOutputWithContext(context.Context) AutoscalingPolicySecondaryWorkerConfigOutput
}

type AutoscalingPolicySecondaryWorkerConfigArgs struct {
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	Weight       pulumi.IntPtrInput `pulumi:"weight"`
}

func (AutoscalingPolicySecondaryWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicySecondaryWorkerConfig)(nil)).Elem()
}

func (i AutoscalingPolicySecondaryWorkerConfigArgs) ToAutoscalingPolicySecondaryWorkerConfigOutput() AutoscalingPolicySecondaryWorkerConfigOutput {
	return i.ToAutoscalingPolicySecondaryWorkerConfigOutputWithContext(context.Background())
}

func (i AutoscalingPolicySecondaryWorkerConfigArgs) ToAutoscalingPolicySecondaryWorkerConfigOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicySecondaryWorkerConfigOutput)
}

func (i AutoscalingPolicySecondaryWorkerConfigArgs) ToAutoscalingPolicySecondaryWorkerConfigPtrOutput() AutoscalingPolicySecondaryWorkerConfigPtrOutput {
	return i.ToAutoscalingPolicySecondaryWorkerConfigPtrOutputWithContext(context.Background())
}

func (i AutoscalingPolicySecondaryWorkerConfigArgs) ToAutoscalingPolicySecondaryWorkerConfigPtrOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicySecondaryWorkerConfigOutput).ToAutoscalingPolicySecondaryWorkerConfigPtrOutputWithContext(ctx)
}

type AutoscalingPolicySecondaryWorkerConfigPtrInput interface {
	pulumi.Input

	ToAutoscalingPolicySecondaryWorkerConfigPtrOutput() AutoscalingPolicySecondaryWorkerConfigPtrOutput
	ToAutoscalingPolicySecondaryWorkerConfigPtrOutputWithContext(context.Context) AutoscalingPolicySecondaryWorkerConfigPtrOutput
}

type autoscalingPolicySecondaryWorkerConfigPtrType AutoscalingPolicySecondaryWorkerConfigArgs

func AutoscalingPolicySecondaryWorkerConfigPtr(v *AutoscalingPolicySecondaryWorkerConfigArgs) AutoscalingPolicySecondaryWorkerConfigPtrInput {
	return (*autoscalingPolicySecondaryWorkerConfigPtrType)(v)
}

func (*autoscalingPolicySecondaryWorkerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicySecondaryWorkerConfig)(nil)).Elem()
}

func (i *autoscalingPolicySecondaryWorkerConfigPtrType) ToAutoscalingPolicySecondaryWorkerConfigPtrOutput() AutoscalingPolicySecondaryWorkerConfigPtrOutput {
	return i.ToAutoscalingPolicySecondaryWorkerConfigPtrOutputWithContext(context.Background())
}

func (i *autoscalingPolicySecondaryWorkerConfigPtrType) ToAutoscalingPolicySecondaryWorkerConfigPtrOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicySecondaryWorkerConfigPtrOutput)
}

type AutoscalingPolicySecondaryWorkerConfigOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicySecondaryWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicySecondaryWorkerConfig)(nil)).Elem()
}

func (o AutoscalingPolicySecondaryWorkerConfigOutput) ToAutoscalingPolicySecondaryWorkerConfigOutput() AutoscalingPolicySecondaryWorkerConfigOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigOutput) ToAutoscalingPolicySecondaryWorkerConfigOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigOutput) ToAutoscalingPolicySecondaryWorkerConfigPtrOutput() AutoscalingPolicySecondaryWorkerConfigPtrOutput {
	return o.ToAutoscalingPolicySecondaryWorkerConfigPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicySecondaryWorkerConfigOutput) ToAutoscalingPolicySecondaryWorkerConfigPtrOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfig) *AutoscalingPolicySecondaryWorkerConfig {
		return &v
	}).(AutoscalingPolicySecondaryWorkerConfigPtrOutput)
}
func (o AutoscalingPolicySecondaryWorkerConfigOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfig) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfig) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfig) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AutoscalingPolicySecondaryWorkerConfigPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicySecondaryWorkerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicySecondaryWorkerConfig)(nil)).Elem()
}

func (o AutoscalingPolicySecondaryWorkerConfigPtrOutput) ToAutoscalingPolicySecondaryWorkerConfigPtrOutput() AutoscalingPolicySecondaryWorkerConfigPtrOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigPtrOutput) ToAutoscalingPolicySecondaryWorkerConfigPtrOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigPtrOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigPtrOutput) Elem() AutoscalingPolicySecondaryWorkerConfigOutput {
	return o.ApplyT(func(v *AutoscalingPolicySecondaryWorkerConfig) AutoscalingPolicySecondaryWorkerConfig { return *v }).(AutoscalingPolicySecondaryWorkerConfigOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigPtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfig) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigPtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfig) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfig) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AutoscalingPolicySecondaryWorkerConfigArgs struct {
	MaxInstances *int `pulumi:"maxInstances"`
	MinInstances *int `pulumi:"minInstances"`
	Weight       *int `pulumi:"weight"`
}

type AutoscalingPolicySecondaryWorkerConfigArgsInput interface {
	pulumi.Input

	ToAutoscalingPolicySecondaryWorkerConfigArgsOutput() AutoscalingPolicySecondaryWorkerConfigArgsOutput
	ToAutoscalingPolicySecondaryWorkerConfigArgsOutputWithContext(context.Context) AutoscalingPolicySecondaryWorkerConfigArgsOutput
}

type AutoscalingPolicySecondaryWorkerConfigArgsArgs struct {
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	Weight       pulumi.IntPtrInput `pulumi:"weight"`
}

func (AutoscalingPolicySecondaryWorkerConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicySecondaryWorkerConfigArgs)(nil)).Elem()
}

func (i AutoscalingPolicySecondaryWorkerConfigArgsArgs) ToAutoscalingPolicySecondaryWorkerConfigArgsOutput() AutoscalingPolicySecondaryWorkerConfigArgsOutput {
	return i.ToAutoscalingPolicySecondaryWorkerConfigArgsOutputWithContext(context.Background())
}

func (i AutoscalingPolicySecondaryWorkerConfigArgsArgs) ToAutoscalingPolicySecondaryWorkerConfigArgsOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicySecondaryWorkerConfigArgsOutput)
}

func (i AutoscalingPolicySecondaryWorkerConfigArgsArgs) ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutput() AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput {
	return i.ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (i AutoscalingPolicySecondaryWorkerConfigArgsArgs) ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicySecondaryWorkerConfigArgsOutput).ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutputWithContext(ctx)
}

type AutoscalingPolicySecondaryWorkerConfigArgsPtrInput interface {
	pulumi.Input

	ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutput() AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput
	ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutputWithContext(context.Context) AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput
}

type autoscalingPolicySecondaryWorkerConfigArgsPtrType AutoscalingPolicySecondaryWorkerConfigArgsArgs

func AutoscalingPolicySecondaryWorkerConfigArgsPtr(v *AutoscalingPolicySecondaryWorkerConfigArgsArgs) AutoscalingPolicySecondaryWorkerConfigArgsPtrInput {
	return (*autoscalingPolicySecondaryWorkerConfigArgsPtrType)(v)
}

func (*autoscalingPolicySecondaryWorkerConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicySecondaryWorkerConfigArgs)(nil)).Elem()
}

func (i *autoscalingPolicySecondaryWorkerConfigArgsPtrType) ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutput() AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput {
	return i.ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (i *autoscalingPolicySecondaryWorkerConfigArgsPtrType) ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput)
}

type AutoscalingPolicySecondaryWorkerConfigArgsOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicySecondaryWorkerConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicySecondaryWorkerConfigArgs)(nil)).Elem()
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsOutput) ToAutoscalingPolicySecondaryWorkerConfigArgsOutput() AutoscalingPolicySecondaryWorkerConfigArgsOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsOutput) ToAutoscalingPolicySecondaryWorkerConfigArgsOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigArgsOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsOutput) ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutput() AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput {
	return o.ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsOutput) ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigArgs) *AutoscalingPolicySecondaryWorkerConfigArgs {
		return &v
	}).(AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput)
}
func (o AutoscalingPolicySecondaryWorkerConfigArgsOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigArgs) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigArgs) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigArgs) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicySecondaryWorkerConfigArgs)(nil)).Elem()
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput) ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutput() AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput) ToAutoscalingPolicySecondaryWorkerConfigArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput) Elem() AutoscalingPolicySecondaryWorkerConfigArgsOutput {
	return o.ApplyT(func(v *AutoscalingPolicySecondaryWorkerConfigArgs) AutoscalingPolicySecondaryWorkerConfigArgs {
		return *v
	}).(AutoscalingPolicySecondaryWorkerConfigArgsOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigArgs) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigArgs) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigArgs) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AutoscalingPolicySecondaryWorkerConfigState struct {
	MaxInstances *int `pulumi:"maxInstances"`
	MinInstances *int `pulumi:"minInstances"`
	Weight       *int `pulumi:"weight"`
}

type AutoscalingPolicySecondaryWorkerConfigStateInput interface {
	pulumi.Input

	ToAutoscalingPolicySecondaryWorkerConfigStateOutput() AutoscalingPolicySecondaryWorkerConfigStateOutput
	ToAutoscalingPolicySecondaryWorkerConfigStateOutputWithContext(context.Context) AutoscalingPolicySecondaryWorkerConfigStateOutput
}

type AutoscalingPolicySecondaryWorkerConfigStateArgs struct {
	MaxInstances pulumi.IntPtrInput `pulumi:"maxInstances"`
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	Weight       pulumi.IntPtrInput `pulumi:"weight"`
}

func (AutoscalingPolicySecondaryWorkerConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicySecondaryWorkerConfigState)(nil)).Elem()
}

func (i AutoscalingPolicySecondaryWorkerConfigStateArgs) ToAutoscalingPolicySecondaryWorkerConfigStateOutput() AutoscalingPolicySecondaryWorkerConfigStateOutput {
	return i.ToAutoscalingPolicySecondaryWorkerConfigStateOutputWithContext(context.Background())
}

func (i AutoscalingPolicySecondaryWorkerConfigStateArgs) ToAutoscalingPolicySecondaryWorkerConfigStateOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicySecondaryWorkerConfigStateOutput)
}

type AutoscalingPolicySecondaryWorkerConfigStateOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicySecondaryWorkerConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicySecondaryWorkerConfigState)(nil)).Elem()
}

func (o AutoscalingPolicySecondaryWorkerConfigStateOutput) ToAutoscalingPolicySecondaryWorkerConfigStateOutput() AutoscalingPolicySecondaryWorkerConfigStateOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigStateOutput) ToAutoscalingPolicySecondaryWorkerConfigStateOutputWithContext(ctx context.Context) AutoscalingPolicySecondaryWorkerConfigStateOutput {
	return o
}

func (o AutoscalingPolicySecondaryWorkerConfigStateOutput) MaxInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigState) *int { return v.MaxInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigStateOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigState) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicySecondaryWorkerConfigStateOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicySecondaryWorkerConfigState) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AutoscalingPolicyWorkerConfig struct {
	MaxInstances int  `pulumi:"maxInstances"`
	MinInstances *int `pulumi:"minInstances"`
	Weight       *int `pulumi:"weight"`
}

type AutoscalingPolicyWorkerConfigInput interface {
	pulumi.Input

	ToAutoscalingPolicyWorkerConfigOutput() AutoscalingPolicyWorkerConfigOutput
	ToAutoscalingPolicyWorkerConfigOutputWithContext(context.Context) AutoscalingPolicyWorkerConfigOutput
}

type AutoscalingPolicyWorkerConfigArgs struct {
	MaxInstances pulumi.IntInput    `pulumi:"maxInstances"`
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	Weight       pulumi.IntPtrInput `pulumi:"weight"`
}

func (AutoscalingPolicyWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyWorkerConfig)(nil)).Elem()
}

func (i AutoscalingPolicyWorkerConfigArgs) ToAutoscalingPolicyWorkerConfigOutput() AutoscalingPolicyWorkerConfigOutput {
	return i.ToAutoscalingPolicyWorkerConfigOutputWithContext(context.Background())
}

func (i AutoscalingPolicyWorkerConfigArgs) ToAutoscalingPolicyWorkerConfigOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyWorkerConfigOutput)
}

func (i AutoscalingPolicyWorkerConfigArgs) ToAutoscalingPolicyWorkerConfigPtrOutput() AutoscalingPolicyWorkerConfigPtrOutput {
	return i.ToAutoscalingPolicyWorkerConfigPtrOutputWithContext(context.Background())
}

func (i AutoscalingPolicyWorkerConfigArgs) ToAutoscalingPolicyWorkerConfigPtrOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyWorkerConfigOutput).ToAutoscalingPolicyWorkerConfigPtrOutputWithContext(ctx)
}

type AutoscalingPolicyWorkerConfigPtrInput interface {
	pulumi.Input

	ToAutoscalingPolicyWorkerConfigPtrOutput() AutoscalingPolicyWorkerConfigPtrOutput
	ToAutoscalingPolicyWorkerConfigPtrOutputWithContext(context.Context) AutoscalingPolicyWorkerConfigPtrOutput
}

type autoscalingPolicyWorkerConfigPtrType AutoscalingPolicyWorkerConfigArgs

func AutoscalingPolicyWorkerConfigPtr(v *AutoscalingPolicyWorkerConfigArgs) AutoscalingPolicyWorkerConfigPtrInput {
	return (*autoscalingPolicyWorkerConfigPtrType)(v)
}

func (*autoscalingPolicyWorkerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyWorkerConfig)(nil)).Elem()
}

func (i *autoscalingPolicyWorkerConfigPtrType) ToAutoscalingPolicyWorkerConfigPtrOutput() AutoscalingPolicyWorkerConfigPtrOutput {
	return i.ToAutoscalingPolicyWorkerConfigPtrOutputWithContext(context.Background())
}

func (i *autoscalingPolicyWorkerConfigPtrType) ToAutoscalingPolicyWorkerConfigPtrOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyWorkerConfigPtrOutput)
}

type AutoscalingPolicyWorkerConfigOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyWorkerConfig)(nil)).Elem()
}

func (o AutoscalingPolicyWorkerConfigOutput) ToAutoscalingPolicyWorkerConfigOutput() AutoscalingPolicyWorkerConfigOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigOutput) ToAutoscalingPolicyWorkerConfigOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigOutput) ToAutoscalingPolicyWorkerConfigPtrOutput() AutoscalingPolicyWorkerConfigPtrOutput {
	return o.ToAutoscalingPolicyWorkerConfigPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyWorkerConfigOutput) ToAutoscalingPolicyWorkerConfigPtrOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfig) *AutoscalingPolicyWorkerConfig {
		return &v
	}).(AutoscalingPolicyWorkerConfigPtrOutput)
}
func (o AutoscalingPolicyWorkerConfigOutput) MaxInstances() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfig) int { return v.MaxInstances }).(pulumi.IntOutput)
}

func (o AutoscalingPolicyWorkerConfigOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfig) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicyWorkerConfigOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfig) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AutoscalingPolicyWorkerConfigPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyWorkerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyWorkerConfig)(nil)).Elem()
}

func (o AutoscalingPolicyWorkerConfigPtrOutput) ToAutoscalingPolicyWorkerConfigPtrOutput() AutoscalingPolicyWorkerConfigPtrOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigPtrOutput) ToAutoscalingPolicyWorkerConfigPtrOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigPtrOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigPtrOutput) Elem() AutoscalingPolicyWorkerConfigOutput {
	return o.ApplyT(func(v *AutoscalingPolicyWorkerConfig) AutoscalingPolicyWorkerConfig { return *v }).(AutoscalingPolicyWorkerConfigOutput)
}

func (o AutoscalingPolicyWorkerConfigPtrOutput) MaxInstances() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfig) int { return v.MaxInstances }).(pulumi.IntOutput)
}

func (o AutoscalingPolicyWorkerConfigPtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfig) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicyWorkerConfigPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfig) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AutoscalingPolicyWorkerConfigArgs struct {
	MaxInstances int  `pulumi:"maxInstances"`
	MinInstances *int `pulumi:"minInstances"`
	Weight       *int `pulumi:"weight"`
}

type AutoscalingPolicyWorkerConfigArgsInput interface {
	pulumi.Input

	ToAutoscalingPolicyWorkerConfigArgsOutput() AutoscalingPolicyWorkerConfigArgsOutput
	ToAutoscalingPolicyWorkerConfigArgsOutputWithContext(context.Context) AutoscalingPolicyWorkerConfigArgsOutput
}

type AutoscalingPolicyWorkerConfigArgsArgs struct {
	MaxInstances pulumi.IntInput    `pulumi:"maxInstances"`
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	Weight       pulumi.IntPtrInput `pulumi:"weight"`
}

func (AutoscalingPolicyWorkerConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyWorkerConfigArgs)(nil)).Elem()
}

func (i AutoscalingPolicyWorkerConfigArgsArgs) ToAutoscalingPolicyWorkerConfigArgsOutput() AutoscalingPolicyWorkerConfigArgsOutput {
	return i.ToAutoscalingPolicyWorkerConfigArgsOutputWithContext(context.Background())
}

func (i AutoscalingPolicyWorkerConfigArgsArgs) ToAutoscalingPolicyWorkerConfigArgsOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyWorkerConfigArgsOutput)
}

func (i AutoscalingPolicyWorkerConfigArgsArgs) ToAutoscalingPolicyWorkerConfigArgsPtrOutput() AutoscalingPolicyWorkerConfigArgsPtrOutput {
	return i.ToAutoscalingPolicyWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (i AutoscalingPolicyWorkerConfigArgsArgs) ToAutoscalingPolicyWorkerConfigArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyWorkerConfigArgsOutput).ToAutoscalingPolicyWorkerConfigArgsPtrOutputWithContext(ctx)
}

type AutoscalingPolicyWorkerConfigArgsPtrInput interface {
	pulumi.Input

	ToAutoscalingPolicyWorkerConfigArgsPtrOutput() AutoscalingPolicyWorkerConfigArgsPtrOutput
	ToAutoscalingPolicyWorkerConfigArgsPtrOutputWithContext(context.Context) AutoscalingPolicyWorkerConfigArgsPtrOutput
}

type autoscalingPolicyWorkerConfigArgsPtrType AutoscalingPolicyWorkerConfigArgsArgs

func AutoscalingPolicyWorkerConfigArgsPtr(v *AutoscalingPolicyWorkerConfigArgsArgs) AutoscalingPolicyWorkerConfigArgsPtrInput {
	return (*autoscalingPolicyWorkerConfigArgsPtrType)(v)
}

func (*autoscalingPolicyWorkerConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyWorkerConfigArgs)(nil)).Elem()
}

func (i *autoscalingPolicyWorkerConfigArgsPtrType) ToAutoscalingPolicyWorkerConfigArgsPtrOutput() AutoscalingPolicyWorkerConfigArgsPtrOutput {
	return i.ToAutoscalingPolicyWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (i *autoscalingPolicyWorkerConfigArgsPtrType) ToAutoscalingPolicyWorkerConfigArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyWorkerConfigArgsPtrOutput)
}

type AutoscalingPolicyWorkerConfigArgsOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyWorkerConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyWorkerConfigArgs)(nil)).Elem()
}

func (o AutoscalingPolicyWorkerConfigArgsOutput) ToAutoscalingPolicyWorkerConfigArgsOutput() AutoscalingPolicyWorkerConfigArgsOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigArgsOutput) ToAutoscalingPolicyWorkerConfigArgsOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigArgsOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigArgsOutput) ToAutoscalingPolicyWorkerConfigArgsPtrOutput() AutoscalingPolicyWorkerConfigArgsPtrOutput {
	return o.ToAutoscalingPolicyWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (o AutoscalingPolicyWorkerConfigArgsOutput) ToAutoscalingPolicyWorkerConfigArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigArgsPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigArgs) *AutoscalingPolicyWorkerConfigArgs {
		return &v
	}).(AutoscalingPolicyWorkerConfigArgsPtrOutput)
}
func (o AutoscalingPolicyWorkerConfigArgsOutput) MaxInstances() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigArgs) int { return v.MaxInstances }).(pulumi.IntOutput)
}

func (o AutoscalingPolicyWorkerConfigArgsOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigArgs) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicyWorkerConfigArgsOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigArgs) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AutoscalingPolicyWorkerConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyWorkerConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingPolicyWorkerConfigArgs)(nil)).Elem()
}

func (o AutoscalingPolicyWorkerConfigArgsPtrOutput) ToAutoscalingPolicyWorkerConfigArgsPtrOutput() AutoscalingPolicyWorkerConfigArgsPtrOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigArgsPtrOutput) ToAutoscalingPolicyWorkerConfigArgsPtrOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigArgsPtrOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigArgsPtrOutput) Elem() AutoscalingPolicyWorkerConfigArgsOutput {
	return o.ApplyT(func(v *AutoscalingPolicyWorkerConfigArgs) AutoscalingPolicyWorkerConfigArgs { return *v }).(AutoscalingPolicyWorkerConfigArgsOutput)
}

func (o AutoscalingPolicyWorkerConfigArgsPtrOutput) MaxInstances() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigArgs) int { return v.MaxInstances }).(pulumi.IntOutput)
}

func (o AutoscalingPolicyWorkerConfigArgsPtrOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigArgs) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicyWorkerConfigArgsPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigArgs) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type AutoscalingPolicyWorkerConfigState struct {
	MaxInstances int  `pulumi:"maxInstances"`
	MinInstances *int `pulumi:"minInstances"`
	Weight       *int `pulumi:"weight"`
}

type AutoscalingPolicyWorkerConfigStateInput interface {
	pulumi.Input

	ToAutoscalingPolicyWorkerConfigStateOutput() AutoscalingPolicyWorkerConfigStateOutput
	ToAutoscalingPolicyWorkerConfigStateOutputWithContext(context.Context) AutoscalingPolicyWorkerConfigStateOutput
}

type AutoscalingPolicyWorkerConfigStateArgs struct {
	MaxInstances pulumi.IntInput    `pulumi:"maxInstances"`
	MinInstances pulumi.IntPtrInput `pulumi:"minInstances"`
	Weight       pulumi.IntPtrInput `pulumi:"weight"`
}

func (AutoscalingPolicyWorkerConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyWorkerConfigState)(nil)).Elem()
}

func (i AutoscalingPolicyWorkerConfigStateArgs) ToAutoscalingPolicyWorkerConfigStateOutput() AutoscalingPolicyWorkerConfigStateOutput {
	return i.ToAutoscalingPolicyWorkerConfigStateOutputWithContext(context.Background())
}

func (i AutoscalingPolicyWorkerConfigStateArgs) ToAutoscalingPolicyWorkerConfigStateOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingPolicyWorkerConfigStateOutput)
}

type AutoscalingPolicyWorkerConfigStateOutput struct{ *pulumi.OutputState }

func (AutoscalingPolicyWorkerConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingPolicyWorkerConfigState)(nil)).Elem()
}

func (o AutoscalingPolicyWorkerConfigStateOutput) ToAutoscalingPolicyWorkerConfigStateOutput() AutoscalingPolicyWorkerConfigStateOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigStateOutput) ToAutoscalingPolicyWorkerConfigStateOutputWithContext(ctx context.Context) AutoscalingPolicyWorkerConfigStateOutput {
	return o
}

func (o AutoscalingPolicyWorkerConfigStateOutput) MaxInstances() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigState) int { return v.MaxInstances }).(pulumi.IntOutput)
}

func (o AutoscalingPolicyWorkerConfigStateOutput) MinInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigState) *int { return v.MinInstances }).(pulumi.IntPtrOutput)
}

func (o AutoscalingPolicyWorkerConfigStateOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingPolicyWorkerConfigState) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfig struct {
	// The autoscaling policy config associated with the cluster.
	// Structure defined below.
	AutoscalingConfig *ClusterClusterConfigAutoscalingConfig `pulumi:"autoscalingConfig"`
	Bucket            string                                 `pulumi:"bucket"`
	// The Customer managed encryption keys settings for the cluster.
	// Structure defined below.
	EncryptionConfig *ClusterClusterConfigEncryptionConfig `pulumi:"encryptionConfig"`
	// Common config settings for resources of Google Compute Engine cluster
	// instances, applicable to all instances in the cluster. Structure defined below.
	GceClusterConfig ClusterClusterConfigGceClusterConfig `pulumi:"gceClusterConfig"`
	// Commands to execute on each node after config is completed.
	// You can specify multiple versions of these. Structure defined below.
	InitializationActions []ClusterClusterConfigInitializationAction `pulumi:"initializationActions"`
	LifecycleConfig       *ClusterClusterConfigLifecycleConfig       `pulumi:"lifecycleConfig"`
	// The Google Compute Engine config settings for the master instances
	// in a cluster.. Structure defined below.
	MasterConfig ClusterClusterConfigMasterConfig `pulumi:"masterConfig"`
	// The Google Compute Engine config settings for the additional (aka
	// preemptible) instances in a cluster. Structure defined below.
	PreemptibleWorkerConfig ClusterClusterConfigPreemptibleWorkerConfig `pulumi:"preemptibleWorkerConfig"`
	// Security related configuration. Structure defined below.
	SecurityConfig *ClusterClusterConfigSecurityConfig `pulumi:"securityConfig"`
	// The config settings for software inside the cluster.
	// Structure defined below.
	SoftwareConfig ClusterClusterConfigSoftwareConfig `pulumi:"softwareConfig"`
	// The Cloud Storage staging bucket used to stage files,
	// such as Hadoop jars, between client machines and the cluster.
	// Note: If you don't explicitly specify a `stagingBucket`
	// then GCP will auto create / assign one for you. However, you are not guaranteed
	// an auto generated bucket which is solely dedicated to your cluster; it may be shared
	// with other clusters in the same region/zone also choosing to use the auto generation
	// option.
	StagingBucket *string `pulumi:"stagingBucket"`
	// The Google Compute Engine config settings for the worker instances
	// in a cluster.. Structure defined below.
	WorkerConfig ClusterClusterConfigWorkerConfig `pulumi:"workerConfig"`
}

type ClusterClusterConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigOutput() ClusterClusterConfigOutput
	ToClusterClusterConfigOutputWithContext(context.Context) ClusterClusterConfigOutput
}

type ClusterClusterConfigArgs struct {
	// The autoscaling policy config associated with the cluster.
	// Structure defined below.
	AutoscalingConfig ClusterClusterConfigAutoscalingConfigPtrInput `pulumi:"autoscalingConfig"`
	Bucket            pulumi.StringInput                            `pulumi:"bucket"`
	// The Customer managed encryption keys settings for the cluster.
	// Structure defined below.
	EncryptionConfig ClusterClusterConfigEncryptionConfigPtrInput `pulumi:"encryptionConfig"`
	// Common config settings for resources of Google Compute Engine cluster
	// instances, applicable to all instances in the cluster. Structure defined below.
	GceClusterConfig ClusterClusterConfigGceClusterConfigInput `pulumi:"gceClusterConfig"`
	// Commands to execute on each node after config is completed.
	// You can specify multiple versions of these. Structure defined below.
	InitializationActions ClusterClusterConfigInitializationActionArrayInput `pulumi:"initializationActions"`
	LifecycleConfig       ClusterClusterConfigLifecycleConfigPtrInput        `pulumi:"lifecycleConfig"`
	// The Google Compute Engine config settings for the master instances
	// in a cluster.. Structure defined below.
	MasterConfig ClusterClusterConfigMasterConfigInput `pulumi:"masterConfig"`
	// The Google Compute Engine config settings for the additional (aka
	// preemptible) instances in a cluster. Structure defined below.
	PreemptibleWorkerConfig ClusterClusterConfigPreemptibleWorkerConfigInput `pulumi:"preemptibleWorkerConfig"`
	// Security related configuration. Structure defined below.
	SecurityConfig ClusterClusterConfigSecurityConfigPtrInput `pulumi:"securityConfig"`
	// The config settings for software inside the cluster.
	// Structure defined below.
	SoftwareConfig ClusterClusterConfigSoftwareConfigInput `pulumi:"softwareConfig"`
	// The Cloud Storage staging bucket used to stage files,
	// such as Hadoop jars, between client machines and the cluster.
	// Note: If you don't explicitly specify a `stagingBucket`
	// then GCP will auto create / assign one for you. However, you are not guaranteed
	// an auto generated bucket which is solely dedicated to your cluster; it may be shared
	// with other clusters in the same region/zone also choosing to use the auto generation
	// option.
	StagingBucket pulumi.StringPtrInput `pulumi:"stagingBucket"`
	// The Google Compute Engine config settings for the worker instances
	// in a cluster.. Structure defined below.
	WorkerConfig ClusterClusterConfigWorkerConfigInput `pulumi:"workerConfig"`
}

func (ClusterClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfig)(nil)).Elem()
}

func (i ClusterClusterConfigArgs) ToClusterClusterConfigOutput() ClusterClusterConfigOutput {
	return i.ToClusterClusterConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigArgs) ToClusterClusterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigOutput)
}

func (i ClusterClusterConfigArgs) ToClusterClusterConfigPtrOutput() ClusterClusterConfigPtrOutput {
	return i.ToClusterClusterConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigArgs) ToClusterClusterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigOutput).ToClusterClusterConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigPtrOutput() ClusterClusterConfigPtrOutput
	ToClusterClusterConfigPtrOutputWithContext(context.Context) ClusterClusterConfigPtrOutput
}

type clusterClusterConfigPtrType ClusterClusterConfigArgs

func ClusterClusterConfigPtr(v *ClusterClusterConfigArgs) ClusterClusterConfigPtrInput {
	return (*clusterClusterConfigPtrType)(v)
}

func (*clusterClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfig)(nil)).Elem()
}

func (i *clusterClusterConfigPtrType) ToClusterClusterConfigPtrOutput() ClusterClusterConfigPtrOutput {
	return i.ToClusterClusterConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigPtrType) ToClusterClusterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigPtrOutput)
}

type ClusterClusterConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfig)(nil)).Elem()
}

func (o ClusterClusterConfigOutput) ToClusterClusterConfigOutput() ClusterClusterConfigOutput {
	return o
}

func (o ClusterClusterConfigOutput) ToClusterClusterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigOutput {
	return o
}

func (o ClusterClusterConfigOutput) ToClusterClusterConfigPtrOutput() ClusterClusterConfigPtrOutput {
	return o.ToClusterClusterConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigOutput) ToClusterClusterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *ClusterClusterConfig {
		return &v
	}).(ClusterClusterConfigPtrOutput)
}

// The autoscaling policy config associated with the cluster.
// Structure defined below.
func (o ClusterClusterConfigOutput) AutoscalingConfig() ClusterClusterConfigAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *ClusterClusterConfigAutoscalingConfig { return v.AutoscalingConfig }).(ClusterClusterConfigAutoscalingConfigPtrOutput)
}

func (o ClusterClusterConfigOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfig) string { return v.Bucket }).(pulumi.StringOutput)
}

// The Customer managed encryption keys settings for the cluster.
// Structure defined below.
func (o ClusterClusterConfigOutput) EncryptionConfig() ClusterClusterConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *ClusterClusterConfigEncryptionConfig { return v.EncryptionConfig }).(ClusterClusterConfigEncryptionConfigPtrOutput)
}

// Common config settings for resources of Google Compute Engine cluster
// instances, applicable to all instances in the cluster. Structure defined below.
func (o ClusterClusterConfigOutput) GceClusterConfig() ClusterClusterConfigGceClusterConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigGceClusterConfig { return v.GceClusterConfig }).(ClusterClusterConfigGceClusterConfigOutput)
}

// Commands to execute on each node after config is completed.
// You can specify multiple versions of these. Structure defined below.
func (o ClusterClusterConfigOutput) InitializationActions() ClusterClusterConfigInitializationActionArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfig) []ClusterClusterConfigInitializationAction {
		return v.InitializationActions
	}).(ClusterClusterConfigInitializationActionArrayOutput)
}

func (o ClusterClusterConfigOutput) LifecycleConfig() ClusterClusterConfigLifecycleConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *ClusterClusterConfigLifecycleConfig { return v.LifecycleConfig }).(ClusterClusterConfigLifecycleConfigPtrOutput)
}

// The Google Compute Engine config settings for the master instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigOutput) MasterConfig() ClusterClusterConfigMasterConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigMasterConfig { return v.MasterConfig }).(ClusterClusterConfigMasterConfigOutput)
}

// The Google Compute Engine config settings for the additional (aka
// preemptible) instances in a cluster. Structure defined below.
func (o ClusterClusterConfigOutput) PreemptibleWorkerConfig() ClusterClusterConfigPreemptibleWorkerConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigPreemptibleWorkerConfig {
		return v.PreemptibleWorkerConfig
	}).(ClusterClusterConfigPreemptibleWorkerConfigOutput)
}

// Security related configuration. Structure defined below.
func (o ClusterClusterConfigOutput) SecurityConfig() ClusterClusterConfigSecurityConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *ClusterClusterConfigSecurityConfig { return v.SecurityConfig }).(ClusterClusterConfigSecurityConfigPtrOutput)
}

// The config settings for software inside the cluster.
// Structure defined below.
func (o ClusterClusterConfigOutput) SoftwareConfig() ClusterClusterConfigSoftwareConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigSoftwareConfig { return v.SoftwareConfig }).(ClusterClusterConfigSoftwareConfigOutput)
}

// The Cloud Storage staging bucket used to stage files,
// such as Hadoop jars, between client machines and the cluster.
// Note: If you don't explicitly specify a `stagingBucket`
// then GCP will auto create / assign one for you. However, you are not guaranteed
// an auto generated bucket which is solely dedicated to your cluster; it may be shared
// with other clusters in the same region/zone also choosing to use the auto generation
// option.
func (o ClusterClusterConfigOutput) StagingBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *string { return v.StagingBucket }).(pulumi.StringPtrOutput)
}

// The Google Compute Engine config settings for the worker instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigOutput) WorkerConfig() ClusterClusterConfigWorkerConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigWorkerConfig { return v.WorkerConfig }).(ClusterClusterConfigWorkerConfigOutput)
}

type ClusterClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfig)(nil)).Elem()
}

func (o ClusterClusterConfigPtrOutput) ToClusterClusterConfigPtrOutput() ClusterClusterConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigPtrOutput) ToClusterClusterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigPtrOutput) Elem() ClusterClusterConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfig) ClusterClusterConfig { return *v }).(ClusterClusterConfigOutput)
}

// The autoscaling policy config associated with the cluster.
// Structure defined below.
func (o ClusterClusterConfigPtrOutput) AutoscalingConfig() ClusterClusterConfigAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *ClusterClusterConfigAutoscalingConfig { return v.AutoscalingConfig }).(ClusterClusterConfigAutoscalingConfigPtrOutput)
}

func (o ClusterClusterConfigPtrOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfig) string { return v.Bucket }).(pulumi.StringOutput)
}

// The Customer managed encryption keys settings for the cluster.
// Structure defined below.
func (o ClusterClusterConfigPtrOutput) EncryptionConfig() ClusterClusterConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *ClusterClusterConfigEncryptionConfig { return v.EncryptionConfig }).(ClusterClusterConfigEncryptionConfigPtrOutput)
}

// Common config settings for resources of Google Compute Engine cluster
// instances, applicable to all instances in the cluster. Structure defined below.
func (o ClusterClusterConfigPtrOutput) GceClusterConfig() ClusterClusterConfigGceClusterConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigGceClusterConfig { return v.GceClusterConfig }).(ClusterClusterConfigGceClusterConfigOutput)
}

// Commands to execute on each node after config is completed.
// You can specify multiple versions of these. Structure defined below.
func (o ClusterClusterConfigPtrOutput) InitializationActions() ClusterClusterConfigInitializationActionArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfig) []ClusterClusterConfigInitializationAction {
		return v.InitializationActions
	}).(ClusterClusterConfigInitializationActionArrayOutput)
}

func (o ClusterClusterConfigPtrOutput) LifecycleConfig() ClusterClusterConfigLifecycleConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *ClusterClusterConfigLifecycleConfig { return v.LifecycleConfig }).(ClusterClusterConfigLifecycleConfigPtrOutput)
}

// The Google Compute Engine config settings for the master instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigPtrOutput) MasterConfig() ClusterClusterConfigMasterConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigMasterConfig { return v.MasterConfig }).(ClusterClusterConfigMasterConfigOutput)
}

// The Google Compute Engine config settings for the additional (aka
// preemptible) instances in a cluster. Structure defined below.
func (o ClusterClusterConfigPtrOutput) PreemptibleWorkerConfig() ClusterClusterConfigPreemptibleWorkerConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigPreemptibleWorkerConfig {
		return v.PreemptibleWorkerConfig
	}).(ClusterClusterConfigPreemptibleWorkerConfigOutput)
}

// Security related configuration. Structure defined below.
func (o ClusterClusterConfigPtrOutput) SecurityConfig() ClusterClusterConfigSecurityConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *ClusterClusterConfigSecurityConfig { return v.SecurityConfig }).(ClusterClusterConfigSecurityConfigPtrOutput)
}

// The config settings for software inside the cluster.
// Structure defined below.
func (o ClusterClusterConfigPtrOutput) SoftwareConfig() ClusterClusterConfigSoftwareConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigSoftwareConfig { return v.SoftwareConfig }).(ClusterClusterConfigSoftwareConfigOutput)
}

// The Cloud Storage staging bucket used to stage files,
// such as Hadoop jars, between client machines and the cluster.
// Note: If you don't explicitly specify a `stagingBucket`
// then GCP will auto create / assign one for you. However, you are not guaranteed
// an auto generated bucket which is solely dedicated to your cluster; it may be shared
// with other clusters in the same region/zone also choosing to use the auto generation
// option.
func (o ClusterClusterConfigPtrOutput) StagingBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfig) *string { return v.StagingBucket }).(pulumi.StringPtrOutput)
}

// The Google Compute Engine config settings for the worker instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigPtrOutput) WorkerConfig() ClusterClusterConfigWorkerConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfig) ClusterClusterConfigWorkerConfig { return v.WorkerConfig }).(ClusterClusterConfigWorkerConfigOutput)
}

type ClusterClusterConfigArgs struct {
	// The autoscaling policy config associated with the cluster.
	// Structure defined below.
	AutoscalingConfig *ClusterClusterConfigAutoscalingConfigArgs `pulumi:"autoscalingConfig"`
	Bucket            *string                                    `pulumi:"bucket"`
	// The Customer managed encryption keys settings for the cluster.
	// Structure defined below.
	EncryptionConfig *ClusterClusterConfigEncryptionConfigArgs `pulumi:"encryptionConfig"`
	// Common config settings for resources of Google Compute Engine cluster
	// instances, applicable to all instances in the cluster. Structure defined below.
	GceClusterConfig *ClusterClusterConfigGceClusterConfigArgs `pulumi:"gceClusterConfig"`
	// Commands to execute on each node after config is completed.
	// You can specify multiple versions of these. Structure defined below.
	InitializationActions []ClusterClusterConfigInitializationActionArgs `pulumi:"initializationActions"`
	LifecycleConfig       *ClusterClusterConfigLifecycleConfigArgs       `pulumi:"lifecycleConfig"`
	// The Google Compute Engine config settings for the master instances
	// in a cluster.. Structure defined below.
	MasterConfig *ClusterClusterConfigMasterConfigArgs `pulumi:"masterConfig"`
	// The Google Compute Engine config settings for the additional (aka
	// preemptible) instances in a cluster. Structure defined below.
	PreemptibleWorkerConfig *ClusterClusterConfigPreemptibleWorkerConfigArgs `pulumi:"preemptibleWorkerConfig"`
	// Security related configuration. Structure defined below.
	SecurityConfig *ClusterClusterConfigSecurityConfigArgs `pulumi:"securityConfig"`
	// The config settings for software inside the cluster.
	// Structure defined below.
	SoftwareConfig *ClusterClusterConfigSoftwareConfigArgs `pulumi:"softwareConfig"`
	// The Cloud Storage staging bucket used to stage files,
	// such as Hadoop jars, between client machines and the cluster.
	// Note: If you don't explicitly specify a `stagingBucket`
	// then GCP will auto create / assign one for you. However, you are not guaranteed
	// an auto generated bucket which is solely dedicated to your cluster; it may be shared
	// with other clusters in the same region/zone also choosing to use the auto generation
	// option.
	StagingBucket *string `pulumi:"stagingBucket"`
	// The Google Compute Engine config settings for the worker instances
	// in a cluster.. Structure defined below.
	WorkerConfig *ClusterClusterConfigWorkerConfigArgs `pulumi:"workerConfig"`
}

type ClusterClusterConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigArgsOutput() ClusterClusterConfigArgsOutput
	ToClusterClusterConfigArgsOutputWithContext(context.Context) ClusterClusterConfigArgsOutput
}

type ClusterClusterConfigArgsArgs struct {
	// The autoscaling policy config associated with the cluster.
	// Structure defined below.
	AutoscalingConfig ClusterClusterConfigAutoscalingConfigArgsPtrInput `pulumi:"autoscalingConfig"`
	Bucket            pulumi.StringPtrInput                             `pulumi:"bucket"`
	// The Customer managed encryption keys settings for the cluster.
	// Structure defined below.
	EncryptionConfig ClusterClusterConfigEncryptionConfigArgsPtrInput `pulumi:"encryptionConfig"`
	// Common config settings for resources of Google Compute Engine cluster
	// instances, applicable to all instances in the cluster. Structure defined below.
	GceClusterConfig ClusterClusterConfigGceClusterConfigArgsPtrInput `pulumi:"gceClusterConfig"`
	// Commands to execute on each node after config is completed.
	// You can specify multiple versions of these. Structure defined below.
	InitializationActions ClusterClusterConfigInitializationActionArgsArrayInput `pulumi:"initializationActions"`
	LifecycleConfig       ClusterClusterConfigLifecycleConfigArgsPtrInput        `pulumi:"lifecycleConfig"`
	// The Google Compute Engine config settings for the master instances
	// in a cluster.. Structure defined below.
	MasterConfig ClusterClusterConfigMasterConfigArgsPtrInput `pulumi:"masterConfig"`
	// The Google Compute Engine config settings for the additional (aka
	// preemptible) instances in a cluster. Structure defined below.
	PreemptibleWorkerConfig ClusterClusterConfigPreemptibleWorkerConfigArgsPtrInput `pulumi:"preemptibleWorkerConfig"`
	// Security related configuration. Structure defined below.
	SecurityConfig ClusterClusterConfigSecurityConfigArgsPtrInput `pulumi:"securityConfig"`
	// The config settings for software inside the cluster.
	// Structure defined below.
	SoftwareConfig ClusterClusterConfigSoftwareConfigArgsPtrInput `pulumi:"softwareConfig"`
	// The Cloud Storage staging bucket used to stage files,
	// such as Hadoop jars, between client machines and the cluster.
	// Note: If you don't explicitly specify a `stagingBucket`
	// then GCP will auto create / assign one for you. However, you are not guaranteed
	// an auto generated bucket which is solely dedicated to your cluster; it may be shared
	// with other clusters in the same region/zone also choosing to use the auto generation
	// option.
	StagingBucket pulumi.StringPtrInput `pulumi:"stagingBucket"`
	// The Google Compute Engine config settings for the worker instances
	// in a cluster.. Structure defined below.
	WorkerConfig ClusterClusterConfigWorkerConfigArgsPtrInput `pulumi:"workerConfig"`
}

func (ClusterClusterConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigArgsArgs) ToClusterClusterConfigArgsOutput() ClusterClusterConfigArgsOutput {
	return i.ToClusterClusterConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigArgsArgs) ToClusterClusterConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigArgsOutput)
}

func (i ClusterClusterConfigArgsArgs) ToClusterClusterConfigArgsPtrOutput() ClusterClusterConfigArgsPtrOutput {
	return i.ToClusterClusterConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigArgsArgs) ToClusterClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigArgsOutput).ToClusterClusterConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigArgsPtrOutput() ClusterClusterConfigArgsPtrOutput
	ToClusterClusterConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigArgsPtrOutput
}

type clusterClusterConfigArgsPtrType ClusterClusterConfigArgsArgs

func ClusterClusterConfigArgsPtr(v *ClusterClusterConfigArgsArgs) ClusterClusterConfigArgsPtrInput {
	return (*clusterClusterConfigArgsPtrType)(v)
}

func (*clusterClusterConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigArgsPtrType) ToClusterClusterConfigArgsPtrOutput() ClusterClusterConfigArgsPtrOutput {
	return i.ToClusterClusterConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigArgsPtrType) ToClusterClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigArgsPtrOutput)
}

type ClusterClusterConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigArgsOutput) ToClusterClusterConfigArgsOutput() ClusterClusterConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigArgsOutput) ToClusterClusterConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigArgsOutput) ToClusterClusterConfigArgsPtrOutput() ClusterClusterConfigArgsPtrOutput {
	return o.ToClusterClusterConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigArgsOutput) ToClusterClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigArgs {
		return &v
	}).(ClusterClusterConfigArgsPtrOutput)
}

// The autoscaling policy config associated with the cluster.
// Structure defined below.
func (o ClusterClusterConfigArgsOutput) AutoscalingConfig() ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigAutoscalingConfigArgs {
		return v.AutoscalingConfig
	}).(ClusterClusterConfigAutoscalingConfigArgsPtrOutput)
}

func (o ClusterClusterConfigArgsOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The Customer managed encryption keys settings for the cluster.
// Structure defined below.
func (o ClusterClusterConfigArgsOutput) EncryptionConfig() ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigEncryptionConfigArgs { return v.EncryptionConfig }).(ClusterClusterConfigEncryptionConfigArgsPtrOutput)
}

// Common config settings for resources of Google Compute Engine cluster
// instances, applicable to all instances in the cluster. Structure defined below.
func (o ClusterClusterConfigArgsOutput) GceClusterConfig() ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigGceClusterConfigArgs { return v.GceClusterConfig }).(ClusterClusterConfigGceClusterConfigArgsPtrOutput)
}

// Commands to execute on each node after config is completed.
// You can specify multiple versions of these. Structure defined below.
func (o ClusterClusterConfigArgsOutput) InitializationActions() ClusterClusterConfigInitializationActionArgsArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) []ClusterClusterConfigInitializationActionArgs {
		return v.InitializationActions
	}).(ClusterClusterConfigInitializationActionArgsArrayOutput)
}

func (o ClusterClusterConfigArgsOutput) LifecycleConfig() ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigLifecycleConfigArgs { return v.LifecycleConfig }).(ClusterClusterConfigLifecycleConfigArgsPtrOutput)
}

// The Google Compute Engine config settings for the master instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigArgsOutput) MasterConfig() ClusterClusterConfigMasterConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigMasterConfigArgs { return v.MasterConfig }).(ClusterClusterConfigMasterConfigArgsPtrOutput)
}

// The Google Compute Engine config settings for the additional (aka
// preemptible) instances in a cluster. Structure defined below.
func (o ClusterClusterConfigArgsOutput) PreemptibleWorkerConfig() ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigPreemptibleWorkerConfigArgs {
		return v.PreemptibleWorkerConfig
	}).(ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput)
}

// Security related configuration. Structure defined below.
func (o ClusterClusterConfigArgsOutput) SecurityConfig() ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigSecurityConfigArgs { return v.SecurityConfig }).(ClusterClusterConfigSecurityConfigArgsPtrOutput)
}

// The config settings for software inside the cluster.
// Structure defined below.
func (o ClusterClusterConfigArgsOutput) SoftwareConfig() ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigSoftwareConfigArgs { return v.SoftwareConfig }).(ClusterClusterConfigSoftwareConfigArgsPtrOutput)
}

// The Cloud Storage staging bucket used to stage files,
// such as Hadoop jars, between client machines and the cluster.
// Note: If you don't explicitly specify a `stagingBucket`
// then GCP will auto create / assign one for you. However, you are not guaranteed
// an auto generated bucket which is solely dedicated to your cluster; it may be shared
// with other clusters in the same region/zone also choosing to use the auto generation
// option.
func (o ClusterClusterConfigArgsOutput) StagingBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *string { return v.StagingBucket }).(pulumi.StringPtrOutput)
}

// The Google Compute Engine config settings for the worker instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigArgsOutput) WorkerConfig() ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigWorkerConfigArgs { return v.WorkerConfig }).(ClusterClusterConfigWorkerConfigArgsPtrOutput)
}

type ClusterClusterConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigArgsPtrOutput) ToClusterClusterConfigArgsPtrOutput() ClusterClusterConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigArgsPtrOutput) ToClusterClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigArgsPtrOutput) Elem() ClusterClusterConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigArgs) ClusterClusterConfigArgs { return *v }).(ClusterClusterConfigArgsOutput)
}

// The autoscaling policy config associated with the cluster.
// Structure defined below.
func (o ClusterClusterConfigArgsPtrOutput) AutoscalingConfig() ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigAutoscalingConfigArgs {
		return v.AutoscalingConfig
	}).(ClusterClusterConfigAutoscalingConfigArgsPtrOutput)
}

func (o ClusterClusterConfigArgsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The Customer managed encryption keys settings for the cluster.
// Structure defined below.
func (o ClusterClusterConfigArgsPtrOutput) EncryptionConfig() ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigEncryptionConfigArgs { return v.EncryptionConfig }).(ClusterClusterConfigEncryptionConfigArgsPtrOutput)
}

// Common config settings for resources of Google Compute Engine cluster
// instances, applicable to all instances in the cluster. Structure defined below.
func (o ClusterClusterConfigArgsPtrOutput) GceClusterConfig() ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigGceClusterConfigArgs { return v.GceClusterConfig }).(ClusterClusterConfigGceClusterConfigArgsPtrOutput)
}

// Commands to execute on each node after config is completed.
// You can specify multiple versions of these. Structure defined below.
func (o ClusterClusterConfigArgsPtrOutput) InitializationActions() ClusterClusterConfigInitializationActionArgsArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) []ClusterClusterConfigInitializationActionArgs {
		return v.InitializationActions
	}).(ClusterClusterConfigInitializationActionArgsArrayOutput)
}

func (o ClusterClusterConfigArgsPtrOutput) LifecycleConfig() ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigLifecycleConfigArgs { return v.LifecycleConfig }).(ClusterClusterConfigLifecycleConfigArgsPtrOutput)
}

// The Google Compute Engine config settings for the master instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigArgsPtrOutput) MasterConfig() ClusterClusterConfigMasterConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigMasterConfigArgs { return v.MasterConfig }).(ClusterClusterConfigMasterConfigArgsPtrOutput)
}

// The Google Compute Engine config settings for the additional (aka
// preemptible) instances in a cluster. Structure defined below.
func (o ClusterClusterConfigArgsPtrOutput) PreemptibleWorkerConfig() ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigPreemptibleWorkerConfigArgs {
		return v.PreemptibleWorkerConfig
	}).(ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput)
}

// Security related configuration. Structure defined below.
func (o ClusterClusterConfigArgsPtrOutput) SecurityConfig() ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigSecurityConfigArgs { return v.SecurityConfig }).(ClusterClusterConfigSecurityConfigArgsPtrOutput)
}

// The config settings for software inside the cluster.
// Structure defined below.
func (o ClusterClusterConfigArgsPtrOutput) SoftwareConfig() ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigSoftwareConfigArgs { return v.SoftwareConfig }).(ClusterClusterConfigSoftwareConfigArgsPtrOutput)
}

// The Cloud Storage staging bucket used to stage files,
// such as Hadoop jars, between client machines and the cluster.
// Note: If you don't explicitly specify a `stagingBucket`
// then GCP will auto create / assign one for you. However, you are not guaranteed
// an auto generated bucket which is solely dedicated to your cluster; it may be shared
// with other clusters in the same region/zone also choosing to use the auto generation
// option.
func (o ClusterClusterConfigArgsPtrOutput) StagingBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *string { return v.StagingBucket }).(pulumi.StringPtrOutput)
}

// The Google Compute Engine config settings for the worker instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigArgsPtrOutput) WorkerConfig() ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigArgs) *ClusterClusterConfigWorkerConfigArgs { return v.WorkerConfig }).(ClusterClusterConfigWorkerConfigArgsPtrOutput)
}

type ClusterClusterConfigAutoscalingConfig struct {
	// The autoscaling policy used by the cluster.
	PolicyUri string `pulumi:"policyUri"`
}

type ClusterClusterConfigAutoscalingConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigAutoscalingConfigOutput() ClusterClusterConfigAutoscalingConfigOutput
	ToClusterClusterConfigAutoscalingConfigOutputWithContext(context.Context) ClusterClusterConfigAutoscalingConfigOutput
}

type ClusterClusterConfigAutoscalingConfigArgs struct {
	// The autoscaling policy used by the cluster.
	PolicyUri pulumi.StringInput `pulumi:"policyUri"`
}

func (ClusterClusterConfigAutoscalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigAutoscalingConfig)(nil)).Elem()
}

func (i ClusterClusterConfigAutoscalingConfigArgs) ToClusterClusterConfigAutoscalingConfigOutput() ClusterClusterConfigAutoscalingConfigOutput {
	return i.ToClusterClusterConfigAutoscalingConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigAutoscalingConfigArgs) ToClusterClusterConfigAutoscalingConfigOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigAutoscalingConfigOutput)
}

func (i ClusterClusterConfigAutoscalingConfigArgs) ToClusterClusterConfigAutoscalingConfigPtrOutput() ClusterClusterConfigAutoscalingConfigPtrOutput {
	return i.ToClusterClusterConfigAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigAutoscalingConfigArgs) ToClusterClusterConfigAutoscalingConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigAutoscalingConfigOutput).ToClusterClusterConfigAutoscalingConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigAutoscalingConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigAutoscalingConfigPtrOutput() ClusterClusterConfigAutoscalingConfigPtrOutput
	ToClusterClusterConfigAutoscalingConfigPtrOutputWithContext(context.Context) ClusterClusterConfigAutoscalingConfigPtrOutput
}

type clusterClusterConfigAutoscalingConfigPtrType ClusterClusterConfigAutoscalingConfigArgs

func ClusterClusterConfigAutoscalingConfigPtr(v *ClusterClusterConfigAutoscalingConfigArgs) ClusterClusterConfigAutoscalingConfigPtrInput {
	return (*clusterClusterConfigAutoscalingConfigPtrType)(v)
}

func (*clusterClusterConfigAutoscalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigAutoscalingConfig)(nil)).Elem()
}

func (i *clusterClusterConfigAutoscalingConfigPtrType) ToClusterClusterConfigAutoscalingConfigPtrOutput() ClusterClusterConfigAutoscalingConfigPtrOutput {
	return i.ToClusterClusterConfigAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigAutoscalingConfigPtrType) ToClusterClusterConfigAutoscalingConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigAutoscalingConfigPtrOutput)
}

type ClusterClusterConfigAutoscalingConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigAutoscalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigAutoscalingConfig)(nil)).Elem()
}

func (o ClusterClusterConfigAutoscalingConfigOutput) ToClusterClusterConfigAutoscalingConfigOutput() ClusterClusterConfigAutoscalingConfigOutput {
	return o
}

func (o ClusterClusterConfigAutoscalingConfigOutput) ToClusterClusterConfigAutoscalingConfigOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigOutput {
	return o
}

func (o ClusterClusterConfigAutoscalingConfigOutput) ToClusterClusterConfigAutoscalingConfigPtrOutput() ClusterClusterConfigAutoscalingConfigPtrOutput {
	return o.ToClusterClusterConfigAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigAutoscalingConfigOutput) ToClusterClusterConfigAutoscalingConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigAutoscalingConfig) *ClusterClusterConfigAutoscalingConfig {
		return &v
	}).(ClusterClusterConfigAutoscalingConfigPtrOutput)
}

// The autoscaling policy used by the cluster.
func (o ClusterClusterConfigAutoscalingConfigOutput) PolicyUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigAutoscalingConfig) string { return v.PolicyUri }).(pulumi.StringOutput)
}

type ClusterClusterConfigAutoscalingConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigAutoscalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigAutoscalingConfig)(nil)).Elem()
}

func (o ClusterClusterConfigAutoscalingConfigPtrOutput) ToClusterClusterConfigAutoscalingConfigPtrOutput() ClusterClusterConfigAutoscalingConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigAutoscalingConfigPtrOutput) ToClusterClusterConfigAutoscalingConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigAutoscalingConfigPtrOutput) Elem() ClusterClusterConfigAutoscalingConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigAutoscalingConfig) ClusterClusterConfigAutoscalingConfig { return *v }).(ClusterClusterConfigAutoscalingConfigOutput)
}

// The autoscaling policy used by the cluster.
func (o ClusterClusterConfigAutoscalingConfigPtrOutput) PolicyUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigAutoscalingConfig) string { return v.PolicyUri }).(pulumi.StringOutput)
}

type ClusterClusterConfigAutoscalingConfigArgs struct {
	// The autoscaling policy used by the cluster.
	PolicyUri string `pulumi:"policyUri"`
}

type ClusterClusterConfigAutoscalingConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigAutoscalingConfigArgsOutput() ClusterClusterConfigAutoscalingConfigArgsOutput
	ToClusterClusterConfigAutoscalingConfigArgsOutputWithContext(context.Context) ClusterClusterConfigAutoscalingConfigArgsOutput
}

type ClusterClusterConfigAutoscalingConfigArgsArgs struct {
	// The autoscaling policy used by the cluster.
	PolicyUri pulumi.StringInput `pulumi:"policyUri"`
}

func (ClusterClusterConfigAutoscalingConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigAutoscalingConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigAutoscalingConfigArgsArgs) ToClusterClusterConfigAutoscalingConfigArgsOutput() ClusterClusterConfigAutoscalingConfigArgsOutput {
	return i.ToClusterClusterConfigAutoscalingConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigAutoscalingConfigArgsArgs) ToClusterClusterConfigAutoscalingConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigAutoscalingConfigArgsOutput)
}

func (i ClusterClusterConfigAutoscalingConfigArgsArgs) ToClusterClusterConfigAutoscalingConfigArgsPtrOutput() ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return i.ToClusterClusterConfigAutoscalingConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigAutoscalingConfigArgsArgs) ToClusterClusterConfigAutoscalingConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigAutoscalingConfigArgsOutput).ToClusterClusterConfigAutoscalingConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigAutoscalingConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigAutoscalingConfigArgsPtrOutput() ClusterClusterConfigAutoscalingConfigArgsPtrOutput
	ToClusterClusterConfigAutoscalingConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigAutoscalingConfigArgsPtrOutput
}

type clusterClusterConfigAutoscalingConfigArgsPtrType ClusterClusterConfigAutoscalingConfigArgsArgs

func ClusterClusterConfigAutoscalingConfigArgsPtr(v *ClusterClusterConfigAutoscalingConfigArgsArgs) ClusterClusterConfigAutoscalingConfigArgsPtrInput {
	return (*clusterClusterConfigAutoscalingConfigArgsPtrType)(v)
}

func (*clusterClusterConfigAutoscalingConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigAutoscalingConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigAutoscalingConfigArgsPtrType) ToClusterClusterConfigAutoscalingConfigArgsPtrOutput() ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return i.ToClusterClusterConfigAutoscalingConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigAutoscalingConfigArgsPtrType) ToClusterClusterConfigAutoscalingConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigAutoscalingConfigArgsPtrOutput)
}

type ClusterClusterConfigAutoscalingConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigAutoscalingConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigAutoscalingConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigAutoscalingConfigArgsOutput) ToClusterClusterConfigAutoscalingConfigArgsOutput() ClusterClusterConfigAutoscalingConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigAutoscalingConfigArgsOutput) ToClusterClusterConfigAutoscalingConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigAutoscalingConfigArgsOutput) ToClusterClusterConfigAutoscalingConfigArgsPtrOutput() ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return o.ToClusterClusterConfigAutoscalingConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigAutoscalingConfigArgsOutput) ToClusterClusterConfigAutoscalingConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigAutoscalingConfigArgs) *ClusterClusterConfigAutoscalingConfigArgs {
		return &v
	}).(ClusterClusterConfigAutoscalingConfigArgsPtrOutput)
}

// The autoscaling policy used by the cluster.
func (o ClusterClusterConfigAutoscalingConfigArgsOutput) PolicyUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigAutoscalingConfigArgs) string { return v.PolicyUri }).(pulumi.StringOutput)
}

type ClusterClusterConfigAutoscalingConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigAutoscalingConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigAutoscalingConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigAutoscalingConfigArgsPtrOutput) ToClusterClusterConfigAutoscalingConfigArgsPtrOutput() ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigAutoscalingConfigArgsPtrOutput) ToClusterClusterConfigAutoscalingConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigAutoscalingConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigAutoscalingConfigArgsPtrOutput) Elem() ClusterClusterConfigAutoscalingConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigAutoscalingConfigArgs) ClusterClusterConfigAutoscalingConfigArgs {
		return *v
	}).(ClusterClusterConfigAutoscalingConfigArgsOutput)
}

// The autoscaling policy used by the cluster.
func (o ClusterClusterConfigAutoscalingConfigArgsPtrOutput) PolicyUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigAutoscalingConfigArgs) string { return v.PolicyUri }).(pulumi.StringOutput)
}

type ClusterClusterConfigEncryptionConfig struct {
	// The Cloud KMS key name to use for PD disk encryption for
	// all instances in the cluster.
	KmsKeyName string `pulumi:"kmsKeyName"`
}

type ClusterClusterConfigEncryptionConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigEncryptionConfigOutput() ClusterClusterConfigEncryptionConfigOutput
	ToClusterClusterConfigEncryptionConfigOutputWithContext(context.Context) ClusterClusterConfigEncryptionConfigOutput
}

type ClusterClusterConfigEncryptionConfigArgs struct {
	// The Cloud KMS key name to use for PD disk encryption for
	// all instances in the cluster.
	KmsKeyName pulumi.StringInput `pulumi:"kmsKeyName"`
}

func (ClusterClusterConfigEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigEncryptionConfig)(nil)).Elem()
}

func (i ClusterClusterConfigEncryptionConfigArgs) ToClusterClusterConfigEncryptionConfigOutput() ClusterClusterConfigEncryptionConfigOutput {
	return i.ToClusterClusterConfigEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigEncryptionConfigArgs) ToClusterClusterConfigEncryptionConfigOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigEncryptionConfigOutput)
}

func (i ClusterClusterConfigEncryptionConfigArgs) ToClusterClusterConfigEncryptionConfigPtrOutput() ClusterClusterConfigEncryptionConfigPtrOutput {
	return i.ToClusterClusterConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigEncryptionConfigArgs) ToClusterClusterConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigEncryptionConfigOutput).ToClusterClusterConfigEncryptionConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigEncryptionConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigEncryptionConfigPtrOutput() ClusterClusterConfigEncryptionConfigPtrOutput
	ToClusterClusterConfigEncryptionConfigPtrOutputWithContext(context.Context) ClusterClusterConfigEncryptionConfigPtrOutput
}

type clusterClusterConfigEncryptionConfigPtrType ClusterClusterConfigEncryptionConfigArgs

func ClusterClusterConfigEncryptionConfigPtr(v *ClusterClusterConfigEncryptionConfigArgs) ClusterClusterConfigEncryptionConfigPtrInput {
	return (*clusterClusterConfigEncryptionConfigPtrType)(v)
}

func (*clusterClusterConfigEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigEncryptionConfig)(nil)).Elem()
}

func (i *clusterClusterConfigEncryptionConfigPtrType) ToClusterClusterConfigEncryptionConfigPtrOutput() ClusterClusterConfigEncryptionConfigPtrOutput {
	return i.ToClusterClusterConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigEncryptionConfigPtrType) ToClusterClusterConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigEncryptionConfigPtrOutput)
}

type ClusterClusterConfigEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigEncryptionConfig)(nil)).Elem()
}

func (o ClusterClusterConfigEncryptionConfigOutput) ToClusterClusterConfigEncryptionConfigOutput() ClusterClusterConfigEncryptionConfigOutput {
	return o
}

func (o ClusterClusterConfigEncryptionConfigOutput) ToClusterClusterConfigEncryptionConfigOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigOutput {
	return o
}

func (o ClusterClusterConfigEncryptionConfigOutput) ToClusterClusterConfigEncryptionConfigPtrOutput() ClusterClusterConfigEncryptionConfigPtrOutput {
	return o.ToClusterClusterConfigEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigEncryptionConfigOutput) ToClusterClusterConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigEncryptionConfig) *ClusterClusterConfigEncryptionConfig {
		return &v
	}).(ClusterClusterConfigEncryptionConfigPtrOutput)
}

// The Cloud KMS key name to use for PD disk encryption for
// all instances in the cluster.
func (o ClusterClusterConfigEncryptionConfigOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigEncryptionConfig) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type ClusterClusterConfigEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigEncryptionConfig)(nil)).Elem()
}

func (o ClusterClusterConfigEncryptionConfigPtrOutput) ToClusterClusterConfigEncryptionConfigPtrOutput() ClusterClusterConfigEncryptionConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigEncryptionConfigPtrOutput) ToClusterClusterConfigEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigEncryptionConfigPtrOutput) Elem() ClusterClusterConfigEncryptionConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigEncryptionConfig) ClusterClusterConfigEncryptionConfig { return *v }).(ClusterClusterConfigEncryptionConfigOutput)
}

// The Cloud KMS key name to use for PD disk encryption for
// all instances in the cluster.
func (o ClusterClusterConfigEncryptionConfigPtrOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigEncryptionConfig) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type ClusterClusterConfigEncryptionConfigArgs struct {
	// The Cloud KMS key name to use for PD disk encryption for
	// all instances in the cluster.
	KmsKeyName string `pulumi:"kmsKeyName"`
}

type ClusterClusterConfigEncryptionConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigEncryptionConfigArgsOutput() ClusterClusterConfigEncryptionConfigArgsOutput
	ToClusterClusterConfigEncryptionConfigArgsOutputWithContext(context.Context) ClusterClusterConfigEncryptionConfigArgsOutput
}

type ClusterClusterConfigEncryptionConfigArgsArgs struct {
	// The Cloud KMS key name to use for PD disk encryption for
	// all instances in the cluster.
	KmsKeyName pulumi.StringInput `pulumi:"kmsKeyName"`
}

func (ClusterClusterConfigEncryptionConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigEncryptionConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigEncryptionConfigArgsArgs) ToClusterClusterConfigEncryptionConfigArgsOutput() ClusterClusterConfigEncryptionConfigArgsOutput {
	return i.ToClusterClusterConfigEncryptionConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigEncryptionConfigArgsArgs) ToClusterClusterConfigEncryptionConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigEncryptionConfigArgsOutput)
}

func (i ClusterClusterConfigEncryptionConfigArgsArgs) ToClusterClusterConfigEncryptionConfigArgsPtrOutput() ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return i.ToClusterClusterConfigEncryptionConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigEncryptionConfigArgsArgs) ToClusterClusterConfigEncryptionConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigEncryptionConfigArgsOutput).ToClusterClusterConfigEncryptionConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigEncryptionConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigEncryptionConfigArgsPtrOutput() ClusterClusterConfigEncryptionConfigArgsPtrOutput
	ToClusterClusterConfigEncryptionConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigEncryptionConfigArgsPtrOutput
}

type clusterClusterConfigEncryptionConfigArgsPtrType ClusterClusterConfigEncryptionConfigArgsArgs

func ClusterClusterConfigEncryptionConfigArgsPtr(v *ClusterClusterConfigEncryptionConfigArgsArgs) ClusterClusterConfigEncryptionConfigArgsPtrInput {
	return (*clusterClusterConfigEncryptionConfigArgsPtrType)(v)
}

func (*clusterClusterConfigEncryptionConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigEncryptionConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigEncryptionConfigArgsPtrType) ToClusterClusterConfigEncryptionConfigArgsPtrOutput() ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return i.ToClusterClusterConfigEncryptionConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigEncryptionConfigArgsPtrType) ToClusterClusterConfigEncryptionConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigEncryptionConfigArgsPtrOutput)
}

type ClusterClusterConfigEncryptionConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigEncryptionConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigEncryptionConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigEncryptionConfigArgsOutput) ToClusterClusterConfigEncryptionConfigArgsOutput() ClusterClusterConfigEncryptionConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigEncryptionConfigArgsOutput) ToClusterClusterConfigEncryptionConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigEncryptionConfigArgsOutput) ToClusterClusterConfigEncryptionConfigArgsPtrOutput() ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return o.ToClusterClusterConfigEncryptionConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigEncryptionConfigArgsOutput) ToClusterClusterConfigEncryptionConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigEncryptionConfigArgs) *ClusterClusterConfigEncryptionConfigArgs {
		return &v
	}).(ClusterClusterConfigEncryptionConfigArgsPtrOutput)
}

// The Cloud KMS key name to use for PD disk encryption for
// all instances in the cluster.
func (o ClusterClusterConfigEncryptionConfigArgsOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigEncryptionConfigArgs) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type ClusterClusterConfigEncryptionConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigEncryptionConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigEncryptionConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigEncryptionConfigArgsPtrOutput) ToClusterClusterConfigEncryptionConfigArgsPtrOutput() ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigEncryptionConfigArgsPtrOutput) ToClusterClusterConfigEncryptionConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigEncryptionConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigEncryptionConfigArgsPtrOutput) Elem() ClusterClusterConfigEncryptionConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigEncryptionConfigArgs) ClusterClusterConfigEncryptionConfigArgs { return *v }).(ClusterClusterConfigEncryptionConfigArgsOutput)
}

// The Cloud KMS key name to use for PD disk encryption for
// all instances in the cluster.
func (o ClusterClusterConfigEncryptionConfigArgsPtrOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigEncryptionConfigArgs) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type ClusterClusterConfigGceClusterConfig struct {
	// By default, clusters are not restricted to internal IP addresses,
	// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
	// instances in the cluster will only have internal IP addresses. Note: Private Google Access
	// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
	// will be launched in.
	InternalIpOnly *bool `pulumi:"internalIpOnly"`
	// A map of the Compute Engine metadata entries to add to all instances
	// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata map[string]string `pulumi:"metadata"`
	// The name or selfLink of the Google Compute Engine
	// network to the cluster will be part of. Conflicts with `subnetwork`.
	// If neither is specified, this defaults to the "default" network.
	Network string `pulumi:"network"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The set of Google API scopes
	// to be made available on all of the node VMs under the `serviceAccount`
	// specified. These can be	either FQDNs, or scope aliases. The following scopes
	// must be set if any other scopes are set. They're necessary to ensure the
	// correct functioning ofthe cluster, and are set automatically by the API:
	ServiceAccountScopes []string `pulumi:"serviceAccountScopes"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork the cluster will be part of. Conflicts with `network`.
	Subnetwork *string `pulumi:"subnetwork"`
	// The list of instance tags applied to instances in the cluster.
	// Tags are used to identify valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// The GCP zone where your data is stored and used (i.e. where
	// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
	// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
	// to determine this automatically for you.
	// Note: This setting additionally determines and restricts
	// which computing resources are available for use with other configs such as
	// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
	Zone string `pulumi:"zone"`
}

type ClusterClusterConfigGceClusterConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigGceClusterConfigOutput() ClusterClusterConfigGceClusterConfigOutput
	ToClusterClusterConfigGceClusterConfigOutputWithContext(context.Context) ClusterClusterConfigGceClusterConfigOutput
}

type ClusterClusterConfigGceClusterConfigArgs struct {
	// By default, clusters are not restricted to internal IP addresses,
	// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
	// instances in the cluster will only have internal IP addresses. Note: Private Google Access
	// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
	// will be launched in.
	InternalIpOnly pulumi.BoolPtrInput `pulumi:"internalIpOnly"`
	// A map of the Compute Engine metadata entries to add to all instances
	// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The name or selfLink of the Google Compute Engine
	// network to the cluster will be part of. Conflicts with `subnetwork`.
	// If neither is specified, this defaults to the "default" network.
	Network pulumi.StringInput `pulumi:"network"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The set of Google API scopes
	// to be made available on all of the node VMs under the `serviceAccount`
	// specified. These can be	either FQDNs, or scope aliases. The following scopes
	// must be set if any other scopes are set. They're necessary to ensure the
	// correct functioning ofthe cluster, and are set automatically by the API:
	ServiceAccountScopes pulumi.StringArrayInput `pulumi:"serviceAccountScopes"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork the cluster will be part of. Conflicts with `network`.
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
	// The list of instance tags applied to instances in the cluster.
	// Tags are used to identify valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The GCP zone where your data is stored and used (i.e. where
	// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
	// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
	// to determine this automatically for you.
	// Note: This setting additionally determines and restricts
	// which computing resources are available for use with other configs such as
	// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (ClusterClusterConfigGceClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigGceClusterConfig)(nil)).Elem()
}

func (i ClusterClusterConfigGceClusterConfigArgs) ToClusterClusterConfigGceClusterConfigOutput() ClusterClusterConfigGceClusterConfigOutput {
	return i.ToClusterClusterConfigGceClusterConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigGceClusterConfigArgs) ToClusterClusterConfigGceClusterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigGceClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigGceClusterConfigOutput)
}

type ClusterClusterConfigGceClusterConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigGceClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigGceClusterConfig)(nil)).Elem()
}

func (o ClusterClusterConfigGceClusterConfigOutput) ToClusterClusterConfigGceClusterConfigOutput() ClusterClusterConfigGceClusterConfigOutput {
	return o
}

func (o ClusterClusterConfigGceClusterConfigOutput) ToClusterClusterConfigGceClusterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigGceClusterConfigOutput {
	return o
}

// By default, clusters are not restricted to internal IP addresses,
// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
// instances in the cluster will only have internal IP addresses. Note: Private Google Access
// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
// will be launched in.
func (o ClusterClusterConfigGceClusterConfigOutput) InternalIpOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfig) *bool { return v.InternalIpOnly }).(pulumi.BoolPtrOutput)
}

// A map of the Compute Engine metadata entries to add to all instances
// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
func (o ClusterClusterConfigGceClusterConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name or selfLink of the Google Compute Engine
// network to the cluster will be part of. Conflicts with `subnetwork`.
// If neither is specified, this defaults to the "default" network.
func (o ClusterClusterConfigGceClusterConfigOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfig) string { return v.Network }).(pulumi.StringOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
func (o ClusterClusterConfigGceClusterConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes
// to be made available on all of the node VMs under the `serviceAccount`
// specified. These can be	either FQDNs, or scope aliases. The following scopes
// must be set if any other scopes are set. They're necessary to ensure the
// correct functioning ofthe cluster, and are set automatically by the API:
func (o ClusterClusterConfigGceClusterConfigOutput) ServiceAccountScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfig) []string { return v.ServiceAccountScopes }).(pulumi.StringArrayOutput)
}

// The name or selfLink of the Google Compute Engine
// subnetwork the cluster will be part of. Conflicts with `network`.
func (o ClusterClusterConfigGceClusterConfigOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfig) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

// The list of instance tags applied to instances in the cluster.
// Tags are used to identify valid sources or targets for network firewalls.
func (o ClusterClusterConfigGceClusterConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The GCP zone where your data is stored and used (i.e. where
// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
// to determine this automatically for you.
// Note: This setting additionally determines and restricts
// which computing resources are available for use with other configs such as
// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
func (o ClusterClusterConfigGceClusterConfigOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfig) string { return v.Zone }).(pulumi.StringOutput)
}

type ClusterClusterConfigGceClusterConfigArgs struct {
	// By default, clusters are not restricted to internal IP addresses,
	// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
	// instances in the cluster will only have internal IP addresses. Note: Private Google Access
	// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
	// will be launched in.
	InternalIpOnly *bool `pulumi:"internalIpOnly"`
	// A map of the Compute Engine metadata entries to add to all instances
	// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata map[string]string `pulumi:"metadata"`
	// The name or selfLink of the Google Compute Engine
	// network to the cluster will be part of. Conflicts with `subnetwork`.
	// If neither is specified, this defaults to the "default" network.
	Network *string `pulumi:"network"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The set of Google API scopes
	// to be made available on all of the node VMs under the `serviceAccount`
	// specified. These can be	either FQDNs, or scope aliases. The following scopes
	// must be set if any other scopes are set. They're necessary to ensure the
	// correct functioning ofthe cluster, and are set automatically by the API:
	ServiceAccountScopes []string `pulumi:"serviceAccountScopes"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork the cluster will be part of. Conflicts with `network`.
	Subnetwork *string `pulumi:"subnetwork"`
	// The list of instance tags applied to instances in the cluster.
	// Tags are used to identify valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// The GCP zone where your data is stored and used (i.e. where
	// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
	// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
	// to determine this automatically for you.
	// Note: This setting additionally determines and restricts
	// which computing resources are available for use with other configs such as
	// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
	Zone *string `pulumi:"zone"`
}

type ClusterClusterConfigGceClusterConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigGceClusterConfigArgsOutput() ClusterClusterConfigGceClusterConfigArgsOutput
	ToClusterClusterConfigGceClusterConfigArgsOutputWithContext(context.Context) ClusterClusterConfigGceClusterConfigArgsOutput
}

type ClusterClusterConfigGceClusterConfigArgsArgs struct {
	// By default, clusters are not restricted to internal IP addresses,
	// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
	// instances in the cluster will only have internal IP addresses. Note: Private Google Access
	// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
	// will be launched in.
	InternalIpOnly pulumi.BoolPtrInput `pulumi:"internalIpOnly"`
	// A map of the Compute Engine metadata entries to add to all instances
	// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The name or selfLink of the Google Compute Engine
	// network to the cluster will be part of. Conflicts with `subnetwork`.
	// If neither is specified, this defaults to the "default" network.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The set of Google API scopes
	// to be made available on all of the node VMs under the `serviceAccount`
	// specified. These can be	either FQDNs, or scope aliases. The following scopes
	// must be set if any other scopes are set. They're necessary to ensure the
	// correct functioning ofthe cluster, and are set automatically by the API:
	ServiceAccountScopes pulumi.StringArrayInput `pulumi:"serviceAccountScopes"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork the cluster will be part of. Conflicts with `network`.
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
	// The list of instance tags applied to instances in the cluster.
	// Tags are used to identify valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The GCP zone where your data is stored and used (i.e. where
	// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
	// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
	// to determine this automatically for you.
	// Note: This setting additionally determines and restricts
	// which computing resources are available for use with other configs such as
	// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (ClusterClusterConfigGceClusterConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigGceClusterConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigGceClusterConfigArgsArgs) ToClusterClusterConfigGceClusterConfigArgsOutput() ClusterClusterConfigGceClusterConfigArgsOutput {
	return i.ToClusterClusterConfigGceClusterConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigGceClusterConfigArgsArgs) ToClusterClusterConfigGceClusterConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigGceClusterConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigGceClusterConfigArgsOutput)
}

func (i ClusterClusterConfigGceClusterConfigArgsArgs) ToClusterClusterConfigGceClusterConfigArgsPtrOutput() ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return i.ToClusterClusterConfigGceClusterConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigGceClusterConfigArgsArgs) ToClusterClusterConfigGceClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigGceClusterConfigArgsOutput).ToClusterClusterConfigGceClusterConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigGceClusterConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigGceClusterConfigArgsPtrOutput() ClusterClusterConfigGceClusterConfigArgsPtrOutput
	ToClusterClusterConfigGceClusterConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigGceClusterConfigArgsPtrOutput
}

type clusterClusterConfigGceClusterConfigArgsPtrType ClusterClusterConfigGceClusterConfigArgsArgs

func ClusterClusterConfigGceClusterConfigArgsPtr(v *ClusterClusterConfigGceClusterConfigArgsArgs) ClusterClusterConfigGceClusterConfigArgsPtrInput {
	return (*clusterClusterConfigGceClusterConfigArgsPtrType)(v)
}

func (*clusterClusterConfigGceClusterConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigGceClusterConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigGceClusterConfigArgsPtrType) ToClusterClusterConfigGceClusterConfigArgsPtrOutput() ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return i.ToClusterClusterConfigGceClusterConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigGceClusterConfigArgsPtrType) ToClusterClusterConfigGceClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigGceClusterConfigArgsPtrOutput)
}

type ClusterClusterConfigGceClusterConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigGceClusterConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigGceClusterConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigGceClusterConfigArgsOutput) ToClusterClusterConfigGceClusterConfigArgsOutput() ClusterClusterConfigGceClusterConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigGceClusterConfigArgsOutput) ToClusterClusterConfigGceClusterConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigGceClusterConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigGceClusterConfigArgsOutput) ToClusterClusterConfigGceClusterConfigArgsPtrOutput() ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return o.ToClusterClusterConfigGceClusterConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigGceClusterConfigArgsOutput) ToClusterClusterConfigGceClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *ClusterClusterConfigGceClusterConfigArgs {
		return &v
	}).(ClusterClusterConfigGceClusterConfigArgsPtrOutput)
}

// By default, clusters are not restricted to internal IP addresses,
// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
// instances in the cluster will only have internal IP addresses. Note: Private Google Access
// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
// will be launched in.
func (o ClusterClusterConfigGceClusterConfigArgsOutput) InternalIpOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *bool { return v.InternalIpOnly }).(pulumi.BoolPtrOutput)
}

// A map of the Compute Engine metadata entries to add to all instances
// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
func (o ClusterClusterConfigGceClusterConfigArgsOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name or selfLink of the Google Compute Engine
// network to the cluster will be part of. Conflicts with `subnetwork`.
// If neither is specified, this defaults to the "default" network.
func (o ClusterClusterConfigGceClusterConfigArgsOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
func (o ClusterClusterConfigGceClusterConfigArgsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes
// to be made available on all of the node VMs under the `serviceAccount`
// specified. These can be	either FQDNs, or scope aliases. The following scopes
// must be set if any other scopes are set. They're necessary to ensure the
// correct functioning ofthe cluster, and are set automatically by the API:
func (o ClusterClusterConfigGceClusterConfigArgsOutput) ServiceAccountScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) []string { return v.ServiceAccountScopes }).(pulumi.StringArrayOutput)
}

// The name or selfLink of the Google Compute Engine
// subnetwork the cluster will be part of. Conflicts with `network`.
func (o ClusterClusterConfigGceClusterConfigArgsOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

// The list of instance tags applied to instances in the cluster.
// Tags are used to identify valid sources or targets for network firewalls.
func (o ClusterClusterConfigGceClusterConfigArgsOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The GCP zone where your data is stored and used (i.e. where
// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
// to determine this automatically for you.
// Note: This setting additionally determines and restricts
// which computing resources are available for use with other configs such as
// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
func (o ClusterClusterConfigGceClusterConfigArgsOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigGceClusterConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigGceClusterConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigGceClusterConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) ToClusterClusterConfigGceClusterConfigArgsPtrOutput() ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) ToClusterClusterConfigGceClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigGceClusterConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) Elem() ClusterClusterConfigGceClusterConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigGceClusterConfigArgs) ClusterClusterConfigGceClusterConfigArgs { return *v }).(ClusterClusterConfigGceClusterConfigArgsOutput)
}

// By default, clusters are not restricted to internal IP addresses,
// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
// instances in the cluster will only have internal IP addresses. Note: Private Google Access
// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
// will be launched in.
func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) InternalIpOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *bool { return v.InternalIpOnly }).(pulumi.BoolPtrOutput)
}

// A map of the Compute Engine metadata entries to add to all instances
// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name or selfLink of the Google Compute Engine
// network to the cluster will be part of. Conflicts with `subnetwork`.
// If neither is specified, this defaults to the "default" network.
func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes
// to be made available on all of the node VMs under the `serviceAccount`
// specified. These can be	either FQDNs, or scope aliases. The following scopes
// must be set if any other scopes are set. They're necessary to ensure the
// correct functioning ofthe cluster, and are set automatically by the API:
func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) ServiceAccountScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) []string { return v.ServiceAccountScopes }).(pulumi.StringArrayOutput)
}

// The name or selfLink of the Google Compute Engine
// subnetwork the cluster will be part of. Conflicts with `network`.
func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

// The list of instance tags applied to instances in the cluster.
// Tags are used to identify valid sources or targets for network firewalls.
func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The GCP zone where your data is stored and used (i.e. where
// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
// to determine this automatically for you.
// Note: This setting additionally determines and restricts
// which computing resources are available for use with other configs such as
// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
func (o ClusterClusterConfigGceClusterConfigArgsPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigGceClusterConfigArgs) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigInitializationAction struct {
	Script string `pulumi:"script"`
	// The maximum duration (in seconds) which `script` is
	// allowed to take to execute its action. GCP will default to a predetermined
	// computed value if not set (currently 300).
	TimeoutSec *int `pulumi:"timeoutSec"`
}

type ClusterClusterConfigInitializationActionInput interface {
	pulumi.Input

	ToClusterClusterConfigInitializationActionOutput() ClusterClusterConfigInitializationActionOutput
	ToClusterClusterConfigInitializationActionOutputWithContext(context.Context) ClusterClusterConfigInitializationActionOutput
}

type ClusterClusterConfigInitializationActionArgs struct {
	Script pulumi.StringInput `pulumi:"script"`
	// The maximum duration (in seconds) which `script` is
	// allowed to take to execute its action. GCP will default to a predetermined
	// computed value if not set (currently 300).
	TimeoutSec pulumi.IntPtrInput `pulumi:"timeoutSec"`
}

func (ClusterClusterConfigInitializationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigInitializationAction)(nil)).Elem()
}

func (i ClusterClusterConfigInitializationActionArgs) ToClusterClusterConfigInitializationActionOutput() ClusterClusterConfigInitializationActionOutput {
	return i.ToClusterClusterConfigInitializationActionOutputWithContext(context.Background())
}

func (i ClusterClusterConfigInitializationActionArgs) ToClusterClusterConfigInitializationActionOutputWithContext(ctx context.Context) ClusterClusterConfigInitializationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigInitializationActionOutput)
}

type ClusterClusterConfigInitializationActionArrayInput interface {
	pulumi.Input

	ToClusterClusterConfigInitializationActionArrayOutput() ClusterClusterConfigInitializationActionArrayOutput
	ToClusterClusterConfigInitializationActionArrayOutputWithContext(context.Context) ClusterClusterConfigInitializationActionArrayOutput
}

type ClusterClusterConfigInitializationActionArray []ClusterClusterConfigInitializationActionInput

func (ClusterClusterConfigInitializationActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigInitializationAction)(nil)).Elem()
}

func (i ClusterClusterConfigInitializationActionArray) ToClusterClusterConfigInitializationActionArrayOutput() ClusterClusterConfigInitializationActionArrayOutput {
	return i.ToClusterClusterConfigInitializationActionArrayOutputWithContext(context.Background())
}

func (i ClusterClusterConfigInitializationActionArray) ToClusterClusterConfigInitializationActionArrayOutputWithContext(ctx context.Context) ClusterClusterConfigInitializationActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigInitializationActionArrayOutput)
}

type ClusterClusterConfigInitializationActionOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigInitializationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigInitializationAction)(nil)).Elem()
}

func (o ClusterClusterConfigInitializationActionOutput) ToClusterClusterConfigInitializationActionOutput() ClusterClusterConfigInitializationActionOutput {
	return o
}

func (o ClusterClusterConfigInitializationActionOutput) ToClusterClusterConfigInitializationActionOutputWithContext(ctx context.Context) ClusterClusterConfigInitializationActionOutput {
	return o
}

func (o ClusterClusterConfigInitializationActionOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigInitializationAction) string { return v.Script }).(pulumi.StringOutput)
}

// The maximum duration (in seconds) which `script` is
// allowed to take to execute its action. GCP will default to a predetermined
// computed value if not set (currently 300).
func (o ClusterClusterConfigInitializationActionOutput) TimeoutSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigInitializationAction) *int { return v.TimeoutSec }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigInitializationActionArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigInitializationActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigInitializationAction)(nil)).Elem()
}

func (o ClusterClusterConfigInitializationActionArrayOutput) ToClusterClusterConfigInitializationActionArrayOutput() ClusterClusterConfigInitializationActionArrayOutput {
	return o
}

func (o ClusterClusterConfigInitializationActionArrayOutput) ToClusterClusterConfigInitializationActionArrayOutputWithContext(ctx context.Context) ClusterClusterConfigInitializationActionArrayOutput {
	return o
}

func (o ClusterClusterConfigInitializationActionArrayOutput) Index(i pulumi.IntInput) ClusterClusterConfigInitializationActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterConfigInitializationAction {
		return vs[0].([]ClusterClusterConfigInitializationAction)[vs[1].(int)]
	}).(ClusterClusterConfigInitializationActionOutput)
}

type ClusterClusterConfigInitializationActionArgs struct {
	Script string `pulumi:"script"`
	// The maximum duration (in seconds) which `script` is
	// allowed to take to execute its action. GCP will default to a predetermined
	// computed value if not set (currently 300).
	TimeoutSec *int `pulumi:"timeoutSec"`
}

type ClusterClusterConfigInitializationActionArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigInitializationActionArgsOutput() ClusterClusterConfigInitializationActionArgsOutput
	ToClusterClusterConfigInitializationActionArgsOutputWithContext(context.Context) ClusterClusterConfigInitializationActionArgsOutput
}

type ClusterClusterConfigInitializationActionArgsArgs struct {
	Script pulumi.StringInput `pulumi:"script"`
	// The maximum duration (in seconds) which `script` is
	// allowed to take to execute its action. GCP will default to a predetermined
	// computed value if not set (currently 300).
	TimeoutSec pulumi.IntPtrInput `pulumi:"timeoutSec"`
}

func (ClusterClusterConfigInitializationActionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigInitializationActionArgs)(nil)).Elem()
}

func (i ClusterClusterConfigInitializationActionArgsArgs) ToClusterClusterConfigInitializationActionArgsOutput() ClusterClusterConfigInitializationActionArgsOutput {
	return i.ToClusterClusterConfigInitializationActionArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigInitializationActionArgsArgs) ToClusterClusterConfigInitializationActionArgsOutputWithContext(ctx context.Context) ClusterClusterConfigInitializationActionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigInitializationActionArgsOutput)
}

type ClusterClusterConfigInitializationActionArgsArrayInput interface {
	pulumi.Input

	ToClusterClusterConfigInitializationActionArgsArrayOutput() ClusterClusterConfigInitializationActionArgsArrayOutput
	ToClusterClusterConfigInitializationActionArgsArrayOutputWithContext(context.Context) ClusterClusterConfigInitializationActionArgsArrayOutput
}

type ClusterClusterConfigInitializationActionArgsArray []ClusterClusterConfigInitializationActionArgsInput

func (ClusterClusterConfigInitializationActionArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigInitializationActionArgs)(nil)).Elem()
}

func (i ClusterClusterConfigInitializationActionArgsArray) ToClusterClusterConfigInitializationActionArgsArrayOutput() ClusterClusterConfigInitializationActionArgsArrayOutput {
	return i.ToClusterClusterConfigInitializationActionArgsArrayOutputWithContext(context.Background())
}

func (i ClusterClusterConfigInitializationActionArgsArray) ToClusterClusterConfigInitializationActionArgsArrayOutputWithContext(ctx context.Context) ClusterClusterConfigInitializationActionArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigInitializationActionArgsArrayOutput)
}

type ClusterClusterConfigInitializationActionArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigInitializationActionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigInitializationActionArgs)(nil)).Elem()
}

func (o ClusterClusterConfigInitializationActionArgsOutput) ToClusterClusterConfigInitializationActionArgsOutput() ClusterClusterConfigInitializationActionArgsOutput {
	return o
}

func (o ClusterClusterConfigInitializationActionArgsOutput) ToClusterClusterConfigInitializationActionArgsOutputWithContext(ctx context.Context) ClusterClusterConfigInitializationActionArgsOutput {
	return o
}

func (o ClusterClusterConfigInitializationActionArgsOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigInitializationActionArgs) string { return v.Script }).(pulumi.StringOutput)
}

// The maximum duration (in seconds) which `script` is
// allowed to take to execute its action. GCP will default to a predetermined
// computed value if not set (currently 300).
func (o ClusterClusterConfigInitializationActionArgsOutput) TimeoutSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigInitializationActionArgs) *int { return v.TimeoutSec }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigInitializationActionArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigInitializationActionArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigInitializationActionArgs)(nil)).Elem()
}

func (o ClusterClusterConfigInitializationActionArgsArrayOutput) ToClusterClusterConfigInitializationActionArgsArrayOutput() ClusterClusterConfigInitializationActionArgsArrayOutput {
	return o
}

func (o ClusterClusterConfigInitializationActionArgsArrayOutput) ToClusterClusterConfigInitializationActionArgsArrayOutputWithContext(ctx context.Context) ClusterClusterConfigInitializationActionArgsArrayOutput {
	return o
}

func (o ClusterClusterConfigInitializationActionArgsArrayOutput) Index(i pulumi.IntInput) ClusterClusterConfigInitializationActionArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterConfigInitializationActionArgs {
		return vs[0].([]ClusterClusterConfigInitializationActionArgs)[vs[1].(int)]
	}).(ClusterClusterConfigInitializationActionArgsOutput)
}

type ClusterClusterConfigLifecycleConfig struct {
	// The time when cluster will be auto-deleted.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	// Example: "2014-10-02T15:01:23.045123456Z".
	AutoDeleteTime *string `pulumi:"autoDeleteTime"`
	// The duration to keep the cluster alive while idling
	// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
	IdleDeleteTtl *string `pulumi:"idleDeleteTtl"`
	IdleStartTime string  `pulumi:"idleStartTime"`
}

type ClusterClusterConfigLifecycleConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigLifecycleConfigOutput() ClusterClusterConfigLifecycleConfigOutput
	ToClusterClusterConfigLifecycleConfigOutputWithContext(context.Context) ClusterClusterConfigLifecycleConfigOutput
}

type ClusterClusterConfigLifecycleConfigArgs struct {
	// The time when cluster will be auto-deleted.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	// Example: "2014-10-02T15:01:23.045123456Z".
	AutoDeleteTime pulumi.StringPtrInput `pulumi:"autoDeleteTime"`
	// The duration to keep the cluster alive while idling
	// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
	IdleDeleteTtl pulumi.StringPtrInput `pulumi:"idleDeleteTtl"`
	IdleStartTime pulumi.StringInput    `pulumi:"idleStartTime"`
}

func (ClusterClusterConfigLifecycleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigLifecycleConfig)(nil)).Elem()
}

func (i ClusterClusterConfigLifecycleConfigArgs) ToClusterClusterConfigLifecycleConfigOutput() ClusterClusterConfigLifecycleConfigOutput {
	return i.ToClusterClusterConfigLifecycleConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigLifecycleConfigArgs) ToClusterClusterConfigLifecycleConfigOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigLifecycleConfigOutput)
}

func (i ClusterClusterConfigLifecycleConfigArgs) ToClusterClusterConfigLifecycleConfigPtrOutput() ClusterClusterConfigLifecycleConfigPtrOutput {
	return i.ToClusterClusterConfigLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigLifecycleConfigArgs) ToClusterClusterConfigLifecycleConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigLifecycleConfigOutput).ToClusterClusterConfigLifecycleConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigLifecycleConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigLifecycleConfigPtrOutput() ClusterClusterConfigLifecycleConfigPtrOutput
	ToClusterClusterConfigLifecycleConfigPtrOutputWithContext(context.Context) ClusterClusterConfigLifecycleConfigPtrOutput
}

type clusterClusterConfigLifecycleConfigPtrType ClusterClusterConfigLifecycleConfigArgs

func ClusterClusterConfigLifecycleConfigPtr(v *ClusterClusterConfigLifecycleConfigArgs) ClusterClusterConfigLifecycleConfigPtrInput {
	return (*clusterClusterConfigLifecycleConfigPtrType)(v)
}

func (*clusterClusterConfigLifecycleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigLifecycleConfig)(nil)).Elem()
}

func (i *clusterClusterConfigLifecycleConfigPtrType) ToClusterClusterConfigLifecycleConfigPtrOutput() ClusterClusterConfigLifecycleConfigPtrOutput {
	return i.ToClusterClusterConfigLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigLifecycleConfigPtrType) ToClusterClusterConfigLifecycleConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigLifecycleConfigPtrOutput)
}

type ClusterClusterConfigLifecycleConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigLifecycleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigLifecycleConfig)(nil)).Elem()
}

func (o ClusterClusterConfigLifecycleConfigOutput) ToClusterClusterConfigLifecycleConfigOutput() ClusterClusterConfigLifecycleConfigOutput {
	return o
}

func (o ClusterClusterConfigLifecycleConfigOutput) ToClusterClusterConfigLifecycleConfigOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigOutput {
	return o
}

func (o ClusterClusterConfigLifecycleConfigOutput) ToClusterClusterConfigLifecycleConfigPtrOutput() ClusterClusterConfigLifecycleConfigPtrOutput {
	return o.ToClusterClusterConfigLifecycleConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigLifecycleConfigOutput) ToClusterClusterConfigLifecycleConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfig) *ClusterClusterConfigLifecycleConfig {
		return &v
	}).(ClusterClusterConfigLifecycleConfigPtrOutput)
}

// The time when cluster will be auto-deleted.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
// Example: "2014-10-02T15:01:23.045123456Z".
func (o ClusterClusterConfigLifecycleConfigOutput) AutoDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfig) *string { return v.AutoDeleteTime }).(pulumi.StringPtrOutput)
}

// The duration to keep the cluster alive while idling
// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
func (o ClusterClusterConfigLifecycleConfigOutput) IdleDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfig) *string { return v.IdleDeleteTtl }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigLifecycleConfigOutput) IdleStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfig) string { return v.IdleStartTime }).(pulumi.StringOutput)
}

type ClusterClusterConfigLifecycleConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigLifecycleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigLifecycleConfig)(nil)).Elem()
}

func (o ClusterClusterConfigLifecycleConfigPtrOutput) ToClusterClusterConfigLifecycleConfigPtrOutput() ClusterClusterConfigLifecycleConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigLifecycleConfigPtrOutput) ToClusterClusterConfigLifecycleConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigLifecycleConfigPtrOutput) Elem() ClusterClusterConfigLifecycleConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigLifecycleConfig) ClusterClusterConfigLifecycleConfig { return *v }).(ClusterClusterConfigLifecycleConfigOutput)
}

// The time when cluster will be auto-deleted.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
// Example: "2014-10-02T15:01:23.045123456Z".
func (o ClusterClusterConfigLifecycleConfigPtrOutput) AutoDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfig) *string { return v.AutoDeleteTime }).(pulumi.StringPtrOutput)
}

// The duration to keep the cluster alive while idling
// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
func (o ClusterClusterConfigLifecycleConfigPtrOutput) IdleDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfig) *string { return v.IdleDeleteTtl }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigLifecycleConfigPtrOutput) IdleStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfig) string { return v.IdleStartTime }).(pulumi.StringOutput)
}

type ClusterClusterConfigLifecycleConfigArgs struct {
	// The time when cluster will be auto-deleted.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	// Example: "2014-10-02T15:01:23.045123456Z".
	AutoDeleteTime *string `pulumi:"autoDeleteTime"`
	// The duration to keep the cluster alive while idling
	// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
	IdleDeleteTtl *string `pulumi:"idleDeleteTtl"`
	IdleStartTime *string `pulumi:"idleStartTime"`
}

type ClusterClusterConfigLifecycleConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigLifecycleConfigArgsOutput() ClusterClusterConfigLifecycleConfigArgsOutput
	ToClusterClusterConfigLifecycleConfigArgsOutputWithContext(context.Context) ClusterClusterConfigLifecycleConfigArgsOutput
}

type ClusterClusterConfigLifecycleConfigArgsArgs struct {
	// The time when cluster will be auto-deleted.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	// Example: "2014-10-02T15:01:23.045123456Z".
	AutoDeleteTime pulumi.StringPtrInput `pulumi:"autoDeleteTime"`
	// The duration to keep the cluster alive while idling
	// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
	IdleDeleteTtl pulumi.StringPtrInput `pulumi:"idleDeleteTtl"`
	IdleStartTime pulumi.StringPtrInput `pulumi:"idleStartTime"`
}

func (ClusterClusterConfigLifecycleConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigLifecycleConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigLifecycleConfigArgsArgs) ToClusterClusterConfigLifecycleConfigArgsOutput() ClusterClusterConfigLifecycleConfigArgsOutput {
	return i.ToClusterClusterConfigLifecycleConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigLifecycleConfigArgsArgs) ToClusterClusterConfigLifecycleConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigLifecycleConfigArgsOutput)
}

func (i ClusterClusterConfigLifecycleConfigArgsArgs) ToClusterClusterConfigLifecycleConfigArgsPtrOutput() ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return i.ToClusterClusterConfigLifecycleConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigLifecycleConfigArgsArgs) ToClusterClusterConfigLifecycleConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigLifecycleConfigArgsOutput).ToClusterClusterConfigLifecycleConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigLifecycleConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigLifecycleConfigArgsPtrOutput() ClusterClusterConfigLifecycleConfigArgsPtrOutput
	ToClusterClusterConfigLifecycleConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigLifecycleConfigArgsPtrOutput
}

type clusterClusterConfigLifecycleConfigArgsPtrType ClusterClusterConfigLifecycleConfigArgsArgs

func ClusterClusterConfigLifecycleConfigArgsPtr(v *ClusterClusterConfigLifecycleConfigArgsArgs) ClusterClusterConfigLifecycleConfigArgsPtrInput {
	return (*clusterClusterConfigLifecycleConfigArgsPtrType)(v)
}

func (*clusterClusterConfigLifecycleConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigLifecycleConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigLifecycleConfigArgsPtrType) ToClusterClusterConfigLifecycleConfigArgsPtrOutput() ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return i.ToClusterClusterConfigLifecycleConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigLifecycleConfigArgsPtrType) ToClusterClusterConfigLifecycleConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigLifecycleConfigArgsPtrOutput)
}

type ClusterClusterConfigLifecycleConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigLifecycleConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigLifecycleConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigLifecycleConfigArgsOutput) ToClusterClusterConfigLifecycleConfigArgsOutput() ClusterClusterConfigLifecycleConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigLifecycleConfigArgsOutput) ToClusterClusterConfigLifecycleConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigLifecycleConfigArgsOutput) ToClusterClusterConfigLifecycleConfigArgsPtrOutput() ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return o.ToClusterClusterConfigLifecycleConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigLifecycleConfigArgsOutput) ToClusterClusterConfigLifecycleConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfigArgs) *ClusterClusterConfigLifecycleConfigArgs {
		return &v
	}).(ClusterClusterConfigLifecycleConfigArgsPtrOutput)
}

// The time when cluster will be auto-deleted.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
// Example: "2014-10-02T15:01:23.045123456Z".
func (o ClusterClusterConfigLifecycleConfigArgsOutput) AutoDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfigArgs) *string { return v.AutoDeleteTime }).(pulumi.StringPtrOutput)
}

// The duration to keep the cluster alive while idling
// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
func (o ClusterClusterConfigLifecycleConfigArgsOutput) IdleDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfigArgs) *string { return v.IdleDeleteTtl }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigLifecycleConfigArgsOutput) IdleStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfigArgs) *string { return v.IdleStartTime }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigLifecycleConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigLifecycleConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigLifecycleConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigLifecycleConfigArgsPtrOutput) ToClusterClusterConfigLifecycleConfigArgsPtrOutput() ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigLifecycleConfigArgsPtrOutput) ToClusterClusterConfigLifecycleConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigLifecycleConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigLifecycleConfigArgsPtrOutput) Elem() ClusterClusterConfigLifecycleConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigLifecycleConfigArgs) ClusterClusterConfigLifecycleConfigArgs { return *v }).(ClusterClusterConfigLifecycleConfigArgsOutput)
}

// The time when cluster will be auto-deleted.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
// Example: "2014-10-02T15:01:23.045123456Z".
func (o ClusterClusterConfigLifecycleConfigArgsPtrOutput) AutoDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfigArgs) *string { return v.AutoDeleteTime }).(pulumi.StringPtrOutput)
}

// The duration to keep the cluster alive while idling
// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
func (o ClusterClusterConfigLifecycleConfigArgsPtrOutput) IdleDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfigArgs) *string { return v.IdleDeleteTtl }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigLifecycleConfigArgsPtrOutput) IdleStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigLifecycleConfigArgs) *string { return v.IdleStartTime }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigMasterConfig struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators []ClusterClusterConfigMasterConfigAccelerator `pulumi:"accelerators"`
	// Disk Config
	DiskConfig ClusterClusterConfigMasterConfigDiskConfig `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      string   `pulumi:"imageUri"`
	InstanceNames []string `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType string `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform string `pulumi:"minCpuPlatform"`
	NumInstances   int    `pulumi:"numInstances"`
}

type ClusterClusterConfigMasterConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigOutput() ClusterClusterConfigMasterConfigOutput
	ToClusterClusterConfigMasterConfigOutputWithContext(context.Context) ClusterClusterConfigMasterConfigOutput
}

type ClusterClusterConfigMasterConfigArgs struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators ClusterClusterConfigMasterConfigAcceleratorArrayInput `pulumi:"accelerators"`
	// Disk Config
	DiskConfig ClusterClusterConfigMasterConfigDiskConfigInput `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      pulumi.StringInput      `pulumi:"imageUri"`
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform pulumi.StringInput `pulumi:"minCpuPlatform"`
	NumInstances   pulumi.IntInput    `pulumi:"numInstances"`
}

func (ClusterClusterConfigMasterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfig)(nil)).Elem()
}

func (i ClusterClusterConfigMasterConfigArgs) ToClusterClusterConfigMasterConfigOutput() ClusterClusterConfigMasterConfigOutput {
	return i.ToClusterClusterConfigMasterConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigArgs) ToClusterClusterConfigMasterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigOutput)
}

type ClusterClusterConfigMasterConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfig)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigOutput) ToClusterClusterConfigMasterConfigOutput() ClusterClusterConfigMasterConfigOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigOutput) ToClusterClusterConfigMasterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigOutput {
	return o
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigMasterConfigOutput) Accelerators() ClusterClusterConfigMasterConfigAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfig) []ClusterClusterConfigMasterConfigAccelerator {
		return v.Accelerators
	}).(ClusterClusterConfigMasterConfigAcceleratorArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigMasterConfigOutput) DiskConfig() ClusterClusterConfigMasterConfigDiskConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfig) ClusterClusterConfigMasterConfigDiskConfig {
		return v.DiskConfig
	}).(ClusterClusterConfigMasterConfigDiskConfigOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigMasterConfigOutput) ImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfig) string { return v.ImageUri }).(pulumi.StringOutput)
}

func (o ClusterClusterConfigMasterConfigOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfig) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigMasterConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigMasterConfigOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfig) string { return v.MinCpuPlatform }).(pulumi.StringOutput)
}

func (o ClusterClusterConfigMasterConfigOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfig) int { return v.NumInstances }).(pulumi.IntOutput)
}

type ClusterClusterConfigMasterConfigAccelerator struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount int `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType string `pulumi:"acceleratorType"`
}

type ClusterClusterConfigMasterConfigAcceleratorInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigAcceleratorOutput() ClusterClusterConfigMasterConfigAcceleratorOutput
	ToClusterClusterConfigMasterConfigAcceleratorOutputWithContext(context.Context) ClusterClusterConfigMasterConfigAcceleratorOutput
}

type ClusterClusterConfigMasterConfigAcceleratorArgs struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount pulumi.IntInput `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType pulumi.StringInput `pulumi:"acceleratorType"`
}

func (ClusterClusterConfigMasterConfigAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigAccelerator)(nil)).Elem()
}

func (i ClusterClusterConfigMasterConfigAcceleratorArgs) ToClusterClusterConfigMasterConfigAcceleratorOutput() ClusterClusterConfigMasterConfigAcceleratorOutput {
	return i.ToClusterClusterConfigMasterConfigAcceleratorOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigAcceleratorArgs) ToClusterClusterConfigMasterConfigAcceleratorOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigAcceleratorOutput)
}

type ClusterClusterConfigMasterConfigAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigAcceleratorArrayOutput() ClusterClusterConfigMasterConfigAcceleratorArrayOutput
	ToClusterClusterConfigMasterConfigAcceleratorArrayOutputWithContext(context.Context) ClusterClusterConfigMasterConfigAcceleratorArrayOutput
}

type ClusterClusterConfigMasterConfigAcceleratorArray []ClusterClusterConfigMasterConfigAcceleratorInput

func (ClusterClusterConfigMasterConfigAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigMasterConfigAccelerator)(nil)).Elem()
}

func (i ClusterClusterConfigMasterConfigAcceleratorArray) ToClusterClusterConfigMasterConfigAcceleratorArrayOutput() ClusterClusterConfigMasterConfigAcceleratorArrayOutput {
	return i.ToClusterClusterConfigMasterConfigAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigAcceleratorArray) ToClusterClusterConfigMasterConfigAcceleratorArrayOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigAcceleratorArrayOutput)
}

type ClusterClusterConfigMasterConfigAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigAccelerator)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigAcceleratorOutput) ToClusterClusterConfigMasterConfigAcceleratorOutput() ClusterClusterConfigMasterConfigAcceleratorOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigAcceleratorOutput) ToClusterClusterConfigMasterConfigAcceleratorOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigAcceleratorOutput {
	return o
}

// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
func (o ClusterClusterConfigMasterConfigAcceleratorOutput) AcceleratorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigAccelerator) int { return v.AcceleratorCount }).(pulumi.IntOutput)
}

// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
func (o ClusterClusterConfigMasterConfigAcceleratorOutput) AcceleratorType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigAccelerator) string { return v.AcceleratorType }).(pulumi.StringOutput)
}

type ClusterClusterConfigMasterConfigAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigMasterConfigAccelerator)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigAcceleratorArrayOutput) ToClusterClusterConfigMasterConfigAcceleratorArrayOutput() ClusterClusterConfigMasterConfigAcceleratorArrayOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigAcceleratorArrayOutput) ToClusterClusterConfigMasterConfigAcceleratorArrayOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigAcceleratorArrayOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterClusterConfigMasterConfigAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterConfigMasterConfigAccelerator {
		return vs[0].([]ClusterClusterConfigMasterConfigAccelerator)[vs[1].(int)]
	}).(ClusterClusterConfigMasterConfigAcceleratorOutput)
}

type ClusterClusterConfigMasterConfigAcceleratorArgs struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount int `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType string `pulumi:"acceleratorType"`
}

type ClusterClusterConfigMasterConfigAcceleratorArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigAcceleratorArgsOutput() ClusterClusterConfigMasterConfigAcceleratorArgsOutput
	ToClusterClusterConfigMasterConfigAcceleratorArgsOutputWithContext(context.Context) ClusterClusterConfigMasterConfigAcceleratorArgsOutput
}

type ClusterClusterConfigMasterConfigAcceleratorArgsArgs struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount pulumi.IntInput `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType pulumi.StringInput `pulumi:"acceleratorType"`
}

func (ClusterClusterConfigMasterConfigAcceleratorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigAcceleratorArgs)(nil)).Elem()
}

func (i ClusterClusterConfigMasterConfigAcceleratorArgsArgs) ToClusterClusterConfigMasterConfigAcceleratorArgsOutput() ClusterClusterConfigMasterConfigAcceleratorArgsOutput {
	return i.ToClusterClusterConfigMasterConfigAcceleratorArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigAcceleratorArgsArgs) ToClusterClusterConfigMasterConfigAcceleratorArgsOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigAcceleratorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigAcceleratorArgsOutput)
}

type ClusterClusterConfigMasterConfigAcceleratorArgsArrayInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput() ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput
	ToClusterClusterConfigMasterConfigAcceleratorArgsArrayOutputWithContext(context.Context) ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput
}

type ClusterClusterConfigMasterConfigAcceleratorArgsArray []ClusterClusterConfigMasterConfigAcceleratorArgsInput

func (ClusterClusterConfigMasterConfigAcceleratorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigMasterConfigAcceleratorArgs)(nil)).Elem()
}

func (i ClusterClusterConfigMasterConfigAcceleratorArgsArray) ToClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput() ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput {
	return i.ToClusterClusterConfigMasterConfigAcceleratorArgsArrayOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigAcceleratorArgsArray) ToClusterClusterConfigMasterConfigAcceleratorArgsArrayOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput)
}

type ClusterClusterConfigMasterConfigAcceleratorArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigAcceleratorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigAcceleratorArgs)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigAcceleratorArgsOutput) ToClusterClusterConfigMasterConfigAcceleratorArgsOutput() ClusterClusterConfigMasterConfigAcceleratorArgsOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigAcceleratorArgsOutput) ToClusterClusterConfigMasterConfigAcceleratorArgsOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigAcceleratorArgsOutput {
	return o
}

// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
func (o ClusterClusterConfigMasterConfigAcceleratorArgsOutput) AcceleratorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigAcceleratorArgs) int { return v.AcceleratorCount }).(pulumi.IntOutput)
}

// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
func (o ClusterClusterConfigMasterConfigAcceleratorArgsOutput) AcceleratorType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigAcceleratorArgs) string { return v.AcceleratorType }).(pulumi.StringOutput)
}

type ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigMasterConfigAcceleratorArgs)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput) ToClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput() ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput) ToClusterClusterConfigMasterConfigAcceleratorArgsArrayOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput) Index(i pulumi.IntInput) ClusterClusterConfigMasterConfigAcceleratorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterConfigMasterConfigAcceleratorArgs {
		return vs[0].([]ClusterClusterConfigMasterConfigAcceleratorArgs)[vs[1].(int)]
	}).(ClusterClusterConfigMasterConfigAcceleratorArgsOutput)
}

type ClusterClusterConfigMasterConfigArgs struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators []ClusterClusterConfigMasterConfigAcceleratorArgs `pulumi:"accelerators"`
	// Disk Config
	DiskConfig *ClusterClusterConfigMasterConfigDiskConfigArgs `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      *string  `pulumi:"imageUri"`
	InstanceNames []string `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType *string `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	NumInstances   *int    `pulumi:"numInstances"`
}

type ClusterClusterConfigMasterConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigArgsOutput() ClusterClusterConfigMasterConfigArgsOutput
	ToClusterClusterConfigMasterConfigArgsOutputWithContext(context.Context) ClusterClusterConfigMasterConfigArgsOutput
}

type ClusterClusterConfigMasterConfigArgsArgs struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators ClusterClusterConfigMasterConfigAcceleratorArgsArrayInput `pulumi:"accelerators"`
	// Disk Config
	DiskConfig ClusterClusterConfigMasterConfigDiskConfigArgsPtrInput `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      pulumi.StringPtrInput   `pulumi:"imageUri"`
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	NumInstances   pulumi.IntPtrInput    `pulumi:"numInstances"`
}

func (ClusterClusterConfigMasterConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigMasterConfigArgsArgs) ToClusterClusterConfigMasterConfigArgsOutput() ClusterClusterConfigMasterConfigArgsOutput {
	return i.ToClusterClusterConfigMasterConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigArgsArgs) ToClusterClusterConfigMasterConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigArgsOutput)
}

func (i ClusterClusterConfigMasterConfigArgsArgs) ToClusterClusterConfigMasterConfigArgsPtrOutput() ClusterClusterConfigMasterConfigArgsPtrOutput {
	return i.ToClusterClusterConfigMasterConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigArgsArgs) ToClusterClusterConfigMasterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigArgsOutput).ToClusterClusterConfigMasterConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigMasterConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigArgsPtrOutput() ClusterClusterConfigMasterConfigArgsPtrOutput
	ToClusterClusterConfigMasterConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigMasterConfigArgsPtrOutput
}

type clusterClusterConfigMasterConfigArgsPtrType ClusterClusterConfigMasterConfigArgsArgs

func ClusterClusterConfigMasterConfigArgsPtr(v *ClusterClusterConfigMasterConfigArgsArgs) ClusterClusterConfigMasterConfigArgsPtrInput {
	return (*clusterClusterConfigMasterConfigArgsPtrType)(v)
}

func (*clusterClusterConfigMasterConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigMasterConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigMasterConfigArgsPtrType) ToClusterClusterConfigMasterConfigArgsPtrOutput() ClusterClusterConfigMasterConfigArgsPtrOutput {
	return i.ToClusterClusterConfigMasterConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigMasterConfigArgsPtrType) ToClusterClusterConfigMasterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigArgsPtrOutput)
}

type ClusterClusterConfigMasterConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigArgsOutput) ToClusterClusterConfigMasterConfigArgsOutput() ClusterClusterConfigMasterConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigArgsOutput) ToClusterClusterConfigMasterConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigArgsOutput) ToClusterClusterConfigMasterConfigArgsPtrOutput() ClusterClusterConfigMasterConfigArgsPtrOutput {
	return o.ToClusterClusterConfigMasterConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigMasterConfigArgsOutput) ToClusterClusterConfigMasterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *ClusterClusterConfigMasterConfigArgs {
		return &v
	}).(ClusterClusterConfigMasterConfigArgsPtrOutput)
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigMasterConfigArgsOutput) Accelerators() ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) []ClusterClusterConfigMasterConfigAcceleratorArgs {
		return v.Accelerators
	}).(ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigMasterConfigArgsOutput) DiskConfig() ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *ClusterClusterConfigMasterConfigDiskConfigArgs {
		return v.DiskConfig
	}).(ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigMasterConfigArgsOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigMasterConfigArgsOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigMasterConfigArgsOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigMasterConfigArgsOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigMasterConfigArgsOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigMasterConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigMasterConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigArgsPtrOutput) ToClusterClusterConfigMasterConfigArgsPtrOutput() ClusterClusterConfigMasterConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigArgsPtrOutput) ToClusterClusterConfigMasterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigArgsPtrOutput) Elem() ClusterClusterConfigMasterConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigMasterConfigArgs) ClusterClusterConfigMasterConfigArgs { return *v }).(ClusterClusterConfigMasterConfigArgsOutput)
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigMasterConfigArgsPtrOutput) Accelerators() ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) []ClusterClusterConfigMasterConfigAcceleratorArgs {
		return v.Accelerators
	}).(ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigMasterConfigArgsPtrOutput) DiskConfig() ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *ClusterClusterConfigMasterConfigDiskConfigArgs {
		return v.DiskConfig
	}).(ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigMasterConfigArgsPtrOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigMasterConfigArgsPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigMasterConfigArgsPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigMasterConfigArgsPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigMasterConfigArgsPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigArgs) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigMasterConfigDiskConfig struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb int `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType *string `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds int `pulumi:"numLocalSsds"`
}

type ClusterClusterConfigMasterConfigDiskConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigDiskConfigOutput() ClusterClusterConfigMasterConfigDiskConfigOutput
	ToClusterClusterConfigMasterConfigDiskConfigOutputWithContext(context.Context) ClusterClusterConfigMasterConfigDiskConfigOutput
}

type ClusterClusterConfigMasterConfigDiskConfigArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb pulumi.IntInput `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds pulumi.IntInput `pulumi:"numLocalSsds"`
}

func (ClusterClusterConfigMasterConfigDiskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigDiskConfig)(nil)).Elem()
}

func (i ClusterClusterConfigMasterConfigDiskConfigArgs) ToClusterClusterConfigMasterConfigDiskConfigOutput() ClusterClusterConfigMasterConfigDiskConfigOutput {
	return i.ToClusterClusterConfigMasterConfigDiskConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigDiskConfigArgs) ToClusterClusterConfigMasterConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigDiskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigDiskConfigOutput)
}

type ClusterClusterConfigMasterConfigDiskConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigDiskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigDiskConfig)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigDiskConfigOutput) ToClusterClusterConfigMasterConfigDiskConfigOutput() ClusterClusterConfigMasterConfigDiskConfigOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigDiskConfigOutput) ToClusterClusterConfigMasterConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigDiskConfigOutput {
	return o
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigMasterConfigDiskConfigOutput) BootDiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfig) int { return v.BootDiskSizeGb }).(pulumi.IntOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigMasterConfigDiskConfigOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigMasterConfigDiskConfigOutput) NumLocalSsds() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfig) int { return v.NumLocalSsds }).(pulumi.IntOutput)
}

type ClusterClusterConfigMasterConfigDiskConfigArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb *int `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType *string `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds *int `pulumi:"numLocalSsds"`
}

type ClusterClusterConfigMasterConfigDiskConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigDiskConfigArgsOutput() ClusterClusterConfigMasterConfigDiskConfigArgsOutput
	ToClusterClusterConfigMasterConfigDiskConfigArgsOutputWithContext(context.Context) ClusterClusterConfigMasterConfigDiskConfigArgsOutput
}

type ClusterClusterConfigMasterConfigDiskConfigArgsArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb pulumi.IntPtrInput `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds pulumi.IntPtrInput `pulumi:"numLocalSsds"`
}

func (ClusterClusterConfigMasterConfigDiskConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigDiskConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigMasterConfigDiskConfigArgsArgs) ToClusterClusterConfigMasterConfigDiskConfigArgsOutput() ClusterClusterConfigMasterConfigDiskConfigArgsOutput {
	return i.ToClusterClusterConfigMasterConfigDiskConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigDiskConfigArgsArgs) ToClusterClusterConfigMasterConfigDiskConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigDiskConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigDiskConfigArgsOutput)
}

func (i ClusterClusterConfigMasterConfigDiskConfigArgsArgs) ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput() ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return i.ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigMasterConfigDiskConfigArgsArgs) ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigDiskConfigArgsOutput).ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigMasterConfigDiskConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput() ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput
	ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput
}

type clusterClusterConfigMasterConfigDiskConfigArgsPtrType ClusterClusterConfigMasterConfigDiskConfigArgsArgs

func ClusterClusterConfigMasterConfigDiskConfigArgsPtr(v *ClusterClusterConfigMasterConfigDiskConfigArgsArgs) ClusterClusterConfigMasterConfigDiskConfigArgsPtrInput {
	return (*clusterClusterConfigMasterConfigDiskConfigArgsPtrType)(v)
}

func (*clusterClusterConfigMasterConfigDiskConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigMasterConfigDiskConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigMasterConfigDiskConfigArgsPtrType) ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput() ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return i.ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigMasterConfigDiskConfigArgsPtrType) ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput)
}

type ClusterClusterConfigMasterConfigDiskConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigDiskConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigMasterConfigDiskConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigDiskConfigArgsOutput) ToClusterClusterConfigMasterConfigDiskConfigArgsOutput() ClusterClusterConfigMasterConfigDiskConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigDiskConfigArgsOutput) ToClusterClusterConfigMasterConfigDiskConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigDiskConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigDiskConfigArgsOutput) ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput() ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return o.ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigMasterConfigDiskConfigArgsOutput) ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfigArgs) *ClusterClusterConfigMasterConfigDiskConfigArgs {
		return &v
	}).(ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigMasterConfigDiskConfigArgsOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfigArgs) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigMasterConfigDiskConfigArgsOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfigArgs) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigMasterConfigDiskConfigArgsOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfigArgs) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigMasterConfigDiskConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput) ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput() ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput) ToClusterClusterConfigMasterConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput) Elem() ClusterClusterConfigMasterConfigDiskConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigMasterConfigDiskConfigArgs) ClusterClusterConfigMasterConfigDiskConfigArgs {
		return *v
	}).(ClusterClusterConfigMasterConfigDiskConfigArgsOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfigArgs) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfigArgs) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigMasterConfigDiskConfigArgs) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfig struct {
	// Disk Config
	DiskConfig    ClusterClusterConfigPreemptibleWorkerConfigDiskConfig `pulumi:"diskConfig"`
	InstanceNames []string                                              `pulumi:"instanceNames"`
	NumInstances  int                                                   `pulumi:"numInstances"`
}

type ClusterClusterConfigPreemptibleWorkerConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigPreemptibleWorkerConfigOutput() ClusterClusterConfigPreemptibleWorkerConfigOutput
	ToClusterClusterConfigPreemptibleWorkerConfigOutputWithContext(context.Context) ClusterClusterConfigPreemptibleWorkerConfigOutput
}

type ClusterClusterConfigPreemptibleWorkerConfigArgs struct {
	// Disk Config
	DiskConfig    ClusterClusterConfigPreemptibleWorkerConfigDiskConfigInput `pulumi:"diskConfig"`
	InstanceNames pulumi.StringArrayInput                                    `pulumi:"instanceNames"`
	NumInstances  pulumi.IntInput                                            `pulumi:"numInstances"`
}

func (ClusterClusterConfigPreemptibleWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigPreemptibleWorkerConfig)(nil)).Elem()
}

func (i ClusterClusterConfigPreemptibleWorkerConfigArgs) ToClusterClusterConfigPreemptibleWorkerConfigOutput() ClusterClusterConfigPreemptibleWorkerConfigOutput {
	return i.ToClusterClusterConfigPreemptibleWorkerConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigPreemptibleWorkerConfigArgs) ToClusterClusterConfigPreemptibleWorkerConfigOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigPreemptibleWorkerConfigOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigPreemptibleWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigPreemptibleWorkerConfig)(nil)).Elem()
}

func (o ClusterClusterConfigPreemptibleWorkerConfigOutput) ToClusterClusterConfigPreemptibleWorkerConfigOutput() ClusterClusterConfigPreemptibleWorkerConfigOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigOutput) ToClusterClusterConfigPreemptibleWorkerConfigOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigOutput {
	return o
}

// Disk Config
func (o ClusterClusterConfigPreemptibleWorkerConfigOutput) DiskConfig() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfig) ClusterClusterConfigPreemptibleWorkerConfigDiskConfig {
		return v.DiskConfig
	}).(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput)
}

func (o ClusterClusterConfigPreemptibleWorkerConfigOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfig) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

func (o ClusterClusterConfigPreemptibleWorkerConfigOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfig) int { return v.NumInstances }).(pulumi.IntOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfigArgs struct {
	// Disk Config
	DiskConfig    *ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs `pulumi:"diskConfig"`
	InstanceNames []string                                                   `pulumi:"instanceNames"`
	NumInstances  *int                                                       `pulumi:"numInstances"`
}

type ClusterClusterConfigPreemptibleWorkerConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigPreemptibleWorkerConfigArgsOutput() ClusterClusterConfigPreemptibleWorkerConfigArgsOutput
	ToClusterClusterConfigPreemptibleWorkerConfigArgsOutputWithContext(context.Context) ClusterClusterConfigPreemptibleWorkerConfigArgsOutput
}

type ClusterClusterConfigPreemptibleWorkerConfigArgsArgs struct {
	// Disk Config
	DiskConfig    ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrInput `pulumi:"diskConfig"`
	InstanceNames pulumi.StringArrayInput                                           `pulumi:"instanceNames"`
	NumInstances  pulumi.IntPtrInput                                                `pulumi:"numInstances"`
}

func (ClusterClusterConfigPreemptibleWorkerConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigPreemptibleWorkerConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigPreemptibleWorkerConfigArgsArgs) ToClusterClusterConfigPreemptibleWorkerConfigArgsOutput() ClusterClusterConfigPreemptibleWorkerConfigArgsOutput {
	return i.ToClusterClusterConfigPreemptibleWorkerConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigPreemptibleWorkerConfigArgsArgs) ToClusterClusterConfigPreemptibleWorkerConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigPreemptibleWorkerConfigArgsOutput)
}

func (i ClusterClusterConfigPreemptibleWorkerConfigArgsArgs) ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return i.ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigPreemptibleWorkerConfigArgsArgs) ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigPreemptibleWorkerConfigArgsOutput).ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigPreemptibleWorkerConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput
	ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput
}

type clusterClusterConfigPreemptibleWorkerConfigArgsPtrType ClusterClusterConfigPreemptibleWorkerConfigArgsArgs

func ClusterClusterConfigPreemptibleWorkerConfigArgsPtr(v *ClusterClusterConfigPreemptibleWorkerConfigArgsArgs) ClusterClusterConfigPreemptibleWorkerConfigArgsPtrInput {
	return (*clusterClusterConfigPreemptibleWorkerConfigArgsPtrType)(v)
}

func (*clusterClusterConfigPreemptibleWorkerConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigPreemptibleWorkerConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigPreemptibleWorkerConfigArgsPtrType) ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return i.ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigPreemptibleWorkerConfigArgsPtrType) ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigPreemptibleWorkerConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigPreemptibleWorkerConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsOutput) ToClusterClusterConfigPreemptibleWorkerConfigArgsOutput() ClusterClusterConfigPreemptibleWorkerConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsOutput) ToClusterClusterConfigPreemptibleWorkerConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsOutput) ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return o.ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsOutput) ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigArgs) *ClusterClusterConfigPreemptibleWorkerConfigArgs {
		return &v
	}).(ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput)
}

// Disk Config
func (o ClusterClusterConfigPreemptibleWorkerConfigArgsOutput) DiskConfig() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigArgs) *ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs {
		return v.DiskConfig
	}).(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput)
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigArgs) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigArgs) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigPreemptibleWorkerConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput) ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput) ToClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput) Elem() ClusterClusterConfigPreemptibleWorkerConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigPreemptibleWorkerConfigArgs) ClusterClusterConfigPreemptibleWorkerConfigArgs {
		return *v
	}).(ClusterClusterConfigPreemptibleWorkerConfigArgsOutput)
}

// Disk Config
func (o ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput) DiskConfig() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigArgs) *ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs {
		return v.DiskConfig
	}).(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput)
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigArgs) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

func (o ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigArgs) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfig struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb int `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType *string `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds int `pulumi:"numLocalSsds"`
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput
	ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutputWithContext(context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb pulumi.IntInput `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds pulumi.IntInput `pulumi:"numLocalSsds"`
}

func (ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigPreemptibleWorkerConfigDiskConfig)(nil)).Elem()
}

func (i ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput {
	return i.ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigPreemptibleWorkerConfigDiskConfig)(nil)).Elem()
}

func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput {
	return o
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput) BootDiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfig) int { return v.BootDiskSizeGb }).(pulumi.IntOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput) NumLocalSsds() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfig) int { return v.NumLocalSsds }).(pulumi.IntOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb *int `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType *string `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds *int `pulumi:"numLocalSsds"`
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput
	ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutputWithContext(context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb pulumi.IntPtrInput `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds pulumi.IntPtrInput `pulumi:"numLocalSsds"`
}

func (ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsArgs) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput {
	return i.ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsArgs) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput)
}

func (i ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsArgs) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return i.ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsArgs) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput).ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput
	ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput
}

type clusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrType ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsArgs

func ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtr(v *ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsArgs) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrInput {
	return (*clusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrType)(v)
}

func (*clusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrType) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return i.ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrType) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return o.ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) *ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs {
		return &v
	}).(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput) ToClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput) Elem() ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs {
		return *v
	}).(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigSecurityConfig struct {
	// Kerberos Configuration
	KerberosConfig ClusterClusterConfigSecurityConfigKerberosConfig `pulumi:"kerberosConfig"`
}

type ClusterClusterConfigSecurityConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigSecurityConfigOutput() ClusterClusterConfigSecurityConfigOutput
	ToClusterClusterConfigSecurityConfigOutputWithContext(context.Context) ClusterClusterConfigSecurityConfigOutput
}

type ClusterClusterConfigSecurityConfigArgs struct {
	// Kerberos Configuration
	KerberosConfig ClusterClusterConfigSecurityConfigKerberosConfigInput `pulumi:"kerberosConfig"`
}

func (ClusterClusterConfigSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSecurityConfig)(nil)).Elem()
}

func (i ClusterClusterConfigSecurityConfigArgs) ToClusterClusterConfigSecurityConfigOutput() ClusterClusterConfigSecurityConfigOutput {
	return i.ToClusterClusterConfigSecurityConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigSecurityConfigArgs) ToClusterClusterConfigSecurityConfigOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSecurityConfigOutput)
}

func (i ClusterClusterConfigSecurityConfigArgs) ToClusterClusterConfigSecurityConfigPtrOutput() ClusterClusterConfigSecurityConfigPtrOutput {
	return i.ToClusterClusterConfigSecurityConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigSecurityConfigArgs) ToClusterClusterConfigSecurityConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSecurityConfigOutput).ToClusterClusterConfigSecurityConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigSecurityConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigSecurityConfigPtrOutput() ClusterClusterConfigSecurityConfigPtrOutput
	ToClusterClusterConfigSecurityConfigPtrOutputWithContext(context.Context) ClusterClusterConfigSecurityConfigPtrOutput
}

type clusterClusterConfigSecurityConfigPtrType ClusterClusterConfigSecurityConfigArgs

func ClusterClusterConfigSecurityConfigPtr(v *ClusterClusterConfigSecurityConfigArgs) ClusterClusterConfigSecurityConfigPtrInput {
	return (*clusterClusterConfigSecurityConfigPtrType)(v)
}

func (*clusterClusterConfigSecurityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigSecurityConfig)(nil)).Elem()
}

func (i *clusterClusterConfigSecurityConfigPtrType) ToClusterClusterConfigSecurityConfigPtrOutput() ClusterClusterConfigSecurityConfigPtrOutput {
	return i.ToClusterClusterConfigSecurityConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigSecurityConfigPtrType) ToClusterClusterConfigSecurityConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSecurityConfigPtrOutput)
}

type ClusterClusterConfigSecurityConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSecurityConfig)(nil)).Elem()
}

func (o ClusterClusterConfigSecurityConfigOutput) ToClusterClusterConfigSecurityConfigOutput() ClusterClusterConfigSecurityConfigOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigOutput) ToClusterClusterConfigSecurityConfigOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigOutput) ToClusterClusterConfigSecurityConfigPtrOutput() ClusterClusterConfigSecurityConfigPtrOutput {
	return o.ToClusterClusterConfigSecurityConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigSecurityConfigOutput) ToClusterClusterConfigSecurityConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfig) *ClusterClusterConfigSecurityConfig {
		return &v
	}).(ClusterClusterConfigSecurityConfigPtrOutput)
}

// Kerberos Configuration
func (o ClusterClusterConfigSecurityConfigOutput) KerberosConfig() ClusterClusterConfigSecurityConfigKerberosConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfig) ClusterClusterConfigSecurityConfigKerberosConfig {
		return v.KerberosConfig
	}).(ClusterClusterConfigSecurityConfigKerberosConfigOutput)
}

type ClusterClusterConfigSecurityConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigSecurityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigSecurityConfig)(nil)).Elem()
}

func (o ClusterClusterConfigSecurityConfigPtrOutput) ToClusterClusterConfigSecurityConfigPtrOutput() ClusterClusterConfigSecurityConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigPtrOutput) ToClusterClusterConfigSecurityConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigPtrOutput) Elem() ClusterClusterConfigSecurityConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigSecurityConfig) ClusterClusterConfigSecurityConfig { return *v }).(ClusterClusterConfigSecurityConfigOutput)
}

// Kerberos Configuration
func (o ClusterClusterConfigSecurityConfigPtrOutput) KerberosConfig() ClusterClusterConfigSecurityConfigKerberosConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfig) ClusterClusterConfigSecurityConfigKerberosConfig {
		return v.KerberosConfig
	}).(ClusterClusterConfigSecurityConfigKerberosConfigOutput)
}

type ClusterClusterConfigSecurityConfigArgs struct {
	// Kerberos Configuration
	KerberosConfig ClusterClusterConfigSecurityConfigKerberosConfigArgs `pulumi:"kerberosConfig"`
}

type ClusterClusterConfigSecurityConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigSecurityConfigArgsOutput() ClusterClusterConfigSecurityConfigArgsOutput
	ToClusterClusterConfigSecurityConfigArgsOutputWithContext(context.Context) ClusterClusterConfigSecurityConfigArgsOutput
}

type ClusterClusterConfigSecurityConfigArgsArgs struct {
	// Kerberos Configuration
	KerberosConfig ClusterClusterConfigSecurityConfigKerberosConfigArgsInput `pulumi:"kerberosConfig"`
}

func (ClusterClusterConfigSecurityConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSecurityConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigSecurityConfigArgsArgs) ToClusterClusterConfigSecurityConfigArgsOutput() ClusterClusterConfigSecurityConfigArgsOutput {
	return i.ToClusterClusterConfigSecurityConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigSecurityConfigArgsArgs) ToClusterClusterConfigSecurityConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSecurityConfigArgsOutput)
}

func (i ClusterClusterConfigSecurityConfigArgsArgs) ToClusterClusterConfigSecurityConfigArgsPtrOutput() ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return i.ToClusterClusterConfigSecurityConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigSecurityConfigArgsArgs) ToClusterClusterConfigSecurityConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSecurityConfigArgsOutput).ToClusterClusterConfigSecurityConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigSecurityConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigSecurityConfigArgsPtrOutput() ClusterClusterConfigSecurityConfigArgsPtrOutput
	ToClusterClusterConfigSecurityConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigSecurityConfigArgsPtrOutput
}

type clusterClusterConfigSecurityConfigArgsPtrType ClusterClusterConfigSecurityConfigArgsArgs

func ClusterClusterConfigSecurityConfigArgsPtr(v *ClusterClusterConfigSecurityConfigArgsArgs) ClusterClusterConfigSecurityConfigArgsPtrInput {
	return (*clusterClusterConfigSecurityConfigArgsPtrType)(v)
}

func (*clusterClusterConfigSecurityConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigSecurityConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigSecurityConfigArgsPtrType) ToClusterClusterConfigSecurityConfigArgsPtrOutput() ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return i.ToClusterClusterConfigSecurityConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigSecurityConfigArgsPtrType) ToClusterClusterConfigSecurityConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSecurityConfigArgsPtrOutput)
}

type ClusterClusterConfigSecurityConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigSecurityConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSecurityConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigSecurityConfigArgsOutput) ToClusterClusterConfigSecurityConfigArgsOutput() ClusterClusterConfigSecurityConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigArgsOutput) ToClusterClusterConfigSecurityConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigArgsOutput) ToClusterClusterConfigSecurityConfigArgsPtrOutput() ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return o.ToClusterClusterConfigSecurityConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigSecurityConfigArgsOutput) ToClusterClusterConfigSecurityConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigArgs) *ClusterClusterConfigSecurityConfigArgs {
		return &v
	}).(ClusterClusterConfigSecurityConfigArgsPtrOutput)
}

// Kerberos Configuration
func (o ClusterClusterConfigSecurityConfigArgsOutput) KerberosConfig() ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigArgs) ClusterClusterConfigSecurityConfigKerberosConfigArgs {
		return v.KerberosConfig
	}).(ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput)
}

type ClusterClusterConfigSecurityConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigSecurityConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigSecurityConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigSecurityConfigArgsPtrOutput) ToClusterClusterConfigSecurityConfigArgsPtrOutput() ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigArgsPtrOutput) ToClusterClusterConfigSecurityConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigArgsPtrOutput) Elem() ClusterClusterConfigSecurityConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigSecurityConfigArgs) ClusterClusterConfigSecurityConfigArgs { return *v }).(ClusterClusterConfigSecurityConfigArgsOutput)
}

// Kerberos Configuration
func (o ClusterClusterConfigSecurityConfigArgsPtrOutput) KerberosConfig() ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigArgs) ClusterClusterConfigSecurityConfigKerberosConfigArgs {
		return v.KerberosConfig
	}).(ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput)
}

type ClusterClusterConfigSecurityConfigKerberosConfig struct {
	// The admin server (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer *string `pulumi:"crossRealmTrustAdminServer"`
	// The KDC (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc *string `pulumi:"crossRealmTrustKdc"`
	// The remote realm the Dataproc on-cluster KDC will
	// trust, should the user enable cross realm trust.
	CrossRealmTrustRealm *string `pulumi:"crossRealmTrustRealm"`
	// The Cloud Storage URI of a KMS
	// encrypted file containing the shared password between the on-cluster Kerberos realm
	// and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri *string `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Flag to indicate whether to Kerberize the cluster.
	EnableKerberos *bool `pulumi:"enableKerberos"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the master key of the KDC database.
	KdcDbKeyUri *string `pulumi:"kdcDbKeyUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided key. For the self-signed certificate, this password
	// is generated by Dataproc.
	KeyPasswordUri *string `pulumi:"keyPasswordUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided keystore. For the self-signed certificated, the password
	// is generated by Dataproc.
	KeystorePasswordUri *string `pulumi:"keystorePasswordUri"`
	// The Cloud Storage URI of the keystore file used for SSL encryption.
	// If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri *string `pulumi:"keystoreUri"`
	// The URI of the KMS key used to encrypt various sensitive files.
	KmsKeyUri string `pulumi:"kmsKeyUri"`
	// The name of the on-cluster Kerberos realm. If not specified, the
	// uppercased domain of hostnames will be the realm.
	Realm *string `pulumi:"realm"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the root principal password.
	RootPrincipalPasswordUri string `pulumi:"rootPrincipalPasswordUri"`
	// The lifetime of the ticket granting ticket, in hours.
	TgtLifetimeHours *int `pulumi:"tgtLifetimeHours"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the password to the user provided truststore. For the self-signed
	// certificate, this password is generated by Dataproc.
	TruststorePasswordUri *string `pulumi:"truststorePasswordUri"`
	// The Cloud Storage URI of the truststore file used for
	// SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri *string `pulumi:"truststoreUri"`
}

type ClusterClusterConfigSecurityConfigKerberosConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigSecurityConfigKerberosConfigOutput() ClusterClusterConfigSecurityConfigKerberosConfigOutput
	ToClusterClusterConfigSecurityConfigKerberosConfigOutputWithContext(context.Context) ClusterClusterConfigSecurityConfigKerberosConfigOutput
}

type ClusterClusterConfigSecurityConfigKerberosConfigArgs struct {
	// The admin server (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer pulumi.StringPtrInput `pulumi:"crossRealmTrustAdminServer"`
	// The KDC (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc pulumi.StringPtrInput `pulumi:"crossRealmTrustKdc"`
	// The remote realm the Dataproc on-cluster KDC will
	// trust, should the user enable cross realm trust.
	CrossRealmTrustRealm pulumi.StringPtrInput `pulumi:"crossRealmTrustRealm"`
	// The Cloud Storage URI of a KMS
	// encrypted file containing the shared password between the on-cluster Kerberos realm
	// and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri pulumi.StringPtrInput `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Flag to indicate whether to Kerberize the cluster.
	EnableKerberos pulumi.BoolPtrInput `pulumi:"enableKerberos"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the master key of the KDC database.
	KdcDbKeyUri pulumi.StringPtrInput `pulumi:"kdcDbKeyUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided key. For the self-signed certificate, this password
	// is generated by Dataproc.
	KeyPasswordUri pulumi.StringPtrInput `pulumi:"keyPasswordUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided keystore. For the self-signed certificated, the password
	// is generated by Dataproc.
	KeystorePasswordUri pulumi.StringPtrInput `pulumi:"keystorePasswordUri"`
	// The Cloud Storage URI of the keystore file used for SSL encryption.
	// If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri pulumi.StringPtrInput `pulumi:"keystoreUri"`
	// The URI of the KMS key used to encrypt various sensitive files.
	KmsKeyUri pulumi.StringInput `pulumi:"kmsKeyUri"`
	// The name of the on-cluster Kerberos realm. If not specified, the
	// uppercased domain of hostnames will be the realm.
	Realm pulumi.StringPtrInput `pulumi:"realm"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the root principal password.
	RootPrincipalPasswordUri pulumi.StringInput `pulumi:"rootPrincipalPasswordUri"`
	// The lifetime of the ticket granting ticket, in hours.
	TgtLifetimeHours pulumi.IntPtrInput `pulumi:"tgtLifetimeHours"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the password to the user provided truststore. For the self-signed
	// certificate, this password is generated by Dataproc.
	TruststorePasswordUri pulumi.StringPtrInput `pulumi:"truststorePasswordUri"`
	// The Cloud Storage URI of the truststore file used for
	// SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri pulumi.StringPtrInput `pulumi:"truststoreUri"`
}

func (ClusterClusterConfigSecurityConfigKerberosConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSecurityConfigKerberosConfig)(nil)).Elem()
}

func (i ClusterClusterConfigSecurityConfigKerberosConfigArgs) ToClusterClusterConfigSecurityConfigKerberosConfigOutput() ClusterClusterConfigSecurityConfigKerberosConfigOutput {
	return i.ToClusterClusterConfigSecurityConfigKerberosConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigSecurityConfigKerberosConfigArgs) ToClusterClusterConfigSecurityConfigKerberosConfigOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigKerberosConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSecurityConfigKerberosConfigOutput)
}

type ClusterClusterConfigSecurityConfigKerberosConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigSecurityConfigKerberosConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSecurityConfigKerberosConfig)(nil)).Elem()
}

func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) ToClusterClusterConfigSecurityConfigKerberosConfigOutput() ClusterClusterConfigSecurityConfigKerberosConfigOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) ToClusterClusterConfigSecurityConfigKerberosConfigOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigKerberosConfigOutput {
	return o
}

// The admin server (IP or hostname) for the
// remote trusted realm in a cross realm trust relationship.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) CrossRealmTrustAdminServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.CrossRealmTrustAdminServer }).(pulumi.StringPtrOutput)
}

// The KDC (IP or hostname) for the
// remote trusted realm in a cross realm trust relationship.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) CrossRealmTrustKdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.CrossRealmTrustKdc }).(pulumi.StringPtrOutput)
}

// The remote realm the Dataproc on-cluster KDC will
// trust, should the user enable cross realm trust.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) CrossRealmTrustRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.CrossRealmTrustRealm }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS
// encrypted file containing the shared password between the on-cluster Kerberos realm
// and the remote trusted realm, in a cross realm trust relationship.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) CrossRealmTrustSharedPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string {
		return v.CrossRealmTrustSharedPasswordUri
	}).(pulumi.StringPtrOutput)
}

// Flag to indicate whether to Kerberize the cluster.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) EnableKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *bool { return v.EnableKerberos }).(pulumi.BoolPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file containing
// the master key of the KDC database.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) KdcDbKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.KdcDbKeyUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file containing
// the password to the user provided key. For the self-signed certificate, this password
// is generated by Dataproc.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) KeyPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.KeyPasswordUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file containing
// the password to the user provided keystore. For the self-signed certificated, the password
// is generated by Dataproc.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) KeystorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.KeystorePasswordUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of the keystore file used for SSL encryption.
// If not provided, Dataproc will provide a self-signed certificate.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) KeystoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.KeystoreUri }).(pulumi.StringPtrOutput)
}

// The URI of the KMS key used to encrypt various sensitive files.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) KmsKeyUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) string { return v.KmsKeyUri }).(pulumi.StringOutput)
}

// The name of the on-cluster Kerberos realm. If not specified, the
// uppercased domain of hostnames will be the realm.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.Realm }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file
// containing the root principal password.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) RootPrincipalPasswordUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) string { return v.RootPrincipalPasswordUri }).(pulumi.StringOutput)
}

// The lifetime of the ticket granting ticket, in hours.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) TgtLifetimeHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *int { return v.TgtLifetimeHours }).(pulumi.IntPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file
// containing the password to the user provided truststore. For the self-signed
// certificate, this password is generated by Dataproc.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) TruststorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.TruststorePasswordUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of the truststore file used for
// SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o ClusterClusterConfigSecurityConfigKerberosConfigOutput) TruststoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfig) *string { return v.TruststoreUri }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigSecurityConfigKerberosConfigArgs struct {
	// The admin server (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer *string `pulumi:"crossRealmTrustAdminServer"`
	// The KDC (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc *string `pulumi:"crossRealmTrustKdc"`
	// The remote realm the Dataproc on-cluster KDC will
	// trust, should the user enable cross realm trust.
	CrossRealmTrustRealm *string `pulumi:"crossRealmTrustRealm"`
	// The Cloud Storage URI of a KMS
	// encrypted file containing the shared password between the on-cluster Kerberos realm
	// and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri *string `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Flag to indicate whether to Kerberize the cluster.
	EnableKerberos *bool `pulumi:"enableKerberos"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the master key of the KDC database.
	KdcDbKeyUri *string `pulumi:"kdcDbKeyUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided key. For the self-signed certificate, this password
	// is generated by Dataproc.
	KeyPasswordUri *string `pulumi:"keyPasswordUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided keystore. For the self-signed certificated, the password
	// is generated by Dataproc.
	KeystorePasswordUri *string `pulumi:"keystorePasswordUri"`
	// The Cloud Storage URI of the keystore file used for SSL encryption.
	// If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri *string `pulumi:"keystoreUri"`
	// The URI of the KMS key used to encrypt various sensitive files.
	KmsKeyUri string `pulumi:"kmsKeyUri"`
	// The name of the on-cluster Kerberos realm. If not specified, the
	// uppercased domain of hostnames will be the realm.
	Realm *string `pulumi:"realm"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the root principal password.
	RootPrincipalPasswordUri string `pulumi:"rootPrincipalPasswordUri"`
	// The lifetime of the ticket granting ticket, in hours.
	TgtLifetimeHours *int `pulumi:"tgtLifetimeHours"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the password to the user provided truststore. For the self-signed
	// certificate, this password is generated by Dataproc.
	TruststorePasswordUri *string `pulumi:"truststorePasswordUri"`
	// The Cloud Storage URI of the truststore file used for
	// SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri *string `pulumi:"truststoreUri"`
}

type ClusterClusterConfigSecurityConfigKerberosConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigSecurityConfigKerberosConfigArgsOutput() ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput
	ToClusterClusterConfigSecurityConfigKerberosConfigArgsOutputWithContext(context.Context) ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput
}

type ClusterClusterConfigSecurityConfigKerberosConfigArgsArgs struct {
	// The admin server (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer pulumi.StringPtrInput `pulumi:"crossRealmTrustAdminServer"`
	// The KDC (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc pulumi.StringPtrInput `pulumi:"crossRealmTrustKdc"`
	// The remote realm the Dataproc on-cluster KDC will
	// trust, should the user enable cross realm trust.
	CrossRealmTrustRealm pulumi.StringPtrInput `pulumi:"crossRealmTrustRealm"`
	// The Cloud Storage URI of a KMS
	// encrypted file containing the shared password between the on-cluster Kerberos realm
	// and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri pulumi.StringPtrInput `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Flag to indicate whether to Kerberize the cluster.
	EnableKerberos pulumi.BoolPtrInput `pulumi:"enableKerberos"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the master key of the KDC database.
	KdcDbKeyUri pulumi.StringPtrInput `pulumi:"kdcDbKeyUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided key. For the self-signed certificate, this password
	// is generated by Dataproc.
	KeyPasswordUri pulumi.StringPtrInput `pulumi:"keyPasswordUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided keystore. For the self-signed certificated, the password
	// is generated by Dataproc.
	KeystorePasswordUri pulumi.StringPtrInput `pulumi:"keystorePasswordUri"`
	// The Cloud Storage URI of the keystore file used for SSL encryption.
	// If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri pulumi.StringPtrInput `pulumi:"keystoreUri"`
	// The URI of the KMS key used to encrypt various sensitive files.
	KmsKeyUri pulumi.StringInput `pulumi:"kmsKeyUri"`
	// The name of the on-cluster Kerberos realm. If not specified, the
	// uppercased domain of hostnames will be the realm.
	Realm pulumi.StringPtrInput `pulumi:"realm"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the root principal password.
	RootPrincipalPasswordUri pulumi.StringInput `pulumi:"rootPrincipalPasswordUri"`
	// The lifetime of the ticket granting ticket, in hours.
	TgtLifetimeHours pulumi.IntPtrInput `pulumi:"tgtLifetimeHours"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the password to the user provided truststore. For the self-signed
	// certificate, this password is generated by Dataproc.
	TruststorePasswordUri pulumi.StringPtrInput `pulumi:"truststorePasswordUri"`
	// The Cloud Storage URI of the truststore file used for
	// SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri pulumi.StringPtrInput `pulumi:"truststoreUri"`
}

func (ClusterClusterConfigSecurityConfigKerberosConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSecurityConfigKerberosConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigSecurityConfigKerberosConfigArgsArgs) ToClusterClusterConfigSecurityConfigKerberosConfigArgsOutput() ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput {
	return i.ToClusterClusterConfigSecurityConfigKerberosConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigSecurityConfigKerberosConfigArgsArgs) ToClusterClusterConfigSecurityConfigKerberosConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput)
}

type ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSecurityConfigKerberosConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) ToClusterClusterConfigSecurityConfigKerberosConfigArgsOutput() ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) ToClusterClusterConfigSecurityConfigKerberosConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput {
	return o
}

// The admin server (IP or hostname) for the
// remote trusted realm in a cross realm trust relationship.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) CrossRealmTrustAdminServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string {
		return v.CrossRealmTrustAdminServer
	}).(pulumi.StringPtrOutput)
}

// The KDC (IP or hostname) for the
// remote trusted realm in a cross realm trust relationship.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) CrossRealmTrustKdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string { return v.CrossRealmTrustKdc }).(pulumi.StringPtrOutput)
}

// The remote realm the Dataproc on-cluster KDC will
// trust, should the user enable cross realm trust.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) CrossRealmTrustRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string { return v.CrossRealmTrustRealm }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS
// encrypted file containing the shared password between the on-cluster Kerberos realm
// and the remote trusted realm, in a cross realm trust relationship.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) CrossRealmTrustSharedPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string {
		return v.CrossRealmTrustSharedPasswordUri
	}).(pulumi.StringPtrOutput)
}

// Flag to indicate whether to Kerberize the cluster.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) EnableKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *bool { return v.EnableKerberos }).(pulumi.BoolPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file containing
// the master key of the KDC database.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) KdcDbKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string { return v.KdcDbKeyUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file containing
// the password to the user provided key. For the self-signed certificate, this password
// is generated by Dataproc.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) KeyPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string { return v.KeyPasswordUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file containing
// the password to the user provided keystore. For the self-signed certificated, the password
// is generated by Dataproc.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) KeystorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string { return v.KeystorePasswordUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of the keystore file used for SSL encryption.
// If not provided, Dataproc will provide a self-signed certificate.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) KeystoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string { return v.KeystoreUri }).(pulumi.StringPtrOutput)
}

// The URI of the KMS key used to encrypt various sensitive files.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) KmsKeyUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) string { return v.KmsKeyUri }).(pulumi.StringOutput)
}

// The name of the on-cluster Kerberos realm. If not specified, the
// uppercased domain of hostnames will be the realm.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string { return v.Realm }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file
// containing the root principal password.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) RootPrincipalPasswordUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) string {
		return v.RootPrincipalPasswordUri
	}).(pulumi.StringOutput)
}

// The lifetime of the ticket granting ticket, in hours.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) TgtLifetimeHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *int { return v.TgtLifetimeHours }).(pulumi.IntPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file
// containing the password to the user provided truststore. For the self-signed
// certificate, this password is generated by Dataproc.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) TruststorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string { return v.TruststorePasswordUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of the truststore file used for
// SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput) TruststoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSecurityConfigKerberosConfigArgs) *string { return v.TruststoreUri }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigSoftwareConfig struct {
	// The Cloud Dataproc image version to use
	// for the cluster - this controls the sets of software versions
	// installed onto the nodes when you create clusters. If not specified, defaults to the
	// latest version. For a list of valid versions see
	// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
	ImageVersion       string   `pulumi:"imageVersion"`
	OptionalComponents []string `pulumi:"optionalComponents"`
	// A list of override and additional properties (key/value pairs)
	// used to modify various aspects of the common configuration files used when creating
	// a cluster. For a list of valid properties please see
	// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
	OverrideProperties map[string]string      `pulumi:"overrideProperties"`
	Properties         map[string]interface{} `pulumi:"properties"`
}

type ClusterClusterConfigSoftwareConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigSoftwareConfigOutput() ClusterClusterConfigSoftwareConfigOutput
	ToClusterClusterConfigSoftwareConfigOutputWithContext(context.Context) ClusterClusterConfigSoftwareConfigOutput
}

type ClusterClusterConfigSoftwareConfigArgs struct {
	// The Cloud Dataproc image version to use
	// for the cluster - this controls the sets of software versions
	// installed onto the nodes when you create clusters. If not specified, defaults to the
	// latest version. For a list of valid versions see
	// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
	ImageVersion       pulumi.StringInput      `pulumi:"imageVersion"`
	OptionalComponents pulumi.StringArrayInput `pulumi:"optionalComponents"`
	// A list of override and additional properties (key/value pairs)
	// used to modify various aspects of the common configuration files used when creating
	// a cluster. For a list of valid properties please see
	// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
	OverrideProperties pulumi.StringMapInput `pulumi:"overrideProperties"`
	Properties         pulumi.MapInput       `pulumi:"properties"`
}

func (ClusterClusterConfigSoftwareConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSoftwareConfig)(nil)).Elem()
}

func (i ClusterClusterConfigSoftwareConfigArgs) ToClusterClusterConfigSoftwareConfigOutput() ClusterClusterConfigSoftwareConfigOutput {
	return i.ToClusterClusterConfigSoftwareConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigSoftwareConfigArgs) ToClusterClusterConfigSoftwareConfigOutputWithContext(ctx context.Context) ClusterClusterConfigSoftwareConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSoftwareConfigOutput)
}

type ClusterClusterConfigSoftwareConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigSoftwareConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSoftwareConfig)(nil)).Elem()
}

func (o ClusterClusterConfigSoftwareConfigOutput) ToClusterClusterConfigSoftwareConfigOutput() ClusterClusterConfigSoftwareConfigOutput {
	return o
}

func (o ClusterClusterConfigSoftwareConfigOutput) ToClusterClusterConfigSoftwareConfigOutputWithContext(ctx context.Context) ClusterClusterConfigSoftwareConfigOutput {
	return o
}

// The Cloud Dataproc image version to use
// for the cluster - this controls the sets of software versions
// installed onto the nodes when you create clusters. If not specified, defaults to the
// latest version. For a list of valid versions see
// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
func (o ClusterClusterConfigSoftwareConfigOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfig) string { return v.ImageVersion }).(pulumi.StringOutput)
}

func (o ClusterClusterConfigSoftwareConfigOutput) OptionalComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfig) []string { return v.OptionalComponents }).(pulumi.StringArrayOutput)
}

// A list of override and additional properties (key/value pairs)
// used to modify various aspects of the common configuration files used when creating
// a cluster. For a list of valid properties please see
// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
func (o ClusterClusterConfigSoftwareConfigOutput) OverrideProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfig) map[string]string { return v.OverrideProperties }).(pulumi.StringMapOutput)
}

func (o ClusterClusterConfigSoftwareConfigOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfig) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

type ClusterClusterConfigSoftwareConfigArgs struct {
	// The Cloud Dataproc image version to use
	// for the cluster - this controls the sets of software versions
	// installed onto the nodes when you create clusters. If not specified, defaults to the
	// latest version. For a list of valid versions see
	// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
	ImageVersion       *string  `pulumi:"imageVersion"`
	OptionalComponents []string `pulumi:"optionalComponents"`
	// A list of override and additional properties (key/value pairs)
	// used to modify various aspects of the common configuration files used when creating
	// a cluster. For a list of valid properties please see
	// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
	OverrideProperties map[string]string      `pulumi:"overrideProperties"`
	Properties         map[string]interface{} `pulumi:"properties"`
}

type ClusterClusterConfigSoftwareConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigSoftwareConfigArgsOutput() ClusterClusterConfigSoftwareConfigArgsOutput
	ToClusterClusterConfigSoftwareConfigArgsOutputWithContext(context.Context) ClusterClusterConfigSoftwareConfigArgsOutput
}

type ClusterClusterConfigSoftwareConfigArgsArgs struct {
	// The Cloud Dataproc image version to use
	// for the cluster - this controls the sets of software versions
	// installed onto the nodes when you create clusters. If not specified, defaults to the
	// latest version. For a list of valid versions see
	// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
	ImageVersion       pulumi.StringPtrInput   `pulumi:"imageVersion"`
	OptionalComponents pulumi.StringArrayInput `pulumi:"optionalComponents"`
	// A list of override and additional properties (key/value pairs)
	// used to modify various aspects of the common configuration files used when creating
	// a cluster. For a list of valid properties please see
	// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
	OverrideProperties pulumi.StringMapInput `pulumi:"overrideProperties"`
	Properties         pulumi.MapInput       `pulumi:"properties"`
}

func (ClusterClusterConfigSoftwareConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSoftwareConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigSoftwareConfigArgsArgs) ToClusterClusterConfigSoftwareConfigArgsOutput() ClusterClusterConfigSoftwareConfigArgsOutput {
	return i.ToClusterClusterConfigSoftwareConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigSoftwareConfigArgsArgs) ToClusterClusterConfigSoftwareConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigSoftwareConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSoftwareConfigArgsOutput)
}

func (i ClusterClusterConfigSoftwareConfigArgsArgs) ToClusterClusterConfigSoftwareConfigArgsPtrOutput() ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return i.ToClusterClusterConfigSoftwareConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigSoftwareConfigArgsArgs) ToClusterClusterConfigSoftwareConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSoftwareConfigArgsOutput).ToClusterClusterConfigSoftwareConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigSoftwareConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigSoftwareConfigArgsPtrOutput() ClusterClusterConfigSoftwareConfigArgsPtrOutput
	ToClusterClusterConfigSoftwareConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigSoftwareConfigArgsPtrOutput
}

type clusterClusterConfigSoftwareConfigArgsPtrType ClusterClusterConfigSoftwareConfigArgsArgs

func ClusterClusterConfigSoftwareConfigArgsPtr(v *ClusterClusterConfigSoftwareConfigArgsArgs) ClusterClusterConfigSoftwareConfigArgsPtrInput {
	return (*clusterClusterConfigSoftwareConfigArgsPtrType)(v)
}

func (*clusterClusterConfigSoftwareConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigSoftwareConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigSoftwareConfigArgsPtrType) ToClusterClusterConfigSoftwareConfigArgsPtrOutput() ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return i.ToClusterClusterConfigSoftwareConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigSoftwareConfigArgsPtrType) ToClusterClusterConfigSoftwareConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigSoftwareConfigArgsPtrOutput)
}

type ClusterClusterConfigSoftwareConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigSoftwareConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigSoftwareConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigSoftwareConfigArgsOutput) ToClusterClusterConfigSoftwareConfigArgsOutput() ClusterClusterConfigSoftwareConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigSoftwareConfigArgsOutput) ToClusterClusterConfigSoftwareConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigSoftwareConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigSoftwareConfigArgsOutput) ToClusterClusterConfigSoftwareConfigArgsPtrOutput() ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return o.ToClusterClusterConfigSoftwareConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigSoftwareConfigArgsOutput) ToClusterClusterConfigSoftwareConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfigArgs) *ClusterClusterConfigSoftwareConfigArgs {
		return &v
	}).(ClusterClusterConfigSoftwareConfigArgsPtrOutput)
}

// The Cloud Dataproc image version to use
// for the cluster - this controls the sets of software versions
// installed onto the nodes when you create clusters. If not specified, defaults to the
// latest version. For a list of valid versions see
// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
func (o ClusterClusterConfigSoftwareConfigArgsOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfigArgs) *string { return v.ImageVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigSoftwareConfigArgsOutput) OptionalComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfigArgs) []string { return v.OptionalComponents }).(pulumi.StringArrayOutput)
}

// A list of override and additional properties (key/value pairs)
// used to modify various aspects of the common configuration files used when creating
// a cluster. For a list of valid properties please see
// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
func (o ClusterClusterConfigSoftwareConfigArgsOutput) OverrideProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfigArgs) map[string]string { return v.OverrideProperties }).(pulumi.StringMapOutput)
}

func (o ClusterClusterConfigSoftwareConfigArgsOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfigArgs) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

type ClusterClusterConfigSoftwareConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigSoftwareConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigSoftwareConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigSoftwareConfigArgsPtrOutput) ToClusterClusterConfigSoftwareConfigArgsPtrOutput() ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigSoftwareConfigArgsPtrOutput) ToClusterClusterConfigSoftwareConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigSoftwareConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigSoftwareConfigArgsPtrOutput) Elem() ClusterClusterConfigSoftwareConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigSoftwareConfigArgs) ClusterClusterConfigSoftwareConfigArgs { return *v }).(ClusterClusterConfigSoftwareConfigArgsOutput)
}

// The Cloud Dataproc image version to use
// for the cluster - this controls the sets of software versions
// installed onto the nodes when you create clusters. If not specified, defaults to the
// latest version. For a list of valid versions see
// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
func (o ClusterClusterConfigSoftwareConfigArgsPtrOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfigArgs) *string { return v.ImageVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigSoftwareConfigArgsPtrOutput) OptionalComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfigArgs) []string { return v.OptionalComponents }).(pulumi.StringArrayOutput)
}

// A list of override and additional properties (key/value pairs)
// used to modify various aspects of the common configuration files used when creating
// a cluster. For a list of valid properties please see
// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
func (o ClusterClusterConfigSoftwareConfigArgsPtrOutput) OverrideProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfigArgs) map[string]string { return v.OverrideProperties }).(pulumi.StringMapOutput)
}

func (o ClusterClusterConfigSoftwareConfigArgsPtrOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClusterConfigSoftwareConfigArgs) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

type ClusterClusterConfigState struct {
	// The autoscaling policy config associated with the cluster.
	// Structure defined below.
	AutoscalingConfig *ClusterClusterConfigStateAutoscalingConfig `pulumi:"autoscalingConfig"`
	Bucket            *string                                     `pulumi:"bucket"`
	// The Customer managed encryption keys settings for the cluster.
	// Structure defined below.
	EncryptionConfig *ClusterClusterConfigStateEncryptionConfig `pulumi:"encryptionConfig"`
	// Common config settings for resources of Google Compute Engine cluster
	// instances, applicable to all instances in the cluster. Structure defined below.
	GceClusterConfig *ClusterClusterConfigStateGceClusterConfig `pulumi:"gceClusterConfig"`
	// Commands to execute on each node after config is completed.
	// You can specify multiple versions of these. Structure defined below.
	InitializationActions []ClusterClusterConfigStateInitializationAction `pulumi:"initializationActions"`
	LifecycleConfig       *ClusterClusterConfigStateLifecycleConfig       `pulumi:"lifecycleConfig"`
	// The Google Compute Engine config settings for the master instances
	// in a cluster.. Structure defined below.
	MasterConfig *ClusterClusterConfigStateMasterConfig `pulumi:"masterConfig"`
	// The Google Compute Engine config settings for the additional (aka
	// preemptible) instances in a cluster. Structure defined below.
	PreemptibleWorkerConfig *ClusterClusterConfigStatePreemptibleWorkerConfig `pulumi:"preemptibleWorkerConfig"`
	// Security related configuration. Structure defined below.
	SecurityConfig *ClusterClusterConfigStateSecurityConfig `pulumi:"securityConfig"`
	// The config settings for software inside the cluster.
	// Structure defined below.
	SoftwareConfig *ClusterClusterConfigStateSoftwareConfig `pulumi:"softwareConfig"`
	// The Cloud Storage staging bucket used to stage files,
	// such as Hadoop jars, between client machines and the cluster.
	// Note: If you don't explicitly specify a `stagingBucket`
	// then GCP will auto create / assign one for you. However, you are not guaranteed
	// an auto generated bucket which is solely dedicated to your cluster; it may be shared
	// with other clusters in the same region/zone also choosing to use the auto generation
	// option.
	StagingBucket *string `pulumi:"stagingBucket"`
	// The Google Compute Engine config settings for the worker instances
	// in a cluster.. Structure defined below.
	WorkerConfig *ClusterClusterConfigStateWorkerConfig `pulumi:"workerConfig"`
}

type ClusterClusterConfigStateInput interface {
	pulumi.Input

	ToClusterClusterConfigStateOutput() ClusterClusterConfigStateOutput
	ToClusterClusterConfigStateOutputWithContext(context.Context) ClusterClusterConfigStateOutput
}

type ClusterClusterConfigStateArgs struct {
	// The autoscaling policy config associated with the cluster.
	// Structure defined below.
	AutoscalingConfig ClusterClusterConfigStateAutoscalingConfigPtrInput `pulumi:"autoscalingConfig"`
	Bucket            pulumi.StringPtrInput                              `pulumi:"bucket"`
	// The Customer managed encryption keys settings for the cluster.
	// Structure defined below.
	EncryptionConfig ClusterClusterConfigStateEncryptionConfigPtrInput `pulumi:"encryptionConfig"`
	// Common config settings for resources of Google Compute Engine cluster
	// instances, applicable to all instances in the cluster. Structure defined below.
	GceClusterConfig ClusterClusterConfigStateGceClusterConfigPtrInput `pulumi:"gceClusterConfig"`
	// Commands to execute on each node after config is completed.
	// You can specify multiple versions of these. Structure defined below.
	InitializationActions ClusterClusterConfigStateInitializationActionArrayInput `pulumi:"initializationActions"`
	LifecycleConfig       ClusterClusterConfigStateLifecycleConfigPtrInput        `pulumi:"lifecycleConfig"`
	// The Google Compute Engine config settings for the master instances
	// in a cluster.. Structure defined below.
	MasterConfig ClusterClusterConfigStateMasterConfigPtrInput `pulumi:"masterConfig"`
	// The Google Compute Engine config settings for the additional (aka
	// preemptible) instances in a cluster. Structure defined below.
	PreemptibleWorkerConfig ClusterClusterConfigStatePreemptibleWorkerConfigPtrInput `pulumi:"preemptibleWorkerConfig"`
	// Security related configuration. Structure defined below.
	SecurityConfig ClusterClusterConfigStateSecurityConfigPtrInput `pulumi:"securityConfig"`
	// The config settings for software inside the cluster.
	// Structure defined below.
	SoftwareConfig ClusterClusterConfigStateSoftwareConfigPtrInput `pulumi:"softwareConfig"`
	// The Cloud Storage staging bucket used to stage files,
	// such as Hadoop jars, between client machines and the cluster.
	// Note: If you don't explicitly specify a `stagingBucket`
	// then GCP will auto create / assign one for you. However, you are not guaranteed
	// an auto generated bucket which is solely dedicated to your cluster; it may be shared
	// with other clusters in the same region/zone also choosing to use the auto generation
	// option.
	StagingBucket pulumi.StringPtrInput `pulumi:"stagingBucket"`
	// The Google Compute Engine config settings for the worker instances
	// in a cluster.. Structure defined below.
	WorkerConfig ClusterClusterConfigStateWorkerConfigPtrInput `pulumi:"workerConfig"`
}

func (ClusterClusterConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigState)(nil)).Elem()
}

func (i ClusterClusterConfigStateArgs) ToClusterClusterConfigStateOutput() ClusterClusterConfigStateOutput {
	return i.ToClusterClusterConfigStateOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateArgs) ToClusterClusterConfigStateOutputWithContext(ctx context.Context) ClusterClusterConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateOutput)
}

type ClusterClusterConfigStateOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigState)(nil)).Elem()
}

func (o ClusterClusterConfigStateOutput) ToClusterClusterConfigStateOutput() ClusterClusterConfigStateOutput {
	return o
}

func (o ClusterClusterConfigStateOutput) ToClusterClusterConfigStateOutputWithContext(ctx context.Context) ClusterClusterConfigStateOutput {
	return o
}

// The autoscaling policy config associated with the cluster.
// Structure defined below.
func (o ClusterClusterConfigStateOutput) AutoscalingConfig() ClusterClusterConfigStateAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *ClusterClusterConfigStateAutoscalingConfig {
		return v.AutoscalingConfig
	}).(ClusterClusterConfigStateAutoscalingConfigPtrOutput)
}

func (o ClusterClusterConfigStateOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The Customer managed encryption keys settings for the cluster.
// Structure defined below.
func (o ClusterClusterConfigStateOutput) EncryptionConfig() ClusterClusterConfigStateEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *ClusterClusterConfigStateEncryptionConfig {
		return v.EncryptionConfig
	}).(ClusterClusterConfigStateEncryptionConfigPtrOutput)
}

// Common config settings for resources of Google Compute Engine cluster
// instances, applicable to all instances in the cluster. Structure defined below.
func (o ClusterClusterConfigStateOutput) GceClusterConfig() ClusterClusterConfigStateGceClusterConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *ClusterClusterConfigStateGceClusterConfig {
		return v.GceClusterConfig
	}).(ClusterClusterConfigStateGceClusterConfigPtrOutput)
}

// Commands to execute on each node after config is completed.
// You can specify multiple versions of these. Structure defined below.
func (o ClusterClusterConfigStateOutput) InitializationActions() ClusterClusterConfigStateInitializationActionArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) []ClusterClusterConfigStateInitializationAction {
		return v.InitializationActions
	}).(ClusterClusterConfigStateInitializationActionArrayOutput)
}

func (o ClusterClusterConfigStateOutput) LifecycleConfig() ClusterClusterConfigStateLifecycleConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *ClusterClusterConfigStateLifecycleConfig { return v.LifecycleConfig }).(ClusterClusterConfigStateLifecycleConfigPtrOutput)
}

// The Google Compute Engine config settings for the master instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigStateOutput) MasterConfig() ClusterClusterConfigStateMasterConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *ClusterClusterConfigStateMasterConfig { return v.MasterConfig }).(ClusterClusterConfigStateMasterConfigPtrOutput)
}

// The Google Compute Engine config settings for the additional (aka
// preemptible) instances in a cluster. Structure defined below.
func (o ClusterClusterConfigStateOutput) PreemptibleWorkerConfig() ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *ClusterClusterConfigStatePreemptibleWorkerConfig {
		return v.PreemptibleWorkerConfig
	}).(ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput)
}

// Security related configuration. Structure defined below.
func (o ClusterClusterConfigStateOutput) SecurityConfig() ClusterClusterConfigStateSecurityConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *ClusterClusterConfigStateSecurityConfig { return v.SecurityConfig }).(ClusterClusterConfigStateSecurityConfigPtrOutput)
}

// The config settings for software inside the cluster.
// Structure defined below.
func (o ClusterClusterConfigStateOutput) SoftwareConfig() ClusterClusterConfigStateSoftwareConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *ClusterClusterConfigStateSoftwareConfig { return v.SoftwareConfig }).(ClusterClusterConfigStateSoftwareConfigPtrOutput)
}

// The Cloud Storage staging bucket used to stage files,
// such as Hadoop jars, between client machines and the cluster.
// Note: If you don't explicitly specify a `stagingBucket`
// then GCP will auto create / assign one for you. However, you are not guaranteed
// an auto generated bucket which is solely dedicated to your cluster; it may be shared
// with other clusters in the same region/zone also choosing to use the auto generation
// option.
func (o ClusterClusterConfigStateOutput) StagingBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *string { return v.StagingBucket }).(pulumi.StringPtrOutput)
}

// The Google Compute Engine config settings for the worker instances
// in a cluster.. Structure defined below.
func (o ClusterClusterConfigStateOutput) WorkerConfig() ClusterClusterConfigStateWorkerConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigState) *ClusterClusterConfigStateWorkerConfig { return v.WorkerConfig }).(ClusterClusterConfigStateWorkerConfigPtrOutput)
}

type ClusterClusterConfigStateAutoscalingConfig struct {
	// The autoscaling policy used by the cluster.
	PolicyUri string `pulumi:"policyUri"`
}

type ClusterClusterConfigStateAutoscalingConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateAutoscalingConfigOutput() ClusterClusterConfigStateAutoscalingConfigOutput
	ToClusterClusterConfigStateAutoscalingConfigOutputWithContext(context.Context) ClusterClusterConfigStateAutoscalingConfigOutput
}

type ClusterClusterConfigStateAutoscalingConfigArgs struct {
	// The autoscaling policy used by the cluster.
	PolicyUri pulumi.StringInput `pulumi:"policyUri"`
}

func (ClusterClusterConfigStateAutoscalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateAutoscalingConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateAutoscalingConfigArgs) ToClusterClusterConfigStateAutoscalingConfigOutput() ClusterClusterConfigStateAutoscalingConfigOutput {
	return i.ToClusterClusterConfigStateAutoscalingConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateAutoscalingConfigArgs) ToClusterClusterConfigStateAutoscalingConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateAutoscalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateAutoscalingConfigOutput)
}

func (i ClusterClusterConfigStateAutoscalingConfigArgs) ToClusterClusterConfigStateAutoscalingConfigPtrOutput() ClusterClusterConfigStateAutoscalingConfigPtrOutput {
	return i.ToClusterClusterConfigStateAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateAutoscalingConfigArgs) ToClusterClusterConfigStateAutoscalingConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateAutoscalingConfigOutput).ToClusterClusterConfigStateAutoscalingConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateAutoscalingConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateAutoscalingConfigPtrOutput() ClusterClusterConfigStateAutoscalingConfigPtrOutput
	ToClusterClusterConfigStateAutoscalingConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateAutoscalingConfigPtrOutput
}

type clusterClusterConfigStateAutoscalingConfigPtrType ClusterClusterConfigStateAutoscalingConfigArgs

func ClusterClusterConfigStateAutoscalingConfigPtr(v *ClusterClusterConfigStateAutoscalingConfigArgs) ClusterClusterConfigStateAutoscalingConfigPtrInput {
	return (*clusterClusterConfigStateAutoscalingConfigPtrType)(v)
}

func (*clusterClusterConfigStateAutoscalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateAutoscalingConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateAutoscalingConfigPtrType) ToClusterClusterConfigStateAutoscalingConfigPtrOutput() ClusterClusterConfigStateAutoscalingConfigPtrOutput {
	return i.ToClusterClusterConfigStateAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateAutoscalingConfigPtrType) ToClusterClusterConfigStateAutoscalingConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateAutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateAutoscalingConfigPtrOutput)
}

type ClusterClusterConfigStateAutoscalingConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateAutoscalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateAutoscalingConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateAutoscalingConfigOutput) ToClusterClusterConfigStateAutoscalingConfigOutput() ClusterClusterConfigStateAutoscalingConfigOutput {
	return o
}

func (o ClusterClusterConfigStateAutoscalingConfigOutput) ToClusterClusterConfigStateAutoscalingConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateAutoscalingConfigOutput {
	return o
}

func (o ClusterClusterConfigStateAutoscalingConfigOutput) ToClusterClusterConfigStateAutoscalingConfigPtrOutput() ClusterClusterConfigStateAutoscalingConfigPtrOutput {
	return o.ToClusterClusterConfigStateAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateAutoscalingConfigOutput) ToClusterClusterConfigStateAutoscalingConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateAutoscalingConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateAutoscalingConfig) *ClusterClusterConfigStateAutoscalingConfig {
		return &v
	}).(ClusterClusterConfigStateAutoscalingConfigPtrOutput)
}

// The autoscaling policy used by the cluster.
func (o ClusterClusterConfigStateAutoscalingConfigOutput) PolicyUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateAutoscalingConfig) string { return v.PolicyUri }).(pulumi.StringOutput)
}

type ClusterClusterConfigStateAutoscalingConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateAutoscalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateAutoscalingConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateAutoscalingConfigPtrOutput) ToClusterClusterConfigStateAutoscalingConfigPtrOutput() ClusterClusterConfigStateAutoscalingConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateAutoscalingConfigPtrOutput) ToClusterClusterConfigStateAutoscalingConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateAutoscalingConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateAutoscalingConfigPtrOutput) Elem() ClusterClusterConfigStateAutoscalingConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateAutoscalingConfig) ClusterClusterConfigStateAutoscalingConfig {
		return *v
	}).(ClusterClusterConfigStateAutoscalingConfigOutput)
}

// The autoscaling policy used by the cluster.
func (o ClusterClusterConfigStateAutoscalingConfigPtrOutput) PolicyUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateAutoscalingConfig) string { return v.PolicyUri }).(pulumi.StringOutput)
}

type ClusterClusterConfigStateEncryptionConfig struct {
	// The Cloud KMS key name to use for PD disk encryption for
	// all instances in the cluster.
	KmsKeyName string `pulumi:"kmsKeyName"`
}

type ClusterClusterConfigStateEncryptionConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateEncryptionConfigOutput() ClusterClusterConfigStateEncryptionConfigOutput
	ToClusterClusterConfigStateEncryptionConfigOutputWithContext(context.Context) ClusterClusterConfigStateEncryptionConfigOutput
}

type ClusterClusterConfigStateEncryptionConfigArgs struct {
	// The Cloud KMS key name to use for PD disk encryption for
	// all instances in the cluster.
	KmsKeyName pulumi.StringInput `pulumi:"kmsKeyName"`
}

func (ClusterClusterConfigStateEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateEncryptionConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateEncryptionConfigArgs) ToClusterClusterConfigStateEncryptionConfigOutput() ClusterClusterConfigStateEncryptionConfigOutput {
	return i.ToClusterClusterConfigStateEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateEncryptionConfigArgs) ToClusterClusterConfigStateEncryptionConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateEncryptionConfigOutput)
}

func (i ClusterClusterConfigStateEncryptionConfigArgs) ToClusterClusterConfigStateEncryptionConfigPtrOutput() ClusterClusterConfigStateEncryptionConfigPtrOutput {
	return i.ToClusterClusterConfigStateEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateEncryptionConfigArgs) ToClusterClusterConfigStateEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateEncryptionConfigOutput).ToClusterClusterConfigStateEncryptionConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateEncryptionConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateEncryptionConfigPtrOutput() ClusterClusterConfigStateEncryptionConfigPtrOutput
	ToClusterClusterConfigStateEncryptionConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateEncryptionConfigPtrOutput
}

type clusterClusterConfigStateEncryptionConfigPtrType ClusterClusterConfigStateEncryptionConfigArgs

func ClusterClusterConfigStateEncryptionConfigPtr(v *ClusterClusterConfigStateEncryptionConfigArgs) ClusterClusterConfigStateEncryptionConfigPtrInput {
	return (*clusterClusterConfigStateEncryptionConfigPtrType)(v)
}

func (*clusterClusterConfigStateEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateEncryptionConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateEncryptionConfigPtrType) ToClusterClusterConfigStateEncryptionConfigPtrOutput() ClusterClusterConfigStateEncryptionConfigPtrOutput {
	return i.ToClusterClusterConfigStateEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateEncryptionConfigPtrType) ToClusterClusterConfigStateEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateEncryptionConfigPtrOutput)
}

type ClusterClusterConfigStateEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateEncryptionConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateEncryptionConfigOutput) ToClusterClusterConfigStateEncryptionConfigOutput() ClusterClusterConfigStateEncryptionConfigOutput {
	return o
}

func (o ClusterClusterConfigStateEncryptionConfigOutput) ToClusterClusterConfigStateEncryptionConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateEncryptionConfigOutput {
	return o
}

func (o ClusterClusterConfigStateEncryptionConfigOutput) ToClusterClusterConfigStateEncryptionConfigPtrOutput() ClusterClusterConfigStateEncryptionConfigPtrOutput {
	return o.ToClusterClusterConfigStateEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateEncryptionConfigOutput) ToClusterClusterConfigStateEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateEncryptionConfig) *ClusterClusterConfigStateEncryptionConfig {
		return &v
	}).(ClusterClusterConfigStateEncryptionConfigPtrOutput)
}

// The Cloud KMS key name to use for PD disk encryption for
// all instances in the cluster.
func (o ClusterClusterConfigStateEncryptionConfigOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateEncryptionConfig) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type ClusterClusterConfigStateEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateEncryptionConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateEncryptionConfigPtrOutput) ToClusterClusterConfigStateEncryptionConfigPtrOutput() ClusterClusterConfigStateEncryptionConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateEncryptionConfigPtrOutput) ToClusterClusterConfigStateEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateEncryptionConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateEncryptionConfigPtrOutput) Elem() ClusterClusterConfigStateEncryptionConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateEncryptionConfig) ClusterClusterConfigStateEncryptionConfig {
		return *v
	}).(ClusterClusterConfigStateEncryptionConfigOutput)
}

// The Cloud KMS key name to use for PD disk encryption for
// all instances in the cluster.
func (o ClusterClusterConfigStateEncryptionConfigPtrOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateEncryptionConfig) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

type ClusterClusterConfigStateGceClusterConfig struct {
	// By default, clusters are not restricted to internal IP addresses,
	// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
	// instances in the cluster will only have internal IP addresses. Note: Private Google Access
	// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
	// will be launched in.
	InternalIpOnly *bool `pulumi:"internalIpOnly"`
	// A map of the Compute Engine metadata entries to add to all instances
	// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata map[string]string `pulumi:"metadata"`
	// The name or selfLink of the Google Compute Engine
	// network to the cluster will be part of. Conflicts with `subnetwork`.
	// If neither is specified, this defaults to the "default" network.
	Network *string `pulumi:"network"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The set of Google API scopes
	// to be made available on all of the node VMs under the `serviceAccount`
	// specified. These can be	either FQDNs, or scope aliases. The following scopes
	// must be set if any other scopes are set. They're necessary to ensure the
	// correct functioning ofthe cluster, and are set automatically by the API:
	ServiceAccountScopes []string `pulumi:"serviceAccountScopes"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork the cluster will be part of. Conflicts with `network`.
	Subnetwork *string `pulumi:"subnetwork"`
	// The list of instance tags applied to instances in the cluster.
	// Tags are used to identify valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// The GCP zone where your data is stored and used (i.e. where
	// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
	// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
	// to determine this automatically for you.
	// Note: This setting additionally determines and restricts
	// which computing resources are available for use with other configs such as
	// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
	Zone *string `pulumi:"zone"`
}

type ClusterClusterConfigStateGceClusterConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateGceClusterConfigOutput() ClusterClusterConfigStateGceClusterConfigOutput
	ToClusterClusterConfigStateGceClusterConfigOutputWithContext(context.Context) ClusterClusterConfigStateGceClusterConfigOutput
}

type ClusterClusterConfigStateGceClusterConfigArgs struct {
	// By default, clusters are not restricted to internal IP addresses,
	// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
	// instances in the cluster will only have internal IP addresses. Note: Private Google Access
	// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
	// will be launched in.
	InternalIpOnly pulumi.BoolPtrInput `pulumi:"internalIpOnly"`
	// A map of the Compute Engine metadata entries to add to all instances
	// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The name or selfLink of the Google Compute Engine
	// network to the cluster will be part of. Conflicts with `subnetwork`.
	// If neither is specified, this defaults to the "default" network.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// The set of Google API scopes
	// to be made available on all of the node VMs under the `serviceAccount`
	// specified. These can be	either FQDNs, or scope aliases. The following scopes
	// must be set if any other scopes are set. They're necessary to ensure the
	// correct functioning ofthe cluster, and are set automatically by the API:
	ServiceAccountScopes pulumi.StringArrayInput `pulumi:"serviceAccountScopes"`
	// The name or selfLink of the Google Compute Engine
	// subnetwork the cluster will be part of. Conflicts with `network`.
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
	// The list of instance tags applied to instances in the cluster.
	// Tags are used to identify valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The GCP zone where your data is stored and used (i.e. where
	// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
	// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
	// to determine this automatically for you.
	// Note: This setting additionally determines and restricts
	// which computing resources are available for use with other configs such as
	// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (ClusterClusterConfigStateGceClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateGceClusterConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateGceClusterConfigArgs) ToClusterClusterConfigStateGceClusterConfigOutput() ClusterClusterConfigStateGceClusterConfigOutput {
	return i.ToClusterClusterConfigStateGceClusterConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateGceClusterConfigArgs) ToClusterClusterConfigStateGceClusterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateGceClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateGceClusterConfigOutput)
}

func (i ClusterClusterConfigStateGceClusterConfigArgs) ToClusterClusterConfigStateGceClusterConfigPtrOutput() ClusterClusterConfigStateGceClusterConfigPtrOutput {
	return i.ToClusterClusterConfigStateGceClusterConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateGceClusterConfigArgs) ToClusterClusterConfigStateGceClusterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateGceClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateGceClusterConfigOutput).ToClusterClusterConfigStateGceClusterConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateGceClusterConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateGceClusterConfigPtrOutput() ClusterClusterConfigStateGceClusterConfigPtrOutput
	ToClusterClusterConfigStateGceClusterConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateGceClusterConfigPtrOutput
}

type clusterClusterConfigStateGceClusterConfigPtrType ClusterClusterConfigStateGceClusterConfigArgs

func ClusterClusterConfigStateGceClusterConfigPtr(v *ClusterClusterConfigStateGceClusterConfigArgs) ClusterClusterConfigStateGceClusterConfigPtrInput {
	return (*clusterClusterConfigStateGceClusterConfigPtrType)(v)
}

func (*clusterClusterConfigStateGceClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateGceClusterConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateGceClusterConfigPtrType) ToClusterClusterConfigStateGceClusterConfigPtrOutput() ClusterClusterConfigStateGceClusterConfigPtrOutput {
	return i.ToClusterClusterConfigStateGceClusterConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateGceClusterConfigPtrType) ToClusterClusterConfigStateGceClusterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateGceClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateGceClusterConfigPtrOutput)
}

type ClusterClusterConfigStateGceClusterConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateGceClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateGceClusterConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateGceClusterConfigOutput) ToClusterClusterConfigStateGceClusterConfigOutput() ClusterClusterConfigStateGceClusterConfigOutput {
	return o
}

func (o ClusterClusterConfigStateGceClusterConfigOutput) ToClusterClusterConfigStateGceClusterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateGceClusterConfigOutput {
	return o
}

func (o ClusterClusterConfigStateGceClusterConfigOutput) ToClusterClusterConfigStateGceClusterConfigPtrOutput() ClusterClusterConfigStateGceClusterConfigPtrOutput {
	return o.ToClusterClusterConfigStateGceClusterConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateGceClusterConfigOutput) ToClusterClusterConfigStateGceClusterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateGceClusterConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *ClusterClusterConfigStateGceClusterConfig {
		return &v
	}).(ClusterClusterConfigStateGceClusterConfigPtrOutput)
}

// By default, clusters are not restricted to internal IP addresses,
// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
// instances in the cluster will only have internal IP addresses. Note: Private Google Access
// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
// will be launched in.
func (o ClusterClusterConfigStateGceClusterConfigOutput) InternalIpOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *bool { return v.InternalIpOnly }).(pulumi.BoolPtrOutput)
}

// A map of the Compute Engine metadata entries to add to all instances
// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
func (o ClusterClusterConfigStateGceClusterConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name or selfLink of the Google Compute Engine
// network to the cluster will be part of. Conflicts with `subnetwork`.
// If neither is specified, this defaults to the "default" network.
func (o ClusterClusterConfigStateGceClusterConfigOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
func (o ClusterClusterConfigStateGceClusterConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes
// to be made available on all of the node VMs under the `serviceAccount`
// specified. These can be	either FQDNs, or scope aliases. The following scopes
// must be set if any other scopes are set. They're necessary to ensure the
// correct functioning ofthe cluster, and are set automatically by the API:
func (o ClusterClusterConfigStateGceClusterConfigOutput) ServiceAccountScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) []string { return v.ServiceAccountScopes }).(pulumi.StringArrayOutput)
}

// The name or selfLink of the Google Compute Engine
// subnetwork the cluster will be part of. Conflicts with `network`.
func (o ClusterClusterConfigStateGceClusterConfigOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

// The list of instance tags applied to instances in the cluster.
// Tags are used to identify valid sources or targets for network firewalls.
func (o ClusterClusterConfigStateGceClusterConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The GCP zone where your data is stored and used (i.e. where
// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
// to determine this automatically for you.
// Note: This setting additionally determines and restricts
// which computing resources are available for use with other configs such as
// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
func (o ClusterClusterConfigStateGceClusterConfigOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigStateGceClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateGceClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateGceClusterConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) ToClusterClusterConfigStateGceClusterConfigPtrOutput() ClusterClusterConfigStateGceClusterConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) ToClusterClusterConfigStateGceClusterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateGceClusterConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) Elem() ClusterClusterConfigStateGceClusterConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateGceClusterConfig) ClusterClusterConfigStateGceClusterConfig {
		return *v
	}).(ClusterClusterConfigStateGceClusterConfigOutput)
}

// By default, clusters are not restricted to internal IP addresses,
// and will have ephemeral external IP addresses assigned to each instance. If set to true, all
// instances in the cluster will only have internal IP addresses. Note: Private Google Access
// (also known as `privateIpGoogleAccess`) must be enabled on the subnetwork that the cluster
// will be launched in.
func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) InternalIpOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *bool { return v.InternalIpOnly }).(pulumi.BoolPtrOutput)
}

// A map of the Compute Engine metadata entries to add to all instances
// (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name or selfLink of the Google Compute Engine
// network to the cluster will be part of. Conflicts with `subnetwork`.
// If neither is specified, this defaults to the "default" network.
func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes
// to be made available on all of the node VMs under the `serviceAccount`
// specified. These can be	either FQDNs, or scope aliases. The following scopes
// must be set if any other scopes are set. They're necessary to ensure the
// correct functioning ofthe cluster, and are set automatically by the API:
func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) ServiceAccountScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) []string { return v.ServiceAccountScopes }).(pulumi.StringArrayOutput)
}

// The name or selfLink of the Google Compute Engine
// subnetwork the cluster will be part of. Conflicts with `network`.
func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

// The list of instance tags applied to instances in the cluster.
// Tags are used to identify valid sources or targets for network firewalls.
func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The GCP zone where your data is stored and used (i.e. where
// the master and the worker nodes will be created in). If `region` is set to 'global' (default)
// then `zone` is mandatory, otherwise GCP is able to make use of [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/auto-zone)
// to determine this automatically for you.
// Note: This setting additionally determines and restricts
// which computing resources are available for use with other configs such as
// `cluster_config.master_config.machine_type` and `cluster_config.worker_config.machine_type`.
func (o ClusterClusterConfigStateGceClusterConfigPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateGceClusterConfig) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigStateInitializationAction struct {
	Script string `pulumi:"script"`
	// The maximum duration (in seconds) which `script` is
	// allowed to take to execute its action. GCP will default to a predetermined
	// computed value if not set (currently 300).
	TimeoutSec *int `pulumi:"timeoutSec"`
}

type ClusterClusterConfigStateInitializationActionInput interface {
	pulumi.Input

	ToClusterClusterConfigStateInitializationActionOutput() ClusterClusterConfigStateInitializationActionOutput
	ToClusterClusterConfigStateInitializationActionOutputWithContext(context.Context) ClusterClusterConfigStateInitializationActionOutput
}

type ClusterClusterConfigStateInitializationActionArgs struct {
	Script pulumi.StringInput `pulumi:"script"`
	// The maximum duration (in seconds) which `script` is
	// allowed to take to execute its action. GCP will default to a predetermined
	// computed value if not set (currently 300).
	TimeoutSec pulumi.IntPtrInput `pulumi:"timeoutSec"`
}

func (ClusterClusterConfigStateInitializationActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateInitializationAction)(nil)).Elem()
}

func (i ClusterClusterConfigStateInitializationActionArgs) ToClusterClusterConfigStateInitializationActionOutput() ClusterClusterConfigStateInitializationActionOutput {
	return i.ToClusterClusterConfigStateInitializationActionOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateInitializationActionArgs) ToClusterClusterConfigStateInitializationActionOutputWithContext(ctx context.Context) ClusterClusterConfigStateInitializationActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateInitializationActionOutput)
}

type ClusterClusterConfigStateInitializationActionArrayInput interface {
	pulumi.Input

	ToClusterClusterConfigStateInitializationActionArrayOutput() ClusterClusterConfigStateInitializationActionArrayOutput
	ToClusterClusterConfigStateInitializationActionArrayOutputWithContext(context.Context) ClusterClusterConfigStateInitializationActionArrayOutput
}

type ClusterClusterConfigStateInitializationActionArray []ClusterClusterConfigStateInitializationActionInput

func (ClusterClusterConfigStateInitializationActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigStateInitializationAction)(nil)).Elem()
}

func (i ClusterClusterConfigStateInitializationActionArray) ToClusterClusterConfigStateInitializationActionArrayOutput() ClusterClusterConfigStateInitializationActionArrayOutput {
	return i.ToClusterClusterConfigStateInitializationActionArrayOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateInitializationActionArray) ToClusterClusterConfigStateInitializationActionArrayOutputWithContext(ctx context.Context) ClusterClusterConfigStateInitializationActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateInitializationActionArrayOutput)
}

type ClusterClusterConfigStateInitializationActionOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateInitializationActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateInitializationAction)(nil)).Elem()
}

func (o ClusterClusterConfigStateInitializationActionOutput) ToClusterClusterConfigStateInitializationActionOutput() ClusterClusterConfigStateInitializationActionOutput {
	return o
}

func (o ClusterClusterConfigStateInitializationActionOutput) ToClusterClusterConfigStateInitializationActionOutputWithContext(ctx context.Context) ClusterClusterConfigStateInitializationActionOutput {
	return o
}

func (o ClusterClusterConfigStateInitializationActionOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateInitializationAction) string { return v.Script }).(pulumi.StringOutput)
}

// The maximum duration (in seconds) which `script` is
// allowed to take to execute its action. GCP will default to a predetermined
// computed value if not set (currently 300).
func (o ClusterClusterConfigStateInitializationActionOutput) TimeoutSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateInitializationAction) *int { return v.TimeoutSec }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStateInitializationActionArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateInitializationActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigStateInitializationAction)(nil)).Elem()
}

func (o ClusterClusterConfigStateInitializationActionArrayOutput) ToClusterClusterConfigStateInitializationActionArrayOutput() ClusterClusterConfigStateInitializationActionArrayOutput {
	return o
}

func (o ClusterClusterConfigStateInitializationActionArrayOutput) ToClusterClusterConfigStateInitializationActionArrayOutputWithContext(ctx context.Context) ClusterClusterConfigStateInitializationActionArrayOutput {
	return o
}

func (o ClusterClusterConfigStateInitializationActionArrayOutput) Index(i pulumi.IntInput) ClusterClusterConfigStateInitializationActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterConfigStateInitializationAction {
		return vs[0].([]ClusterClusterConfigStateInitializationAction)[vs[1].(int)]
	}).(ClusterClusterConfigStateInitializationActionOutput)
}

type ClusterClusterConfigStateLifecycleConfig struct {
	// The time when cluster will be auto-deleted.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	// Example: "2014-10-02T15:01:23.045123456Z".
	AutoDeleteTime *string `pulumi:"autoDeleteTime"`
	// The duration to keep the cluster alive while idling
	// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
	IdleDeleteTtl *string `pulumi:"idleDeleteTtl"`
	IdleStartTime *string `pulumi:"idleStartTime"`
}

type ClusterClusterConfigStateLifecycleConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateLifecycleConfigOutput() ClusterClusterConfigStateLifecycleConfigOutput
	ToClusterClusterConfigStateLifecycleConfigOutputWithContext(context.Context) ClusterClusterConfigStateLifecycleConfigOutput
}

type ClusterClusterConfigStateLifecycleConfigArgs struct {
	// The time when cluster will be auto-deleted.
	// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	// Example: "2014-10-02T15:01:23.045123456Z".
	AutoDeleteTime pulumi.StringPtrInput `pulumi:"autoDeleteTime"`
	// The duration to keep the cluster alive while idling
	// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
	IdleDeleteTtl pulumi.StringPtrInput `pulumi:"idleDeleteTtl"`
	IdleStartTime pulumi.StringPtrInput `pulumi:"idleStartTime"`
}

func (ClusterClusterConfigStateLifecycleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateLifecycleConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateLifecycleConfigArgs) ToClusterClusterConfigStateLifecycleConfigOutput() ClusterClusterConfigStateLifecycleConfigOutput {
	return i.ToClusterClusterConfigStateLifecycleConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateLifecycleConfigArgs) ToClusterClusterConfigStateLifecycleConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateLifecycleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateLifecycleConfigOutput)
}

func (i ClusterClusterConfigStateLifecycleConfigArgs) ToClusterClusterConfigStateLifecycleConfigPtrOutput() ClusterClusterConfigStateLifecycleConfigPtrOutput {
	return i.ToClusterClusterConfigStateLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateLifecycleConfigArgs) ToClusterClusterConfigStateLifecycleConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateLifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateLifecycleConfigOutput).ToClusterClusterConfigStateLifecycleConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateLifecycleConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateLifecycleConfigPtrOutput() ClusterClusterConfigStateLifecycleConfigPtrOutput
	ToClusterClusterConfigStateLifecycleConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateLifecycleConfigPtrOutput
}

type clusterClusterConfigStateLifecycleConfigPtrType ClusterClusterConfigStateLifecycleConfigArgs

func ClusterClusterConfigStateLifecycleConfigPtr(v *ClusterClusterConfigStateLifecycleConfigArgs) ClusterClusterConfigStateLifecycleConfigPtrInput {
	return (*clusterClusterConfigStateLifecycleConfigPtrType)(v)
}

func (*clusterClusterConfigStateLifecycleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateLifecycleConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateLifecycleConfigPtrType) ToClusterClusterConfigStateLifecycleConfigPtrOutput() ClusterClusterConfigStateLifecycleConfigPtrOutput {
	return i.ToClusterClusterConfigStateLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateLifecycleConfigPtrType) ToClusterClusterConfigStateLifecycleConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateLifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateLifecycleConfigPtrOutput)
}

type ClusterClusterConfigStateLifecycleConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateLifecycleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateLifecycleConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateLifecycleConfigOutput) ToClusterClusterConfigStateLifecycleConfigOutput() ClusterClusterConfigStateLifecycleConfigOutput {
	return o
}

func (o ClusterClusterConfigStateLifecycleConfigOutput) ToClusterClusterConfigStateLifecycleConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateLifecycleConfigOutput {
	return o
}

func (o ClusterClusterConfigStateLifecycleConfigOutput) ToClusterClusterConfigStateLifecycleConfigPtrOutput() ClusterClusterConfigStateLifecycleConfigPtrOutput {
	return o.ToClusterClusterConfigStateLifecycleConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateLifecycleConfigOutput) ToClusterClusterConfigStateLifecycleConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateLifecycleConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateLifecycleConfig) *ClusterClusterConfigStateLifecycleConfig {
		return &v
	}).(ClusterClusterConfigStateLifecycleConfigPtrOutput)
}

// The time when cluster will be auto-deleted.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
// Example: "2014-10-02T15:01:23.045123456Z".
func (o ClusterClusterConfigStateLifecycleConfigOutput) AutoDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateLifecycleConfig) *string { return v.AutoDeleteTime }).(pulumi.StringPtrOutput)
}

// The duration to keep the cluster alive while idling
// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
func (o ClusterClusterConfigStateLifecycleConfigOutput) IdleDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateLifecycleConfig) *string { return v.IdleDeleteTtl }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateLifecycleConfigOutput) IdleStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateLifecycleConfig) *string { return v.IdleStartTime }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigStateLifecycleConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateLifecycleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateLifecycleConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateLifecycleConfigPtrOutput) ToClusterClusterConfigStateLifecycleConfigPtrOutput() ClusterClusterConfigStateLifecycleConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateLifecycleConfigPtrOutput) ToClusterClusterConfigStateLifecycleConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateLifecycleConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateLifecycleConfigPtrOutput) Elem() ClusterClusterConfigStateLifecycleConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateLifecycleConfig) ClusterClusterConfigStateLifecycleConfig { return *v }).(ClusterClusterConfigStateLifecycleConfigOutput)
}

// The time when cluster will be auto-deleted.
// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
// Example: "2014-10-02T15:01:23.045123456Z".
func (o ClusterClusterConfigStateLifecycleConfigPtrOutput) AutoDeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateLifecycleConfig) *string { return v.AutoDeleteTime }).(pulumi.StringPtrOutput)
}

// The duration to keep the cluster alive while idling
// (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
func (o ClusterClusterConfigStateLifecycleConfigPtrOutput) IdleDeleteTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateLifecycleConfig) *string { return v.IdleDeleteTtl }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateLifecycleConfigPtrOutput) IdleStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateLifecycleConfig) *string { return v.IdleStartTime }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigStateMasterConfig struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators []ClusterClusterConfigStateMasterConfigAccelerator `pulumi:"accelerators"`
	// Disk Config
	DiskConfig *ClusterClusterConfigStateMasterConfigDiskConfig `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      *string  `pulumi:"imageUri"`
	InstanceNames []string `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType *string `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	NumInstances   *int    `pulumi:"numInstances"`
}

type ClusterClusterConfigStateMasterConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateMasterConfigOutput() ClusterClusterConfigStateMasterConfigOutput
	ToClusterClusterConfigStateMasterConfigOutputWithContext(context.Context) ClusterClusterConfigStateMasterConfigOutput
}

type ClusterClusterConfigStateMasterConfigArgs struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators ClusterClusterConfigStateMasterConfigAcceleratorArrayInput `pulumi:"accelerators"`
	// Disk Config
	DiskConfig ClusterClusterConfigStateMasterConfigDiskConfigPtrInput `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      pulumi.StringPtrInput   `pulumi:"imageUri"`
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	NumInstances   pulumi.IntPtrInput    `pulumi:"numInstances"`
}

func (ClusterClusterConfigStateMasterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateMasterConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateMasterConfigArgs) ToClusterClusterConfigStateMasterConfigOutput() ClusterClusterConfigStateMasterConfigOutput {
	return i.ToClusterClusterConfigStateMasterConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateMasterConfigArgs) ToClusterClusterConfigStateMasterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateMasterConfigOutput)
}

func (i ClusterClusterConfigStateMasterConfigArgs) ToClusterClusterConfigStateMasterConfigPtrOutput() ClusterClusterConfigStateMasterConfigPtrOutput {
	return i.ToClusterClusterConfigStateMasterConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateMasterConfigArgs) ToClusterClusterConfigStateMasterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateMasterConfigOutput).ToClusterClusterConfigStateMasterConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateMasterConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateMasterConfigPtrOutput() ClusterClusterConfigStateMasterConfigPtrOutput
	ToClusterClusterConfigStateMasterConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateMasterConfigPtrOutput
}

type clusterClusterConfigStateMasterConfigPtrType ClusterClusterConfigStateMasterConfigArgs

func ClusterClusterConfigStateMasterConfigPtr(v *ClusterClusterConfigStateMasterConfigArgs) ClusterClusterConfigStateMasterConfigPtrInput {
	return (*clusterClusterConfigStateMasterConfigPtrType)(v)
}

func (*clusterClusterConfigStateMasterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateMasterConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateMasterConfigPtrType) ToClusterClusterConfigStateMasterConfigPtrOutput() ClusterClusterConfigStateMasterConfigPtrOutput {
	return i.ToClusterClusterConfigStateMasterConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateMasterConfigPtrType) ToClusterClusterConfigStateMasterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateMasterConfigPtrOutput)
}

type ClusterClusterConfigStateMasterConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateMasterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateMasterConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateMasterConfigOutput) ToClusterClusterConfigStateMasterConfigOutput() ClusterClusterConfigStateMasterConfigOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigOutput) ToClusterClusterConfigStateMasterConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigOutput) ToClusterClusterConfigStateMasterConfigPtrOutput() ClusterClusterConfigStateMasterConfigPtrOutput {
	return o.ToClusterClusterConfigStateMasterConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateMasterConfigOutput) ToClusterClusterConfigStateMasterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *ClusterClusterConfigStateMasterConfig {
		return &v
	}).(ClusterClusterConfigStateMasterConfigPtrOutput)
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigStateMasterConfigOutput) Accelerators() ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) []ClusterClusterConfigStateMasterConfigAccelerator {
		return v.Accelerators
	}).(ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigStateMasterConfigOutput) DiskConfig() ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *ClusterClusterConfigStateMasterConfigDiskConfig {
		return v.DiskConfig
	}).(ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigStateMasterConfigOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateMasterConfigOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigStateMasterConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigStateMasterConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateMasterConfigOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStateMasterConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateMasterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateMasterConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateMasterConfigPtrOutput) ToClusterClusterConfigStateMasterConfigPtrOutput() ClusterClusterConfigStateMasterConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigPtrOutput) ToClusterClusterConfigStateMasterConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigPtrOutput) Elem() ClusterClusterConfigStateMasterConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateMasterConfig) ClusterClusterConfigStateMasterConfig { return *v }).(ClusterClusterConfigStateMasterConfigOutput)
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigStateMasterConfigPtrOutput) Accelerators() ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) []ClusterClusterConfigStateMasterConfigAccelerator {
		return v.Accelerators
	}).(ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigStateMasterConfigPtrOutput) DiskConfig() ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *ClusterClusterConfigStateMasterConfigDiskConfig {
		return v.DiskConfig
	}).(ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigStateMasterConfigPtrOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateMasterConfigPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigStateMasterConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigStateMasterConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateMasterConfigPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfig) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStateMasterConfigAccelerator struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount int `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType string `pulumi:"acceleratorType"`
}

type ClusterClusterConfigStateMasterConfigAcceleratorInput interface {
	pulumi.Input

	ToClusterClusterConfigStateMasterConfigAcceleratorOutput() ClusterClusterConfigStateMasterConfigAcceleratorOutput
	ToClusterClusterConfigStateMasterConfigAcceleratorOutputWithContext(context.Context) ClusterClusterConfigStateMasterConfigAcceleratorOutput
}

type ClusterClusterConfigStateMasterConfigAcceleratorArgs struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount pulumi.IntInput `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType pulumi.StringInput `pulumi:"acceleratorType"`
}

func (ClusterClusterConfigStateMasterConfigAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateMasterConfigAccelerator)(nil)).Elem()
}

func (i ClusterClusterConfigStateMasterConfigAcceleratorArgs) ToClusterClusterConfigStateMasterConfigAcceleratorOutput() ClusterClusterConfigStateMasterConfigAcceleratorOutput {
	return i.ToClusterClusterConfigStateMasterConfigAcceleratorOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateMasterConfigAcceleratorArgs) ToClusterClusterConfigStateMasterConfigAcceleratorOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateMasterConfigAcceleratorOutput)
}

type ClusterClusterConfigStateMasterConfigAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterClusterConfigStateMasterConfigAcceleratorArrayOutput() ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput
	ToClusterClusterConfigStateMasterConfigAcceleratorArrayOutputWithContext(context.Context) ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput
}

type ClusterClusterConfigStateMasterConfigAcceleratorArray []ClusterClusterConfigStateMasterConfigAcceleratorInput

func (ClusterClusterConfigStateMasterConfigAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigStateMasterConfigAccelerator)(nil)).Elem()
}

func (i ClusterClusterConfigStateMasterConfigAcceleratorArray) ToClusterClusterConfigStateMasterConfigAcceleratorArrayOutput() ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput {
	return i.ToClusterClusterConfigStateMasterConfigAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateMasterConfigAcceleratorArray) ToClusterClusterConfigStateMasterConfigAcceleratorArrayOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput)
}

type ClusterClusterConfigStateMasterConfigAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateMasterConfigAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateMasterConfigAccelerator)(nil)).Elem()
}

func (o ClusterClusterConfigStateMasterConfigAcceleratorOutput) ToClusterClusterConfigStateMasterConfigAcceleratorOutput() ClusterClusterConfigStateMasterConfigAcceleratorOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigAcceleratorOutput) ToClusterClusterConfigStateMasterConfigAcceleratorOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigAcceleratorOutput {
	return o
}

// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
func (o ClusterClusterConfigStateMasterConfigAcceleratorOutput) AcceleratorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfigAccelerator) int { return v.AcceleratorCount }).(pulumi.IntOutput)
}

// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
func (o ClusterClusterConfigStateMasterConfigAcceleratorOutput) AcceleratorType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfigAccelerator) string { return v.AcceleratorType }).(pulumi.StringOutput)
}

type ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigStateMasterConfigAccelerator)(nil)).Elem()
}

func (o ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput) ToClusterClusterConfigStateMasterConfigAcceleratorArrayOutput() ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput) ToClusterClusterConfigStateMasterConfigAcceleratorArrayOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterClusterConfigStateMasterConfigAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterConfigStateMasterConfigAccelerator {
		return vs[0].([]ClusterClusterConfigStateMasterConfigAccelerator)[vs[1].(int)]
	}).(ClusterClusterConfigStateMasterConfigAcceleratorOutput)
}

type ClusterClusterConfigStateMasterConfigDiskConfig struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb *int `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType *string `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds *int `pulumi:"numLocalSsds"`
}

type ClusterClusterConfigStateMasterConfigDiskConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateMasterConfigDiskConfigOutput() ClusterClusterConfigStateMasterConfigDiskConfigOutput
	ToClusterClusterConfigStateMasterConfigDiskConfigOutputWithContext(context.Context) ClusterClusterConfigStateMasterConfigDiskConfigOutput
}

type ClusterClusterConfigStateMasterConfigDiskConfigArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb pulumi.IntPtrInput `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds pulumi.IntPtrInput `pulumi:"numLocalSsds"`
}

func (ClusterClusterConfigStateMasterConfigDiskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateMasterConfigDiskConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateMasterConfigDiskConfigArgs) ToClusterClusterConfigStateMasterConfigDiskConfigOutput() ClusterClusterConfigStateMasterConfigDiskConfigOutput {
	return i.ToClusterClusterConfigStateMasterConfigDiskConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateMasterConfigDiskConfigArgs) ToClusterClusterConfigStateMasterConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigDiskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateMasterConfigDiskConfigOutput)
}

func (i ClusterClusterConfigStateMasterConfigDiskConfigArgs) ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutput() ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return i.ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateMasterConfigDiskConfigArgs) ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateMasterConfigDiskConfigOutput).ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateMasterConfigDiskConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutput() ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput
	ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput
}

type clusterClusterConfigStateMasterConfigDiskConfigPtrType ClusterClusterConfigStateMasterConfigDiskConfigArgs

func ClusterClusterConfigStateMasterConfigDiskConfigPtr(v *ClusterClusterConfigStateMasterConfigDiskConfigArgs) ClusterClusterConfigStateMasterConfigDiskConfigPtrInput {
	return (*clusterClusterConfigStateMasterConfigDiskConfigPtrType)(v)
}

func (*clusterClusterConfigStateMasterConfigDiskConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateMasterConfigDiskConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateMasterConfigDiskConfigPtrType) ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutput() ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return i.ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateMasterConfigDiskConfigPtrType) ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput)
}

type ClusterClusterConfigStateMasterConfigDiskConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateMasterConfigDiskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateMasterConfigDiskConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateMasterConfigDiskConfigOutput) ToClusterClusterConfigStateMasterConfigDiskConfigOutput() ClusterClusterConfigStateMasterConfigDiskConfigOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigDiskConfigOutput) ToClusterClusterConfigStateMasterConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigDiskConfigOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigDiskConfigOutput) ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutput() ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return o.ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateMasterConfigDiskConfigOutput) ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfigDiskConfig) *ClusterClusterConfigStateMasterConfigDiskConfig {
		return &v
	}).(ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigStateMasterConfigDiskConfigOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfigDiskConfig) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigStateMasterConfigDiskConfigOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfigDiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigStateMasterConfigDiskConfigOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfigDiskConfig) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateMasterConfigDiskConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput) ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutput() ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput) ToClusterClusterConfigStateMasterConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput) Elem() ClusterClusterConfigStateMasterConfigDiskConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateMasterConfigDiskConfig) ClusterClusterConfigStateMasterConfigDiskConfig {
		return *v
	}).(ClusterClusterConfigStateMasterConfigDiskConfigOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfigDiskConfig) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfigDiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateMasterConfigDiskConfig) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStatePreemptibleWorkerConfig struct {
	// Disk Config
	DiskConfig    *ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig `pulumi:"diskConfig"`
	InstanceNames []string                                                    `pulumi:"instanceNames"`
	NumInstances  *int                                                        `pulumi:"numInstances"`
}

type ClusterClusterConfigStatePreemptibleWorkerConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStatePreemptibleWorkerConfigOutput() ClusterClusterConfigStatePreemptibleWorkerConfigOutput
	ToClusterClusterConfigStatePreemptibleWorkerConfigOutputWithContext(context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigOutput
}

type ClusterClusterConfigStatePreemptibleWorkerConfigArgs struct {
	// Disk Config
	DiskConfig    ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrInput `pulumi:"diskConfig"`
	InstanceNames pulumi.StringArrayInput                                            `pulumi:"instanceNames"`
	NumInstances  pulumi.IntPtrInput                                                 `pulumi:"numInstances"`
}

func (ClusterClusterConfigStatePreemptibleWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStatePreemptibleWorkerConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStatePreemptibleWorkerConfigArgs) ToClusterClusterConfigStatePreemptibleWorkerConfigOutput() ClusterClusterConfigStatePreemptibleWorkerConfigOutput {
	return i.ToClusterClusterConfigStatePreemptibleWorkerConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStatePreemptibleWorkerConfigArgs) ToClusterClusterConfigStatePreemptibleWorkerConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStatePreemptibleWorkerConfigOutput)
}

func (i ClusterClusterConfigStatePreemptibleWorkerConfigArgs) ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput {
	return i.ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStatePreemptibleWorkerConfigArgs) ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStatePreemptibleWorkerConfigOutput).ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStatePreemptibleWorkerConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput
	ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput
}

type clusterClusterConfigStatePreemptibleWorkerConfigPtrType ClusterClusterConfigStatePreemptibleWorkerConfigArgs

func ClusterClusterConfigStatePreemptibleWorkerConfigPtr(v *ClusterClusterConfigStatePreemptibleWorkerConfigArgs) ClusterClusterConfigStatePreemptibleWorkerConfigPtrInput {
	return (*clusterClusterConfigStatePreemptibleWorkerConfigPtrType)(v)
}

func (*clusterClusterConfigStatePreemptibleWorkerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStatePreemptibleWorkerConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStatePreemptibleWorkerConfigPtrType) ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput {
	return i.ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStatePreemptibleWorkerConfigPtrType) ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput)
}

type ClusterClusterConfigStatePreemptibleWorkerConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStatePreemptibleWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStatePreemptibleWorkerConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigOutput() ClusterClusterConfigStatePreemptibleWorkerConfigOutput {
	return o
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigOutput {
	return o
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput {
	return o.ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfig) *ClusterClusterConfigStatePreemptibleWorkerConfig {
		return &v
	}).(ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput)
}

// Disk Config
func (o ClusterClusterConfigStatePreemptibleWorkerConfigOutput) DiskConfig() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfig) *ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig {
		return v.DiskConfig
	}).(ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput)
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfig) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfig) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStatePreemptibleWorkerConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput) Elem() ClusterClusterConfigStatePreemptibleWorkerConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStatePreemptibleWorkerConfig) ClusterClusterConfigStatePreemptibleWorkerConfig {
		return *v
	}).(ClusterClusterConfigStatePreemptibleWorkerConfigOutput)
}

// Disk Config
func (o ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput) DiskConfig() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfig) *ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig {
		return v.DiskConfig
	}).(ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput)
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfig) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfig) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb *int `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType *string `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds *int `pulumi:"numLocalSsds"`
}

type ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput
	ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutputWithContext(context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput
}

type ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb pulumi.IntPtrInput `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds pulumi.IntPtrInput `pulumi:"numLocalSsds"`
}

func (ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigArgs) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput {
	return i.ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigArgs) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput)
}

func (i ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigArgs) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return i.ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigArgs) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput).ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput
	ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput
}

type clusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrType ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigArgs

func ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtr(v *ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigArgs) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrInput {
	return (*clusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrType)(v)
}

func (*clusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrType) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return i.ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrType) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput)
}

type ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput {
	return o
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput {
	return o
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return o.ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig) *ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig {
		return &v
	}).(ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput) ToClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput) Elem() ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig) ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig {
		return *v
	}).(ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfig) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStateSecurityConfig struct {
	// Kerberos Configuration
	KerberosConfig ClusterClusterConfigStateSecurityConfigKerberosConfig `pulumi:"kerberosConfig"`
}

type ClusterClusterConfigStateSecurityConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateSecurityConfigOutput() ClusterClusterConfigStateSecurityConfigOutput
	ToClusterClusterConfigStateSecurityConfigOutputWithContext(context.Context) ClusterClusterConfigStateSecurityConfigOutput
}

type ClusterClusterConfigStateSecurityConfigArgs struct {
	// Kerberos Configuration
	KerberosConfig ClusterClusterConfigStateSecurityConfigKerberosConfigInput `pulumi:"kerberosConfig"`
}

func (ClusterClusterConfigStateSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateSecurityConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateSecurityConfigArgs) ToClusterClusterConfigStateSecurityConfigOutput() ClusterClusterConfigStateSecurityConfigOutput {
	return i.ToClusterClusterConfigStateSecurityConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateSecurityConfigArgs) ToClusterClusterConfigStateSecurityConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateSecurityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateSecurityConfigOutput)
}

func (i ClusterClusterConfigStateSecurityConfigArgs) ToClusterClusterConfigStateSecurityConfigPtrOutput() ClusterClusterConfigStateSecurityConfigPtrOutput {
	return i.ToClusterClusterConfigStateSecurityConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateSecurityConfigArgs) ToClusterClusterConfigStateSecurityConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateSecurityConfigOutput).ToClusterClusterConfigStateSecurityConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateSecurityConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateSecurityConfigPtrOutput() ClusterClusterConfigStateSecurityConfigPtrOutput
	ToClusterClusterConfigStateSecurityConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateSecurityConfigPtrOutput
}

type clusterClusterConfigStateSecurityConfigPtrType ClusterClusterConfigStateSecurityConfigArgs

func ClusterClusterConfigStateSecurityConfigPtr(v *ClusterClusterConfigStateSecurityConfigArgs) ClusterClusterConfigStateSecurityConfigPtrInput {
	return (*clusterClusterConfigStateSecurityConfigPtrType)(v)
}

func (*clusterClusterConfigStateSecurityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateSecurityConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateSecurityConfigPtrType) ToClusterClusterConfigStateSecurityConfigPtrOutput() ClusterClusterConfigStateSecurityConfigPtrOutput {
	return i.ToClusterClusterConfigStateSecurityConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateSecurityConfigPtrType) ToClusterClusterConfigStateSecurityConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateSecurityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateSecurityConfigPtrOutput)
}

type ClusterClusterConfigStateSecurityConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateSecurityConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateSecurityConfigOutput) ToClusterClusterConfigStateSecurityConfigOutput() ClusterClusterConfigStateSecurityConfigOutput {
	return o
}

func (o ClusterClusterConfigStateSecurityConfigOutput) ToClusterClusterConfigStateSecurityConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateSecurityConfigOutput {
	return o
}

func (o ClusterClusterConfigStateSecurityConfigOutput) ToClusterClusterConfigStateSecurityConfigPtrOutput() ClusterClusterConfigStateSecurityConfigPtrOutput {
	return o.ToClusterClusterConfigStateSecurityConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateSecurityConfigOutput) ToClusterClusterConfigStateSecurityConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateSecurityConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfig) *ClusterClusterConfigStateSecurityConfig {
		return &v
	}).(ClusterClusterConfigStateSecurityConfigPtrOutput)
}

// Kerberos Configuration
func (o ClusterClusterConfigStateSecurityConfigOutput) KerberosConfig() ClusterClusterConfigStateSecurityConfigKerberosConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfig) ClusterClusterConfigStateSecurityConfigKerberosConfig {
		return v.KerberosConfig
	}).(ClusterClusterConfigStateSecurityConfigKerberosConfigOutput)
}

type ClusterClusterConfigStateSecurityConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateSecurityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateSecurityConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateSecurityConfigPtrOutput) ToClusterClusterConfigStateSecurityConfigPtrOutput() ClusterClusterConfigStateSecurityConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateSecurityConfigPtrOutput) ToClusterClusterConfigStateSecurityConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateSecurityConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateSecurityConfigPtrOutput) Elem() ClusterClusterConfigStateSecurityConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateSecurityConfig) ClusterClusterConfigStateSecurityConfig { return *v }).(ClusterClusterConfigStateSecurityConfigOutput)
}

// Kerberos Configuration
func (o ClusterClusterConfigStateSecurityConfigPtrOutput) KerberosConfig() ClusterClusterConfigStateSecurityConfigKerberosConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfig) ClusterClusterConfigStateSecurityConfigKerberosConfig {
		return v.KerberosConfig
	}).(ClusterClusterConfigStateSecurityConfigKerberosConfigOutput)
}

type ClusterClusterConfigStateSecurityConfigKerberosConfig struct {
	// The admin server (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer *string `pulumi:"crossRealmTrustAdminServer"`
	// The KDC (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc *string `pulumi:"crossRealmTrustKdc"`
	// The remote realm the Dataproc on-cluster KDC will
	// trust, should the user enable cross realm trust.
	CrossRealmTrustRealm *string `pulumi:"crossRealmTrustRealm"`
	// The Cloud Storage URI of a KMS
	// encrypted file containing the shared password between the on-cluster Kerberos realm
	// and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri *string `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Flag to indicate whether to Kerberize the cluster.
	EnableKerberos *bool `pulumi:"enableKerberos"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the master key of the KDC database.
	KdcDbKeyUri *string `pulumi:"kdcDbKeyUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided key. For the self-signed certificate, this password
	// is generated by Dataproc.
	KeyPasswordUri *string `pulumi:"keyPasswordUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided keystore. For the self-signed certificated, the password
	// is generated by Dataproc.
	KeystorePasswordUri *string `pulumi:"keystorePasswordUri"`
	// The Cloud Storage URI of the keystore file used for SSL encryption.
	// If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri *string `pulumi:"keystoreUri"`
	// The URI of the KMS key used to encrypt various sensitive files.
	KmsKeyUri string `pulumi:"kmsKeyUri"`
	// The name of the on-cluster Kerberos realm. If not specified, the
	// uppercased domain of hostnames will be the realm.
	Realm *string `pulumi:"realm"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the root principal password.
	RootPrincipalPasswordUri string `pulumi:"rootPrincipalPasswordUri"`
	// The lifetime of the ticket granting ticket, in hours.
	TgtLifetimeHours *int `pulumi:"tgtLifetimeHours"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the password to the user provided truststore. For the self-signed
	// certificate, this password is generated by Dataproc.
	TruststorePasswordUri *string `pulumi:"truststorePasswordUri"`
	// The Cloud Storage URI of the truststore file used for
	// SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri *string `pulumi:"truststoreUri"`
}

type ClusterClusterConfigStateSecurityConfigKerberosConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateSecurityConfigKerberosConfigOutput() ClusterClusterConfigStateSecurityConfigKerberosConfigOutput
	ToClusterClusterConfigStateSecurityConfigKerberosConfigOutputWithContext(context.Context) ClusterClusterConfigStateSecurityConfigKerberosConfigOutput
}

type ClusterClusterConfigStateSecurityConfigKerberosConfigArgs struct {
	// The admin server (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustAdminServer pulumi.StringPtrInput `pulumi:"crossRealmTrustAdminServer"`
	// The KDC (IP or hostname) for the
	// remote trusted realm in a cross realm trust relationship.
	CrossRealmTrustKdc pulumi.StringPtrInput `pulumi:"crossRealmTrustKdc"`
	// The remote realm the Dataproc on-cluster KDC will
	// trust, should the user enable cross realm trust.
	CrossRealmTrustRealm pulumi.StringPtrInput `pulumi:"crossRealmTrustRealm"`
	// The Cloud Storage URI of a KMS
	// encrypted file containing the shared password between the on-cluster Kerberos realm
	// and the remote trusted realm, in a cross realm trust relationship.
	CrossRealmTrustSharedPasswordUri pulumi.StringPtrInput `pulumi:"crossRealmTrustSharedPasswordUri"`
	// Flag to indicate whether to Kerberize the cluster.
	EnableKerberos pulumi.BoolPtrInput `pulumi:"enableKerberos"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the master key of the KDC database.
	KdcDbKeyUri pulumi.StringPtrInput `pulumi:"kdcDbKeyUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided key. For the self-signed certificate, this password
	// is generated by Dataproc.
	KeyPasswordUri pulumi.StringPtrInput `pulumi:"keyPasswordUri"`
	// The Cloud Storage URI of a KMS encrypted file containing
	// the password to the user provided keystore. For the self-signed certificated, the password
	// is generated by Dataproc.
	KeystorePasswordUri pulumi.StringPtrInput `pulumi:"keystorePasswordUri"`
	// The Cloud Storage URI of the keystore file used for SSL encryption.
	// If not provided, Dataproc will provide a self-signed certificate.
	KeystoreUri pulumi.StringPtrInput `pulumi:"keystoreUri"`
	// The URI of the KMS key used to encrypt various sensitive files.
	KmsKeyUri pulumi.StringInput `pulumi:"kmsKeyUri"`
	// The name of the on-cluster Kerberos realm. If not specified, the
	// uppercased domain of hostnames will be the realm.
	Realm pulumi.StringPtrInput `pulumi:"realm"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the root principal password.
	RootPrincipalPasswordUri pulumi.StringInput `pulumi:"rootPrincipalPasswordUri"`
	// The lifetime of the ticket granting ticket, in hours.
	TgtLifetimeHours pulumi.IntPtrInput `pulumi:"tgtLifetimeHours"`
	// The Cloud Storage URI of a KMS encrypted file
	// containing the password to the user provided truststore. For the self-signed
	// certificate, this password is generated by Dataproc.
	TruststorePasswordUri pulumi.StringPtrInput `pulumi:"truststorePasswordUri"`
	// The Cloud Storage URI of the truststore file used for
	// SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
	TruststoreUri pulumi.StringPtrInput `pulumi:"truststoreUri"`
}

func (ClusterClusterConfigStateSecurityConfigKerberosConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateSecurityConfigKerberosConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateSecurityConfigKerberosConfigArgs) ToClusterClusterConfigStateSecurityConfigKerberosConfigOutput() ClusterClusterConfigStateSecurityConfigKerberosConfigOutput {
	return i.ToClusterClusterConfigStateSecurityConfigKerberosConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateSecurityConfigKerberosConfigArgs) ToClusterClusterConfigStateSecurityConfigKerberosConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateSecurityConfigKerberosConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateSecurityConfigKerberosConfigOutput)
}

type ClusterClusterConfigStateSecurityConfigKerberosConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateSecurityConfigKerberosConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) ToClusterClusterConfigStateSecurityConfigKerberosConfigOutput() ClusterClusterConfigStateSecurityConfigKerberosConfigOutput {
	return o
}

func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) ToClusterClusterConfigStateSecurityConfigKerberosConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateSecurityConfigKerberosConfigOutput {
	return o
}

// The admin server (IP or hostname) for the
// remote trusted realm in a cross realm trust relationship.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) CrossRealmTrustAdminServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string {
		return v.CrossRealmTrustAdminServer
	}).(pulumi.StringPtrOutput)
}

// The KDC (IP or hostname) for the
// remote trusted realm in a cross realm trust relationship.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) CrossRealmTrustKdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string { return v.CrossRealmTrustKdc }).(pulumi.StringPtrOutput)
}

// The remote realm the Dataproc on-cluster KDC will
// trust, should the user enable cross realm trust.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) CrossRealmTrustRealm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string { return v.CrossRealmTrustRealm }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS
// encrypted file containing the shared password between the on-cluster Kerberos realm
// and the remote trusted realm, in a cross realm trust relationship.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) CrossRealmTrustSharedPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string {
		return v.CrossRealmTrustSharedPasswordUri
	}).(pulumi.StringPtrOutput)
}

// Flag to indicate whether to Kerberize the cluster.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) EnableKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *bool { return v.EnableKerberos }).(pulumi.BoolPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file containing
// the master key of the KDC database.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) KdcDbKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string { return v.KdcDbKeyUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file containing
// the password to the user provided key. For the self-signed certificate, this password
// is generated by Dataproc.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) KeyPasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string { return v.KeyPasswordUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file containing
// the password to the user provided keystore. For the self-signed certificated, the password
// is generated by Dataproc.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) KeystorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string { return v.KeystorePasswordUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of the keystore file used for SSL encryption.
// If not provided, Dataproc will provide a self-signed certificate.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) KeystoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string { return v.KeystoreUri }).(pulumi.StringPtrOutput)
}

// The URI of the KMS key used to encrypt various sensitive files.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) KmsKeyUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) string { return v.KmsKeyUri }).(pulumi.StringOutput)
}

// The name of the on-cluster Kerberos realm. If not specified, the
// uppercased domain of hostnames will be the realm.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string { return v.Realm }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file
// containing the root principal password.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) RootPrincipalPasswordUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) string {
		return v.RootPrincipalPasswordUri
	}).(pulumi.StringOutput)
}

// The lifetime of the ticket granting ticket, in hours.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) TgtLifetimeHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *int { return v.TgtLifetimeHours }).(pulumi.IntPtrOutput)
}

// The Cloud Storage URI of a KMS encrypted file
// containing the password to the user provided truststore. For the self-signed
// certificate, this password is generated by Dataproc.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) TruststorePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string { return v.TruststorePasswordUri }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of the truststore file used for
// SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
func (o ClusterClusterConfigStateSecurityConfigKerberosConfigOutput) TruststoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSecurityConfigKerberosConfig) *string { return v.TruststoreUri }).(pulumi.StringPtrOutput)
}

type ClusterClusterConfigStateSoftwareConfig struct {
	// The Cloud Dataproc image version to use
	// for the cluster - this controls the sets of software versions
	// installed onto the nodes when you create clusters. If not specified, defaults to the
	// latest version. For a list of valid versions see
	// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
	ImageVersion       *string  `pulumi:"imageVersion"`
	OptionalComponents []string `pulumi:"optionalComponents"`
	// A list of override and additional properties (key/value pairs)
	// used to modify various aspects of the common configuration files used when creating
	// a cluster. For a list of valid properties please see
	// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
	OverrideProperties map[string]string      `pulumi:"overrideProperties"`
	Properties         map[string]interface{} `pulumi:"properties"`
}

type ClusterClusterConfigStateSoftwareConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateSoftwareConfigOutput() ClusterClusterConfigStateSoftwareConfigOutput
	ToClusterClusterConfigStateSoftwareConfigOutputWithContext(context.Context) ClusterClusterConfigStateSoftwareConfigOutput
}

type ClusterClusterConfigStateSoftwareConfigArgs struct {
	// The Cloud Dataproc image version to use
	// for the cluster - this controls the sets of software versions
	// installed onto the nodes when you create clusters. If not specified, defaults to the
	// latest version. For a list of valid versions see
	// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
	ImageVersion       pulumi.StringPtrInput   `pulumi:"imageVersion"`
	OptionalComponents pulumi.StringArrayInput `pulumi:"optionalComponents"`
	// A list of override and additional properties (key/value pairs)
	// used to modify various aspects of the common configuration files used when creating
	// a cluster. For a list of valid properties please see
	// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
	OverrideProperties pulumi.StringMapInput `pulumi:"overrideProperties"`
	Properties         pulumi.MapInput       `pulumi:"properties"`
}

func (ClusterClusterConfigStateSoftwareConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateSoftwareConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateSoftwareConfigArgs) ToClusterClusterConfigStateSoftwareConfigOutput() ClusterClusterConfigStateSoftwareConfigOutput {
	return i.ToClusterClusterConfigStateSoftwareConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateSoftwareConfigArgs) ToClusterClusterConfigStateSoftwareConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateSoftwareConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateSoftwareConfigOutput)
}

func (i ClusterClusterConfigStateSoftwareConfigArgs) ToClusterClusterConfigStateSoftwareConfigPtrOutput() ClusterClusterConfigStateSoftwareConfigPtrOutput {
	return i.ToClusterClusterConfigStateSoftwareConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateSoftwareConfigArgs) ToClusterClusterConfigStateSoftwareConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateSoftwareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateSoftwareConfigOutput).ToClusterClusterConfigStateSoftwareConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateSoftwareConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateSoftwareConfigPtrOutput() ClusterClusterConfigStateSoftwareConfigPtrOutput
	ToClusterClusterConfigStateSoftwareConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateSoftwareConfigPtrOutput
}

type clusterClusterConfigStateSoftwareConfigPtrType ClusterClusterConfigStateSoftwareConfigArgs

func ClusterClusterConfigStateSoftwareConfigPtr(v *ClusterClusterConfigStateSoftwareConfigArgs) ClusterClusterConfigStateSoftwareConfigPtrInput {
	return (*clusterClusterConfigStateSoftwareConfigPtrType)(v)
}

func (*clusterClusterConfigStateSoftwareConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateSoftwareConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateSoftwareConfigPtrType) ToClusterClusterConfigStateSoftwareConfigPtrOutput() ClusterClusterConfigStateSoftwareConfigPtrOutput {
	return i.ToClusterClusterConfigStateSoftwareConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateSoftwareConfigPtrType) ToClusterClusterConfigStateSoftwareConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateSoftwareConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateSoftwareConfigPtrOutput)
}

type ClusterClusterConfigStateSoftwareConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateSoftwareConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateSoftwareConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateSoftwareConfigOutput) ToClusterClusterConfigStateSoftwareConfigOutput() ClusterClusterConfigStateSoftwareConfigOutput {
	return o
}

func (o ClusterClusterConfigStateSoftwareConfigOutput) ToClusterClusterConfigStateSoftwareConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateSoftwareConfigOutput {
	return o
}

func (o ClusterClusterConfigStateSoftwareConfigOutput) ToClusterClusterConfigStateSoftwareConfigPtrOutput() ClusterClusterConfigStateSoftwareConfigPtrOutput {
	return o.ToClusterClusterConfigStateSoftwareConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateSoftwareConfigOutput) ToClusterClusterConfigStateSoftwareConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateSoftwareConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSoftwareConfig) *ClusterClusterConfigStateSoftwareConfig {
		return &v
	}).(ClusterClusterConfigStateSoftwareConfigPtrOutput)
}

// The Cloud Dataproc image version to use
// for the cluster - this controls the sets of software versions
// installed onto the nodes when you create clusters. If not specified, defaults to the
// latest version. For a list of valid versions see
// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
func (o ClusterClusterConfigStateSoftwareConfigOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSoftwareConfig) *string { return v.ImageVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateSoftwareConfigOutput) OptionalComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSoftwareConfig) []string { return v.OptionalComponents }).(pulumi.StringArrayOutput)
}

// A list of override and additional properties (key/value pairs)
// used to modify various aspects of the common configuration files used when creating
// a cluster. For a list of valid properties please see
// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
func (o ClusterClusterConfigStateSoftwareConfigOutput) OverrideProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSoftwareConfig) map[string]string { return v.OverrideProperties }).(pulumi.StringMapOutput)
}

func (o ClusterClusterConfigStateSoftwareConfigOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSoftwareConfig) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

type ClusterClusterConfigStateSoftwareConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateSoftwareConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateSoftwareConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateSoftwareConfigPtrOutput) ToClusterClusterConfigStateSoftwareConfigPtrOutput() ClusterClusterConfigStateSoftwareConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateSoftwareConfigPtrOutput) ToClusterClusterConfigStateSoftwareConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateSoftwareConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateSoftwareConfigPtrOutput) Elem() ClusterClusterConfigStateSoftwareConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateSoftwareConfig) ClusterClusterConfigStateSoftwareConfig { return *v }).(ClusterClusterConfigStateSoftwareConfigOutput)
}

// The Cloud Dataproc image version to use
// for the cluster - this controls the sets of software versions
// installed onto the nodes when you create clusters. If not specified, defaults to the
// latest version. For a list of valid versions see
// [Cloud Dataproc versions](https://cloud.google.com/dataproc/docs/concepts/dataproc-versions)
func (o ClusterClusterConfigStateSoftwareConfigPtrOutput) ImageVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSoftwareConfig) *string { return v.ImageVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateSoftwareConfigPtrOutput) OptionalComponents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSoftwareConfig) []string { return v.OptionalComponents }).(pulumi.StringArrayOutput)
}

// A list of override and additional properties (key/value pairs)
// used to modify various aspects of the common configuration files used when creating
// a cluster. For a list of valid properties please see
// [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties)
func (o ClusterClusterConfigStateSoftwareConfigPtrOutput) OverrideProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSoftwareConfig) map[string]string { return v.OverrideProperties }).(pulumi.StringMapOutput)
}

func (o ClusterClusterConfigStateSoftwareConfigPtrOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateSoftwareConfig) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

type ClusterClusterConfigStateWorkerConfig struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators []ClusterClusterConfigStateWorkerConfigAccelerator `pulumi:"accelerators"`
	// Disk Config
	DiskConfig *ClusterClusterConfigStateWorkerConfigDiskConfig `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      *string  `pulumi:"imageUri"`
	InstanceNames []string `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType *string `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	NumInstances   *int    `pulumi:"numInstances"`
}

type ClusterClusterConfigStateWorkerConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateWorkerConfigOutput() ClusterClusterConfigStateWorkerConfigOutput
	ToClusterClusterConfigStateWorkerConfigOutputWithContext(context.Context) ClusterClusterConfigStateWorkerConfigOutput
}

type ClusterClusterConfigStateWorkerConfigArgs struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators ClusterClusterConfigStateWorkerConfigAcceleratorArrayInput `pulumi:"accelerators"`
	// Disk Config
	DiskConfig ClusterClusterConfigStateWorkerConfigDiskConfigPtrInput `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      pulumi.StringPtrInput   `pulumi:"imageUri"`
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	NumInstances   pulumi.IntPtrInput    `pulumi:"numInstances"`
}

func (ClusterClusterConfigStateWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateWorkerConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateWorkerConfigArgs) ToClusterClusterConfigStateWorkerConfigOutput() ClusterClusterConfigStateWorkerConfigOutput {
	return i.ToClusterClusterConfigStateWorkerConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateWorkerConfigArgs) ToClusterClusterConfigStateWorkerConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateWorkerConfigOutput)
}

func (i ClusterClusterConfigStateWorkerConfigArgs) ToClusterClusterConfigStateWorkerConfigPtrOutput() ClusterClusterConfigStateWorkerConfigPtrOutput {
	return i.ToClusterClusterConfigStateWorkerConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateWorkerConfigArgs) ToClusterClusterConfigStateWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateWorkerConfigOutput).ToClusterClusterConfigStateWorkerConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateWorkerConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateWorkerConfigPtrOutput() ClusterClusterConfigStateWorkerConfigPtrOutput
	ToClusterClusterConfigStateWorkerConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateWorkerConfigPtrOutput
}

type clusterClusterConfigStateWorkerConfigPtrType ClusterClusterConfigStateWorkerConfigArgs

func ClusterClusterConfigStateWorkerConfigPtr(v *ClusterClusterConfigStateWorkerConfigArgs) ClusterClusterConfigStateWorkerConfigPtrInput {
	return (*clusterClusterConfigStateWorkerConfigPtrType)(v)
}

func (*clusterClusterConfigStateWorkerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateWorkerConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateWorkerConfigPtrType) ToClusterClusterConfigStateWorkerConfigPtrOutput() ClusterClusterConfigStateWorkerConfigPtrOutput {
	return i.ToClusterClusterConfigStateWorkerConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateWorkerConfigPtrType) ToClusterClusterConfigStateWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateWorkerConfigPtrOutput)
}

type ClusterClusterConfigStateWorkerConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateWorkerConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateWorkerConfigOutput) ToClusterClusterConfigStateWorkerConfigOutput() ClusterClusterConfigStateWorkerConfigOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigOutput) ToClusterClusterConfigStateWorkerConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigOutput) ToClusterClusterConfigStateWorkerConfigPtrOutput() ClusterClusterConfigStateWorkerConfigPtrOutput {
	return o.ToClusterClusterConfigStateWorkerConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateWorkerConfigOutput) ToClusterClusterConfigStateWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *ClusterClusterConfigStateWorkerConfig {
		return &v
	}).(ClusterClusterConfigStateWorkerConfigPtrOutput)
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigStateWorkerConfigOutput) Accelerators() ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) []ClusterClusterConfigStateWorkerConfigAccelerator {
		return v.Accelerators
	}).(ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigStateWorkerConfigOutput) DiskConfig() ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *ClusterClusterConfigStateWorkerConfigDiskConfig {
		return v.DiskConfig
	}).(ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigStateWorkerConfigOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateWorkerConfigOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigStateWorkerConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigStateWorkerConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateWorkerConfigOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStateWorkerConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateWorkerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateWorkerConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateWorkerConfigPtrOutput) ToClusterClusterConfigStateWorkerConfigPtrOutput() ClusterClusterConfigStateWorkerConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigPtrOutput) ToClusterClusterConfigStateWorkerConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigPtrOutput) Elem() ClusterClusterConfigStateWorkerConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateWorkerConfig) ClusterClusterConfigStateWorkerConfig { return *v }).(ClusterClusterConfigStateWorkerConfigOutput)
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigStateWorkerConfigPtrOutput) Accelerators() ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) []ClusterClusterConfigStateWorkerConfigAccelerator {
		return v.Accelerators
	}).(ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigStateWorkerConfigPtrOutput) DiskConfig() ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *ClusterClusterConfigStateWorkerConfigDiskConfig {
		return v.DiskConfig
	}).(ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigStateWorkerConfigPtrOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateWorkerConfigPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigStateWorkerConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigStateWorkerConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigStateWorkerConfigPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfig) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStateWorkerConfigAccelerator struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount int `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType string `pulumi:"acceleratorType"`
}

type ClusterClusterConfigStateWorkerConfigAcceleratorInput interface {
	pulumi.Input

	ToClusterClusterConfigStateWorkerConfigAcceleratorOutput() ClusterClusterConfigStateWorkerConfigAcceleratorOutput
	ToClusterClusterConfigStateWorkerConfigAcceleratorOutputWithContext(context.Context) ClusterClusterConfigStateWorkerConfigAcceleratorOutput
}

type ClusterClusterConfigStateWorkerConfigAcceleratorArgs struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount pulumi.IntInput `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType pulumi.StringInput `pulumi:"acceleratorType"`
}

func (ClusterClusterConfigStateWorkerConfigAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateWorkerConfigAccelerator)(nil)).Elem()
}

func (i ClusterClusterConfigStateWorkerConfigAcceleratorArgs) ToClusterClusterConfigStateWorkerConfigAcceleratorOutput() ClusterClusterConfigStateWorkerConfigAcceleratorOutput {
	return i.ToClusterClusterConfigStateWorkerConfigAcceleratorOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateWorkerConfigAcceleratorArgs) ToClusterClusterConfigStateWorkerConfigAcceleratorOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateWorkerConfigAcceleratorOutput)
}

type ClusterClusterConfigStateWorkerConfigAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput() ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput
	ToClusterClusterConfigStateWorkerConfigAcceleratorArrayOutputWithContext(context.Context) ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput
}

type ClusterClusterConfigStateWorkerConfigAcceleratorArray []ClusterClusterConfigStateWorkerConfigAcceleratorInput

func (ClusterClusterConfigStateWorkerConfigAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigStateWorkerConfigAccelerator)(nil)).Elem()
}

func (i ClusterClusterConfigStateWorkerConfigAcceleratorArray) ToClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput() ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput {
	return i.ToClusterClusterConfigStateWorkerConfigAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateWorkerConfigAcceleratorArray) ToClusterClusterConfigStateWorkerConfigAcceleratorArrayOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput)
}

type ClusterClusterConfigStateWorkerConfigAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateWorkerConfigAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateWorkerConfigAccelerator)(nil)).Elem()
}

func (o ClusterClusterConfigStateWorkerConfigAcceleratorOutput) ToClusterClusterConfigStateWorkerConfigAcceleratorOutput() ClusterClusterConfigStateWorkerConfigAcceleratorOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigAcceleratorOutput) ToClusterClusterConfigStateWorkerConfigAcceleratorOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigAcceleratorOutput {
	return o
}

// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
func (o ClusterClusterConfigStateWorkerConfigAcceleratorOutput) AcceleratorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfigAccelerator) int { return v.AcceleratorCount }).(pulumi.IntOutput)
}

// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
func (o ClusterClusterConfigStateWorkerConfigAcceleratorOutput) AcceleratorType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfigAccelerator) string { return v.AcceleratorType }).(pulumi.StringOutput)
}

type ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigStateWorkerConfigAccelerator)(nil)).Elem()
}

func (o ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput) ToClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput() ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput) ToClusterClusterConfigStateWorkerConfigAcceleratorArrayOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterClusterConfigStateWorkerConfigAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterConfigStateWorkerConfigAccelerator {
		return vs[0].([]ClusterClusterConfigStateWorkerConfigAccelerator)[vs[1].(int)]
	}).(ClusterClusterConfigStateWorkerConfigAcceleratorOutput)
}

type ClusterClusterConfigStateWorkerConfigDiskConfig struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb *int `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType *string `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds *int `pulumi:"numLocalSsds"`
}

type ClusterClusterConfigStateWorkerConfigDiskConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigStateWorkerConfigDiskConfigOutput() ClusterClusterConfigStateWorkerConfigDiskConfigOutput
	ToClusterClusterConfigStateWorkerConfigDiskConfigOutputWithContext(context.Context) ClusterClusterConfigStateWorkerConfigDiskConfigOutput
}

type ClusterClusterConfigStateWorkerConfigDiskConfigArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb pulumi.IntPtrInput `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds pulumi.IntPtrInput `pulumi:"numLocalSsds"`
}

func (ClusterClusterConfigStateWorkerConfigDiskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateWorkerConfigDiskConfig)(nil)).Elem()
}

func (i ClusterClusterConfigStateWorkerConfigDiskConfigArgs) ToClusterClusterConfigStateWorkerConfigDiskConfigOutput() ClusterClusterConfigStateWorkerConfigDiskConfigOutput {
	return i.ToClusterClusterConfigStateWorkerConfigDiskConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateWorkerConfigDiskConfigArgs) ToClusterClusterConfigStateWorkerConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigDiskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateWorkerConfigDiskConfigOutput)
}

func (i ClusterClusterConfigStateWorkerConfigDiskConfigArgs) ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return i.ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigStateWorkerConfigDiskConfigArgs) ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateWorkerConfigDiskConfigOutput).ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutputWithContext(ctx)
}

type ClusterClusterConfigStateWorkerConfigDiskConfigPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput
	ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutputWithContext(context.Context) ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput
}

type clusterClusterConfigStateWorkerConfigDiskConfigPtrType ClusterClusterConfigStateWorkerConfigDiskConfigArgs

func ClusterClusterConfigStateWorkerConfigDiskConfigPtr(v *ClusterClusterConfigStateWorkerConfigDiskConfigArgs) ClusterClusterConfigStateWorkerConfigDiskConfigPtrInput {
	return (*clusterClusterConfigStateWorkerConfigDiskConfigPtrType)(v)
}

func (*clusterClusterConfigStateWorkerConfigDiskConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateWorkerConfigDiskConfig)(nil)).Elem()
}

func (i *clusterClusterConfigStateWorkerConfigDiskConfigPtrType) ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return i.ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigStateWorkerConfigDiskConfigPtrType) ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput)
}

type ClusterClusterConfigStateWorkerConfigDiskConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateWorkerConfigDiskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigStateWorkerConfigDiskConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateWorkerConfigDiskConfigOutput) ToClusterClusterConfigStateWorkerConfigDiskConfigOutput() ClusterClusterConfigStateWorkerConfigDiskConfigOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigDiskConfigOutput) ToClusterClusterConfigStateWorkerConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigDiskConfigOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigDiskConfigOutput) ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return o.ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigStateWorkerConfigDiskConfigOutput) ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfigDiskConfig) *ClusterClusterConfigStateWorkerConfigDiskConfig {
		return &v
	}).(ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigStateWorkerConfigDiskConfigOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfigDiskConfig) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigStateWorkerConfigDiskConfigOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfigDiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigStateWorkerConfigDiskConfigOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfigDiskConfig) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigStateWorkerConfigDiskConfig)(nil)).Elem()
}

func (o ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput) ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput() ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput) ToClusterClusterConfigStateWorkerConfigDiskConfigPtrOutputWithContext(ctx context.Context) ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput {
	return o
}

func (o ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput) Elem() ClusterClusterConfigStateWorkerConfigDiskConfigOutput {
	return o.ApplyT(func(v *ClusterClusterConfigStateWorkerConfigDiskConfig) ClusterClusterConfigStateWorkerConfigDiskConfig {
		return *v
	}).(ClusterClusterConfigStateWorkerConfigDiskConfigOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfigDiskConfig) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfigDiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigStateWorkerConfigDiskConfig) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigWorkerConfig struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators []ClusterClusterConfigWorkerConfigAccelerator `pulumi:"accelerators"`
	// Disk Config
	DiskConfig ClusterClusterConfigWorkerConfigDiskConfig `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      string   `pulumi:"imageUri"`
	InstanceNames []string `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType string `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform string `pulumi:"minCpuPlatform"`
	NumInstances   int    `pulumi:"numInstances"`
}

type ClusterClusterConfigWorkerConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigOutput() ClusterClusterConfigWorkerConfigOutput
	ToClusterClusterConfigWorkerConfigOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigOutput
}

type ClusterClusterConfigWorkerConfigArgs struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators ClusterClusterConfigWorkerConfigAcceleratorArrayInput `pulumi:"accelerators"`
	// Disk Config
	DiskConfig ClusterClusterConfigWorkerConfigDiskConfigInput `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      pulumi.StringInput      `pulumi:"imageUri"`
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform pulumi.StringInput `pulumi:"minCpuPlatform"`
	NumInstances   pulumi.IntInput    `pulumi:"numInstances"`
}

func (ClusterClusterConfigWorkerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfig)(nil)).Elem()
}

func (i ClusterClusterConfigWorkerConfigArgs) ToClusterClusterConfigWorkerConfigOutput() ClusterClusterConfigWorkerConfigOutput {
	return i.ToClusterClusterConfigWorkerConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigArgs) ToClusterClusterConfigWorkerConfigOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigOutput)
}

type ClusterClusterConfigWorkerConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfig)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigOutput) ToClusterClusterConfigWorkerConfigOutput() ClusterClusterConfigWorkerConfigOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigOutput) ToClusterClusterConfigWorkerConfigOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigOutput {
	return o
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigWorkerConfigOutput) Accelerators() ClusterClusterConfigWorkerConfigAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfig) []ClusterClusterConfigWorkerConfigAccelerator {
		return v.Accelerators
	}).(ClusterClusterConfigWorkerConfigAcceleratorArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigWorkerConfigOutput) DiskConfig() ClusterClusterConfigWorkerConfigDiskConfigOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfig) ClusterClusterConfigWorkerConfigDiskConfig {
		return v.DiskConfig
	}).(ClusterClusterConfigWorkerConfigDiskConfigOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigWorkerConfigOutput) ImageUri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfig) string { return v.ImageUri }).(pulumi.StringOutput)
}

func (o ClusterClusterConfigWorkerConfigOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfig) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigWorkerConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigWorkerConfigOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfig) string { return v.MinCpuPlatform }).(pulumi.StringOutput)
}

func (o ClusterClusterConfigWorkerConfigOutput) NumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfig) int { return v.NumInstances }).(pulumi.IntOutput)
}

type ClusterClusterConfigWorkerConfigAccelerator struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount int `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType string `pulumi:"acceleratorType"`
}

type ClusterClusterConfigWorkerConfigAcceleratorInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigAcceleratorOutput() ClusterClusterConfigWorkerConfigAcceleratorOutput
	ToClusterClusterConfigWorkerConfigAcceleratorOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigAcceleratorOutput
}

type ClusterClusterConfigWorkerConfigAcceleratorArgs struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount pulumi.IntInput `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType pulumi.StringInput `pulumi:"acceleratorType"`
}

func (ClusterClusterConfigWorkerConfigAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigAccelerator)(nil)).Elem()
}

func (i ClusterClusterConfigWorkerConfigAcceleratorArgs) ToClusterClusterConfigWorkerConfigAcceleratorOutput() ClusterClusterConfigWorkerConfigAcceleratorOutput {
	return i.ToClusterClusterConfigWorkerConfigAcceleratorOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigAcceleratorArgs) ToClusterClusterConfigWorkerConfigAcceleratorOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigAcceleratorOutput)
}

type ClusterClusterConfigWorkerConfigAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigAcceleratorArrayOutput() ClusterClusterConfigWorkerConfigAcceleratorArrayOutput
	ToClusterClusterConfigWorkerConfigAcceleratorArrayOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigAcceleratorArrayOutput
}

type ClusterClusterConfigWorkerConfigAcceleratorArray []ClusterClusterConfigWorkerConfigAcceleratorInput

func (ClusterClusterConfigWorkerConfigAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigWorkerConfigAccelerator)(nil)).Elem()
}

func (i ClusterClusterConfigWorkerConfigAcceleratorArray) ToClusterClusterConfigWorkerConfigAcceleratorArrayOutput() ClusterClusterConfigWorkerConfigAcceleratorArrayOutput {
	return i.ToClusterClusterConfigWorkerConfigAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigAcceleratorArray) ToClusterClusterConfigWorkerConfigAcceleratorArrayOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigAcceleratorArrayOutput)
}

type ClusterClusterConfigWorkerConfigAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigAccelerator)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigAcceleratorOutput) ToClusterClusterConfigWorkerConfigAcceleratorOutput() ClusterClusterConfigWorkerConfigAcceleratorOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigAcceleratorOutput) ToClusterClusterConfigWorkerConfigAcceleratorOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigAcceleratorOutput {
	return o
}

// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
func (o ClusterClusterConfigWorkerConfigAcceleratorOutput) AcceleratorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigAccelerator) int { return v.AcceleratorCount }).(pulumi.IntOutput)
}

// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
func (o ClusterClusterConfigWorkerConfigAcceleratorOutput) AcceleratorType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigAccelerator) string { return v.AcceleratorType }).(pulumi.StringOutput)
}

type ClusterClusterConfigWorkerConfigAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigWorkerConfigAccelerator)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigAcceleratorArrayOutput) ToClusterClusterConfigWorkerConfigAcceleratorArrayOutput() ClusterClusterConfigWorkerConfigAcceleratorArrayOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigAcceleratorArrayOutput) ToClusterClusterConfigWorkerConfigAcceleratorArrayOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigAcceleratorArrayOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterClusterConfigWorkerConfigAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterConfigWorkerConfigAccelerator {
		return vs[0].([]ClusterClusterConfigWorkerConfigAccelerator)[vs[1].(int)]
	}).(ClusterClusterConfigWorkerConfigAcceleratorOutput)
}

type ClusterClusterConfigWorkerConfigAcceleratorArgs struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount int `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType string `pulumi:"acceleratorType"`
}

type ClusterClusterConfigWorkerConfigAcceleratorArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigAcceleratorArgsOutput() ClusterClusterConfigWorkerConfigAcceleratorArgsOutput
	ToClusterClusterConfigWorkerConfigAcceleratorArgsOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigAcceleratorArgsOutput
}

type ClusterClusterConfigWorkerConfigAcceleratorArgsArgs struct {
	// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
	AcceleratorCount pulumi.IntInput `pulumi:"acceleratorCount"`
	// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
	AcceleratorType pulumi.StringInput `pulumi:"acceleratorType"`
}

func (ClusterClusterConfigWorkerConfigAcceleratorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigAcceleratorArgs)(nil)).Elem()
}

func (i ClusterClusterConfigWorkerConfigAcceleratorArgsArgs) ToClusterClusterConfigWorkerConfigAcceleratorArgsOutput() ClusterClusterConfigWorkerConfigAcceleratorArgsOutput {
	return i.ToClusterClusterConfigWorkerConfigAcceleratorArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigAcceleratorArgsArgs) ToClusterClusterConfigWorkerConfigAcceleratorArgsOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigAcceleratorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigAcceleratorArgsOutput)
}

type ClusterClusterConfigWorkerConfigAcceleratorArgsArrayInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput() ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput
	ToClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput
}

type ClusterClusterConfigWorkerConfigAcceleratorArgsArray []ClusterClusterConfigWorkerConfigAcceleratorArgsInput

func (ClusterClusterConfigWorkerConfigAcceleratorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigWorkerConfigAcceleratorArgs)(nil)).Elem()
}

func (i ClusterClusterConfigWorkerConfigAcceleratorArgsArray) ToClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput() ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput {
	return i.ToClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigAcceleratorArgsArray) ToClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput)
}

type ClusterClusterConfigWorkerConfigAcceleratorArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigAcceleratorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigAcceleratorArgs)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigAcceleratorArgsOutput) ToClusterClusterConfigWorkerConfigAcceleratorArgsOutput() ClusterClusterConfigWorkerConfigAcceleratorArgsOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigAcceleratorArgsOutput) ToClusterClusterConfigWorkerConfigAcceleratorArgsOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigAcceleratorArgsOutput {
	return o
}

// The number of the accelerator cards of this type exposed to this instance. Often restricted to one of `1`, `2`, `4`, or `8`.
func (o ClusterClusterConfigWorkerConfigAcceleratorArgsOutput) AcceleratorCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigAcceleratorArgs) int { return v.AcceleratorCount }).(pulumi.IntOutput)
}

// The short name of the accelerator type to expose to this instance. For example, `nvidia-tesla-k80`.
func (o ClusterClusterConfigWorkerConfigAcceleratorArgsOutput) AcceleratorType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigAcceleratorArgs) string { return v.AcceleratorType }).(pulumi.StringOutput)
}

type ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterConfigWorkerConfigAcceleratorArgs)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput) ToClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput() ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput) ToClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput) Index(i pulumi.IntInput) ClusterClusterConfigWorkerConfigAcceleratorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterConfigWorkerConfigAcceleratorArgs {
		return vs[0].([]ClusterClusterConfigWorkerConfigAcceleratorArgs)[vs[1].(int)]
	}).(ClusterClusterConfigWorkerConfigAcceleratorArgsOutput)
}

type ClusterClusterConfigWorkerConfigArgs struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators []ClusterClusterConfigWorkerConfigAcceleratorArgs `pulumi:"accelerators"`
	// Disk Config
	DiskConfig *ClusterClusterConfigWorkerConfigDiskConfigArgs `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      *string  `pulumi:"imageUri"`
	InstanceNames []string `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType *string `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	NumInstances   *int    `pulumi:"numInstances"`
}

type ClusterClusterConfigWorkerConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigArgsOutput() ClusterClusterConfigWorkerConfigArgsOutput
	ToClusterClusterConfigWorkerConfigArgsOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigArgsOutput
}

type ClusterClusterConfigWorkerConfigArgsArgs struct {
	// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
	Accelerators ClusterClusterConfigWorkerConfigAcceleratorArgsArrayInput `pulumi:"accelerators"`
	// Disk Config
	DiskConfig ClusterClusterConfigWorkerConfigDiskConfigArgsPtrInput `pulumi:"diskConfig"`
	// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
	// for more information.
	ImageUri      pulumi.StringPtrInput   `pulumi:"imageUri"`
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// The name of a Google Compute Engine machine type
	// to create for the worker nodes. If not specified, GCP will default to a predetermined
	// computed value (currently `n1-standard-4`).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The name of a minimum generation of CPU family
	// for the master. If not specified, GCP will default to a predetermined computed value
	// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for details about which CPU families are available (and defaulted) for each zone.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	NumInstances   pulumi.IntPtrInput    `pulumi:"numInstances"`
}

func (ClusterClusterConfigWorkerConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigWorkerConfigArgsArgs) ToClusterClusterConfigWorkerConfigArgsOutput() ClusterClusterConfigWorkerConfigArgsOutput {
	return i.ToClusterClusterConfigWorkerConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigArgsArgs) ToClusterClusterConfigWorkerConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigArgsOutput)
}

func (i ClusterClusterConfigWorkerConfigArgsArgs) ToClusterClusterConfigWorkerConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return i.ToClusterClusterConfigWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigArgsArgs) ToClusterClusterConfigWorkerConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigArgsOutput).ToClusterClusterConfigWorkerConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigWorkerConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigArgsPtrOutput
	ToClusterClusterConfigWorkerConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigArgsPtrOutput
}

type clusterClusterConfigWorkerConfigArgsPtrType ClusterClusterConfigWorkerConfigArgsArgs

func ClusterClusterConfigWorkerConfigArgsPtr(v *ClusterClusterConfigWorkerConfigArgsArgs) ClusterClusterConfigWorkerConfigArgsPtrInput {
	return (*clusterClusterConfigWorkerConfigArgsPtrType)(v)
}

func (*clusterClusterConfigWorkerConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigWorkerConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigWorkerConfigArgsPtrType) ToClusterClusterConfigWorkerConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return i.ToClusterClusterConfigWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigWorkerConfigArgsPtrType) ToClusterClusterConfigWorkerConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigArgsPtrOutput)
}

type ClusterClusterConfigWorkerConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigArgsOutput) ToClusterClusterConfigWorkerConfigArgsOutput() ClusterClusterConfigWorkerConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigArgsOutput) ToClusterClusterConfigWorkerConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigArgsOutput) ToClusterClusterConfigWorkerConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return o.ToClusterClusterConfigWorkerConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigWorkerConfigArgsOutput) ToClusterClusterConfigWorkerConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *ClusterClusterConfigWorkerConfigArgs {
		return &v
	}).(ClusterClusterConfigWorkerConfigArgsPtrOutput)
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigWorkerConfigArgsOutput) Accelerators() ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) []ClusterClusterConfigWorkerConfigAcceleratorArgs {
		return v.Accelerators
	}).(ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigWorkerConfigArgsOutput) DiskConfig() ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *ClusterClusterConfigWorkerConfigDiskConfigArgs {
		return v.DiskConfig
	}).(ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigWorkerConfigArgsOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigWorkerConfigArgsOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigWorkerConfigArgsOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigWorkerConfigArgsOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigWorkerConfigArgsOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigWorkerConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigWorkerConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) ToClusterClusterConfigWorkerConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) ToClusterClusterConfigWorkerConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) Elem() ClusterClusterConfigWorkerConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigWorkerConfigArgs) ClusterClusterConfigWorkerConfigArgs { return *v }).(ClusterClusterConfigWorkerConfigArgsOutput)
}

// The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) Accelerators() ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) []ClusterClusterConfigWorkerConfigAcceleratorArgs {
		return v.Accelerators
	}).(ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput)
}

// Disk Config
func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) DiskConfig() ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *ClusterClusterConfigWorkerConfigDiskConfigArgs {
		return v.DiskConfig
	}).(ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput)
}

// The URI for the image to use for this worker.  See [the guide](https://cloud.google.com/dataproc/docs/guides/dataproc-images)
// for more information.
func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// The name of a Google Compute Engine machine type
// to create for the worker nodes. If not specified, GCP will default to a predetermined
// computed value (currently `n1-standard-4`).
func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The name of a minimum generation of CPU family
// for the master. If not specified, GCP will default to a predetermined computed value
// for each zone. See [the guide](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for details about which CPU families are available (and defaulted) for each zone.
func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o ClusterClusterConfigWorkerConfigArgsPtrOutput) NumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigArgs) *int { return v.NumInstances }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigWorkerConfigDiskConfig struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb int `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType *string `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds int `pulumi:"numLocalSsds"`
}

type ClusterClusterConfigWorkerConfigDiskConfigInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigDiskConfigOutput() ClusterClusterConfigWorkerConfigDiskConfigOutput
	ToClusterClusterConfigWorkerConfigDiskConfigOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigDiskConfigOutput
}

type ClusterClusterConfigWorkerConfigDiskConfigArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb pulumi.IntInput `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds pulumi.IntInput `pulumi:"numLocalSsds"`
}

func (ClusterClusterConfigWorkerConfigDiskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigDiskConfig)(nil)).Elem()
}

func (i ClusterClusterConfigWorkerConfigDiskConfigArgs) ToClusterClusterConfigWorkerConfigDiskConfigOutput() ClusterClusterConfigWorkerConfigDiskConfigOutput {
	return i.ToClusterClusterConfigWorkerConfigDiskConfigOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigDiskConfigArgs) ToClusterClusterConfigWorkerConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigDiskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigDiskConfigOutput)
}

type ClusterClusterConfigWorkerConfigDiskConfigOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigDiskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigDiskConfig)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigDiskConfigOutput) ToClusterClusterConfigWorkerConfigDiskConfigOutput() ClusterClusterConfigWorkerConfigDiskConfigOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigDiskConfigOutput) ToClusterClusterConfigWorkerConfigDiskConfigOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigDiskConfigOutput {
	return o
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigWorkerConfigDiskConfigOutput) BootDiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfig) int { return v.BootDiskSizeGb }).(pulumi.IntOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigWorkerConfigDiskConfigOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfig) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigWorkerConfigDiskConfigOutput) NumLocalSsds() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfig) int { return v.NumLocalSsds }).(pulumi.IntOutput)
}

type ClusterClusterConfigWorkerConfigDiskConfigArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb *int `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType *string `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds *int `pulumi:"numLocalSsds"`
}

type ClusterClusterConfigWorkerConfigDiskConfigArgsInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigDiskConfigArgsOutput() ClusterClusterConfigWorkerConfigDiskConfigArgsOutput
	ToClusterClusterConfigWorkerConfigDiskConfigArgsOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigDiskConfigArgsOutput
}

type ClusterClusterConfigWorkerConfigDiskConfigArgsArgs struct {
	// Size of the primary disk attached to each preemptible worker node, specified
	// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
	// computed value if not set (currently 500GB). Note: If SSDs are not
	// attached, it also contains the HDFS data blocks and Hadoop working directories.
	BootDiskSizeGb pulumi.IntPtrInput `pulumi:"bootDiskSizeGb"`
	// The disk type of the primary disk attached to each preemptible worker node.
	// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
	BootDiskType pulumi.StringPtrInput `pulumi:"bootDiskType"`
	// The amount of local SSD disks that will be
	// attached to each preemptible worker node. Defaults to 0.
	NumLocalSsds pulumi.IntPtrInput `pulumi:"numLocalSsds"`
}

func (ClusterClusterConfigWorkerConfigDiskConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigDiskConfigArgs)(nil)).Elem()
}

func (i ClusterClusterConfigWorkerConfigDiskConfigArgsArgs) ToClusterClusterConfigWorkerConfigDiskConfigArgsOutput() ClusterClusterConfigWorkerConfigDiskConfigArgsOutput {
	return i.ToClusterClusterConfigWorkerConfigDiskConfigArgsOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigDiskConfigArgsArgs) ToClusterClusterConfigWorkerConfigDiskConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigDiskConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigDiskConfigArgsOutput)
}

func (i ClusterClusterConfigWorkerConfigDiskConfigArgsArgs) ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return i.ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterConfigWorkerConfigDiskConfigArgsArgs) ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigDiskConfigArgsOutput).ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx)
}

type ClusterClusterConfigWorkerConfigDiskConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput
	ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutputWithContext(context.Context) ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput
}

type clusterClusterConfigWorkerConfigDiskConfigArgsPtrType ClusterClusterConfigWorkerConfigDiskConfigArgsArgs

func ClusterClusterConfigWorkerConfigDiskConfigArgsPtr(v *ClusterClusterConfigWorkerConfigDiskConfigArgsArgs) ClusterClusterConfigWorkerConfigDiskConfigArgsPtrInput {
	return (*clusterClusterConfigWorkerConfigDiskConfigArgsPtrType)(v)
}

func (*clusterClusterConfigWorkerConfigDiskConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigWorkerConfigDiskConfigArgs)(nil)).Elem()
}

func (i *clusterClusterConfigWorkerConfigDiskConfigArgsPtrType) ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return i.ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterConfigWorkerConfigDiskConfigArgsPtrType) ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput)
}

type ClusterClusterConfigWorkerConfigDiskConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigDiskConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterConfigWorkerConfigDiskConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigDiskConfigArgsOutput) ToClusterClusterConfigWorkerConfigDiskConfigArgsOutput() ClusterClusterConfigWorkerConfigDiskConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigDiskConfigArgsOutput) ToClusterClusterConfigWorkerConfigDiskConfigArgsOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigDiskConfigArgsOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigDiskConfigArgsOutput) ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return o.ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterConfigWorkerConfigDiskConfigArgsOutput) ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfigArgs) *ClusterClusterConfigWorkerConfigDiskConfigArgs {
		return &v
	}).(ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigWorkerConfigDiskConfigArgsOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfigArgs) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigWorkerConfigDiskConfigArgsOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfigArgs) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigWorkerConfigDiskConfigArgsOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfigArgs) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterConfigWorkerConfigDiskConfigArgs)(nil)).Elem()
}

func (o ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput) ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput() ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput) ToClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutputWithContext(ctx context.Context) ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput {
	return o
}

func (o ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput) Elem() ClusterClusterConfigWorkerConfigDiskConfigArgsOutput {
	return o.ApplyT(func(v *ClusterClusterConfigWorkerConfigDiskConfigArgs) ClusterClusterConfigWorkerConfigDiskConfigArgs {
		return *v
	}).(ClusterClusterConfigWorkerConfigDiskConfigArgsOutput)
}

// Size of the primary disk attached to each preemptible worker node, specified
// in GB. The smallest allowed disk size is 10GB. GCP will default to a predetermined
// computed value if not set (currently 500GB). Note: If SSDs are not
// attached, it also contains the HDFS data blocks and Hadoop working directories.
func (o ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput) BootDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfigArgs) *int { return v.BootDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The disk type of the primary disk attached to each preemptible worker node.
// One of `"pd-ssd"` or `"pd-standard"`. Defaults to `"pd-standard"`.
func (o ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput) BootDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfigArgs) *string { return v.BootDiskType }).(pulumi.StringPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each preemptible worker node. Defaults to 0.
func (o ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput) NumLocalSsds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterConfigWorkerConfigDiskConfigArgs) *int { return v.NumLocalSsds }).(pulumi.IntPtrOutput)
}

type ClusterIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ClusterIAMBindingConditionInput interface {
	pulumi.Input

	ToClusterIAMBindingConditionOutput() ClusterIAMBindingConditionOutput
	ToClusterIAMBindingConditionOutputWithContext(context.Context) ClusterIAMBindingConditionOutput
}

type ClusterIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ClusterIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMBindingCondition)(nil)).Elem()
}

func (i ClusterIAMBindingConditionArgs) ToClusterIAMBindingConditionOutput() ClusterIAMBindingConditionOutput {
	return i.ToClusterIAMBindingConditionOutputWithContext(context.Background())
}

func (i ClusterIAMBindingConditionArgs) ToClusterIAMBindingConditionOutputWithContext(ctx context.Context) ClusterIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMBindingConditionOutput)
}

func (i ClusterIAMBindingConditionArgs) ToClusterIAMBindingConditionPtrOutput() ClusterIAMBindingConditionPtrOutput {
	return i.ToClusterIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i ClusterIAMBindingConditionArgs) ToClusterIAMBindingConditionPtrOutputWithContext(ctx context.Context) ClusterIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMBindingConditionOutput).ToClusterIAMBindingConditionPtrOutputWithContext(ctx)
}

type ClusterIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToClusterIAMBindingConditionPtrOutput() ClusterIAMBindingConditionPtrOutput
	ToClusterIAMBindingConditionPtrOutputWithContext(context.Context) ClusterIAMBindingConditionPtrOutput
}

type clusterIAMBindingConditionPtrType ClusterIAMBindingConditionArgs

func ClusterIAMBindingConditionPtr(v *ClusterIAMBindingConditionArgs) ClusterIAMBindingConditionPtrInput {
	return (*clusterIAMBindingConditionPtrType)(v)
}

func (*clusterIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIAMBindingCondition)(nil)).Elem()
}

func (i *clusterIAMBindingConditionPtrType) ToClusterIAMBindingConditionPtrOutput() ClusterIAMBindingConditionPtrOutput {
	return i.ToClusterIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *clusterIAMBindingConditionPtrType) ToClusterIAMBindingConditionPtrOutputWithContext(ctx context.Context) ClusterIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMBindingConditionPtrOutput)
}

type ClusterIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (ClusterIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMBindingCondition)(nil)).Elem()
}

func (o ClusterIAMBindingConditionOutput) ToClusterIAMBindingConditionOutput() ClusterIAMBindingConditionOutput {
	return o
}

func (o ClusterIAMBindingConditionOutput) ToClusterIAMBindingConditionOutputWithContext(ctx context.Context) ClusterIAMBindingConditionOutput {
	return o
}

func (o ClusterIAMBindingConditionOutput) ToClusterIAMBindingConditionPtrOutput() ClusterIAMBindingConditionPtrOutput {
	return o.ToClusterIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o ClusterIAMBindingConditionOutput) ToClusterIAMBindingConditionPtrOutputWithContext(ctx context.Context) ClusterIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v ClusterIAMBindingCondition) *ClusterIAMBindingCondition {
		return &v
	}).(ClusterIAMBindingConditionPtrOutput)
}
func (o ClusterIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ClusterIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (ClusterIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIAMBindingCondition)(nil)).Elem()
}

func (o ClusterIAMBindingConditionPtrOutput) ToClusterIAMBindingConditionPtrOutput() ClusterIAMBindingConditionPtrOutput {
	return o
}

func (o ClusterIAMBindingConditionPtrOutput) ToClusterIAMBindingConditionPtrOutputWithContext(ctx context.Context) ClusterIAMBindingConditionPtrOutput {
	return o
}

func (o ClusterIAMBindingConditionPtrOutput) Elem() ClusterIAMBindingConditionOutput {
	return o.ApplyT(func(v *ClusterIAMBindingCondition) ClusterIAMBindingCondition { return *v }).(ClusterIAMBindingConditionOutput)
}

func (o ClusterIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ClusterIAMBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ClusterIAMBindingConditionArgsInput interface {
	pulumi.Input

	ToClusterIAMBindingConditionArgsOutput() ClusterIAMBindingConditionArgsOutput
	ToClusterIAMBindingConditionArgsOutputWithContext(context.Context) ClusterIAMBindingConditionArgsOutput
}

type ClusterIAMBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ClusterIAMBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMBindingConditionArgs)(nil)).Elem()
}

func (i ClusterIAMBindingConditionArgsArgs) ToClusterIAMBindingConditionArgsOutput() ClusterIAMBindingConditionArgsOutput {
	return i.ToClusterIAMBindingConditionArgsOutputWithContext(context.Background())
}

func (i ClusterIAMBindingConditionArgsArgs) ToClusterIAMBindingConditionArgsOutputWithContext(ctx context.Context) ClusterIAMBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMBindingConditionArgsOutput)
}

func (i ClusterIAMBindingConditionArgsArgs) ToClusterIAMBindingConditionArgsPtrOutput() ClusterIAMBindingConditionArgsPtrOutput {
	return i.ToClusterIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i ClusterIAMBindingConditionArgsArgs) ToClusterIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) ClusterIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMBindingConditionArgsOutput).ToClusterIAMBindingConditionArgsPtrOutputWithContext(ctx)
}

type ClusterIAMBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToClusterIAMBindingConditionArgsPtrOutput() ClusterIAMBindingConditionArgsPtrOutput
	ToClusterIAMBindingConditionArgsPtrOutputWithContext(context.Context) ClusterIAMBindingConditionArgsPtrOutput
}

type clusterIAMBindingConditionArgsPtrType ClusterIAMBindingConditionArgsArgs

func ClusterIAMBindingConditionArgsPtr(v *ClusterIAMBindingConditionArgsArgs) ClusterIAMBindingConditionArgsPtrInput {
	return (*clusterIAMBindingConditionArgsPtrType)(v)
}

func (*clusterIAMBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIAMBindingConditionArgs)(nil)).Elem()
}

func (i *clusterIAMBindingConditionArgsPtrType) ToClusterIAMBindingConditionArgsPtrOutput() ClusterIAMBindingConditionArgsPtrOutput {
	return i.ToClusterIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *clusterIAMBindingConditionArgsPtrType) ToClusterIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) ClusterIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMBindingConditionArgsPtrOutput)
}

type ClusterIAMBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (ClusterIAMBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMBindingConditionArgs)(nil)).Elem()
}

func (o ClusterIAMBindingConditionArgsOutput) ToClusterIAMBindingConditionArgsOutput() ClusterIAMBindingConditionArgsOutput {
	return o
}

func (o ClusterIAMBindingConditionArgsOutput) ToClusterIAMBindingConditionArgsOutputWithContext(ctx context.Context) ClusterIAMBindingConditionArgsOutput {
	return o
}

func (o ClusterIAMBindingConditionArgsOutput) ToClusterIAMBindingConditionArgsPtrOutput() ClusterIAMBindingConditionArgsPtrOutput {
	return o.ToClusterIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o ClusterIAMBindingConditionArgsOutput) ToClusterIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) ClusterIAMBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionArgs) *ClusterIAMBindingConditionArgs {
		return &v
	}).(ClusterIAMBindingConditionArgsPtrOutput)
}
func (o ClusterIAMBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type ClusterIAMBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterIAMBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIAMBindingConditionArgs)(nil)).Elem()
}

func (o ClusterIAMBindingConditionArgsPtrOutput) ToClusterIAMBindingConditionArgsPtrOutput() ClusterIAMBindingConditionArgsPtrOutput {
	return o
}

func (o ClusterIAMBindingConditionArgsPtrOutput) ToClusterIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) ClusterIAMBindingConditionArgsPtrOutput {
	return o
}

func (o ClusterIAMBindingConditionArgsPtrOutput) Elem() ClusterIAMBindingConditionArgsOutput {
	return o.ApplyT(func(v *ClusterIAMBindingConditionArgs) ClusterIAMBindingConditionArgs { return *v }).(ClusterIAMBindingConditionArgsOutput)
}

func (o ClusterIAMBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type ClusterIAMBindingConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ClusterIAMBindingConditionStateInput interface {
	pulumi.Input

	ToClusterIAMBindingConditionStateOutput() ClusterIAMBindingConditionStateOutput
	ToClusterIAMBindingConditionStateOutputWithContext(context.Context) ClusterIAMBindingConditionStateOutput
}

type ClusterIAMBindingConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ClusterIAMBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMBindingConditionState)(nil)).Elem()
}

func (i ClusterIAMBindingConditionStateArgs) ToClusterIAMBindingConditionStateOutput() ClusterIAMBindingConditionStateOutput {
	return i.ToClusterIAMBindingConditionStateOutputWithContext(context.Background())
}

func (i ClusterIAMBindingConditionStateArgs) ToClusterIAMBindingConditionStateOutputWithContext(ctx context.Context) ClusterIAMBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMBindingConditionStateOutput)
}

type ClusterIAMBindingConditionStateOutput struct{ *pulumi.OutputState }

func (ClusterIAMBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMBindingConditionState)(nil)).Elem()
}

func (o ClusterIAMBindingConditionStateOutput) ToClusterIAMBindingConditionStateOutput() ClusterIAMBindingConditionStateOutput {
	return o
}

func (o ClusterIAMBindingConditionStateOutput) ToClusterIAMBindingConditionStateOutputWithContext(ctx context.Context) ClusterIAMBindingConditionStateOutput {
	return o
}

func (o ClusterIAMBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type ClusterIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ClusterIAMMemberConditionInput interface {
	pulumi.Input

	ToClusterIAMMemberConditionOutput() ClusterIAMMemberConditionOutput
	ToClusterIAMMemberConditionOutputWithContext(context.Context) ClusterIAMMemberConditionOutput
}

type ClusterIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ClusterIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMMemberCondition)(nil)).Elem()
}

func (i ClusterIAMMemberConditionArgs) ToClusterIAMMemberConditionOutput() ClusterIAMMemberConditionOutput {
	return i.ToClusterIAMMemberConditionOutputWithContext(context.Background())
}

func (i ClusterIAMMemberConditionArgs) ToClusterIAMMemberConditionOutputWithContext(ctx context.Context) ClusterIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMMemberConditionOutput)
}

func (i ClusterIAMMemberConditionArgs) ToClusterIAMMemberConditionPtrOutput() ClusterIAMMemberConditionPtrOutput {
	return i.ToClusterIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i ClusterIAMMemberConditionArgs) ToClusterIAMMemberConditionPtrOutputWithContext(ctx context.Context) ClusterIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMMemberConditionOutput).ToClusterIAMMemberConditionPtrOutputWithContext(ctx)
}

type ClusterIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToClusterIAMMemberConditionPtrOutput() ClusterIAMMemberConditionPtrOutput
	ToClusterIAMMemberConditionPtrOutputWithContext(context.Context) ClusterIAMMemberConditionPtrOutput
}

type clusterIAMMemberConditionPtrType ClusterIAMMemberConditionArgs

func ClusterIAMMemberConditionPtr(v *ClusterIAMMemberConditionArgs) ClusterIAMMemberConditionPtrInput {
	return (*clusterIAMMemberConditionPtrType)(v)
}

func (*clusterIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIAMMemberCondition)(nil)).Elem()
}

func (i *clusterIAMMemberConditionPtrType) ToClusterIAMMemberConditionPtrOutput() ClusterIAMMemberConditionPtrOutput {
	return i.ToClusterIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *clusterIAMMemberConditionPtrType) ToClusterIAMMemberConditionPtrOutputWithContext(ctx context.Context) ClusterIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMMemberConditionPtrOutput)
}

type ClusterIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (ClusterIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMMemberCondition)(nil)).Elem()
}

func (o ClusterIAMMemberConditionOutput) ToClusterIAMMemberConditionOutput() ClusterIAMMemberConditionOutput {
	return o
}

func (o ClusterIAMMemberConditionOutput) ToClusterIAMMemberConditionOutputWithContext(ctx context.Context) ClusterIAMMemberConditionOutput {
	return o
}

func (o ClusterIAMMemberConditionOutput) ToClusterIAMMemberConditionPtrOutput() ClusterIAMMemberConditionPtrOutput {
	return o.ToClusterIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o ClusterIAMMemberConditionOutput) ToClusterIAMMemberConditionPtrOutputWithContext(ctx context.Context) ClusterIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v ClusterIAMMemberCondition) *ClusterIAMMemberCondition {
		return &v
	}).(ClusterIAMMemberConditionPtrOutput)
}
func (o ClusterIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ClusterIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (ClusterIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIAMMemberCondition)(nil)).Elem()
}

func (o ClusterIAMMemberConditionPtrOutput) ToClusterIAMMemberConditionPtrOutput() ClusterIAMMemberConditionPtrOutput {
	return o
}

func (o ClusterIAMMemberConditionPtrOutput) ToClusterIAMMemberConditionPtrOutputWithContext(ctx context.Context) ClusterIAMMemberConditionPtrOutput {
	return o
}

func (o ClusterIAMMemberConditionPtrOutput) Elem() ClusterIAMMemberConditionOutput {
	return o.ApplyT(func(v *ClusterIAMMemberCondition) ClusterIAMMemberCondition { return *v }).(ClusterIAMMemberConditionOutput)
}

func (o ClusterIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type ClusterIAMMemberConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ClusterIAMMemberConditionArgsInput interface {
	pulumi.Input

	ToClusterIAMMemberConditionArgsOutput() ClusterIAMMemberConditionArgsOutput
	ToClusterIAMMemberConditionArgsOutputWithContext(context.Context) ClusterIAMMemberConditionArgsOutput
}

type ClusterIAMMemberConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ClusterIAMMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMMemberConditionArgs)(nil)).Elem()
}

func (i ClusterIAMMemberConditionArgsArgs) ToClusterIAMMemberConditionArgsOutput() ClusterIAMMemberConditionArgsOutput {
	return i.ToClusterIAMMemberConditionArgsOutputWithContext(context.Background())
}

func (i ClusterIAMMemberConditionArgsArgs) ToClusterIAMMemberConditionArgsOutputWithContext(ctx context.Context) ClusterIAMMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMMemberConditionArgsOutput)
}

func (i ClusterIAMMemberConditionArgsArgs) ToClusterIAMMemberConditionArgsPtrOutput() ClusterIAMMemberConditionArgsPtrOutput {
	return i.ToClusterIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i ClusterIAMMemberConditionArgsArgs) ToClusterIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) ClusterIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMMemberConditionArgsOutput).ToClusterIAMMemberConditionArgsPtrOutputWithContext(ctx)
}

type ClusterIAMMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToClusterIAMMemberConditionArgsPtrOutput() ClusterIAMMemberConditionArgsPtrOutput
	ToClusterIAMMemberConditionArgsPtrOutputWithContext(context.Context) ClusterIAMMemberConditionArgsPtrOutput
}

type clusterIAMMemberConditionArgsPtrType ClusterIAMMemberConditionArgsArgs

func ClusterIAMMemberConditionArgsPtr(v *ClusterIAMMemberConditionArgsArgs) ClusterIAMMemberConditionArgsPtrInput {
	return (*clusterIAMMemberConditionArgsPtrType)(v)
}

func (*clusterIAMMemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIAMMemberConditionArgs)(nil)).Elem()
}

func (i *clusterIAMMemberConditionArgsPtrType) ToClusterIAMMemberConditionArgsPtrOutput() ClusterIAMMemberConditionArgsPtrOutput {
	return i.ToClusterIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *clusterIAMMemberConditionArgsPtrType) ToClusterIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) ClusterIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMMemberConditionArgsPtrOutput)
}

type ClusterIAMMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (ClusterIAMMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMMemberConditionArgs)(nil)).Elem()
}

func (o ClusterIAMMemberConditionArgsOutput) ToClusterIAMMemberConditionArgsOutput() ClusterIAMMemberConditionArgsOutput {
	return o
}

func (o ClusterIAMMemberConditionArgsOutput) ToClusterIAMMemberConditionArgsOutputWithContext(ctx context.Context) ClusterIAMMemberConditionArgsOutput {
	return o
}

func (o ClusterIAMMemberConditionArgsOutput) ToClusterIAMMemberConditionArgsPtrOutput() ClusterIAMMemberConditionArgsPtrOutput {
	return o.ToClusterIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o ClusterIAMMemberConditionArgsOutput) ToClusterIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) ClusterIAMMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionArgs) *ClusterIAMMemberConditionArgs {
		return &v
	}).(ClusterIAMMemberConditionArgsPtrOutput)
}
func (o ClusterIAMMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type ClusterIAMMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterIAMMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIAMMemberConditionArgs)(nil)).Elem()
}

func (o ClusterIAMMemberConditionArgsPtrOutput) ToClusterIAMMemberConditionArgsPtrOutput() ClusterIAMMemberConditionArgsPtrOutput {
	return o
}

func (o ClusterIAMMemberConditionArgsPtrOutput) ToClusterIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) ClusterIAMMemberConditionArgsPtrOutput {
	return o
}

func (o ClusterIAMMemberConditionArgsPtrOutput) Elem() ClusterIAMMemberConditionArgsOutput {
	return o.ApplyT(func(v *ClusterIAMMemberConditionArgs) ClusterIAMMemberConditionArgs { return *v }).(ClusterIAMMemberConditionArgsOutput)
}

func (o ClusterIAMMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type ClusterIAMMemberConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type ClusterIAMMemberConditionStateInput interface {
	pulumi.Input

	ToClusterIAMMemberConditionStateOutput() ClusterIAMMemberConditionStateOutput
	ToClusterIAMMemberConditionStateOutputWithContext(context.Context) ClusterIAMMemberConditionStateOutput
}

type ClusterIAMMemberConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (ClusterIAMMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMMemberConditionState)(nil)).Elem()
}

func (i ClusterIAMMemberConditionStateArgs) ToClusterIAMMemberConditionStateOutput() ClusterIAMMemberConditionStateOutput {
	return i.ToClusterIAMMemberConditionStateOutputWithContext(context.Background())
}

func (i ClusterIAMMemberConditionStateArgs) ToClusterIAMMemberConditionStateOutputWithContext(ctx context.Context) ClusterIAMMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIAMMemberConditionStateOutput)
}

type ClusterIAMMemberConditionStateOutput struct{ *pulumi.OutputState }

func (ClusterIAMMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIAMMemberConditionState)(nil)).Elem()
}

func (o ClusterIAMMemberConditionStateOutput) ToClusterIAMMemberConditionStateOutput() ClusterIAMMemberConditionStateOutput {
	return o
}

func (o ClusterIAMMemberConditionStateOutput) ToClusterIAMMemberConditionStateOutputWithContext(ctx context.Context) ClusterIAMMemberConditionStateOutput {
	return o
}

func (o ClusterIAMMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClusterIAMMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o ClusterIAMMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIAMMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type JobHadoopConfig struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                     `pulumi:"jarFileUris"`
	LoggingConfig JobHadoopConfigLoggingConfig `pulumi:"loggingConfig"`
	MainClass     *string                      `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri *string `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
}

type JobHadoopConfigInput interface {
	pulumi.Input

	ToJobHadoopConfigOutput() JobHadoopConfigOutput
	ToJobHadoopConfigOutputWithContext(context.Context) JobHadoopConfigOutput
}

type JobHadoopConfigArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput           `pulumi:"jarFileUris"`
	LoggingConfig JobHadoopConfigLoggingConfigInput `pulumi:"loggingConfig"`
	MainClass     pulumi.StringPtrInput             `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri pulumi.StringPtrInput `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (JobHadoopConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfig)(nil)).Elem()
}

func (i JobHadoopConfigArgs) ToJobHadoopConfigOutput() JobHadoopConfigOutput {
	return i.ToJobHadoopConfigOutputWithContext(context.Background())
}

func (i JobHadoopConfigArgs) ToJobHadoopConfigOutputWithContext(ctx context.Context) JobHadoopConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigOutput)
}

func (i JobHadoopConfigArgs) ToJobHadoopConfigPtrOutput() JobHadoopConfigPtrOutput {
	return i.ToJobHadoopConfigPtrOutputWithContext(context.Background())
}

func (i JobHadoopConfigArgs) ToJobHadoopConfigPtrOutputWithContext(ctx context.Context) JobHadoopConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigOutput).ToJobHadoopConfigPtrOutputWithContext(ctx)
}

type JobHadoopConfigPtrInput interface {
	pulumi.Input

	ToJobHadoopConfigPtrOutput() JobHadoopConfigPtrOutput
	ToJobHadoopConfigPtrOutputWithContext(context.Context) JobHadoopConfigPtrOutput
}

type jobHadoopConfigPtrType JobHadoopConfigArgs

func JobHadoopConfigPtr(v *JobHadoopConfigArgs) JobHadoopConfigPtrInput {
	return (*jobHadoopConfigPtrType)(v)
}

func (*jobHadoopConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHadoopConfig)(nil)).Elem()
}

func (i *jobHadoopConfigPtrType) ToJobHadoopConfigPtrOutput() JobHadoopConfigPtrOutput {
	return i.ToJobHadoopConfigPtrOutputWithContext(context.Background())
}

func (i *jobHadoopConfigPtrType) ToJobHadoopConfigPtrOutputWithContext(ctx context.Context) JobHadoopConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigPtrOutput)
}

type JobHadoopConfigOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfig)(nil)).Elem()
}

func (o JobHadoopConfigOutput) ToJobHadoopConfigOutput() JobHadoopConfigOutput {
	return o
}

func (o JobHadoopConfigOutput) ToJobHadoopConfigOutputWithContext(ctx context.Context) JobHadoopConfigOutput {
	return o
}

func (o JobHadoopConfigOutput) ToJobHadoopConfigPtrOutput() JobHadoopConfigPtrOutput {
	return o.ToJobHadoopConfigPtrOutputWithContext(context.Background())
}

func (o JobHadoopConfigOutput) ToJobHadoopConfigPtrOutputWithContext(ctx context.Context) JobHadoopConfigPtrOutput {
	return o.ApplyT(func(v JobHadoopConfig) *JobHadoopConfig {
		return &v
	}).(JobHadoopConfigPtrOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobHadoopConfigOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfig) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobHadoopConfigOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfig) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobHadoopConfigOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfig) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHadoopConfigOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobHadoopConfigOutput) LoggingConfig() JobHadoopConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobHadoopConfig) JobHadoopConfigLoggingConfig { return v.LoggingConfig }).(JobHadoopConfigLoggingConfigOutput)
}

func (o JobHadoopConfigOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfig) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobHadoopConfigOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfig) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHadoopConfigOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobHadoopConfigPtrOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHadoopConfig)(nil)).Elem()
}

func (o JobHadoopConfigPtrOutput) ToJobHadoopConfigPtrOutput() JobHadoopConfigPtrOutput {
	return o
}

func (o JobHadoopConfigPtrOutput) ToJobHadoopConfigPtrOutputWithContext(ctx context.Context) JobHadoopConfigPtrOutput {
	return o
}

func (o JobHadoopConfigPtrOutput) Elem() JobHadoopConfigOutput {
	return o.ApplyT(func(v *JobHadoopConfig) JobHadoopConfig { return *v }).(JobHadoopConfigOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobHadoopConfigPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfig) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobHadoopConfigPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfig) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobHadoopConfigPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfig) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHadoopConfigPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobHadoopConfigPtrOutput) LoggingConfig() JobHadoopConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobHadoopConfig) JobHadoopConfigLoggingConfig { return v.LoggingConfig }).(JobHadoopConfigLoggingConfigOutput)
}

func (o JobHadoopConfigPtrOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfig) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobHadoopConfigPtrOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfig) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHadoopConfigPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobHadoopConfigArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                          `pulumi:"jarFileUris"`
	LoggingConfig *JobHadoopConfigLoggingConfigArgs `pulumi:"loggingConfig"`
	MainClass     *string                           `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri *string `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
}

type JobHadoopConfigArgsInput interface {
	pulumi.Input

	ToJobHadoopConfigArgsOutput() JobHadoopConfigArgsOutput
	ToJobHadoopConfigArgsOutputWithContext(context.Context) JobHadoopConfigArgsOutput
}

type JobHadoopConfigArgsArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput                  `pulumi:"jarFileUris"`
	LoggingConfig JobHadoopConfigLoggingConfigArgsPtrInput `pulumi:"loggingConfig"`
	MainClass     pulumi.StringPtrInput                    `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri pulumi.StringPtrInput `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (JobHadoopConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigArgs)(nil)).Elem()
}

func (i JobHadoopConfigArgsArgs) ToJobHadoopConfigArgsOutput() JobHadoopConfigArgsOutput {
	return i.ToJobHadoopConfigArgsOutputWithContext(context.Background())
}

func (i JobHadoopConfigArgsArgs) ToJobHadoopConfigArgsOutputWithContext(ctx context.Context) JobHadoopConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigArgsOutput)
}

func (i JobHadoopConfigArgsArgs) ToJobHadoopConfigArgsPtrOutput() JobHadoopConfigArgsPtrOutput {
	return i.ToJobHadoopConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobHadoopConfigArgsArgs) ToJobHadoopConfigArgsPtrOutputWithContext(ctx context.Context) JobHadoopConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigArgsOutput).ToJobHadoopConfigArgsPtrOutputWithContext(ctx)
}

type JobHadoopConfigArgsPtrInput interface {
	pulumi.Input

	ToJobHadoopConfigArgsPtrOutput() JobHadoopConfigArgsPtrOutput
	ToJobHadoopConfigArgsPtrOutputWithContext(context.Context) JobHadoopConfigArgsPtrOutput
}

type jobHadoopConfigArgsPtrType JobHadoopConfigArgsArgs

func JobHadoopConfigArgsPtr(v *JobHadoopConfigArgsArgs) JobHadoopConfigArgsPtrInput {
	return (*jobHadoopConfigArgsPtrType)(v)
}

func (*jobHadoopConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHadoopConfigArgs)(nil)).Elem()
}

func (i *jobHadoopConfigArgsPtrType) ToJobHadoopConfigArgsPtrOutput() JobHadoopConfigArgsPtrOutput {
	return i.ToJobHadoopConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobHadoopConfigArgsPtrType) ToJobHadoopConfigArgsPtrOutputWithContext(ctx context.Context) JobHadoopConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigArgsPtrOutput)
}

type JobHadoopConfigArgsOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigArgs)(nil)).Elem()
}

func (o JobHadoopConfigArgsOutput) ToJobHadoopConfigArgsOutput() JobHadoopConfigArgsOutput {
	return o
}

func (o JobHadoopConfigArgsOutput) ToJobHadoopConfigArgsOutputWithContext(ctx context.Context) JobHadoopConfigArgsOutput {
	return o
}

func (o JobHadoopConfigArgsOutput) ToJobHadoopConfigArgsPtrOutput() JobHadoopConfigArgsPtrOutput {
	return o.ToJobHadoopConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobHadoopConfigArgsOutput) ToJobHadoopConfigArgsPtrOutputWithContext(ctx context.Context) JobHadoopConfigArgsPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) *JobHadoopConfigArgs {
		return &v
	}).(JobHadoopConfigArgsPtrOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobHadoopConfigArgsOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobHadoopConfigArgsOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobHadoopConfigArgsOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHadoopConfigArgsOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobHadoopConfigArgsOutput) LoggingConfig() JobHadoopConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) *JobHadoopConfigLoggingConfigArgs { return v.LoggingConfig }).(JobHadoopConfigLoggingConfigArgsPtrOutput)
}

func (o JobHadoopConfigArgsOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobHadoopConfigArgsOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHadoopConfigArgsOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobHadoopConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHadoopConfigArgs)(nil)).Elem()
}

func (o JobHadoopConfigArgsPtrOutput) ToJobHadoopConfigArgsPtrOutput() JobHadoopConfigArgsPtrOutput {
	return o
}

func (o JobHadoopConfigArgsPtrOutput) ToJobHadoopConfigArgsPtrOutputWithContext(ctx context.Context) JobHadoopConfigArgsPtrOutput {
	return o
}

func (o JobHadoopConfigArgsPtrOutput) Elem() JobHadoopConfigArgsOutput {
	return o.ApplyT(func(v *JobHadoopConfigArgs) JobHadoopConfigArgs { return *v }).(JobHadoopConfigArgsOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobHadoopConfigArgsPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobHadoopConfigArgsPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobHadoopConfigArgsPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHadoopConfigArgsPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobHadoopConfigArgsPtrOutput) LoggingConfig() JobHadoopConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) *JobHadoopConfigLoggingConfigArgs { return v.LoggingConfig }).(JobHadoopConfigLoggingConfigArgsPtrOutput)
}

func (o JobHadoopConfigArgsPtrOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobHadoopConfigArgsPtrOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHadoopConfigArgsPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobHadoopConfigLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobHadoopConfigLoggingConfigInput interface {
	pulumi.Input

	ToJobHadoopConfigLoggingConfigOutput() JobHadoopConfigLoggingConfigOutput
	ToJobHadoopConfigLoggingConfigOutputWithContext(context.Context) JobHadoopConfigLoggingConfigOutput
}

type JobHadoopConfigLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobHadoopConfigLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigLoggingConfig)(nil)).Elem()
}

func (i JobHadoopConfigLoggingConfigArgs) ToJobHadoopConfigLoggingConfigOutput() JobHadoopConfigLoggingConfigOutput {
	return i.ToJobHadoopConfigLoggingConfigOutputWithContext(context.Background())
}

func (i JobHadoopConfigLoggingConfigArgs) ToJobHadoopConfigLoggingConfigOutputWithContext(ctx context.Context) JobHadoopConfigLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigLoggingConfigOutput)
}

type JobHadoopConfigLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigLoggingConfig)(nil)).Elem()
}

func (o JobHadoopConfigLoggingConfigOutput) ToJobHadoopConfigLoggingConfigOutput() JobHadoopConfigLoggingConfigOutput {
	return o
}

func (o JobHadoopConfigLoggingConfigOutput) ToJobHadoopConfigLoggingConfigOutputWithContext(ctx context.Context) JobHadoopConfigLoggingConfigOutput {
	return o
}

func (o JobHadoopConfigLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfigLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobHadoopConfigLoggingConfigArgs struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobHadoopConfigLoggingConfigArgsInput interface {
	pulumi.Input

	ToJobHadoopConfigLoggingConfigArgsOutput() JobHadoopConfigLoggingConfigArgsOutput
	ToJobHadoopConfigLoggingConfigArgsOutputWithContext(context.Context) JobHadoopConfigLoggingConfigArgsOutput
}

type JobHadoopConfigLoggingConfigArgsArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobHadoopConfigLoggingConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigLoggingConfigArgs)(nil)).Elem()
}

func (i JobHadoopConfigLoggingConfigArgsArgs) ToJobHadoopConfigLoggingConfigArgsOutput() JobHadoopConfigLoggingConfigArgsOutput {
	return i.ToJobHadoopConfigLoggingConfigArgsOutputWithContext(context.Background())
}

func (i JobHadoopConfigLoggingConfigArgsArgs) ToJobHadoopConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobHadoopConfigLoggingConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigLoggingConfigArgsOutput)
}

func (i JobHadoopConfigLoggingConfigArgsArgs) ToJobHadoopConfigLoggingConfigArgsPtrOutput() JobHadoopConfigLoggingConfigArgsPtrOutput {
	return i.ToJobHadoopConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobHadoopConfigLoggingConfigArgsArgs) ToJobHadoopConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobHadoopConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigLoggingConfigArgsOutput).ToJobHadoopConfigLoggingConfigArgsPtrOutputWithContext(ctx)
}

type JobHadoopConfigLoggingConfigArgsPtrInput interface {
	pulumi.Input

	ToJobHadoopConfigLoggingConfigArgsPtrOutput() JobHadoopConfigLoggingConfigArgsPtrOutput
	ToJobHadoopConfigLoggingConfigArgsPtrOutputWithContext(context.Context) JobHadoopConfigLoggingConfigArgsPtrOutput
}

type jobHadoopConfigLoggingConfigArgsPtrType JobHadoopConfigLoggingConfigArgsArgs

func JobHadoopConfigLoggingConfigArgsPtr(v *JobHadoopConfigLoggingConfigArgsArgs) JobHadoopConfigLoggingConfigArgsPtrInput {
	return (*jobHadoopConfigLoggingConfigArgsPtrType)(v)
}

func (*jobHadoopConfigLoggingConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHadoopConfigLoggingConfigArgs)(nil)).Elem()
}

func (i *jobHadoopConfigLoggingConfigArgsPtrType) ToJobHadoopConfigLoggingConfigArgsPtrOutput() JobHadoopConfigLoggingConfigArgsPtrOutput {
	return i.ToJobHadoopConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobHadoopConfigLoggingConfigArgsPtrType) ToJobHadoopConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobHadoopConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigLoggingConfigArgsPtrOutput)
}

type JobHadoopConfigLoggingConfigArgsOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigLoggingConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobHadoopConfigLoggingConfigArgsOutput) ToJobHadoopConfigLoggingConfigArgsOutput() JobHadoopConfigLoggingConfigArgsOutput {
	return o
}

func (o JobHadoopConfigLoggingConfigArgsOutput) ToJobHadoopConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobHadoopConfigLoggingConfigArgsOutput {
	return o
}

func (o JobHadoopConfigLoggingConfigArgsOutput) ToJobHadoopConfigLoggingConfigArgsPtrOutput() JobHadoopConfigLoggingConfigArgsPtrOutput {
	return o.ToJobHadoopConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobHadoopConfigLoggingConfigArgsOutput) ToJobHadoopConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobHadoopConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigLoggingConfigArgs) *JobHadoopConfigLoggingConfigArgs {
		return &v
	}).(JobHadoopConfigLoggingConfigArgsPtrOutput)
}
func (o JobHadoopConfigLoggingConfigArgsOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobHadoopConfigLoggingConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigLoggingConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHadoopConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobHadoopConfigLoggingConfigArgsPtrOutput) ToJobHadoopConfigLoggingConfigArgsPtrOutput() JobHadoopConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobHadoopConfigLoggingConfigArgsPtrOutput) ToJobHadoopConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobHadoopConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobHadoopConfigLoggingConfigArgsPtrOutput) Elem() JobHadoopConfigLoggingConfigArgsOutput {
	return o.ApplyT(func(v *JobHadoopConfigLoggingConfigArgs) JobHadoopConfigLoggingConfigArgs { return *v }).(JobHadoopConfigLoggingConfigArgsOutput)
}

func (o JobHadoopConfigLoggingConfigArgsPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobHadoopConfigState struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                           `pulumi:"jarFileUris"`
	LoggingConfig *JobHadoopConfigStateLoggingConfig `pulumi:"loggingConfig"`
	MainClass     *string                            `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri *string `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
}

type JobHadoopConfigStateInput interface {
	pulumi.Input

	ToJobHadoopConfigStateOutput() JobHadoopConfigStateOutput
	ToJobHadoopConfigStateOutputWithContext(context.Context) JobHadoopConfigStateOutput
}

type JobHadoopConfigStateArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput                   `pulumi:"jarFileUris"`
	LoggingConfig JobHadoopConfigStateLoggingConfigPtrInput `pulumi:"loggingConfig"`
	MainClass     pulumi.StringPtrInput                     `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri pulumi.StringPtrInput `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (JobHadoopConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigState)(nil)).Elem()
}

func (i JobHadoopConfigStateArgs) ToJobHadoopConfigStateOutput() JobHadoopConfigStateOutput {
	return i.ToJobHadoopConfigStateOutputWithContext(context.Background())
}

func (i JobHadoopConfigStateArgs) ToJobHadoopConfigStateOutputWithContext(ctx context.Context) JobHadoopConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigStateOutput)
}

type JobHadoopConfigStateOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigState)(nil)).Elem()
}

func (o JobHadoopConfigStateOutput) ToJobHadoopConfigStateOutput() JobHadoopConfigStateOutput {
	return o
}

func (o JobHadoopConfigStateOutput) ToJobHadoopConfigStateOutputWithContext(ctx context.Context) JobHadoopConfigStateOutput {
	return o
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobHadoopConfigStateOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigState) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobHadoopConfigStateOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigState) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobHadoopConfigStateOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigState) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHadoopConfigStateOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHadoopConfigState) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobHadoopConfigStateOutput) LoggingConfig() JobHadoopConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigState) *JobHadoopConfigStateLoggingConfig { return v.LoggingConfig }).(JobHadoopConfigStateLoggingConfigPtrOutput)
}

func (o JobHadoopConfigStateOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigState) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobHadoopConfigStateOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigState) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHadoopConfigStateOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfigState) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobHadoopConfigStateLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobHadoopConfigStateLoggingConfigInput interface {
	pulumi.Input

	ToJobHadoopConfigStateLoggingConfigOutput() JobHadoopConfigStateLoggingConfigOutput
	ToJobHadoopConfigStateLoggingConfigOutputWithContext(context.Context) JobHadoopConfigStateLoggingConfigOutput
}

type JobHadoopConfigStateLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobHadoopConfigStateLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigStateLoggingConfig)(nil)).Elem()
}

func (i JobHadoopConfigStateLoggingConfigArgs) ToJobHadoopConfigStateLoggingConfigOutput() JobHadoopConfigStateLoggingConfigOutput {
	return i.ToJobHadoopConfigStateLoggingConfigOutputWithContext(context.Background())
}

func (i JobHadoopConfigStateLoggingConfigArgs) ToJobHadoopConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobHadoopConfigStateLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigStateLoggingConfigOutput)
}

func (i JobHadoopConfigStateLoggingConfigArgs) ToJobHadoopConfigStateLoggingConfigPtrOutput() JobHadoopConfigStateLoggingConfigPtrOutput {
	return i.ToJobHadoopConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i JobHadoopConfigStateLoggingConfigArgs) ToJobHadoopConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobHadoopConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigStateLoggingConfigOutput).ToJobHadoopConfigStateLoggingConfigPtrOutputWithContext(ctx)
}

type JobHadoopConfigStateLoggingConfigPtrInput interface {
	pulumi.Input

	ToJobHadoopConfigStateLoggingConfigPtrOutput() JobHadoopConfigStateLoggingConfigPtrOutput
	ToJobHadoopConfigStateLoggingConfigPtrOutputWithContext(context.Context) JobHadoopConfigStateLoggingConfigPtrOutput
}

type jobHadoopConfigStateLoggingConfigPtrType JobHadoopConfigStateLoggingConfigArgs

func JobHadoopConfigStateLoggingConfigPtr(v *JobHadoopConfigStateLoggingConfigArgs) JobHadoopConfigStateLoggingConfigPtrInput {
	return (*jobHadoopConfigStateLoggingConfigPtrType)(v)
}

func (*jobHadoopConfigStateLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHadoopConfigStateLoggingConfig)(nil)).Elem()
}

func (i *jobHadoopConfigStateLoggingConfigPtrType) ToJobHadoopConfigStateLoggingConfigPtrOutput() JobHadoopConfigStateLoggingConfigPtrOutput {
	return i.ToJobHadoopConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *jobHadoopConfigStateLoggingConfigPtrType) ToJobHadoopConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobHadoopConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHadoopConfigStateLoggingConfigPtrOutput)
}

type JobHadoopConfigStateLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigStateLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHadoopConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobHadoopConfigStateLoggingConfigOutput) ToJobHadoopConfigStateLoggingConfigOutput() JobHadoopConfigStateLoggingConfigOutput {
	return o
}

func (o JobHadoopConfigStateLoggingConfigOutput) ToJobHadoopConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobHadoopConfigStateLoggingConfigOutput {
	return o
}

func (o JobHadoopConfigStateLoggingConfigOutput) ToJobHadoopConfigStateLoggingConfigPtrOutput() JobHadoopConfigStateLoggingConfigPtrOutput {
	return o.ToJobHadoopConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (o JobHadoopConfigStateLoggingConfigOutput) ToJobHadoopConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobHadoopConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobHadoopConfigStateLoggingConfig) *JobHadoopConfigStateLoggingConfig {
		return &v
	}).(JobHadoopConfigStateLoggingConfigPtrOutput)
}
func (o JobHadoopConfigStateLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobHadoopConfigStateLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (JobHadoopConfigStateLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHadoopConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobHadoopConfigStateLoggingConfigPtrOutput) ToJobHadoopConfigStateLoggingConfigPtrOutput() JobHadoopConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobHadoopConfigStateLoggingConfigPtrOutput) ToJobHadoopConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobHadoopConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobHadoopConfigStateLoggingConfigPtrOutput) Elem() JobHadoopConfigStateLoggingConfigOutput {
	return o.ApplyT(func(v *JobHadoopConfigStateLoggingConfig) JobHadoopConfigStateLoggingConfig { return *v }).(JobHadoopConfigStateLoggingConfigOutput)
}

func (o JobHadoopConfigStateLoggingConfigPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHadoopConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobHiveConfig struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure *bool `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris []string `pulumi:"jarFileUris"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri *string  `pulumi:"queryFileUri"`
	QueryLists   []string `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

type JobHiveConfigInput interface {
	pulumi.Input

	ToJobHiveConfigOutput() JobHiveConfigOutput
	ToJobHiveConfigOutputWithContext(context.Context) JobHiveConfigOutput
}

type JobHiveConfigArgs struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure pulumi.BoolPtrInput `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri pulumi.StringPtrInput   `pulumi:"queryFileUri"`
	QueryLists   pulumi.StringArrayInput `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (JobHiveConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHiveConfig)(nil)).Elem()
}

func (i JobHiveConfigArgs) ToJobHiveConfigOutput() JobHiveConfigOutput {
	return i.ToJobHiveConfigOutputWithContext(context.Background())
}

func (i JobHiveConfigArgs) ToJobHiveConfigOutputWithContext(ctx context.Context) JobHiveConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHiveConfigOutput)
}

func (i JobHiveConfigArgs) ToJobHiveConfigPtrOutput() JobHiveConfigPtrOutput {
	return i.ToJobHiveConfigPtrOutputWithContext(context.Background())
}

func (i JobHiveConfigArgs) ToJobHiveConfigPtrOutputWithContext(ctx context.Context) JobHiveConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHiveConfigOutput).ToJobHiveConfigPtrOutputWithContext(ctx)
}

type JobHiveConfigPtrInput interface {
	pulumi.Input

	ToJobHiveConfigPtrOutput() JobHiveConfigPtrOutput
	ToJobHiveConfigPtrOutputWithContext(context.Context) JobHiveConfigPtrOutput
}

type jobHiveConfigPtrType JobHiveConfigArgs

func JobHiveConfigPtr(v *JobHiveConfigArgs) JobHiveConfigPtrInput {
	return (*jobHiveConfigPtrType)(v)
}

func (*jobHiveConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHiveConfig)(nil)).Elem()
}

func (i *jobHiveConfigPtrType) ToJobHiveConfigPtrOutput() JobHiveConfigPtrOutput {
	return i.ToJobHiveConfigPtrOutputWithContext(context.Background())
}

func (i *jobHiveConfigPtrType) ToJobHiveConfigPtrOutputWithContext(ctx context.Context) JobHiveConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHiveConfigPtrOutput)
}

type JobHiveConfigOutput struct{ *pulumi.OutputState }

func (JobHiveConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHiveConfig)(nil)).Elem()
}

func (o JobHiveConfigOutput) ToJobHiveConfigOutput() JobHiveConfigOutput {
	return o
}

func (o JobHiveConfigOutput) ToJobHiveConfigOutputWithContext(ctx context.Context) JobHiveConfigOutput {
	return o
}

func (o JobHiveConfigOutput) ToJobHiveConfigPtrOutput() JobHiveConfigPtrOutput {
	return o.ToJobHiveConfigPtrOutputWithContext(context.Background())
}

func (o JobHiveConfigOutput) ToJobHiveConfigPtrOutputWithContext(ctx context.Context) JobHiveConfigPtrOutput {
	return o.ApplyT(func(v JobHiveConfig) *JobHiveConfig {
		return &v
	}).(JobHiveConfigPtrOutput)
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobHiveConfigOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobHiveConfig) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHiveConfigOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHiveConfigOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobHiveConfigOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHiveConfig) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobHiveConfigOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfig) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobHiveConfigOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfig) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobHiveConfigPtrOutput struct{ *pulumi.OutputState }

func (JobHiveConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHiveConfig)(nil)).Elem()
}

func (o JobHiveConfigPtrOutput) ToJobHiveConfigPtrOutput() JobHiveConfigPtrOutput {
	return o
}

func (o JobHiveConfigPtrOutput) ToJobHiveConfigPtrOutputWithContext(ctx context.Context) JobHiveConfigPtrOutput {
	return o
}

func (o JobHiveConfigPtrOutput) Elem() JobHiveConfigOutput {
	return o.ApplyT(func(v *JobHiveConfig) JobHiveConfig { return *v }).(JobHiveConfigOutput)
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobHiveConfigPtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobHiveConfig) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHiveConfigPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHiveConfigPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobHiveConfigPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHiveConfig) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobHiveConfigPtrOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfig) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobHiveConfigPtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfig) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobHiveConfigArgs struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure *bool `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris []string `pulumi:"jarFileUris"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri *string  `pulumi:"queryFileUri"`
	QueryLists   []string `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

type JobHiveConfigArgsInput interface {
	pulumi.Input

	ToJobHiveConfigArgsOutput() JobHiveConfigArgsOutput
	ToJobHiveConfigArgsOutputWithContext(context.Context) JobHiveConfigArgsOutput
}

type JobHiveConfigArgsArgs struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure pulumi.BoolPtrInput `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri pulumi.StringPtrInput   `pulumi:"queryFileUri"`
	QueryLists   pulumi.StringArrayInput `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (JobHiveConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHiveConfigArgs)(nil)).Elem()
}

func (i JobHiveConfigArgsArgs) ToJobHiveConfigArgsOutput() JobHiveConfigArgsOutput {
	return i.ToJobHiveConfigArgsOutputWithContext(context.Background())
}

func (i JobHiveConfigArgsArgs) ToJobHiveConfigArgsOutputWithContext(ctx context.Context) JobHiveConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHiveConfigArgsOutput)
}

func (i JobHiveConfigArgsArgs) ToJobHiveConfigArgsPtrOutput() JobHiveConfigArgsPtrOutput {
	return i.ToJobHiveConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobHiveConfigArgsArgs) ToJobHiveConfigArgsPtrOutputWithContext(ctx context.Context) JobHiveConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHiveConfigArgsOutput).ToJobHiveConfigArgsPtrOutputWithContext(ctx)
}

type JobHiveConfigArgsPtrInput interface {
	pulumi.Input

	ToJobHiveConfigArgsPtrOutput() JobHiveConfigArgsPtrOutput
	ToJobHiveConfigArgsPtrOutputWithContext(context.Context) JobHiveConfigArgsPtrOutput
}

type jobHiveConfigArgsPtrType JobHiveConfigArgsArgs

func JobHiveConfigArgsPtr(v *JobHiveConfigArgsArgs) JobHiveConfigArgsPtrInput {
	return (*jobHiveConfigArgsPtrType)(v)
}

func (*jobHiveConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHiveConfigArgs)(nil)).Elem()
}

func (i *jobHiveConfigArgsPtrType) ToJobHiveConfigArgsPtrOutput() JobHiveConfigArgsPtrOutput {
	return i.ToJobHiveConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobHiveConfigArgsPtrType) ToJobHiveConfigArgsPtrOutputWithContext(ctx context.Context) JobHiveConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHiveConfigArgsPtrOutput)
}

type JobHiveConfigArgsOutput struct{ *pulumi.OutputState }

func (JobHiveConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHiveConfigArgs)(nil)).Elem()
}

func (o JobHiveConfigArgsOutput) ToJobHiveConfigArgsOutput() JobHiveConfigArgsOutput {
	return o
}

func (o JobHiveConfigArgsOutput) ToJobHiveConfigArgsOutputWithContext(ctx context.Context) JobHiveConfigArgsOutput {
	return o
}

func (o JobHiveConfigArgsOutput) ToJobHiveConfigArgsPtrOutput() JobHiveConfigArgsPtrOutput {
	return o.ToJobHiveConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobHiveConfigArgsOutput) ToJobHiveConfigArgsPtrOutputWithContext(ctx context.Context) JobHiveConfigArgsPtrOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) *JobHiveConfigArgs {
		return &v
	}).(JobHiveConfigArgsPtrOutput)
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobHiveConfigArgsOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHiveConfigArgsOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHiveConfigArgsOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobHiveConfigArgsOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobHiveConfigArgsOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobHiveConfigArgsOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobHiveConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobHiveConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobHiveConfigArgs)(nil)).Elem()
}

func (o JobHiveConfigArgsPtrOutput) ToJobHiveConfigArgsPtrOutput() JobHiveConfigArgsPtrOutput {
	return o
}

func (o JobHiveConfigArgsPtrOutput) ToJobHiveConfigArgsPtrOutputWithContext(ctx context.Context) JobHiveConfigArgsPtrOutput {
	return o
}

func (o JobHiveConfigArgsPtrOutput) Elem() JobHiveConfigArgsOutput {
	return o.ApplyT(func(v *JobHiveConfigArgs) JobHiveConfigArgs { return *v }).(JobHiveConfigArgsOutput)
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobHiveConfigArgsPtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHiveConfigArgsPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHiveConfigArgsPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobHiveConfigArgsPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobHiveConfigArgsPtrOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobHiveConfigArgsPtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfigArgs) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobHiveConfigState struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure *bool `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris []string `pulumi:"jarFileUris"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri *string  `pulumi:"queryFileUri"`
	QueryLists   []string `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

type JobHiveConfigStateInput interface {
	pulumi.Input

	ToJobHiveConfigStateOutput() JobHiveConfigStateOutput
	ToJobHiveConfigStateOutputWithContext(context.Context) JobHiveConfigStateOutput
}

type JobHiveConfigStateArgs struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure pulumi.BoolPtrInput `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris pulumi.StringArrayInput `pulumi:"jarFileUris"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri pulumi.StringPtrInput   `pulumi:"queryFileUri"`
	QueryLists   pulumi.StringArrayInput `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (JobHiveConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHiveConfigState)(nil)).Elem()
}

func (i JobHiveConfigStateArgs) ToJobHiveConfigStateOutput() JobHiveConfigStateOutput {
	return i.ToJobHiveConfigStateOutputWithContext(context.Background())
}

func (i JobHiveConfigStateArgs) ToJobHiveConfigStateOutputWithContext(ctx context.Context) JobHiveConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobHiveConfigStateOutput)
}

type JobHiveConfigStateOutput struct{ *pulumi.OutputState }

func (JobHiveConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobHiveConfigState)(nil)).Elem()
}

func (o JobHiveConfigStateOutput) ToJobHiveConfigStateOutput() JobHiveConfigStateOutput {
	return o
}

func (o JobHiveConfigStateOutput) ToJobHiveConfigStateOutputWithContext(ctx context.Context) JobHiveConfigStateOutput {
	return o
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobHiveConfigStateOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobHiveConfigState) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobHiveConfigStateOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfigState) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobHiveConfigStateOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfigState) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobHiveConfigStateOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobHiveConfigState) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobHiveConfigStateOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobHiveConfigState) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobHiveConfigStateOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobHiveConfigState) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobIAMBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type JobIAMBindingConditionInput interface {
	pulumi.Input

	ToJobIAMBindingConditionOutput() JobIAMBindingConditionOutput
	ToJobIAMBindingConditionOutputWithContext(context.Context) JobIAMBindingConditionOutput
}

type JobIAMBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (JobIAMBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMBindingCondition)(nil)).Elem()
}

func (i JobIAMBindingConditionArgs) ToJobIAMBindingConditionOutput() JobIAMBindingConditionOutput {
	return i.ToJobIAMBindingConditionOutputWithContext(context.Background())
}

func (i JobIAMBindingConditionArgs) ToJobIAMBindingConditionOutputWithContext(ctx context.Context) JobIAMBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMBindingConditionOutput)
}

func (i JobIAMBindingConditionArgs) ToJobIAMBindingConditionPtrOutput() JobIAMBindingConditionPtrOutput {
	return i.ToJobIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i JobIAMBindingConditionArgs) ToJobIAMBindingConditionPtrOutputWithContext(ctx context.Context) JobIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMBindingConditionOutput).ToJobIAMBindingConditionPtrOutputWithContext(ctx)
}

type JobIAMBindingConditionPtrInput interface {
	pulumi.Input

	ToJobIAMBindingConditionPtrOutput() JobIAMBindingConditionPtrOutput
	ToJobIAMBindingConditionPtrOutputWithContext(context.Context) JobIAMBindingConditionPtrOutput
}

type jobIAMBindingConditionPtrType JobIAMBindingConditionArgs

func JobIAMBindingConditionPtr(v *JobIAMBindingConditionArgs) JobIAMBindingConditionPtrInput {
	return (*jobIAMBindingConditionPtrType)(v)
}

func (*jobIAMBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobIAMBindingCondition)(nil)).Elem()
}

func (i *jobIAMBindingConditionPtrType) ToJobIAMBindingConditionPtrOutput() JobIAMBindingConditionPtrOutput {
	return i.ToJobIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (i *jobIAMBindingConditionPtrType) ToJobIAMBindingConditionPtrOutputWithContext(ctx context.Context) JobIAMBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMBindingConditionPtrOutput)
}

type JobIAMBindingConditionOutput struct{ *pulumi.OutputState }

func (JobIAMBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMBindingCondition)(nil)).Elem()
}

func (o JobIAMBindingConditionOutput) ToJobIAMBindingConditionOutput() JobIAMBindingConditionOutput {
	return o
}

func (o JobIAMBindingConditionOutput) ToJobIAMBindingConditionOutputWithContext(ctx context.Context) JobIAMBindingConditionOutput {
	return o
}

func (o JobIAMBindingConditionOutput) ToJobIAMBindingConditionPtrOutput() JobIAMBindingConditionPtrOutput {
	return o.ToJobIAMBindingConditionPtrOutputWithContext(context.Background())
}

func (o JobIAMBindingConditionOutput) ToJobIAMBindingConditionPtrOutputWithContext(ctx context.Context) JobIAMBindingConditionPtrOutput {
	return o.ApplyT(func(v JobIAMBindingCondition) *JobIAMBindingCondition {
		return &v
	}).(JobIAMBindingConditionPtrOutput)
}
func (o JobIAMBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type JobIAMBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (JobIAMBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobIAMBindingCondition)(nil)).Elem()
}

func (o JobIAMBindingConditionPtrOutput) ToJobIAMBindingConditionPtrOutput() JobIAMBindingConditionPtrOutput {
	return o
}

func (o JobIAMBindingConditionPtrOutput) ToJobIAMBindingConditionPtrOutputWithContext(ctx context.Context) JobIAMBindingConditionPtrOutput {
	return o
}

func (o JobIAMBindingConditionPtrOutput) Elem() JobIAMBindingConditionOutput {
	return o.ApplyT(func(v *JobIAMBindingCondition) JobIAMBindingCondition { return *v }).(JobIAMBindingConditionOutput)
}

func (o JobIAMBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMBindingConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMBindingConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type JobIAMBindingConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type JobIAMBindingConditionArgsInput interface {
	pulumi.Input

	ToJobIAMBindingConditionArgsOutput() JobIAMBindingConditionArgsOutput
	ToJobIAMBindingConditionArgsOutputWithContext(context.Context) JobIAMBindingConditionArgsOutput
}

type JobIAMBindingConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (JobIAMBindingConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMBindingConditionArgs)(nil)).Elem()
}

func (i JobIAMBindingConditionArgsArgs) ToJobIAMBindingConditionArgsOutput() JobIAMBindingConditionArgsOutput {
	return i.ToJobIAMBindingConditionArgsOutputWithContext(context.Background())
}

func (i JobIAMBindingConditionArgsArgs) ToJobIAMBindingConditionArgsOutputWithContext(ctx context.Context) JobIAMBindingConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMBindingConditionArgsOutput)
}

func (i JobIAMBindingConditionArgsArgs) ToJobIAMBindingConditionArgsPtrOutput() JobIAMBindingConditionArgsPtrOutput {
	return i.ToJobIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i JobIAMBindingConditionArgsArgs) ToJobIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) JobIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMBindingConditionArgsOutput).ToJobIAMBindingConditionArgsPtrOutputWithContext(ctx)
}

type JobIAMBindingConditionArgsPtrInput interface {
	pulumi.Input

	ToJobIAMBindingConditionArgsPtrOutput() JobIAMBindingConditionArgsPtrOutput
	ToJobIAMBindingConditionArgsPtrOutputWithContext(context.Context) JobIAMBindingConditionArgsPtrOutput
}

type jobIAMBindingConditionArgsPtrType JobIAMBindingConditionArgsArgs

func JobIAMBindingConditionArgsPtr(v *JobIAMBindingConditionArgsArgs) JobIAMBindingConditionArgsPtrInput {
	return (*jobIAMBindingConditionArgsPtrType)(v)
}

func (*jobIAMBindingConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobIAMBindingConditionArgs)(nil)).Elem()
}

func (i *jobIAMBindingConditionArgsPtrType) ToJobIAMBindingConditionArgsPtrOutput() JobIAMBindingConditionArgsPtrOutput {
	return i.ToJobIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (i *jobIAMBindingConditionArgsPtrType) ToJobIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) JobIAMBindingConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMBindingConditionArgsPtrOutput)
}

type JobIAMBindingConditionArgsOutput struct{ *pulumi.OutputState }

func (JobIAMBindingConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMBindingConditionArgs)(nil)).Elem()
}

func (o JobIAMBindingConditionArgsOutput) ToJobIAMBindingConditionArgsOutput() JobIAMBindingConditionArgsOutput {
	return o
}

func (o JobIAMBindingConditionArgsOutput) ToJobIAMBindingConditionArgsOutputWithContext(ctx context.Context) JobIAMBindingConditionArgsOutput {
	return o
}

func (o JobIAMBindingConditionArgsOutput) ToJobIAMBindingConditionArgsPtrOutput() JobIAMBindingConditionArgsPtrOutput {
	return o.ToJobIAMBindingConditionArgsPtrOutputWithContext(context.Background())
}

func (o JobIAMBindingConditionArgsOutput) ToJobIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) JobIAMBindingConditionArgsPtrOutput {
	return o.ApplyT(func(v JobIAMBindingConditionArgs) *JobIAMBindingConditionArgs {
		return &v
	}).(JobIAMBindingConditionArgsPtrOutput)
}
func (o JobIAMBindingConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMBindingConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMBindingConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type JobIAMBindingConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (JobIAMBindingConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobIAMBindingConditionArgs)(nil)).Elem()
}

func (o JobIAMBindingConditionArgsPtrOutput) ToJobIAMBindingConditionArgsPtrOutput() JobIAMBindingConditionArgsPtrOutput {
	return o
}

func (o JobIAMBindingConditionArgsPtrOutput) ToJobIAMBindingConditionArgsPtrOutputWithContext(ctx context.Context) JobIAMBindingConditionArgsPtrOutput {
	return o
}

func (o JobIAMBindingConditionArgsPtrOutput) Elem() JobIAMBindingConditionArgsOutput {
	return o.ApplyT(func(v *JobIAMBindingConditionArgs) JobIAMBindingConditionArgs { return *v }).(JobIAMBindingConditionArgsOutput)
}

func (o JobIAMBindingConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMBindingConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMBindingConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMBindingConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type JobIAMBindingConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type JobIAMBindingConditionStateInput interface {
	pulumi.Input

	ToJobIAMBindingConditionStateOutput() JobIAMBindingConditionStateOutput
	ToJobIAMBindingConditionStateOutputWithContext(context.Context) JobIAMBindingConditionStateOutput
}

type JobIAMBindingConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (JobIAMBindingConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMBindingConditionState)(nil)).Elem()
}

func (i JobIAMBindingConditionStateArgs) ToJobIAMBindingConditionStateOutput() JobIAMBindingConditionStateOutput {
	return i.ToJobIAMBindingConditionStateOutputWithContext(context.Background())
}

func (i JobIAMBindingConditionStateArgs) ToJobIAMBindingConditionStateOutputWithContext(ctx context.Context) JobIAMBindingConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMBindingConditionStateOutput)
}

type JobIAMBindingConditionStateOutput struct{ *pulumi.OutputState }

func (JobIAMBindingConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMBindingConditionState)(nil)).Elem()
}

func (o JobIAMBindingConditionStateOutput) ToJobIAMBindingConditionStateOutput() JobIAMBindingConditionStateOutput {
	return o
}

func (o JobIAMBindingConditionStateOutput) ToJobIAMBindingConditionStateOutputWithContext(ctx context.Context) JobIAMBindingConditionStateOutput {
	return o
}

func (o JobIAMBindingConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMBindingConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMBindingConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMBindingConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMBindingConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type JobIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type JobIAMMemberConditionInput interface {
	pulumi.Input

	ToJobIAMMemberConditionOutput() JobIAMMemberConditionOutput
	ToJobIAMMemberConditionOutputWithContext(context.Context) JobIAMMemberConditionOutput
}

type JobIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (JobIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMMemberCondition)(nil)).Elem()
}

func (i JobIAMMemberConditionArgs) ToJobIAMMemberConditionOutput() JobIAMMemberConditionOutput {
	return i.ToJobIAMMemberConditionOutputWithContext(context.Background())
}

func (i JobIAMMemberConditionArgs) ToJobIAMMemberConditionOutputWithContext(ctx context.Context) JobIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMMemberConditionOutput)
}

func (i JobIAMMemberConditionArgs) ToJobIAMMemberConditionPtrOutput() JobIAMMemberConditionPtrOutput {
	return i.ToJobIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i JobIAMMemberConditionArgs) ToJobIAMMemberConditionPtrOutputWithContext(ctx context.Context) JobIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMMemberConditionOutput).ToJobIAMMemberConditionPtrOutputWithContext(ctx)
}

type JobIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToJobIAMMemberConditionPtrOutput() JobIAMMemberConditionPtrOutput
	ToJobIAMMemberConditionPtrOutputWithContext(context.Context) JobIAMMemberConditionPtrOutput
}

type jobIAMMemberConditionPtrType JobIAMMemberConditionArgs

func JobIAMMemberConditionPtr(v *JobIAMMemberConditionArgs) JobIAMMemberConditionPtrInput {
	return (*jobIAMMemberConditionPtrType)(v)
}

func (*jobIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobIAMMemberCondition)(nil)).Elem()
}

func (i *jobIAMMemberConditionPtrType) ToJobIAMMemberConditionPtrOutput() JobIAMMemberConditionPtrOutput {
	return i.ToJobIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *jobIAMMemberConditionPtrType) ToJobIAMMemberConditionPtrOutputWithContext(ctx context.Context) JobIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMMemberConditionPtrOutput)
}

type JobIAMMemberConditionOutput struct{ *pulumi.OutputState }

func (JobIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMMemberCondition)(nil)).Elem()
}

func (o JobIAMMemberConditionOutput) ToJobIAMMemberConditionOutput() JobIAMMemberConditionOutput {
	return o
}

func (o JobIAMMemberConditionOutput) ToJobIAMMemberConditionOutputWithContext(ctx context.Context) JobIAMMemberConditionOutput {
	return o
}

func (o JobIAMMemberConditionOutput) ToJobIAMMemberConditionPtrOutput() JobIAMMemberConditionPtrOutput {
	return o.ToJobIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o JobIAMMemberConditionOutput) ToJobIAMMemberConditionPtrOutputWithContext(ctx context.Context) JobIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v JobIAMMemberCondition) *JobIAMMemberCondition {
		return &v
	}).(JobIAMMemberConditionPtrOutput)
}
func (o JobIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type JobIAMMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (JobIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobIAMMemberCondition)(nil)).Elem()
}

func (o JobIAMMemberConditionPtrOutput) ToJobIAMMemberConditionPtrOutput() JobIAMMemberConditionPtrOutput {
	return o
}

func (o JobIAMMemberConditionPtrOutput) ToJobIAMMemberConditionPtrOutputWithContext(ctx context.Context) JobIAMMemberConditionPtrOutput {
	return o
}

func (o JobIAMMemberConditionPtrOutput) Elem() JobIAMMemberConditionOutput {
	return o.ApplyT(func(v *JobIAMMemberCondition) JobIAMMemberCondition { return *v }).(JobIAMMemberConditionOutput)
}

func (o JobIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type JobIAMMemberConditionArgs struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type JobIAMMemberConditionArgsInput interface {
	pulumi.Input

	ToJobIAMMemberConditionArgsOutput() JobIAMMemberConditionArgsOutput
	ToJobIAMMemberConditionArgsOutputWithContext(context.Context) JobIAMMemberConditionArgsOutput
}

type JobIAMMemberConditionArgsArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (JobIAMMemberConditionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMMemberConditionArgs)(nil)).Elem()
}

func (i JobIAMMemberConditionArgsArgs) ToJobIAMMemberConditionArgsOutput() JobIAMMemberConditionArgsOutput {
	return i.ToJobIAMMemberConditionArgsOutputWithContext(context.Background())
}

func (i JobIAMMemberConditionArgsArgs) ToJobIAMMemberConditionArgsOutputWithContext(ctx context.Context) JobIAMMemberConditionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMMemberConditionArgsOutput)
}

func (i JobIAMMemberConditionArgsArgs) ToJobIAMMemberConditionArgsPtrOutput() JobIAMMemberConditionArgsPtrOutput {
	return i.ToJobIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i JobIAMMemberConditionArgsArgs) ToJobIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) JobIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMMemberConditionArgsOutput).ToJobIAMMemberConditionArgsPtrOutputWithContext(ctx)
}

type JobIAMMemberConditionArgsPtrInput interface {
	pulumi.Input

	ToJobIAMMemberConditionArgsPtrOutput() JobIAMMemberConditionArgsPtrOutput
	ToJobIAMMemberConditionArgsPtrOutputWithContext(context.Context) JobIAMMemberConditionArgsPtrOutput
}

type jobIAMMemberConditionArgsPtrType JobIAMMemberConditionArgsArgs

func JobIAMMemberConditionArgsPtr(v *JobIAMMemberConditionArgsArgs) JobIAMMemberConditionArgsPtrInput {
	return (*jobIAMMemberConditionArgsPtrType)(v)
}

func (*jobIAMMemberConditionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobIAMMemberConditionArgs)(nil)).Elem()
}

func (i *jobIAMMemberConditionArgsPtrType) ToJobIAMMemberConditionArgsPtrOutput() JobIAMMemberConditionArgsPtrOutput {
	return i.ToJobIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (i *jobIAMMemberConditionArgsPtrType) ToJobIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) JobIAMMemberConditionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMMemberConditionArgsPtrOutput)
}

type JobIAMMemberConditionArgsOutput struct{ *pulumi.OutputState }

func (JobIAMMemberConditionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMMemberConditionArgs)(nil)).Elem()
}

func (o JobIAMMemberConditionArgsOutput) ToJobIAMMemberConditionArgsOutput() JobIAMMemberConditionArgsOutput {
	return o
}

func (o JobIAMMemberConditionArgsOutput) ToJobIAMMemberConditionArgsOutputWithContext(ctx context.Context) JobIAMMemberConditionArgsOutput {
	return o
}

func (o JobIAMMemberConditionArgsOutput) ToJobIAMMemberConditionArgsPtrOutput() JobIAMMemberConditionArgsPtrOutput {
	return o.ToJobIAMMemberConditionArgsPtrOutputWithContext(context.Background())
}

func (o JobIAMMemberConditionArgsOutput) ToJobIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) JobIAMMemberConditionArgsPtrOutput {
	return o.ApplyT(func(v JobIAMMemberConditionArgs) *JobIAMMemberConditionArgs {
		return &v
	}).(JobIAMMemberConditionArgsPtrOutput)
}
func (o JobIAMMemberConditionArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMMemberConditionArgsOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMMemberConditionArgsOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type JobIAMMemberConditionArgsPtrOutput struct{ *pulumi.OutputState }

func (JobIAMMemberConditionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobIAMMemberConditionArgs)(nil)).Elem()
}

func (o JobIAMMemberConditionArgsPtrOutput) ToJobIAMMemberConditionArgsPtrOutput() JobIAMMemberConditionArgsPtrOutput {
	return o
}

func (o JobIAMMemberConditionArgsPtrOutput) ToJobIAMMemberConditionArgsPtrOutputWithContext(ctx context.Context) JobIAMMemberConditionArgsPtrOutput {
	return o
}

func (o JobIAMMemberConditionArgsPtrOutput) Elem() JobIAMMemberConditionArgsOutput {
	return o.ApplyT(func(v *JobIAMMemberConditionArgs) JobIAMMemberConditionArgs { return *v }).(JobIAMMemberConditionArgsOutput)
}

func (o JobIAMMemberConditionArgsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMMemberConditionArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMMemberConditionArgsPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberConditionArgs) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMMemberConditionArgsPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberConditionArgs) string { return v.Title }).(pulumi.StringOutput)
}

type JobIAMMemberConditionState struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

type JobIAMMemberConditionStateInput interface {
	pulumi.Input

	ToJobIAMMemberConditionStateOutput() JobIAMMemberConditionStateOutput
	ToJobIAMMemberConditionStateOutputWithContext(context.Context) JobIAMMemberConditionStateOutput
}

type JobIAMMemberConditionStateArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (JobIAMMemberConditionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMMemberConditionState)(nil)).Elem()
}

func (i JobIAMMemberConditionStateArgs) ToJobIAMMemberConditionStateOutput() JobIAMMemberConditionStateOutput {
	return i.ToJobIAMMemberConditionStateOutputWithContext(context.Background())
}

func (i JobIAMMemberConditionStateArgs) ToJobIAMMemberConditionStateOutputWithContext(ctx context.Context) JobIAMMemberConditionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobIAMMemberConditionStateOutput)
}

type JobIAMMemberConditionStateOutput struct{ *pulumi.OutputState }

func (JobIAMMemberConditionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobIAMMemberConditionState)(nil)).Elem()
}

func (o JobIAMMemberConditionStateOutput) ToJobIAMMemberConditionStateOutput() JobIAMMemberConditionStateOutput {
	return o
}

func (o JobIAMMemberConditionStateOutput) ToJobIAMMemberConditionStateOutputWithContext(ctx context.Context) JobIAMMemberConditionStateOutput {
	return o
}

func (o JobIAMMemberConditionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobIAMMemberConditionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobIAMMemberConditionStateOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberConditionState) string { return v.Expression }).(pulumi.StringOutput)
}

func (o JobIAMMemberConditionStateOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v JobIAMMemberConditionState) string { return v.Title }).(pulumi.StringOutput)
}

type JobPigConfig struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure *bool `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                  `pulumi:"jarFileUris"`
	LoggingConfig JobPigConfigLoggingConfig `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri *string  `pulumi:"queryFileUri"`
	QueryLists   []string `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

type JobPigConfigInput interface {
	pulumi.Input

	ToJobPigConfigOutput() JobPigConfigOutput
	ToJobPigConfigOutputWithContext(context.Context) JobPigConfigOutput
}

type JobPigConfigArgs struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure pulumi.BoolPtrInput `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput        `pulumi:"jarFileUris"`
	LoggingConfig JobPigConfigLoggingConfigInput `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri pulumi.StringPtrInput   `pulumi:"queryFileUri"`
	QueryLists   pulumi.StringArrayInput `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (JobPigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfig)(nil)).Elem()
}

func (i JobPigConfigArgs) ToJobPigConfigOutput() JobPigConfigOutput {
	return i.ToJobPigConfigOutputWithContext(context.Background())
}

func (i JobPigConfigArgs) ToJobPigConfigOutputWithContext(ctx context.Context) JobPigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigOutput)
}

func (i JobPigConfigArgs) ToJobPigConfigPtrOutput() JobPigConfigPtrOutput {
	return i.ToJobPigConfigPtrOutputWithContext(context.Background())
}

func (i JobPigConfigArgs) ToJobPigConfigPtrOutputWithContext(ctx context.Context) JobPigConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigOutput).ToJobPigConfigPtrOutputWithContext(ctx)
}

type JobPigConfigPtrInput interface {
	pulumi.Input

	ToJobPigConfigPtrOutput() JobPigConfigPtrOutput
	ToJobPigConfigPtrOutputWithContext(context.Context) JobPigConfigPtrOutput
}

type jobPigConfigPtrType JobPigConfigArgs

func JobPigConfigPtr(v *JobPigConfigArgs) JobPigConfigPtrInput {
	return (*jobPigConfigPtrType)(v)
}

func (*jobPigConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPigConfig)(nil)).Elem()
}

func (i *jobPigConfigPtrType) ToJobPigConfigPtrOutput() JobPigConfigPtrOutput {
	return i.ToJobPigConfigPtrOutputWithContext(context.Background())
}

func (i *jobPigConfigPtrType) ToJobPigConfigPtrOutputWithContext(ctx context.Context) JobPigConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigPtrOutput)
}

type JobPigConfigOutput struct{ *pulumi.OutputState }

func (JobPigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfig)(nil)).Elem()
}

func (o JobPigConfigOutput) ToJobPigConfigOutput() JobPigConfigOutput {
	return o
}

func (o JobPigConfigOutput) ToJobPigConfigOutputWithContext(ctx context.Context) JobPigConfigOutput {
	return o
}

func (o JobPigConfigOutput) ToJobPigConfigPtrOutput() JobPigConfigPtrOutput {
	return o.ToJobPigConfigPtrOutputWithContext(context.Background())
}

func (o JobPigConfigOutput) ToJobPigConfigPtrOutputWithContext(ctx context.Context) JobPigConfigPtrOutput {
	return o.ApplyT(func(v JobPigConfig) *JobPigConfig {
		return &v
	}).(JobPigConfigPtrOutput)
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobPigConfigOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobPigConfig) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPigConfigOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPigConfigOutput) LoggingConfig() JobPigConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobPigConfig) JobPigConfigLoggingConfig { return v.LoggingConfig }).(JobPigConfigLoggingConfigOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPigConfigOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobPigConfigOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPigConfig) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobPigConfigOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfig) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobPigConfigOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfig) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobPigConfigPtrOutput struct{ *pulumi.OutputState }

func (JobPigConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPigConfig)(nil)).Elem()
}

func (o JobPigConfigPtrOutput) ToJobPigConfigPtrOutput() JobPigConfigPtrOutput {
	return o
}

func (o JobPigConfigPtrOutput) ToJobPigConfigPtrOutputWithContext(ctx context.Context) JobPigConfigPtrOutput {
	return o
}

func (o JobPigConfigPtrOutput) Elem() JobPigConfigOutput {
	return o.ApplyT(func(v *JobPigConfig) JobPigConfig { return *v }).(JobPigConfigOutput)
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobPigConfigPtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobPigConfig) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPigConfigPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPigConfigPtrOutput) LoggingConfig() JobPigConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobPigConfig) JobPigConfigLoggingConfig { return v.LoggingConfig }).(JobPigConfigLoggingConfigOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPigConfigPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobPigConfigPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPigConfig) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobPigConfigPtrOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfig) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobPigConfigPtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfig) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobPigConfigArgs struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure *bool `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                       `pulumi:"jarFileUris"`
	LoggingConfig *JobPigConfigLoggingConfigArgs `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri *string  `pulumi:"queryFileUri"`
	QueryLists   []string `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

type JobPigConfigArgsInput interface {
	pulumi.Input

	ToJobPigConfigArgsOutput() JobPigConfigArgsOutput
	ToJobPigConfigArgsOutputWithContext(context.Context) JobPigConfigArgsOutput
}

type JobPigConfigArgsArgs struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure pulumi.BoolPtrInput `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput               `pulumi:"jarFileUris"`
	LoggingConfig JobPigConfigLoggingConfigArgsPtrInput `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri pulumi.StringPtrInput   `pulumi:"queryFileUri"`
	QueryLists   pulumi.StringArrayInput `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (JobPigConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigArgs)(nil)).Elem()
}

func (i JobPigConfigArgsArgs) ToJobPigConfigArgsOutput() JobPigConfigArgsOutput {
	return i.ToJobPigConfigArgsOutputWithContext(context.Background())
}

func (i JobPigConfigArgsArgs) ToJobPigConfigArgsOutputWithContext(ctx context.Context) JobPigConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigArgsOutput)
}

func (i JobPigConfigArgsArgs) ToJobPigConfigArgsPtrOutput() JobPigConfigArgsPtrOutput {
	return i.ToJobPigConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobPigConfigArgsArgs) ToJobPigConfigArgsPtrOutputWithContext(ctx context.Context) JobPigConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigArgsOutput).ToJobPigConfigArgsPtrOutputWithContext(ctx)
}

type JobPigConfigArgsPtrInput interface {
	pulumi.Input

	ToJobPigConfigArgsPtrOutput() JobPigConfigArgsPtrOutput
	ToJobPigConfigArgsPtrOutputWithContext(context.Context) JobPigConfigArgsPtrOutput
}

type jobPigConfigArgsPtrType JobPigConfigArgsArgs

func JobPigConfigArgsPtr(v *JobPigConfigArgsArgs) JobPigConfigArgsPtrInput {
	return (*jobPigConfigArgsPtrType)(v)
}

func (*jobPigConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPigConfigArgs)(nil)).Elem()
}

func (i *jobPigConfigArgsPtrType) ToJobPigConfigArgsPtrOutput() JobPigConfigArgsPtrOutput {
	return i.ToJobPigConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobPigConfigArgsPtrType) ToJobPigConfigArgsPtrOutputWithContext(ctx context.Context) JobPigConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigArgsPtrOutput)
}

type JobPigConfigArgsOutput struct{ *pulumi.OutputState }

func (JobPigConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigArgs)(nil)).Elem()
}

func (o JobPigConfigArgsOutput) ToJobPigConfigArgsOutput() JobPigConfigArgsOutput {
	return o
}

func (o JobPigConfigArgsOutput) ToJobPigConfigArgsOutputWithContext(ctx context.Context) JobPigConfigArgsOutput {
	return o
}

func (o JobPigConfigArgsOutput) ToJobPigConfigArgsPtrOutput() JobPigConfigArgsPtrOutput {
	return o.ToJobPigConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobPigConfigArgsOutput) ToJobPigConfigArgsPtrOutputWithContext(ctx context.Context) JobPigConfigArgsPtrOutput {
	return o.ApplyT(func(v JobPigConfigArgs) *JobPigConfigArgs {
		return &v
	}).(JobPigConfigArgsPtrOutput)
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobPigConfigArgsOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobPigConfigArgs) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPigConfigArgsOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPigConfigArgsOutput) LoggingConfig() JobPigConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobPigConfigArgs) *JobPigConfigLoggingConfigArgs { return v.LoggingConfig }).(JobPigConfigLoggingConfigArgsPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPigConfigArgsOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobPigConfigArgsOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPigConfigArgs) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobPigConfigArgsOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfigArgs) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobPigConfigArgsOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigArgs) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobPigConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobPigConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPigConfigArgs)(nil)).Elem()
}

func (o JobPigConfigArgsPtrOutput) ToJobPigConfigArgsPtrOutput() JobPigConfigArgsPtrOutput {
	return o
}

func (o JobPigConfigArgsPtrOutput) ToJobPigConfigArgsPtrOutputWithContext(ctx context.Context) JobPigConfigArgsPtrOutput {
	return o
}

func (o JobPigConfigArgsPtrOutput) Elem() JobPigConfigArgsOutput {
	return o.ApplyT(func(v *JobPigConfigArgs) JobPigConfigArgs { return *v }).(JobPigConfigArgsOutput)
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobPigConfigArgsPtrOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobPigConfigArgs) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPigConfigArgsPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPigConfigArgsPtrOutput) LoggingConfig() JobPigConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobPigConfigArgs) *JobPigConfigLoggingConfigArgs { return v.LoggingConfig }).(JobPigConfigLoggingConfigArgsPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPigConfigArgsPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobPigConfigArgsPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPigConfigArgs) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobPigConfigArgsPtrOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfigArgs) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobPigConfigArgsPtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigArgs) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobPigConfigLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobPigConfigLoggingConfigInput interface {
	pulumi.Input

	ToJobPigConfigLoggingConfigOutput() JobPigConfigLoggingConfigOutput
	ToJobPigConfigLoggingConfigOutputWithContext(context.Context) JobPigConfigLoggingConfigOutput
}

type JobPigConfigLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobPigConfigLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigLoggingConfig)(nil)).Elem()
}

func (i JobPigConfigLoggingConfigArgs) ToJobPigConfigLoggingConfigOutput() JobPigConfigLoggingConfigOutput {
	return i.ToJobPigConfigLoggingConfigOutputWithContext(context.Background())
}

func (i JobPigConfigLoggingConfigArgs) ToJobPigConfigLoggingConfigOutputWithContext(ctx context.Context) JobPigConfigLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigLoggingConfigOutput)
}

type JobPigConfigLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobPigConfigLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigLoggingConfig)(nil)).Elem()
}

func (o JobPigConfigLoggingConfigOutput) ToJobPigConfigLoggingConfigOutput() JobPigConfigLoggingConfigOutput {
	return o
}

func (o JobPigConfigLoggingConfigOutput) ToJobPigConfigLoggingConfigOutputWithContext(ctx context.Context) JobPigConfigLoggingConfigOutput {
	return o
}

func (o JobPigConfigLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobPigConfigLoggingConfigArgs struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobPigConfigLoggingConfigArgsInput interface {
	pulumi.Input

	ToJobPigConfigLoggingConfigArgsOutput() JobPigConfigLoggingConfigArgsOutput
	ToJobPigConfigLoggingConfigArgsOutputWithContext(context.Context) JobPigConfigLoggingConfigArgsOutput
}

type JobPigConfigLoggingConfigArgsArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobPigConfigLoggingConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigLoggingConfigArgs)(nil)).Elem()
}

func (i JobPigConfigLoggingConfigArgsArgs) ToJobPigConfigLoggingConfigArgsOutput() JobPigConfigLoggingConfigArgsOutput {
	return i.ToJobPigConfigLoggingConfigArgsOutputWithContext(context.Background())
}

func (i JobPigConfigLoggingConfigArgsArgs) ToJobPigConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobPigConfigLoggingConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigLoggingConfigArgsOutput)
}

func (i JobPigConfigLoggingConfigArgsArgs) ToJobPigConfigLoggingConfigArgsPtrOutput() JobPigConfigLoggingConfigArgsPtrOutput {
	return i.ToJobPigConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobPigConfigLoggingConfigArgsArgs) ToJobPigConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobPigConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigLoggingConfigArgsOutput).ToJobPigConfigLoggingConfigArgsPtrOutputWithContext(ctx)
}

type JobPigConfigLoggingConfigArgsPtrInput interface {
	pulumi.Input

	ToJobPigConfigLoggingConfigArgsPtrOutput() JobPigConfigLoggingConfigArgsPtrOutput
	ToJobPigConfigLoggingConfigArgsPtrOutputWithContext(context.Context) JobPigConfigLoggingConfigArgsPtrOutput
}

type jobPigConfigLoggingConfigArgsPtrType JobPigConfigLoggingConfigArgsArgs

func JobPigConfigLoggingConfigArgsPtr(v *JobPigConfigLoggingConfigArgsArgs) JobPigConfigLoggingConfigArgsPtrInput {
	return (*jobPigConfigLoggingConfigArgsPtrType)(v)
}

func (*jobPigConfigLoggingConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPigConfigLoggingConfigArgs)(nil)).Elem()
}

func (i *jobPigConfigLoggingConfigArgsPtrType) ToJobPigConfigLoggingConfigArgsPtrOutput() JobPigConfigLoggingConfigArgsPtrOutput {
	return i.ToJobPigConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobPigConfigLoggingConfigArgsPtrType) ToJobPigConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobPigConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigLoggingConfigArgsPtrOutput)
}

type JobPigConfigLoggingConfigArgsOutput struct{ *pulumi.OutputState }

func (JobPigConfigLoggingConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobPigConfigLoggingConfigArgsOutput) ToJobPigConfigLoggingConfigArgsOutput() JobPigConfigLoggingConfigArgsOutput {
	return o
}

func (o JobPigConfigLoggingConfigArgsOutput) ToJobPigConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobPigConfigLoggingConfigArgsOutput {
	return o
}

func (o JobPigConfigLoggingConfigArgsOutput) ToJobPigConfigLoggingConfigArgsPtrOutput() JobPigConfigLoggingConfigArgsPtrOutput {
	return o.ToJobPigConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobPigConfigLoggingConfigArgsOutput) ToJobPigConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobPigConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobPigConfigLoggingConfigArgs) *JobPigConfigLoggingConfigArgs {
		return &v
	}).(JobPigConfigLoggingConfigArgsPtrOutput)
}
func (o JobPigConfigLoggingConfigArgsOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobPigConfigLoggingConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobPigConfigLoggingConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPigConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobPigConfigLoggingConfigArgsPtrOutput) ToJobPigConfigLoggingConfigArgsPtrOutput() JobPigConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobPigConfigLoggingConfigArgsPtrOutput) ToJobPigConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobPigConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobPigConfigLoggingConfigArgsPtrOutput) Elem() JobPigConfigLoggingConfigArgsOutput {
	return o.ApplyT(func(v *JobPigConfigLoggingConfigArgs) JobPigConfigLoggingConfigArgs { return *v }).(JobPigConfigLoggingConfigArgsOutput)
}

func (o JobPigConfigLoggingConfigArgsPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobPigConfigState struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure *bool `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                        `pulumi:"jarFileUris"`
	LoggingConfig *JobPigConfigStateLoggingConfig `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri *string  `pulumi:"queryFileUri"`
	QueryLists   []string `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

type JobPigConfigStateInput interface {
	pulumi.Input

	ToJobPigConfigStateOutput() JobPigConfigStateOutput
	ToJobPigConfigStateOutputWithContext(context.Context) JobPigConfigStateOutput
}

type JobPigConfigStateArgs struct {
	// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
	ContinueOnFailure pulumi.BoolPtrInput `pulumi:"continueOnFailure"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput                `pulumi:"jarFileUris"`
	LoggingConfig JobPigConfigStateLoggingConfigPtrInput `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri pulumi.StringPtrInput   `pulumi:"queryFileUri"`
	QueryLists   pulumi.StringArrayInput `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (JobPigConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigState)(nil)).Elem()
}

func (i JobPigConfigStateArgs) ToJobPigConfigStateOutput() JobPigConfigStateOutput {
	return i.ToJobPigConfigStateOutputWithContext(context.Background())
}

func (i JobPigConfigStateArgs) ToJobPigConfigStateOutputWithContext(ctx context.Context) JobPigConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigStateOutput)
}

type JobPigConfigStateOutput struct{ *pulumi.OutputState }

func (JobPigConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigState)(nil)).Elem()
}

func (o JobPigConfigStateOutput) ToJobPigConfigStateOutput() JobPigConfigStateOutput {
	return o
}

func (o JobPigConfigStateOutput) ToJobPigConfigStateOutputWithContext(ctx context.Context) JobPigConfigStateOutput {
	return o
}

// Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries. Defaults to false.
func (o JobPigConfigStateOutput) ContinueOnFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobPigConfigState) *bool { return v.ContinueOnFailure }).(pulumi.BoolPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPigConfigStateOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfigState) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPigConfigStateOutput) LoggingConfig() JobPigConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobPigConfigState) *JobPigConfigStateLoggingConfig { return v.LoggingConfig }).(JobPigConfigStateLoggingConfigPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPigConfigStateOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigState) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobPigConfigStateOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPigConfigState) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobPigConfigStateOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPigConfigState) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobPigConfigStateOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigState) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobPigConfigStateLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobPigConfigStateLoggingConfigInput interface {
	pulumi.Input

	ToJobPigConfigStateLoggingConfigOutput() JobPigConfigStateLoggingConfigOutput
	ToJobPigConfigStateLoggingConfigOutputWithContext(context.Context) JobPigConfigStateLoggingConfigOutput
}

type JobPigConfigStateLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobPigConfigStateLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigStateLoggingConfig)(nil)).Elem()
}

func (i JobPigConfigStateLoggingConfigArgs) ToJobPigConfigStateLoggingConfigOutput() JobPigConfigStateLoggingConfigOutput {
	return i.ToJobPigConfigStateLoggingConfigOutputWithContext(context.Background())
}

func (i JobPigConfigStateLoggingConfigArgs) ToJobPigConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobPigConfigStateLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigStateLoggingConfigOutput)
}

func (i JobPigConfigStateLoggingConfigArgs) ToJobPigConfigStateLoggingConfigPtrOutput() JobPigConfigStateLoggingConfigPtrOutput {
	return i.ToJobPigConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i JobPigConfigStateLoggingConfigArgs) ToJobPigConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobPigConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigStateLoggingConfigOutput).ToJobPigConfigStateLoggingConfigPtrOutputWithContext(ctx)
}

type JobPigConfigStateLoggingConfigPtrInput interface {
	pulumi.Input

	ToJobPigConfigStateLoggingConfigPtrOutput() JobPigConfigStateLoggingConfigPtrOutput
	ToJobPigConfigStateLoggingConfigPtrOutputWithContext(context.Context) JobPigConfigStateLoggingConfigPtrOutput
}

type jobPigConfigStateLoggingConfigPtrType JobPigConfigStateLoggingConfigArgs

func JobPigConfigStateLoggingConfigPtr(v *JobPigConfigStateLoggingConfigArgs) JobPigConfigStateLoggingConfigPtrInput {
	return (*jobPigConfigStateLoggingConfigPtrType)(v)
}

func (*jobPigConfigStateLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPigConfigStateLoggingConfig)(nil)).Elem()
}

func (i *jobPigConfigStateLoggingConfigPtrType) ToJobPigConfigStateLoggingConfigPtrOutput() JobPigConfigStateLoggingConfigPtrOutput {
	return i.ToJobPigConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *jobPigConfigStateLoggingConfigPtrType) ToJobPigConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobPigConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPigConfigStateLoggingConfigPtrOutput)
}

type JobPigConfigStateLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobPigConfigStateLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPigConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobPigConfigStateLoggingConfigOutput) ToJobPigConfigStateLoggingConfigOutput() JobPigConfigStateLoggingConfigOutput {
	return o
}

func (o JobPigConfigStateLoggingConfigOutput) ToJobPigConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobPigConfigStateLoggingConfigOutput {
	return o
}

func (o JobPigConfigStateLoggingConfigOutput) ToJobPigConfigStateLoggingConfigPtrOutput() JobPigConfigStateLoggingConfigPtrOutput {
	return o.ToJobPigConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (o JobPigConfigStateLoggingConfigOutput) ToJobPigConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobPigConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobPigConfigStateLoggingConfig) *JobPigConfigStateLoggingConfig {
		return &v
	}).(JobPigConfigStateLoggingConfigPtrOutput)
}
func (o JobPigConfigStateLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobPigConfigStateLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (JobPigConfigStateLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPigConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobPigConfigStateLoggingConfigPtrOutput) ToJobPigConfigStateLoggingConfigPtrOutput() JobPigConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobPigConfigStateLoggingConfigPtrOutput) ToJobPigConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobPigConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobPigConfigStateLoggingConfigPtrOutput) Elem() JobPigConfigStateLoggingConfigOutput {
	return o.ApplyT(func(v *JobPigConfigStateLoggingConfig) JobPigConfigStateLoggingConfig { return *v }).(JobPigConfigStateLoggingConfigOutput)
}

func (o JobPigConfigStateLoggingConfigPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPigConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobPlacement struct {
	ClusterName string `pulumi:"clusterName"`
	ClusterUuid string `pulumi:"clusterUuid"`
}

type JobPlacementInput interface {
	pulumi.Input

	ToJobPlacementOutput() JobPlacementOutput
	ToJobPlacementOutputWithContext(context.Context) JobPlacementOutput
}

type JobPlacementArgs struct {
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	ClusterUuid pulumi.StringInput `pulumi:"clusterUuid"`
}

func (JobPlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacement)(nil)).Elem()
}

func (i JobPlacementArgs) ToJobPlacementOutput() JobPlacementOutput {
	return i.ToJobPlacementOutputWithContext(context.Background())
}

func (i JobPlacementArgs) ToJobPlacementOutputWithContext(ctx context.Context) JobPlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementOutput)
}

func (i JobPlacementArgs) ToJobPlacementPtrOutput() JobPlacementPtrOutput {
	return i.ToJobPlacementPtrOutputWithContext(context.Background())
}

func (i JobPlacementArgs) ToJobPlacementPtrOutputWithContext(ctx context.Context) JobPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementOutput).ToJobPlacementPtrOutputWithContext(ctx)
}

type JobPlacementPtrInput interface {
	pulumi.Input

	ToJobPlacementPtrOutput() JobPlacementPtrOutput
	ToJobPlacementPtrOutputWithContext(context.Context) JobPlacementPtrOutput
}

type jobPlacementPtrType JobPlacementArgs

func JobPlacementPtr(v *JobPlacementArgs) JobPlacementPtrInput {
	return (*jobPlacementPtrType)(v)
}

func (*jobPlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPlacement)(nil)).Elem()
}

func (i *jobPlacementPtrType) ToJobPlacementPtrOutput() JobPlacementPtrOutput {
	return i.ToJobPlacementPtrOutputWithContext(context.Background())
}

func (i *jobPlacementPtrType) ToJobPlacementPtrOutputWithContext(ctx context.Context) JobPlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementPtrOutput)
}

type JobPlacementOutput struct{ *pulumi.OutputState }

func (JobPlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacement)(nil)).Elem()
}

func (o JobPlacementOutput) ToJobPlacementOutput() JobPlacementOutput {
	return o
}

func (o JobPlacementOutput) ToJobPlacementOutputWithContext(ctx context.Context) JobPlacementOutput {
	return o
}

func (o JobPlacementOutput) ToJobPlacementPtrOutput() JobPlacementPtrOutput {
	return o.ToJobPlacementPtrOutputWithContext(context.Background())
}

func (o JobPlacementOutput) ToJobPlacementPtrOutputWithContext(ctx context.Context) JobPlacementPtrOutput {
	return o.ApplyT(func(v JobPlacement) *JobPlacement {
		return &v
	}).(JobPlacementPtrOutput)
}
func (o JobPlacementOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacement) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o JobPlacementOutput) ClusterUuid() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacement) string { return v.ClusterUuid }).(pulumi.StringOutput)
}

type JobPlacementPtrOutput struct{ *pulumi.OutputState }

func (JobPlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPlacement)(nil)).Elem()
}

func (o JobPlacementPtrOutput) ToJobPlacementPtrOutput() JobPlacementPtrOutput {
	return o
}

func (o JobPlacementPtrOutput) ToJobPlacementPtrOutputWithContext(ctx context.Context) JobPlacementPtrOutput {
	return o
}

func (o JobPlacementPtrOutput) Elem() JobPlacementOutput {
	return o.ApplyT(func(v *JobPlacement) JobPlacement { return *v }).(JobPlacementOutput)
}

func (o JobPlacementPtrOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacement) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o JobPlacementPtrOutput) ClusterUuid() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacement) string { return v.ClusterUuid }).(pulumi.StringOutput)
}

type JobPlacementArgs struct {
	ClusterName string  `pulumi:"clusterName"`
	ClusterUuid *string `pulumi:"clusterUuid"`
}

type JobPlacementArgsInput interface {
	pulumi.Input

	ToJobPlacementArgsOutput() JobPlacementArgsOutput
	ToJobPlacementArgsOutputWithContext(context.Context) JobPlacementArgsOutput
}

type JobPlacementArgsArgs struct {
	ClusterName pulumi.StringInput    `pulumi:"clusterName"`
	ClusterUuid pulumi.StringPtrInput `pulumi:"clusterUuid"`
}

func (JobPlacementArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacementArgs)(nil)).Elem()
}

func (i JobPlacementArgsArgs) ToJobPlacementArgsOutput() JobPlacementArgsOutput {
	return i.ToJobPlacementArgsOutputWithContext(context.Background())
}

func (i JobPlacementArgsArgs) ToJobPlacementArgsOutputWithContext(ctx context.Context) JobPlacementArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementArgsOutput)
}

func (i JobPlacementArgsArgs) ToJobPlacementArgsPtrOutput() JobPlacementArgsPtrOutput {
	return i.ToJobPlacementArgsPtrOutputWithContext(context.Background())
}

func (i JobPlacementArgsArgs) ToJobPlacementArgsPtrOutputWithContext(ctx context.Context) JobPlacementArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementArgsOutput).ToJobPlacementArgsPtrOutputWithContext(ctx)
}

type JobPlacementArgsPtrInput interface {
	pulumi.Input

	ToJobPlacementArgsPtrOutput() JobPlacementArgsPtrOutput
	ToJobPlacementArgsPtrOutputWithContext(context.Context) JobPlacementArgsPtrOutput
}

type jobPlacementArgsPtrType JobPlacementArgsArgs

func JobPlacementArgsPtr(v *JobPlacementArgsArgs) JobPlacementArgsPtrInput {
	return (*jobPlacementArgsPtrType)(v)
}

func (*jobPlacementArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPlacementArgs)(nil)).Elem()
}

func (i *jobPlacementArgsPtrType) ToJobPlacementArgsPtrOutput() JobPlacementArgsPtrOutput {
	return i.ToJobPlacementArgsPtrOutputWithContext(context.Background())
}

func (i *jobPlacementArgsPtrType) ToJobPlacementArgsPtrOutputWithContext(ctx context.Context) JobPlacementArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementArgsPtrOutput)
}

type JobPlacementArgsOutput struct{ *pulumi.OutputState }

func (JobPlacementArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacementArgs)(nil)).Elem()
}

func (o JobPlacementArgsOutput) ToJobPlacementArgsOutput() JobPlacementArgsOutput {
	return o
}

func (o JobPlacementArgsOutput) ToJobPlacementArgsOutputWithContext(ctx context.Context) JobPlacementArgsOutput {
	return o
}

func (o JobPlacementArgsOutput) ToJobPlacementArgsPtrOutput() JobPlacementArgsPtrOutput {
	return o.ToJobPlacementArgsPtrOutputWithContext(context.Background())
}

func (o JobPlacementArgsOutput) ToJobPlacementArgsPtrOutputWithContext(ctx context.Context) JobPlacementArgsPtrOutput {
	return o.ApplyT(func(v JobPlacementArgs) *JobPlacementArgs {
		return &v
	}).(JobPlacementArgsPtrOutput)
}
func (o JobPlacementArgsOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacementArgs) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o JobPlacementArgsOutput) ClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPlacementArgs) *string { return v.ClusterUuid }).(pulumi.StringPtrOutput)
}

type JobPlacementArgsPtrOutput struct{ *pulumi.OutputState }

func (JobPlacementArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPlacementArgs)(nil)).Elem()
}

func (o JobPlacementArgsPtrOutput) ToJobPlacementArgsPtrOutput() JobPlacementArgsPtrOutput {
	return o
}

func (o JobPlacementArgsPtrOutput) ToJobPlacementArgsPtrOutputWithContext(ctx context.Context) JobPlacementArgsPtrOutput {
	return o
}

func (o JobPlacementArgsPtrOutput) Elem() JobPlacementArgsOutput {
	return o.ApplyT(func(v *JobPlacementArgs) JobPlacementArgs { return *v }).(JobPlacementArgsOutput)
}

func (o JobPlacementArgsPtrOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacementArgs) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o JobPlacementArgsPtrOutput) ClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPlacementArgs) *string { return v.ClusterUuid }).(pulumi.StringPtrOutput)
}

type JobPlacementState struct {
	ClusterName string  `pulumi:"clusterName"`
	ClusterUuid *string `pulumi:"clusterUuid"`
}

type JobPlacementStateInput interface {
	pulumi.Input

	ToJobPlacementStateOutput() JobPlacementStateOutput
	ToJobPlacementStateOutputWithContext(context.Context) JobPlacementStateOutput
}

type JobPlacementStateArgs struct {
	ClusterName pulumi.StringInput    `pulumi:"clusterName"`
	ClusterUuid pulumi.StringPtrInput `pulumi:"clusterUuid"`
}

func (JobPlacementStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacementState)(nil)).Elem()
}

func (i JobPlacementStateArgs) ToJobPlacementStateOutput() JobPlacementStateOutput {
	return i.ToJobPlacementStateOutputWithContext(context.Background())
}

func (i JobPlacementStateArgs) ToJobPlacementStateOutputWithContext(ctx context.Context) JobPlacementStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPlacementStateOutput)
}

type JobPlacementStateOutput struct{ *pulumi.OutputState }

func (JobPlacementStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlacementState)(nil)).Elem()
}

func (o JobPlacementStateOutput) ToJobPlacementStateOutput() JobPlacementStateOutput {
	return o
}

func (o JobPlacementStateOutput) ToJobPlacementStateOutputWithContext(ctx context.Context) JobPlacementStateOutput {
	return o
}

func (o JobPlacementStateOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v JobPlacementState) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o JobPlacementStateOutput) ClusterUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPlacementState) *string { return v.ClusterUuid }).(pulumi.StringPtrOutput)
}

type JobPysparkConfig struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris       []string                      `pulumi:"jarFileUris"`
	LoggingConfig     JobPysparkConfigLoggingConfig `pulumi:"loggingConfig"`
	MainPythonFileUri string                        `pulumi:"mainPythonFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris []string `pulumi:"pythonFileUris"`
}

type JobPysparkConfigInput interface {
	pulumi.Input

	ToJobPysparkConfigOutput() JobPysparkConfigOutput
	ToJobPysparkConfigOutputWithContext(context.Context) JobPysparkConfigOutput
}

type JobPysparkConfigArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris       pulumi.StringArrayInput            `pulumi:"jarFileUris"`
	LoggingConfig     JobPysparkConfigLoggingConfigInput `pulumi:"loggingConfig"`
	MainPythonFileUri pulumi.StringInput                 `pulumi:"mainPythonFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris pulumi.StringArrayInput `pulumi:"pythonFileUris"`
}

func (JobPysparkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfig)(nil)).Elem()
}

func (i JobPysparkConfigArgs) ToJobPysparkConfigOutput() JobPysparkConfigOutput {
	return i.ToJobPysparkConfigOutputWithContext(context.Background())
}

func (i JobPysparkConfigArgs) ToJobPysparkConfigOutputWithContext(ctx context.Context) JobPysparkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigOutput)
}

func (i JobPysparkConfigArgs) ToJobPysparkConfigPtrOutput() JobPysparkConfigPtrOutput {
	return i.ToJobPysparkConfigPtrOutputWithContext(context.Background())
}

func (i JobPysparkConfigArgs) ToJobPysparkConfigPtrOutputWithContext(ctx context.Context) JobPysparkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigOutput).ToJobPysparkConfigPtrOutputWithContext(ctx)
}

type JobPysparkConfigPtrInput interface {
	pulumi.Input

	ToJobPysparkConfigPtrOutput() JobPysparkConfigPtrOutput
	ToJobPysparkConfigPtrOutputWithContext(context.Context) JobPysparkConfigPtrOutput
}

type jobPysparkConfigPtrType JobPysparkConfigArgs

func JobPysparkConfigPtr(v *JobPysparkConfigArgs) JobPysparkConfigPtrInput {
	return (*jobPysparkConfigPtrType)(v)
}

func (*jobPysparkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPysparkConfig)(nil)).Elem()
}

func (i *jobPysparkConfigPtrType) ToJobPysparkConfigPtrOutput() JobPysparkConfigPtrOutput {
	return i.ToJobPysparkConfigPtrOutputWithContext(context.Background())
}

func (i *jobPysparkConfigPtrType) ToJobPysparkConfigPtrOutputWithContext(ctx context.Context) JobPysparkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigPtrOutput)
}

type JobPysparkConfigOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfig)(nil)).Elem()
}

func (o JobPysparkConfigOutput) ToJobPysparkConfigOutput() JobPysparkConfigOutput {
	return o
}

func (o JobPysparkConfigOutput) ToJobPysparkConfigOutputWithContext(ctx context.Context) JobPysparkConfigOutput {
	return o
}

func (o JobPysparkConfigOutput) ToJobPysparkConfigPtrOutput() JobPysparkConfigPtrOutput {
	return o.ToJobPysparkConfigPtrOutputWithContext(context.Background())
}

func (o JobPysparkConfigOutput) ToJobPysparkConfigPtrOutputWithContext(ctx context.Context) JobPysparkConfigPtrOutput {
	return o.ApplyT(func(v JobPysparkConfig) *JobPysparkConfig {
		return &v
	}).(JobPysparkConfigPtrOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobPysparkConfigOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobPysparkConfigOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobPysparkConfigOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPysparkConfigOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPysparkConfigOutput) LoggingConfig() JobPysparkConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobPysparkConfig) JobPysparkConfigLoggingConfig { return v.LoggingConfig }).(JobPysparkConfigLoggingConfigOutput)
}

func (o JobPysparkConfigOutput) MainPythonFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v JobPysparkConfig) string { return v.MainPythonFileUri }).(pulumi.StringOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPysparkConfigOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
func (o JobPysparkConfigOutput) PythonFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.PythonFileUris }).(pulumi.StringArrayOutput)
}

type JobPysparkConfigPtrOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPysparkConfig)(nil)).Elem()
}

func (o JobPysparkConfigPtrOutput) ToJobPysparkConfigPtrOutput() JobPysparkConfigPtrOutput {
	return o
}

func (o JobPysparkConfigPtrOutput) ToJobPysparkConfigPtrOutputWithContext(ctx context.Context) JobPysparkConfigPtrOutput {
	return o
}

func (o JobPysparkConfigPtrOutput) Elem() JobPysparkConfigOutput {
	return o.ApplyT(func(v *JobPysparkConfig) JobPysparkConfig { return *v }).(JobPysparkConfigOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobPysparkConfigPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobPysparkConfigPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobPysparkConfigPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPysparkConfigPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPysparkConfigPtrOutput) LoggingConfig() JobPysparkConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobPysparkConfig) JobPysparkConfigLoggingConfig { return v.LoggingConfig }).(JobPysparkConfigLoggingConfigOutput)
}

func (o JobPysparkConfigPtrOutput) MainPythonFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v JobPysparkConfig) string { return v.MainPythonFileUri }).(pulumi.StringOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPysparkConfigPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
func (o JobPysparkConfigPtrOutput) PythonFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfig) []string { return v.PythonFileUris }).(pulumi.StringArrayOutput)
}

type JobPysparkConfigArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris       []string                           `pulumi:"jarFileUris"`
	LoggingConfig     *JobPysparkConfigLoggingConfigArgs `pulumi:"loggingConfig"`
	MainPythonFileUri string                             `pulumi:"mainPythonFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris []string `pulumi:"pythonFileUris"`
}

type JobPysparkConfigArgsInput interface {
	pulumi.Input

	ToJobPysparkConfigArgsOutput() JobPysparkConfigArgsOutput
	ToJobPysparkConfigArgsOutputWithContext(context.Context) JobPysparkConfigArgsOutput
}

type JobPysparkConfigArgsArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris       pulumi.StringArrayInput                   `pulumi:"jarFileUris"`
	LoggingConfig     JobPysparkConfigLoggingConfigArgsPtrInput `pulumi:"loggingConfig"`
	MainPythonFileUri pulumi.StringInput                        `pulumi:"mainPythonFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris pulumi.StringArrayInput `pulumi:"pythonFileUris"`
}

func (JobPysparkConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigArgs)(nil)).Elem()
}

func (i JobPysparkConfigArgsArgs) ToJobPysparkConfigArgsOutput() JobPysparkConfigArgsOutput {
	return i.ToJobPysparkConfigArgsOutputWithContext(context.Background())
}

func (i JobPysparkConfigArgsArgs) ToJobPysparkConfigArgsOutputWithContext(ctx context.Context) JobPysparkConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigArgsOutput)
}

func (i JobPysparkConfigArgsArgs) ToJobPysparkConfigArgsPtrOutput() JobPysparkConfigArgsPtrOutput {
	return i.ToJobPysparkConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobPysparkConfigArgsArgs) ToJobPysparkConfigArgsPtrOutputWithContext(ctx context.Context) JobPysparkConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigArgsOutput).ToJobPysparkConfigArgsPtrOutputWithContext(ctx)
}

type JobPysparkConfigArgsPtrInput interface {
	pulumi.Input

	ToJobPysparkConfigArgsPtrOutput() JobPysparkConfigArgsPtrOutput
	ToJobPysparkConfigArgsPtrOutputWithContext(context.Context) JobPysparkConfigArgsPtrOutput
}

type jobPysparkConfigArgsPtrType JobPysparkConfigArgsArgs

func JobPysparkConfigArgsPtr(v *JobPysparkConfigArgsArgs) JobPysparkConfigArgsPtrInput {
	return (*jobPysparkConfigArgsPtrType)(v)
}

func (*jobPysparkConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPysparkConfigArgs)(nil)).Elem()
}

func (i *jobPysparkConfigArgsPtrType) ToJobPysparkConfigArgsPtrOutput() JobPysparkConfigArgsPtrOutput {
	return i.ToJobPysparkConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobPysparkConfigArgsPtrType) ToJobPysparkConfigArgsPtrOutputWithContext(ctx context.Context) JobPysparkConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigArgsPtrOutput)
}

type JobPysparkConfigArgsOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigArgs)(nil)).Elem()
}

func (o JobPysparkConfigArgsOutput) ToJobPysparkConfigArgsOutput() JobPysparkConfigArgsOutput {
	return o
}

func (o JobPysparkConfigArgsOutput) ToJobPysparkConfigArgsOutputWithContext(ctx context.Context) JobPysparkConfigArgsOutput {
	return o
}

func (o JobPysparkConfigArgsOutput) ToJobPysparkConfigArgsPtrOutput() JobPysparkConfigArgsPtrOutput {
	return o.ToJobPysparkConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobPysparkConfigArgsOutput) ToJobPysparkConfigArgsPtrOutputWithContext(ctx context.Context) JobPysparkConfigArgsPtrOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) *JobPysparkConfigArgs {
		return &v
	}).(JobPysparkConfigArgsPtrOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobPysparkConfigArgsOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobPysparkConfigArgsOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobPysparkConfigArgsOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPysparkConfigArgsOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPysparkConfigArgsOutput) LoggingConfig() JobPysparkConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) *JobPysparkConfigLoggingConfigArgs { return v.LoggingConfig }).(JobPysparkConfigLoggingConfigArgsPtrOutput)
}

func (o JobPysparkConfigArgsOutput) MainPythonFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) string { return v.MainPythonFileUri }).(pulumi.StringOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPysparkConfigArgsOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
func (o JobPysparkConfigArgsOutput) PythonFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.PythonFileUris }).(pulumi.StringArrayOutput)
}

type JobPysparkConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPysparkConfigArgs)(nil)).Elem()
}

func (o JobPysparkConfigArgsPtrOutput) ToJobPysparkConfigArgsPtrOutput() JobPysparkConfigArgsPtrOutput {
	return o
}

func (o JobPysparkConfigArgsPtrOutput) ToJobPysparkConfigArgsPtrOutputWithContext(ctx context.Context) JobPysparkConfigArgsPtrOutput {
	return o
}

func (o JobPysparkConfigArgsPtrOutput) Elem() JobPysparkConfigArgsOutput {
	return o.ApplyT(func(v *JobPysparkConfigArgs) JobPysparkConfigArgs { return *v }).(JobPysparkConfigArgsOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobPysparkConfigArgsPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobPysparkConfigArgsPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobPysparkConfigArgsPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPysparkConfigArgsPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPysparkConfigArgsPtrOutput) LoggingConfig() JobPysparkConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) *JobPysparkConfigLoggingConfigArgs { return v.LoggingConfig }).(JobPysparkConfigLoggingConfigArgsPtrOutput)
}

func (o JobPysparkConfigArgsPtrOutput) MainPythonFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) string { return v.MainPythonFileUri }).(pulumi.StringOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPysparkConfigArgsPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
func (o JobPysparkConfigArgsPtrOutput) PythonFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigArgs) []string { return v.PythonFileUris }).(pulumi.StringArrayOutput)
}

type JobPysparkConfigLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobPysparkConfigLoggingConfigInput interface {
	pulumi.Input

	ToJobPysparkConfigLoggingConfigOutput() JobPysparkConfigLoggingConfigOutput
	ToJobPysparkConfigLoggingConfigOutputWithContext(context.Context) JobPysparkConfigLoggingConfigOutput
}

type JobPysparkConfigLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobPysparkConfigLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigLoggingConfig)(nil)).Elem()
}

func (i JobPysparkConfigLoggingConfigArgs) ToJobPysparkConfigLoggingConfigOutput() JobPysparkConfigLoggingConfigOutput {
	return i.ToJobPysparkConfigLoggingConfigOutputWithContext(context.Background())
}

func (i JobPysparkConfigLoggingConfigArgs) ToJobPysparkConfigLoggingConfigOutputWithContext(ctx context.Context) JobPysparkConfigLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigLoggingConfigOutput)
}

type JobPysparkConfigLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigLoggingConfig)(nil)).Elem()
}

func (o JobPysparkConfigLoggingConfigOutput) ToJobPysparkConfigLoggingConfigOutput() JobPysparkConfigLoggingConfigOutput {
	return o
}

func (o JobPysparkConfigLoggingConfigOutput) ToJobPysparkConfigLoggingConfigOutputWithContext(ctx context.Context) JobPysparkConfigLoggingConfigOutput {
	return o
}

func (o JobPysparkConfigLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfigLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobPysparkConfigLoggingConfigArgs struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobPysparkConfigLoggingConfigArgsInput interface {
	pulumi.Input

	ToJobPysparkConfigLoggingConfigArgsOutput() JobPysparkConfigLoggingConfigArgsOutput
	ToJobPysparkConfigLoggingConfigArgsOutputWithContext(context.Context) JobPysparkConfigLoggingConfigArgsOutput
}

type JobPysparkConfigLoggingConfigArgsArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobPysparkConfigLoggingConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigLoggingConfigArgs)(nil)).Elem()
}

func (i JobPysparkConfigLoggingConfigArgsArgs) ToJobPysparkConfigLoggingConfigArgsOutput() JobPysparkConfigLoggingConfigArgsOutput {
	return i.ToJobPysparkConfigLoggingConfigArgsOutputWithContext(context.Background())
}

func (i JobPysparkConfigLoggingConfigArgsArgs) ToJobPysparkConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobPysparkConfigLoggingConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigLoggingConfigArgsOutput)
}

func (i JobPysparkConfigLoggingConfigArgsArgs) ToJobPysparkConfigLoggingConfigArgsPtrOutput() JobPysparkConfigLoggingConfigArgsPtrOutput {
	return i.ToJobPysparkConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobPysparkConfigLoggingConfigArgsArgs) ToJobPysparkConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobPysparkConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigLoggingConfigArgsOutput).ToJobPysparkConfigLoggingConfigArgsPtrOutputWithContext(ctx)
}

type JobPysparkConfigLoggingConfigArgsPtrInput interface {
	pulumi.Input

	ToJobPysparkConfigLoggingConfigArgsPtrOutput() JobPysparkConfigLoggingConfigArgsPtrOutput
	ToJobPysparkConfigLoggingConfigArgsPtrOutputWithContext(context.Context) JobPysparkConfigLoggingConfigArgsPtrOutput
}

type jobPysparkConfigLoggingConfigArgsPtrType JobPysparkConfigLoggingConfigArgsArgs

func JobPysparkConfigLoggingConfigArgsPtr(v *JobPysparkConfigLoggingConfigArgsArgs) JobPysparkConfigLoggingConfigArgsPtrInput {
	return (*jobPysparkConfigLoggingConfigArgsPtrType)(v)
}

func (*jobPysparkConfigLoggingConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPysparkConfigLoggingConfigArgs)(nil)).Elem()
}

func (i *jobPysparkConfigLoggingConfigArgsPtrType) ToJobPysparkConfigLoggingConfigArgsPtrOutput() JobPysparkConfigLoggingConfigArgsPtrOutput {
	return i.ToJobPysparkConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobPysparkConfigLoggingConfigArgsPtrType) ToJobPysparkConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobPysparkConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigLoggingConfigArgsPtrOutput)
}

type JobPysparkConfigLoggingConfigArgsOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigLoggingConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobPysparkConfigLoggingConfigArgsOutput) ToJobPysparkConfigLoggingConfigArgsOutput() JobPysparkConfigLoggingConfigArgsOutput {
	return o
}

func (o JobPysparkConfigLoggingConfigArgsOutput) ToJobPysparkConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobPysparkConfigLoggingConfigArgsOutput {
	return o
}

func (o JobPysparkConfigLoggingConfigArgsOutput) ToJobPysparkConfigLoggingConfigArgsPtrOutput() JobPysparkConfigLoggingConfigArgsPtrOutput {
	return o.ToJobPysparkConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobPysparkConfigLoggingConfigArgsOutput) ToJobPysparkConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobPysparkConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobPysparkConfigLoggingConfigArgs) *JobPysparkConfigLoggingConfigArgs {
		return &v
	}).(JobPysparkConfigLoggingConfigArgsPtrOutput)
}
func (o JobPysparkConfigLoggingConfigArgsOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobPysparkConfigLoggingConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigLoggingConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPysparkConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobPysparkConfigLoggingConfigArgsPtrOutput) ToJobPysparkConfigLoggingConfigArgsPtrOutput() JobPysparkConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobPysparkConfigLoggingConfigArgsPtrOutput) ToJobPysparkConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobPysparkConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobPysparkConfigLoggingConfigArgsPtrOutput) Elem() JobPysparkConfigLoggingConfigArgsOutput {
	return o.ApplyT(func(v *JobPysparkConfigLoggingConfigArgs) JobPysparkConfigLoggingConfigArgs { return *v }).(JobPysparkConfigLoggingConfigArgsOutput)
}

func (o JobPysparkConfigLoggingConfigArgsPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobPysparkConfigState struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris       []string                            `pulumi:"jarFileUris"`
	LoggingConfig     *JobPysparkConfigStateLoggingConfig `pulumi:"loggingConfig"`
	MainPythonFileUri string                              `pulumi:"mainPythonFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris []string `pulumi:"pythonFileUris"`
}

type JobPysparkConfigStateInput interface {
	pulumi.Input

	ToJobPysparkConfigStateOutput() JobPysparkConfigStateOutput
	ToJobPysparkConfigStateOutputWithContext(context.Context) JobPysparkConfigStateOutput
}

type JobPysparkConfigStateArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris       pulumi.StringArrayInput                    `pulumi:"jarFileUris"`
	LoggingConfig     JobPysparkConfigStateLoggingConfigPtrInput `pulumi:"loggingConfig"`
	MainPythonFileUri pulumi.StringInput                         `pulumi:"mainPythonFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
	PythonFileUris pulumi.StringArrayInput `pulumi:"pythonFileUris"`
}

func (JobPysparkConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigState)(nil)).Elem()
}

func (i JobPysparkConfigStateArgs) ToJobPysparkConfigStateOutput() JobPysparkConfigStateOutput {
	return i.ToJobPysparkConfigStateOutputWithContext(context.Background())
}

func (i JobPysparkConfigStateArgs) ToJobPysparkConfigStateOutputWithContext(ctx context.Context) JobPysparkConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigStateOutput)
}

type JobPysparkConfigStateOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigState)(nil)).Elem()
}

func (o JobPysparkConfigStateOutput) ToJobPysparkConfigStateOutput() JobPysparkConfigStateOutput {
	return o
}

func (o JobPysparkConfigStateOutput) ToJobPysparkConfigStateOutputWithContext(ctx context.Context) JobPysparkConfigStateOutput {
	return o
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobPysparkConfigStateOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigState) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobPysparkConfigStateOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigState) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobPysparkConfigStateOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigState) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobPysparkConfigStateOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigState) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobPysparkConfigStateOutput) LoggingConfig() JobPysparkConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobPysparkConfigState) *JobPysparkConfigStateLoggingConfig { return v.LoggingConfig }).(JobPysparkConfigStateLoggingConfigPtrOutput)
}

func (o JobPysparkConfigStateOutput) MainPythonFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v JobPysparkConfigState) string { return v.MainPythonFileUri }).(pulumi.StringOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobPysparkConfigStateOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfigState) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
func (o JobPysparkConfigStateOutput) PythonFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobPysparkConfigState) []string { return v.PythonFileUris }).(pulumi.StringArrayOutput)
}

type JobPysparkConfigStateLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobPysparkConfigStateLoggingConfigInput interface {
	pulumi.Input

	ToJobPysparkConfigStateLoggingConfigOutput() JobPysparkConfigStateLoggingConfigOutput
	ToJobPysparkConfigStateLoggingConfigOutputWithContext(context.Context) JobPysparkConfigStateLoggingConfigOutput
}

type JobPysparkConfigStateLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobPysparkConfigStateLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigStateLoggingConfig)(nil)).Elem()
}

func (i JobPysparkConfigStateLoggingConfigArgs) ToJobPysparkConfigStateLoggingConfigOutput() JobPysparkConfigStateLoggingConfigOutput {
	return i.ToJobPysparkConfigStateLoggingConfigOutputWithContext(context.Background())
}

func (i JobPysparkConfigStateLoggingConfigArgs) ToJobPysparkConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobPysparkConfigStateLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigStateLoggingConfigOutput)
}

func (i JobPysparkConfigStateLoggingConfigArgs) ToJobPysparkConfigStateLoggingConfigPtrOutput() JobPysparkConfigStateLoggingConfigPtrOutput {
	return i.ToJobPysparkConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i JobPysparkConfigStateLoggingConfigArgs) ToJobPysparkConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobPysparkConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigStateLoggingConfigOutput).ToJobPysparkConfigStateLoggingConfigPtrOutputWithContext(ctx)
}

type JobPysparkConfigStateLoggingConfigPtrInput interface {
	pulumi.Input

	ToJobPysparkConfigStateLoggingConfigPtrOutput() JobPysparkConfigStateLoggingConfigPtrOutput
	ToJobPysparkConfigStateLoggingConfigPtrOutputWithContext(context.Context) JobPysparkConfigStateLoggingConfigPtrOutput
}

type jobPysparkConfigStateLoggingConfigPtrType JobPysparkConfigStateLoggingConfigArgs

func JobPysparkConfigStateLoggingConfigPtr(v *JobPysparkConfigStateLoggingConfigArgs) JobPysparkConfigStateLoggingConfigPtrInput {
	return (*jobPysparkConfigStateLoggingConfigPtrType)(v)
}

func (*jobPysparkConfigStateLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPysparkConfigStateLoggingConfig)(nil)).Elem()
}

func (i *jobPysparkConfigStateLoggingConfigPtrType) ToJobPysparkConfigStateLoggingConfigPtrOutput() JobPysparkConfigStateLoggingConfigPtrOutput {
	return i.ToJobPysparkConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *jobPysparkConfigStateLoggingConfigPtrType) ToJobPysparkConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobPysparkConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPysparkConfigStateLoggingConfigPtrOutput)
}

type JobPysparkConfigStateLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigStateLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPysparkConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobPysparkConfigStateLoggingConfigOutput) ToJobPysparkConfigStateLoggingConfigOutput() JobPysparkConfigStateLoggingConfigOutput {
	return o
}

func (o JobPysparkConfigStateLoggingConfigOutput) ToJobPysparkConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobPysparkConfigStateLoggingConfigOutput {
	return o
}

func (o JobPysparkConfigStateLoggingConfigOutput) ToJobPysparkConfigStateLoggingConfigPtrOutput() JobPysparkConfigStateLoggingConfigPtrOutput {
	return o.ToJobPysparkConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (o JobPysparkConfigStateLoggingConfigOutput) ToJobPysparkConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobPysparkConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobPysparkConfigStateLoggingConfig) *JobPysparkConfigStateLoggingConfig {
		return &v
	}).(JobPysparkConfigStateLoggingConfigPtrOutput)
}
func (o JobPysparkConfigStateLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobPysparkConfigStateLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (JobPysparkConfigStateLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobPysparkConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobPysparkConfigStateLoggingConfigPtrOutput) ToJobPysparkConfigStateLoggingConfigPtrOutput() JobPysparkConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobPysparkConfigStateLoggingConfigPtrOutput) ToJobPysparkConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobPysparkConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobPysparkConfigStateLoggingConfigPtrOutput) Elem() JobPysparkConfigStateLoggingConfigOutput {
	return o.ApplyT(func(v *JobPysparkConfigStateLoggingConfig) JobPysparkConfigStateLoggingConfig { return *v }).(JobPysparkConfigStateLoggingConfigOutput)
}

func (o JobPysparkConfigStateLoggingConfigPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobPysparkConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobReference struct {
	JobId string `pulumi:"jobId"`
}

type JobReferenceInput interface {
	pulumi.Input

	ToJobReferenceOutput() JobReferenceOutput
	ToJobReferenceOutputWithContext(context.Context) JobReferenceOutput
}

type JobReferenceArgs struct {
	JobId pulumi.StringInput `pulumi:"jobId"`
}

func (JobReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReference)(nil)).Elem()
}

func (i JobReferenceArgs) ToJobReferenceOutput() JobReferenceOutput {
	return i.ToJobReferenceOutputWithContext(context.Background())
}

func (i JobReferenceArgs) ToJobReferenceOutputWithContext(ctx context.Context) JobReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceOutput)
}

func (i JobReferenceArgs) ToJobReferencePtrOutput() JobReferencePtrOutput {
	return i.ToJobReferencePtrOutputWithContext(context.Background())
}

func (i JobReferenceArgs) ToJobReferencePtrOutputWithContext(ctx context.Context) JobReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceOutput).ToJobReferencePtrOutputWithContext(ctx)
}

type JobReferencePtrInput interface {
	pulumi.Input

	ToJobReferencePtrOutput() JobReferencePtrOutput
	ToJobReferencePtrOutputWithContext(context.Context) JobReferencePtrOutput
}

type jobReferencePtrType JobReferenceArgs

func JobReferencePtr(v *JobReferenceArgs) JobReferencePtrInput {
	return (*jobReferencePtrType)(v)
}

func (*jobReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobReference)(nil)).Elem()
}

func (i *jobReferencePtrType) ToJobReferencePtrOutput() JobReferencePtrOutput {
	return i.ToJobReferencePtrOutputWithContext(context.Background())
}

func (i *jobReferencePtrType) ToJobReferencePtrOutputWithContext(ctx context.Context) JobReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferencePtrOutput)
}

type JobReferenceOutput struct{ *pulumi.OutputState }

func (JobReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReference)(nil)).Elem()
}

func (o JobReferenceOutput) ToJobReferenceOutput() JobReferenceOutput {
	return o
}

func (o JobReferenceOutput) ToJobReferenceOutputWithContext(ctx context.Context) JobReferenceOutput {
	return o
}

func (o JobReferenceOutput) ToJobReferencePtrOutput() JobReferencePtrOutput {
	return o.ToJobReferencePtrOutputWithContext(context.Background())
}

func (o JobReferenceOutput) ToJobReferencePtrOutputWithContext(ctx context.Context) JobReferencePtrOutput {
	return o.ApplyT(func(v JobReference) *JobReference {
		return &v
	}).(JobReferencePtrOutput)
}
func (o JobReferenceOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v JobReference) string { return v.JobId }).(pulumi.StringOutput)
}

type JobReferencePtrOutput struct{ *pulumi.OutputState }

func (JobReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobReference)(nil)).Elem()
}

func (o JobReferencePtrOutput) ToJobReferencePtrOutput() JobReferencePtrOutput {
	return o
}

func (o JobReferencePtrOutput) ToJobReferencePtrOutputWithContext(ctx context.Context) JobReferencePtrOutput {
	return o
}

func (o JobReferencePtrOutput) Elem() JobReferenceOutput {
	return o.ApplyT(func(v *JobReference) JobReference { return *v }).(JobReferenceOutput)
}

func (o JobReferencePtrOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v JobReference) string { return v.JobId }).(pulumi.StringOutput)
}

type JobReferenceArgs struct {
	JobId *string `pulumi:"jobId"`
}

type JobReferenceArgsInput interface {
	pulumi.Input

	ToJobReferenceArgsOutput() JobReferenceArgsOutput
	ToJobReferenceArgsOutputWithContext(context.Context) JobReferenceArgsOutput
}

type JobReferenceArgsArgs struct {
	JobId pulumi.StringPtrInput `pulumi:"jobId"`
}

func (JobReferenceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReferenceArgs)(nil)).Elem()
}

func (i JobReferenceArgsArgs) ToJobReferenceArgsOutput() JobReferenceArgsOutput {
	return i.ToJobReferenceArgsOutputWithContext(context.Background())
}

func (i JobReferenceArgsArgs) ToJobReferenceArgsOutputWithContext(ctx context.Context) JobReferenceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceArgsOutput)
}

func (i JobReferenceArgsArgs) ToJobReferenceArgsPtrOutput() JobReferenceArgsPtrOutput {
	return i.ToJobReferenceArgsPtrOutputWithContext(context.Background())
}

func (i JobReferenceArgsArgs) ToJobReferenceArgsPtrOutputWithContext(ctx context.Context) JobReferenceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceArgsOutput).ToJobReferenceArgsPtrOutputWithContext(ctx)
}

type JobReferenceArgsPtrInput interface {
	pulumi.Input

	ToJobReferenceArgsPtrOutput() JobReferenceArgsPtrOutput
	ToJobReferenceArgsPtrOutputWithContext(context.Context) JobReferenceArgsPtrOutput
}

type jobReferenceArgsPtrType JobReferenceArgsArgs

func JobReferenceArgsPtr(v *JobReferenceArgsArgs) JobReferenceArgsPtrInput {
	return (*jobReferenceArgsPtrType)(v)
}

func (*jobReferenceArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobReferenceArgs)(nil)).Elem()
}

func (i *jobReferenceArgsPtrType) ToJobReferenceArgsPtrOutput() JobReferenceArgsPtrOutput {
	return i.ToJobReferenceArgsPtrOutputWithContext(context.Background())
}

func (i *jobReferenceArgsPtrType) ToJobReferenceArgsPtrOutputWithContext(ctx context.Context) JobReferenceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceArgsPtrOutput)
}

type JobReferenceArgsOutput struct{ *pulumi.OutputState }

func (JobReferenceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReferenceArgs)(nil)).Elem()
}

func (o JobReferenceArgsOutput) ToJobReferenceArgsOutput() JobReferenceArgsOutput {
	return o
}

func (o JobReferenceArgsOutput) ToJobReferenceArgsOutputWithContext(ctx context.Context) JobReferenceArgsOutput {
	return o
}

func (o JobReferenceArgsOutput) ToJobReferenceArgsPtrOutput() JobReferenceArgsPtrOutput {
	return o.ToJobReferenceArgsPtrOutputWithContext(context.Background())
}

func (o JobReferenceArgsOutput) ToJobReferenceArgsPtrOutputWithContext(ctx context.Context) JobReferenceArgsPtrOutput {
	return o.ApplyT(func(v JobReferenceArgs) *JobReferenceArgs {
		return &v
	}).(JobReferenceArgsPtrOutput)
}
func (o JobReferenceArgsOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobReferenceArgs) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

type JobReferenceArgsPtrOutput struct{ *pulumi.OutputState }

func (JobReferenceArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobReferenceArgs)(nil)).Elem()
}

func (o JobReferenceArgsPtrOutput) ToJobReferenceArgsPtrOutput() JobReferenceArgsPtrOutput {
	return o
}

func (o JobReferenceArgsPtrOutput) ToJobReferenceArgsPtrOutputWithContext(ctx context.Context) JobReferenceArgsPtrOutput {
	return o
}

func (o JobReferenceArgsPtrOutput) Elem() JobReferenceArgsOutput {
	return o.ApplyT(func(v *JobReferenceArgs) JobReferenceArgs { return *v }).(JobReferenceArgsOutput)
}

func (o JobReferenceArgsPtrOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobReferenceArgs) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

type JobReferenceState struct {
	JobId *string `pulumi:"jobId"`
}

type JobReferenceStateInput interface {
	pulumi.Input

	ToJobReferenceStateOutput() JobReferenceStateOutput
	ToJobReferenceStateOutputWithContext(context.Context) JobReferenceStateOutput
}

type JobReferenceStateArgs struct {
	JobId pulumi.StringPtrInput `pulumi:"jobId"`
}

func (JobReferenceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReferenceState)(nil)).Elem()
}

func (i JobReferenceStateArgs) ToJobReferenceStateOutput() JobReferenceStateOutput {
	return i.ToJobReferenceStateOutputWithContext(context.Background())
}

func (i JobReferenceStateArgs) ToJobReferenceStateOutputWithContext(ctx context.Context) JobReferenceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobReferenceStateOutput)
}

type JobReferenceStateOutput struct{ *pulumi.OutputState }

func (JobReferenceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobReferenceState)(nil)).Elem()
}

func (o JobReferenceStateOutput) ToJobReferenceStateOutput() JobReferenceStateOutput {
	return o
}

func (o JobReferenceStateOutput) ToJobReferenceStateOutputWithContext(ctx context.Context) JobReferenceStateOutput {
	return o
}

func (o JobReferenceStateOutput) JobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobReferenceState) *string { return v.JobId }).(pulumi.StringPtrOutput)
}

type JobScheduling struct {
	MaxFailuresPerHour int `pulumi:"maxFailuresPerHour"`
}

type JobSchedulingInput interface {
	pulumi.Input

	ToJobSchedulingOutput() JobSchedulingOutput
	ToJobSchedulingOutputWithContext(context.Context) JobSchedulingOutput
}

type JobSchedulingArgs struct {
	MaxFailuresPerHour pulumi.IntInput `pulumi:"maxFailuresPerHour"`
}

func (JobSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduling)(nil)).Elem()
}

func (i JobSchedulingArgs) ToJobSchedulingOutput() JobSchedulingOutput {
	return i.ToJobSchedulingOutputWithContext(context.Background())
}

func (i JobSchedulingArgs) ToJobSchedulingOutputWithContext(ctx context.Context) JobSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingOutput)
}

func (i JobSchedulingArgs) ToJobSchedulingPtrOutput() JobSchedulingPtrOutput {
	return i.ToJobSchedulingPtrOutputWithContext(context.Background())
}

func (i JobSchedulingArgs) ToJobSchedulingPtrOutputWithContext(ctx context.Context) JobSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingOutput).ToJobSchedulingPtrOutputWithContext(ctx)
}

type JobSchedulingPtrInput interface {
	pulumi.Input

	ToJobSchedulingPtrOutput() JobSchedulingPtrOutput
	ToJobSchedulingPtrOutputWithContext(context.Context) JobSchedulingPtrOutput
}

type jobSchedulingPtrType JobSchedulingArgs

func JobSchedulingPtr(v *JobSchedulingArgs) JobSchedulingPtrInput {
	return (*jobSchedulingPtrType)(v)
}

func (*jobSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduling)(nil)).Elem()
}

func (i *jobSchedulingPtrType) ToJobSchedulingPtrOutput() JobSchedulingPtrOutput {
	return i.ToJobSchedulingPtrOutputWithContext(context.Background())
}

func (i *jobSchedulingPtrType) ToJobSchedulingPtrOutputWithContext(ctx context.Context) JobSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingPtrOutput)
}

type JobSchedulingOutput struct{ *pulumi.OutputState }

func (JobSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobScheduling)(nil)).Elem()
}

func (o JobSchedulingOutput) ToJobSchedulingOutput() JobSchedulingOutput {
	return o
}

func (o JobSchedulingOutput) ToJobSchedulingOutputWithContext(ctx context.Context) JobSchedulingOutput {
	return o
}

func (o JobSchedulingOutput) ToJobSchedulingPtrOutput() JobSchedulingPtrOutput {
	return o.ToJobSchedulingPtrOutputWithContext(context.Background())
}

func (o JobSchedulingOutput) ToJobSchedulingPtrOutputWithContext(ctx context.Context) JobSchedulingPtrOutput {
	return o.ApplyT(func(v JobScheduling) *JobScheduling {
		return &v
	}).(JobSchedulingPtrOutput)
}
func (o JobSchedulingOutput) MaxFailuresPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v JobScheduling) int { return v.MaxFailuresPerHour }).(pulumi.IntOutput)
}

type JobSchedulingPtrOutput struct{ *pulumi.OutputState }

func (JobSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobScheduling)(nil)).Elem()
}

func (o JobSchedulingPtrOutput) ToJobSchedulingPtrOutput() JobSchedulingPtrOutput {
	return o
}

func (o JobSchedulingPtrOutput) ToJobSchedulingPtrOutputWithContext(ctx context.Context) JobSchedulingPtrOutput {
	return o
}

func (o JobSchedulingPtrOutput) Elem() JobSchedulingOutput {
	return o.ApplyT(func(v *JobScheduling) JobScheduling { return *v }).(JobSchedulingOutput)
}

func (o JobSchedulingPtrOutput) MaxFailuresPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v JobScheduling) int { return v.MaxFailuresPerHour }).(pulumi.IntOutput)
}

type JobSchedulingArgs struct {
	MaxFailuresPerHour int `pulumi:"maxFailuresPerHour"`
}

type JobSchedulingArgsInput interface {
	pulumi.Input

	ToJobSchedulingArgsOutput() JobSchedulingArgsOutput
	ToJobSchedulingArgsOutputWithContext(context.Context) JobSchedulingArgsOutput
}

type JobSchedulingArgsArgs struct {
	MaxFailuresPerHour pulumi.IntInput `pulumi:"maxFailuresPerHour"`
}

func (JobSchedulingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedulingArgs)(nil)).Elem()
}

func (i JobSchedulingArgsArgs) ToJobSchedulingArgsOutput() JobSchedulingArgsOutput {
	return i.ToJobSchedulingArgsOutputWithContext(context.Background())
}

func (i JobSchedulingArgsArgs) ToJobSchedulingArgsOutputWithContext(ctx context.Context) JobSchedulingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingArgsOutput)
}

func (i JobSchedulingArgsArgs) ToJobSchedulingArgsPtrOutput() JobSchedulingArgsPtrOutput {
	return i.ToJobSchedulingArgsPtrOutputWithContext(context.Background())
}

func (i JobSchedulingArgsArgs) ToJobSchedulingArgsPtrOutputWithContext(ctx context.Context) JobSchedulingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingArgsOutput).ToJobSchedulingArgsPtrOutputWithContext(ctx)
}

type JobSchedulingArgsPtrInput interface {
	pulumi.Input

	ToJobSchedulingArgsPtrOutput() JobSchedulingArgsPtrOutput
	ToJobSchedulingArgsPtrOutputWithContext(context.Context) JobSchedulingArgsPtrOutput
}

type jobSchedulingArgsPtrType JobSchedulingArgsArgs

func JobSchedulingArgsPtr(v *JobSchedulingArgsArgs) JobSchedulingArgsPtrInput {
	return (*jobSchedulingArgsPtrType)(v)
}

func (*jobSchedulingArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedulingArgs)(nil)).Elem()
}

func (i *jobSchedulingArgsPtrType) ToJobSchedulingArgsPtrOutput() JobSchedulingArgsPtrOutput {
	return i.ToJobSchedulingArgsPtrOutputWithContext(context.Background())
}

func (i *jobSchedulingArgsPtrType) ToJobSchedulingArgsPtrOutputWithContext(ctx context.Context) JobSchedulingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingArgsPtrOutput)
}

type JobSchedulingArgsOutput struct{ *pulumi.OutputState }

func (JobSchedulingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedulingArgs)(nil)).Elem()
}

func (o JobSchedulingArgsOutput) ToJobSchedulingArgsOutput() JobSchedulingArgsOutput {
	return o
}

func (o JobSchedulingArgsOutput) ToJobSchedulingArgsOutputWithContext(ctx context.Context) JobSchedulingArgsOutput {
	return o
}

func (o JobSchedulingArgsOutput) ToJobSchedulingArgsPtrOutput() JobSchedulingArgsPtrOutput {
	return o.ToJobSchedulingArgsPtrOutputWithContext(context.Background())
}

func (o JobSchedulingArgsOutput) ToJobSchedulingArgsPtrOutputWithContext(ctx context.Context) JobSchedulingArgsPtrOutput {
	return o.ApplyT(func(v JobSchedulingArgs) *JobSchedulingArgs {
		return &v
	}).(JobSchedulingArgsPtrOutput)
}
func (o JobSchedulingArgsOutput) MaxFailuresPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v JobSchedulingArgs) int { return v.MaxFailuresPerHour }).(pulumi.IntOutput)
}

type JobSchedulingArgsPtrOutput struct{ *pulumi.OutputState }

func (JobSchedulingArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedulingArgs)(nil)).Elem()
}

func (o JobSchedulingArgsPtrOutput) ToJobSchedulingArgsPtrOutput() JobSchedulingArgsPtrOutput {
	return o
}

func (o JobSchedulingArgsPtrOutput) ToJobSchedulingArgsPtrOutputWithContext(ctx context.Context) JobSchedulingArgsPtrOutput {
	return o
}

func (o JobSchedulingArgsPtrOutput) Elem() JobSchedulingArgsOutput {
	return o.ApplyT(func(v *JobSchedulingArgs) JobSchedulingArgs { return *v }).(JobSchedulingArgsOutput)
}

func (o JobSchedulingArgsPtrOutput) MaxFailuresPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v JobSchedulingArgs) int { return v.MaxFailuresPerHour }).(pulumi.IntOutput)
}

type JobSchedulingState struct {
	MaxFailuresPerHour int `pulumi:"maxFailuresPerHour"`
}

type JobSchedulingStateInput interface {
	pulumi.Input

	ToJobSchedulingStateOutput() JobSchedulingStateOutput
	ToJobSchedulingStateOutputWithContext(context.Context) JobSchedulingStateOutput
}

type JobSchedulingStateArgs struct {
	MaxFailuresPerHour pulumi.IntInput `pulumi:"maxFailuresPerHour"`
}

func (JobSchedulingStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedulingState)(nil)).Elem()
}

func (i JobSchedulingStateArgs) ToJobSchedulingStateOutput() JobSchedulingStateOutput {
	return i.ToJobSchedulingStateOutputWithContext(context.Background())
}

func (i JobSchedulingStateArgs) ToJobSchedulingStateOutputWithContext(ctx context.Context) JobSchedulingStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSchedulingStateOutput)
}

type JobSchedulingStateOutput struct{ *pulumi.OutputState }

func (JobSchedulingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSchedulingState)(nil)).Elem()
}

func (o JobSchedulingStateOutput) ToJobSchedulingStateOutput() JobSchedulingStateOutput {
	return o
}

func (o JobSchedulingStateOutput) ToJobSchedulingStateOutputWithContext(ctx context.Context) JobSchedulingStateOutput {
	return o
}

func (o JobSchedulingStateOutput) MaxFailuresPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v JobSchedulingState) int { return v.MaxFailuresPerHour }).(pulumi.IntOutput)
}

type JobSparkConfig struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                    `pulumi:"jarFileUris"`
	LoggingConfig JobSparkConfigLoggingConfig `pulumi:"loggingConfig"`
	MainClass     *string                     `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri *string `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
}

type JobSparkConfigInput interface {
	pulumi.Input

	ToJobSparkConfigOutput() JobSparkConfigOutput
	ToJobSparkConfigOutputWithContext(context.Context) JobSparkConfigOutput
}

type JobSparkConfigArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput          `pulumi:"jarFileUris"`
	LoggingConfig JobSparkConfigLoggingConfigInput `pulumi:"loggingConfig"`
	MainClass     pulumi.StringPtrInput            `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri pulumi.StringPtrInput `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (JobSparkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfig)(nil)).Elem()
}

func (i JobSparkConfigArgs) ToJobSparkConfigOutput() JobSparkConfigOutput {
	return i.ToJobSparkConfigOutputWithContext(context.Background())
}

func (i JobSparkConfigArgs) ToJobSparkConfigOutputWithContext(ctx context.Context) JobSparkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigOutput)
}

func (i JobSparkConfigArgs) ToJobSparkConfigPtrOutput() JobSparkConfigPtrOutput {
	return i.ToJobSparkConfigPtrOutputWithContext(context.Background())
}

func (i JobSparkConfigArgs) ToJobSparkConfigPtrOutputWithContext(ctx context.Context) JobSparkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigOutput).ToJobSparkConfigPtrOutputWithContext(ctx)
}

type JobSparkConfigPtrInput interface {
	pulumi.Input

	ToJobSparkConfigPtrOutput() JobSparkConfigPtrOutput
	ToJobSparkConfigPtrOutputWithContext(context.Context) JobSparkConfigPtrOutput
}

type jobSparkConfigPtrType JobSparkConfigArgs

func JobSparkConfigPtr(v *JobSparkConfigArgs) JobSparkConfigPtrInput {
	return (*jobSparkConfigPtrType)(v)
}

func (*jobSparkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparkConfig)(nil)).Elem()
}

func (i *jobSparkConfigPtrType) ToJobSparkConfigPtrOutput() JobSparkConfigPtrOutput {
	return i.ToJobSparkConfigPtrOutputWithContext(context.Background())
}

func (i *jobSparkConfigPtrType) ToJobSparkConfigPtrOutputWithContext(ctx context.Context) JobSparkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigPtrOutput)
}

type JobSparkConfigOutput struct{ *pulumi.OutputState }

func (JobSparkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfig)(nil)).Elem()
}

func (o JobSparkConfigOutput) ToJobSparkConfigOutput() JobSparkConfigOutput {
	return o
}

func (o JobSparkConfigOutput) ToJobSparkConfigOutputWithContext(ctx context.Context) JobSparkConfigOutput {
	return o
}

func (o JobSparkConfigOutput) ToJobSparkConfigPtrOutput() JobSparkConfigPtrOutput {
	return o.ToJobSparkConfigPtrOutputWithContext(context.Background())
}

func (o JobSparkConfigOutput) ToJobSparkConfigPtrOutputWithContext(ctx context.Context) JobSparkConfigPtrOutput {
	return o.ApplyT(func(v JobSparkConfig) *JobSparkConfig {
		return &v
	}).(JobSparkConfigPtrOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobSparkConfigOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfig) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobSparkConfigOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfig) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobSparkConfigOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfig) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparkConfigOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparkConfigOutput) LoggingConfig() JobSparkConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobSparkConfig) JobSparkConfigLoggingConfig { return v.LoggingConfig }).(JobSparkConfigLoggingConfigOutput)
}

func (o JobSparkConfigOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfig) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobSparkConfigOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfig) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparkConfigOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobSparkConfigPtrOutput struct{ *pulumi.OutputState }

func (JobSparkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparkConfig)(nil)).Elem()
}

func (o JobSparkConfigPtrOutput) ToJobSparkConfigPtrOutput() JobSparkConfigPtrOutput {
	return o
}

func (o JobSparkConfigPtrOutput) ToJobSparkConfigPtrOutputWithContext(ctx context.Context) JobSparkConfigPtrOutput {
	return o
}

func (o JobSparkConfigPtrOutput) Elem() JobSparkConfigOutput {
	return o.ApplyT(func(v *JobSparkConfig) JobSparkConfig { return *v }).(JobSparkConfigOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobSparkConfigPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfig) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobSparkConfigPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfig) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobSparkConfigPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfig) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparkConfigPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparkConfigPtrOutput) LoggingConfig() JobSparkConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobSparkConfig) JobSparkConfigLoggingConfig { return v.LoggingConfig }).(JobSparkConfigLoggingConfigOutput)
}

func (o JobSparkConfigPtrOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfig) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobSparkConfigPtrOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfig) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparkConfigPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobSparkConfigArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                         `pulumi:"jarFileUris"`
	LoggingConfig *JobSparkConfigLoggingConfigArgs `pulumi:"loggingConfig"`
	MainClass     *string                          `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri *string `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
}

type JobSparkConfigArgsInput interface {
	pulumi.Input

	ToJobSparkConfigArgsOutput() JobSparkConfigArgsOutput
	ToJobSparkConfigArgsOutputWithContext(context.Context) JobSparkConfigArgsOutput
}

type JobSparkConfigArgsArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput                 `pulumi:"jarFileUris"`
	LoggingConfig JobSparkConfigLoggingConfigArgsPtrInput `pulumi:"loggingConfig"`
	MainClass     pulumi.StringPtrInput                   `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri pulumi.StringPtrInput `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (JobSparkConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigArgs)(nil)).Elem()
}

func (i JobSparkConfigArgsArgs) ToJobSparkConfigArgsOutput() JobSparkConfigArgsOutput {
	return i.ToJobSparkConfigArgsOutputWithContext(context.Background())
}

func (i JobSparkConfigArgsArgs) ToJobSparkConfigArgsOutputWithContext(ctx context.Context) JobSparkConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigArgsOutput)
}

func (i JobSparkConfigArgsArgs) ToJobSparkConfigArgsPtrOutput() JobSparkConfigArgsPtrOutput {
	return i.ToJobSparkConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobSparkConfigArgsArgs) ToJobSparkConfigArgsPtrOutputWithContext(ctx context.Context) JobSparkConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigArgsOutput).ToJobSparkConfigArgsPtrOutputWithContext(ctx)
}

type JobSparkConfigArgsPtrInput interface {
	pulumi.Input

	ToJobSparkConfigArgsPtrOutput() JobSparkConfigArgsPtrOutput
	ToJobSparkConfigArgsPtrOutputWithContext(context.Context) JobSparkConfigArgsPtrOutput
}

type jobSparkConfigArgsPtrType JobSparkConfigArgsArgs

func JobSparkConfigArgsPtr(v *JobSparkConfigArgsArgs) JobSparkConfigArgsPtrInput {
	return (*jobSparkConfigArgsPtrType)(v)
}

func (*jobSparkConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparkConfigArgs)(nil)).Elem()
}

func (i *jobSparkConfigArgsPtrType) ToJobSparkConfigArgsPtrOutput() JobSparkConfigArgsPtrOutput {
	return i.ToJobSparkConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobSparkConfigArgsPtrType) ToJobSparkConfigArgsPtrOutputWithContext(ctx context.Context) JobSparkConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigArgsPtrOutput)
}

type JobSparkConfigArgsOutput struct{ *pulumi.OutputState }

func (JobSparkConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigArgs)(nil)).Elem()
}

func (o JobSparkConfigArgsOutput) ToJobSparkConfigArgsOutput() JobSparkConfigArgsOutput {
	return o
}

func (o JobSparkConfigArgsOutput) ToJobSparkConfigArgsOutputWithContext(ctx context.Context) JobSparkConfigArgsOutput {
	return o
}

func (o JobSparkConfigArgsOutput) ToJobSparkConfigArgsPtrOutput() JobSparkConfigArgsPtrOutput {
	return o.ToJobSparkConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobSparkConfigArgsOutput) ToJobSparkConfigArgsPtrOutputWithContext(ctx context.Context) JobSparkConfigArgsPtrOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) *JobSparkConfigArgs {
		return &v
	}).(JobSparkConfigArgsPtrOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobSparkConfigArgsOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobSparkConfigArgsOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobSparkConfigArgsOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparkConfigArgsOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparkConfigArgsOutput) LoggingConfig() JobSparkConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) *JobSparkConfigLoggingConfigArgs { return v.LoggingConfig }).(JobSparkConfigLoggingConfigArgsPtrOutput)
}

func (o JobSparkConfigArgsOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobSparkConfigArgsOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparkConfigArgsOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobSparkConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobSparkConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparkConfigArgs)(nil)).Elem()
}

func (o JobSparkConfigArgsPtrOutput) ToJobSparkConfigArgsPtrOutput() JobSparkConfigArgsPtrOutput {
	return o
}

func (o JobSparkConfigArgsPtrOutput) ToJobSparkConfigArgsPtrOutputWithContext(ctx context.Context) JobSparkConfigArgsPtrOutput {
	return o
}

func (o JobSparkConfigArgsPtrOutput) Elem() JobSparkConfigArgsOutput {
	return o.ApplyT(func(v *JobSparkConfigArgs) JobSparkConfigArgs { return *v }).(JobSparkConfigArgsOutput)
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobSparkConfigArgsPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobSparkConfigArgsPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobSparkConfigArgsPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparkConfigArgsPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparkConfigArgsPtrOutput) LoggingConfig() JobSparkConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) *JobSparkConfigLoggingConfigArgs { return v.LoggingConfig }).(JobSparkConfigLoggingConfigArgsPtrOutput)
}

func (o JobSparkConfigArgsPtrOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobSparkConfigArgsPtrOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparkConfigArgsPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobSparkConfigLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobSparkConfigLoggingConfigInput interface {
	pulumi.Input

	ToJobSparkConfigLoggingConfigOutput() JobSparkConfigLoggingConfigOutput
	ToJobSparkConfigLoggingConfigOutputWithContext(context.Context) JobSparkConfigLoggingConfigOutput
}

type JobSparkConfigLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobSparkConfigLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigLoggingConfig)(nil)).Elem()
}

func (i JobSparkConfigLoggingConfigArgs) ToJobSparkConfigLoggingConfigOutput() JobSparkConfigLoggingConfigOutput {
	return i.ToJobSparkConfigLoggingConfigOutputWithContext(context.Background())
}

func (i JobSparkConfigLoggingConfigArgs) ToJobSparkConfigLoggingConfigOutputWithContext(ctx context.Context) JobSparkConfigLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigLoggingConfigOutput)
}

type JobSparkConfigLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobSparkConfigLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigLoggingConfig)(nil)).Elem()
}

func (o JobSparkConfigLoggingConfigOutput) ToJobSparkConfigLoggingConfigOutput() JobSparkConfigLoggingConfigOutput {
	return o
}

func (o JobSparkConfigLoggingConfigOutput) ToJobSparkConfigLoggingConfigOutputWithContext(ctx context.Context) JobSparkConfigLoggingConfigOutput {
	return o
}

func (o JobSparkConfigLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfigLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobSparkConfigLoggingConfigArgs struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobSparkConfigLoggingConfigArgsInput interface {
	pulumi.Input

	ToJobSparkConfigLoggingConfigArgsOutput() JobSparkConfigLoggingConfigArgsOutput
	ToJobSparkConfigLoggingConfigArgsOutputWithContext(context.Context) JobSparkConfigLoggingConfigArgsOutput
}

type JobSparkConfigLoggingConfigArgsArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobSparkConfigLoggingConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigLoggingConfigArgs)(nil)).Elem()
}

func (i JobSparkConfigLoggingConfigArgsArgs) ToJobSparkConfigLoggingConfigArgsOutput() JobSparkConfigLoggingConfigArgsOutput {
	return i.ToJobSparkConfigLoggingConfigArgsOutputWithContext(context.Background())
}

func (i JobSparkConfigLoggingConfigArgsArgs) ToJobSparkConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobSparkConfigLoggingConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigLoggingConfigArgsOutput)
}

func (i JobSparkConfigLoggingConfigArgsArgs) ToJobSparkConfigLoggingConfigArgsPtrOutput() JobSparkConfigLoggingConfigArgsPtrOutput {
	return i.ToJobSparkConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobSparkConfigLoggingConfigArgsArgs) ToJobSparkConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobSparkConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigLoggingConfigArgsOutput).ToJobSparkConfigLoggingConfigArgsPtrOutputWithContext(ctx)
}

type JobSparkConfigLoggingConfigArgsPtrInput interface {
	pulumi.Input

	ToJobSparkConfigLoggingConfigArgsPtrOutput() JobSparkConfigLoggingConfigArgsPtrOutput
	ToJobSparkConfigLoggingConfigArgsPtrOutputWithContext(context.Context) JobSparkConfigLoggingConfigArgsPtrOutput
}

type jobSparkConfigLoggingConfigArgsPtrType JobSparkConfigLoggingConfigArgsArgs

func JobSparkConfigLoggingConfigArgsPtr(v *JobSparkConfigLoggingConfigArgsArgs) JobSparkConfigLoggingConfigArgsPtrInput {
	return (*jobSparkConfigLoggingConfigArgsPtrType)(v)
}

func (*jobSparkConfigLoggingConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparkConfigLoggingConfigArgs)(nil)).Elem()
}

func (i *jobSparkConfigLoggingConfigArgsPtrType) ToJobSparkConfigLoggingConfigArgsPtrOutput() JobSparkConfigLoggingConfigArgsPtrOutput {
	return i.ToJobSparkConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobSparkConfigLoggingConfigArgsPtrType) ToJobSparkConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobSparkConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigLoggingConfigArgsPtrOutput)
}

type JobSparkConfigLoggingConfigArgsOutput struct{ *pulumi.OutputState }

func (JobSparkConfigLoggingConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobSparkConfigLoggingConfigArgsOutput) ToJobSparkConfigLoggingConfigArgsOutput() JobSparkConfigLoggingConfigArgsOutput {
	return o
}

func (o JobSparkConfigLoggingConfigArgsOutput) ToJobSparkConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobSparkConfigLoggingConfigArgsOutput {
	return o
}

func (o JobSparkConfigLoggingConfigArgsOutput) ToJobSparkConfigLoggingConfigArgsPtrOutput() JobSparkConfigLoggingConfigArgsPtrOutput {
	return o.ToJobSparkConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobSparkConfigLoggingConfigArgsOutput) ToJobSparkConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobSparkConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobSparkConfigLoggingConfigArgs) *JobSparkConfigLoggingConfigArgs {
		return &v
	}).(JobSparkConfigLoggingConfigArgsPtrOutput)
}
func (o JobSparkConfigLoggingConfigArgsOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobSparkConfigLoggingConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobSparkConfigLoggingConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparkConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobSparkConfigLoggingConfigArgsPtrOutput) ToJobSparkConfigLoggingConfigArgsPtrOutput() JobSparkConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobSparkConfigLoggingConfigArgsPtrOutput) ToJobSparkConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobSparkConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobSparkConfigLoggingConfigArgsPtrOutput) Elem() JobSparkConfigLoggingConfigArgsOutput {
	return o.ApplyT(func(v *JobSparkConfigLoggingConfigArgs) JobSparkConfigLoggingConfigArgs { return *v }).(JobSparkConfigLoggingConfigArgsOutput)
}

func (o JobSparkConfigLoggingConfigArgsPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobSparkConfigState struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args []string `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris []string `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                          `pulumi:"jarFileUris"`
	LoggingConfig *JobSparkConfigStateLoggingConfig `pulumi:"loggingConfig"`
	MainClass     *string                           `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri *string `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
}

type JobSparkConfigStateInput interface {
	pulumi.Input

	ToJobSparkConfigStateOutput() JobSparkConfigStateOutput
	ToJobSparkConfigStateOutputWithContext(context.Context) JobSparkConfigStateOutput
}

type JobSparkConfigStateArgs struct {
	// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput                  `pulumi:"jarFileUris"`
	LoggingConfig JobSparkConfigStateLoggingConfigPtrInput `pulumi:"loggingConfig"`
	MainClass     pulumi.StringPtrInput                    `pulumi:"mainClass"`
	// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
	MainJarFileUri pulumi.StringPtrInput `pulumi:"mainJarFileUri"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (JobSparkConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigState)(nil)).Elem()
}

func (i JobSparkConfigStateArgs) ToJobSparkConfigStateOutput() JobSparkConfigStateOutput {
	return i.ToJobSparkConfigStateOutputWithContext(context.Background())
}

func (i JobSparkConfigStateArgs) ToJobSparkConfigStateOutputWithContext(ctx context.Context) JobSparkConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigStateOutput)
}

type JobSparkConfigStateOutput struct{ *pulumi.OutputState }

func (JobSparkConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigState)(nil)).Elem()
}

func (o JobSparkConfigStateOutput) ToJobSparkConfigStateOutput() JobSparkConfigStateOutput {
	return o
}

func (o JobSparkConfigStateOutput) ToJobSparkConfigStateOutputWithContext(ctx context.Context) JobSparkConfigStateOutput {
	return o
}

// HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.
func (o JobSparkConfigStateOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigState) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
func (o JobSparkConfigStateOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigState) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// HCFS URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
func (o JobSparkConfigStateOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigState) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparkConfigStateOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparkConfigState) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparkConfigStateOutput) LoggingConfig() JobSparkConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobSparkConfigState) *JobSparkConfigStateLoggingConfig { return v.LoggingConfig }).(JobSparkConfigStateLoggingConfigPtrOutput)
}

func (o JobSparkConfigStateOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfigState) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'. Conflicts with `mainClass`
func (o JobSparkConfigStateOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparkConfigState) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparkConfigStateOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfigState) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type JobSparkConfigStateLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobSparkConfigStateLoggingConfigInput interface {
	pulumi.Input

	ToJobSparkConfigStateLoggingConfigOutput() JobSparkConfigStateLoggingConfigOutput
	ToJobSparkConfigStateLoggingConfigOutputWithContext(context.Context) JobSparkConfigStateLoggingConfigOutput
}

type JobSparkConfigStateLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobSparkConfigStateLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigStateLoggingConfig)(nil)).Elem()
}

func (i JobSparkConfigStateLoggingConfigArgs) ToJobSparkConfigStateLoggingConfigOutput() JobSparkConfigStateLoggingConfigOutput {
	return i.ToJobSparkConfigStateLoggingConfigOutputWithContext(context.Background())
}

func (i JobSparkConfigStateLoggingConfigArgs) ToJobSparkConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobSparkConfigStateLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigStateLoggingConfigOutput)
}

func (i JobSparkConfigStateLoggingConfigArgs) ToJobSparkConfigStateLoggingConfigPtrOutput() JobSparkConfigStateLoggingConfigPtrOutput {
	return i.ToJobSparkConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i JobSparkConfigStateLoggingConfigArgs) ToJobSparkConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobSparkConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigStateLoggingConfigOutput).ToJobSparkConfigStateLoggingConfigPtrOutputWithContext(ctx)
}

type JobSparkConfigStateLoggingConfigPtrInput interface {
	pulumi.Input

	ToJobSparkConfigStateLoggingConfigPtrOutput() JobSparkConfigStateLoggingConfigPtrOutput
	ToJobSparkConfigStateLoggingConfigPtrOutputWithContext(context.Context) JobSparkConfigStateLoggingConfigPtrOutput
}

type jobSparkConfigStateLoggingConfigPtrType JobSparkConfigStateLoggingConfigArgs

func JobSparkConfigStateLoggingConfigPtr(v *JobSparkConfigStateLoggingConfigArgs) JobSparkConfigStateLoggingConfigPtrInput {
	return (*jobSparkConfigStateLoggingConfigPtrType)(v)
}

func (*jobSparkConfigStateLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparkConfigStateLoggingConfig)(nil)).Elem()
}

func (i *jobSparkConfigStateLoggingConfigPtrType) ToJobSparkConfigStateLoggingConfigPtrOutput() JobSparkConfigStateLoggingConfigPtrOutput {
	return i.ToJobSparkConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *jobSparkConfigStateLoggingConfigPtrType) ToJobSparkConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobSparkConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparkConfigStateLoggingConfigPtrOutput)
}

type JobSparkConfigStateLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobSparkConfigStateLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparkConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobSparkConfigStateLoggingConfigOutput) ToJobSparkConfigStateLoggingConfigOutput() JobSparkConfigStateLoggingConfigOutput {
	return o
}

func (o JobSparkConfigStateLoggingConfigOutput) ToJobSparkConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobSparkConfigStateLoggingConfigOutput {
	return o
}

func (o JobSparkConfigStateLoggingConfigOutput) ToJobSparkConfigStateLoggingConfigPtrOutput() JobSparkConfigStateLoggingConfigPtrOutput {
	return o.ToJobSparkConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (o JobSparkConfigStateLoggingConfigOutput) ToJobSparkConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobSparkConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobSparkConfigStateLoggingConfig) *JobSparkConfigStateLoggingConfig {
		return &v
	}).(JobSparkConfigStateLoggingConfigPtrOutput)
}
func (o JobSparkConfigStateLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobSparkConfigStateLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (JobSparkConfigStateLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparkConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobSparkConfigStateLoggingConfigPtrOutput) ToJobSparkConfigStateLoggingConfigPtrOutput() JobSparkConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobSparkConfigStateLoggingConfigPtrOutput) ToJobSparkConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobSparkConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobSparkConfigStateLoggingConfigPtrOutput) Elem() JobSparkConfigStateLoggingConfigOutput {
	return o.ApplyT(func(v *JobSparkConfigStateLoggingConfig) JobSparkConfigStateLoggingConfig { return *v }).(JobSparkConfigStateLoggingConfigOutput)
}

func (o JobSparkConfigStateLoggingConfigPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparkConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobSparksqlConfig struct {
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                       `pulumi:"jarFileUris"`
	LoggingConfig JobSparksqlConfigLoggingConfig `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri *string  `pulumi:"queryFileUri"`
	QueryLists   []string `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

type JobSparksqlConfigInput interface {
	pulumi.Input

	ToJobSparksqlConfigOutput() JobSparksqlConfigOutput
	ToJobSparksqlConfigOutputWithContext(context.Context) JobSparksqlConfigOutput
}

type JobSparksqlConfigArgs struct {
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput             `pulumi:"jarFileUris"`
	LoggingConfig JobSparksqlConfigLoggingConfigInput `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri pulumi.StringPtrInput   `pulumi:"queryFileUri"`
	QueryLists   pulumi.StringArrayInput `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (JobSparksqlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfig)(nil)).Elem()
}

func (i JobSparksqlConfigArgs) ToJobSparksqlConfigOutput() JobSparksqlConfigOutput {
	return i.ToJobSparksqlConfigOutputWithContext(context.Background())
}

func (i JobSparksqlConfigArgs) ToJobSparksqlConfigOutputWithContext(ctx context.Context) JobSparksqlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigOutput)
}

func (i JobSparksqlConfigArgs) ToJobSparksqlConfigPtrOutput() JobSparksqlConfigPtrOutput {
	return i.ToJobSparksqlConfigPtrOutputWithContext(context.Background())
}

func (i JobSparksqlConfigArgs) ToJobSparksqlConfigPtrOutputWithContext(ctx context.Context) JobSparksqlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigOutput).ToJobSparksqlConfigPtrOutputWithContext(ctx)
}

type JobSparksqlConfigPtrInput interface {
	pulumi.Input

	ToJobSparksqlConfigPtrOutput() JobSparksqlConfigPtrOutput
	ToJobSparksqlConfigPtrOutputWithContext(context.Context) JobSparksqlConfigPtrOutput
}

type jobSparksqlConfigPtrType JobSparksqlConfigArgs

func JobSparksqlConfigPtr(v *JobSparksqlConfigArgs) JobSparksqlConfigPtrInput {
	return (*jobSparksqlConfigPtrType)(v)
}

func (*jobSparksqlConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparksqlConfig)(nil)).Elem()
}

func (i *jobSparksqlConfigPtrType) ToJobSparksqlConfigPtrOutput() JobSparksqlConfigPtrOutput {
	return i.ToJobSparksqlConfigPtrOutputWithContext(context.Background())
}

func (i *jobSparksqlConfigPtrType) ToJobSparksqlConfigPtrOutputWithContext(ctx context.Context) JobSparksqlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigPtrOutput)
}

type JobSparksqlConfigOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfig)(nil)).Elem()
}

func (o JobSparksqlConfigOutput) ToJobSparksqlConfigOutput() JobSparksqlConfigOutput {
	return o
}

func (o JobSparksqlConfigOutput) ToJobSparksqlConfigOutputWithContext(ctx context.Context) JobSparksqlConfigOutput {
	return o
}

func (o JobSparksqlConfigOutput) ToJobSparksqlConfigPtrOutput() JobSparksqlConfigPtrOutput {
	return o.ToJobSparksqlConfigPtrOutputWithContext(context.Background())
}

func (o JobSparksqlConfigOutput) ToJobSparksqlConfigPtrOutputWithContext(ctx context.Context) JobSparksqlConfigPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfig) *JobSparksqlConfig {
		return &v
	}).(JobSparksqlConfigPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparksqlConfigOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparksqlConfigOutput) LoggingConfig() JobSparksqlConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobSparksqlConfig) JobSparksqlConfigLoggingConfig { return v.LoggingConfig }).(JobSparksqlConfigLoggingConfigOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparksqlConfigOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobSparksqlConfigOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfig) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobSparksqlConfigOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfig) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobSparksqlConfigOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfig) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobSparksqlConfigPtrOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparksqlConfig)(nil)).Elem()
}

func (o JobSparksqlConfigPtrOutput) ToJobSparksqlConfigPtrOutput() JobSparksqlConfigPtrOutput {
	return o
}

func (o JobSparksqlConfigPtrOutput) ToJobSparksqlConfigPtrOutputWithContext(ctx context.Context) JobSparksqlConfigPtrOutput {
	return o
}

func (o JobSparksqlConfigPtrOutput) Elem() JobSparksqlConfigOutput {
	return o.ApplyT(func(v *JobSparksqlConfig) JobSparksqlConfig { return *v }).(JobSparksqlConfigOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparksqlConfigPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfig) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparksqlConfigPtrOutput) LoggingConfig() JobSparksqlConfigLoggingConfigOutput {
	return o.ApplyT(func(v JobSparksqlConfig) JobSparksqlConfigLoggingConfig { return v.LoggingConfig }).(JobSparksqlConfigLoggingConfigOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparksqlConfigPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfig) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobSparksqlConfigPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfig) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobSparksqlConfigPtrOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfig) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobSparksqlConfigPtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfig) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobSparksqlConfigArgs struct {
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                            `pulumi:"jarFileUris"`
	LoggingConfig *JobSparksqlConfigLoggingConfigArgs `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri *string  `pulumi:"queryFileUri"`
	QueryLists   []string `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

type JobSparksqlConfigArgsInput interface {
	pulumi.Input

	ToJobSparksqlConfigArgsOutput() JobSparksqlConfigArgsOutput
	ToJobSparksqlConfigArgsOutputWithContext(context.Context) JobSparksqlConfigArgsOutput
}

type JobSparksqlConfigArgsArgs struct {
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput                    `pulumi:"jarFileUris"`
	LoggingConfig JobSparksqlConfigLoggingConfigArgsPtrInput `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri pulumi.StringPtrInput   `pulumi:"queryFileUri"`
	QueryLists   pulumi.StringArrayInput `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (JobSparksqlConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigArgs)(nil)).Elem()
}

func (i JobSparksqlConfigArgsArgs) ToJobSparksqlConfigArgsOutput() JobSparksqlConfigArgsOutput {
	return i.ToJobSparksqlConfigArgsOutputWithContext(context.Background())
}

func (i JobSparksqlConfigArgsArgs) ToJobSparksqlConfigArgsOutputWithContext(ctx context.Context) JobSparksqlConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigArgsOutput)
}

func (i JobSparksqlConfigArgsArgs) ToJobSparksqlConfigArgsPtrOutput() JobSparksqlConfigArgsPtrOutput {
	return i.ToJobSparksqlConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobSparksqlConfigArgsArgs) ToJobSparksqlConfigArgsPtrOutputWithContext(ctx context.Context) JobSparksqlConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigArgsOutput).ToJobSparksqlConfigArgsPtrOutputWithContext(ctx)
}

type JobSparksqlConfigArgsPtrInput interface {
	pulumi.Input

	ToJobSparksqlConfigArgsPtrOutput() JobSparksqlConfigArgsPtrOutput
	ToJobSparksqlConfigArgsPtrOutputWithContext(context.Context) JobSparksqlConfigArgsPtrOutput
}

type jobSparksqlConfigArgsPtrType JobSparksqlConfigArgsArgs

func JobSparksqlConfigArgsPtr(v *JobSparksqlConfigArgsArgs) JobSparksqlConfigArgsPtrInput {
	return (*jobSparksqlConfigArgsPtrType)(v)
}

func (*jobSparksqlConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparksqlConfigArgs)(nil)).Elem()
}

func (i *jobSparksqlConfigArgsPtrType) ToJobSparksqlConfigArgsPtrOutput() JobSparksqlConfigArgsPtrOutput {
	return i.ToJobSparksqlConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobSparksqlConfigArgsPtrType) ToJobSparksqlConfigArgsPtrOutputWithContext(ctx context.Context) JobSparksqlConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigArgsPtrOutput)
}

type JobSparksqlConfigArgsOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigArgs)(nil)).Elem()
}

func (o JobSparksqlConfigArgsOutput) ToJobSparksqlConfigArgsOutput() JobSparksqlConfigArgsOutput {
	return o
}

func (o JobSparksqlConfigArgsOutput) ToJobSparksqlConfigArgsOutputWithContext(ctx context.Context) JobSparksqlConfigArgsOutput {
	return o
}

func (o JobSparksqlConfigArgsOutput) ToJobSparksqlConfigArgsPtrOutput() JobSparksqlConfigArgsPtrOutput {
	return o.ToJobSparksqlConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobSparksqlConfigArgsOutput) ToJobSparksqlConfigArgsPtrOutputWithContext(ctx context.Context) JobSparksqlConfigArgsPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) *JobSparksqlConfigArgs {
		return &v
	}).(JobSparksqlConfigArgsPtrOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparksqlConfigArgsOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparksqlConfigArgsOutput) LoggingConfig() JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) *JobSparksqlConfigLoggingConfigArgs { return v.LoggingConfig }).(JobSparksqlConfigLoggingConfigArgsPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparksqlConfigArgsOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobSparksqlConfigArgsOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobSparksqlConfigArgsOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobSparksqlConfigArgsOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobSparksqlConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparksqlConfigArgs)(nil)).Elem()
}

func (o JobSparksqlConfigArgsPtrOutput) ToJobSparksqlConfigArgsPtrOutput() JobSparksqlConfigArgsPtrOutput {
	return o
}

func (o JobSparksqlConfigArgsPtrOutput) ToJobSparksqlConfigArgsPtrOutputWithContext(ctx context.Context) JobSparksqlConfigArgsPtrOutput {
	return o
}

func (o JobSparksqlConfigArgsPtrOutput) Elem() JobSparksqlConfigArgsOutput {
	return o.ApplyT(func(v *JobSparksqlConfigArgs) JobSparksqlConfigArgs { return *v }).(JobSparksqlConfigArgsOutput)
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparksqlConfigArgsPtrOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparksqlConfigArgsPtrOutput) LoggingConfig() JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) *JobSparksqlConfigLoggingConfigArgs { return v.LoggingConfig }).(JobSparksqlConfigLoggingConfigArgsPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparksqlConfigArgsPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobSparksqlConfigArgsPtrOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobSparksqlConfigArgsPtrOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobSparksqlConfigArgsPtrOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigArgs) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobSparksqlConfigLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobSparksqlConfigLoggingConfigInput interface {
	pulumi.Input

	ToJobSparksqlConfigLoggingConfigOutput() JobSparksqlConfigLoggingConfigOutput
	ToJobSparksqlConfigLoggingConfigOutputWithContext(context.Context) JobSparksqlConfigLoggingConfigOutput
}

type JobSparksqlConfigLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobSparksqlConfigLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigLoggingConfig)(nil)).Elem()
}

func (i JobSparksqlConfigLoggingConfigArgs) ToJobSparksqlConfigLoggingConfigOutput() JobSparksqlConfigLoggingConfigOutput {
	return i.ToJobSparksqlConfigLoggingConfigOutputWithContext(context.Background())
}

func (i JobSparksqlConfigLoggingConfigArgs) ToJobSparksqlConfigLoggingConfigOutputWithContext(ctx context.Context) JobSparksqlConfigLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigLoggingConfigOutput)
}

type JobSparksqlConfigLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigLoggingConfig)(nil)).Elem()
}

func (o JobSparksqlConfigLoggingConfigOutput) ToJobSparksqlConfigLoggingConfigOutput() JobSparksqlConfigLoggingConfigOutput {
	return o
}

func (o JobSparksqlConfigLoggingConfigOutput) ToJobSparksqlConfigLoggingConfigOutputWithContext(ctx context.Context) JobSparksqlConfigLoggingConfigOutput {
	return o
}

func (o JobSparksqlConfigLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobSparksqlConfigLoggingConfigArgs struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobSparksqlConfigLoggingConfigArgsInput interface {
	pulumi.Input

	ToJobSparksqlConfigLoggingConfigArgsOutput() JobSparksqlConfigLoggingConfigArgsOutput
	ToJobSparksqlConfigLoggingConfigArgsOutputWithContext(context.Context) JobSparksqlConfigLoggingConfigArgsOutput
}

type JobSparksqlConfigLoggingConfigArgsArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobSparksqlConfigLoggingConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigLoggingConfigArgs)(nil)).Elem()
}

func (i JobSparksqlConfigLoggingConfigArgsArgs) ToJobSparksqlConfigLoggingConfigArgsOutput() JobSparksqlConfigLoggingConfigArgsOutput {
	return i.ToJobSparksqlConfigLoggingConfigArgsOutputWithContext(context.Background())
}

func (i JobSparksqlConfigLoggingConfigArgsArgs) ToJobSparksqlConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobSparksqlConfigLoggingConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigLoggingConfigArgsOutput)
}

func (i JobSparksqlConfigLoggingConfigArgsArgs) ToJobSparksqlConfigLoggingConfigArgsPtrOutput() JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return i.ToJobSparksqlConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i JobSparksqlConfigLoggingConfigArgsArgs) ToJobSparksqlConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigLoggingConfigArgsOutput).ToJobSparksqlConfigLoggingConfigArgsPtrOutputWithContext(ctx)
}

type JobSparksqlConfigLoggingConfigArgsPtrInput interface {
	pulumi.Input

	ToJobSparksqlConfigLoggingConfigArgsPtrOutput() JobSparksqlConfigLoggingConfigArgsPtrOutput
	ToJobSparksqlConfigLoggingConfigArgsPtrOutputWithContext(context.Context) JobSparksqlConfigLoggingConfigArgsPtrOutput
}

type jobSparksqlConfigLoggingConfigArgsPtrType JobSparksqlConfigLoggingConfigArgsArgs

func JobSparksqlConfigLoggingConfigArgsPtr(v *JobSparksqlConfigLoggingConfigArgsArgs) JobSparksqlConfigLoggingConfigArgsPtrInput {
	return (*jobSparksqlConfigLoggingConfigArgsPtrType)(v)
}

func (*jobSparksqlConfigLoggingConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparksqlConfigLoggingConfigArgs)(nil)).Elem()
}

func (i *jobSparksqlConfigLoggingConfigArgsPtrType) ToJobSparksqlConfigLoggingConfigArgsPtrOutput() JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return i.ToJobSparksqlConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (i *jobSparksqlConfigLoggingConfigArgsPtrType) ToJobSparksqlConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigLoggingConfigArgsPtrOutput)
}

type JobSparksqlConfigLoggingConfigArgsOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigLoggingConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobSparksqlConfigLoggingConfigArgsOutput) ToJobSparksqlConfigLoggingConfigArgsOutput() JobSparksqlConfigLoggingConfigArgsOutput {
	return o
}

func (o JobSparksqlConfigLoggingConfigArgsOutput) ToJobSparksqlConfigLoggingConfigArgsOutputWithContext(ctx context.Context) JobSparksqlConfigLoggingConfigArgsOutput {
	return o
}

func (o JobSparksqlConfigLoggingConfigArgsOutput) ToJobSparksqlConfigLoggingConfigArgsPtrOutput() JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return o.ToJobSparksqlConfigLoggingConfigArgsPtrOutputWithContext(context.Background())
}

func (o JobSparksqlConfigLoggingConfigArgsOutput) ToJobSparksqlConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfigLoggingConfigArgs) *JobSparksqlConfigLoggingConfigArgs {
		return &v
	}).(JobSparksqlConfigLoggingConfigArgsPtrOutput)
}
func (o JobSparksqlConfigLoggingConfigArgsOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobSparksqlConfigLoggingConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigLoggingConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparksqlConfigLoggingConfigArgs)(nil)).Elem()
}

func (o JobSparksqlConfigLoggingConfigArgsPtrOutput) ToJobSparksqlConfigLoggingConfigArgsPtrOutput() JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobSparksqlConfigLoggingConfigArgsPtrOutput) ToJobSparksqlConfigLoggingConfigArgsPtrOutputWithContext(ctx context.Context) JobSparksqlConfigLoggingConfigArgsPtrOutput {
	return o
}

func (o JobSparksqlConfigLoggingConfigArgsPtrOutput) Elem() JobSparksqlConfigLoggingConfigArgsOutput {
	return o.ApplyT(func(v *JobSparksqlConfigLoggingConfigArgs) JobSparksqlConfigLoggingConfigArgs { return *v }).(JobSparksqlConfigLoggingConfigArgsOutput)
}

func (o JobSparksqlConfigLoggingConfigArgsPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigLoggingConfigArgs) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobSparksqlConfigState struct {
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   []string                             `pulumi:"jarFileUris"`
	LoggingConfig *JobSparksqlConfigStateLoggingConfig `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties map[string]string `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri *string  `pulumi:"queryFileUri"`
	QueryLists   []string `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables map[string]string `pulumi:"scriptVariables"`
}

type JobSparksqlConfigStateInput interface {
	pulumi.Input

	ToJobSparksqlConfigStateOutput() JobSparksqlConfigStateOutput
	ToJobSparksqlConfigStateOutputWithContext(context.Context) JobSparksqlConfigStateOutput
}

type JobSparksqlConfigStateArgs struct {
	// HCFS URIs of jar files to be added to the Spark CLASSPATH.
	JarFileUris   pulumi.StringArrayInput                     `pulumi:"jarFileUris"`
	LoggingConfig JobSparksqlConfigStateLoggingConfigPtrInput `pulumi:"loggingConfig"`
	// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The HCFS URI of the script that contains SQL queries.
	// Conflicts with `queryList`
	QueryFileUri pulumi.StringPtrInput   `pulumi:"queryFileUri"`
	QueryLists   pulumi.StringArrayInput `pulumi:"queryLists"`
	// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
	ScriptVariables pulumi.StringMapInput `pulumi:"scriptVariables"`
}

func (JobSparksqlConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigState)(nil)).Elem()
}

func (i JobSparksqlConfigStateArgs) ToJobSparksqlConfigStateOutput() JobSparksqlConfigStateOutput {
	return i.ToJobSparksqlConfigStateOutputWithContext(context.Background())
}

func (i JobSparksqlConfigStateArgs) ToJobSparksqlConfigStateOutputWithContext(ctx context.Context) JobSparksqlConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigStateOutput)
}

type JobSparksqlConfigStateOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigState)(nil)).Elem()
}

func (o JobSparksqlConfigStateOutput) ToJobSparksqlConfigStateOutput() JobSparksqlConfigStateOutput {
	return o
}

func (o JobSparksqlConfigStateOutput) ToJobSparksqlConfigStateOutputWithContext(ctx context.Context) JobSparksqlConfigStateOutput {
	return o
}

// HCFS URIs of jar files to be added to the Spark CLASSPATH.
func (o JobSparksqlConfigStateOutput) JarFileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfigState) []string { return v.JarFileUris }).(pulumi.StringArrayOutput)
}

func (o JobSparksqlConfigStateOutput) LoggingConfig() JobSparksqlConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfigState) *JobSparksqlConfigStateLoggingConfig { return v.LoggingConfig }).(JobSparksqlConfigStateLoggingConfigPtrOutput)
}

// A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.
func (o JobSparksqlConfigStateOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigState) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The HCFS URI of the script that contains SQL queries.
// Conflicts with `queryList`
func (o JobSparksqlConfigStateOutput) QueryFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfigState) *string { return v.QueryFileUri }).(pulumi.StringPtrOutput)
}

func (o JobSparksqlConfigStateOutput) QueryLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobSparksqlConfigState) []string { return v.QueryLists }).(pulumi.StringArrayOutput)
}

// Mapping of query variable names to values (equivalent to the Spark SQL command: `SET name="value";`).
func (o JobSparksqlConfigStateOutput) ScriptVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigState) map[string]string { return v.ScriptVariables }).(pulumi.StringMapOutput)
}

type JobSparksqlConfigStateLoggingConfig struct {
	DriverLogLevels map[string]string `pulumi:"driverLogLevels"`
}

type JobSparksqlConfigStateLoggingConfigInput interface {
	pulumi.Input

	ToJobSparksqlConfigStateLoggingConfigOutput() JobSparksqlConfigStateLoggingConfigOutput
	ToJobSparksqlConfigStateLoggingConfigOutputWithContext(context.Context) JobSparksqlConfigStateLoggingConfigOutput
}

type JobSparksqlConfigStateLoggingConfigArgs struct {
	DriverLogLevels pulumi.StringMapInput `pulumi:"driverLogLevels"`
}

func (JobSparksqlConfigStateLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigStateLoggingConfig)(nil)).Elem()
}

func (i JobSparksqlConfigStateLoggingConfigArgs) ToJobSparksqlConfigStateLoggingConfigOutput() JobSparksqlConfigStateLoggingConfigOutput {
	return i.ToJobSparksqlConfigStateLoggingConfigOutputWithContext(context.Background())
}

func (i JobSparksqlConfigStateLoggingConfigArgs) ToJobSparksqlConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobSparksqlConfigStateLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigStateLoggingConfigOutput)
}

func (i JobSparksqlConfigStateLoggingConfigArgs) ToJobSparksqlConfigStateLoggingConfigPtrOutput() JobSparksqlConfigStateLoggingConfigPtrOutput {
	return i.ToJobSparksqlConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i JobSparksqlConfigStateLoggingConfigArgs) ToJobSparksqlConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobSparksqlConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigStateLoggingConfigOutput).ToJobSparksqlConfigStateLoggingConfigPtrOutputWithContext(ctx)
}

type JobSparksqlConfigStateLoggingConfigPtrInput interface {
	pulumi.Input

	ToJobSparksqlConfigStateLoggingConfigPtrOutput() JobSparksqlConfigStateLoggingConfigPtrOutput
	ToJobSparksqlConfigStateLoggingConfigPtrOutputWithContext(context.Context) JobSparksqlConfigStateLoggingConfigPtrOutput
}

type jobSparksqlConfigStateLoggingConfigPtrType JobSparksqlConfigStateLoggingConfigArgs

func JobSparksqlConfigStateLoggingConfigPtr(v *JobSparksqlConfigStateLoggingConfigArgs) JobSparksqlConfigStateLoggingConfigPtrInput {
	return (*jobSparksqlConfigStateLoggingConfigPtrType)(v)
}

func (*jobSparksqlConfigStateLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparksqlConfigStateLoggingConfig)(nil)).Elem()
}

func (i *jobSparksqlConfigStateLoggingConfigPtrType) ToJobSparksqlConfigStateLoggingConfigPtrOutput() JobSparksqlConfigStateLoggingConfigPtrOutput {
	return i.ToJobSparksqlConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *jobSparksqlConfigStateLoggingConfigPtrType) ToJobSparksqlConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobSparksqlConfigStateLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSparksqlConfigStateLoggingConfigPtrOutput)
}

type JobSparksqlConfigStateLoggingConfigOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigStateLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSparksqlConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobSparksqlConfigStateLoggingConfigOutput) ToJobSparksqlConfigStateLoggingConfigOutput() JobSparksqlConfigStateLoggingConfigOutput {
	return o
}

func (o JobSparksqlConfigStateLoggingConfigOutput) ToJobSparksqlConfigStateLoggingConfigOutputWithContext(ctx context.Context) JobSparksqlConfigStateLoggingConfigOutput {
	return o
}

func (o JobSparksqlConfigStateLoggingConfigOutput) ToJobSparksqlConfigStateLoggingConfigPtrOutput() JobSparksqlConfigStateLoggingConfigPtrOutput {
	return o.ToJobSparksqlConfigStateLoggingConfigPtrOutputWithContext(context.Background())
}

func (o JobSparksqlConfigStateLoggingConfigOutput) ToJobSparksqlConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobSparksqlConfigStateLoggingConfigPtrOutput {
	return o.ApplyT(func(v JobSparksqlConfigStateLoggingConfig) *JobSparksqlConfigStateLoggingConfig {
		return &v
	}).(JobSparksqlConfigStateLoggingConfigPtrOutput)
}
func (o JobSparksqlConfigStateLoggingConfigOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobSparksqlConfigStateLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (JobSparksqlConfigStateLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSparksqlConfigStateLoggingConfig)(nil)).Elem()
}

func (o JobSparksqlConfigStateLoggingConfigPtrOutput) ToJobSparksqlConfigStateLoggingConfigPtrOutput() JobSparksqlConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobSparksqlConfigStateLoggingConfigPtrOutput) ToJobSparksqlConfigStateLoggingConfigPtrOutputWithContext(ctx context.Context) JobSparksqlConfigStateLoggingConfigPtrOutput {
	return o
}

func (o JobSparksqlConfigStateLoggingConfigPtrOutput) Elem() JobSparksqlConfigStateLoggingConfigOutput {
	return o.ApplyT(func(v *JobSparksqlConfigStateLoggingConfig) JobSparksqlConfigStateLoggingConfig { return *v }).(JobSparksqlConfigStateLoggingConfigOutput)
}

func (o JobSparksqlConfigStateLoggingConfigPtrOutput) DriverLogLevels() pulumi.StringMapOutput {
	return o.ApplyT(func(v JobSparksqlConfigStateLoggingConfig) map[string]string { return v.DriverLogLevels }).(pulumi.StringMapOutput)
}

type JobStatus struct {
	Details        string `pulumi:"details"`
	State          string `pulumi:"state"`
	StateStartTime string `pulumi:"stateStartTime"`
	Substate       string `pulumi:"substate"`
}

type JobStatusInput interface {
	pulumi.Input

	ToJobStatusOutput() JobStatusOutput
	ToJobStatusOutputWithContext(context.Context) JobStatusOutput
}

type JobStatusArgs struct {
	Details        pulumi.StringInput `pulumi:"details"`
	State          pulumi.StringInput `pulumi:"state"`
	StateStartTime pulumi.StringInput `pulumi:"stateStartTime"`
	Substate       pulumi.StringInput `pulumi:"substate"`
}

func (JobStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatus)(nil)).Elem()
}

func (i JobStatusArgs) ToJobStatusOutput() JobStatusOutput {
	return i.ToJobStatusOutputWithContext(context.Background())
}

func (i JobStatusArgs) ToJobStatusOutputWithContext(ctx context.Context) JobStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusOutput)
}

func (i JobStatusArgs) ToJobStatusPtrOutput() JobStatusPtrOutput {
	return i.ToJobStatusPtrOutputWithContext(context.Background())
}

func (i JobStatusArgs) ToJobStatusPtrOutputWithContext(ctx context.Context) JobStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusOutput).ToJobStatusPtrOutputWithContext(ctx)
}

type JobStatusPtrInput interface {
	pulumi.Input

	ToJobStatusPtrOutput() JobStatusPtrOutput
	ToJobStatusPtrOutputWithContext(context.Context) JobStatusPtrOutput
}

type jobStatusPtrType JobStatusArgs

func JobStatusPtr(v *JobStatusArgs) JobStatusPtrInput {
	return (*jobStatusPtrType)(v)
}

func (*jobStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStatus)(nil)).Elem()
}

func (i *jobStatusPtrType) ToJobStatusPtrOutput() JobStatusPtrOutput {
	return i.ToJobStatusPtrOutputWithContext(context.Background())
}

func (i *jobStatusPtrType) ToJobStatusPtrOutputWithContext(ctx context.Context) JobStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusPtrOutput)
}

type JobStatusOutput struct{ *pulumi.OutputState }

func (JobStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatus)(nil)).Elem()
}

func (o JobStatusOutput) ToJobStatusOutput() JobStatusOutput {
	return o
}

func (o JobStatusOutput) ToJobStatusOutputWithContext(ctx context.Context) JobStatusOutput {
	return o
}

func (o JobStatusOutput) ToJobStatusPtrOutput() JobStatusPtrOutput {
	return o.ToJobStatusPtrOutputWithContext(context.Background())
}

func (o JobStatusOutput) ToJobStatusPtrOutputWithContext(ctx context.Context) JobStatusPtrOutput {
	return o.ApplyT(func(v JobStatus) *JobStatus {
		return &v
	}).(JobStatusPtrOutput)
}
func (o JobStatusOutput) Details() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatus) string { return v.Details }).(pulumi.StringOutput)
}

func (o JobStatusOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatus) string { return v.State }).(pulumi.StringOutput)
}

func (o JobStatusOutput) StateStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatus) string { return v.StateStartTime }).(pulumi.StringOutput)
}

func (o JobStatusOutput) Substate() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatus) string { return v.Substate }).(pulumi.StringOutput)
}

type JobStatusPtrOutput struct{ *pulumi.OutputState }

func (JobStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStatus)(nil)).Elem()
}

func (o JobStatusPtrOutput) ToJobStatusPtrOutput() JobStatusPtrOutput {
	return o
}

func (o JobStatusPtrOutput) ToJobStatusPtrOutputWithContext(ctx context.Context) JobStatusPtrOutput {
	return o
}

func (o JobStatusPtrOutput) Elem() JobStatusOutput {
	return o.ApplyT(func(v *JobStatus) JobStatus { return *v }).(JobStatusOutput)
}

func (o JobStatusPtrOutput) Details() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatus) string { return v.Details }).(pulumi.StringOutput)
}

func (o JobStatusPtrOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatus) string { return v.State }).(pulumi.StringOutput)
}

func (o JobStatusPtrOutput) StateStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatus) string { return v.StateStartTime }).(pulumi.StringOutput)
}

func (o JobStatusPtrOutput) Substate() pulumi.StringOutput {
	return o.ApplyT(func(v JobStatus) string { return v.Substate }).(pulumi.StringOutput)
}

type JobStatusState struct {
	Details        *string `pulumi:"details"`
	State          *string `pulumi:"state"`
	StateStartTime *string `pulumi:"stateStartTime"`
	Substate       *string `pulumi:"substate"`
}

type JobStatusStateInput interface {
	pulumi.Input

	ToJobStatusStateOutput() JobStatusStateOutput
	ToJobStatusStateOutputWithContext(context.Context) JobStatusStateOutput
}

type JobStatusStateArgs struct {
	Details        pulumi.StringPtrInput `pulumi:"details"`
	State          pulumi.StringPtrInput `pulumi:"state"`
	StateStartTime pulumi.StringPtrInput `pulumi:"stateStartTime"`
	Substate       pulumi.StringPtrInput `pulumi:"substate"`
}

func (JobStatusStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatusState)(nil)).Elem()
}

func (i JobStatusStateArgs) ToJobStatusStateOutput() JobStatusStateOutput {
	return i.ToJobStatusStateOutputWithContext(context.Background())
}

func (i JobStatusStateArgs) ToJobStatusStateOutputWithContext(ctx context.Context) JobStatusStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStatusStateOutput)
}

type JobStatusStateOutput struct{ *pulumi.OutputState }

func (JobStatusStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStatusState)(nil)).Elem()
}

func (o JobStatusStateOutput) ToJobStatusStateOutput() JobStatusStateOutput {
	return o
}

func (o JobStatusStateOutput) ToJobStatusStateOutputWithContext(ctx context.Context) JobStatusStateOutput {
	return o
}

func (o JobStatusStateOutput) Details() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStatusState) *string { return v.Details }).(pulumi.StringPtrOutput)
}

func (o JobStatusStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStatusState) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o JobStatusStateOutput) StateStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStatusState) *string { return v.StateStartTime }).(pulumi.StringPtrOutput)
}

func (o JobStatusStateOutput) Substate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStatusState) *string { return v.Substate }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoscalingPolicyBasicAlgorithmOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyBasicAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyBasicAlgorithmArgsOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyBasicAlgorithmArgsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyBasicAlgorithmStateOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyBasicAlgorithmStateYarnConfigOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyBasicAlgorithmYarnConfigOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyBasicAlgorithmYarnConfigArgsOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicySecondaryWorkerConfigOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicySecondaryWorkerConfigPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicySecondaryWorkerConfigArgsOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicySecondaryWorkerConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicySecondaryWorkerConfigStateOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyWorkerConfigOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyWorkerConfigPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyWorkerConfigArgsOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyWorkerConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingPolicyWorkerConfigStateOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigAutoscalingConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigAutoscalingConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigAutoscalingConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigAutoscalingConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigEncryptionConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigEncryptionConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigGceClusterConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigGceClusterConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigGceClusterConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigInitializationActionOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigInitializationActionArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigInitializationActionArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigInitializationActionArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigLifecycleConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigLifecycleConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigLifecycleConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigLifecycleConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigAcceleratorArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigAcceleratorArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigDiskConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigDiskConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigMasterConfigDiskConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigPreemptibleWorkerConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigPreemptibleWorkerConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigPreemptibleWorkerConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigSecurityConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigSecurityConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigSecurityConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigSecurityConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigSecurityConfigKerberosConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigSecurityConfigKerberosConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigSoftwareConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigSoftwareConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigSoftwareConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateAutoscalingConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateAutoscalingConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateGceClusterConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateGceClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateInitializationActionOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateInitializationActionArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateLifecycleConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateLifecycleConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateMasterConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateMasterConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateMasterConfigAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateMasterConfigAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateMasterConfigDiskConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateMasterConfigDiskConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStatePreemptibleWorkerConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStatePreemptibleWorkerConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStatePreemptibleWorkerConfigDiskConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateSecurityConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateSecurityConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateSecurityConfigKerberosConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateSoftwareConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateSoftwareConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateWorkerConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateWorkerConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateWorkerConfigAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateWorkerConfigAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateWorkerConfigDiskConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigStateWorkerConfigDiskConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigAcceleratorArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigAcceleratorArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigDiskConfigOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigDiskConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterConfigWorkerConfigDiskConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(ClusterIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(ClusterIAMBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(ClusterIAMBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIAMBindingConditionStateOutput{})
	pulumi.RegisterOutputType(ClusterIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(ClusterIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(ClusterIAMMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(ClusterIAMMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIAMMemberConditionStateOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigPtrOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigArgsOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigLoggingConfigArgsOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigLoggingConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigStateOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigStateLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobHadoopConfigStateLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(JobHiveConfigOutput{})
	pulumi.RegisterOutputType(JobHiveConfigPtrOutput{})
	pulumi.RegisterOutputType(JobHiveConfigArgsOutput{})
	pulumi.RegisterOutputType(JobHiveConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobHiveConfigStateOutput{})
	pulumi.RegisterOutputType(JobIAMBindingConditionOutput{})
	pulumi.RegisterOutputType(JobIAMBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(JobIAMBindingConditionArgsOutput{})
	pulumi.RegisterOutputType(JobIAMBindingConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(JobIAMBindingConditionStateOutput{})
	pulumi.RegisterOutputType(JobIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(JobIAMMemberConditionPtrOutput{})
	pulumi.RegisterOutputType(JobIAMMemberConditionArgsOutput{})
	pulumi.RegisterOutputType(JobIAMMemberConditionArgsPtrOutput{})
	pulumi.RegisterOutputType(JobIAMMemberConditionStateOutput{})
	pulumi.RegisterOutputType(JobPigConfigOutput{})
	pulumi.RegisterOutputType(JobPigConfigPtrOutput{})
	pulumi.RegisterOutputType(JobPigConfigArgsOutput{})
	pulumi.RegisterOutputType(JobPigConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobPigConfigLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobPigConfigLoggingConfigArgsOutput{})
	pulumi.RegisterOutputType(JobPigConfigLoggingConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobPigConfigStateOutput{})
	pulumi.RegisterOutputType(JobPigConfigStateLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobPigConfigStateLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(JobPlacementOutput{})
	pulumi.RegisterOutputType(JobPlacementPtrOutput{})
	pulumi.RegisterOutputType(JobPlacementArgsOutput{})
	pulumi.RegisterOutputType(JobPlacementArgsPtrOutput{})
	pulumi.RegisterOutputType(JobPlacementStateOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigPtrOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigArgsOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigLoggingConfigArgsOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigLoggingConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigStateOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigStateLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobPysparkConfigStateLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(JobReferenceOutput{})
	pulumi.RegisterOutputType(JobReferencePtrOutput{})
	pulumi.RegisterOutputType(JobReferenceArgsOutput{})
	pulumi.RegisterOutputType(JobReferenceArgsPtrOutput{})
	pulumi.RegisterOutputType(JobReferenceStateOutput{})
	pulumi.RegisterOutputType(JobSchedulingOutput{})
	pulumi.RegisterOutputType(JobSchedulingPtrOutput{})
	pulumi.RegisterOutputType(JobSchedulingArgsOutput{})
	pulumi.RegisterOutputType(JobSchedulingArgsPtrOutput{})
	pulumi.RegisterOutputType(JobSchedulingStateOutput{})
	pulumi.RegisterOutputType(JobSparkConfigOutput{})
	pulumi.RegisterOutputType(JobSparkConfigPtrOutput{})
	pulumi.RegisterOutputType(JobSparkConfigArgsOutput{})
	pulumi.RegisterOutputType(JobSparkConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobSparkConfigLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobSparkConfigLoggingConfigArgsOutput{})
	pulumi.RegisterOutputType(JobSparkConfigLoggingConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobSparkConfigStateOutput{})
	pulumi.RegisterOutputType(JobSparkConfigStateLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobSparkConfigStateLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigPtrOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigArgsOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigLoggingConfigArgsOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigLoggingConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigStateOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigStateLoggingConfigOutput{})
	pulumi.RegisterOutputType(JobSparksqlConfigStateLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(JobStatusOutput{})
	pulumi.RegisterOutputType(JobStatusPtrOutput{})
	pulumi.RegisterOutputType(JobStatusStateOutput{})
}
