// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getClusterMaintenancePolicyRecurringWindow

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetClusterMaintenancePolicyRecurringWindow struct {
	EndTime string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime string `pulumi:"startTime"`
}

type GetClusterMaintenancePolicyRecurringWindowInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyRecurringWindowOutput() GetClusterMaintenancePolicyRecurringWindowOutput
	ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Context) GetClusterMaintenancePolicyRecurringWindowOutput
}

type GetClusterMaintenancePolicyRecurringWindowArgs struct {
	EndTime pulumi.StringInput `pulumi:"endTime"`
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetClusterMaintenancePolicyRecurringWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyRecurringWindowArgs) ToGetClusterMaintenancePolicyRecurringWindowOutput() GetClusterMaintenancePolicyRecurringWindowOutput {
	return i.ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyRecurringWindowArgs) ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyRecurringWindowOutput)
}

type GetClusterMaintenancePolicyRecurringWindowArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyRecurringWindowArrayOutput() GetClusterMaintenancePolicyRecurringWindowArrayOutput
	ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyRecurringWindowArrayOutput
}

type GetClusterMaintenancePolicyRecurringWindowArray []GetClusterMaintenancePolicyRecurringWindowInput

func (GetClusterMaintenancePolicyRecurringWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyRecurringWindowArray) ToGetClusterMaintenancePolicyRecurringWindowArrayOutput() GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return i.ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyRecurringWindowArray) ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyRecurringWindowArrayOutput)
}

type GetClusterMaintenancePolicyRecurringWindowOutput struct { *pulumi.OutputState }

func (GetClusterMaintenancePolicyRecurringWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) ToGetClusterMaintenancePolicyRecurringWindowOutput() GetClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func (v GetClusterMaintenancePolicyRecurringWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func (v GetClusterMaintenancePolicyRecurringWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func (v GetClusterMaintenancePolicyRecurringWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetClusterMaintenancePolicyRecurringWindowArrayOutput struct { *pulumi.OutputState}

func (GetClusterMaintenancePolicyRecurringWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyRecurringWindowArrayOutput) ToGetClusterMaintenancePolicyRecurringWindowArrayOutput() GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowArrayOutput) ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyRecurringWindowOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetClusterMaintenancePolicyRecurringWindow {
		return vs[0].([]GetClusterMaintenancePolicyRecurringWindow)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyRecurringWindowOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyRecurringWindowOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyRecurringWindowArrayOutput{})
}
