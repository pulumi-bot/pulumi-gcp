// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package container

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ClusterAddonsConfig struct {
	// .
	// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
	// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
	CloudrunConfig ClusterAddonsConfigCloudrunConfig `pulumi:"cloudrunConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	DnsCacheConfig ClusterAddonsConfigDnsCacheConfig `pulumi:"dnsCacheConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling ClusterAddonsConfigHorizontalPodAutoscaling `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing ClusterAddonsConfigHttpLoadBalancing `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig ClusterAddonsConfigIstioConfig `pulumi:"istioConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig ClusterAddonsConfigNetworkPolicyConfig `pulumi:"networkPolicyConfig"`
}

type ClusterAddonsConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigOutput() ClusterAddonsConfigOutput
	ToClusterAddonsConfigOutputWithContext(context.Context) ClusterAddonsConfigOutput
}

type ClusterAddonsConfigArgs struct {
	// .
	// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
	// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
	CloudrunConfig ClusterAddonsConfigCloudrunConfigInput `pulumi:"cloudrunConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	DnsCacheConfig ClusterAddonsConfigDnsCacheConfigInput `pulumi:"dnsCacheConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling ClusterAddonsConfigHorizontalPodAutoscalingInput `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing ClusterAddonsConfigHttpLoadBalancingInput `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig ClusterAddonsConfigIstioConfigInput `pulumi:"istioConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig ClusterAddonsConfigNetworkPolicyConfigInput `pulumi:"networkPolicyConfig"`
}

func (ClusterAddonsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigOutput() ClusterAddonsConfigOutput {
	return i.ToClusterAddonsConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigOutput)
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return i.ToClusterAddonsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigOutput).ToClusterAddonsConfigPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput
	ToClusterAddonsConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigPtrOutput
}

type clusterAddonsConfigPtrType ClusterAddonsConfigArgs

func ClusterAddonsConfigPtr(v *ClusterAddonsConfigArgs) ClusterAddonsConfigPtrInput {
	return (*clusterAddonsConfigPtrType)(v)
}

func (*clusterAddonsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigPtrType) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return i.ToClusterAddonsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigPtrType) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigPtrOutput)
}

type ClusterAddonsConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigOutput() ClusterAddonsConfigOutput {
	return o
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigOutput {
	return o
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return o.ToClusterAddonsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfig {
		return &v
	}).(ClusterAddonsConfigPtrOutput)
}

// .
// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
func (o ClusterAddonsConfigOutput) CloudrunConfig() ClusterAddonsConfigCloudrunConfigOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigCloudrunConfig { return v.CloudrunConfig }).(ClusterAddonsConfigCloudrunConfigOutput)
}

// .
// The status of the NodeLocal DNSCache addon. It is disabled by default.
// Set `enabled = true` to enable.
func (o ClusterAddonsConfigOutput) DnsCacheConfig() ClusterAddonsConfigDnsCacheConfigOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigDnsCacheConfig { return v.DnsCacheConfig }).(ClusterAddonsConfigDnsCacheConfigOutput)
}

// The status of the Horizontal Pod Autoscaling
// addon, which increases or decreases the number of replica pods a replication controller
// has based on the resource usage of the existing pods.
// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
// It is enabled by default;
// set `disabled = true` to disable.
func (o ClusterAddonsConfigOutput) HorizontalPodAutoscaling() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigHorizontalPodAutoscaling {
		return v.HorizontalPodAutoscaling
	}).(ClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

// The status of the HTTP (L7) load balancing
// controller addon, which makes it easy to set up HTTP load balancers for services in a
// cluster. It is enabled by default; set `disabled = true` to disable.
func (o ClusterAddonsConfigOutput) HttpLoadBalancing() ClusterAddonsConfigHttpLoadBalancingOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigHttpLoadBalancing { return v.HttpLoadBalancing }).(ClusterAddonsConfigHttpLoadBalancingOutput)
}

// .
// Structure is documented below.
func (o ClusterAddonsConfigOutput) IstioConfig() ClusterAddonsConfigIstioConfigOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigIstioConfig { return v.IstioConfig }).(ClusterAddonsConfigIstioConfigOutput)
}

// Whether we should enable the network policy addon
// for the master.  This must be enabled in order to enable network policy for the nodes.
// To enable this, you must also define a `networkPolicy` block,
// otherwise nothing will happen.
// It can only be disabled if the nodes already do not have network policies enabled.
// Defaults to disabled; set `disabled = false` to enable.
func (o ClusterAddonsConfigOutput) NetworkPolicyConfig() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigNetworkPolicyConfig { return v.NetworkPolicyConfig }).(ClusterAddonsConfigNetworkPolicyConfigOutput)
}

type ClusterAddonsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigPtrOutput) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigPtrOutput) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigPtrOutput) Elem() ClusterAddonsConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) ClusterAddonsConfig { return *v }).(ClusterAddonsConfigOutput)
}

// .
// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
func (o ClusterAddonsConfigPtrOutput) CloudrunConfig() ClusterAddonsConfigCloudrunConfigOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigCloudrunConfig { return v.CloudrunConfig }).(ClusterAddonsConfigCloudrunConfigOutput)
}

// .
// The status of the NodeLocal DNSCache addon. It is disabled by default.
// Set `enabled = true` to enable.
func (o ClusterAddonsConfigPtrOutput) DnsCacheConfig() ClusterAddonsConfigDnsCacheConfigOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigDnsCacheConfig { return v.DnsCacheConfig }).(ClusterAddonsConfigDnsCacheConfigOutput)
}

// The status of the Horizontal Pod Autoscaling
// addon, which increases or decreases the number of replica pods a replication controller
// has based on the resource usage of the existing pods.
// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
// It is enabled by default;
// set `disabled = true` to disable.
func (o ClusterAddonsConfigPtrOutput) HorizontalPodAutoscaling() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigHorizontalPodAutoscaling {
		return v.HorizontalPodAutoscaling
	}).(ClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

// The status of the HTTP (L7) load balancing
// controller addon, which makes it easy to set up HTTP load balancers for services in a
// cluster. It is enabled by default; set `disabled = true` to disable.
func (o ClusterAddonsConfigPtrOutput) HttpLoadBalancing() ClusterAddonsConfigHttpLoadBalancingOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigHttpLoadBalancing { return v.HttpLoadBalancing }).(ClusterAddonsConfigHttpLoadBalancingOutput)
}

// .
// Structure is documented below.
func (o ClusterAddonsConfigPtrOutput) IstioConfig() ClusterAddonsConfigIstioConfigOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigIstioConfig { return v.IstioConfig }).(ClusterAddonsConfigIstioConfigOutput)
}

// Whether we should enable the network policy addon
// for the master.  This must be enabled in order to enable network policy for the nodes.
// To enable this, you must also define a `networkPolicy` block,
// otherwise nothing will happen.
// It can only be disabled if the nodes already do not have network policies enabled.
// Defaults to disabled; set `disabled = false` to enable.
func (o ClusterAddonsConfigPtrOutput) NetworkPolicyConfig() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) ClusterAddonsConfigNetworkPolicyConfig { return v.NetworkPolicyConfig }).(ClusterAddonsConfigNetworkPolicyConfigOutput)
}

type ClusterAddonsConfigArgs struct {
	// .
	// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
	// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
	CloudrunConfig *ClusterAddonsConfigCloudrunConfigArgs `pulumi:"cloudrunConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	DnsCacheConfig *ClusterAddonsConfigDnsCacheConfigArgs `pulumi:"dnsCacheConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling *ClusterAddonsConfigHorizontalPodAutoscalingArgs `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing *ClusterAddonsConfigHttpLoadBalancingArgs `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig *ClusterAddonsConfigIstioConfigArgs `pulumi:"istioConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig *ClusterAddonsConfigNetworkPolicyConfigArgs `pulumi:"networkPolicyConfig"`
}

type ClusterAddonsConfigArgsInput interface {
	pulumi.Input

	ToClusterAddonsConfigArgsOutput() ClusterAddonsConfigArgsOutput
	ToClusterAddonsConfigArgsOutputWithContext(context.Context) ClusterAddonsConfigArgsOutput
}

type ClusterAddonsConfigArgsArgs struct {
	// .
	// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
	// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
	CloudrunConfig ClusterAddonsConfigCloudrunConfigArgsPtrInput `pulumi:"cloudrunConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	DnsCacheConfig ClusterAddonsConfigDnsCacheConfigArgsPtrInput `pulumi:"dnsCacheConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrInput `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing ClusterAddonsConfigHttpLoadBalancingArgsPtrInput `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig ClusterAddonsConfigIstioConfigArgsPtrInput `pulumi:"istioConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig ClusterAddonsConfigNetworkPolicyConfigArgsPtrInput `pulumi:"networkPolicyConfig"`
}

func (ClusterAddonsConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigArgs)(nil)).Elem()
}

func (i ClusterAddonsConfigArgsArgs) ToClusterAddonsConfigArgsOutput() ClusterAddonsConfigArgsOutput {
	return i.ToClusterAddonsConfigArgsOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigArgsArgs) ToClusterAddonsConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigArgsOutput)
}

func (i ClusterAddonsConfigArgsArgs) ToClusterAddonsConfigArgsPtrOutput() ClusterAddonsConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigArgsArgs) ToClusterAddonsConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigArgsOutput).ToClusterAddonsConfigArgsPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigArgsPtrOutput() ClusterAddonsConfigArgsPtrOutput
	ToClusterAddonsConfigArgsPtrOutputWithContext(context.Context) ClusterAddonsConfigArgsPtrOutput
}

type clusterAddonsConfigArgsPtrType ClusterAddonsConfigArgsArgs

func ClusterAddonsConfigArgsPtr(v *ClusterAddonsConfigArgsArgs) ClusterAddonsConfigArgsPtrInput {
	return (*clusterAddonsConfigArgsPtrType)(v)
}

func (*clusterAddonsConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigArgs)(nil)).Elem()
}

func (i *clusterAddonsConfigArgsPtrType) ToClusterAddonsConfigArgsPtrOutput() ClusterAddonsConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigArgsPtrType) ToClusterAddonsConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigArgsPtrOutput)
}

type ClusterAddonsConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigArgsOutput) ToClusterAddonsConfigArgsOutput() ClusterAddonsConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigArgsOutput) ToClusterAddonsConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigArgsOutput) ToClusterAddonsConfigArgsPtrOutput() ClusterAddonsConfigArgsPtrOutput {
	return o.ToClusterAddonsConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigArgsOutput) ToClusterAddonsConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigArgs {
		return &v
	}).(ClusterAddonsConfigArgsPtrOutput)
}

// .
// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
func (o ClusterAddonsConfigArgsOutput) CloudrunConfig() ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigCloudrunConfigArgs { return v.CloudrunConfig }).(ClusterAddonsConfigCloudrunConfigArgsPtrOutput)
}

// .
// The status of the NodeLocal DNSCache addon. It is disabled by default.
// Set `enabled = true` to enable.
func (o ClusterAddonsConfigArgsOutput) DnsCacheConfig() ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigDnsCacheConfigArgs { return v.DnsCacheConfig }).(ClusterAddonsConfigDnsCacheConfigArgsPtrOutput)
}

// The status of the Horizontal Pod Autoscaling
// addon, which increases or decreases the number of replica pods a replication controller
// has based on the resource usage of the existing pods.
// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
// It is enabled by default;
// set `disabled = true` to disable.
func (o ClusterAddonsConfigArgsOutput) HorizontalPodAutoscaling() ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigHorizontalPodAutoscalingArgs {
		return v.HorizontalPodAutoscaling
	}).(ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput)
}

// The status of the HTTP (L7) load balancing
// controller addon, which makes it easy to set up HTTP load balancers for services in a
// cluster. It is enabled by default; set `disabled = true` to disable.
func (o ClusterAddonsConfigArgsOutput) HttpLoadBalancing() ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigHttpLoadBalancingArgs { return v.HttpLoadBalancing }).(ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput)
}

// .
// Structure is documented below.
func (o ClusterAddonsConfigArgsOutput) IstioConfig() ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigIstioConfigArgs { return v.IstioConfig }).(ClusterAddonsConfigIstioConfigArgsPtrOutput)
}

// Whether we should enable the network policy addon
// for the master.  This must be enabled in order to enable network policy for the nodes.
// To enable this, you must also define a `networkPolicy` block,
// otherwise nothing will happen.
// It can only be disabled if the nodes already do not have network policies enabled.
// Defaults to disabled; set `disabled = false` to enable.
func (o ClusterAddonsConfigArgsOutput) NetworkPolicyConfig() ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigNetworkPolicyConfigArgs {
		return v.NetworkPolicyConfig
	}).(ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput)
}

type ClusterAddonsConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigArgsPtrOutput) ToClusterAddonsConfigArgsPtrOutput() ClusterAddonsConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigArgsPtrOutput) ToClusterAddonsConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigArgsPtrOutput) Elem() ClusterAddonsConfigArgsOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigArgs) ClusterAddonsConfigArgs { return *v }).(ClusterAddonsConfigArgsOutput)
}

// .
// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
func (o ClusterAddonsConfigArgsPtrOutput) CloudrunConfig() ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigCloudrunConfigArgs { return v.CloudrunConfig }).(ClusterAddonsConfigCloudrunConfigArgsPtrOutput)
}

// .
// The status of the NodeLocal DNSCache addon. It is disabled by default.
// Set `enabled = true` to enable.
func (o ClusterAddonsConfigArgsPtrOutput) DnsCacheConfig() ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigDnsCacheConfigArgs { return v.DnsCacheConfig }).(ClusterAddonsConfigDnsCacheConfigArgsPtrOutput)
}

// The status of the Horizontal Pod Autoscaling
// addon, which increases or decreases the number of replica pods a replication controller
// has based on the resource usage of the existing pods.
// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
// It is enabled by default;
// set `disabled = true` to disable.
func (o ClusterAddonsConfigArgsPtrOutput) HorizontalPodAutoscaling() ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigHorizontalPodAutoscalingArgs {
		return v.HorizontalPodAutoscaling
	}).(ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput)
}

// The status of the HTTP (L7) load balancing
// controller addon, which makes it easy to set up HTTP load balancers for services in a
// cluster. It is enabled by default; set `disabled = true` to disable.
func (o ClusterAddonsConfigArgsPtrOutput) HttpLoadBalancing() ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigHttpLoadBalancingArgs { return v.HttpLoadBalancing }).(ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput)
}

// .
// Structure is documented below.
func (o ClusterAddonsConfigArgsPtrOutput) IstioConfig() ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigIstioConfigArgs { return v.IstioConfig }).(ClusterAddonsConfigIstioConfigArgsPtrOutput)
}

// Whether we should enable the network policy addon
// for the master.  This must be enabled in order to enable network policy for the nodes.
// To enable this, you must also define a `networkPolicy` block,
// otherwise nothing will happen.
// It can only be disabled if the nodes already do not have network policies enabled.
// Defaults to disabled; set `disabled = false` to enable.
func (o ClusterAddonsConfigArgsPtrOutput) NetworkPolicyConfig() ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigArgs) *ClusterAddonsConfigNetworkPolicyConfigArgs {
		return v.NetworkPolicyConfig
	}).(ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput)
}

type ClusterAddonsConfigCloudrunConfig struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigCloudrunConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigCloudrunConfigOutput() ClusterAddonsConfigCloudrunConfigOutput
	ToClusterAddonsConfigCloudrunConfigOutputWithContext(context.Context) ClusterAddonsConfigCloudrunConfigOutput
}

type ClusterAddonsConfigCloudrunConfigArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigCloudrunConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigOutput() ClusterAddonsConfigCloudrunConfigOutput {
	return i.ToClusterAddonsConfigCloudrunConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigOutput)
}

type ClusterAddonsConfigCloudrunConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigCloudrunConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigOutput() ClusterAddonsConfigCloudrunConfigOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigOutput {
	return o
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigCloudrunConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigCloudrunConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigCloudrunConfigArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigCloudrunConfigArgsInput interface {
	pulumi.Input

	ToClusterAddonsConfigCloudrunConfigArgsOutput() ClusterAddonsConfigCloudrunConfigArgsOutput
	ToClusterAddonsConfigCloudrunConfigArgsOutputWithContext(context.Context) ClusterAddonsConfigCloudrunConfigArgsOutput
}

type ClusterAddonsConfigCloudrunConfigArgsArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigCloudrunConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigCloudrunConfigArgs)(nil)).Elem()
}

func (i ClusterAddonsConfigCloudrunConfigArgsArgs) ToClusterAddonsConfigCloudrunConfigArgsOutput() ClusterAddonsConfigCloudrunConfigArgsOutput {
	return i.ToClusterAddonsConfigCloudrunConfigArgsOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigCloudrunConfigArgsArgs) ToClusterAddonsConfigCloudrunConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigArgsOutput)
}

func (i ClusterAddonsConfigCloudrunConfigArgsArgs) ToClusterAddonsConfigCloudrunConfigArgsPtrOutput() ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigCloudrunConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigCloudrunConfigArgsArgs) ToClusterAddonsConfigCloudrunConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigArgsOutput).ToClusterAddonsConfigCloudrunConfigArgsPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigCloudrunConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigCloudrunConfigArgsPtrOutput() ClusterAddonsConfigCloudrunConfigArgsPtrOutput
	ToClusterAddonsConfigCloudrunConfigArgsPtrOutputWithContext(context.Context) ClusterAddonsConfigCloudrunConfigArgsPtrOutput
}

type clusterAddonsConfigCloudrunConfigArgsPtrType ClusterAddonsConfigCloudrunConfigArgsArgs

func ClusterAddonsConfigCloudrunConfigArgsPtr(v *ClusterAddonsConfigCloudrunConfigArgsArgs) ClusterAddonsConfigCloudrunConfigArgsPtrInput {
	return (*clusterAddonsConfigCloudrunConfigArgsPtrType)(v)
}

func (*clusterAddonsConfigCloudrunConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigCloudrunConfigArgs)(nil)).Elem()
}

func (i *clusterAddonsConfigCloudrunConfigArgsPtrType) ToClusterAddonsConfigCloudrunConfigArgsPtrOutput() ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigCloudrunConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigCloudrunConfigArgsPtrType) ToClusterAddonsConfigCloudrunConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigArgsPtrOutput)
}

type ClusterAddonsConfigCloudrunConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigCloudrunConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigCloudrunConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigCloudrunConfigArgsOutput) ToClusterAddonsConfigCloudrunConfigArgsOutput() ClusterAddonsConfigCloudrunConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigArgsOutput) ToClusterAddonsConfigCloudrunConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigArgsOutput) ToClusterAddonsConfigCloudrunConfigArgsPtrOutput() ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return o.ToClusterAddonsConfigCloudrunConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigCloudrunConfigArgsOutput) ToClusterAddonsConfigCloudrunConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigCloudrunConfigArgs) *ClusterAddonsConfigCloudrunConfigArgs {
		return &v
	}).(ClusterAddonsConfigCloudrunConfigArgsPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigCloudrunConfigArgsOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigCloudrunConfigArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigCloudrunConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigCloudrunConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigCloudrunConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigCloudrunConfigArgsPtrOutput) ToClusterAddonsConfigCloudrunConfigArgsPtrOutput() ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigArgsPtrOutput) ToClusterAddonsConfigCloudrunConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigArgsPtrOutput) Elem() ClusterAddonsConfigCloudrunConfigArgsOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigCloudrunConfigArgs) ClusterAddonsConfigCloudrunConfigArgs { return *v }).(ClusterAddonsConfigCloudrunConfigArgsOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigCloudrunConfigArgsPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigCloudrunConfigArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigDnsCacheConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

type ClusterAddonsConfigDnsCacheConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigDnsCacheConfigOutput() ClusterAddonsConfigDnsCacheConfigOutput
	ToClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Context) ClusterAddonsConfigDnsCacheConfigOutput
}

type ClusterAddonsConfigDnsCacheConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigDnsCacheConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigOutput() ClusterAddonsConfigDnsCacheConfigOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigOutput)
}

type ClusterAddonsConfigDnsCacheConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigDnsCacheConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigOutput() ClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigDnsCacheConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigDnsCacheConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigDnsCacheConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

type ClusterAddonsConfigDnsCacheConfigArgsInput interface {
	pulumi.Input

	ToClusterAddonsConfigDnsCacheConfigArgsOutput() ClusterAddonsConfigDnsCacheConfigArgsOutput
	ToClusterAddonsConfigDnsCacheConfigArgsOutputWithContext(context.Context) ClusterAddonsConfigDnsCacheConfigArgsOutput
}

type ClusterAddonsConfigDnsCacheConfigArgsArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigDnsCacheConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfigArgs)(nil)).Elem()
}

func (i ClusterAddonsConfigDnsCacheConfigArgsArgs) ToClusterAddonsConfigDnsCacheConfigArgsOutput() ClusterAddonsConfigDnsCacheConfigArgsOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigArgsOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigDnsCacheConfigArgsArgs) ToClusterAddonsConfigDnsCacheConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigArgsOutput)
}

func (i ClusterAddonsConfigDnsCacheConfigArgsArgs) ToClusterAddonsConfigDnsCacheConfigArgsPtrOutput() ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigDnsCacheConfigArgsArgs) ToClusterAddonsConfigDnsCacheConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigArgsOutput).ToClusterAddonsConfigDnsCacheConfigArgsPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigDnsCacheConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigDnsCacheConfigArgsPtrOutput() ClusterAddonsConfigDnsCacheConfigArgsPtrOutput
	ToClusterAddonsConfigDnsCacheConfigArgsPtrOutputWithContext(context.Context) ClusterAddonsConfigDnsCacheConfigArgsPtrOutput
}

type clusterAddonsConfigDnsCacheConfigArgsPtrType ClusterAddonsConfigDnsCacheConfigArgsArgs

func ClusterAddonsConfigDnsCacheConfigArgsPtr(v *ClusterAddonsConfigDnsCacheConfigArgsArgs) ClusterAddonsConfigDnsCacheConfigArgsPtrInput {
	return (*clusterAddonsConfigDnsCacheConfigArgsPtrType)(v)
}

func (*clusterAddonsConfigDnsCacheConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigDnsCacheConfigArgs)(nil)).Elem()
}

func (i *clusterAddonsConfigDnsCacheConfigArgsPtrType) ToClusterAddonsConfigDnsCacheConfigArgsPtrOutput() ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigDnsCacheConfigArgsPtrType) ToClusterAddonsConfigDnsCacheConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigArgsPtrOutput)
}

type ClusterAddonsConfigDnsCacheConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigDnsCacheConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigDnsCacheConfigArgsOutput) ToClusterAddonsConfigDnsCacheConfigArgsOutput() ClusterAddonsConfigDnsCacheConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigArgsOutput) ToClusterAddonsConfigDnsCacheConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigArgsOutput) ToClusterAddonsConfigDnsCacheConfigArgsPtrOutput() ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return o.ToClusterAddonsConfigDnsCacheConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigDnsCacheConfigArgsOutput) ToClusterAddonsConfigDnsCacheConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigDnsCacheConfigArgs) *ClusterAddonsConfigDnsCacheConfigArgs {
		return &v
	}).(ClusterAddonsConfigDnsCacheConfigArgsPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigDnsCacheConfigArgsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigDnsCacheConfigArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigDnsCacheConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigDnsCacheConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigDnsCacheConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigDnsCacheConfigArgsPtrOutput) ToClusterAddonsConfigDnsCacheConfigArgsPtrOutput() ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigArgsPtrOutput) ToClusterAddonsConfigDnsCacheConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigArgsPtrOutput) Elem() ClusterAddonsConfigDnsCacheConfigArgsOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigDnsCacheConfigArgs) ClusterAddonsConfigDnsCacheConfigArgs { return *v }).(ClusterAddonsConfigDnsCacheConfigArgsOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigDnsCacheConfigArgsPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigDnsCacheConfigArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscaling struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigHorizontalPodAutoscalingInput interface {
	pulumi.Input

	ToClusterAddonsConfigHorizontalPodAutoscalingOutput() ClusterAddonsConfigHorizontalPodAutoscalingOutput
	ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Context) ClusterAddonsConfigHorizontalPodAutoscalingOutput
}

type ClusterAddonsConfigHorizontalPodAutoscalingArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigHorizontalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingOutput() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHorizontalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingOutput() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHorizontalPodAutoscaling) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscalingArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigHorizontalPodAutoscalingArgsInput interface {
	pulumi.Input

	ToClusterAddonsConfigHorizontalPodAutoscalingArgsOutput() ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput
	ToClusterAddonsConfigHorizontalPodAutoscalingArgsOutputWithContext(context.Context) ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput
}

type ClusterAddonsConfigHorizontalPodAutoscalingArgsArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigHorizontalPodAutoscalingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscalingArgs)(nil)).Elem()
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgsArgs) ToClusterAddonsConfigHorizontalPodAutoscalingArgsOutput() ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingArgsOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgsArgs) ToClusterAddonsConfigHorizontalPodAutoscalingArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput)
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgsArgs) ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgsArgs) ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput).ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput
	ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutputWithContext(context.Context) ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput
}

type clusterAddonsConfigHorizontalPodAutoscalingArgsPtrType ClusterAddonsConfigHorizontalPodAutoscalingArgsArgs

func ClusterAddonsConfigHorizontalPodAutoscalingArgsPtr(v *ClusterAddonsConfigHorizontalPodAutoscalingArgsArgs) ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrInput {
	return (*clusterAddonsConfigHorizontalPodAutoscalingArgsPtrType)(v)
}

func (*clusterAddonsConfigHorizontalPodAutoscalingArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHorizontalPodAutoscalingArgs)(nil)).Elem()
}

func (i *clusterAddonsConfigHorizontalPodAutoscalingArgsPtrType) ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigHorizontalPodAutoscalingArgsPtrType) ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscalingArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput) ToClusterAddonsConfigHorizontalPodAutoscalingArgsOutput() ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput) ToClusterAddonsConfigHorizontalPodAutoscalingArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput) ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return o.ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput) ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHorizontalPodAutoscalingArgs) *ClusterAddonsConfigHorizontalPodAutoscalingArgs {
		return &v
	}).(ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHorizontalPodAutoscalingArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHorizontalPodAutoscalingArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput) ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput) ToClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput) Elem() ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHorizontalPodAutoscalingArgs) ClusterAddonsConfigHorizontalPodAutoscalingArgs {
		return *v
	}).(ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHorizontalPodAutoscalingArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHttpLoadBalancing struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigHttpLoadBalancingInput interface {
	pulumi.Input

	ToClusterAddonsConfigHttpLoadBalancingOutput() ClusterAddonsConfigHttpLoadBalancingOutput
	ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Context) ClusterAddonsConfigHttpLoadBalancingOutput
}

type ClusterAddonsConfigHttpLoadBalancingArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigHttpLoadBalancingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingOutput() ClusterAddonsConfigHttpLoadBalancingOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingOutput)
}

type ClusterAddonsConfigHttpLoadBalancingOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHttpLoadBalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingOutput() ClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHttpLoadBalancingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHttpLoadBalancing) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHttpLoadBalancingArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigHttpLoadBalancingArgsInput interface {
	pulumi.Input

	ToClusterAddonsConfigHttpLoadBalancingArgsOutput() ClusterAddonsConfigHttpLoadBalancingArgsOutput
	ToClusterAddonsConfigHttpLoadBalancingArgsOutputWithContext(context.Context) ClusterAddonsConfigHttpLoadBalancingArgsOutput
}

type ClusterAddonsConfigHttpLoadBalancingArgsArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigHttpLoadBalancingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancingArgs)(nil)).Elem()
}

func (i ClusterAddonsConfigHttpLoadBalancingArgsArgs) ToClusterAddonsConfigHttpLoadBalancingArgsOutput() ClusterAddonsConfigHttpLoadBalancingArgsOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingArgsOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHttpLoadBalancingArgsArgs) ToClusterAddonsConfigHttpLoadBalancingArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingArgsOutput)
}

func (i ClusterAddonsConfigHttpLoadBalancingArgsArgs) ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutput() ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHttpLoadBalancingArgsArgs) ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingArgsOutput).ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigHttpLoadBalancingArgsPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutput() ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput
	ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutputWithContext(context.Context) ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput
}

type clusterAddonsConfigHttpLoadBalancingArgsPtrType ClusterAddonsConfigHttpLoadBalancingArgsArgs

func ClusterAddonsConfigHttpLoadBalancingArgsPtr(v *ClusterAddonsConfigHttpLoadBalancingArgsArgs) ClusterAddonsConfigHttpLoadBalancingArgsPtrInput {
	return (*clusterAddonsConfigHttpLoadBalancingArgsPtrType)(v)
}

func (*clusterAddonsConfigHttpLoadBalancingArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHttpLoadBalancingArgs)(nil)).Elem()
}

func (i *clusterAddonsConfigHttpLoadBalancingArgsPtrType) ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutput() ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigHttpLoadBalancingArgsPtrType) ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput)
}

type ClusterAddonsConfigHttpLoadBalancingArgsOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHttpLoadBalancingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancingArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigHttpLoadBalancingArgsOutput) ToClusterAddonsConfigHttpLoadBalancingArgsOutput() ClusterAddonsConfigHttpLoadBalancingArgsOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingArgsOutput) ToClusterAddonsConfigHttpLoadBalancingArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingArgsOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingArgsOutput) ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutput() ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return o.ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigHttpLoadBalancingArgsOutput) ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHttpLoadBalancingArgs) *ClusterAddonsConfigHttpLoadBalancingArgs {
		return &v
	}).(ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHttpLoadBalancingArgsOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHttpLoadBalancingArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHttpLoadBalancingArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput) ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutput() ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput) ToClusterAddonsConfigHttpLoadBalancingArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput) Elem() ClusterAddonsConfigHttpLoadBalancingArgsOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHttpLoadBalancingArgs) ClusterAddonsConfigHttpLoadBalancingArgs { return *v }).(ClusterAddonsConfigHttpLoadBalancingArgsOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHttpLoadBalancingArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigIstioConfig struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth *string `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigIstioConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigIstioConfigOutput() ClusterAddonsConfigIstioConfigOutput
	ToClusterAddonsConfigIstioConfigOutputWithContext(context.Context) ClusterAddonsConfigIstioConfigOutput
}

type ClusterAddonsConfigIstioConfigArgs struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth pulumi.StringPtrInput `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigIstioConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigOutput() ClusterAddonsConfigIstioConfigOutput {
	return i.ToClusterAddonsConfigIstioConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigOutput)
}

type ClusterAddonsConfigIstioConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigIstioConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigOutput() ClusterAddonsConfigIstioConfigOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigOutput {
	return o
}

// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
func (o ClusterAddonsConfigIstioConfigOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfig) *string { return v.Auth }).(pulumi.StringPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigIstioConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigIstioConfigArgs struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth *string `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigIstioConfigArgsInput interface {
	pulumi.Input

	ToClusterAddonsConfigIstioConfigArgsOutput() ClusterAddonsConfigIstioConfigArgsOutput
	ToClusterAddonsConfigIstioConfigArgsOutputWithContext(context.Context) ClusterAddonsConfigIstioConfigArgsOutput
}

type ClusterAddonsConfigIstioConfigArgsArgs struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth pulumi.StringPtrInput `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigIstioConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigIstioConfigArgs)(nil)).Elem()
}

func (i ClusterAddonsConfigIstioConfigArgsArgs) ToClusterAddonsConfigIstioConfigArgsOutput() ClusterAddonsConfigIstioConfigArgsOutput {
	return i.ToClusterAddonsConfigIstioConfigArgsOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigIstioConfigArgsArgs) ToClusterAddonsConfigIstioConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigArgsOutput)
}

func (i ClusterAddonsConfigIstioConfigArgsArgs) ToClusterAddonsConfigIstioConfigArgsPtrOutput() ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigIstioConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigIstioConfigArgsArgs) ToClusterAddonsConfigIstioConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigArgsOutput).ToClusterAddonsConfigIstioConfigArgsPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigIstioConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigIstioConfigArgsPtrOutput() ClusterAddonsConfigIstioConfigArgsPtrOutput
	ToClusterAddonsConfigIstioConfigArgsPtrOutputWithContext(context.Context) ClusterAddonsConfigIstioConfigArgsPtrOutput
}

type clusterAddonsConfigIstioConfigArgsPtrType ClusterAddonsConfigIstioConfigArgsArgs

func ClusterAddonsConfigIstioConfigArgsPtr(v *ClusterAddonsConfigIstioConfigArgsArgs) ClusterAddonsConfigIstioConfigArgsPtrInput {
	return (*clusterAddonsConfigIstioConfigArgsPtrType)(v)
}

func (*clusterAddonsConfigIstioConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigIstioConfigArgs)(nil)).Elem()
}

func (i *clusterAddonsConfigIstioConfigArgsPtrType) ToClusterAddonsConfigIstioConfigArgsPtrOutput() ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigIstioConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigIstioConfigArgsPtrType) ToClusterAddonsConfigIstioConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigArgsPtrOutput)
}

type ClusterAddonsConfigIstioConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigIstioConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigIstioConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigIstioConfigArgsOutput) ToClusterAddonsConfigIstioConfigArgsOutput() ClusterAddonsConfigIstioConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigArgsOutput) ToClusterAddonsConfigIstioConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigArgsOutput) ToClusterAddonsConfigIstioConfigArgsPtrOutput() ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return o.ToClusterAddonsConfigIstioConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigIstioConfigArgsOutput) ToClusterAddonsConfigIstioConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfigArgs) *ClusterAddonsConfigIstioConfigArgs {
		return &v
	}).(ClusterAddonsConfigIstioConfigArgsPtrOutput)
}

// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
func (o ClusterAddonsConfigIstioConfigArgsOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfigArgs) *string { return v.Auth }).(pulumi.StringPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigIstioConfigArgsOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfigArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigIstioConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigIstioConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigIstioConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigIstioConfigArgsPtrOutput) ToClusterAddonsConfigIstioConfigArgsPtrOutput() ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigArgsPtrOutput) ToClusterAddonsConfigIstioConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigArgsPtrOutput) Elem() ClusterAddonsConfigIstioConfigArgsOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigIstioConfigArgs) ClusterAddonsConfigIstioConfigArgs { return *v }).(ClusterAddonsConfigIstioConfigArgsOutput)
}

// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
func (o ClusterAddonsConfigIstioConfigArgsPtrOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfigArgs) *string { return v.Auth }).(pulumi.StringPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigIstioConfigArgsPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfigArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigNetworkPolicyConfig struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigNetworkPolicyConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigNetworkPolicyConfigOutput() ClusterAddonsConfigNetworkPolicyConfigOutput
	ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Context) ClusterAddonsConfigNetworkPolicyConfigOutput
}

type ClusterAddonsConfigNetworkPolicyConfigArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigNetworkPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigOutput() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigOutput)
}

type ClusterAddonsConfigNetworkPolicyConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigNetworkPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigOutput() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigNetworkPolicyConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigNetworkPolicyConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigNetworkPolicyConfigArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigNetworkPolicyConfigArgsInput interface {
	pulumi.Input

	ToClusterAddonsConfigNetworkPolicyConfigArgsOutput() ClusterAddonsConfigNetworkPolicyConfigArgsOutput
	ToClusterAddonsConfigNetworkPolicyConfigArgsOutputWithContext(context.Context) ClusterAddonsConfigNetworkPolicyConfigArgsOutput
}

type ClusterAddonsConfigNetworkPolicyConfigArgsArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigNetworkPolicyConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfigArgs)(nil)).Elem()
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgsArgs) ToClusterAddonsConfigNetworkPolicyConfigArgsOutput() ClusterAddonsConfigNetworkPolicyConfigArgsOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigArgsOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgsArgs) ToClusterAddonsConfigNetworkPolicyConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigArgsOutput)
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgsArgs) ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput() ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgsArgs) ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigArgsOutput).ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigNetworkPolicyConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput() ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput
	ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutputWithContext(context.Context) ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput
}

type clusterAddonsConfigNetworkPolicyConfigArgsPtrType ClusterAddonsConfigNetworkPolicyConfigArgsArgs

func ClusterAddonsConfigNetworkPolicyConfigArgsPtr(v *ClusterAddonsConfigNetworkPolicyConfigArgsArgs) ClusterAddonsConfigNetworkPolicyConfigArgsPtrInput {
	return (*clusterAddonsConfigNetworkPolicyConfigArgsPtrType)(v)
}

func (*clusterAddonsConfigNetworkPolicyConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigNetworkPolicyConfigArgs)(nil)).Elem()
}

func (i *clusterAddonsConfigNetworkPolicyConfigArgsPtrType) ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput() ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigNetworkPolicyConfigArgsPtrType) ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput)
}

type ClusterAddonsConfigNetworkPolicyConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigNetworkPolicyConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigNetworkPolicyConfigArgsOutput) ToClusterAddonsConfigNetworkPolicyConfigArgsOutput() ClusterAddonsConfigNetworkPolicyConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigArgsOutput) ToClusterAddonsConfigNetworkPolicyConfigArgsOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigArgsOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigArgsOutput) ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput() ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return o.ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigNetworkPolicyConfigArgsOutput) ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigNetworkPolicyConfigArgs) *ClusterAddonsConfigNetworkPolicyConfigArgs {
		return &v
	}).(ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigNetworkPolicyConfigArgsOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigNetworkPolicyConfigArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigNetworkPolicyConfigArgs)(nil)).Elem()
}

func (o ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput) ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput() ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput) ToClusterAddonsConfigNetworkPolicyConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput) Elem() ClusterAddonsConfigNetworkPolicyConfigArgsOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigNetworkPolicyConfigArgs) ClusterAddonsConfigNetworkPolicyConfigArgs {
		return *v
	}).(ClusterAddonsConfigNetworkPolicyConfigArgsOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigNetworkPolicyConfigArgs) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigState struct {
	// .
	// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
	// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
	CloudrunConfig *ClusterAddonsConfigStateCloudrunConfig `pulumi:"cloudrunConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	DnsCacheConfig *ClusterAddonsConfigStateDnsCacheConfig `pulumi:"dnsCacheConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling *ClusterAddonsConfigStateHorizontalPodAutoscaling `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing *ClusterAddonsConfigStateHttpLoadBalancing `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig *ClusterAddonsConfigStateIstioConfig `pulumi:"istioConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig *ClusterAddonsConfigStateNetworkPolicyConfig `pulumi:"networkPolicyConfig"`
}

type ClusterAddonsConfigStateInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateOutput() ClusterAddonsConfigStateOutput
	ToClusterAddonsConfigStateOutputWithContext(context.Context) ClusterAddonsConfigStateOutput
}

type ClusterAddonsConfigStateArgs struct {
	// .
	// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
	// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
	CloudrunConfig ClusterAddonsConfigStateCloudrunConfigPtrInput `pulumi:"cloudrunConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	DnsCacheConfig ClusterAddonsConfigStateDnsCacheConfigPtrInput `pulumi:"dnsCacheConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling ClusterAddonsConfigStateHorizontalPodAutoscalingPtrInput `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing ClusterAddonsConfigStateHttpLoadBalancingPtrInput `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig ClusterAddonsConfigStateIstioConfigPtrInput `pulumi:"istioConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig ClusterAddonsConfigStateNetworkPolicyConfigPtrInput `pulumi:"networkPolicyConfig"`
}

func (ClusterAddonsConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigState)(nil)).Elem()
}

func (i ClusterAddonsConfigStateArgs) ToClusterAddonsConfigStateOutput() ClusterAddonsConfigStateOutput {
	return i.ToClusterAddonsConfigStateOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateArgs) ToClusterAddonsConfigStateOutputWithContext(ctx context.Context) ClusterAddonsConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateOutput)
}

type ClusterAddonsConfigStateOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigState)(nil)).Elem()
}

func (o ClusterAddonsConfigStateOutput) ToClusterAddonsConfigStateOutput() ClusterAddonsConfigStateOutput {
	return o
}

func (o ClusterAddonsConfigStateOutput) ToClusterAddonsConfigStateOutputWithContext(ctx context.Context) ClusterAddonsConfigStateOutput {
	return o
}

// .
// The status of the CloudRun addon. It requires `istioConfig` enabled. It is disabled by default.
// Set `disabled = false` to enable. This addon can only be enabled at cluster creation time.
func (o ClusterAddonsConfigStateOutput) CloudrunConfig() ClusterAddonsConfigStateCloudrunConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigState) *ClusterAddonsConfigStateCloudrunConfig { return v.CloudrunConfig }).(ClusterAddonsConfigStateCloudrunConfigPtrOutput)
}

// .
// The status of the NodeLocal DNSCache addon. It is disabled by default.
// Set `enabled = true` to enable.
func (o ClusterAddonsConfigStateOutput) DnsCacheConfig() ClusterAddonsConfigStateDnsCacheConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigState) *ClusterAddonsConfigStateDnsCacheConfig { return v.DnsCacheConfig }).(ClusterAddonsConfigStateDnsCacheConfigPtrOutput)
}

// The status of the Horizontal Pod Autoscaling
// addon, which increases or decreases the number of replica pods a replication controller
// has based on the resource usage of the existing pods.
// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
// It is enabled by default;
// set `disabled = true` to disable.
func (o ClusterAddonsConfigStateOutput) HorizontalPodAutoscaling() ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigState) *ClusterAddonsConfigStateHorizontalPodAutoscaling {
		return v.HorizontalPodAutoscaling
	}).(ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput)
}

// The status of the HTTP (L7) load balancing
// controller addon, which makes it easy to set up HTTP load balancers for services in a
// cluster. It is enabled by default; set `disabled = true` to disable.
func (o ClusterAddonsConfigStateOutput) HttpLoadBalancing() ClusterAddonsConfigStateHttpLoadBalancingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigState) *ClusterAddonsConfigStateHttpLoadBalancing {
		return v.HttpLoadBalancing
	}).(ClusterAddonsConfigStateHttpLoadBalancingPtrOutput)
}

// .
// Structure is documented below.
func (o ClusterAddonsConfigStateOutput) IstioConfig() ClusterAddonsConfigStateIstioConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigState) *ClusterAddonsConfigStateIstioConfig { return v.IstioConfig }).(ClusterAddonsConfigStateIstioConfigPtrOutput)
}

// Whether we should enable the network policy addon
// for the master.  This must be enabled in order to enable network policy for the nodes.
// To enable this, you must also define a `networkPolicy` block,
// otherwise nothing will happen.
// It can only be disabled if the nodes already do not have network policies enabled.
// Defaults to disabled; set `disabled = false` to enable.
func (o ClusterAddonsConfigStateOutput) NetworkPolicyConfig() ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigState) *ClusterAddonsConfigStateNetworkPolicyConfig {
		return v.NetworkPolicyConfig
	}).(ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput)
}

type ClusterAddonsConfigStateCloudrunConfig struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigStateCloudrunConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateCloudrunConfigOutput() ClusterAddonsConfigStateCloudrunConfigOutput
	ToClusterAddonsConfigStateCloudrunConfigOutputWithContext(context.Context) ClusterAddonsConfigStateCloudrunConfigOutput
}

type ClusterAddonsConfigStateCloudrunConfigArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigStateCloudrunConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateCloudrunConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigStateCloudrunConfigArgs) ToClusterAddonsConfigStateCloudrunConfigOutput() ClusterAddonsConfigStateCloudrunConfigOutput {
	return i.ToClusterAddonsConfigStateCloudrunConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateCloudrunConfigArgs) ToClusterAddonsConfigStateCloudrunConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStateCloudrunConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateCloudrunConfigOutput)
}

func (i ClusterAddonsConfigStateCloudrunConfigArgs) ToClusterAddonsConfigStateCloudrunConfigPtrOutput() ClusterAddonsConfigStateCloudrunConfigPtrOutput {
	return i.ToClusterAddonsConfigStateCloudrunConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateCloudrunConfigArgs) ToClusterAddonsConfigStateCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateCloudrunConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateCloudrunConfigOutput).ToClusterAddonsConfigStateCloudrunConfigPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigStateCloudrunConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateCloudrunConfigPtrOutput() ClusterAddonsConfigStateCloudrunConfigPtrOutput
	ToClusterAddonsConfigStateCloudrunConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigStateCloudrunConfigPtrOutput
}

type clusterAddonsConfigStateCloudrunConfigPtrType ClusterAddonsConfigStateCloudrunConfigArgs

func ClusterAddonsConfigStateCloudrunConfigPtr(v *ClusterAddonsConfigStateCloudrunConfigArgs) ClusterAddonsConfigStateCloudrunConfigPtrInput {
	return (*clusterAddonsConfigStateCloudrunConfigPtrType)(v)
}

func (*clusterAddonsConfigStateCloudrunConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateCloudrunConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigStateCloudrunConfigPtrType) ToClusterAddonsConfigStateCloudrunConfigPtrOutput() ClusterAddonsConfigStateCloudrunConfigPtrOutput {
	return i.ToClusterAddonsConfigStateCloudrunConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigStateCloudrunConfigPtrType) ToClusterAddonsConfigStateCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateCloudrunConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateCloudrunConfigPtrOutput)
}

type ClusterAddonsConfigStateCloudrunConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateCloudrunConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateCloudrunConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStateCloudrunConfigOutput) ToClusterAddonsConfigStateCloudrunConfigOutput() ClusterAddonsConfigStateCloudrunConfigOutput {
	return o
}

func (o ClusterAddonsConfigStateCloudrunConfigOutput) ToClusterAddonsConfigStateCloudrunConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStateCloudrunConfigOutput {
	return o
}

func (o ClusterAddonsConfigStateCloudrunConfigOutput) ToClusterAddonsConfigStateCloudrunConfigPtrOutput() ClusterAddonsConfigStateCloudrunConfigPtrOutput {
	return o.ToClusterAddonsConfigStateCloudrunConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigStateCloudrunConfigOutput) ToClusterAddonsConfigStateCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateCloudrunConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateCloudrunConfig) *ClusterAddonsConfigStateCloudrunConfig {
		return &v
	}).(ClusterAddonsConfigStateCloudrunConfigPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateCloudrunConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateCloudrunConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateCloudrunConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateCloudrunConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateCloudrunConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStateCloudrunConfigPtrOutput) ToClusterAddonsConfigStateCloudrunConfigPtrOutput() ClusterAddonsConfigStateCloudrunConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateCloudrunConfigPtrOutput) ToClusterAddonsConfigStateCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateCloudrunConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateCloudrunConfigPtrOutput) Elem() ClusterAddonsConfigStateCloudrunConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigStateCloudrunConfig) ClusterAddonsConfigStateCloudrunConfig { return *v }).(ClusterAddonsConfigStateCloudrunConfigOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateCloudrunConfigPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateCloudrunConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateDnsCacheConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

type ClusterAddonsConfigStateDnsCacheConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateDnsCacheConfigOutput() ClusterAddonsConfigStateDnsCacheConfigOutput
	ToClusterAddonsConfigStateDnsCacheConfigOutputWithContext(context.Context) ClusterAddonsConfigStateDnsCacheConfigOutput
}

type ClusterAddonsConfigStateDnsCacheConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigStateDnsCacheConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateDnsCacheConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigStateDnsCacheConfigArgs) ToClusterAddonsConfigStateDnsCacheConfigOutput() ClusterAddonsConfigStateDnsCacheConfigOutput {
	return i.ToClusterAddonsConfigStateDnsCacheConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateDnsCacheConfigArgs) ToClusterAddonsConfigStateDnsCacheConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStateDnsCacheConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateDnsCacheConfigOutput)
}

func (i ClusterAddonsConfigStateDnsCacheConfigArgs) ToClusterAddonsConfigStateDnsCacheConfigPtrOutput() ClusterAddonsConfigStateDnsCacheConfigPtrOutput {
	return i.ToClusterAddonsConfigStateDnsCacheConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateDnsCacheConfigArgs) ToClusterAddonsConfigStateDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateDnsCacheConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateDnsCacheConfigOutput).ToClusterAddonsConfigStateDnsCacheConfigPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigStateDnsCacheConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateDnsCacheConfigPtrOutput() ClusterAddonsConfigStateDnsCacheConfigPtrOutput
	ToClusterAddonsConfigStateDnsCacheConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigStateDnsCacheConfigPtrOutput
}

type clusterAddonsConfigStateDnsCacheConfigPtrType ClusterAddonsConfigStateDnsCacheConfigArgs

func ClusterAddonsConfigStateDnsCacheConfigPtr(v *ClusterAddonsConfigStateDnsCacheConfigArgs) ClusterAddonsConfigStateDnsCacheConfigPtrInput {
	return (*clusterAddonsConfigStateDnsCacheConfigPtrType)(v)
}

func (*clusterAddonsConfigStateDnsCacheConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateDnsCacheConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigStateDnsCacheConfigPtrType) ToClusterAddonsConfigStateDnsCacheConfigPtrOutput() ClusterAddonsConfigStateDnsCacheConfigPtrOutput {
	return i.ToClusterAddonsConfigStateDnsCacheConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigStateDnsCacheConfigPtrType) ToClusterAddonsConfigStateDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateDnsCacheConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateDnsCacheConfigPtrOutput)
}

type ClusterAddonsConfigStateDnsCacheConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateDnsCacheConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateDnsCacheConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStateDnsCacheConfigOutput) ToClusterAddonsConfigStateDnsCacheConfigOutput() ClusterAddonsConfigStateDnsCacheConfigOutput {
	return o
}

func (o ClusterAddonsConfigStateDnsCacheConfigOutput) ToClusterAddonsConfigStateDnsCacheConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStateDnsCacheConfigOutput {
	return o
}

func (o ClusterAddonsConfigStateDnsCacheConfigOutput) ToClusterAddonsConfigStateDnsCacheConfigPtrOutput() ClusterAddonsConfigStateDnsCacheConfigPtrOutput {
	return o.ToClusterAddonsConfigStateDnsCacheConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigStateDnsCacheConfigOutput) ToClusterAddonsConfigStateDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateDnsCacheConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateDnsCacheConfig) *ClusterAddonsConfigStateDnsCacheConfig {
		return &v
	}).(ClusterAddonsConfigStateDnsCacheConfigPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigStateDnsCacheConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateDnsCacheConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateDnsCacheConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateDnsCacheConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateDnsCacheConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStateDnsCacheConfigPtrOutput) ToClusterAddonsConfigStateDnsCacheConfigPtrOutput() ClusterAddonsConfigStateDnsCacheConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateDnsCacheConfigPtrOutput) ToClusterAddonsConfigStateDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateDnsCacheConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateDnsCacheConfigPtrOutput) Elem() ClusterAddonsConfigStateDnsCacheConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigStateDnsCacheConfig) ClusterAddonsConfigStateDnsCacheConfig { return *v }).(ClusterAddonsConfigStateDnsCacheConfigOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigStateDnsCacheConfigPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateDnsCacheConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateHorizontalPodAutoscaling struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigStateHorizontalPodAutoscalingInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateHorizontalPodAutoscalingOutput() ClusterAddonsConfigStateHorizontalPodAutoscalingOutput
	ToClusterAddonsConfigStateHorizontalPodAutoscalingOutputWithContext(context.Context) ClusterAddonsConfigStateHorizontalPodAutoscalingOutput
}

type ClusterAddonsConfigStateHorizontalPodAutoscalingArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigStateHorizontalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateHorizontalPodAutoscaling)(nil)).Elem()
}

func (i ClusterAddonsConfigStateHorizontalPodAutoscalingArgs) ToClusterAddonsConfigStateHorizontalPodAutoscalingOutput() ClusterAddonsConfigStateHorizontalPodAutoscalingOutput {
	return i.ToClusterAddonsConfigStateHorizontalPodAutoscalingOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateHorizontalPodAutoscalingArgs) ToClusterAddonsConfigStateHorizontalPodAutoscalingOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHorizontalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateHorizontalPodAutoscalingOutput)
}

func (i ClusterAddonsConfigStateHorizontalPodAutoscalingArgs) ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput {
	return i.ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateHorizontalPodAutoscalingArgs) ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateHorizontalPodAutoscalingOutput).ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigStateHorizontalPodAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput
	ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutputWithContext(context.Context) ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput
}

type clusterAddonsConfigStateHorizontalPodAutoscalingPtrType ClusterAddonsConfigStateHorizontalPodAutoscalingArgs

func ClusterAddonsConfigStateHorizontalPodAutoscalingPtr(v *ClusterAddonsConfigStateHorizontalPodAutoscalingArgs) ClusterAddonsConfigStateHorizontalPodAutoscalingPtrInput {
	return (*clusterAddonsConfigStateHorizontalPodAutoscalingPtrType)(v)
}

func (*clusterAddonsConfigStateHorizontalPodAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateHorizontalPodAutoscaling)(nil)).Elem()
}

func (i *clusterAddonsConfigStateHorizontalPodAutoscalingPtrType) ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput {
	return i.ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigStateHorizontalPodAutoscalingPtrType) ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput)
}

type ClusterAddonsConfigStateHorizontalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateHorizontalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateHorizontalPodAutoscaling)(nil)).Elem()
}

func (o ClusterAddonsConfigStateHorizontalPodAutoscalingOutput) ToClusterAddonsConfigStateHorizontalPodAutoscalingOutput() ClusterAddonsConfigStateHorizontalPodAutoscalingOutput {
	return o
}

func (o ClusterAddonsConfigStateHorizontalPodAutoscalingOutput) ToClusterAddonsConfigStateHorizontalPodAutoscalingOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHorizontalPodAutoscalingOutput {
	return o
}

func (o ClusterAddonsConfigStateHorizontalPodAutoscalingOutput) ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput {
	return o.ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigStateHorizontalPodAutoscalingOutput) ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateHorizontalPodAutoscaling) *ClusterAddonsConfigStateHorizontalPodAutoscaling {
		return &v
	}).(ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateHorizontalPodAutoscalingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateHorizontalPodAutoscaling) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateHorizontalPodAutoscaling)(nil)).Elem()
}

func (o ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput) ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput) ToClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput) Elem() ClusterAddonsConfigStateHorizontalPodAutoscalingOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigStateHorizontalPodAutoscaling) ClusterAddonsConfigStateHorizontalPodAutoscaling {
		return *v
	}).(ClusterAddonsConfigStateHorizontalPodAutoscalingOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateHorizontalPodAutoscaling) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateHttpLoadBalancing struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigStateHttpLoadBalancingInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateHttpLoadBalancingOutput() ClusterAddonsConfigStateHttpLoadBalancingOutput
	ToClusterAddonsConfigStateHttpLoadBalancingOutputWithContext(context.Context) ClusterAddonsConfigStateHttpLoadBalancingOutput
}

type ClusterAddonsConfigStateHttpLoadBalancingArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigStateHttpLoadBalancingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateHttpLoadBalancing)(nil)).Elem()
}

func (i ClusterAddonsConfigStateHttpLoadBalancingArgs) ToClusterAddonsConfigStateHttpLoadBalancingOutput() ClusterAddonsConfigStateHttpLoadBalancingOutput {
	return i.ToClusterAddonsConfigStateHttpLoadBalancingOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateHttpLoadBalancingArgs) ToClusterAddonsConfigStateHttpLoadBalancingOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHttpLoadBalancingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateHttpLoadBalancingOutput)
}

func (i ClusterAddonsConfigStateHttpLoadBalancingArgs) ToClusterAddonsConfigStateHttpLoadBalancingPtrOutput() ClusterAddonsConfigStateHttpLoadBalancingPtrOutput {
	return i.ToClusterAddonsConfigStateHttpLoadBalancingPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateHttpLoadBalancingArgs) ToClusterAddonsConfigStateHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHttpLoadBalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateHttpLoadBalancingOutput).ToClusterAddonsConfigStateHttpLoadBalancingPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigStateHttpLoadBalancingPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateHttpLoadBalancingPtrOutput() ClusterAddonsConfigStateHttpLoadBalancingPtrOutput
	ToClusterAddonsConfigStateHttpLoadBalancingPtrOutputWithContext(context.Context) ClusterAddonsConfigStateHttpLoadBalancingPtrOutput
}

type clusterAddonsConfigStateHttpLoadBalancingPtrType ClusterAddonsConfigStateHttpLoadBalancingArgs

func ClusterAddonsConfigStateHttpLoadBalancingPtr(v *ClusterAddonsConfigStateHttpLoadBalancingArgs) ClusterAddonsConfigStateHttpLoadBalancingPtrInput {
	return (*clusterAddonsConfigStateHttpLoadBalancingPtrType)(v)
}

func (*clusterAddonsConfigStateHttpLoadBalancingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateHttpLoadBalancing)(nil)).Elem()
}

func (i *clusterAddonsConfigStateHttpLoadBalancingPtrType) ToClusterAddonsConfigStateHttpLoadBalancingPtrOutput() ClusterAddonsConfigStateHttpLoadBalancingPtrOutput {
	return i.ToClusterAddonsConfigStateHttpLoadBalancingPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigStateHttpLoadBalancingPtrType) ToClusterAddonsConfigStateHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHttpLoadBalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateHttpLoadBalancingPtrOutput)
}

type ClusterAddonsConfigStateHttpLoadBalancingOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateHttpLoadBalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateHttpLoadBalancing)(nil)).Elem()
}

func (o ClusterAddonsConfigStateHttpLoadBalancingOutput) ToClusterAddonsConfigStateHttpLoadBalancingOutput() ClusterAddonsConfigStateHttpLoadBalancingOutput {
	return o
}

func (o ClusterAddonsConfigStateHttpLoadBalancingOutput) ToClusterAddonsConfigStateHttpLoadBalancingOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHttpLoadBalancingOutput {
	return o
}

func (o ClusterAddonsConfigStateHttpLoadBalancingOutput) ToClusterAddonsConfigStateHttpLoadBalancingPtrOutput() ClusterAddonsConfigStateHttpLoadBalancingPtrOutput {
	return o.ToClusterAddonsConfigStateHttpLoadBalancingPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigStateHttpLoadBalancingOutput) ToClusterAddonsConfigStateHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHttpLoadBalancingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateHttpLoadBalancing) *ClusterAddonsConfigStateHttpLoadBalancing {
		return &v
	}).(ClusterAddonsConfigStateHttpLoadBalancingPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateHttpLoadBalancingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateHttpLoadBalancing) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateHttpLoadBalancingPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateHttpLoadBalancingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateHttpLoadBalancing)(nil)).Elem()
}

func (o ClusterAddonsConfigStateHttpLoadBalancingPtrOutput) ToClusterAddonsConfigStateHttpLoadBalancingPtrOutput() ClusterAddonsConfigStateHttpLoadBalancingPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateHttpLoadBalancingPtrOutput) ToClusterAddonsConfigStateHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateHttpLoadBalancingPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateHttpLoadBalancingPtrOutput) Elem() ClusterAddonsConfigStateHttpLoadBalancingOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigStateHttpLoadBalancing) ClusterAddonsConfigStateHttpLoadBalancing {
		return *v
	}).(ClusterAddonsConfigStateHttpLoadBalancingOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateHttpLoadBalancingPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateHttpLoadBalancing) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateIstioConfig struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth *string `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigStateIstioConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateIstioConfigOutput() ClusterAddonsConfigStateIstioConfigOutput
	ToClusterAddonsConfigStateIstioConfigOutputWithContext(context.Context) ClusterAddonsConfigStateIstioConfigOutput
}

type ClusterAddonsConfigStateIstioConfigArgs struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth pulumi.StringPtrInput `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigStateIstioConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateIstioConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigStateIstioConfigArgs) ToClusterAddonsConfigStateIstioConfigOutput() ClusterAddonsConfigStateIstioConfigOutput {
	return i.ToClusterAddonsConfigStateIstioConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateIstioConfigArgs) ToClusterAddonsConfigStateIstioConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStateIstioConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateIstioConfigOutput)
}

func (i ClusterAddonsConfigStateIstioConfigArgs) ToClusterAddonsConfigStateIstioConfigPtrOutput() ClusterAddonsConfigStateIstioConfigPtrOutput {
	return i.ToClusterAddonsConfigStateIstioConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateIstioConfigArgs) ToClusterAddonsConfigStateIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateIstioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateIstioConfigOutput).ToClusterAddonsConfigStateIstioConfigPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigStateIstioConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateIstioConfigPtrOutput() ClusterAddonsConfigStateIstioConfigPtrOutput
	ToClusterAddonsConfigStateIstioConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigStateIstioConfigPtrOutput
}

type clusterAddonsConfigStateIstioConfigPtrType ClusterAddonsConfigStateIstioConfigArgs

func ClusterAddonsConfigStateIstioConfigPtr(v *ClusterAddonsConfigStateIstioConfigArgs) ClusterAddonsConfigStateIstioConfigPtrInput {
	return (*clusterAddonsConfigStateIstioConfigPtrType)(v)
}

func (*clusterAddonsConfigStateIstioConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateIstioConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigStateIstioConfigPtrType) ToClusterAddonsConfigStateIstioConfigPtrOutput() ClusterAddonsConfigStateIstioConfigPtrOutput {
	return i.ToClusterAddonsConfigStateIstioConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigStateIstioConfigPtrType) ToClusterAddonsConfigStateIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateIstioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateIstioConfigPtrOutput)
}

type ClusterAddonsConfigStateIstioConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateIstioConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateIstioConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStateIstioConfigOutput) ToClusterAddonsConfigStateIstioConfigOutput() ClusterAddonsConfigStateIstioConfigOutput {
	return o
}

func (o ClusterAddonsConfigStateIstioConfigOutput) ToClusterAddonsConfigStateIstioConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStateIstioConfigOutput {
	return o
}

func (o ClusterAddonsConfigStateIstioConfigOutput) ToClusterAddonsConfigStateIstioConfigPtrOutput() ClusterAddonsConfigStateIstioConfigPtrOutput {
	return o.ToClusterAddonsConfigStateIstioConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigStateIstioConfigOutput) ToClusterAddonsConfigStateIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateIstioConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateIstioConfig) *ClusterAddonsConfigStateIstioConfig {
		return &v
	}).(ClusterAddonsConfigStateIstioConfigPtrOutput)
}

// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
func (o ClusterAddonsConfigStateIstioConfigOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateIstioConfig) *string { return v.Auth }).(pulumi.StringPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateIstioConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateIstioConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateIstioConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateIstioConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateIstioConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStateIstioConfigPtrOutput) ToClusterAddonsConfigStateIstioConfigPtrOutput() ClusterAddonsConfigStateIstioConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateIstioConfigPtrOutput) ToClusterAddonsConfigStateIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateIstioConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateIstioConfigPtrOutput) Elem() ClusterAddonsConfigStateIstioConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigStateIstioConfig) ClusterAddonsConfigStateIstioConfig { return *v }).(ClusterAddonsConfigStateIstioConfigOutput)
}

// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
func (o ClusterAddonsConfigStateIstioConfigPtrOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateIstioConfig) *string { return v.Auth }).(pulumi.StringPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateIstioConfigPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateIstioConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateNetworkPolicyConfig struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

type ClusterAddonsConfigStateNetworkPolicyConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateNetworkPolicyConfigOutput() ClusterAddonsConfigStateNetworkPolicyConfigOutput
	ToClusterAddonsConfigStateNetworkPolicyConfigOutputWithContext(context.Context) ClusterAddonsConfigStateNetworkPolicyConfigOutput
}

type ClusterAddonsConfigStateNetworkPolicyConfigArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigStateNetworkPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateNetworkPolicyConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigStateNetworkPolicyConfigArgs) ToClusterAddonsConfigStateNetworkPolicyConfigOutput() ClusterAddonsConfigStateNetworkPolicyConfigOutput {
	return i.ToClusterAddonsConfigStateNetworkPolicyConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateNetworkPolicyConfigArgs) ToClusterAddonsConfigStateNetworkPolicyConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStateNetworkPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateNetworkPolicyConfigOutput)
}

func (i ClusterAddonsConfigStateNetworkPolicyConfigArgs) ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutput() ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput {
	return i.ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigStateNetworkPolicyConfigArgs) ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateNetworkPolicyConfigOutput).ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutputWithContext(ctx)
}

type ClusterAddonsConfigStateNetworkPolicyConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutput() ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput
	ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput
}

type clusterAddonsConfigStateNetworkPolicyConfigPtrType ClusterAddonsConfigStateNetworkPolicyConfigArgs

func ClusterAddonsConfigStateNetworkPolicyConfigPtr(v *ClusterAddonsConfigStateNetworkPolicyConfigArgs) ClusterAddonsConfigStateNetworkPolicyConfigPtrInput {
	return (*clusterAddonsConfigStateNetworkPolicyConfigPtrType)(v)
}

func (*clusterAddonsConfigStateNetworkPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateNetworkPolicyConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigStateNetworkPolicyConfigPtrType) ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutput() ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput {
	return i.ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigStateNetworkPolicyConfigPtrType) ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput)
}

type ClusterAddonsConfigStateNetworkPolicyConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateNetworkPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigStateNetworkPolicyConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStateNetworkPolicyConfigOutput) ToClusterAddonsConfigStateNetworkPolicyConfigOutput() ClusterAddonsConfigStateNetworkPolicyConfigOutput {
	return o
}

func (o ClusterAddonsConfigStateNetworkPolicyConfigOutput) ToClusterAddonsConfigStateNetworkPolicyConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigStateNetworkPolicyConfigOutput {
	return o
}

func (o ClusterAddonsConfigStateNetworkPolicyConfigOutput) ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutput() ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput {
	return o.ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigStateNetworkPolicyConfigOutput) ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateNetworkPolicyConfig) *ClusterAddonsConfigStateNetworkPolicyConfig {
		return &v
	}).(ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateNetworkPolicyConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateNetworkPolicyConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigStateNetworkPolicyConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput) ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutput() ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput) ToClusterAddonsConfigStateNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput) Elem() ClusterAddonsConfigStateNetworkPolicyConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigStateNetworkPolicyConfig) ClusterAddonsConfigStateNetworkPolicyConfig {
		return *v
	}).(ClusterAddonsConfigStateNetworkPolicyConfigOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigStateNetworkPolicyConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAuthenticatorGroupsConfig struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup string `pulumi:"securityGroup"`
}

type ClusterAuthenticatorGroupsConfigInput interface {
	pulumi.Input

	ToClusterAuthenticatorGroupsConfigOutput() ClusterAuthenticatorGroupsConfigOutput
	ToClusterAuthenticatorGroupsConfigOutputWithContext(context.Context) ClusterAuthenticatorGroupsConfigOutput
}

type ClusterAuthenticatorGroupsConfigArgs struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
}

func (ClusterAuthenticatorGroupsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigOutput() ClusterAuthenticatorGroupsConfigOutput {
	return i.ToClusterAuthenticatorGroupsConfigOutputWithContext(context.Background())
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigOutput)
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return i.ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigOutput).ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx)
}

type ClusterAuthenticatorGroupsConfigPtrInput interface {
	pulumi.Input

	ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput
	ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Context) ClusterAuthenticatorGroupsConfigPtrOutput
}

type clusterAuthenticatorGroupsConfigPtrType ClusterAuthenticatorGroupsConfigArgs

func ClusterAuthenticatorGroupsConfigPtr(v *ClusterAuthenticatorGroupsConfigArgs) ClusterAuthenticatorGroupsConfigPtrInput {
	return (*clusterAuthenticatorGroupsConfigPtrType)(v)
}

func (*clusterAuthenticatorGroupsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i *clusterAuthenticatorGroupsConfigPtrType) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return i.ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAuthenticatorGroupsConfigPtrType) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigPtrOutput)
}

type ClusterAuthenticatorGroupsConfigOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticatorGroupsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigOutput() ClusterAuthenticatorGroupsConfigOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return o.ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfig) *ClusterAuthenticatorGroupsConfig {
		return &v
	}).(ClusterAuthenticatorGroupsConfigPtrOutput)
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
func (o ClusterAuthenticatorGroupsConfigOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfig) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type ClusterAuthenticatorGroupsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticatorGroupsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o ClusterAuthenticatorGroupsConfigPtrOutput) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigPtrOutput) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigPtrOutput) Elem() ClusterAuthenticatorGroupsConfigOutput {
	return o.ApplyT(func(v *ClusterAuthenticatorGroupsConfig) ClusterAuthenticatorGroupsConfig { return *v }).(ClusterAuthenticatorGroupsConfigOutput)
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
func (o ClusterAuthenticatorGroupsConfigPtrOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfig) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type ClusterAuthenticatorGroupsConfigArgs struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup string `pulumi:"securityGroup"`
}

type ClusterAuthenticatorGroupsConfigArgsInput interface {
	pulumi.Input

	ToClusterAuthenticatorGroupsConfigArgsOutput() ClusterAuthenticatorGroupsConfigArgsOutput
	ToClusterAuthenticatorGroupsConfigArgsOutputWithContext(context.Context) ClusterAuthenticatorGroupsConfigArgsOutput
}

type ClusterAuthenticatorGroupsConfigArgsArgs struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
}

func (ClusterAuthenticatorGroupsConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfigArgs)(nil)).Elem()
}

func (i ClusterAuthenticatorGroupsConfigArgsArgs) ToClusterAuthenticatorGroupsConfigArgsOutput() ClusterAuthenticatorGroupsConfigArgsOutput {
	return i.ToClusterAuthenticatorGroupsConfigArgsOutputWithContext(context.Background())
}

func (i ClusterAuthenticatorGroupsConfigArgsArgs) ToClusterAuthenticatorGroupsConfigArgsOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigArgsOutput)
}

func (i ClusterAuthenticatorGroupsConfigArgsArgs) ToClusterAuthenticatorGroupsConfigArgsPtrOutput() ClusterAuthenticatorGroupsConfigArgsPtrOutput {
	return i.ToClusterAuthenticatorGroupsConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterAuthenticatorGroupsConfigArgsArgs) ToClusterAuthenticatorGroupsConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigArgsOutput).ToClusterAuthenticatorGroupsConfigArgsPtrOutputWithContext(ctx)
}

type ClusterAuthenticatorGroupsConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterAuthenticatorGroupsConfigArgsPtrOutput() ClusterAuthenticatorGroupsConfigArgsPtrOutput
	ToClusterAuthenticatorGroupsConfigArgsPtrOutputWithContext(context.Context) ClusterAuthenticatorGroupsConfigArgsPtrOutput
}

type clusterAuthenticatorGroupsConfigArgsPtrType ClusterAuthenticatorGroupsConfigArgsArgs

func ClusterAuthenticatorGroupsConfigArgsPtr(v *ClusterAuthenticatorGroupsConfigArgsArgs) ClusterAuthenticatorGroupsConfigArgsPtrInput {
	return (*clusterAuthenticatorGroupsConfigArgsPtrType)(v)
}

func (*clusterAuthenticatorGroupsConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticatorGroupsConfigArgs)(nil)).Elem()
}

func (i *clusterAuthenticatorGroupsConfigArgsPtrType) ToClusterAuthenticatorGroupsConfigArgsPtrOutput() ClusterAuthenticatorGroupsConfigArgsPtrOutput {
	return i.ToClusterAuthenticatorGroupsConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterAuthenticatorGroupsConfigArgsPtrType) ToClusterAuthenticatorGroupsConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigArgsPtrOutput)
}

type ClusterAuthenticatorGroupsConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticatorGroupsConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfigArgs)(nil)).Elem()
}

func (o ClusterAuthenticatorGroupsConfigArgsOutput) ToClusterAuthenticatorGroupsConfigArgsOutput() ClusterAuthenticatorGroupsConfigArgsOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigArgsOutput) ToClusterAuthenticatorGroupsConfigArgsOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigArgsOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigArgsOutput) ToClusterAuthenticatorGroupsConfigArgsPtrOutput() ClusterAuthenticatorGroupsConfigArgsPtrOutput {
	return o.ToClusterAuthenticatorGroupsConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterAuthenticatorGroupsConfigArgsOutput) ToClusterAuthenticatorGroupsConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfigArgs) *ClusterAuthenticatorGroupsConfigArgs {
		return &v
	}).(ClusterAuthenticatorGroupsConfigArgsPtrOutput)
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
func (o ClusterAuthenticatorGroupsConfigArgsOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfigArgs) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type ClusterAuthenticatorGroupsConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticatorGroupsConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticatorGroupsConfigArgs)(nil)).Elem()
}

func (o ClusterAuthenticatorGroupsConfigArgsPtrOutput) ToClusterAuthenticatorGroupsConfigArgsPtrOutput() ClusterAuthenticatorGroupsConfigArgsPtrOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigArgsPtrOutput) ToClusterAuthenticatorGroupsConfigArgsPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigArgsPtrOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigArgsPtrOutput) Elem() ClusterAuthenticatorGroupsConfigArgsOutput {
	return o.ApplyT(func(v *ClusterAuthenticatorGroupsConfigArgs) ClusterAuthenticatorGroupsConfigArgs { return *v }).(ClusterAuthenticatorGroupsConfigArgsOutput)
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
func (o ClusterAuthenticatorGroupsConfigArgsPtrOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfigArgs) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type ClusterAuthenticatorGroupsConfigState struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup string `pulumi:"securityGroup"`
}

type ClusterAuthenticatorGroupsConfigStateInput interface {
	pulumi.Input

	ToClusterAuthenticatorGroupsConfigStateOutput() ClusterAuthenticatorGroupsConfigStateOutput
	ToClusterAuthenticatorGroupsConfigStateOutputWithContext(context.Context) ClusterAuthenticatorGroupsConfigStateOutput
}

type ClusterAuthenticatorGroupsConfigStateArgs struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
}

func (ClusterAuthenticatorGroupsConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfigState)(nil)).Elem()
}

func (i ClusterAuthenticatorGroupsConfigStateArgs) ToClusterAuthenticatorGroupsConfigStateOutput() ClusterAuthenticatorGroupsConfigStateOutput {
	return i.ToClusterAuthenticatorGroupsConfigStateOutputWithContext(context.Background())
}

func (i ClusterAuthenticatorGroupsConfigStateArgs) ToClusterAuthenticatorGroupsConfigStateOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigStateOutput)
}

type ClusterAuthenticatorGroupsConfigStateOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticatorGroupsConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfigState)(nil)).Elem()
}

func (o ClusterAuthenticatorGroupsConfigStateOutput) ToClusterAuthenticatorGroupsConfigStateOutput() ClusterAuthenticatorGroupsConfigStateOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigStateOutput) ToClusterAuthenticatorGroupsConfigStateOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigStateOutput {
	return o
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
func (o ClusterAuthenticatorGroupsConfigStateOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfigState) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type ClusterClusterAutoscaling struct {
	// Contains defaults for a node pool created by NAP.
	// Structure is documented below.
	AutoProvisioningDefaults ClusterClusterAutoscalingAutoProvisioningDefaults `pulumi:"autoProvisioningDefaults"`
	// Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile *string `pulumi:"autoscalingProfile"`
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits []ClusterClusterAutoscalingResourceLimit `pulumi:"resourceLimits"`
}

type ClusterClusterAutoscalingInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingOutput() ClusterClusterAutoscalingOutput
	ToClusterClusterAutoscalingOutputWithContext(context.Context) ClusterClusterAutoscalingOutput
}

type ClusterClusterAutoscalingArgs struct {
	// Contains defaults for a node pool created by NAP.
	// Structure is documented below.
	AutoProvisioningDefaults ClusterClusterAutoscalingAutoProvisioningDefaultsInput `pulumi:"autoProvisioningDefaults"`
	// Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile pulumi.StringPtrInput `pulumi:"autoscalingProfile"`
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits ClusterClusterAutoscalingResourceLimitArrayInput `pulumi:"resourceLimits"`
}

func (ClusterClusterAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscaling)(nil)).Elem()
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingOutput() ClusterClusterAutoscalingOutput {
	return i.ToClusterClusterAutoscalingOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingOutputWithContext(ctx context.Context) ClusterClusterAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingOutput)
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return i.ToClusterClusterAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingOutput).ToClusterClusterAutoscalingPtrOutputWithContext(ctx)
}

type ClusterClusterAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput
	ToClusterClusterAutoscalingPtrOutputWithContext(context.Context) ClusterClusterAutoscalingPtrOutput
}

type clusterClusterAutoscalingPtrType ClusterClusterAutoscalingArgs

func ClusterClusterAutoscalingPtr(v *ClusterClusterAutoscalingArgs) ClusterClusterAutoscalingPtrInput {
	return (*clusterClusterAutoscalingPtrType)(v)
}

func (*clusterClusterAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscaling)(nil)).Elem()
}

func (i *clusterClusterAutoscalingPtrType) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return i.ToClusterClusterAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingPtrType) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingPtrOutput)
}

type ClusterClusterAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscaling)(nil)).Elem()
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingOutput() ClusterClusterAutoscalingOutput {
	return o
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingOutputWithContext(ctx context.Context) ClusterClusterAutoscalingOutput {
	return o
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return o.ToClusterClusterAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) *ClusterClusterAutoscaling {
		return &v
	}).(ClusterClusterAutoscalingPtrOutput)
}

// Contains defaults for a node pool created by NAP.
// Structure is documented below.
func (o ClusterClusterAutoscalingOutput) AutoProvisioningDefaults() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) ClusterClusterAutoscalingAutoProvisioningDefaults {
		return v.AutoProvisioningDefaults
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput)
}

// Configuration
// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
func (o ClusterClusterAutoscalingOutput) AutoscalingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) *string { return v.AutoscalingProfile }).(pulumi.StringPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterClusterAutoscalingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Global constraints for machine resources in the
// cluster. Configuring the `cpu` and `memory` types is required if node
// auto-provisioning is enabled. These limits will apply to node pool autoscaling
// in addition to node auto-provisioning. Structure is documented below.
func (o ClusterClusterAutoscalingOutput) ResourceLimits() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) []ClusterClusterAutoscalingResourceLimit { return v.ResourceLimits }).(ClusterClusterAutoscalingResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscaling)(nil)).Elem()
}

func (o ClusterClusterAutoscalingPtrOutput) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingPtrOutput) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingPtrOutput) Elem() ClusterClusterAutoscalingOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) ClusterClusterAutoscaling { return *v }).(ClusterClusterAutoscalingOutput)
}

// Contains defaults for a node pool created by NAP.
// Structure is documented below.
func (o ClusterClusterAutoscalingPtrOutput) AutoProvisioningDefaults() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) ClusterClusterAutoscalingAutoProvisioningDefaults {
		return v.AutoProvisioningDefaults
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput)
}

// Configuration
// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
func (o ClusterClusterAutoscalingPtrOutput) AutoscalingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) *string { return v.AutoscalingProfile }).(pulumi.StringPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterClusterAutoscalingPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Global constraints for machine resources in the
// cluster. Configuring the `cpu` and `memory` types is required if node
// auto-provisioning is enabled. These limits will apply to node pool autoscaling
// in addition to node auto-provisioning. Structure is documented below.
func (o ClusterClusterAutoscalingPtrOutput) ResourceLimits() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) []ClusterClusterAutoscalingResourceLimit { return v.ResourceLimits }).(ClusterClusterAutoscalingResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingArgs struct {
	// Contains defaults for a node pool created by NAP.
	// Structure is documented below.
	AutoProvisioningDefaults *ClusterClusterAutoscalingAutoProvisioningDefaultsArgs `pulumi:"autoProvisioningDefaults"`
	// Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile *string `pulumi:"autoscalingProfile"`
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits []ClusterClusterAutoscalingResourceLimitArgs `pulumi:"resourceLimits"`
}

type ClusterClusterAutoscalingArgsInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingArgsOutput() ClusterClusterAutoscalingArgsOutput
	ToClusterClusterAutoscalingArgsOutputWithContext(context.Context) ClusterClusterAutoscalingArgsOutput
}

type ClusterClusterAutoscalingArgsArgs struct {
	// Contains defaults for a node pool created by NAP.
	// Structure is documented below.
	AutoProvisioningDefaults ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrInput `pulumi:"autoProvisioningDefaults"`
	// Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile pulumi.StringPtrInput `pulumi:"autoscalingProfile"`
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits ClusterClusterAutoscalingResourceLimitArgsArrayInput `pulumi:"resourceLimits"`
}

func (ClusterClusterAutoscalingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingArgs)(nil)).Elem()
}

func (i ClusterClusterAutoscalingArgsArgs) ToClusterClusterAutoscalingArgsOutput() ClusterClusterAutoscalingArgsOutput {
	return i.ToClusterClusterAutoscalingArgsOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingArgsArgs) ToClusterClusterAutoscalingArgsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingArgsOutput)
}

func (i ClusterClusterAutoscalingArgsArgs) ToClusterClusterAutoscalingArgsPtrOutput() ClusterClusterAutoscalingArgsPtrOutput {
	return i.ToClusterClusterAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingArgsArgs) ToClusterClusterAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingArgsOutput).ToClusterClusterAutoscalingArgsPtrOutputWithContext(ctx)
}

type ClusterClusterAutoscalingArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingArgsPtrOutput() ClusterClusterAutoscalingArgsPtrOutput
	ToClusterClusterAutoscalingArgsPtrOutputWithContext(context.Context) ClusterClusterAutoscalingArgsPtrOutput
}

type clusterClusterAutoscalingArgsPtrType ClusterClusterAutoscalingArgsArgs

func ClusterClusterAutoscalingArgsPtr(v *ClusterClusterAutoscalingArgsArgs) ClusterClusterAutoscalingArgsPtrInput {
	return (*clusterClusterAutoscalingArgsPtrType)(v)
}

func (*clusterClusterAutoscalingArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingArgs)(nil)).Elem()
}

func (i *clusterClusterAutoscalingArgsPtrType) ToClusterClusterAutoscalingArgsPtrOutput() ClusterClusterAutoscalingArgsPtrOutput {
	return i.ToClusterClusterAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingArgsPtrType) ToClusterClusterAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingArgsPtrOutput)
}

type ClusterClusterAutoscalingArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingArgs)(nil)).Elem()
}

func (o ClusterClusterAutoscalingArgsOutput) ToClusterClusterAutoscalingArgsOutput() ClusterClusterAutoscalingArgsOutput {
	return o
}

func (o ClusterClusterAutoscalingArgsOutput) ToClusterClusterAutoscalingArgsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingArgsOutput {
	return o
}

func (o ClusterClusterAutoscalingArgsOutput) ToClusterClusterAutoscalingArgsPtrOutput() ClusterClusterAutoscalingArgsPtrOutput {
	return o.ToClusterClusterAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingArgsOutput) ToClusterClusterAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingArgs) *ClusterClusterAutoscalingArgs {
		return &v
	}).(ClusterClusterAutoscalingArgsPtrOutput)
}

// Contains defaults for a node pool created by NAP.
// Structure is documented below.
func (o ClusterClusterAutoscalingArgsOutput) AutoProvisioningDefaults() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingArgs) *ClusterClusterAutoscalingAutoProvisioningDefaultsArgs {
		return v.AutoProvisioningDefaults
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput)
}

// Configuration
// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
func (o ClusterClusterAutoscalingArgsOutput) AutoscalingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingArgs) *string { return v.AutoscalingProfile }).(pulumi.StringPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterClusterAutoscalingArgsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Global constraints for machine resources in the
// cluster. Configuring the `cpu` and `memory` types is required if node
// auto-provisioning is enabled. These limits will apply to node pool autoscaling
// in addition to node auto-provisioning. Structure is documented below.
func (o ClusterClusterAutoscalingArgsOutput) ResourceLimits() ClusterClusterAutoscalingResourceLimitArgsArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingArgs) []ClusterClusterAutoscalingResourceLimitArgs {
		return v.ResourceLimits
	}).(ClusterClusterAutoscalingResourceLimitArgsArrayOutput)
}

type ClusterClusterAutoscalingArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingArgs)(nil)).Elem()
}

func (o ClusterClusterAutoscalingArgsPtrOutput) ToClusterClusterAutoscalingArgsPtrOutput() ClusterClusterAutoscalingArgsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingArgsPtrOutput) ToClusterClusterAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingArgsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingArgsPtrOutput) Elem() ClusterClusterAutoscalingArgsOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingArgs) ClusterClusterAutoscalingArgs { return *v }).(ClusterClusterAutoscalingArgsOutput)
}

// Contains defaults for a node pool created by NAP.
// Structure is documented below.
func (o ClusterClusterAutoscalingArgsPtrOutput) AutoProvisioningDefaults() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingArgs) *ClusterClusterAutoscalingAutoProvisioningDefaultsArgs {
		return v.AutoProvisioningDefaults
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput)
}

// Configuration
// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
func (o ClusterClusterAutoscalingArgsPtrOutput) AutoscalingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingArgs) *string { return v.AutoscalingProfile }).(pulumi.StringPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterClusterAutoscalingArgsPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Global constraints for machine resources in the
// cluster. Configuring the `cpu` and `memory` types is required if node
// auto-provisioning is enabled. These limits will apply to node pool autoscaling
// in addition to node auto-provisioning. Structure is documented below.
func (o ClusterClusterAutoscalingArgsPtrOutput) ResourceLimits() ClusterClusterAutoscalingResourceLimitArgsArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingArgs) []ClusterClusterAutoscalingResourceLimitArgs {
		return v.ResourceLimits
	}).(ClusterClusterAutoscalingResourceLimitArgsArrayOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaults struct {
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsArgs struct {
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsArgs struct {
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsArgsInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsArgsArgs struct {
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsArgs)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput)
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput).ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutputWithContext(ctx)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput
}

type clusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrType ClusterClusterAutoscalingAutoProvisioningDefaultsArgsArgs

func ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtr(v *ClusterClusterAutoscalingAutoProvisioningDefaultsArgsArgs) ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrInput {
	return (*clusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrType)(v)
}

func (*clusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsArgs)(nil)).Elem()
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaultsArgs)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return o.ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) *ClusterClusterAutoscalingAutoProvisioningDefaultsArgs {
		return &v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaultsArgs)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput) Elem() ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ClusterClusterAutoscalingAutoProvisioningDefaultsArgs {
		return *v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingResourceLimit struct {
	// Maximum amount of the resource in the cluster.
	Maximum *int `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum *int `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType string `pulumi:"resourceType"`
}

type ClusterClusterAutoscalingResourceLimitInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingResourceLimitOutput() ClusterClusterAutoscalingResourceLimitOutput
	ToClusterClusterAutoscalingResourceLimitOutputWithContext(context.Context) ClusterClusterAutoscalingResourceLimitOutput
}

type ClusterClusterAutoscalingResourceLimitArgs struct {
	// Maximum amount of the resource in the cluster.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (ClusterClusterAutoscalingResourceLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i ClusterClusterAutoscalingResourceLimitArgs) ToClusterClusterAutoscalingResourceLimitOutput() ClusterClusterAutoscalingResourceLimitOutput {
	return i.ToClusterClusterAutoscalingResourceLimitOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingResourceLimitArgs) ToClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingResourceLimitOutput)
}

type ClusterClusterAutoscalingResourceLimitArrayInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingResourceLimitArrayOutput() ClusterClusterAutoscalingResourceLimitArrayOutput
	ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Context) ClusterClusterAutoscalingResourceLimitArrayOutput
}

type ClusterClusterAutoscalingResourceLimitArray []ClusterClusterAutoscalingResourceLimitInput

func (ClusterClusterAutoscalingResourceLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i ClusterClusterAutoscalingResourceLimitArray) ToClusterClusterAutoscalingResourceLimitArrayOutput() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return i.ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingResourceLimitArray) ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingResourceLimitOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingResourceLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o ClusterClusterAutoscalingResourceLimitOutput) ToClusterClusterAutoscalingResourceLimitOutput() ClusterClusterAutoscalingResourceLimitOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitOutput) ToClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitOutput {
	return o
}

// Maximum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingResourceLimitOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimit) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingResourceLimitOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimit) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// The type of the resource. For example, `cpu` and
// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
// for a list of types.
func (o ClusterClusterAutoscalingResourceLimitOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimit) string { return v.ResourceType }).(pulumi.StringOutput)
}

type ClusterClusterAutoscalingResourceLimitArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingResourceLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o ClusterClusterAutoscalingResourceLimitArrayOutput) ToClusterClusterAutoscalingResourceLimitArrayOutput() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitArrayOutput) ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitArrayOutput) Index(i pulumi.IntInput) ClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterAutoscalingResourceLimit {
		return vs[0].([]ClusterClusterAutoscalingResourceLimit)[vs[1].(int)]
	}).(ClusterClusterAutoscalingResourceLimitOutput)
}

type ClusterClusterAutoscalingResourceLimitArgs struct {
	// Maximum amount of the resource in the cluster.
	Maximum *int `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum *int `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType string `pulumi:"resourceType"`
}

type ClusterClusterAutoscalingResourceLimitArgsInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingResourceLimitArgsOutput() ClusterClusterAutoscalingResourceLimitArgsOutput
	ToClusterClusterAutoscalingResourceLimitArgsOutputWithContext(context.Context) ClusterClusterAutoscalingResourceLimitArgsOutput
}

type ClusterClusterAutoscalingResourceLimitArgsArgs struct {
	// Maximum amount of the resource in the cluster.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (ClusterClusterAutoscalingResourceLimitArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingResourceLimitArgs)(nil)).Elem()
}

func (i ClusterClusterAutoscalingResourceLimitArgsArgs) ToClusterClusterAutoscalingResourceLimitArgsOutput() ClusterClusterAutoscalingResourceLimitArgsOutput {
	return i.ToClusterClusterAutoscalingResourceLimitArgsOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingResourceLimitArgsArgs) ToClusterClusterAutoscalingResourceLimitArgsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingResourceLimitArgsOutput)
}

type ClusterClusterAutoscalingResourceLimitArgsArrayInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingResourceLimitArgsArrayOutput() ClusterClusterAutoscalingResourceLimitArgsArrayOutput
	ToClusterClusterAutoscalingResourceLimitArgsArrayOutputWithContext(context.Context) ClusterClusterAutoscalingResourceLimitArgsArrayOutput
}

type ClusterClusterAutoscalingResourceLimitArgsArray []ClusterClusterAutoscalingResourceLimitArgsInput

func (ClusterClusterAutoscalingResourceLimitArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingResourceLimitArgs)(nil)).Elem()
}

func (i ClusterClusterAutoscalingResourceLimitArgsArray) ToClusterClusterAutoscalingResourceLimitArgsArrayOutput() ClusterClusterAutoscalingResourceLimitArgsArrayOutput {
	return i.ToClusterClusterAutoscalingResourceLimitArgsArrayOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingResourceLimitArgsArray) ToClusterClusterAutoscalingResourceLimitArgsArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingResourceLimitArgsArrayOutput)
}

type ClusterClusterAutoscalingResourceLimitArgsOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingResourceLimitArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingResourceLimitArgs)(nil)).Elem()
}

func (o ClusterClusterAutoscalingResourceLimitArgsOutput) ToClusterClusterAutoscalingResourceLimitArgsOutput() ClusterClusterAutoscalingResourceLimitArgsOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitArgsOutput) ToClusterClusterAutoscalingResourceLimitArgsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArgsOutput {
	return o
}

// Maximum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingResourceLimitArgsOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimitArgs) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingResourceLimitArgsOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimitArgs) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// The type of the resource. For example, `cpu` and
// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
// for a list of types.
func (o ClusterClusterAutoscalingResourceLimitArgsOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimitArgs) string { return v.ResourceType }).(pulumi.StringOutput)
}

type ClusterClusterAutoscalingResourceLimitArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingResourceLimitArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingResourceLimitArgs)(nil)).Elem()
}

func (o ClusterClusterAutoscalingResourceLimitArgsArrayOutput) ToClusterClusterAutoscalingResourceLimitArgsArrayOutput() ClusterClusterAutoscalingResourceLimitArgsArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitArgsArrayOutput) ToClusterClusterAutoscalingResourceLimitArgsArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArgsArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitArgsArrayOutput) Index(i pulumi.IntInput) ClusterClusterAutoscalingResourceLimitArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterAutoscalingResourceLimitArgs {
		return vs[0].([]ClusterClusterAutoscalingResourceLimitArgs)[vs[1].(int)]
	}).(ClusterClusterAutoscalingResourceLimitArgsOutput)
}

type ClusterClusterAutoscalingState struct {
	// Contains defaults for a node pool created by NAP.
	// Structure is documented below.
	AutoProvisioningDefaults *ClusterClusterAutoscalingStateAutoProvisioningDefaults `pulumi:"autoProvisioningDefaults"`
	// Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile *string `pulumi:"autoscalingProfile"`
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits []ClusterClusterAutoscalingStateResourceLimit `pulumi:"resourceLimits"`
}

type ClusterClusterAutoscalingStateInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingStateOutput() ClusterClusterAutoscalingStateOutput
	ToClusterClusterAutoscalingStateOutputWithContext(context.Context) ClusterClusterAutoscalingStateOutput
}

type ClusterClusterAutoscalingStateArgs struct {
	// Contains defaults for a node pool created by NAP.
	// Structure is documented below.
	AutoProvisioningDefaults ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrInput `pulumi:"autoProvisioningDefaults"`
	// Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile pulumi.StringPtrInput `pulumi:"autoscalingProfile"`
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits ClusterClusterAutoscalingStateResourceLimitArrayInput `pulumi:"resourceLimits"`
}

func (ClusterClusterAutoscalingStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingState)(nil)).Elem()
}

func (i ClusterClusterAutoscalingStateArgs) ToClusterClusterAutoscalingStateOutput() ClusterClusterAutoscalingStateOutput {
	return i.ToClusterClusterAutoscalingStateOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingStateArgs) ToClusterClusterAutoscalingStateOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingStateOutput)
}

type ClusterClusterAutoscalingStateOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingState)(nil)).Elem()
}

func (o ClusterClusterAutoscalingStateOutput) ToClusterClusterAutoscalingStateOutput() ClusterClusterAutoscalingStateOutput {
	return o
}

func (o ClusterClusterAutoscalingStateOutput) ToClusterClusterAutoscalingStateOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateOutput {
	return o
}

// Contains defaults for a node pool created by NAP.
// Structure is documented below.
func (o ClusterClusterAutoscalingStateOutput) AutoProvisioningDefaults() ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingState) *ClusterClusterAutoscalingStateAutoProvisioningDefaults {
		return v.AutoProvisioningDefaults
	}).(ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput)
}

// Configuration
// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
func (o ClusterClusterAutoscalingStateOutput) AutoscalingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingState) *string { return v.AutoscalingProfile }).(pulumi.StringPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterClusterAutoscalingStateOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingState) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Global constraints for machine resources in the
// cluster. Configuring the `cpu` and `memory` types is required if node
// auto-provisioning is enabled. These limits will apply to node pool autoscaling
// in addition to node auto-provisioning. Structure is documented below.
func (o ClusterClusterAutoscalingStateOutput) ResourceLimits() ClusterClusterAutoscalingStateResourceLimitArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingState) []ClusterClusterAutoscalingStateResourceLimit {
		return v.ResourceLimits
	}).(ClusterClusterAutoscalingStateResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingStateAutoProvisioningDefaults struct {
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
}

type ClusterClusterAutoscalingStateAutoProvisioningDefaultsInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput
	ToClusterClusterAutoscalingStateAutoProvisioningDefaultsOutputWithContext(context.Context) ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput
}

type ClusterClusterAutoscalingStateAutoProvisioningDefaultsArgs struct {
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
}

func (ClusterClusterAutoscalingStateAutoProvisioningDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingStateAutoProvisioningDefaults)(nil)).Elem()
}

func (i ClusterClusterAutoscalingStateAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput {
	return i.ToClusterClusterAutoscalingStateAutoProvisioningDefaultsOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingStateAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput)
}

func (i ClusterClusterAutoscalingStateAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput {
	return i.ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingStateAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput).ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutputWithContext(ctx)
}

type ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput
	ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutputWithContext(context.Context) ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput
}

type clusterClusterAutoscalingStateAutoProvisioningDefaultsPtrType ClusterClusterAutoscalingStateAutoProvisioningDefaultsArgs

func ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtr(v *ClusterClusterAutoscalingStateAutoProvisioningDefaultsArgs) ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrInput {
	return (*clusterClusterAutoscalingStateAutoProvisioningDefaultsPtrType)(v)
}

func (*clusterClusterAutoscalingStateAutoProvisioningDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingStateAutoProvisioningDefaults)(nil)).Elem()
}

func (i *clusterClusterAutoscalingStateAutoProvisioningDefaultsPtrType) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput {
	return i.ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingStateAutoProvisioningDefaultsPtrType) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput)
}

type ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingStateAutoProvisioningDefaults)(nil)).Elem()
}

func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput {
	return o
}

func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput {
	return o
}

func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput {
	return o.ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingStateAutoProvisioningDefaults) *ClusterClusterAutoscalingStateAutoProvisioningDefaults {
		return &v
	}).(ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingStateAutoProvisioningDefaults) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingStateAutoProvisioningDefaults) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingStateAutoProvisioningDefaults)(nil)).Elem()
}

func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput) ToClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput) Elem() ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingStateAutoProvisioningDefaults) ClusterClusterAutoscalingStateAutoProvisioningDefaults {
		return *v
	}).(ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingStateAutoProvisioningDefaults) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingStateAutoProvisioningDefaults) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingStateResourceLimit struct {
	// Maximum amount of the resource in the cluster.
	Maximum *int `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum *int `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType string `pulumi:"resourceType"`
}

type ClusterClusterAutoscalingStateResourceLimitInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingStateResourceLimitOutput() ClusterClusterAutoscalingStateResourceLimitOutput
	ToClusterClusterAutoscalingStateResourceLimitOutputWithContext(context.Context) ClusterClusterAutoscalingStateResourceLimitOutput
}

type ClusterClusterAutoscalingStateResourceLimitArgs struct {
	// Maximum amount of the resource in the cluster.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (ClusterClusterAutoscalingStateResourceLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingStateResourceLimit)(nil)).Elem()
}

func (i ClusterClusterAutoscalingStateResourceLimitArgs) ToClusterClusterAutoscalingStateResourceLimitOutput() ClusterClusterAutoscalingStateResourceLimitOutput {
	return i.ToClusterClusterAutoscalingStateResourceLimitOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingStateResourceLimitArgs) ToClusterClusterAutoscalingStateResourceLimitOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateResourceLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingStateResourceLimitOutput)
}

type ClusterClusterAutoscalingStateResourceLimitArrayInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingStateResourceLimitArrayOutput() ClusterClusterAutoscalingStateResourceLimitArrayOutput
	ToClusterClusterAutoscalingStateResourceLimitArrayOutputWithContext(context.Context) ClusterClusterAutoscalingStateResourceLimitArrayOutput
}

type ClusterClusterAutoscalingStateResourceLimitArray []ClusterClusterAutoscalingStateResourceLimitInput

func (ClusterClusterAutoscalingStateResourceLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingStateResourceLimit)(nil)).Elem()
}

func (i ClusterClusterAutoscalingStateResourceLimitArray) ToClusterClusterAutoscalingStateResourceLimitArrayOutput() ClusterClusterAutoscalingStateResourceLimitArrayOutput {
	return i.ToClusterClusterAutoscalingStateResourceLimitArrayOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingStateResourceLimitArray) ToClusterClusterAutoscalingStateResourceLimitArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateResourceLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingStateResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingStateResourceLimitOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingStateResourceLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingStateResourceLimit)(nil)).Elem()
}

func (o ClusterClusterAutoscalingStateResourceLimitOutput) ToClusterClusterAutoscalingStateResourceLimitOutput() ClusterClusterAutoscalingStateResourceLimitOutput {
	return o
}

func (o ClusterClusterAutoscalingStateResourceLimitOutput) ToClusterClusterAutoscalingStateResourceLimitOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateResourceLimitOutput {
	return o
}

// Maximum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingStateResourceLimitOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingStateResourceLimit) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingStateResourceLimitOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingStateResourceLimit) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// The type of the resource. For example, `cpu` and
// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
// for a list of types.
func (o ClusterClusterAutoscalingStateResourceLimitOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingStateResourceLimit) string { return v.ResourceType }).(pulumi.StringOutput)
}

type ClusterClusterAutoscalingStateResourceLimitArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingStateResourceLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingStateResourceLimit)(nil)).Elem()
}

func (o ClusterClusterAutoscalingStateResourceLimitArrayOutput) ToClusterClusterAutoscalingStateResourceLimitArrayOutput() ClusterClusterAutoscalingStateResourceLimitArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingStateResourceLimitArrayOutput) ToClusterClusterAutoscalingStateResourceLimitArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingStateResourceLimitArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingStateResourceLimitArrayOutput) Index(i pulumi.IntInput) ClusterClusterAutoscalingStateResourceLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterAutoscalingStateResourceLimit {
		return vs[0].([]ClusterClusterAutoscalingStateResourceLimit)[vs[1].(int)]
	}).(ClusterClusterAutoscalingStateResourceLimitOutput)
}

type ClusterDatabaseEncryption struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	KeyName *string `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State string `pulumi:"state"`
}

type ClusterDatabaseEncryptionInput interface {
	pulumi.Input

	ToClusterDatabaseEncryptionOutput() ClusterDatabaseEncryptionOutput
	ToClusterDatabaseEncryptionOutputWithContext(context.Context) ClusterDatabaseEncryptionOutput
}

type ClusterDatabaseEncryptionArgs struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State pulumi.StringInput `pulumi:"state"`
}

func (ClusterDatabaseEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryption)(nil)).Elem()
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionOutput() ClusterDatabaseEncryptionOutput {
	return i.ToClusterDatabaseEncryptionOutputWithContext(context.Background())
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionOutput)
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return i.ToClusterDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionOutput).ToClusterDatabaseEncryptionPtrOutputWithContext(ctx)
}

type ClusterDatabaseEncryptionPtrInput interface {
	pulumi.Input

	ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput
	ToClusterDatabaseEncryptionPtrOutputWithContext(context.Context) ClusterDatabaseEncryptionPtrOutput
}

type clusterDatabaseEncryptionPtrType ClusterDatabaseEncryptionArgs

func ClusterDatabaseEncryptionPtr(v *ClusterDatabaseEncryptionArgs) ClusterDatabaseEncryptionPtrInput {
	return (*clusterDatabaseEncryptionPtrType)(v)
}

func (*clusterDatabaseEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDatabaseEncryption)(nil)).Elem()
}

func (i *clusterDatabaseEncryptionPtrType) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return i.ToClusterDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i *clusterDatabaseEncryptionPtrType) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionPtrOutput)
}

type ClusterDatabaseEncryptionOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryption)(nil)).Elem()
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionOutput() ClusterDatabaseEncryptionOutput {
	return o
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionOutput {
	return o
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return o.ToClusterDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) *ClusterDatabaseEncryption {
		return &v
	}).(ClusterDatabaseEncryptionPtrOutput)
}

// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
func (o ClusterDatabaseEncryptionOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// `ENCRYPTED` or `DECRYPTED`
func (o ClusterDatabaseEncryptionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) string { return v.State }).(pulumi.StringOutput)
}

type ClusterDatabaseEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDatabaseEncryption)(nil)).Elem()
}

func (o ClusterDatabaseEncryptionPtrOutput) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return o
}

func (o ClusterDatabaseEncryptionPtrOutput) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return o
}

func (o ClusterDatabaseEncryptionPtrOutput) Elem() ClusterDatabaseEncryptionOutput {
	return o.ApplyT(func(v *ClusterDatabaseEncryption) ClusterDatabaseEncryption { return *v }).(ClusterDatabaseEncryptionOutput)
}

// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
func (o ClusterDatabaseEncryptionPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// `ENCRYPTED` or `DECRYPTED`
func (o ClusterDatabaseEncryptionPtrOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) string { return v.State }).(pulumi.StringOutput)
}

type ClusterDatabaseEncryptionArgs struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	KeyName *string `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State string `pulumi:"state"`
}

type ClusterDatabaseEncryptionArgsInput interface {
	pulumi.Input

	ToClusterDatabaseEncryptionArgsOutput() ClusterDatabaseEncryptionArgsOutput
	ToClusterDatabaseEncryptionArgsOutputWithContext(context.Context) ClusterDatabaseEncryptionArgsOutput
}

type ClusterDatabaseEncryptionArgsArgs struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State pulumi.StringInput `pulumi:"state"`
}

func (ClusterDatabaseEncryptionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryptionArgs)(nil)).Elem()
}

func (i ClusterDatabaseEncryptionArgsArgs) ToClusterDatabaseEncryptionArgsOutput() ClusterDatabaseEncryptionArgsOutput {
	return i.ToClusterDatabaseEncryptionArgsOutputWithContext(context.Background())
}

func (i ClusterDatabaseEncryptionArgsArgs) ToClusterDatabaseEncryptionArgsOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionArgsOutput)
}

func (i ClusterDatabaseEncryptionArgsArgs) ToClusterDatabaseEncryptionArgsPtrOutput() ClusterDatabaseEncryptionArgsPtrOutput {
	return i.ToClusterDatabaseEncryptionArgsPtrOutputWithContext(context.Background())
}

func (i ClusterDatabaseEncryptionArgsArgs) ToClusterDatabaseEncryptionArgsPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionArgsOutput).ToClusterDatabaseEncryptionArgsPtrOutputWithContext(ctx)
}

type ClusterDatabaseEncryptionArgsPtrInput interface {
	pulumi.Input

	ToClusterDatabaseEncryptionArgsPtrOutput() ClusterDatabaseEncryptionArgsPtrOutput
	ToClusterDatabaseEncryptionArgsPtrOutputWithContext(context.Context) ClusterDatabaseEncryptionArgsPtrOutput
}

type clusterDatabaseEncryptionArgsPtrType ClusterDatabaseEncryptionArgsArgs

func ClusterDatabaseEncryptionArgsPtr(v *ClusterDatabaseEncryptionArgsArgs) ClusterDatabaseEncryptionArgsPtrInput {
	return (*clusterDatabaseEncryptionArgsPtrType)(v)
}

func (*clusterDatabaseEncryptionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDatabaseEncryptionArgs)(nil)).Elem()
}

func (i *clusterDatabaseEncryptionArgsPtrType) ToClusterDatabaseEncryptionArgsPtrOutput() ClusterDatabaseEncryptionArgsPtrOutput {
	return i.ToClusterDatabaseEncryptionArgsPtrOutputWithContext(context.Background())
}

func (i *clusterDatabaseEncryptionArgsPtrType) ToClusterDatabaseEncryptionArgsPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionArgsPtrOutput)
}

type ClusterDatabaseEncryptionArgsOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseEncryptionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryptionArgs)(nil)).Elem()
}

func (o ClusterDatabaseEncryptionArgsOutput) ToClusterDatabaseEncryptionArgsOutput() ClusterDatabaseEncryptionArgsOutput {
	return o
}

func (o ClusterDatabaseEncryptionArgsOutput) ToClusterDatabaseEncryptionArgsOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionArgsOutput {
	return o
}

func (o ClusterDatabaseEncryptionArgsOutput) ToClusterDatabaseEncryptionArgsPtrOutput() ClusterDatabaseEncryptionArgsPtrOutput {
	return o.ToClusterDatabaseEncryptionArgsPtrOutputWithContext(context.Background())
}

func (o ClusterDatabaseEncryptionArgsOutput) ToClusterDatabaseEncryptionArgsPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionArgsPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryptionArgs) *ClusterDatabaseEncryptionArgs {
		return &v
	}).(ClusterDatabaseEncryptionArgsPtrOutput)
}

// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
func (o ClusterDatabaseEncryptionArgsOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryptionArgs) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// `ENCRYPTED` or `DECRYPTED`
func (o ClusterDatabaseEncryptionArgsOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryptionArgs) string { return v.State }).(pulumi.StringOutput)
}

type ClusterDatabaseEncryptionArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseEncryptionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDatabaseEncryptionArgs)(nil)).Elem()
}

func (o ClusterDatabaseEncryptionArgsPtrOutput) ToClusterDatabaseEncryptionArgsPtrOutput() ClusterDatabaseEncryptionArgsPtrOutput {
	return o
}

func (o ClusterDatabaseEncryptionArgsPtrOutput) ToClusterDatabaseEncryptionArgsPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionArgsPtrOutput {
	return o
}

func (o ClusterDatabaseEncryptionArgsPtrOutput) Elem() ClusterDatabaseEncryptionArgsOutput {
	return o.ApplyT(func(v *ClusterDatabaseEncryptionArgs) ClusterDatabaseEncryptionArgs { return *v }).(ClusterDatabaseEncryptionArgsOutput)
}

// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
func (o ClusterDatabaseEncryptionArgsPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryptionArgs) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// `ENCRYPTED` or `DECRYPTED`
func (o ClusterDatabaseEncryptionArgsPtrOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryptionArgs) string { return v.State }).(pulumi.StringOutput)
}

type ClusterDatabaseEncryptionState struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	KeyName *string `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State string `pulumi:"state"`
}

type ClusterDatabaseEncryptionStateInput interface {
	pulumi.Input

	ToClusterDatabaseEncryptionStateOutput() ClusterDatabaseEncryptionStateOutput
	ToClusterDatabaseEncryptionStateOutputWithContext(context.Context) ClusterDatabaseEncryptionStateOutput
}

type ClusterDatabaseEncryptionStateArgs struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State pulumi.StringInput `pulumi:"state"`
}

func (ClusterDatabaseEncryptionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryptionState)(nil)).Elem()
}

func (i ClusterDatabaseEncryptionStateArgs) ToClusterDatabaseEncryptionStateOutput() ClusterDatabaseEncryptionStateOutput {
	return i.ToClusterDatabaseEncryptionStateOutputWithContext(context.Background())
}

func (i ClusterDatabaseEncryptionStateArgs) ToClusterDatabaseEncryptionStateOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionStateOutput)
}

type ClusterDatabaseEncryptionStateOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseEncryptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryptionState)(nil)).Elem()
}

func (o ClusterDatabaseEncryptionStateOutput) ToClusterDatabaseEncryptionStateOutput() ClusterDatabaseEncryptionStateOutput {
	return o
}

func (o ClusterDatabaseEncryptionStateOutput) ToClusterDatabaseEncryptionStateOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionStateOutput {
	return o
}

// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
func (o ClusterDatabaseEncryptionStateOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryptionState) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// `ENCRYPTED` or `DECRYPTED`
func (o ClusterDatabaseEncryptionStateOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryptionState) string { return v.State }).(pulumi.StringOutput)
}

type ClusterIpAllocationPolicy struct {
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock string `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName string `pulumi:"clusterSecondaryRangeName"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock string `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName string `pulumi:"servicesSecondaryRangeName"`
}

type ClusterIpAllocationPolicyInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyOutput() ClusterIpAllocationPolicyOutput
	ToClusterIpAllocationPolicyOutputWithContext(context.Context) ClusterIpAllocationPolicyOutput
}

type ClusterIpAllocationPolicyArgs struct {
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock pulumi.StringInput `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName pulumi.StringInput `pulumi:"clusterSecondaryRangeName"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock pulumi.StringInput `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName pulumi.StringInput `pulumi:"servicesSecondaryRangeName"`
}

func (ClusterIpAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicy)(nil)).Elem()
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyOutput() ClusterIpAllocationPolicyOutput {
	return i.ToClusterIpAllocationPolicyOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyOutput)
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return i.ToClusterIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyOutput).ToClusterIpAllocationPolicyPtrOutputWithContext(ctx)
}

type ClusterIpAllocationPolicyPtrInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput
	ToClusterIpAllocationPolicyPtrOutputWithContext(context.Context) ClusterIpAllocationPolicyPtrOutput
}

type clusterIpAllocationPolicyPtrType ClusterIpAllocationPolicyArgs

func ClusterIpAllocationPolicyPtr(v *ClusterIpAllocationPolicyArgs) ClusterIpAllocationPolicyPtrInput {
	return (*clusterIpAllocationPolicyPtrType)(v)
}

func (*clusterIpAllocationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicy)(nil)).Elem()
}

func (i *clusterIpAllocationPolicyPtrType) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return i.ToClusterIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterIpAllocationPolicyPtrType) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyPtrOutput)
}

type ClusterIpAllocationPolicyOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicy)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyOutput() ClusterIpAllocationPolicyOutput {
	return o
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyOutput {
	return o
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return o.ToClusterIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *ClusterIpAllocationPolicy {
		return &v
	}).(ClusterIpAllocationPolicyPtrOutput)
}

// The IP address range for the cluster pod IPs.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyOutput) ClusterIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) string { return v.ClusterIpv4CidrBlock }).(pulumi.StringOutput)
}

// The name of the existing secondary
// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
func (o ClusterIpAllocationPolicyOutput) ClusterSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) string { return v.ClusterSecondaryRangeName }).(pulumi.StringOutput)
}

// The IP address range of the services IPs in this cluster.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyOutput) ServicesIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) string { return v.ServicesIpv4CidrBlock }).(pulumi.StringOutput)
}

// The name of the existing
// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
// GKE-managed one.
func (o ClusterIpAllocationPolicyOutput) ServicesSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) string { return v.ServicesSecondaryRangeName }).(pulumi.StringOutput)
}

type ClusterIpAllocationPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicy)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyPtrOutput) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyPtrOutput) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyPtrOutput) Elem() ClusterIpAllocationPolicyOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) ClusterIpAllocationPolicy { return *v }).(ClusterIpAllocationPolicyOutput)
}

// The IP address range for the cluster pod IPs.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyPtrOutput) ClusterIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) string { return v.ClusterIpv4CidrBlock }).(pulumi.StringOutput)
}

// The name of the existing secondary
// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
func (o ClusterIpAllocationPolicyPtrOutput) ClusterSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) string { return v.ClusterSecondaryRangeName }).(pulumi.StringOutput)
}

// The IP address range of the services IPs in this cluster.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyPtrOutput) ServicesIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) string { return v.ServicesIpv4CidrBlock }).(pulumi.StringOutput)
}

// The name of the existing
// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
// GKE-managed one.
func (o ClusterIpAllocationPolicyPtrOutput) ServicesSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) string { return v.ServicesSecondaryRangeName }).(pulumi.StringOutput)
}

type ClusterIpAllocationPolicyArgs struct {
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock *string `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName *string `pulumi:"clusterSecondaryRangeName"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock *string `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName *string `pulumi:"servicesSecondaryRangeName"`
}

type ClusterIpAllocationPolicyArgsInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyArgsOutput() ClusterIpAllocationPolicyArgsOutput
	ToClusterIpAllocationPolicyArgsOutputWithContext(context.Context) ClusterIpAllocationPolicyArgsOutput
}

type ClusterIpAllocationPolicyArgsArgs struct {
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName pulumi.StringPtrInput `pulumi:"clusterSecondaryRangeName"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock pulumi.StringPtrInput `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName pulumi.StringPtrInput `pulumi:"servicesSecondaryRangeName"`
}

func (ClusterIpAllocationPolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicyArgs)(nil)).Elem()
}

func (i ClusterIpAllocationPolicyArgsArgs) ToClusterIpAllocationPolicyArgsOutput() ClusterIpAllocationPolicyArgsOutput {
	return i.ToClusterIpAllocationPolicyArgsOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyArgsArgs) ToClusterIpAllocationPolicyArgsOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyArgsOutput)
}

func (i ClusterIpAllocationPolicyArgsArgs) ToClusterIpAllocationPolicyArgsPtrOutput() ClusterIpAllocationPolicyArgsPtrOutput {
	return i.ToClusterIpAllocationPolicyArgsPtrOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyArgsArgs) ToClusterIpAllocationPolicyArgsPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyArgsOutput).ToClusterIpAllocationPolicyArgsPtrOutputWithContext(ctx)
}

type ClusterIpAllocationPolicyArgsPtrInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyArgsPtrOutput() ClusterIpAllocationPolicyArgsPtrOutput
	ToClusterIpAllocationPolicyArgsPtrOutputWithContext(context.Context) ClusterIpAllocationPolicyArgsPtrOutput
}

type clusterIpAllocationPolicyArgsPtrType ClusterIpAllocationPolicyArgsArgs

func ClusterIpAllocationPolicyArgsPtr(v *ClusterIpAllocationPolicyArgsArgs) ClusterIpAllocationPolicyArgsPtrInput {
	return (*clusterIpAllocationPolicyArgsPtrType)(v)
}

func (*clusterIpAllocationPolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicyArgs)(nil)).Elem()
}

func (i *clusterIpAllocationPolicyArgsPtrType) ToClusterIpAllocationPolicyArgsPtrOutput() ClusterIpAllocationPolicyArgsPtrOutput {
	return i.ToClusterIpAllocationPolicyArgsPtrOutputWithContext(context.Background())
}

func (i *clusterIpAllocationPolicyArgsPtrType) ToClusterIpAllocationPolicyArgsPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyArgsPtrOutput)
}

type ClusterIpAllocationPolicyArgsOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicyArgs)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyArgsOutput) ToClusterIpAllocationPolicyArgsOutput() ClusterIpAllocationPolicyArgsOutput {
	return o
}

func (o ClusterIpAllocationPolicyArgsOutput) ToClusterIpAllocationPolicyArgsOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyArgsOutput {
	return o
}

func (o ClusterIpAllocationPolicyArgsOutput) ToClusterIpAllocationPolicyArgsPtrOutput() ClusterIpAllocationPolicyArgsPtrOutput {
	return o.ToClusterIpAllocationPolicyArgsPtrOutputWithContext(context.Background())
}

func (o ClusterIpAllocationPolicyArgsOutput) ToClusterIpAllocationPolicyArgsPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyArgsPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyArgs) *ClusterIpAllocationPolicyArgs {
		return &v
	}).(ClusterIpAllocationPolicyArgsPtrOutput)
}

// The IP address range for the cluster pod IPs.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyArgsOutput) ClusterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyArgs) *string { return v.ClusterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing secondary
// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
func (o ClusterIpAllocationPolicyArgsOutput) ClusterSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyArgs) *string { return v.ClusterSecondaryRangeName }).(pulumi.StringPtrOutput)
}

// The IP address range of the services IPs in this cluster.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyArgsOutput) ServicesIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyArgs) *string { return v.ServicesIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing
// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
// GKE-managed one.
func (o ClusterIpAllocationPolicyArgsOutput) ServicesSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyArgs) *string { return v.ServicesSecondaryRangeName }).(pulumi.StringPtrOutput)
}

type ClusterIpAllocationPolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicyArgs)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyArgsPtrOutput) ToClusterIpAllocationPolicyArgsPtrOutput() ClusterIpAllocationPolicyArgsPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyArgsPtrOutput) ToClusterIpAllocationPolicyArgsPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyArgsPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyArgsPtrOutput) Elem() ClusterIpAllocationPolicyArgsOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicyArgs) ClusterIpAllocationPolicyArgs { return *v }).(ClusterIpAllocationPolicyArgsOutput)
}

// The IP address range for the cluster pod IPs.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyArgsPtrOutput) ClusterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyArgs) *string { return v.ClusterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing secondary
// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
func (o ClusterIpAllocationPolicyArgsPtrOutput) ClusterSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyArgs) *string { return v.ClusterSecondaryRangeName }).(pulumi.StringPtrOutput)
}

// The IP address range of the services IPs in this cluster.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyArgsPtrOutput) ServicesIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyArgs) *string { return v.ServicesIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing
// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
// GKE-managed one.
func (o ClusterIpAllocationPolicyArgsPtrOutput) ServicesSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyArgs) *string { return v.ServicesSecondaryRangeName }).(pulumi.StringPtrOutput)
}

type ClusterIpAllocationPolicyState struct {
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock *string `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName *string `pulumi:"clusterSecondaryRangeName"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock *string `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName *string `pulumi:"servicesSecondaryRangeName"`
}

type ClusterIpAllocationPolicyStateInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyStateOutput() ClusterIpAllocationPolicyStateOutput
	ToClusterIpAllocationPolicyStateOutputWithContext(context.Context) ClusterIpAllocationPolicyStateOutput
}

type ClusterIpAllocationPolicyStateArgs struct {
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName pulumi.StringPtrInput `pulumi:"clusterSecondaryRangeName"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock pulumi.StringPtrInput `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName pulumi.StringPtrInput `pulumi:"servicesSecondaryRangeName"`
}

func (ClusterIpAllocationPolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicyState)(nil)).Elem()
}

func (i ClusterIpAllocationPolicyStateArgs) ToClusterIpAllocationPolicyStateOutput() ClusterIpAllocationPolicyStateOutput {
	return i.ToClusterIpAllocationPolicyStateOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyStateArgs) ToClusterIpAllocationPolicyStateOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyStateOutput)
}

type ClusterIpAllocationPolicyStateOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicyState)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyStateOutput) ToClusterIpAllocationPolicyStateOutput() ClusterIpAllocationPolicyStateOutput {
	return o
}

func (o ClusterIpAllocationPolicyStateOutput) ToClusterIpAllocationPolicyStateOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyStateOutput {
	return o
}

// The IP address range for the cluster pod IPs.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyStateOutput) ClusterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyState) *string { return v.ClusterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing secondary
// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
func (o ClusterIpAllocationPolicyStateOutput) ClusterSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyState) *string { return v.ClusterSecondaryRangeName }).(pulumi.StringPtrOutput)
}

// The IP address range of the services IPs in this cluster.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyStateOutput) ServicesIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyState) *string { return v.ServicesIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing
// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
// GKE-managed one.
func (o ClusterIpAllocationPolicyStateOutput) ServicesSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicyState) *string { return v.ServicesSecondaryRangeName }).(pulumi.StringPtrOutput)
}

type ClusterMaintenancePolicy struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	DailyMaintenanceWindow *ClusterMaintenancePolicyDailyMaintenanceWindow `pulumi:"dailyMaintenanceWindow"`
	// Time window for
	// recurring maintenance operations.
	RecurringWindow *ClusterMaintenancePolicyRecurringWindow `pulumi:"recurringWindow"`
}

type ClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput
	ToClusterMaintenancePolicyOutputWithContext(context.Context) ClusterMaintenancePolicyOutput
}

type ClusterMaintenancePolicyArgs struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	DailyMaintenanceWindow ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput `pulumi:"dailyMaintenanceWindow"`
	// Time window for
	// recurring maintenance operations.
	RecurringWindow ClusterMaintenancePolicyRecurringWindowPtrInput `pulumi:"recurringWindow"`
}

func (ClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return i.ToClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput)
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput).ToClusterMaintenancePolicyPtrOutputWithContext(ctx)
}

type ClusterMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput
	ToClusterMaintenancePolicyPtrOutputWithContext(context.Context) ClusterMaintenancePolicyPtrOutput
}

type clusterMaintenancePolicyPtrType ClusterMaintenancePolicyArgs

func ClusterMaintenancePolicyPtr(v *ClusterMaintenancePolicyArgs) ClusterMaintenancePolicyPtrInput {
	return (*clusterMaintenancePolicyPtrType)(v)
}

func (*clusterMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyPtrOutput)
}

type ClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicy {
		return &v
	}).(ClusterMaintenancePolicyPtrOutput)
}

// Time window specified for daily maintenance operations.
// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
func (o ClusterMaintenancePolicyOutput) DailyMaintenanceWindow() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicyDailyMaintenanceWindow {
		return v.DailyMaintenanceWindow
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

// Time window for
// recurring maintenance operations.
func (o ClusterMaintenancePolicyOutput) RecurringWindow() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicyRecurringWindow { return v.RecurringWindow }).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) Elem() ClusterMaintenancePolicyOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) ClusterMaintenancePolicy { return *v }).(ClusterMaintenancePolicyOutput)
}

// Time window specified for daily maintenance operations.
// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
func (o ClusterMaintenancePolicyPtrOutput) DailyMaintenanceWindow() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicyDailyMaintenanceWindow {
		return v.DailyMaintenanceWindow
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

// Time window for
// recurring maintenance operations.
func (o ClusterMaintenancePolicyPtrOutput) RecurringWindow() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicyRecurringWindow { return v.RecurringWindow }).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyArgs struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	DailyMaintenanceWindow *ClusterMaintenancePolicyDailyMaintenanceWindowArgs `pulumi:"dailyMaintenanceWindow"`
	// Time window for
	// recurring maintenance operations.
	RecurringWindow *ClusterMaintenancePolicyRecurringWindowArgs `pulumi:"recurringWindow"`
}

type ClusterMaintenancePolicyArgsInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyArgsOutput() ClusterMaintenancePolicyArgsOutput
	ToClusterMaintenancePolicyArgsOutputWithContext(context.Context) ClusterMaintenancePolicyArgsOutput
}

type ClusterMaintenancePolicyArgsArgs struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	DailyMaintenanceWindow ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrInput `pulumi:"dailyMaintenanceWindow"`
	// Time window for
	// recurring maintenance operations.
	RecurringWindow ClusterMaintenancePolicyRecurringWindowArgsPtrInput `pulumi:"recurringWindow"`
}

func (ClusterMaintenancePolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyArgs)(nil)).Elem()
}

func (i ClusterMaintenancePolicyArgsArgs) ToClusterMaintenancePolicyArgsOutput() ClusterMaintenancePolicyArgsOutput {
	return i.ToClusterMaintenancePolicyArgsOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgsArgs) ToClusterMaintenancePolicyArgsOutputWithContext(ctx context.Context) ClusterMaintenancePolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyArgsOutput)
}

func (i ClusterMaintenancePolicyArgsArgs) ToClusterMaintenancePolicyArgsPtrOutput() ClusterMaintenancePolicyArgsPtrOutput {
	return i.ToClusterMaintenancePolicyArgsPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgsArgs) ToClusterMaintenancePolicyArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyArgsOutput).ToClusterMaintenancePolicyArgsPtrOutputWithContext(ctx)
}

type ClusterMaintenancePolicyArgsPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyArgsPtrOutput() ClusterMaintenancePolicyArgsPtrOutput
	ToClusterMaintenancePolicyArgsPtrOutputWithContext(context.Context) ClusterMaintenancePolicyArgsPtrOutput
}

type clusterMaintenancePolicyArgsPtrType ClusterMaintenancePolicyArgsArgs

func ClusterMaintenancePolicyArgsPtr(v *ClusterMaintenancePolicyArgsArgs) ClusterMaintenancePolicyArgsPtrInput {
	return (*clusterMaintenancePolicyArgsPtrType)(v)
}

func (*clusterMaintenancePolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyArgs)(nil)).Elem()
}

func (i *clusterMaintenancePolicyArgsPtrType) ToClusterMaintenancePolicyArgsPtrOutput() ClusterMaintenancePolicyArgsPtrOutput {
	return i.ToClusterMaintenancePolicyArgsPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyArgsPtrType) ToClusterMaintenancePolicyArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyArgsPtrOutput)
}

type ClusterMaintenancePolicyArgsOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyArgs)(nil)).Elem()
}

func (o ClusterMaintenancePolicyArgsOutput) ToClusterMaintenancePolicyArgsOutput() ClusterMaintenancePolicyArgsOutput {
	return o
}

func (o ClusterMaintenancePolicyArgsOutput) ToClusterMaintenancePolicyArgsOutputWithContext(ctx context.Context) ClusterMaintenancePolicyArgsOutput {
	return o
}

func (o ClusterMaintenancePolicyArgsOutput) ToClusterMaintenancePolicyArgsPtrOutput() ClusterMaintenancePolicyArgsPtrOutput {
	return o.ToClusterMaintenancePolicyArgsPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyArgsOutput) ToClusterMaintenancePolicyArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyArgsPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyArgs) *ClusterMaintenancePolicyArgs {
		return &v
	}).(ClusterMaintenancePolicyArgsPtrOutput)
}

// Time window specified for daily maintenance operations.
// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
func (o ClusterMaintenancePolicyArgsOutput) DailyMaintenanceWindow() ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyArgs) *ClusterMaintenancePolicyDailyMaintenanceWindowArgs {
		return v.DailyMaintenanceWindow
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput)
}

// Time window for
// recurring maintenance operations.
func (o ClusterMaintenancePolicyArgsOutput) RecurringWindow() ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyArgs) *ClusterMaintenancePolicyRecurringWindowArgs {
		return v.RecurringWindow
	}).(ClusterMaintenancePolicyRecurringWindowArgsPtrOutput)
}

type ClusterMaintenancePolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyArgs)(nil)).Elem()
}

func (o ClusterMaintenancePolicyArgsPtrOutput) ToClusterMaintenancePolicyArgsPtrOutput() ClusterMaintenancePolicyArgsPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyArgsPtrOutput) ToClusterMaintenancePolicyArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyArgsPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyArgsPtrOutput) Elem() ClusterMaintenancePolicyArgsOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyArgs) ClusterMaintenancePolicyArgs { return *v }).(ClusterMaintenancePolicyArgsOutput)
}

// Time window specified for daily maintenance operations.
// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
func (o ClusterMaintenancePolicyArgsPtrOutput) DailyMaintenanceWindow() ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyArgs) *ClusterMaintenancePolicyDailyMaintenanceWindowArgs {
		return v.DailyMaintenanceWindow
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput)
}

// Time window for
// recurring maintenance operations.
func (o ClusterMaintenancePolicyArgsPtrOutput) RecurringWindow() ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyArgs) *ClusterMaintenancePolicyRecurringWindowArgs {
		return v.RecurringWindow
	}).(ClusterMaintenancePolicyRecurringWindowArgsPtrOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindow struct {
	Duration  string `pulumi:"duration"`
	StartTime string `pulumi:"startTime"`
}

type ClusterMaintenancePolicyDailyMaintenanceWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyDailyMaintenanceWindowOutput() ClusterMaintenancePolicyDailyMaintenanceWindowOutput
	ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowOutput
}

type ClusterMaintenancePolicyDailyMaintenanceWindowArgs struct {
	Duration  pulumi.StringInput `pulumi:"duration"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowOutput() ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowOutput).ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput
	ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput
}

type clusterMaintenancePolicyDailyMaintenanceWindowPtrType ClusterMaintenancePolicyDailyMaintenanceWindowArgs

func ClusterMaintenancePolicyDailyMaintenanceWindowPtr(v *ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput {
	return (*clusterMaintenancePolicyDailyMaintenanceWindowPtrType)(v)
}

func (*clusterMaintenancePolicyDailyMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyDailyMaintenanceWindowPtrType) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyDailyMaintenanceWindowPtrType) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowOutput() ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) *ClusterMaintenancePolicyDailyMaintenanceWindow {
		return &v
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}
func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) Elem() ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyDailyMaintenanceWindow) ClusterMaintenancePolicyDailyMaintenanceWindow {
		return *v
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowArgs struct {
	Duration  *string `pulumi:"duration"`
	StartTime string  `pulumi:"startTime"`
}

type ClusterMaintenancePolicyDailyMaintenanceWindowArgsInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput() ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput
	ToClusterMaintenancePolicyDailyMaintenanceWindowArgsOutputWithContext(context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput
}

type ClusterMaintenancePolicyDailyMaintenanceWindowArgsArgs struct {
	Duration  pulumi.StringPtrInput `pulumi:"duration"`
	StartTime pulumi.StringInput    `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyDailyMaintenanceWindowArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindowArgs)(nil)).Elem()
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgsArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput() ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowArgsOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgsArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput)
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgsArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgsArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput).ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutputWithContext(ctx)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput
	ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutputWithContext(context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput
}

type clusterMaintenancePolicyDailyMaintenanceWindowArgsPtrType ClusterMaintenancePolicyDailyMaintenanceWindowArgsArgs

func ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtr(v *ClusterMaintenancePolicyDailyMaintenanceWindowArgsArgs) ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrInput {
	return (*clusterMaintenancePolicyDailyMaintenanceWindowArgsPtrType)(v)
}

func (*clusterMaintenancePolicyDailyMaintenanceWindowArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyDailyMaintenanceWindowArgs)(nil)).Elem()
}

func (i *clusterMaintenancePolicyDailyMaintenanceWindowArgsPtrType) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyDailyMaintenanceWindowArgsPtrType) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindowArgs)(nil)).Elem()
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput() ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return o.ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindowArgs) *ClusterMaintenancePolicyDailyMaintenanceWindowArgs {
		return &v
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput)
}
func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindowArgs) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindowArgs) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyDailyMaintenanceWindowArgs)(nil)).Elem()
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput) Elem() ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ClusterMaintenancePolicyDailyMaintenanceWindowArgs {
		return *v
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindowArgs) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindowArgs) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyRecurringWindow struct {
	EndTime    string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime  string `pulumi:"startTime"`
}

type ClusterMaintenancePolicyRecurringWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyRecurringWindowOutput() ClusterMaintenancePolicyRecurringWindowOutput
	ToClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Context) ClusterMaintenancePolicyRecurringWindowOutput
}

type ClusterMaintenancePolicyRecurringWindowArgs struct {
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	StartTime  pulumi.StringInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyRecurringWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowOutput() ClusterMaintenancePolicyRecurringWindowOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowOutput)
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowOutput).ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx)
}

type ClusterMaintenancePolicyRecurringWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput
	ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput
}

type clusterMaintenancePolicyRecurringWindowPtrType ClusterMaintenancePolicyRecurringWindowArgs

func ClusterMaintenancePolicyRecurringWindowPtr(v *ClusterMaintenancePolicyRecurringWindowArgs) ClusterMaintenancePolicyRecurringWindowPtrInput {
	return (*clusterMaintenancePolicyRecurringWindowPtrType)(v)
}

func (*clusterMaintenancePolicyRecurringWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyRecurringWindowPtrType) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyRecurringWindowPtrType) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyRecurringWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyRecurringWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowOutput() ClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) *ClusterMaintenancePolicyRecurringWindow {
		return &v
	}).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}
func (o ClusterMaintenancePolicyRecurringWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyRecurringWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyRecurringWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) Elem() ClusterMaintenancePolicyRecurringWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindow) ClusterMaintenancePolicyRecurringWindow { return *v }).(ClusterMaintenancePolicyRecurringWindowOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyRecurringWindowArgs struct {
	EndTime    string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime  string `pulumi:"startTime"`
}

type ClusterMaintenancePolicyRecurringWindowArgsInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyRecurringWindowArgsOutput() ClusterMaintenancePolicyRecurringWindowArgsOutput
	ToClusterMaintenancePolicyRecurringWindowArgsOutputWithContext(context.Context) ClusterMaintenancePolicyRecurringWindowArgsOutput
}

type ClusterMaintenancePolicyRecurringWindowArgsArgs struct {
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	StartTime  pulumi.StringInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyRecurringWindowArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindowArgs)(nil)).Elem()
}

func (i ClusterMaintenancePolicyRecurringWindowArgsArgs) ToClusterMaintenancePolicyRecurringWindowArgsOutput() ClusterMaintenancePolicyRecurringWindowArgsOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowArgsOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyRecurringWindowArgsArgs) ToClusterMaintenancePolicyRecurringWindowArgsOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowArgsOutput)
}

func (i ClusterMaintenancePolicyRecurringWindowArgsArgs) ToClusterMaintenancePolicyRecurringWindowArgsPtrOutput() ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowArgsPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyRecurringWindowArgsArgs) ToClusterMaintenancePolicyRecurringWindowArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowArgsOutput).ToClusterMaintenancePolicyRecurringWindowArgsPtrOutputWithContext(ctx)
}

type ClusterMaintenancePolicyRecurringWindowArgsPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyRecurringWindowArgsPtrOutput() ClusterMaintenancePolicyRecurringWindowArgsPtrOutput
	ToClusterMaintenancePolicyRecurringWindowArgsPtrOutputWithContext(context.Context) ClusterMaintenancePolicyRecurringWindowArgsPtrOutput
}

type clusterMaintenancePolicyRecurringWindowArgsPtrType ClusterMaintenancePolicyRecurringWindowArgsArgs

func ClusterMaintenancePolicyRecurringWindowArgsPtr(v *ClusterMaintenancePolicyRecurringWindowArgsArgs) ClusterMaintenancePolicyRecurringWindowArgsPtrInput {
	return (*clusterMaintenancePolicyRecurringWindowArgsPtrType)(v)
}

func (*clusterMaintenancePolicyRecurringWindowArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyRecurringWindowArgs)(nil)).Elem()
}

func (i *clusterMaintenancePolicyRecurringWindowArgsPtrType) ToClusterMaintenancePolicyRecurringWindowArgsPtrOutput() ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowArgsPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyRecurringWindowArgsPtrType) ToClusterMaintenancePolicyRecurringWindowArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowArgsPtrOutput)
}

type ClusterMaintenancePolicyRecurringWindowArgsOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyRecurringWindowArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindowArgs)(nil)).Elem()
}

func (o ClusterMaintenancePolicyRecurringWindowArgsOutput) ToClusterMaintenancePolicyRecurringWindowArgsOutput() ClusterMaintenancePolicyRecurringWindowArgsOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowArgsOutput) ToClusterMaintenancePolicyRecurringWindowArgsOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowArgsOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowArgsOutput) ToClusterMaintenancePolicyRecurringWindowArgsPtrOutput() ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return o.ToClusterMaintenancePolicyRecurringWindowArgsPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyRecurringWindowArgsOutput) ToClusterMaintenancePolicyRecurringWindowArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindowArgs) *ClusterMaintenancePolicyRecurringWindowArgs {
		return &v
	}).(ClusterMaintenancePolicyRecurringWindowArgsPtrOutput)
}
func (o ClusterMaintenancePolicyRecurringWindowArgsOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindowArgs) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowArgsOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindowArgs) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowArgsOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindowArgs) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyRecurringWindowArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyRecurringWindowArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyRecurringWindowArgs)(nil)).Elem()
}

func (o ClusterMaintenancePolicyRecurringWindowArgsPtrOutput) ToClusterMaintenancePolicyRecurringWindowArgsPtrOutput() ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowArgsPtrOutput) ToClusterMaintenancePolicyRecurringWindowArgsPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowArgsPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowArgsPtrOutput) Elem() ClusterMaintenancePolicyRecurringWindowArgsOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindowArgs) ClusterMaintenancePolicyRecurringWindowArgs {
		return *v
	}).(ClusterMaintenancePolicyRecurringWindowArgsOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowArgsPtrOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindowArgs) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowArgsPtrOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindowArgs) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowArgsPtrOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindowArgs) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyState struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	DailyMaintenanceWindow *ClusterMaintenancePolicyStateDailyMaintenanceWindow `pulumi:"dailyMaintenanceWindow"`
	// Time window for
	// recurring maintenance operations.
	RecurringWindow *ClusterMaintenancePolicyStateRecurringWindow `pulumi:"recurringWindow"`
}

type ClusterMaintenancePolicyStateInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyStateOutput() ClusterMaintenancePolicyStateOutput
	ToClusterMaintenancePolicyStateOutputWithContext(context.Context) ClusterMaintenancePolicyStateOutput
}

type ClusterMaintenancePolicyStateArgs struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	DailyMaintenanceWindow ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrInput `pulumi:"dailyMaintenanceWindow"`
	// Time window for
	// recurring maintenance operations.
	RecurringWindow ClusterMaintenancePolicyStateRecurringWindowPtrInput `pulumi:"recurringWindow"`
}

func (ClusterMaintenancePolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyState)(nil)).Elem()
}

func (i ClusterMaintenancePolicyStateArgs) ToClusterMaintenancePolicyStateOutput() ClusterMaintenancePolicyStateOutput {
	return i.ToClusterMaintenancePolicyStateOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyStateArgs) ToClusterMaintenancePolicyStateOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyStateOutput)
}

type ClusterMaintenancePolicyStateOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyState)(nil)).Elem()
}

func (o ClusterMaintenancePolicyStateOutput) ToClusterMaintenancePolicyStateOutput() ClusterMaintenancePolicyStateOutput {
	return o
}

func (o ClusterMaintenancePolicyStateOutput) ToClusterMaintenancePolicyStateOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateOutput {
	return o
}

// Time window specified for daily maintenance operations.
// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
func (o ClusterMaintenancePolicyStateOutput) DailyMaintenanceWindow() ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyState) *ClusterMaintenancePolicyStateDailyMaintenanceWindow {
		return v.DailyMaintenanceWindow
	}).(ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput)
}

// Time window for
// recurring maintenance operations.
func (o ClusterMaintenancePolicyStateOutput) RecurringWindow() ClusterMaintenancePolicyStateRecurringWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyState) *ClusterMaintenancePolicyStateRecurringWindow {
		return v.RecurringWindow
	}).(ClusterMaintenancePolicyStateRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyStateDailyMaintenanceWindow struct {
	Duration  *string `pulumi:"duration"`
	StartTime string  `pulumi:"startTime"`
}

type ClusterMaintenancePolicyStateDailyMaintenanceWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyStateDailyMaintenanceWindowOutput() ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput
	ToClusterMaintenancePolicyStateDailyMaintenanceWindowOutputWithContext(context.Context) ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput
}

type ClusterMaintenancePolicyStateDailyMaintenanceWindowArgs struct {
	Duration  pulumi.StringPtrInput `pulumi:"duration"`
	StartTime pulumi.StringInput    `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyStateDailyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyStateDailyMaintenanceWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyStateDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyStateDailyMaintenanceWindowOutput() ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput {
	return i.ToClusterMaintenancePolicyStateDailyMaintenanceWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyStateDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyStateDailyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput)
}

func (i ClusterMaintenancePolicyStateDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyStateDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput).ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutputWithContext(ctx)
}

type ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput
	ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput
}

type clusterMaintenancePolicyStateDailyMaintenanceWindowPtrType ClusterMaintenancePolicyStateDailyMaintenanceWindowArgs

func ClusterMaintenancePolicyStateDailyMaintenanceWindowPtr(v *ClusterMaintenancePolicyStateDailyMaintenanceWindowArgs) ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrInput {
	return (*clusterMaintenancePolicyStateDailyMaintenanceWindowPtrType)(v)
}

func (*clusterMaintenancePolicyStateDailyMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyStateDailyMaintenanceWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyStateDailyMaintenanceWindowPtrType) ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyStateDailyMaintenanceWindowPtrType) ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput)
}

type ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyStateDailyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyStateDailyMaintenanceWindowOutput() ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyStateDailyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput {
	return o.ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateDailyMaintenanceWindow) *ClusterMaintenancePolicyStateDailyMaintenanceWindow {
		return &v
	}).(ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput)
}
func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateDailyMaintenanceWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateDailyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyStateDailyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput) ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput) ToClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput) Elem() ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyStateDailyMaintenanceWindow) ClusterMaintenancePolicyStateDailyMaintenanceWindow {
		return *v
	}).(ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput)
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateDailyMaintenanceWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateDailyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyStateRecurringWindow struct {
	EndTime    string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime  string `pulumi:"startTime"`
}

type ClusterMaintenancePolicyStateRecurringWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyStateRecurringWindowOutput() ClusterMaintenancePolicyStateRecurringWindowOutput
	ToClusterMaintenancePolicyStateRecurringWindowOutputWithContext(context.Context) ClusterMaintenancePolicyStateRecurringWindowOutput
}

type ClusterMaintenancePolicyStateRecurringWindowArgs struct {
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	StartTime  pulumi.StringInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyStateRecurringWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyStateRecurringWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyStateRecurringWindowArgs) ToClusterMaintenancePolicyStateRecurringWindowOutput() ClusterMaintenancePolicyStateRecurringWindowOutput {
	return i.ToClusterMaintenancePolicyStateRecurringWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyStateRecurringWindowArgs) ToClusterMaintenancePolicyStateRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateRecurringWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyStateRecurringWindowOutput)
}

func (i ClusterMaintenancePolicyStateRecurringWindowArgs) ToClusterMaintenancePolicyStateRecurringWindowPtrOutput() ClusterMaintenancePolicyStateRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyStateRecurringWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyStateRecurringWindowArgs) ToClusterMaintenancePolicyStateRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyStateRecurringWindowOutput).ToClusterMaintenancePolicyStateRecurringWindowPtrOutputWithContext(ctx)
}

type ClusterMaintenancePolicyStateRecurringWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyStateRecurringWindowPtrOutput() ClusterMaintenancePolicyStateRecurringWindowPtrOutput
	ToClusterMaintenancePolicyStateRecurringWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyStateRecurringWindowPtrOutput
}

type clusterMaintenancePolicyStateRecurringWindowPtrType ClusterMaintenancePolicyStateRecurringWindowArgs

func ClusterMaintenancePolicyStateRecurringWindowPtr(v *ClusterMaintenancePolicyStateRecurringWindowArgs) ClusterMaintenancePolicyStateRecurringWindowPtrInput {
	return (*clusterMaintenancePolicyStateRecurringWindowPtrType)(v)
}

func (*clusterMaintenancePolicyStateRecurringWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyStateRecurringWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyStateRecurringWindowPtrType) ToClusterMaintenancePolicyStateRecurringWindowPtrOutput() ClusterMaintenancePolicyStateRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyStateRecurringWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyStateRecurringWindowPtrType) ToClusterMaintenancePolicyStateRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyStateRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyStateRecurringWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyStateRecurringWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyStateRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyStateRecurringWindowOutput) ToClusterMaintenancePolicyStateRecurringWindowOutput() ClusterMaintenancePolicyStateRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyStateRecurringWindowOutput) ToClusterMaintenancePolicyStateRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyStateRecurringWindowOutput) ToClusterMaintenancePolicyStateRecurringWindowPtrOutput() ClusterMaintenancePolicyStateRecurringWindowPtrOutput {
	return o.ToClusterMaintenancePolicyStateRecurringWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyStateRecurringWindowOutput) ToClusterMaintenancePolicyStateRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateRecurringWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateRecurringWindow) *ClusterMaintenancePolicyStateRecurringWindow {
		return &v
	}).(ClusterMaintenancePolicyStateRecurringWindowPtrOutput)
}
func (o ClusterMaintenancePolicyStateRecurringWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateRecurringWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyStateRecurringWindowOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateRecurringWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyStateRecurringWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateRecurringWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyStateRecurringWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyStateRecurringWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyStateRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyStateRecurringWindowPtrOutput) ToClusterMaintenancePolicyStateRecurringWindowPtrOutput() ClusterMaintenancePolicyStateRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyStateRecurringWindowPtrOutput) ToClusterMaintenancePolicyStateRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyStateRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyStateRecurringWindowPtrOutput) Elem() ClusterMaintenancePolicyStateRecurringWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyStateRecurringWindow) ClusterMaintenancePolicyStateRecurringWindow {
		return *v
	}).(ClusterMaintenancePolicyStateRecurringWindowOutput)
}

func (o ClusterMaintenancePolicyStateRecurringWindowPtrOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateRecurringWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyStateRecurringWindowPtrOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateRecurringWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyStateRecurringWindowPtrOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyStateRecurringWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMasterAuth struct {
	ClientCertificate string `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig ClusterMasterAuthClientCertificateConfig `pulumi:"clientCertificateConfig"`
	ClientKey               string                                   `pulumi:"clientKey"`
	ClusterCaCertificate    string                                   `pulumi:"clusterCaCertificate"`
	// The password to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint.
	Password *string `pulumi:"password"`
	// The username to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint. If not present basic auth will be disabled.
	Username *string `pulumi:"username"`
}

type ClusterMasterAuthInput interface {
	pulumi.Input

	ToClusterMasterAuthOutput() ClusterMasterAuthOutput
	ToClusterMasterAuthOutputWithContext(context.Context) ClusterMasterAuthOutput
}

type ClusterMasterAuthArgs struct {
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig ClusterMasterAuthClientCertificateConfigInput `pulumi:"clientCertificateConfig"`
	ClientKey               pulumi.StringInput                            `pulumi:"clientKey"`
	ClusterCaCertificate    pulumi.StringInput                            `pulumi:"clusterCaCertificate"`
	// The password to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint. If not present basic auth will be disabled.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ClusterMasterAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuth)(nil)).Elem()
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthOutput() ClusterMasterAuthOutput {
	return i.ToClusterMasterAuthOutputWithContext(context.Background())
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthOutputWithContext(ctx context.Context) ClusterMasterAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthOutput)
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return i.ToClusterMasterAuthPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthOutput).ToClusterMasterAuthPtrOutputWithContext(ctx)
}

type ClusterMasterAuthPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput
	ToClusterMasterAuthPtrOutputWithContext(context.Context) ClusterMasterAuthPtrOutput
}

type clusterMasterAuthPtrType ClusterMasterAuthArgs

func ClusterMasterAuthPtr(v *ClusterMasterAuthArgs) ClusterMasterAuthPtrInput {
	return (*clusterMasterAuthPtrType)(v)
}

func (*clusterMasterAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuth)(nil)).Elem()
}

func (i *clusterMasterAuthPtrType) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return i.ToClusterMasterAuthPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthPtrType) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthPtrOutput)
}

type ClusterMasterAuthOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuth)(nil)).Elem()
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthOutput() ClusterMasterAuthOutput {
	return o
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthOutputWithContext(ctx context.Context) ClusterMasterAuthOutput {
	return o
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return o.ToClusterMasterAuthPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *ClusterMasterAuth {
		return &v
	}).(ClusterMasterAuthPtrOutput)
}
func (o ClusterMasterAuthOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuth) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// Whether client certificate authorization is enabled for this cluster.  For example:
func (o ClusterMasterAuthOutput) ClientCertificateConfig() ClusterMasterAuthClientCertificateConfigOutput {
	return o.ApplyT(func(v ClusterMasterAuth) ClusterMasterAuthClientCertificateConfig { return v.ClientCertificateConfig }).(ClusterMasterAuthClientCertificateConfigOutput)
}

func (o ClusterMasterAuthOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuth) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o ClusterMasterAuthOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuth) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The password to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint.
func (o ClusterMasterAuthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint. If not present basic auth will be disabled.
func (o ClusterMasterAuthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuth)(nil)).Elem()
}

func (o ClusterMasterAuthPtrOutput) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return o
}

func (o ClusterMasterAuthPtrOutput) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return o
}

func (o ClusterMasterAuthPtrOutput) Elem() ClusterMasterAuthOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) ClusterMasterAuth { return *v }).(ClusterMasterAuthOutput)
}

func (o ClusterMasterAuthPtrOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuth) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// Whether client certificate authorization is enabled for this cluster.  For example:
func (o ClusterMasterAuthPtrOutput) ClientCertificateConfig() ClusterMasterAuthClientCertificateConfigOutput {
	return o.ApplyT(func(v ClusterMasterAuth) ClusterMasterAuthClientCertificateConfig { return v.ClientCertificateConfig }).(ClusterMasterAuthClientCertificateConfigOutput)
}

func (o ClusterMasterAuthPtrOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuth) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o ClusterMasterAuthPtrOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuth) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The password to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint.
func (o ClusterMasterAuthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint. If not present basic auth will be disabled.
func (o ClusterMasterAuthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthArgs struct {
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig *ClusterMasterAuthClientCertificateConfigArgs `pulumi:"clientCertificateConfig"`
	ClientKey               *string                                       `pulumi:"clientKey"`
	ClusterCaCertificate    *string                                       `pulumi:"clusterCaCertificate"`
	// The password to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint.
	Password *string `pulumi:"password"`
	// The username to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint. If not present basic auth will be disabled.
	Username *string `pulumi:"username"`
}

type ClusterMasterAuthArgsInput interface {
	pulumi.Input

	ToClusterMasterAuthArgsOutput() ClusterMasterAuthArgsOutput
	ToClusterMasterAuthArgsOutputWithContext(context.Context) ClusterMasterAuthArgsOutput
}

type ClusterMasterAuthArgsArgs struct {
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig ClusterMasterAuthClientCertificateConfigArgsPtrInput `pulumi:"clientCertificateConfig"`
	ClientKey               pulumi.StringPtrInput                                `pulumi:"clientKey"`
	ClusterCaCertificate    pulumi.StringPtrInput                                `pulumi:"clusterCaCertificate"`
	// The password to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint. If not present basic auth will be disabled.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ClusterMasterAuthArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthArgs)(nil)).Elem()
}

func (i ClusterMasterAuthArgsArgs) ToClusterMasterAuthArgsOutput() ClusterMasterAuthArgsOutput {
	return i.ToClusterMasterAuthArgsOutputWithContext(context.Background())
}

func (i ClusterMasterAuthArgsArgs) ToClusterMasterAuthArgsOutputWithContext(ctx context.Context) ClusterMasterAuthArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthArgsOutput)
}

func (i ClusterMasterAuthArgsArgs) ToClusterMasterAuthArgsPtrOutput() ClusterMasterAuthArgsPtrOutput {
	return i.ToClusterMasterAuthArgsPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthArgsArgs) ToClusterMasterAuthArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthArgsOutput).ToClusterMasterAuthArgsPtrOutputWithContext(ctx)
}

type ClusterMasterAuthArgsPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthArgsPtrOutput() ClusterMasterAuthArgsPtrOutput
	ToClusterMasterAuthArgsPtrOutputWithContext(context.Context) ClusterMasterAuthArgsPtrOutput
}

type clusterMasterAuthArgsPtrType ClusterMasterAuthArgsArgs

func ClusterMasterAuthArgsPtr(v *ClusterMasterAuthArgsArgs) ClusterMasterAuthArgsPtrInput {
	return (*clusterMasterAuthArgsPtrType)(v)
}

func (*clusterMasterAuthArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthArgs)(nil)).Elem()
}

func (i *clusterMasterAuthArgsPtrType) ToClusterMasterAuthArgsPtrOutput() ClusterMasterAuthArgsPtrOutput {
	return i.ToClusterMasterAuthArgsPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthArgsPtrType) ToClusterMasterAuthArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthArgsPtrOutput)
}

type ClusterMasterAuthArgsOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthArgs)(nil)).Elem()
}

func (o ClusterMasterAuthArgsOutput) ToClusterMasterAuthArgsOutput() ClusterMasterAuthArgsOutput {
	return o
}

func (o ClusterMasterAuthArgsOutput) ToClusterMasterAuthArgsOutputWithContext(ctx context.Context) ClusterMasterAuthArgsOutput {
	return o
}

func (o ClusterMasterAuthArgsOutput) ToClusterMasterAuthArgsPtrOutput() ClusterMasterAuthArgsPtrOutput {
	return o.ToClusterMasterAuthArgsPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthArgsOutput) ToClusterMasterAuthArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthArgsPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *ClusterMasterAuthArgs {
		return &v
	}).(ClusterMasterAuthArgsPtrOutput)
}
func (o ClusterMasterAuthArgsOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Whether client certificate authorization is enabled for this cluster.  For example:
func (o ClusterMasterAuthArgsOutput) ClientCertificateConfig() ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *ClusterMasterAuthClientCertificateConfigArgs {
		return v.ClientCertificateConfig
	}).(ClusterMasterAuthClientCertificateConfigArgsPtrOutput)
}

func (o ClusterMasterAuthArgsOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterAuthArgsOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The password to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint.
func (o ClusterMasterAuthArgsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint. If not present basic auth will be disabled.
func (o ClusterMasterAuthArgsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthArgs)(nil)).Elem()
}

func (o ClusterMasterAuthArgsPtrOutput) ToClusterMasterAuthArgsPtrOutput() ClusterMasterAuthArgsPtrOutput {
	return o
}

func (o ClusterMasterAuthArgsPtrOutput) ToClusterMasterAuthArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthArgsPtrOutput {
	return o
}

func (o ClusterMasterAuthArgsPtrOutput) Elem() ClusterMasterAuthArgsOutput {
	return o.ApplyT(func(v *ClusterMasterAuthArgs) ClusterMasterAuthArgs { return *v }).(ClusterMasterAuthArgsOutput)
}

func (o ClusterMasterAuthArgsPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Whether client certificate authorization is enabled for this cluster.  For example:
func (o ClusterMasterAuthArgsPtrOutput) ClientCertificateConfig() ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *ClusterMasterAuthClientCertificateConfigArgs {
		return v.ClientCertificateConfig
	}).(ClusterMasterAuthClientCertificateConfigArgsPtrOutput)
}

func (o ClusterMasterAuthArgsPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterAuthArgsPtrOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The password to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint.
func (o ClusterMasterAuthArgsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint. If not present basic auth will be disabled.
func (o ClusterMasterAuthArgsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthArgs) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthClientCertificateConfig struct {
	IssueClientCertificate bool `pulumi:"issueClientCertificate"`
}

type ClusterMasterAuthClientCertificateConfigInput interface {
	pulumi.Input

	ToClusterMasterAuthClientCertificateConfigOutput() ClusterMasterAuthClientCertificateConfigOutput
	ToClusterMasterAuthClientCertificateConfigOutputWithContext(context.Context) ClusterMasterAuthClientCertificateConfigOutput
}

type ClusterMasterAuthClientCertificateConfigArgs struct {
	IssueClientCertificate pulumi.BoolInput `pulumi:"issueClientCertificate"`
}

func (ClusterMasterAuthClientCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigOutput() ClusterMasterAuthClientCertificateConfigOutput {
	return i.ToClusterMasterAuthClientCertificateConfigOutputWithContext(context.Background())
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigOutput)
}

type ClusterMasterAuthClientCertificateConfigOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthClientCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigOutput() ClusterMasterAuthClientCertificateConfigOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigOutput) IssueClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMasterAuthClientCertificateConfig) bool { return v.IssueClientCertificate }).(pulumi.BoolOutput)
}

type ClusterMasterAuthClientCertificateConfigArgs struct {
	IssueClientCertificate bool `pulumi:"issueClientCertificate"`
}

type ClusterMasterAuthClientCertificateConfigArgsInput interface {
	pulumi.Input

	ToClusterMasterAuthClientCertificateConfigArgsOutput() ClusterMasterAuthClientCertificateConfigArgsOutput
	ToClusterMasterAuthClientCertificateConfigArgsOutputWithContext(context.Context) ClusterMasterAuthClientCertificateConfigArgsOutput
}

type ClusterMasterAuthClientCertificateConfigArgsArgs struct {
	IssueClientCertificate pulumi.BoolInput `pulumi:"issueClientCertificate"`
}

func (ClusterMasterAuthClientCertificateConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthClientCertificateConfigArgs)(nil)).Elem()
}

func (i ClusterMasterAuthClientCertificateConfigArgsArgs) ToClusterMasterAuthClientCertificateConfigArgsOutput() ClusterMasterAuthClientCertificateConfigArgsOutput {
	return i.ToClusterMasterAuthClientCertificateConfigArgsOutputWithContext(context.Background())
}

func (i ClusterMasterAuthClientCertificateConfigArgsArgs) ToClusterMasterAuthClientCertificateConfigArgsOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigArgsOutput)
}

func (i ClusterMasterAuthClientCertificateConfigArgsArgs) ToClusterMasterAuthClientCertificateConfigArgsPtrOutput() ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return i.ToClusterMasterAuthClientCertificateConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthClientCertificateConfigArgsArgs) ToClusterMasterAuthClientCertificateConfigArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigArgsOutput).ToClusterMasterAuthClientCertificateConfigArgsPtrOutputWithContext(ctx)
}

type ClusterMasterAuthClientCertificateConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthClientCertificateConfigArgsPtrOutput() ClusterMasterAuthClientCertificateConfigArgsPtrOutput
	ToClusterMasterAuthClientCertificateConfigArgsPtrOutputWithContext(context.Context) ClusterMasterAuthClientCertificateConfigArgsPtrOutput
}

type clusterMasterAuthClientCertificateConfigArgsPtrType ClusterMasterAuthClientCertificateConfigArgsArgs

func ClusterMasterAuthClientCertificateConfigArgsPtr(v *ClusterMasterAuthClientCertificateConfigArgsArgs) ClusterMasterAuthClientCertificateConfigArgsPtrInput {
	return (*clusterMasterAuthClientCertificateConfigArgsPtrType)(v)
}

func (*clusterMasterAuthClientCertificateConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthClientCertificateConfigArgs)(nil)).Elem()
}

func (i *clusterMasterAuthClientCertificateConfigArgsPtrType) ToClusterMasterAuthClientCertificateConfigArgsPtrOutput() ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return i.ToClusterMasterAuthClientCertificateConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthClientCertificateConfigArgsPtrType) ToClusterMasterAuthClientCertificateConfigArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigArgsPtrOutput)
}

type ClusterMasterAuthClientCertificateConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthClientCertificateConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthClientCertificateConfigArgs)(nil)).Elem()
}

func (o ClusterMasterAuthClientCertificateConfigArgsOutput) ToClusterMasterAuthClientCertificateConfigArgsOutput() ClusterMasterAuthClientCertificateConfigArgsOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigArgsOutput) ToClusterMasterAuthClientCertificateConfigArgsOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigArgsOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigArgsOutput) ToClusterMasterAuthClientCertificateConfigArgsPtrOutput() ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return o.ToClusterMasterAuthClientCertificateConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthClientCertificateConfigArgsOutput) ToClusterMasterAuthClientCertificateConfigArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthClientCertificateConfigArgs) *ClusterMasterAuthClientCertificateConfigArgs {
		return &v
	}).(ClusterMasterAuthClientCertificateConfigArgsPtrOutput)
}
func (o ClusterMasterAuthClientCertificateConfigArgsOutput) IssueClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMasterAuthClientCertificateConfigArgs) bool { return v.IssueClientCertificate }).(pulumi.BoolOutput)
}

type ClusterMasterAuthClientCertificateConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthClientCertificateConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthClientCertificateConfigArgs)(nil)).Elem()
}

func (o ClusterMasterAuthClientCertificateConfigArgsPtrOutput) ToClusterMasterAuthClientCertificateConfigArgsPtrOutput() ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigArgsPtrOutput) ToClusterMasterAuthClientCertificateConfigArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigArgsPtrOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigArgsPtrOutput) Elem() ClusterMasterAuthClientCertificateConfigArgsOutput {
	return o.ApplyT(func(v *ClusterMasterAuthClientCertificateConfigArgs) ClusterMasterAuthClientCertificateConfigArgs {
		return *v
	}).(ClusterMasterAuthClientCertificateConfigArgsOutput)
}

func (o ClusterMasterAuthClientCertificateConfigArgsPtrOutput) IssueClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMasterAuthClientCertificateConfigArgs) bool { return v.IssueClientCertificate }).(pulumi.BoolOutput)
}

type ClusterMasterAuthState struct {
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig *ClusterMasterAuthStateClientCertificateConfig `pulumi:"clientCertificateConfig"`
	ClientKey               *string                                        `pulumi:"clientKey"`
	ClusterCaCertificate    *string                                        `pulumi:"clusterCaCertificate"`
	// The password to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint.
	Password *string `pulumi:"password"`
	// The username to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint. If not present basic auth will be disabled.
	Username *string `pulumi:"username"`
}

type ClusterMasterAuthStateInput interface {
	pulumi.Input

	ToClusterMasterAuthStateOutput() ClusterMasterAuthStateOutput
	ToClusterMasterAuthStateOutputWithContext(context.Context) ClusterMasterAuthStateOutput
}

type ClusterMasterAuthStateArgs struct {
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig ClusterMasterAuthStateClientCertificateConfigPtrInput `pulumi:"clientCertificateConfig"`
	ClientKey               pulumi.StringPtrInput                                 `pulumi:"clientKey"`
	ClusterCaCertificate    pulumi.StringPtrInput                                 `pulumi:"clusterCaCertificate"`
	// The password to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint. If not present basic auth will be disabled.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ClusterMasterAuthStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthState)(nil)).Elem()
}

func (i ClusterMasterAuthStateArgs) ToClusterMasterAuthStateOutput() ClusterMasterAuthStateOutput {
	return i.ToClusterMasterAuthStateOutputWithContext(context.Background())
}

func (i ClusterMasterAuthStateArgs) ToClusterMasterAuthStateOutputWithContext(ctx context.Context) ClusterMasterAuthStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthStateOutput)
}

type ClusterMasterAuthStateOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthState)(nil)).Elem()
}

func (o ClusterMasterAuthStateOutput) ToClusterMasterAuthStateOutput() ClusterMasterAuthStateOutput {
	return o
}

func (o ClusterMasterAuthStateOutput) ToClusterMasterAuthStateOutputWithContext(ctx context.Context) ClusterMasterAuthStateOutput {
	return o
}

func (o ClusterMasterAuthStateOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthState) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Whether client certificate authorization is enabled for this cluster.  For example:
func (o ClusterMasterAuthStateOutput) ClientCertificateConfig() ClusterMasterAuthStateClientCertificateConfigPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthState) *ClusterMasterAuthStateClientCertificateConfig {
		return v.ClientCertificateConfig
	}).(ClusterMasterAuthStateClientCertificateConfigPtrOutput)
}

func (o ClusterMasterAuthStateOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthState) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterAuthStateOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthState) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The password to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint.
func (o ClusterMasterAuthStateOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthState) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint. If not present basic auth will be disabled.
func (o ClusterMasterAuthStateOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthState) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthStateClientCertificateConfig struct {
	IssueClientCertificate bool `pulumi:"issueClientCertificate"`
}

type ClusterMasterAuthStateClientCertificateConfigInput interface {
	pulumi.Input

	ToClusterMasterAuthStateClientCertificateConfigOutput() ClusterMasterAuthStateClientCertificateConfigOutput
	ToClusterMasterAuthStateClientCertificateConfigOutputWithContext(context.Context) ClusterMasterAuthStateClientCertificateConfigOutput
}

type ClusterMasterAuthStateClientCertificateConfigArgs struct {
	IssueClientCertificate pulumi.BoolInput `pulumi:"issueClientCertificate"`
}

func (ClusterMasterAuthStateClientCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthStateClientCertificateConfig)(nil)).Elem()
}

func (i ClusterMasterAuthStateClientCertificateConfigArgs) ToClusterMasterAuthStateClientCertificateConfigOutput() ClusterMasterAuthStateClientCertificateConfigOutput {
	return i.ToClusterMasterAuthStateClientCertificateConfigOutputWithContext(context.Background())
}

func (i ClusterMasterAuthStateClientCertificateConfigArgs) ToClusterMasterAuthStateClientCertificateConfigOutputWithContext(ctx context.Context) ClusterMasterAuthStateClientCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthStateClientCertificateConfigOutput)
}

func (i ClusterMasterAuthStateClientCertificateConfigArgs) ToClusterMasterAuthStateClientCertificateConfigPtrOutput() ClusterMasterAuthStateClientCertificateConfigPtrOutput {
	return i.ToClusterMasterAuthStateClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthStateClientCertificateConfigArgs) ToClusterMasterAuthStateClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthStateClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthStateClientCertificateConfigOutput).ToClusterMasterAuthStateClientCertificateConfigPtrOutputWithContext(ctx)
}

type ClusterMasterAuthStateClientCertificateConfigPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthStateClientCertificateConfigPtrOutput() ClusterMasterAuthStateClientCertificateConfigPtrOutput
	ToClusterMasterAuthStateClientCertificateConfigPtrOutputWithContext(context.Context) ClusterMasterAuthStateClientCertificateConfigPtrOutput
}

type clusterMasterAuthStateClientCertificateConfigPtrType ClusterMasterAuthStateClientCertificateConfigArgs

func ClusterMasterAuthStateClientCertificateConfigPtr(v *ClusterMasterAuthStateClientCertificateConfigArgs) ClusterMasterAuthStateClientCertificateConfigPtrInput {
	return (*clusterMasterAuthStateClientCertificateConfigPtrType)(v)
}

func (*clusterMasterAuthStateClientCertificateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthStateClientCertificateConfig)(nil)).Elem()
}

func (i *clusterMasterAuthStateClientCertificateConfigPtrType) ToClusterMasterAuthStateClientCertificateConfigPtrOutput() ClusterMasterAuthStateClientCertificateConfigPtrOutput {
	return i.ToClusterMasterAuthStateClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthStateClientCertificateConfigPtrType) ToClusterMasterAuthStateClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthStateClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthStateClientCertificateConfigPtrOutput)
}

type ClusterMasterAuthStateClientCertificateConfigOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthStateClientCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthStateClientCertificateConfig)(nil)).Elem()
}

func (o ClusterMasterAuthStateClientCertificateConfigOutput) ToClusterMasterAuthStateClientCertificateConfigOutput() ClusterMasterAuthStateClientCertificateConfigOutput {
	return o
}

func (o ClusterMasterAuthStateClientCertificateConfigOutput) ToClusterMasterAuthStateClientCertificateConfigOutputWithContext(ctx context.Context) ClusterMasterAuthStateClientCertificateConfigOutput {
	return o
}

func (o ClusterMasterAuthStateClientCertificateConfigOutput) ToClusterMasterAuthStateClientCertificateConfigPtrOutput() ClusterMasterAuthStateClientCertificateConfigPtrOutput {
	return o.ToClusterMasterAuthStateClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthStateClientCertificateConfigOutput) ToClusterMasterAuthStateClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthStateClientCertificateConfigPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthStateClientCertificateConfig) *ClusterMasterAuthStateClientCertificateConfig {
		return &v
	}).(ClusterMasterAuthStateClientCertificateConfigPtrOutput)
}
func (o ClusterMasterAuthStateClientCertificateConfigOutput) IssueClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMasterAuthStateClientCertificateConfig) bool { return v.IssueClientCertificate }).(pulumi.BoolOutput)
}

type ClusterMasterAuthStateClientCertificateConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthStateClientCertificateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthStateClientCertificateConfig)(nil)).Elem()
}

func (o ClusterMasterAuthStateClientCertificateConfigPtrOutput) ToClusterMasterAuthStateClientCertificateConfigPtrOutput() ClusterMasterAuthStateClientCertificateConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthStateClientCertificateConfigPtrOutput) ToClusterMasterAuthStateClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthStateClientCertificateConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthStateClientCertificateConfigPtrOutput) Elem() ClusterMasterAuthStateClientCertificateConfigOutput {
	return o.ApplyT(func(v *ClusterMasterAuthStateClientCertificateConfig) ClusterMasterAuthStateClientCertificateConfig {
		return *v
	}).(ClusterMasterAuthStateClientCertificateConfigOutput)
}

func (o ClusterMasterAuthStateClientCertificateConfigPtrOutput) IssueClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMasterAuthStateClientCertificateConfig) bool { return v.IssueClientCertificate }).(pulumi.BoolOutput)
}

type ClusterMasterAuthorizedNetworksConfig struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks []ClusterMasterAuthorizedNetworksConfigCidrBlock `pulumi:"cidrBlocks"`
}

type ClusterMasterAuthorizedNetworksConfigInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigOutput() ClusterMasterAuthorizedNetworksConfigOutput
	ToClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigOutput
}

type ClusterMasterAuthorizedNetworksConfigArgs struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput `pulumi:"cidrBlocks"`
}

func (ClusterMasterAuthorizedNetworksConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigOutput() ClusterMasterAuthorizedNetworksConfigOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigOutput)
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigOutput).ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx)
}

type ClusterMasterAuthorizedNetworksConfigPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput
	ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput
}

type clusterMasterAuthorizedNetworksConfigPtrType ClusterMasterAuthorizedNetworksConfigArgs

func ClusterMasterAuthorizedNetworksConfigPtr(v *ClusterMasterAuthorizedNetworksConfigArgs) ClusterMasterAuthorizedNetworksConfigPtrInput {
	return (*clusterMasterAuthorizedNetworksConfigPtrType)(v)
}

func (*clusterMasterAuthorizedNetworksConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i *clusterMasterAuthorizedNetworksConfigPtrType) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthorizedNetworksConfigPtrType) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigOutput() ClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o.ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfig) *ClusterMasterAuthorizedNetworksConfig {
		return &v
	}).(ClusterMasterAuthorizedNetworksConfigPtrOutput)
}

// External networks that can access the
// Kubernetes cluster master through HTTPS.
func (o ClusterMasterAuthorizedNetworksConfigOutput) CidrBlocks() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfig) []ClusterMasterAuthorizedNetworksConfigCidrBlock {
		return v.CidrBlocks
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) Elem() ClusterMasterAuthorizedNetworksConfigOutput {
	return o.ApplyT(func(v *ClusterMasterAuthorizedNetworksConfig) ClusterMasterAuthorizedNetworksConfig { return *v }).(ClusterMasterAuthorizedNetworksConfigOutput)
}

// External networks that can access the
// Kubernetes cluster master through HTTPS.
func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) CidrBlocks() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfig) []ClusterMasterAuthorizedNetworksConfigCidrBlock {
		return v.CidrBlocks
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigArgs struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks []ClusterMasterAuthorizedNetworksConfigCidrBlockArgs `pulumi:"cidrBlocks"`
}

type ClusterMasterAuthorizedNetworksConfigArgsInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigArgsOutput() ClusterMasterAuthorizedNetworksConfigArgsOutput
	ToClusterMasterAuthorizedNetworksConfigArgsOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigArgsOutput
}

type ClusterMasterAuthorizedNetworksConfigArgsArgs struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayInput `pulumi:"cidrBlocks"`
}

func (ClusterMasterAuthorizedNetworksConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigArgs)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigArgsArgs) ToClusterMasterAuthorizedNetworksConfigArgsOutput() ClusterMasterAuthorizedNetworksConfigArgsOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigArgsOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigArgsArgs) ToClusterMasterAuthorizedNetworksConfigArgsOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigArgsOutput)
}

func (i ClusterMasterAuthorizedNetworksConfigArgsArgs) ToClusterMasterAuthorizedNetworksConfigArgsPtrOutput() ClusterMasterAuthorizedNetworksConfigArgsPtrOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigArgsArgs) ToClusterMasterAuthorizedNetworksConfigArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigArgsOutput).ToClusterMasterAuthorizedNetworksConfigArgsPtrOutputWithContext(ctx)
}

type ClusterMasterAuthorizedNetworksConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigArgsPtrOutput() ClusterMasterAuthorizedNetworksConfigArgsPtrOutput
	ToClusterMasterAuthorizedNetworksConfigArgsPtrOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigArgsPtrOutput
}

type clusterMasterAuthorizedNetworksConfigArgsPtrType ClusterMasterAuthorizedNetworksConfigArgsArgs

func ClusterMasterAuthorizedNetworksConfigArgsPtr(v *ClusterMasterAuthorizedNetworksConfigArgsArgs) ClusterMasterAuthorizedNetworksConfigArgsPtrInput {
	return (*clusterMasterAuthorizedNetworksConfigArgsPtrType)(v)
}

func (*clusterMasterAuthorizedNetworksConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthorizedNetworksConfigArgs)(nil)).Elem()
}

func (i *clusterMasterAuthorizedNetworksConfigArgsPtrType) ToClusterMasterAuthorizedNetworksConfigArgsPtrOutput() ClusterMasterAuthorizedNetworksConfigArgsPtrOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthorizedNetworksConfigArgsPtrType) ToClusterMasterAuthorizedNetworksConfigArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigArgsPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigArgs)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigArgsOutput) ToClusterMasterAuthorizedNetworksConfigArgsOutput() ClusterMasterAuthorizedNetworksConfigArgsOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigArgsOutput) ToClusterMasterAuthorizedNetworksConfigArgsOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigArgsOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigArgsOutput) ToClusterMasterAuthorizedNetworksConfigArgsPtrOutput() ClusterMasterAuthorizedNetworksConfigArgsPtrOutput {
	return o.ToClusterMasterAuthorizedNetworksConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthorizedNetworksConfigArgsOutput) ToClusterMasterAuthorizedNetworksConfigArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigArgs) *ClusterMasterAuthorizedNetworksConfigArgs {
		return &v
	}).(ClusterMasterAuthorizedNetworksConfigArgsPtrOutput)
}

// External networks that can access the
// Kubernetes cluster master through HTTPS.
func (o ClusterMasterAuthorizedNetworksConfigArgsOutput) CidrBlocks() ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigArgs) []ClusterMasterAuthorizedNetworksConfigCidrBlockArgs {
		return v.CidrBlocks
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthorizedNetworksConfigArgs)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigArgsPtrOutput) ToClusterMasterAuthorizedNetworksConfigArgsPtrOutput() ClusterMasterAuthorizedNetworksConfigArgsPtrOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigArgsPtrOutput) ToClusterMasterAuthorizedNetworksConfigArgsPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigArgsPtrOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigArgsPtrOutput) Elem() ClusterMasterAuthorizedNetworksConfigArgsOutput {
	return o.ApplyT(func(v *ClusterMasterAuthorizedNetworksConfigArgs) ClusterMasterAuthorizedNetworksConfigArgs {
		return *v
	}).(ClusterMasterAuthorizedNetworksConfigArgsOutput)
}

// External networks that can access the
// Kubernetes cluster master through HTTPS.
func (o ClusterMasterAuthorizedNetworksConfigArgsPtrOutput) CidrBlocks() ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigArgs) []ClusterMasterAuthorizedNetworksConfigCidrBlockArgs {
		return v.CidrBlocks
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlock struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock string `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName *string `pulumi:"displayName"`
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockOutput
	ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgs struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
	ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArray []ClusterMasterAuthorizedNetworksConfigCidrBlockInput

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

// External network that can access Kubernetes master through HTTPS.
// Must be specified in CIDR notation.
func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigCidrBlock) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Field for users to identify CIDR blocks.
func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigCidrBlock) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) Index(i pulumi.IntInput) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMasterAuthorizedNetworksConfigCidrBlock {
		return vs[0].([]ClusterMasterAuthorizedNetworksConfigCidrBlock)[vs[1].(int)]
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgs struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock string `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName *string `pulumi:"displayName"`
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgsInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput
	ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArgs struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlockArgs)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArgs) ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArgs) ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput
	ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArray []ClusterMasterAuthorizedNetworksConfigCidrBlockArgsInput

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigCidrBlockArgs)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArray) ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArray) ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlockArgs)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput {
	return o
}

// External network that can access Kubernetes master through HTTPS.
// Must be specified in CIDR notation.
func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Field for users to identify CIDR blocks.
func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigCidrBlockArgs)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput) Index(i pulumi.IntInput) ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMasterAuthorizedNetworksConfigCidrBlockArgs {
		return vs[0].([]ClusterMasterAuthorizedNetworksConfigCidrBlockArgs)[vs[1].(int)]
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput)
}

type ClusterMasterAuthorizedNetworksConfigState struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks []ClusterMasterAuthorizedNetworksConfigStateCidrBlock `pulumi:"cidrBlocks"`
}

type ClusterMasterAuthorizedNetworksConfigStateInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigStateOutput() ClusterMasterAuthorizedNetworksConfigStateOutput
	ToClusterMasterAuthorizedNetworksConfigStateOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigStateOutput
}

type ClusterMasterAuthorizedNetworksConfigStateArgs struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayInput `pulumi:"cidrBlocks"`
}

func (ClusterMasterAuthorizedNetworksConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigState)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigStateArgs) ToClusterMasterAuthorizedNetworksConfigStateOutput() ClusterMasterAuthorizedNetworksConfigStateOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigStateOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigStateArgs) ToClusterMasterAuthorizedNetworksConfigStateOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigStateOutput)
}

type ClusterMasterAuthorizedNetworksConfigStateOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigState)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigStateOutput) ToClusterMasterAuthorizedNetworksConfigStateOutput() ClusterMasterAuthorizedNetworksConfigStateOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigStateOutput) ToClusterMasterAuthorizedNetworksConfigStateOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigStateOutput {
	return o
}

// External networks that can access the
// Kubernetes cluster master through HTTPS.
func (o ClusterMasterAuthorizedNetworksConfigStateOutput) CidrBlocks() ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigState) []ClusterMasterAuthorizedNetworksConfigStateCidrBlock {
		return v.CidrBlocks
	}).(ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigStateCidrBlock struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock string `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName *string `pulumi:"displayName"`
}

type ClusterMasterAuthorizedNetworksConfigStateCidrBlockInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput
	ToClusterMasterAuthorizedNetworksConfigStateCidrBlockOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput
}

type ClusterMasterAuthorizedNetworksConfigStateCidrBlockArgs struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (ClusterMasterAuthorizedNetworksConfigStateCidrBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigStateCidrBlock)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigStateCidrBlockArgs) ToClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigStateCidrBlockOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigStateCidrBlockArgs) ToClusterMasterAuthorizedNetworksConfigStateCidrBlockOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput)
}

type ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput
	ToClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput
}

type ClusterMasterAuthorizedNetworksConfigStateCidrBlockArray []ClusterMasterAuthorizedNetworksConfigStateCidrBlockInput

func (ClusterMasterAuthorizedNetworksConfigStateCidrBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigStateCidrBlock)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigStateCidrBlockArray) ToClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigStateCidrBlockArray) ToClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigStateCidrBlock)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput) ToClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput) ToClusterMasterAuthorizedNetworksConfigStateCidrBlockOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput {
	return o
}

// External network that can access Kubernetes master through HTTPS.
// Must be specified in CIDR notation.
func (o ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigStateCidrBlock) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Field for users to identify CIDR blocks.
func (o ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigStateCidrBlock) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigStateCidrBlock)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput) ToClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput) ToClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput) Index(i pulumi.IntInput) ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMasterAuthorizedNetworksConfigStateCidrBlock {
		return vs[0].([]ClusterMasterAuthorizedNetworksConfigStateCidrBlock)[vs[1].(int)]
	}).(ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput)
}

type ClusterNetworkPolicy struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider *string `pulumi:"provider"`
}

type ClusterNetworkPolicyInput interface {
	pulumi.Input

	ToClusterNetworkPolicyOutput() ClusterNetworkPolicyOutput
	ToClusterNetworkPolicyOutputWithContext(context.Context) ClusterNetworkPolicyOutput
}

type ClusterNetworkPolicyArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (ClusterNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicy)(nil)).Elem()
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyOutput() ClusterNetworkPolicyOutput {
	return i.ToClusterNetworkPolicyOutputWithContext(context.Background())
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyOutputWithContext(ctx context.Context) ClusterNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyOutput)
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return i.ToClusterNetworkPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyOutput).ToClusterNetworkPolicyPtrOutputWithContext(ctx)
}

type ClusterNetworkPolicyPtrInput interface {
	pulumi.Input

	ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput
	ToClusterNetworkPolicyPtrOutputWithContext(context.Context) ClusterNetworkPolicyPtrOutput
}

type clusterNetworkPolicyPtrType ClusterNetworkPolicyArgs

func ClusterNetworkPolicyPtr(v *ClusterNetworkPolicyArgs) ClusterNetworkPolicyPtrInput {
	return (*clusterNetworkPolicyPtrType)(v)
}

func (*clusterNetworkPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkPolicy)(nil)).Elem()
}

func (i *clusterNetworkPolicyPtrType) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return i.ToClusterNetworkPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkPolicyPtrType) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyPtrOutput)
}

type ClusterNetworkPolicyOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicy)(nil)).Elem()
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyOutput() ClusterNetworkPolicyOutput {
	return o
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyOutputWithContext(ctx context.Context) ClusterNetworkPolicyOutput {
	return o
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return o.ToClusterNetworkPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) *ClusterNetworkPolicy {
		return &v
	}).(ClusterNetworkPolicyPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterNetworkPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
func (o ClusterNetworkPolicyOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type ClusterNetworkPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkPolicy)(nil)).Elem()
}

func (o ClusterNetworkPolicyPtrOutput) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return o
}

func (o ClusterNetworkPolicyPtrOutput) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return o
}

func (o ClusterNetworkPolicyPtrOutput) Elem() ClusterNetworkPolicyOutput {
	return o.ApplyT(func(v *ClusterNetworkPolicy) ClusterNetworkPolicy { return *v }).(ClusterNetworkPolicyOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterNetworkPolicyPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
func (o ClusterNetworkPolicyPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type ClusterNetworkPolicyArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider *string `pulumi:"provider"`
}

type ClusterNetworkPolicyArgsInput interface {
	pulumi.Input

	ToClusterNetworkPolicyArgsOutput() ClusterNetworkPolicyArgsOutput
	ToClusterNetworkPolicyArgsOutputWithContext(context.Context) ClusterNetworkPolicyArgsOutput
}

type ClusterNetworkPolicyArgsArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (ClusterNetworkPolicyArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicyArgs)(nil)).Elem()
}

func (i ClusterNetworkPolicyArgsArgs) ToClusterNetworkPolicyArgsOutput() ClusterNetworkPolicyArgsOutput {
	return i.ToClusterNetworkPolicyArgsOutputWithContext(context.Background())
}

func (i ClusterNetworkPolicyArgsArgs) ToClusterNetworkPolicyArgsOutputWithContext(ctx context.Context) ClusterNetworkPolicyArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyArgsOutput)
}

func (i ClusterNetworkPolicyArgsArgs) ToClusterNetworkPolicyArgsPtrOutput() ClusterNetworkPolicyArgsPtrOutput {
	return i.ToClusterNetworkPolicyArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkPolicyArgsArgs) ToClusterNetworkPolicyArgsPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyArgsOutput).ToClusterNetworkPolicyArgsPtrOutputWithContext(ctx)
}

type ClusterNetworkPolicyArgsPtrInput interface {
	pulumi.Input

	ToClusterNetworkPolicyArgsPtrOutput() ClusterNetworkPolicyArgsPtrOutput
	ToClusterNetworkPolicyArgsPtrOutputWithContext(context.Context) ClusterNetworkPolicyArgsPtrOutput
}

type clusterNetworkPolicyArgsPtrType ClusterNetworkPolicyArgsArgs

func ClusterNetworkPolicyArgsPtr(v *ClusterNetworkPolicyArgsArgs) ClusterNetworkPolicyArgsPtrInput {
	return (*clusterNetworkPolicyArgsPtrType)(v)
}

func (*clusterNetworkPolicyArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkPolicyArgs)(nil)).Elem()
}

func (i *clusterNetworkPolicyArgsPtrType) ToClusterNetworkPolicyArgsPtrOutput() ClusterNetworkPolicyArgsPtrOutput {
	return i.ToClusterNetworkPolicyArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkPolicyArgsPtrType) ToClusterNetworkPolicyArgsPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyArgsPtrOutput)
}

type ClusterNetworkPolicyArgsOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPolicyArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicyArgs)(nil)).Elem()
}

func (o ClusterNetworkPolicyArgsOutput) ToClusterNetworkPolicyArgsOutput() ClusterNetworkPolicyArgsOutput {
	return o
}

func (o ClusterNetworkPolicyArgsOutput) ToClusterNetworkPolicyArgsOutputWithContext(ctx context.Context) ClusterNetworkPolicyArgsOutput {
	return o
}

func (o ClusterNetworkPolicyArgsOutput) ToClusterNetworkPolicyArgsPtrOutput() ClusterNetworkPolicyArgsPtrOutput {
	return o.ToClusterNetworkPolicyArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkPolicyArgsOutput) ToClusterNetworkPolicyArgsPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyArgsPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicyArgs) *ClusterNetworkPolicyArgs {
		return &v
	}).(ClusterNetworkPolicyArgsPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterNetworkPolicyArgsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNetworkPolicyArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
func (o ClusterNetworkPolicyArgsOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicyArgs) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type ClusterNetworkPolicyArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPolicyArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkPolicyArgs)(nil)).Elem()
}

func (o ClusterNetworkPolicyArgsPtrOutput) ToClusterNetworkPolicyArgsPtrOutput() ClusterNetworkPolicyArgsPtrOutput {
	return o
}

func (o ClusterNetworkPolicyArgsPtrOutput) ToClusterNetworkPolicyArgsPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyArgsPtrOutput {
	return o
}

func (o ClusterNetworkPolicyArgsPtrOutput) Elem() ClusterNetworkPolicyArgsOutput {
	return o.ApplyT(func(v *ClusterNetworkPolicyArgs) ClusterNetworkPolicyArgs { return *v }).(ClusterNetworkPolicyArgsOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterNetworkPolicyArgsPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNetworkPolicyArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
func (o ClusterNetworkPolicyArgsPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicyArgs) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type ClusterNetworkPolicyState struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider *string `pulumi:"provider"`
}

type ClusterNetworkPolicyStateInput interface {
	pulumi.Input

	ToClusterNetworkPolicyStateOutput() ClusterNetworkPolicyStateOutput
	ToClusterNetworkPolicyStateOutputWithContext(context.Context) ClusterNetworkPolicyStateOutput
}

type ClusterNetworkPolicyStateArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (ClusterNetworkPolicyStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicyState)(nil)).Elem()
}

func (i ClusterNetworkPolicyStateArgs) ToClusterNetworkPolicyStateOutput() ClusterNetworkPolicyStateOutput {
	return i.ToClusterNetworkPolicyStateOutputWithContext(context.Background())
}

func (i ClusterNetworkPolicyStateArgs) ToClusterNetworkPolicyStateOutputWithContext(ctx context.Context) ClusterNetworkPolicyStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyStateOutput)
}

type ClusterNetworkPolicyStateOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPolicyStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicyState)(nil)).Elem()
}

func (o ClusterNetworkPolicyStateOutput) ToClusterNetworkPolicyStateOutput() ClusterNetworkPolicyStateOutput {
	return o
}

func (o ClusterNetworkPolicyStateOutput) ToClusterNetworkPolicyStateOutputWithContext(ctx context.Context) ClusterNetworkPolicyStateOutput {
	return o
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterNetworkPolicyStateOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNetworkPolicyState) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
func (o ClusterNetworkPolicyStateOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicyState) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type ClusterNodeConfig struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType string `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType string `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels map[string]string `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount int `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig *ClusterNodeConfigSandboxConfig `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodeConfigTaint `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

type ClusterNodeConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigOutput() ClusterNodeConfigOutput
	ToClusterNodeConfigOutputWithContext(context.Context) ClusterNodeConfigOutput
}

type ClusterNodeConfigArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig ClusterNodeConfigSandboxConfigPtrInput `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodeConfigShieldedInstanceConfigInput `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodeConfigTaintArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfig)(nil)).Elem()
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigOutput() ClusterNodeConfigOutput {
	return i.ToClusterNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigOutput)
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return i.ToClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigOutput).ToClusterNodeConfigPtrOutputWithContext(ctx)
}

type ClusterNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput
	ToClusterNodeConfigPtrOutputWithContext(context.Context) ClusterNodeConfigPtrOutput
}

type clusterNodeConfigPtrType ClusterNodeConfigArgs

func ClusterNodeConfigPtr(v *ClusterNodeConfigArgs) ClusterNodeConfigPtrInput {
	return (*clusterNodeConfigPtrType)(v)
}

func (*clusterNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfig)(nil)).Elem()
}

func (i *clusterNodeConfigPtrType) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return i.ToClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigPtrType) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigPtrOutput)
}

type ClusterNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigOutput() ClusterNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return o.ToClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfig {
		return &v
	}).(ClusterNodeConfigPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodeConfigOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodeConfigOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodeConfigOutput) GuestAccelerators() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigGuestAccelerator { return v.GuestAccelerators }).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodeConfigOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodeConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodeConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodeConfigOutput) SandboxConfig() ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigSandboxConfig { return v.SandboxConfig }).(ClusterNodeConfigSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodeConfigOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodeConfigOutput) ShieldedInstanceConfig() ClusterNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v ClusterNodeConfig) ClusterNodeConfigShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(ClusterNodeConfigShieldedInstanceConfigOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodeConfigOutput) Taints() ClusterNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigTaint { return v.Taints }).(ClusterNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodeConfigOutput) WorkloadMetadataConfig() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigWorkloadMetadataConfig { return v.WorkloadMetadataConfig }).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigPtrOutput) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigPtrOutput) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigPtrOutput) Elem() ClusterNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) ClusterNodeConfig { return *v }).(ClusterNodeConfigOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodeConfigPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodeConfigPtrOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodeConfigPtrOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodeConfigPtrOutput) GuestAccelerators() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigGuestAccelerator { return v.GuestAccelerators }).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodeConfigPtrOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodeConfigPtrOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodeConfigPtrOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodeConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodeConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodeConfigPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) SandboxConfig() ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigSandboxConfig { return v.SandboxConfig }).(ClusterNodeConfigSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodeConfigPtrOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) ShieldedInstanceConfig() ClusterNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v ClusterNodeConfig) ClusterNodeConfigShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(ClusterNodeConfigShieldedInstanceConfigOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) Taints() ClusterNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigTaint { return v.Taints }).(ClusterNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) WorkloadMetadataConfig() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigWorkloadMetadataConfig { return v.WorkloadMetadataConfig }).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType *string `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodeConfigGuestAcceleratorArgs `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType *string `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels map[string]string `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount *int `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType *string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig *ClusterNodeConfigSandboxConfigArgs `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig *ClusterNodeConfigShieldedInstanceConfigArgs `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodeConfigTaintArgs `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodeConfigWorkloadMetadataConfigArgs `pulumi:"workloadMetadataConfig"`
}

type ClusterNodeConfigArgsInput interface {
	pulumi.Input

	ToClusterNodeConfigArgsOutput() ClusterNodeConfigArgsOutput
	ToClusterNodeConfigArgsOutputWithContext(context.Context) ClusterNodeConfigArgsOutput
}

type ClusterNodeConfigArgsArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodeConfigGuestAcceleratorArgsArrayInput `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntPtrInput `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig ClusterNodeConfigSandboxConfigArgsPtrInput `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodeConfigShieldedInstanceConfigArgsPtrInput `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodeConfigTaintArgsArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodeConfigWorkloadMetadataConfigArgsPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodeConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigArgs)(nil)).Elem()
}

func (i ClusterNodeConfigArgsArgs) ToClusterNodeConfigArgsOutput() ClusterNodeConfigArgsOutput {
	return i.ToClusterNodeConfigArgsOutputWithContext(context.Background())
}

func (i ClusterNodeConfigArgsArgs) ToClusterNodeConfigArgsOutputWithContext(ctx context.Context) ClusterNodeConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigArgsOutput)
}

func (i ClusterNodeConfigArgsArgs) ToClusterNodeConfigArgsPtrOutput() ClusterNodeConfigArgsPtrOutput {
	return i.ToClusterNodeConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigArgsArgs) ToClusterNodeConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigArgsOutput).ToClusterNodeConfigArgsPtrOutputWithContext(ctx)
}

type ClusterNodeConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigArgsPtrOutput() ClusterNodeConfigArgsPtrOutput
	ToClusterNodeConfigArgsPtrOutputWithContext(context.Context) ClusterNodeConfigArgsPtrOutput
}

type clusterNodeConfigArgsPtrType ClusterNodeConfigArgsArgs

func ClusterNodeConfigArgsPtr(v *ClusterNodeConfigArgsArgs) ClusterNodeConfigArgsPtrInput {
	return (*clusterNodeConfigArgsPtrType)(v)
}

func (*clusterNodeConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigArgs)(nil)).Elem()
}

func (i *clusterNodeConfigArgsPtrType) ToClusterNodeConfigArgsPtrOutput() ClusterNodeConfigArgsPtrOutput {
	return i.ToClusterNodeConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigArgsPtrType) ToClusterNodeConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigArgsPtrOutput)
}

type ClusterNodeConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigArgs)(nil)).Elem()
}

func (o ClusterNodeConfigArgsOutput) ToClusterNodeConfigArgsOutput() ClusterNodeConfigArgsOutput {
	return o
}

func (o ClusterNodeConfigArgsOutput) ToClusterNodeConfigArgsOutputWithContext(ctx context.Context) ClusterNodeConfigArgsOutput {
	return o
}

func (o ClusterNodeConfigArgsOutput) ToClusterNodeConfigArgsPtrOutput() ClusterNodeConfigArgsPtrOutput {
	return o.ToClusterNodeConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigArgsOutput) ToClusterNodeConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *ClusterNodeConfigArgs {
		return &v
	}).(ClusterNodeConfigArgsPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodeConfigArgsOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodeConfigArgsOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodeConfigArgsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodeConfigArgsOutput) GuestAccelerators() ClusterNodeConfigGuestAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) []ClusterNodeConfigGuestAcceleratorArgs { return v.GuestAccelerators }).(ClusterNodeConfigGuestAcceleratorArgsArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodeConfigArgsOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodeConfigArgsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodeConfigArgsOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodeConfigArgsOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodeConfigArgsOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodeConfigArgsOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodeConfigArgsOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodeConfigArgsOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodeConfigArgsOutput) SandboxConfig() ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *ClusterNodeConfigSandboxConfigArgs { return v.SandboxConfig }).(ClusterNodeConfigSandboxConfigArgsPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodeConfigArgsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodeConfigArgsOutput) ShieldedInstanceConfig() ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *ClusterNodeConfigShieldedInstanceConfigArgs {
		return v.ShieldedInstanceConfig
	}).(ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodeConfigArgsOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodeConfigArgsOutput) Taints() ClusterNodeConfigTaintArgsArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) []ClusterNodeConfigTaintArgs { return v.Taints }).(ClusterNodeConfigTaintArgsArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodeConfigArgsOutput) WorkloadMetadataConfig() ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *ClusterNodeConfigWorkloadMetadataConfigArgs {
		return v.WorkloadMetadataConfig
	}).(ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

type ClusterNodeConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigArgs)(nil)).Elem()
}

func (o ClusterNodeConfigArgsPtrOutput) ToClusterNodeConfigArgsPtrOutput() ClusterNodeConfigArgsPtrOutput {
	return o
}

func (o ClusterNodeConfigArgsPtrOutput) ToClusterNodeConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigArgsPtrOutput {
	return o
}

func (o ClusterNodeConfigArgsPtrOutput) Elem() ClusterNodeConfigArgsOutput {
	return o.ApplyT(func(v *ClusterNodeConfigArgs) ClusterNodeConfigArgs { return *v }).(ClusterNodeConfigArgsOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodeConfigArgsPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodeConfigArgsPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodeConfigArgsPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodeConfigArgsPtrOutput) GuestAccelerators() ClusterNodeConfigGuestAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) []ClusterNodeConfigGuestAcceleratorArgs { return v.GuestAccelerators }).(ClusterNodeConfigGuestAcceleratorArgsArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodeConfigArgsPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodeConfigArgsPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodeConfigArgsPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodeConfigArgsPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodeConfigArgsPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodeConfigArgsPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodeConfigArgsPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodeConfigArgsPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodeConfigArgsPtrOutput) SandboxConfig() ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *ClusterNodeConfigSandboxConfigArgs { return v.SandboxConfig }).(ClusterNodeConfigSandboxConfigArgsPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodeConfigArgsPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodeConfigArgsPtrOutput) ShieldedInstanceConfig() ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *ClusterNodeConfigShieldedInstanceConfigArgs {
		return v.ShieldedInstanceConfig
	}).(ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodeConfigArgsPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodeConfigArgsPtrOutput) Taints() ClusterNodeConfigTaintArgsArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) []ClusterNodeConfigTaintArgs { return v.Taints }).(ClusterNodeConfigTaintArgsArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodeConfigArgsPtrOutput) WorkloadMetadataConfig() ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigArgs) *ClusterNodeConfigWorkloadMetadataConfigArgs {
		return v.WorkloadMetadataConfig
	}).(ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

type ClusterNodeConfigGuestAccelerator struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

type ClusterNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput
	ToClusterNodeConfigGuestAcceleratorOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorOutput
}

type ClusterNodeConfigGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArgs) ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput {
	return i.ToClusterNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArgs) ToClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorOutput)
}

type ClusterNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput
	ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput
}

type ClusterNodeConfigGuestAcceleratorArray []ClusterNodeConfigGuestAcceleratorInput

func (ClusterNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArray) ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return i.ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArray) ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

type ClusterNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorOutput) ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorOutput) ToClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigGuestAccelerator {
		return vs[0].([]ClusterNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(ClusterNodeConfigGuestAcceleratorOutput)
}

type ClusterNodeConfigGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

type ClusterNodeConfigGuestAcceleratorArgsInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorArgsOutput() ClusterNodeConfigGuestAcceleratorArgsOutput
	ToClusterNodeConfigGuestAcceleratorArgsOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorArgsOutput
}

type ClusterNodeConfigGuestAcceleratorArgsArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodeConfigGuestAcceleratorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArgsArgs) ToClusterNodeConfigGuestAcceleratorArgsOutput() ClusterNodeConfigGuestAcceleratorArgsOutput {
	return i.ToClusterNodeConfigGuestAcceleratorArgsOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArgsArgs) ToClusterNodeConfigGuestAcceleratorArgsOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorArgsOutput)
}

type ClusterNodeConfigGuestAcceleratorArgsArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorArgsArrayOutput() ClusterNodeConfigGuestAcceleratorArgsArrayOutput
	ToClusterNodeConfigGuestAcceleratorArgsArrayOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorArgsArrayOutput
}

type ClusterNodeConfigGuestAcceleratorArgsArray []ClusterNodeConfigGuestAcceleratorArgsInput

func (ClusterNodeConfigGuestAcceleratorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArgsArray) ToClusterNodeConfigGuestAcceleratorArgsArrayOutput() ClusterNodeConfigGuestAcceleratorArgsArrayOutput {
	return i.ToClusterNodeConfigGuestAcceleratorArgsArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArgsArray) ToClusterNodeConfigGuestAcceleratorArgsArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorArgsArrayOutput)
}

type ClusterNodeConfigGuestAcceleratorArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorArgsOutput) ToClusterNodeConfigGuestAcceleratorArgsOutput() ClusterNodeConfigGuestAcceleratorArgsOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArgsOutput) ToClusterNodeConfigGuestAcceleratorArgsOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArgsOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodeConfigGuestAcceleratorArgsOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAcceleratorArgs) int { return v.Count }).(pulumi.IntOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodeConfigGuestAcceleratorArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAcceleratorArgs) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodeConfigGuestAcceleratorArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorArgsArrayOutput) ToClusterNodeConfigGuestAcceleratorArgsArrayOutput() ClusterNodeConfigGuestAcceleratorArgsArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArgsArrayOutput) ToClusterNodeConfigGuestAcceleratorArgsArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArgsArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArgsArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigGuestAcceleratorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigGuestAcceleratorArgs {
		return vs[0].([]ClusterNodeConfigGuestAcceleratorArgs)[vs[1].(int)]
	}).(ClusterNodeConfigGuestAcceleratorArgsOutput)
}

type ClusterNodeConfigSandboxConfig struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType string `pulumi:"sandboxType"`
}

type ClusterNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigSandboxConfigOutput() ClusterNodeConfigSandboxConfigOutput
	ToClusterNodeConfigSandboxConfigOutputWithContext(context.Context) ClusterNodeConfigSandboxConfigOutput
}

type ClusterNodeConfigSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigOutput() ClusterNodeConfigSandboxConfigOutput {
	return i.ToClusterNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigOutput)
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigOutput).ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

type ClusterNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput
	ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Context) ClusterNodeConfigSandboxConfigPtrOutput
}

type clusterNodeConfigSandboxConfigPtrType ClusterNodeConfigSandboxConfigArgs

func ClusterNodeConfigSandboxConfigPtr(v *ClusterNodeConfigSandboxConfigArgs) ClusterNodeConfigSandboxConfigPtrInput {
	return (*clusterNodeConfigSandboxConfigPtrType)(v)
}

func (*clusterNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *clusterNodeConfigSandboxConfigPtrType) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigSandboxConfigPtrType) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigPtrOutput)
}

type ClusterNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigOutput() ClusterNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigSandboxConfig) *ClusterNodeConfigSandboxConfig {
		return &v
	}).(ClusterNodeConfigSandboxConfigPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodeConfigSandboxConfigPtrOutput) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigPtrOutput) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigPtrOutput) Elem() ClusterNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigSandboxConfig) ClusterNodeConfigSandboxConfig { return *v }).(ClusterNodeConfigSandboxConfigOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodeConfigSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType string `pulumi:"sandboxType"`
}

type ClusterNodeConfigSandboxConfigArgsInput interface {
	pulumi.Input

	ToClusterNodeConfigSandboxConfigArgsOutput() ClusterNodeConfigSandboxConfigArgsOutput
	ToClusterNodeConfigSandboxConfigArgsOutputWithContext(context.Context) ClusterNodeConfigSandboxConfigArgsOutput
}

type ClusterNodeConfigSandboxConfigArgsArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodeConfigSandboxConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (i ClusterNodeConfigSandboxConfigArgsArgs) ToClusterNodeConfigSandboxConfigArgsOutput() ClusterNodeConfigSandboxConfigArgsOutput {
	return i.ToClusterNodeConfigSandboxConfigArgsOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSandboxConfigArgsArgs) ToClusterNodeConfigSandboxConfigArgsOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigArgsOutput)
}

func (i ClusterNodeConfigSandboxConfigArgsArgs) ToClusterNodeConfigSandboxConfigArgsPtrOutput() ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return i.ToClusterNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSandboxConfigArgsArgs) ToClusterNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigArgsOutput).ToClusterNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx)
}

type ClusterNodeConfigSandboxConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigSandboxConfigArgsPtrOutput() ClusterNodeConfigSandboxConfigArgsPtrOutput
	ToClusterNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Context) ClusterNodeConfigSandboxConfigArgsPtrOutput
}

type clusterNodeConfigSandboxConfigArgsPtrType ClusterNodeConfigSandboxConfigArgsArgs

func ClusterNodeConfigSandboxConfigArgsPtr(v *ClusterNodeConfigSandboxConfigArgsArgs) ClusterNodeConfigSandboxConfigArgsPtrInput {
	return (*clusterNodeConfigSandboxConfigArgsPtrType)(v)
}

func (*clusterNodeConfigSandboxConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (i *clusterNodeConfigSandboxConfigArgsPtrType) ToClusterNodeConfigSandboxConfigArgsPtrOutput() ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return i.ToClusterNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigSandboxConfigArgsPtrType) ToClusterNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigArgsPtrOutput)
}

type ClusterNodeConfigSandboxConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSandboxConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (o ClusterNodeConfigSandboxConfigArgsOutput) ToClusterNodeConfigSandboxConfigArgsOutput() ClusterNodeConfigSandboxConfigArgsOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigArgsOutput) ToClusterNodeConfigSandboxConfigArgsOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigArgsOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigArgsOutput) ToClusterNodeConfigSandboxConfigArgsPtrOutput() ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return o.ToClusterNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigSandboxConfigArgsOutput) ToClusterNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigSandboxConfigArgs) *ClusterNodeConfigSandboxConfigArgs {
		return &v
	}).(ClusterNodeConfigSandboxConfigArgsPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodeConfigSandboxConfigArgsOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigSandboxConfigArgs) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodeConfigSandboxConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSandboxConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (o ClusterNodeConfigSandboxConfigArgsPtrOutput) ToClusterNodeConfigSandboxConfigArgsPtrOutput() ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigArgsPtrOutput) ToClusterNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigArgsPtrOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigArgsPtrOutput) Elem() ClusterNodeConfigSandboxConfigArgsOutput {
	return o.ApplyT(func(v *ClusterNodeConfigSandboxConfigArgs) ClusterNodeConfigSandboxConfigArgs { return *v }).(ClusterNodeConfigSandboxConfigArgsOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodeConfigSandboxConfigArgsPtrOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigSandboxConfigArgs) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodeConfigShieldedInstanceConfig struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

type ClusterNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigShieldedInstanceConfigOutput() ClusterNodeConfigShieldedInstanceConfigOutput
	ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) ClusterNodeConfigShieldedInstanceConfigOutput
}

type ClusterNodeConfigShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigOutput() ClusterNodeConfigShieldedInstanceConfigOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigOutput)
}

type ClusterNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigOutput() ClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

type ClusterNodeConfigShieldedInstanceConfigArgsInput interface {
	pulumi.Input

	ToClusterNodeConfigShieldedInstanceConfigArgsOutput() ClusterNodeConfigShieldedInstanceConfigArgsOutput
	ToClusterNodeConfigShieldedInstanceConfigArgsOutputWithContext(context.Context) ClusterNodeConfigShieldedInstanceConfigArgsOutput
}

type ClusterNodeConfigShieldedInstanceConfigArgsArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodeConfigShieldedInstanceConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (i ClusterNodeConfigShieldedInstanceConfigArgsArgs) ToClusterNodeConfigShieldedInstanceConfigArgsOutput() ClusterNodeConfigShieldedInstanceConfigArgsOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigArgsOutputWithContext(context.Background())
}

func (i ClusterNodeConfigShieldedInstanceConfigArgsArgs) ToClusterNodeConfigShieldedInstanceConfigArgsOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigArgsOutput)
}

func (i ClusterNodeConfigShieldedInstanceConfigArgsArgs) ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigShieldedInstanceConfigArgsArgs) ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigArgsOutput).ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx)
}

type ClusterNodeConfigShieldedInstanceConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput
	ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Context) ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput
}

type clusterNodeConfigShieldedInstanceConfigArgsPtrType ClusterNodeConfigShieldedInstanceConfigArgsArgs

func ClusterNodeConfigShieldedInstanceConfigArgsPtr(v *ClusterNodeConfigShieldedInstanceConfigArgsArgs) ClusterNodeConfigShieldedInstanceConfigArgsPtrInput {
	return (*clusterNodeConfigShieldedInstanceConfigArgsPtrType)(v)
}

func (*clusterNodeConfigShieldedInstanceConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (i *clusterNodeConfigShieldedInstanceConfigArgsPtrType) ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigShieldedInstanceConfigArgsPtrType) ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

type ClusterNodeConfigShieldedInstanceConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigShieldedInstanceConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (o ClusterNodeConfigShieldedInstanceConfigArgsOutput) ToClusterNodeConfigShieldedInstanceConfigArgsOutput() ClusterNodeConfigShieldedInstanceConfigArgsOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigArgsOutput) ToClusterNodeConfigShieldedInstanceConfigArgsOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigArgsOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigArgsOutput) ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigShieldedInstanceConfigArgsOutput) ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfigArgs) *ClusterNodeConfigShieldedInstanceConfigArgs {
		return &v
	}).(ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodeConfigShieldedInstanceConfigArgsOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodeConfigShieldedInstanceConfigArgsOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (o ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput) ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput) ToClusterNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput) Elem() ClusterNodeConfigShieldedInstanceConfigArgsOutput {
	return o.ApplyT(func(v *ClusterNodeConfigShieldedInstanceConfigArgs) ClusterNodeConfigShieldedInstanceConfigArgs {
		return *v
	}).(ClusterNodeConfigShieldedInstanceConfigArgsOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigState struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType *string `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodeConfigStateGuestAccelerator `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType *string `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels map[string]string `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount *int `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType *string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig *ClusterNodeConfigStateSandboxConfig `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig *ClusterNodeConfigStateShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodeConfigStateTaint `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodeConfigStateWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

type ClusterNodeConfigStateInput interface {
	pulumi.Input

	ToClusterNodeConfigStateOutput() ClusterNodeConfigStateOutput
	ToClusterNodeConfigStateOutputWithContext(context.Context) ClusterNodeConfigStateOutput
}

type ClusterNodeConfigStateArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodeConfigStateGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntPtrInput `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig ClusterNodeConfigStateSandboxConfigPtrInput `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodeConfigStateShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodeConfigStateTaintArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodeConfigStateWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodeConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigState)(nil)).Elem()
}

func (i ClusterNodeConfigStateArgs) ToClusterNodeConfigStateOutput() ClusterNodeConfigStateOutput {
	return i.ToClusterNodeConfigStateOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateArgs) ToClusterNodeConfigStateOutputWithContext(ctx context.Context) ClusterNodeConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateOutput)
}

type ClusterNodeConfigStateOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigState)(nil)).Elem()
}

func (o ClusterNodeConfigStateOutput) ToClusterNodeConfigStateOutput() ClusterNodeConfigStateOutput {
	return o
}

func (o ClusterNodeConfigStateOutput) ToClusterNodeConfigStateOutputWithContext(ctx context.Context) ClusterNodeConfigStateOutput {
	return o
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodeConfigStateOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodeConfigStateOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodeConfigStateOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodeConfigStateOutput) GuestAccelerators() ClusterNodeConfigStateGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) []ClusterNodeConfigStateGuestAccelerator { return v.GuestAccelerators }).(ClusterNodeConfigStateGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodeConfigStateOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodeConfigStateOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodeConfigStateOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodeConfigStateOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodeConfigStateOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodeConfigStateOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodeConfigStateOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodeConfigStateOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodeConfigStateOutput) SandboxConfig() ClusterNodeConfigStateSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *ClusterNodeConfigStateSandboxConfig { return v.SandboxConfig }).(ClusterNodeConfigStateSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodeConfigStateOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodeConfigStateOutput) ShieldedInstanceConfig() ClusterNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *ClusterNodeConfigStateShieldedInstanceConfig {
		return v.ShieldedInstanceConfig
	}).(ClusterNodeConfigStateShieldedInstanceConfigPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodeConfigStateOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodeConfigStateOutput) Taints() ClusterNodeConfigStateTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) []ClusterNodeConfigStateTaint { return v.Taints }).(ClusterNodeConfigStateTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodeConfigStateOutput) WorkloadMetadataConfig() ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigState) *ClusterNodeConfigStateWorkloadMetadataConfig {
		return v.WorkloadMetadataConfig
	}).(ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigStateGuestAccelerator struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

type ClusterNodeConfigStateGuestAcceleratorInput interface {
	pulumi.Input

	ToClusterNodeConfigStateGuestAcceleratorOutput() ClusterNodeConfigStateGuestAcceleratorOutput
	ToClusterNodeConfigStateGuestAcceleratorOutputWithContext(context.Context) ClusterNodeConfigStateGuestAcceleratorOutput
}

type ClusterNodeConfigStateGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodeConfigStateGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigStateGuestAcceleratorArgs) ToClusterNodeConfigStateGuestAcceleratorOutput() ClusterNodeConfigStateGuestAcceleratorOutput {
	return i.ToClusterNodeConfigStateGuestAcceleratorOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateGuestAcceleratorArgs) ToClusterNodeConfigStateGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigStateGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateGuestAcceleratorOutput)
}

type ClusterNodeConfigStateGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigStateGuestAcceleratorArrayOutput() ClusterNodeConfigStateGuestAcceleratorArrayOutput
	ToClusterNodeConfigStateGuestAcceleratorArrayOutputWithContext(context.Context) ClusterNodeConfigStateGuestAcceleratorArrayOutput
}

type ClusterNodeConfigStateGuestAcceleratorArray []ClusterNodeConfigStateGuestAcceleratorInput

func (ClusterNodeConfigStateGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigStateGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigStateGuestAcceleratorArray) ToClusterNodeConfigStateGuestAcceleratorArrayOutput() ClusterNodeConfigStateGuestAcceleratorArrayOutput {
	return i.ToClusterNodeConfigStateGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateGuestAcceleratorArray) ToClusterNodeConfigStateGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigStateGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateGuestAcceleratorArrayOutput)
}

type ClusterNodeConfigStateGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigStateGuestAcceleratorOutput) ToClusterNodeConfigStateGuestAcceleratorOutput() ClusterNodeConfigStateGuestAcceleratorOutput {
	return o
}

func (o ClusterNodeConfigStateGuestAcceleratorOutput) ToClusterNodeConfigStateGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigStateGuestAcceleratorOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodeConfigStateGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodeConfigStateGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodeConfigStateGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigStateGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigStateGuestAcceleratorArrayOutput) ToClusterNodeConfigStateGuestAcceleratorArrayOutput() ClusterNodeConfigStateGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigStateGuestAcceleratorArrayOutput) ToClusterNodeConfigStateGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigStateGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigStateGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigStateGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigStateGuestAccelerator {
		return vs[0].([]ClusterNodeConfigStateGuestAccelerator)[vs[1].(int)]
	}).(ClusterNodeConfigStateGuestAcceleratorOutput)
}

type ClusterNodeConfigStateSandboxConfig struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType string `pulumi:"sandboxType"`
}

type ClusterNodeConfigStateSandboxConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigStateSandboxConfigOutput() ClusterNodeConfigStateSandboxConfigOutput
	ToClusterNodeConfigStateSandboxConfigOutputWithContext(context.Context) ClusterNodeConfigStateSandboxConfigOutput
}

type ClusterNodeConfigStateSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodeConfigStateSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateSandboxConfig)(nil)).Elem()
}

func (i ClusterNodeConfigStateSandboxConfigArgs) ToClusterNodeConfigStateSandboxConfigOutput() ClusterNodeConfigStateSandboxConfigOutput {
	return i.ToClusterNodeConfigStateSandboxConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateSandboxConfigArgs) ToClusterNodeConfigStateSandboxConfigOutputWithContext(ctx context.Context) ClusterNodeConfigStateSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateSandboxConfigOutput)
}

func (i ClusterNodeConfigStateSandboxConfigArgs) ToClusterNodeConfigStateSandboxConfigPtrOutput() ClusterNodeConfigStateSandboxConfigPtrOutput {
	return i.ToClusterNodeConfigStateSandboxConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateSandboxConfigArgs) ToClusterNodeConfigStateSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateSandboxConfigOutput).ToClusterNodeConfigStateSandboxConfigPtrOutputWithContext(ctx)
}

type ClusterNodeConfigStateSandboxConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigStateSandboxConfigPtrOutput() ClusterNodeConfigStateSandboxConfigPtrOutput
	ToClusterNodeConfigStateSandboxConfigPtrOutputWithContext(context.Context) ClusterNodeConfigStateSandboxConfigPtrOutput
}

type clusterNodeConfigStateSandboxConfigPtrType ClusterNodeConfigStateSandboxConfigArgs

func ClusterNodeConfigStateSandboxConfigPtr(v *ClusterNodeConfigStateSandboxConfigArgs) ClusterNodeConfigStateSandboxConfigPtrInput {
	return (*clusterNodeConfigStateSandboxConfigPtrType)(v)
}

func (*clusterNodeConfigStateSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigStateSandboxConfig)(nil)).Elem()
}

func (i *clusterNodeConfigStateSandboxConfigPtrType) ToClusterNodeConfigStateSandboxConfigPtrOutput() ClusterNodeConfigStateSandboxConfigPtrOutput {
	return i.ToClusterNodeConfigStateSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigStateSandboxConfigPtrType) ToClusterNodeConfigStateSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateSandboxConfigPtrOutput)
}

type ClusterNodeConfigStateSandboxConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateSandboxConfig)(nil)).Elem()
}

func (o ClusterNodeConfigStateSandboxConfigOutput) ToClusterNodeConfigStateSandboxConfigOutput() ClusterNodeConfigStateSandboxConfigOutput {
	return o
}

func (o ClusterNodeConfigStateSandboxConfigOutput) ToClusterNodeConfigStateSandboxConfigOutputWithContext(ctx context.Context) ClusterNodeConfigStateSandboxConfigOutput {
	return o
}

func (o ClusterNodeConfigStateSandboxConfigOutput) ToClusterNodeConfigStateSandboxConfigPtrOutput() ClusterNodeConfigStateSandboxConfigPtrOutput {
	return o.ToClusterNodeConfigStateSandboxConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigStateSandboxConfigOutput) ToClusterNodeConfigStateSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateSandboxConfig) *ClusterNodeConfigStateSandboxConfig {
		return &v
	}).(ClusterNodeConfigStateSandboxConfigPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodeConfigStateSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodeConfigStateSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigStateSandboxConfig)(nil)).Elem()
}

func (o ClusterNodeConfigStateSandboxConfigPtrOutput) ToClusterNodeConfigStateSandboxConfigPtrOutput() ClusterNodeConfigStateSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigStateSandboxConfigPtrOutput) ToClusterNodeConfigStateSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigStateSandboxConfigPtrOutput) Elem() ClusterNodeConfigStateSandboxConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigStateSandboxConfig) ClusterNodeConfigStateSandboxConfig { return *v }).(ClusterNodeConfigStateSandboxConfigOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodeConfigStateSandboxConfigPtrOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodeConfigStateShieldedInstanceConfig struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

type ClusterNodeConfigStateShieldedInstanceConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigStateShieldedInstanceConfigOutput() ClusterNodeConfigStateShieldedInstanceConfigOutput
	ToClusterNodeConfigStateShieldedInstanceConfigOutputWithContext(context.Context) ClusterNodeConfigStateShieldedInstanceConfigOutput
}

type ClusterNodeConfigStateShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodeConfigStateShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateShieldedInstanceConfig)(nil)).Elem()
}

func (i ClusterNodeConfigStateShieldedInstanceConfigArgs) ToClusterNodeConfigStateShieldedInstanceConfigOutput() ClusterNodeConfigStateShieldedInstanceConfigOutput {
	return i.ToClusterNodeConfigStateShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateShieldedInstanceConfigArgs) ToClusterNodeConfigStateShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodeConfigStateShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateShieldedInstanceConfigOutput)
}

func (i ClusterNodeConfigStateShieldedInstanceConfigArgs) ToClusterNodeConfigStateShieldedInstanceConfigPtrOutput() ClusterNodeConfigStateShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateShieldedInstanceConfigArgs) ToClusterNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateShieldedInstanceConfigOutput).ToClusterNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx)
}

type ClusterNodeConfigStateShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigStateShieldedInstanceConfigPtrOutput() ClusterNodeConfigStateShieldedInstanceConfigPtrOutput
	ToClusterNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(context.Context) ClusterNodeConfigStateShieldedInstanceConfigPtrOutput
}

type clusterNodeConfigStateShieldedInstanceConfigPtrType ClusterNodeConfigStateShieldedInstanceConfigArgs

func ClusterNodeConfigStateShieldedInstanceConfigPtr(v *ClusterNodeConfigStateShieldedInstanceConfigArgs) ClusterNodeConfigStateShieldedInstanceConfigPtrInput {
	return (*clusterNodeConfigStateShieldedInstanceConfigPtrType)(v)
}

func (*clusterNodeConfigStateShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigStateShieldedInstanceConfig)(nil)).Elem()
}

func (i *clusterNodeConfigStateShieldedInstanceConfigPtrType) ToClusterNodeConfigStateShieldedInstanceConfigPtrOutput() ClusterNodeConfigStateShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigStateShieldedInstanceConfigPtrType) ToClusterNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateShieldedInstanceConfigPtrOutput)
}

type ClusterNodeConfigStateShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodeConfigStateShieldedInstanceConfigOutput) ToClusterNodeConfigStateShieldedInstanceConfigOutput() ClusterNodeConfigStateShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodeConfigStateShieldedInstanceConfigOutput) ToClusterNodeConfigStateShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodeConfigStateShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodeConfigStateShieldedInstanceConfigOutput) ToClusterNodeConfigStateShieldedInstanceConfigPtrOutput() ClusterNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o.ToClusterNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigStateShieldedInstanceConfigOutput) ToClusterNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateShieldedInstanceConfig) *ClusterNodeConfigStateShieldedInstanceConfig {
		return &v
	}).(ClusterNodeConfigStateShieldedInstanceConfigPtrOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodeConfigStateShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodeConfigStateShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigStateShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigStateShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodeConfigStateShieldedInstanceConfigPtrOutput) ToClusterNodeConfigStateShieldedInstanceConfigPtrOutput() ClusterNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigStateShieldedInstanceConfigPtrOutput) ToClusterNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigStateShieldedInstanceConfigPtrOutput) Elem() ClusterNodeConfigStateShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigStateShieldedInstanceConfig) ClusterNodeConfigStateShieldedInstanceConfig {
		return *v
	}).(ClusterNodeConfigStateShieldedInstanceConfigOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodeConfigStateShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodeConfigStateShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigStateTaint struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

type ClusterNodeConfigStateTaintInput interface {
	pulumi.Input

	ToClusterNodeConfigStateTaintOutput() ClusterNodeConfigStateTaintOutput
	ToClusterNodeConfigStateTaintOutputWithContext(context.Context) ClusterNodeConfigStateTaintOutput
}

type ClusterNodeConfigStateTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodeConfigStateTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateTaint)(nil)).Elem()
}

func (i ClusterNodeConfigStateTaintArgs) ToClusterNodeConfigStateTaintOutput() ClusterNodeConfigStateTaintOutput {
	return i.ToClusterNodeConfigStateTaintOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateTaintArgs) ToClusterNodeConfigStateTaintOutputWithContext(ctx context.Context) ClusterNodeConfigStateTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateTaintOutput)
}

type ClusterNodeConfigStateTaintArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigStateTaintArrayOutput() ClusterNodeConfigStateTaintArrayOutput
	ToClusterNodeConfigStateTaintArrayOutputWithContext(context.Context) ClusterNodeConfigStateTaintArrayOutput
}

type ClusterNodeConfigStateTaintArray []ClusterNodeConfigStateTaintInput

func (ClusterNodeConfigStateTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigStateTaint)(nil)).Elem()
}

func (i ClusterNodeConfigStateTaintArray) ToClusterNodeConfigStateTaintArrayOutput() ClusterNodeConfigStateTaintArrayOutput {
	return i.ToClusterNodeConfigStateTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateTaintArray) ToClusterNodeConfigStateTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigStateTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateTaintArrayOutput)
}

type ClusterNodeConfigStateTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateTaint)(nil)).Elem()
}

func (o ClusterNodeConfigStateTaintOutput) ToClusterNodeConfigStateTaintOutput() ClusterNodeConfigStateTaintOutput {
	return o
}

func (o ClusterNodeConfigStateTaintOutput) ToClusterNodeConfigStateTaintOutputWithContext(ctx context.Context) ClusterNodeConfigStateTaintOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodeConfigStateTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodeConfigStateTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodeConfigStateTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodeConfigStateTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigStateTaint)(nil)).Elem()
}

func (o ClusterNodeConfigStateTaintArrayOutput) ToClusterNodeConfigStateTaintArrayOutput() ClusterNodeConfigStateTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigStateTaintArrayOutput) ToClusterNodeConfigStateTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigStateTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigStateTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigStateTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigStateTaint {
		return vs[0].([]ClusterNodeConfigStateTaint)[vs[1].(int)]
	}).(ClusterNodeConfigStateTaintOutput)
}

type ClusterNodeConfigStateWorkloadMetadataConfig struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type ClusterNodeConfigStateWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigStateWorkloadMetadataConfigOutput() ClusterNodeConfigStateWorkloadMetadataConfigOutput
	ToClusterNodeConfigStateWorkloadMetadataConfigOutputWithContext(context.Context) ClusterNodeConfigStateWorkloadMetadataConfigOutput
}

type ClusterNodeConfigStateWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (ClusterNodeConfigStateWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateWorkloadMetadataConfig)(nil)).Elem()
}

func (i ClusterNodeConfigStateWorkloadMetadataConfigArgs) ToClusterNodeConfigStateWorkloadMetadataConfigOutput() ClusterNodeConfigStateWorkloadMetadataConfigOutput {
	return i.ToClusterNodeConfigStateWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateWorkloadMetadataConfigArgs) ToClusterNodeConfigStateWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodeConfigStateWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateWorkloadMetadataConfigOutput)
}

func (i ClusterNodeConfigStateWorkloadMetadataConfigArgs) ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutput() ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigStateWorkloadMetadataConfigArgs) ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateWorkloadMetadataConfigOutput).ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

type ClusterNodeConfigStateWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutput() ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput
	ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(context.Context) ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput
}

type clusterNodeConfigStateWorkloadMetadataConfigPtrType ClusterNodeConfigStateWorkloadMetadataConfigArgs

func ClusterNodeConfigStateWorkloadMetadataConfigPtr(v *ClusterNodeConfigStateWorkloadMetadataConfigArgs) ClusterNodeConfigStateWorkloadMetadataConfigPtrInput {
	return (*clusterNodeConfigStateWorkloadMetadataConfigPtrType)(v)
}

func (*clusterNodeConfigStateWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigStateWorkloadMetadataConfig)(nil)).Elem()
}

func (i *clusterNodeConfigStateWorkloadMetadataConfigPtrType) ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutput() ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigStateWorkloadMetadataConfigPtrType) ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigStateWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigStateWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodeConfigStateWorkloadMetadataConfigOutput) ToClusterNodeConfigStateWorkloadMetadataConfigOutput() ClusterNodeConfigStateWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodeConfigStateWorkloadMetadataConfigOutput) ToClusterNodeConfigStateWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodeConfigStateWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodeConfigStateWorkloadMetadataConfigOutput) ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutput() ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o.ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigStateWorkloadMetadataConfigOutput) ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateWorkloadMetadataConfig) *ClusterNodeConfigStateWorkloadMetadataConfig {
		return &v
	}).(ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodeConfigStateWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigStateWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput) ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutput() ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput) ToClusterNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput) Elem() ClusterNodeConfigStateWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigStateWorkloadMetadataConfig) ClusterNodeConfigStateWorkloadMetadataConfig {
		return *v
	}).(ClusterNodeConfigStateWorkloadMetadataConfigOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigStateWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodeConfigTaint struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

type ClusterNodeConfigTaintInput interface {
	pulumi.Input

	ToClusterNodeConfigTaintOutput() ClusterNodeConfigTaintOutput
	ToClusterNodeConfigTaintOutputWithContext(context.Context) ClusterNodeConfigTaintOutput
}

type ClusterNodeConfigTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodeConfigTaintArgs) ToClusterNodeConfigTaintOutput() ClusterNodeConfigTaintOutput {
	return i.ToClusterNodeConfigTaintOutputWithContext(context.Background())
}

func (i ClusterNodeConfigTaintArgs) ToClusterNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigTaintOutput)
}

type ClusterNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigTaintArrayOutput() ClusterNodeConfigTaintArrayOutput
	ToClusterNodeConfigTaintArrayOutputWithContext(context.Context) ClusterNodeConfigTaintArrayOutput
}

type ClusterNodeConfigTaintArray []ClusterNodeConfigTaintInput

func (ClusterNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodeConfigTaintArray) ToClusterNodeConfigTaintArrayOutput() ClusterNodeConfigTaintArrayOutput {
	return i.ToClusterNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigTaintArray) ToClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigTaintArrayOutput)
}

type ClusterNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodeConfigTaintOutput) ToClusterNodeConfigTaintOutput() ClusterNodeConfigTaintOutput {
	return o
}

func (o ClusterNodeConfigTaintOutput) ToClusterNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodeConfigTaintOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodeConfigTaintArrayOutput) ToClusterNodeConfigTaintArrayOutput() ClusterNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigTaintArrayOutput) ToClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigTaint {
		return vs[0].([]ClusterNodeConfigTaint)[vs[1].(int)]
	}).(ClusterNodeConfigTaintOutput)
}

type ClusterNodeConfigTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

type ClusterNodeConfigTaintArgsInput interface {
	pulumi.Input

	ToClusterNodeConfigTaintArgsOutput() ClusterNodeConfigTaintArgsOutput
	ToClusterNodeConfigTaintArgsOutputWithContext(context.Context) ClusterNodeConfigTaintArgsOutput
}

type ClusterNodeConfigTaintArgsArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodeConfigTaintArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigTaintArgs)(nil)).Elem()
}

func (i ClusterNodeConfigTaintArgsArgs) ToClusterNodeConfigTaintArgsOutput() ClusterNodeConfigTaintArgsOutput {
	return i.ToClusterNodeConfigTaintArgsOutputWithContext(context.Background())
}

func (i ClusterNodeConfigTaintArgsArgs) ToClusterNodeConfigTaintArgsOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigTaintArgsOutput)
}

type ClusterNodeConfigTaintArgsArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigTaintArgsArrayOutput() ClusterNodeConfigTaintArgsArrayOutput
	ToClusterNodeConfigTaintArgsArrayOutputWithContext(context.Context) ClusterNodeConfigTaintArgsArrayOutput
}

type ClusterNodeConfigTaintArgsArray []ClusterNodeConfigTaintArgsInput

func (ClusterNodeConfigTaintArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigTaintArgs)(nil)).Elem()
}

func (i ClusterNodeConfigTaintArgsArray) ToClusterNodeConfigTaintArgsArrayOutput() ClusterNodeConfigTaintArgsArrayOutput {
	return i.ToClusterNodeConfigTaintArgsArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigTaintArgsArray) ToClusterNodeConfigTaintArgsArrayOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigTaintArgsArrayOutput)
}

type ClusterNodeConfigTaintArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigTaintArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigTaintArgs)(nil)).Elem()
}

func (o ClusterNodeConfigTaintArgsOutput) ToClusterNodeConfigTaintArgsOutput() ClusterNodeConfigTaintArgsOutput {
	return o
}

func (o ClusterNodeConfigTaintArgsOutput) ToClusterNodeConfigTaintArgsOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArgsOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodeConfigTaintArgsOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaintArgs) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodeConfigTaintArgsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaintArgs) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodeConfigTaintArgsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaintArgs) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodeConfigTaintArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigTaintArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigTaintArgs)(nil)).Elem()
}

func (o ClusterNodeConfigTaintArgsArrayOutput) ToClusterNodeConfigTaintArgsArrayOutput() ClusterNodeConfigTaintArgsArrayOutput {
	return o
}

func (o ClusterNodeConfigTaintArgsArrayOutput) ToClusterNodeConfigTaintArgsArrayOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArgsArrayOutput {
	return o
}

func (o ClusterNodeConfigTaintArgsArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigTaintArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigTaintArgs {
		return vs[0].([]ClusterNodeConfigTaintArgs)[vs[1].(int)]
	}).(ClusterNodeConfigTaintArgsOutput)
}

type ClusterNodeConfigWorkloadMetadataConfig struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type ClusterNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigWorkloadMetadataConfigOutput() ClusterNodeConfigWorkloadMetadataConfigOutput
	ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) ClusterNodeConfigWorkloadMetadataConfigOutput
}

type ClusterNodeConfigWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (ClusterNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigOutput() ClusterNodeConfigWorkloadMetadataConfigOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigOutput)
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigOutput).ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

type ClusterNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput
	ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput
}

type clusterNodeConfigWorkloadMetadataConfigPtrType ClusterNodeConfigWorkloadMetadataConfigArgs

func ClusterNodeConfigWorkloadMetadataConfigPtr(v *ClusterNodeConfigWorkloadMetadataConfigArgs) ClusterNodeConfigWorkloadMetadataConfigPtrInput {
	return (*clusterNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*clusterNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *clusterNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigOutput() ClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigWorkloadMetadataConfig) *ClusterNodeConfigWorkloadMetadataConfig {
		return &v
	}).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodeConfigWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) Elem() ClusterNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigWorkloadMetadataConfig) ClusterNodeConfigWorkloadMetadataConfig { return *v }).(ClusterNodeConfigWorkloadMetadataConfigOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodeConfigWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type ClusterNodeConfigWorkloadMetadataConfigArgsInput interface {
	pulumi.Input

	ToClusterNodeConfigWorkloadMetadataConfigArgsOutput() ClusterNodeConfigWorkloadMetadataConfigArgsOutput
	ToClusterNodeConfigWorkloadMetadataConfigArgsOutputWithContext(context.Context) ClusterNodeConfigWorkloadMetadataConfigArgsOutput
}

type ClusterNodeConfigWorkloadMetadataConfigArgsArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (ClusterNodeConfigWorkloadMetadataConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgsArgs) ToClusterNodeConfigWorkloadMetadataConfigArgsOutput() ClusterNodeConfigWorkloadMetadataConfigArgsOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigArgsOutputWithContext(context.Background())
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgsArgs) ToClusterNodeConfigWorkloadMetadataConfigArgsOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigArgsOutput)
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgsArgs) ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgsArgs) ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigArgsOutput).ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx)
}

type ClusterNodeConfigWorkloadMetadataConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput
	ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Context) ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput
}

type clusterNodeConfigWorkloadMetadataConfigArgsPtrType ClusterNodeConfigWorkloadMetadataConfigArgsArgs

func ClusterNodeConfigWorkloadMetadataConfigArgsPtr(v *ClusterNodeConfigWorkloadMetadataConfigArgsArgs) ClusterNodeConfigWorkloadMetadataConfigArgsPtrInput {
	return (*clusterNodeConfigWorkloadMetadataConfigArgsPtrType)(v)
}

func (*clusterNodeConfigWorkloadMetadataConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (i *clusterNodeConfigWorkloadMetadataConfigArgsPtrType) ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigWorkloadMetadataConfigArgsPtrType) ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

type ClusterNodeConfigWorkloadMetadataConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigWorkloadMetadataConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (o ClusterNodeConfigWorkloadMetadataConfigArgsOutput) ToClusterNodeConfigWorkloadMetadataConfigArgsOutput() ClusterNodeConfigWorkloadMetadataConfigArgsOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigArgsOutput) ToClusterNodeConfigWorkloadMetadataConfigArgsOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigArgsOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigArgsOutput) ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigWorkloadMetadataConfigArgsOutput) ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigWorkloadMetadataConfigArgs) *ClusterNodeConfigWorkloadMetadataConfigArgs {
		return &v
	}).(ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodeConfigWorkloadMetadataConfigArgsOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigWorkloadMetadataConfigArgs) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (o ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput) ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput) ToClusterNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput) Elem() ClusterNodeConfigWorkloadMetadataConfigArgsOutput {
	return o.ApplyT(func(v *ClusterNodeConfigWorkloadMetadataConfigArgs) ClusterNodeConfigWorkloadMetadataConfigArgs {
		return *v
	}).(ClusterNodeConfigWorkloadMetadataConfigArgsOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigWorkloadMetadataConfigArgs) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodePool struct {
	Autoscaling *ClusterNodePoolAutoscaling `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount int `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls []string                  `pulumi:"instanceGroupUrls"`
	Management        ClusterNodePoolManagement `pulumi:"management"`
	MaxPodsPerNode    int                       `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name       string `pulumi:"name"`
	NamePrefix string `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used with
	// this provider. Structure is documented below.
	NodeConfig ClusterNodePoolNodeConfig `pulumi:"nodeConfig"`
	NodeCount  int                       `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations   []string                       `pulumi:"nodeLocations"`
	UpgradeSettings ClusterNodePoolUpgradeSettings `pulumi:"upgradeSettings"`
	Version         string                         `pulumi:"version"`
}

type ClusterNodePoolInput interface {
	pulumi.Input

	ToClusterNodePoolOutput() ClusterNodePoolOutput
	ToClusterNodePoolOutputWithContext(context.Context) ClusterNodePoolOutput
}

type ClusterNodePoolArgs struct {
	Autoscaling ClusterNodePoolAutoscalingPtrInput `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount pulumi.IntInput `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls pulumi.StringArrayInput        `pulumi:"instanceGroupUrls"`
	Management        ClusterNodePoolManagementInput `pulumi:"management"`
	MaxPodsPerNode    pulumi.IntInput                `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name       pulumi.StringInput `pulumi:"name"`
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used with
	// this provider. Structure is documented below.
	NodeConfig ClusterNodePoolNodeConfigInput `pulumi:"nodeConfig"`
	NodeCount  pulumi.IntInput                `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations   pulumi.StringArrayInput             `pulumi:"nodeLocations"`
	UpgradeSettings ClusterNodePoolUpgradeSettingsInput `pulumi:"upgradeSettings"`
	Version         pulumi.StringInput                  `pulumi:"version"`
}

func (ClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return i.ToClusterNodePoolOutputWithContext(context.Background())
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolOutput)
}

type ClusterNodePoolArrayInput interface {
	pulumi.Input

	ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput
	ToClusterNodePoolArrayOutputWithContext(context.Context) ClusterNodePoolArrayOutput
}

type ClusterNodePoolArray []ClusterNodePoolInput

func (ClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return i.ToClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolArrayOutput)
}

type ClusterNodePoolOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return o
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return o
}

func (o ClusterNodePoolOutput) Autoscaling() ClusterNodePoolAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolAutoscaling { return v.Autoscaling }).(ClusterNodePoolAutoscalingPtrOutput)
}

// The number of nodes to create in this
// cluster's default node pool. In regional or multi-zonal clusters, this is the
// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
// `container.NodePool` objects with no default node pool, you'll need to
// set this to a value of at least `1`, alongside setting
// `removeDefaultNodePool` to `true`.
func (o ClusterNodePoolOutput) InitialNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePool) int { return v.InitialNodeCount }).(pulumi.IntOutput)
}

// List of instance group URLs which have been assigned
// to the cluster.
func (o ClusterNodePoolOutput) InstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePool) []string { return v.InstanceGroupUrls }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolOutput) Management() ClusterNodePoolManagementOutput {
	return o.ApplyT(func(v ClusterNodePool) ClusterNodePoolManagement { return v.Management }).(ClusterNodePoolManagementOutput)
}

func (o ClusterNodePoolOutput) MaxPodsPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePool) int { return v.MaxPodsPerNode }).(pulumi.IntOutput)
}

// The name of the cluster, unique within the project and
// location.
func (o ClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o ClusterNodePoolOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePool) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// Parameters used in creating the default node pool.
// Generally, this field should not be used at the same time as a
// `container.NodePool` or a `nodePool` block; this configuration
// manages the default node pool, which isn't recommended to be used with
// this provider. Structure is documented below.
func (o ClusterNodePoolOutput) NodeConfig() ClusterNodePoolNodeConfigOutput {
	return o.ApplyT(func(v ClusterNodePool) ClusterNodePoolNodeConfig { return v.NodeConfig }).(ClusterNodePoolNodeConfigOutput)
}

func (o ClusterNodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePool) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The list of zones in which the cluster's nodes
// are located. Nodes must be in the region of their regional cluster or in the
// same region as their cluster's zone for zonal clusters. If this is specified for
// a zonal cluster, omit the cluster's zone.
func (o ClusterNodePoolOutput) NodeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePool) []string { return v.NodeLocations }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolOutput) UpgradeSettings() ClusterNodePoolUpgradeSettingsOutput {
	return o.ApplyT(func(v ClusterNodePool) ClusterNodePoolUpgradeSettings { return v.UpgradeSettings }).(ClusterNodePoolUpgradeSettingsOutput)
}

func (o ClusterNodePoolOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePool) string { return v.Version }).(pulumi.StringOutput)
}

type ClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePool {
		return vs[0].([]ClusterNodePool)[vs[1].(int)]
	}).(ClusterNodePoolOutput)
}

type ClusterNodePoolArgs struct {
	Autoscaling *ClusterNodePoolAutoscalingArgs `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount *int `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls []string                       `pulumi:"instanceGroupUrls"`
	Management        *ClusterNodePoolManagementArgs `pulumi:"management"`
	MaxPodsPerNode    *int                           `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name       *string `pulumi:"name"`
	NamePrefix *string `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used with
	// this provider. Structure is documented below.
	NodeConfig *ClusterNodePoolNodeConfigArgs `pulumi:"nodeConfig"`
	NodeCount  *int                           `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations   []string                            `pulumi:"nodeLocations"`
	UpgradeSettings *ClusterNodePoolUpgradeSettingsArgs `pulumi:"upgradeSettings"`
	Version         *string                             `pulumi:"version"`
}

type ClusterNodePoolArgsInput interface {
	pulumi.Input

	ToClusterNodePoolArgsOutput() ClusterNodePoolArgsOutput
	ToClusterNodePoolArgsOutputWithContext(context.Context) ClusterNodePoolArgsOutput
}

type ClusterNodePoolArgsArgs struct {
	Autoscaling ClusterNodePoolAutoscalingArgsPtrInput `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount pulumi.IntPtrInput `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls pulumi.StringArrayInput               `pulumi:"instanceGroupUrls"`
	Management        ClusterNodePoolManagementArgsPtrInput `pulumi:"management"`
	MaxPodsPerNode    pulumi.IntPtrInput                    `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name       pulumi.StringPtrInput `pulumi:"name"`
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used with
	// this provider. Structure is documented below.
	NodeConfig ClusterNodePoolNodeConfigArgsPtrInput `pulumi:"nodeConfig"`
	NodeCount  pulumi.IntPtrInput                    `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations   pulumi.StringArrayInput                    `pulumi:"nodeLocations"`
	UpgradeSettings ClusterNodePoolUpgradeSettingsArgsPtrInput `pulumi:"upgradeSettings"`
	Version         pulumi.StringPtrInput                      `pulumi:"version"`
}

func (ClusterNodePoolArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolArgs)(nil)).Elem()
}

func (i ClusterNodePoolArgsArgs) ToClusterNodePoolArgsOutput() ClusterNodePoolArgsOutput {
	return i.ToClusterNodePoolArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolArgsArgs) ToClusterNodePoolArgsOutputWithContext(ctx context.Context) ClusterNodePoolArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolArgsOutput)
}

type ClusterNodePoolArgsArrayInput interface {
	pulumi.Input

	ToClusterNodePoolArgsArrayOutput() ClusterNodePoolArgsArrayOutput
	ToClusterNodePoolArgsArrayOutputWithContext(context.Context) ClusterNodePoolArgsArrayOutput
}

type ClusterNodePoolArgsArray []ClusterNodePoolArgsInput

func (ClusterNodePoolArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolArgs)(nil)).Elem()
}

func (i ClusterNodePoolArgsArray) ToClusterNodePoolArgsArrayOutput() ClusterNodePoolArgsArrayOutput {
	return i.ToClusterNodePoolArgsArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolArgsArray) ToClusterNodePoolArgsArrayOutputWithContext(ctx context.Context) ClusterNodePoolArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolArgsArrayOutput)
}

type ClusterNodePoolArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolArgs)(nil)).Elem()
}

func (o ClusterNodePoolArgsOutput) ToClusterNodePoolArgsOutput() ClusterNodePoolArgsOutput {
	return o
}

func (o ClusterNodePoolArgsOutput) ToClusterNodePoolArgsOutputWithContext(ctx context.Context) ClusterNodePoolArgsOutput {
	return o
}

func (o ClusterNodePoolArgsOutput) Autoscaling() ClusterNodePoolAutoscalingArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *ClusterNodePoolAutoscalingArgs { return v.Autoscaling }).(ClusterNodePoolAutoscalingArgsPtrOutput)
}

// The number of nodes to create in this
// cluster's default node pool. In regional or multi-zonal clusters, this is the
// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
// `container.NodePool` objects with no default node pool, you'll need to
// set this to a value of at least `1`, alongside setting
// `removeDefaultNodePool` to `true`.
func (o ClusterNodePoolArgsOutput) InitialNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *int { return v.InitialNodeCount }).(pulumi.IntPtrOutput)
}

// List of instance group URLs which have been assigned
// to the cluster.
func (o ClusterNodePoolArgsOutput) InstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) []string { return v.InstanceGroupUrls }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolArgsOutput) Management() ClusterNodePoolManagementArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *ClusterNodePoolManagementArgs { return v.Management }).(ClusterNodePoolManagementArgsPtrOutput)
}

func (o ClusterNodePoolArgsOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// The name of the cluster, unique within the project and
// location.
func (o ClusterNodePoolArgsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterNodePoolArgsOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// Parameters used in creating the default node pool.
// Generally, this field should not be used at the same time as a
// `container.NodePool` or a `nodePool` block; this configuration
// manages the default node pool, which isn't recommended to be used with
// this provider. Structure is documented below.
func (o ClusterNodePoolArgsOutput) NodeConfig() ClusterNodePoolNodeConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *ClusterNodePoolNodeConfigArgs { return v.NodeConfig }).(ClusterNodePoolNodeConfigArgsPtrOutput)
}

func (o ClusterNodePoolArgsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The list of zones in which the cluster's nodes
// are located. Nodes must be in the region of their regional cluster or in the
// same region as their cluster's zone for zonal clusters. If this is specified for
// a zonal cluster, omit the cluster's zone.
func (o ClusterNodePoolArgsOutput) NodeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) []string { return v.NodeLocations }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolArgsOutput) UpgradeSettings() ClusterNodePoolUpgradeSettingsArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *ClusterNodePoolUpgradeSettingsArgs { return v.UpgradeSettings }).(ClusterNodePoolUpgradeSettingsArgsPtrOutput)
}

func (o ClusterNodePoolArgsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolArgs) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolArgs)(nil)).Elem()
}

func (o ClusterNodePoolArgsArrayOutput) ToClusterNodePoolArgsArrayOutput() ClusterNodePoolArgsArrayOutput {
	return o
}

func (o ClusterNodePoolArgsArrayOutput) ToClusterNodePoolArgsArrayOutputWithContext(ctx context.Context) ClusterNodePoolArgsArrayOutput {
	return o
}

func (o ClusterNodePoolArgsArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolArgs {
		return vs[0].([]ClusterNodePoolArgs)[vs[1].(int)]
	}).(ClusterNodePoolArgsOutput)
}

type ClusterNodePoolAutoscaling struct {
	MaxNodeCount int `pulumi:"maxNodeCount"`
	MinNodeCount int `pulumi:"minNodeCount"`
}

type ClusterNodePoolAutoscalingInput interface {
	pulumi.Input

	ToClusterNodePoolAutoscalingOutput() ClusterNodePoolAutoscalingOutput
	ToClusterNodePoolAutoscalingOutputWithContext(context.Context) ClusterNodePoolAutoscalingOutput
}

type ClusterNodePoolAutoscalingArgs struct {
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (ClusterNodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingOutput() ClusterNodePoolAutoscalingOutput {
	return i.ToClusterNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingOutput)
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return i.ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingOutput).ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx)
}

type ClusterNodePoolAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput
	ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Context) ClusterNodePoolAutoscalingPtrOutput
}

type clusterNodePoolAutoscalingPtrType ClusterNodePoolAutoscalingArgs

func ClusterNodePoolAutoscalingPtr(v *ClusterNodePoolAutoscalingArgs) ClusterNodePoolAutoscalingPtrInput {
	return (*clusterNodePoolAutoscalingPtrType)(v)
}

func (*clusterNodePoolAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i *clusterNodePoolAutoscalingPtrType) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return i.ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolAutoscalingPtrType) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingPtrOutput)
}

type ClusterNodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingOutput() ClusterNodePoolAutoscalingOutput {
	return o
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingOutput {
	return o
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return o.ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) *ClusterNodePoolAutoscaling {
		return &v
	}).(ClusterNodePoolAutoscalingPtrOutput)
}
func (o ClusterNodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

func (o ClusterNodePoolAutoscalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type ClusterNodePoolAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o ClusterNodePoolAutoscalingPtrOutput) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return o
}

func (o ClusterNodePoolAutoscalingPtrOutput) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return o
}

func (o ClusterNodePoolAutoscalingPtrOutput) Elem() ClusterNodePoolAutoscalingOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) ClusterNodePoolAutoscaling { return *v }).(ClusterNodePoolAutoscalingOutput)
}

func (o ClusterNodePoolAutoscalingPtrOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

func (o ClusterNodePoolAutoscalingPtrOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type ClusterNodePoolAutoscalingArgs struct {
	MaxNodeCount int `pulumi:"maxNodeCount"`
	MinNodeCount int `pulumi:"minNodeCount"`
}

type ClusterNodePoolAutoscalingArgsInput interface {
	pulumi.Input

	ToClusterNodePoolAutoscalingArgsOutput() ClusterNodePoolAutoscalingArgsOutput
	ToClusterNodePoolAutoscalingArgsOutputWithContext(context.Context) ClusterNodePoolAutoscalingArgsOutput
}

type ClusterNodePoolAutoscalingArgsArgs struct {
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (ClusterNodePoolAutoscalingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoscalingArgs)(nil)).Elem()
}

func (i ClusterNodePoolAutoscalingArgsArgs) ToClusterNodePoolAutoscalingArgsOutput() ClusterNodePoolAutoscalingArgsOutput {
	return i.ToClusterNodePoolAutoscalingArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoscalingArgsArgs) ToClusterNodePoolAutoscalingArgsOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingArgsOutput)
}

func (i ClusterNodePoolAutoscalingArgsArgs) ToClusterNodePoolAutoscalingArgsPtrOutput() ClusterNodePoolAutoscalingArgsPtrOutput {
	return i.ToClusterNodePoolAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoscalingArgsArgs) ToClusterNodePoolAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingArgsOutput).ToClusterNodePoolAutoscalingArgsPtrOutputWithContext(ctx)
}

type ClusterNodePoolAutoscalingArgsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolAutoscalingArgsPtrOutput() ClusterNodePoolAutoscalingArgsPtrOutput
	ToClusterNodePoolAutoscalingArgsPtrOutputWithContext(context.Context) ClusterNodePoolAutoscalingArgsPtrOutput
}

type clusterNodePoolAutoscalingArgsPtrType ClusterNodePoolAutoscalingArgsArgs

func ClusterNodePoolAutoscalingArgsPtr(v *ClusterNodePoolAutoscalingArgsArgs) ClusterNodePoolAutoscalingArgsPtrInput {
	return (*clusterNodePoolAutoscalingArgsPtrType)(v)
}

func (*clusterNodePoolAutoscalingArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoscalingArgs)(nil)).Elem()
}

func (i *clusterNodePoolAutoscalingArgsPtrType) ToClusterNodePoolAutoscalingArgsPtrOutput() ClusterNodePoolAutoscalingArgsPtrOutput {
	return i.ToClusterNodePoolAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolAutoscalingArgsPtrType) ToClusterNodePoolAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingArgsPtrOutput)
}

type ClusterNodePoolAutoscalingArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoscalingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoscalingArgs)(nil)).Elem()
}

func (o ClusterNodePoolAutoscalingArgsOutput) ToClusterNodePoolAutoscalingArgsOutput() ClusterNodePoolAutoscalingArgsOutput {
	return o
}

func (o ClusterNodePoolAutoscalingArgsOutput) ToClusterNodePoolAutoscalingArgsOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingArgsOutput {
	return o
}

func (o ClusterNodePoolAutoscalingArgsOutput) ToClusterNodePoolAutoscalingArgsPtrOutput() ClusterNodePoolAutoscalingArgsPtrOutput {
	return o.ToClusterNodePoolAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolAutoscalingArgsOutput) ToClusterNodePoolAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscalingArgs) *ClusterNodePoolAutoscalingArgs {
		return &v
	}).(ClusterNodePoolAutoscalingArgsPtrOutput)
}
func (o ClusterNodePoolAutoscalingArgsOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscalingArgs) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

func (o ClusterNodePoolAutoscalingArgsOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscalingArgs) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type ClusterNodePoolAutoscalingArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoscalingArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoscalingArgs)(nil)).Elem()
}

func (o ClusterNodePoolAutoscalingArgsPtrOutput) ToClusterNodePoolAutoscalingArgsPtrOutput() ClusterNodePoolAutoscalingArgsPtrOutput {
	return o
}

func (o ClusterNodePoolAutoscalingArgsPtrOutput) ToClusterNodePoolAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingArgsPtrOutput {
	return o
}

func (o ClusterNodePoolAutoscalingArgsPtrOutput) Elem() ClusterNodePoolAutoscalingArgsOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscalingArgs) ClusterNodePoolAutoscalingArgs { return *v }).(ClusterNodePoolAutoscalingArgsOutput)
}

func (o ClusterNodePoolAutoscalingArgsPtrOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscalingArgs) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

func (o ClusterNodePoolAutoscalingArgsPtrOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscalingArgs) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type ClusterNodePoolManagement struct {
	AutoRepair  *bool `pulumi:"autoRepair"`
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

type ClusterNodePoolManagementInput interface {
	pulumi.Input

	ToClusterNodePoolManagementOutput() ClusterNodePoolManagementOutput
	ToClusterNodePoolManagementOutputWithContext(context.Context) ClusterNodePoolManagementOutput
}

type ClusterNodePoolManagementArgs struct {
	AutoRepair  pulumi.BoolPtrInput `pulumi:"autoRepair"`
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (ClusterNodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolManagement)(nil)).Elem()
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementOutput() ClusterNodePoolManagementOutput {
	return i.ToClusterNodePoolManagementOutputWithContext(context.Background())
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementOutputWithContext(ctx context.Context) ClusterNodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementOutput)
}

type ClusterNodePoolManagementOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolManagement)(nil)).Elem()
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementOutput() ClusterNodePoolManagementOutput {
	return o
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementOutputWithContext(ctx context.Context) ClusterNodePoolManagementOutput {
	return o
}

func (o ClusterNodePoolManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

func (o ClusterNodePoolManagementOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolManagementArgs struct {
	AutoRepair  *bool `pulumi:"autoRepair"`
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

type ClusterNodePoolManagementArgsInput interface {
	pulumi.Input

	ToClusterNodePoolManagementArgsOutput() ClusterNodePoolManagementArgsOutput
	ToClusterNodePoolManagementArgsOutputWithContext(context.Context) ClusterNodePoolManagementArgsOutput
}

type ClusterNodePoolManagementArgsArgs struct {
	AutoRepair  pulumi.BoolPtrInput `pulumi:"autoRepair"`
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (ClusterNodePoolManagementArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolManagementArgs)(nil)).Elem()
}

func (i ClusterNodePoolManagementArgsArgs) ToClusterNodePoolManagementArgsOutput() ClusterNodePoolManagementArgsOutput {
	return i.ToClusterNodePoolManagementArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolManagementArgsArgs) ToClusterNodePoolManagementArgsOutputWithContext(ctx context.Context) ClusterNodePoolManagementArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementArgsOutput)
}

func (i ClusterNodePoolManagementArgsArgs) ToClusterNodePoolManagementArgsPtrOutput() ClusterNodePoolManagementArgsPtrOutput {
	return i.ToClusterNodePoolManagementArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolManagementArgsArgs) ToClusterNodePoolManagementArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementArgsOutput).ToClusterNodePoolManagementArgsPtrOutputWithContext(ctx)
}

type ClusterNodePoolManagementArgsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolManagementArgsPtrOutput() ClusterNodePoolManagementArgsPtrOutput
	ToClusterNodePoolManagementArgsPtrOutputWithContext(context.Context) ClusterNodePoolManagementArgsPtrOutput
}

type clusterNodePoolManagementArgsPtrType ClusterNodePoolManagementArgsArgs

func ClusterNodePoolManagementArgsPtr(v *ClusterNodePoolManagementArgsArgs) ClusterNodePoolManagementArgsPtrInput {
	return (*clusterNodePoolManagementArgsPtrType)(v)
}

func (*clusterNodePoolManagementArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolManagementArgs)(nil)).Elem()
}

func (i *clusterNodePoolManagementArgsPtrType) ToClusterNodePoolManagementArgsPtrOutput() ClusterNodePoolManagementArgsPtrOutput {
	return i.ToClusterNodePoolManagementArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolManagementArgsPtrType) ToClusterNodePoolManagementArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementArgsPtrOutput)
}

type ClusterNodePoolManagementArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolManagementArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolManagementArgs)(nil)).Elem()
}

func (o ClusterNodePoolManagementArgsOutput) ToClusterNodePoolManagementArgsOutput() ClusterNodePoolManagementArgsOutput {
	return o
}

func (o ClusterNodePoolManagementArgsOutput) ToClusterNodePoolManagementArgsOutputWithContext(ctx context.Context) ClusterNodePoolManagementArgsOutput {
	return o
}

func (o ClusterNodePoolManagementArgsOutput) ToClusterNodePoolManagementArgsPtrOutput() ClusterNodePoolManagementArgsPtrOutput {
	return o.ToClusterNodePoolManagementArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolManagementArgsOutput) ToClusterNodePoolManagementArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagementArgs) *ClusterNodePoolManagementArgs {
		return &v
	}).(ClusterNodePoolManagementArgsPtrOutput)
}
func (o ClusterNodePoolManagementArgsOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagementArgs) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

func (o ClusterNodePoolManagementArgsOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagementArgs) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolManagementArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolManagementArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolManagementArgs)(nil)).Elem()
}

func (o ClusterNodePoolManagementArgsPtrOutput) ToClusterNodePoolManagementArgsPtrOutput() ClusterNodePoolManagementArgsPtrOutput {
	return o
}

func (o ClusterNodePoolManagementArgsPtrOutput) ToClusterNodePoolManagementArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementArgsPtrOutput {
	return o
}

func (o ClusterNodePoolManagementArgsPtrOutput) Elem() ClusterNodePoolManagementArgsOutput {
	return o.ApplyT(func(v *ClusterNodePoolManagementArgs) ClusterNodePoolManagementArgs { return *v }).(ClusterNodePoolManagementArgsOutput)
}

func (o ClusterNodePoolManagementArgsPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagementArgs) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

func (o ClusterNodePoolManagementArgsPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagementArgs) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfig struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType string `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodePoolNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType string `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels map[string]string `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount int `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig *ClusterNodePoolNodeConfigSandboxConfig `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodePoolNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodePoolNodeConfigTaint `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodePoolNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

type ClusterNodePoolNodeConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigOutput() ClusterNodePoolNodeConfigOutput
	ToClusterNodePoolNodeConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigOutput
}

type ClusterNodePoolNodeConfigArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodePoolNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntInput `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig ClusterNodePoolNodeConfigSandboxConfigPtrInput `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodePoolNodeConfigShieldedInstanceConfigInput `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodePoolNodeConfigTaintArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigOutput() ClusterNodePoolNodeConfigOutput {
	return i.ToClusterNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigOutput)
}

type ClusterNodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigOutput() ClusterNodePoolNodeConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigOutput {
	return o
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodePoolNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodePoolNodeConfigOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodePoolNodeConfigOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodePoolNodeConfigOutput) GuestAccelerators() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigGuestAccelerator {
		return v.GuestAccelerators
	}).(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodePoolNodeConfigOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodePoolNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodePoolNodeConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodePoolNodeConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodePoolNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodePoolNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodePoolNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodePoolNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) SandboxConfig() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigSandboxConfig { return v.SandboxConfig }).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodePoolNodeConfigOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) ShieldedInstanceConfig() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) ClusterNodePoolNodeConfigShieldedInstanceConfig {
		return v.ShieldedInstanceConfig
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodePoolNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) Taints() ClusterNodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigTaint { return v.Taints }).(ClusterNodePoolNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) WorkloadMetadataConfig() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return v.WorkloadMetadataConfig
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolNodeConfigArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType *string `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodePoolNodeConfigGuestAcceleratorArgs `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType *string `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels map[string]string `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount *int `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType *string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig *ClusterNodePoolNodeConfigSandboxConfigArgs `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig *ClusterNodePoolNodeConfigShieldedInstanceConfigArgs `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodePoolNodeConfigTaintArgs `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs `pulumi:"workloadMetadataConfig"`
}

type ClusterNodePoolNodeConfigArgsInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigArgsOutput() ClusterNodePoolNodeConfigArgsOutput
	ToClusterNodePoolNodeConfigArgsOutputWithContext(context.Context) ClusterNodePoolNodeConfigArgsOutput
}

type ClusterNodePoolNodeConfigArgsArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayInput `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntPtrInput `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig ClusterNodePoolNodeConfigSandboxConfigArgsPtrInput `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrInput `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodePoolNodeConfigTaintArgsArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodePoolNodeConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigArgs)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigArgsArgs) ToClusterNodePoolNodeConfigArgsOutput() ClusterNodePoolNodeConfigArgsOutput {
	return i.ToClusterNodePoolNodeConfigArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigArgsArgs) ToClusterNodePoolNodeConfigArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigArgsOutput)
}

func (i ClusterNodePoolNodeConfigArgsArgs) ToClusterNodePoolNodeConfigArgsPtrOutput() ClusterNodePoolNodeConfigArgsPtrOutput {
	return i.ToClusterNodePoolNodeConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigArgsArgs) ToClusterNodePoolNodeConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigArgsOutput).ToClusterNodePoolNodeConfigArgsPtrOutputWithContext(ctx)
}

type ClusterNodePoolNodeConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigArgsPtrOutput() ClusterNodePoolNodeConfigArgsPtrOutput
	ToClusterNodePoolNodeConfigArgsPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigArgsPtrOutput
}

type clusterNodePoolNodeConfigArgsPtrType ClusterNodePoolNodeConfigArgsArgs

func ClusterNodePoolNodeConfigArgsPtr(v *ClusterNodePoolNodeConfigArgsArgs) ClusterNodePoolNodeConfigArgsPtrInput {
	return (*clusterNodePoolNodeConfigArgsPtrType)(v)
}

func (*clusterNodePoolNodeConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigArgs)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigArgsPtrType) ToClusterNodePoolNodeConfigArgsPtrOutput() ClusterNodePoolNodeConfigArgsPtrOutput {
	return i.ToClusterNodePoolNodeConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigArgsPtrType) ToClusterNodePoolNodeConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigArgsPtrOutput)
}

type ClusterNodePoolNodeConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigArgsOutput) ToClusterNodePoolNodeConfigArgsOutput() ClusterNodePoolNodeConfigArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigArgsOutput) ToClusterNodePoolNodeConfigArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigArgsOutput) ToClusterNodePoolNodeConfigArgsPtrOutput() ClusterNodePoolNodeConfigArgsPtrOutput {
	return o.ToClusterNodePoolNodeConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigArgsOutput) ToClusterNodePoolNodeConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *ClusterNodePoolNodeConfigArgs {
		return &v
	}).(ClusterNodePoolNodeConfigArgsPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodePoolNodeConfigArgsOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodePoolNodeConfigArgsOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodePoolNodeConfigArgsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodePoolNodeConfigArgsOutput) GuestAccelerators() ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) []ClusterNodePoolNodeConfigGuestAcceleratorArgs {
		return v.GuestAccelerators
	}).(ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodePoolNodeConfigArgsOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodePoolNodeConfigArgsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodePoolNodeConfigArgsOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodePoolNodeConfigArgsOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodePoolNodeConfigArgsOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodePoolNodeConfigArgsOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodePoolNodeConfigArgsOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodePoolNodeConfigArgsOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigArgsOutput) SandboxConfig() ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *ClusterNodePoolNodeConfigSandboxConfigArgs {
		return v.SandboxConfig
	}).(ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodePoolNodeConfigArgsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodePoolNodeConfigArgsOutput) ShieldedInstanceConfig() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *ClusterNodePoolNodeConfigShieldedInstanceConfigArgs {
		return v.ShieldedInstanceConfig
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodePoolNodeConfigArgsOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodePoolNodeConfigArgsOutput) Taints() ClusterNodePoolNodeConfigTaintArgsArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) []ClusterNodePoolNodeConfigTaintArgs { return v.Taints }).(ClusterNodePoolNodeConfigTaintArgsArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigArgsOutput) WorkloadMetadataConfig() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs {
		return v.WorkloadMetadataConfig
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

type ClusterNodePoolNodeConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigArgsPtrOutput) ToClusterNodePoolNodeConfigArgsPtrOutput() ClusterNodePoolNodeConfigArgsPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigArgsPtrOutput) ToClusterNodePoolNodeConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigArgsPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigArgsPtrOutput) Elem() ClusterNodePoolNodeConfigArgsOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigArgs) ClusterNodePoolNodeConfigArgs { return *v }).(ClusterNodePoolNodeConfigArgsOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodePoolNodeConfigArgsPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodePoolNodeConfigArgsPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) GuestAccelerators() ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) []ClusterNodePoolNodeConfigGuestAcceleratorArgs {
		return v.GuestAccelerators
	}).(ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodePoolNodeConfigArgsPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodePoolNodeConfigArgsPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) SandboxConfig() ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *ClusterNodePoolNodeConfigSandboxConfigArgs {
		return v.SandboxConfig
	}).(ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) ShieldedInstanceConfig() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *ClusterNodePoolNodeConfigShieldedInstanceConfigArgs {
		return v.ShieldedInstanceConfig
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) Taints() ClusterNodePoolNodeConfigTaintArgsArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) []ClusterNodePoolNodeConfigTaintArgs { return v.Taints }).(ClusterNodePoolNodeConfigTaintArgsArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigArgsPtrOutput) WorkloadMetadataConfig() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigArgs) *ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs {
		return v.WorkloadMetadataConfig
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

type ClusterNodePoolNodeConfigGuestAccelerator struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

type ClusterNodePoolNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorOutput() ClusterNodePoolNodeConfigGuestAcceleratorOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodePoolNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgs) ToClusterNodePoolNodeConfigGuestAcceleratorOutput() ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgs) ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorArray []ClusterNodePoolNodeConfigGuestAcceleratorInput

func (ClusterNodePoolNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArray) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArray) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) ToClusterNodePoolNodeConfigGuestAcceleratorOutput() ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigGuestAccelerator {
		return vs[0].([]ClusterNodePoolNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgsInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorArgsOutput() ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorArgsOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgsArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodePoolNodeConfigGuestAcceleratorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgsArgs) ToClusterNodePoolNodeConfigGuestAcceleratorArgsOutput() ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgsArgs) ToClusterNodePoolNodeConfigGuestAcceleratorArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgsArray []ClusterNodePoolNodeConfigGuestAcceleratorArgsInput

func (ClusterNodePoolNodeConfigGuestAcceleratorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgsArray) ToClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgsArray) ToClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArgsOutput() ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAcceleratorArgs) int { return v.Count }).(pulumi.IntOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAcceleratorArgs) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigGuestAcceleratorArgs {
		return vs[0].([]ClusterNodePoolNodeConfigGuestAcceleratorArgs)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput)
}

type ClusterNodePoolNodeConfigSandboxConfig struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType string `pulumi:"sandboxType"`
}

type ClusterNodePoolNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSandboxConfigOutput() ClusterNodePoolNodeConfigSandboxConfigOutput
	ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigSandboxConfigOutput
}

type ClusterNodePoolNodeConfigSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodePoolNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigOutput() ClusterNodePoolNodeConfigSandboxConfigOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigOutput)
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigOutput).ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

type ClusterNodePoolNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput
	ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput
}

type clusterNodePoolNodeConfigSandboxConfigPtrType ClusterNodePoolNodeConfigSandboxConfigArgs

func ClusterNodePoolNodeConfigSandboxConfigPtr(v *ClusterNodePoolNodeConfigSandboxConfigArgs) ClusterNodePoolNodeConfigSandboxConfigPtrInput {
	return (*clusterNodePoolNodeConfigSandboxConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigSandboxConfigPtrType) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigSandboxConfigPtrType) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

type ClusterNodePoolNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigOutput() ClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSandboxConfig) *ClusterNodePoolNodeConfigSandboxConfig {
		return &v
	}).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodePoolNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) Elem() ClusterNodePoolNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigSandboxConfig) ClusterNodePoolNodeConfigSandboxConfig { return *v }).(ClusterNodePoolNodeConfigSandboxConfigOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType string `pulumi:"sandboxType"`
}

type ClusterNodePoolNodeConfigSandboxConfigArgsInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSandboxConfigArgsOutput() ClusterNodePoolNodeConfigSandboxConfigArgsOutput
	ToClusterNodePoolNodeConfigSandboxConfigArgsOutputWithContext(context.Context) ClusterNodePoolNodeConfigSandboxConfigArgsOutput
}

type ClusterNodePoolNodeConfigSandboxConfigArgsArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodePoolNodeConfigSandboxConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgsArgs) ToClusterNodePoolNodeConfigSandboxConfigArgsOutput() ClusterNodePoolNodeConfigSandboxConfigArgsOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgsArgs) ToClusterNodePoolNodeConfigSandboxConfigArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigArgsOutput)
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgsArgs) ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput() ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgsArgs) ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigArgsOutput).ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx)
}

type ClusterNodePoolNodeConfigSandboxConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput() ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput
	ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput
}

type clusterNodePoolNodeConfigSandboxConfigArgsPtrType ClusterNodePoolNodeConfigSandboxConfigArgsArgs

func ClusterNodePoolNodeConfigSandboxConfigArgsPtr(v *ClusterNodePoolNodeConfigSandboxConfigArgsArgs) ClusterNodePoolNodeConfigSandboxConfigArgsPtrInput {
	return (*clusterNodePoolNodeConfigSandboxConfigArgsPtrType)(v)
}

func (*clusterNodePoolNodeConfigSandboxConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigSandboxConfigArgsPtrType) ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput() ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigSandboxConfigArgsPtrType) ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput)
}

type ClusterNodePoolNodeConfigSandboxConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSandboxConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSandboxConfigArgsOutput) ToClusterNodePoolNodeConfigSandboxConfigArgsOutput() ClusterNodePoolNodeConfigSandboxConfigArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigArgsOutput) ToClusterNodePoolNodeConfigSandboxConfigArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigArgsOutput) ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput() ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o.ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigSandboxConfigArgsOutput) ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSandboxConfigArgs) *ClusterNodePoolNodeConfigSandboxConfigArgs {
		return &v
	}).(ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodePoolNodeConfigSandboxConfigArgsOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSandboxConfigArgs) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput) ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput() ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput) ToClusterNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput) Elem() ClusterNodePoolNodeConfigSandboxConfigArgsOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigSandboxConfigArgs) ClusterNodePoolNodeConfigSandboxConfigArgs {
		return *v
	}).(ClusterNodePoolNodeConfigSandboxConfigArgsOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSandboxConfigArgs) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfig struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput
	ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigOutput
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigArgsInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput
	ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutputWithContext(context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigArgsArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodePoolNodeConfigShieldedInstanceConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgsArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgsArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput)
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgsArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgsArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput).ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput
	ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput
}

type clusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrType ClusterNodePoolNodeConfigShieldedInstanceConfigArgsArgs

func ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtr(v *ClusterNodePoolNodeConfigShieldedInstanceConfigArgsArgs) ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrInput {
	return (*clusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrType)(v)
}

func (*clusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrType) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrType) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) *ClusterNodePoolNodeConfigShieldedInstanceConfigArgs {
		return &v
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) Elem() ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ClusterNodePoolNodeConfigShieldedInstanceConfigArgs {
		return *v
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigTaint struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

type ClusterNodePoolNodeConfigTaintInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigTaintOutput() ClusterNodePoolNodeConfigTaintOutput
	ToClusterNodePoolNodeConfigTaintOutputWithContext(context.Context) ClusterNodePoolNodeConfigTaintOutput
}

type ClusterNodePoolNodeConfigTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodePoolNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigTaintArgs) ToClusterNodePoolNodeConfigTaintOutput() ClusterNodePoolNodeConfigTaintOutput {
	return i.ToClusterNodePoolNodeConfigTaintOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigTaintArgs) ToClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigTaintOutput)
}

type ClusterNodePoolNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigTaintArrayOutput() ClusterNodePoolNodeConfigTaintArrayOutput
	ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigTaintArrayOutput
}

type ClusterNodePoolNodeConfigTaintArray []ClusterNodePoolNodeConfigTaintInput

func (ClusterNodePoolNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigTaintArray) ToClusterNodePoolNodeConfigTaintArrayOutput() ClusterNodePoolNodeConfigTaintArrayOutput {
	return i.ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigTaintArray) ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigTaintArrayOutput)
}

type ClusterNodePoolNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigTaintOutput) ToClusterNodePoolNodeConfigTaintOutput() ClusterNodePoolNodeConfigTaintOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintOutput) ToClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodePoolNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodePoolNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodePoolNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigTaintArrayOutput) ToClusterNodePoolNodeConfigTaintArrayOutput() ClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintArrayOutput) ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigTaint {
		return vs[0].([]ClusterNodePoolNodeConfigTaint)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigTaintOutput)
}

type ClusterNodePoolNodeConfigTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

type ClusterNodePoolNodeConfigTaintArgsInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigTaintArgsOutput() ClusterNodePoolNodeConfigTaintArgsOutput
	ToClusterNodePoolNodeConfigTaintArgsOutputWithContext(context.Context) ClusterNodePoolNodeConfigTaintArgsOutput
}

type ClusterNodePoolNodeConfigTaintArgsArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodePoolNodeConfigTaintArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigTaintArgs)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigTaintArgsArgs) ToClusterNodePoolNodeConfigTaintArgsOutput() ClusterNodePoolNodeConfigTaintArgsOutput {
	return i.ToClusterNodePoolNodeConfigTaintArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigTaintArgsArgs) ToClusterNodePoolNodeConfigTaintArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigTaintArgsOutput)
}

type ClusterNodePoolNodeConfigTaintArgsArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigTaintArgsArrayOutput() ClusterNodePoolNodeConfigTaintArgsArrayOutput
	ToClusterNodePoolNodeConfigTaintArgsArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigTaintArgsArrayOutput
}

type ClusterNodePoolNodeConfigTaintArgsArray []ClusterNodePoolNodeConfigTaintArgsInput

func (ClusterNodePoolNodeConfigTaintArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigTaintArgs)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigTaintArgsArray) ToClusterNodePoolNodeConfigTaintArgsArrayOutput() ClusterNodePoolNodeConfigTaintArgsArrayOutput {
	return i.ToClusterNodePoolNodeConfigTaintArgsArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigTaintArgsArray) ToClusterNodePoolNodeConfigTaintArgsArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigTaintArgsArrayOutput)
}

type ClusterNodePoolNodeConfigTaintArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigTaintArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigTaintArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigTaintArgsOutput) ToClusterNodePoolNodeConfigTaintArgsOutput() ClusterNodePoolNodeConfigTaintArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintArgsOutput) ToClusterNodePoolNodeConfigTaintArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArgsOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodePoolNodeConfigTaintArgsOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaintArgs) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodePoolNodeConfigTaintArgsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaintArgs) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodePoolNodeConfigTaintArgsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaintArgs) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigTaintArgsArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigTaintArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigTaintArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigTaintArgsArrayOutput) ToClusterNodePoolNodeConfigTaintArgsArrayOutput() ClusterNodePoolNodeConfigTaintArgsArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintArgsArrayOutput) ToClusterNodePoolNodeConfigTaintArgsArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArgsArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintArgsArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigTaintArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigTaintArgs {
		return vs[0].([]ClusterNodePoolNodeConfigTaintArgs)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigTaintArgsOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfig struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
	ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput).ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput
	ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput
}

type clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs

func ClusterNodePoolNodeConfigWorkloadMetadataConfigPtr(v *ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput {
	return (*clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigWorkloadMetadataConfig) *ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return &v
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) Elem() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigWorkloadMetadataConfig) ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return *v
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput
	ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutputWithContext(context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput)
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput).ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput
	ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput
}

type clusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrType ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsArgs

func ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtr(v *ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrInput {
	return (*clusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrType)(v)
}

func (*clusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrType) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrType) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) *ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs {
		return &v
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) Elem() ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs {
		return *v
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodePoolState struct {
	Autoscaling *ClusterNodePoolStateAutoscaling `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount *int `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls []string                        `pulumi:"instanceGroupUrls"`
	Management        *ClusterNodePoolStateManagement `pulumi:"management"`
	MaxPodsPerNode    *int                            `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name       *string `pulumi:"name"`
	NamePrefix *string `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used with
	// this provider. Structure is documented below.
	NodeConfig *ClusterNodePoolStateNodeConfig `pulumi:"nodeConfig"`
	NodeCount  *int                            `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations   []string                             `pulumi:"nodeLocations"`
	UpgradeSettings *ClusterNodePoolStateUpgradeSettings `pulumi:"upgradeSettings"`
	Version         *string                              `pulumi:"version"`
}

type ClusterNodePoolStateInput interface {
	pulumi.Input

	ToClusterNodePoolStateOutput() ClusterNodePoolStateOutput
	ToClusterNodePoolStateOutputWithContext(context.Context) ClusterNodePoolStateOutput
}

type ClusterNodePoolStateArgs struct {
	Autoscaling ClusterNodePoolStateAutoscalingPtrInput `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount pulumi.IntPtrInput `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls pulumi.StringArrayInput                `pulumi:"instanceGroupUrls"`
	Management        ClusterNodePoolStateManagementPtrInput `pulumi:"management"`
	MaxPodsPerNode    pulumi.IntPtrInput                     `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name       pulumi.StringPtrInput `pulumi:"name"`
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used with
	// this provider. Structure is documented below.
	NodeConfig ClusterNodePoolStateNodeConfigPtrInput `pulumi:"nodeConfig"`
	NodeCount  pulumi.IntPtrInput                     `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations   pulumi.StringArrayInput                     `pulumi:"nodeLocations"`
	UpgradeSettings ClusterNodePoolStateUpgradeSettingsPtrInput `pulumi:"upgradeSettings"`
	Version         pulumi.StringPtrInput                       `pulumi:"version"`
}

func (ClusterNodePoolStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolState)(nil)).Elem()
}

func (i ClusterNodePoolStateArgs) ToClusterNodePoolStateOutput() ClusterNodePoolStateOutput {
	return i.ToClusterNodePoolStateOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateArgs) ToClusterNodePoolStateOutputWithContext(ctx context.Context) ClusterNodePoolStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateOutput)
}

type ClusterNodePoolStateArrayInput interface {
	pulumi.Input

	ToClusterNodePoolStateArrayOutput() ClusterNodePoolStateArrayOutput
	ToClusterNodePoolStateArrayOutputWithContext(context.Context) ClusterNodePoolStateArrayOutput
}

type ClusterNodePoolStateArray []ClusterNodePoolStateInput

func (ClusterNodePoolStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolState)(nil)).Elem()
}

func (i ClusterNodePoolStateArray) ToClusterNodePoolStateArrayOutput() ClusterNodePoolStateArrayOutput {
	return i.ToClusterNodePoolStateArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateArray) ToClusterNodePoolStateArrayOutputWithContext(ctx context.Context) ClusterNodePoolStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateArrayOutput)
}

type ClusterNodePoolStateOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolState)(nil)).Elem()
}

func (o ClusterNodePoolStateOutput) ToClusterNodePoolStateOutput() ClusterNodePoolStateOutput {
	return o
}

func (o ClusterNodePoolStateOutput) ToClusterNodePoolStateOutputWithContext(ctx context.Context) ClusterNodePoolStateOutput {
	return o
}

func (o ClusterNodePoolStateOutput) Autoscaling() ClusterNodePoolStateAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *ClusterNodePoolStateAutoscaling { return v.Autoscaling }).(ClusterNodePoolStateAutoscalingPtrOutput)
}

// The number of nodes to create in this
// cluster's default node pool. In regional or multi-zonal clusters, this is the
// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
// `container.NodePool` objects with no default node pool, you'll need to
// set this to a value of at least `1`, alongside setting
// `removeDefaultNodePool` to `true`.
func (o ClusterNodePoolStateOutput) InitialNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *int { return v.InitialNodeCount }).(pulumi.IntPtrOutput)
}

// List of instance group URLs which have been assigned
// to the cluster.
func (o ClusterNodePoolStateOutput) InstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolState) []string { return v.InstanceGroupUrls }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolStateOutput) Management() ClusterNodePoolStateManagementPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *ClusterNodePoolStateManagement { return v.Management }).(ClusterNodePoolStateManagementPtrOutput)
}

func (o ClusterNodePoolStateOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// The name of the cluster, unique within the project and
// location.
func (o ClusterNodePoolStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterNodePoolStateOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// Parameters used in creating the default node pool.
// Generally, this field should not be used at the same time as a
// `container.NodePool` or a `nodePool` block; this configuration
// manages the default node pool, which isn't recommended to be used with
// this provider. Structure is documented below.
func (o ClusterNodePoolStateOutput) NodeConfig() ClusterNodePoolStateNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *ClusterNodePoolStateNodeConfig { return v.NodeConfig }).(ClusterNodePoolStateNodeConfigPtrOutput)
}

func (o ClusterNodePoolStateOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The list of zones in which the cluster's nodes
// are located. Nodes must be in the region of their regional cluster or in the
// same region as their cluster's zone for zonal clusters. If this is specified for
// a zonal cluster, omit the cluster's zone.
func (o ClusterNodePoolStateOutput) NodeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolState) []string { return v.NodeLocations }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolStateOutput) UpgradeSettings() ClusterNodePoolStateUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *ClusterNodePoolStateUpgradeSettings { return v.UpgradeSettings }).(ClusterNodePoolStateUpgradeSettingsPtrOutput)
}

func (o ClusterNodePoolStateOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolState) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolStateArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolState)(nil)).Elem()
}

func (o ClusterNodePoolStateArrayOutput) ToClusterNodePoolStateArrayOutput() ClusterNodePoolStateArrayOutput {
	return o
}

func (o ClusterNodePoolStateArrayOutput) ToClusterNodePoolStateArrayOutputWithContext(ctx context.Context) ClusterNodePoolStateArrayOutput {
	return o
}

func (o ClusterNodePoolStateArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolState {
		return vs[0].([]ClusterNodePoolState)[vs[1].(int)]
	}).(ClusterNodePoolStateOutput)
}

type ClusterNodePoolStateAutoscaling struct {
	MaxNodeCount int `pulumi:"maxNodeCount"`
	MinNodeCount int `pulumi:"minNodeCount"`
}

type ClusterNodePoolStateAutoscalingInput interface {
	pulumi.Input

	ToClusterNodePoolStateAutoscalingOutput() ClusterNodePoolStateAutoscalingOutput
	ToClusterNodePoolStateAutoscalingOutputWithContext(context.Context) ClusterNodePoolStateAutoscalingOutput
}

type ClusterNodePoolStateAutoscalingArgs struct {
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (ClusterNodePoolStateAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateAutoscaling)(nil)).Elem()
}

func (i ClusterNodePoolStateAutoscalingArgs) ToClusterNodePoolStateAutoscalingOutput() ClusterNodePoolStateAutoscalingOutput {
	return i.ToClusterNodePoolStateAutoscalingOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateAutoscalingArgs) ToClusterNodePoolStateAutoscalingOutputWithContext(ctx context.Context) ClusterNodePoolStateAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateAutoscalingOutput)
}

func (i ClusterNodePoolStateAutoscalingArgs) ToClusterNodePoolStateAutoscalingPtrOutput() ClusterNodePoolStateAutoscalingPtrOutput {
	return i.ToClusterNodePoolStateAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateAutoscalingArgs) ToClusterNodePoolStateAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateAutoscalingOutput).ToClusterNodePoolStateAutoscalingPtrOutputWithContext(ctx)
}

type ClusterNodePoolStateAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterNodePoolStateAutoscalingPtrOutput() ClusterNodePoolStateAutoscalingPtrOutput
	ToClusterNodePoolStateAutoscalingPtrOutputWithContext(context.Context) ClusterNodePoolStateAutoscalingPtrOutput
}

type clusterNodePoolStateAutoscalingPtrType ClusterNodePoolStateAutoscalingArgs

func ClusterNodePoolStateAutoscalingPtr(v *ClusterNodePoolStateAutoscalingArgs) ClusterNodePoolStateAutoscalingPtrInput {
	return (*clusterNodePoolStateAutoscalingPtrType)(v)
}

func (*clusterNodePoolStateAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateAutoscaling)(nil)).Elem()
}

func (i *clusterNodePoolStateAutoscalingPtrType) ToClusterNodePoolStateAutoscalingPtrOutput() ClusterNodePoolStateAutoscalingPtrOutput {
	return i.ToClusterNodePoolStateAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolStateAutoscalingPtrType) ToClusterNodePoolStateAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateAutoscalingPtrOutput)
}

type ClusterNodePoolStateAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateAutoscaling)(nil)).Elem()
}

func (o ClusterNodePoolStateAutoscalingOutput) ToClusterNodePoolStateAutoscalingOutput() ClusterNodePoolStateAutoscalingOutput {
	return o
}

func (o ClusterNodePoolStateAutoscalingOutput) ToClusterNodePoolStateAutoscalingOutputWithContext(ctx context.Context) ClusterNodePoolStateAutoscalingOutput {
	return o
}

func (o ClusterNodePoolStateAutoscalingOutput) ToClusterNodePoolStateAutoscalingPtrOutput() ClusterNodePoolStateAutoscalingPtrOutput {
	return o.ToClusterNodePoolStateAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolStateAutoscalingOutput) ToClusterNodePoolStateAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateAutoscaling) *ClusterNodePoolStateAutoscaling {
		return &v
	}).(ClusterNodePoolStateAutoscalingPtrOutput)
}
func (o ClusterNodePoolStateAutoscalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolStateAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

func (o ClusterNodePoolStateAutoscalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolStateAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type ClusterNodePoolStateAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateAutoscaling)(nil)).Elem()
}

func (o ClusterNodePoolStateAutoscalingPtrOutput) ToClusterNodePoolStateAutoscalingPtrOutput() ClusterNodePoolStateAutoscalingPtrOutput {
	return o
}

func (o ClusterNodePoolStateAutoscalingPtrOutput) ToClusterNodePoolStateAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateAutoscalingPtrOutput {
	return o
}

func (o ClusterNodePoolStateAutoscalingPtrOutput) Elem() ClusterNodePoolStateAutoscalingOutput {
	return o.ApplyT(func(v *ClusterNodePoolStateAutoscaling) ClusterNodePoolStateAutoscaling { return *v }).(ClusterNodePoolStateAutoscalingOutput)
}

func (o ClusterNodePoolStateAutoscalingPtrOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolStateAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

func (o ClusterNodePoolStateAutoscalingPtrOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolStateAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type ClusterNodePoolStateManagement struct {
	AutoRepair  *bool `pulumi:"autoRepair"`
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

type ClusterNodePoolStateManagementInput interface {
	pulumi.Input

	ToClusterNodePoolStateManagementOutput() ClusterNodePoolStateManagementOutput
	ToClusterNodePoolStateManagementOutputWithContext(context.Context) ClusterNodePoolStateManagementOutput
}

type ClusterNodePoolStateManagementArgs struct {
	AutoRepair  pulumi.BoolPtrInput `pulumi:"autoRepair"`
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (ClusterNodePoolStateManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateManagement)(nil)).Elem()
}

func (i ClusterNodePoolStateManagementArgs) ToClusterNodePoolStateManagementOutput() ClusterNodePoolStateManagementOutput {
	return i.ToClusterNodePoolStateManagementOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateManagementArgs) ToClusterNodePoolStateManagementOutputWithContext(ctx context.Context) ClusterNodePoolStateManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateManagementOutput)
}

func (i ClusterNodePoolStateManagementArgs) ToClusterNodePoolStateManagementPtrOutput() ClusterNodePoolStateManagementPtrOutput {
	return i.ToClusterNodePoolStateManagementPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateManagementArgs) ToClusterNodePoolStateManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateManagementOutput).ToClusterNodePoolStateManagementPtrOutputWithContext(ctx)
}

type ClusterNodePoolStateManagementPtrInput interface {
	pulumi.Input

	ToClusterNodePoolStateManagementPtrOutput() ClusterNodePoolStateManagementPtrOutput
	ToClusterNodePoolStateManagementPtrOutputWithContext(context.Context) ClusterNodePoolStateManagementPtrOutput
}

type clusterNodePoolStateManagementPtrType ClusterNodePoolStateManagementArgs

func ClusterNodePoolStateManagementPtr(v *ClusterNodePoolStateManagementArgs) ClusterNodePoolStateManagementPtrInput {
	return (*clusterNodePoolStateManagementPtrType)(v)
}

func (*clusterNodePoolStateManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateManagement)(nil)).Elem()
}

func (i *clusterNodePoolStateManagementPtrType) ToClusterNodePoolStateManagementPtrOutput() ClusterNodePoolStateManagementPtrOutput {
	return i.ToClusterNodePoolStateManagementPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolStateManagementPtrType) ToClusterNodePoolStateManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateManagementPtrOutput)
}

type ClusterNodePoolStateManagementOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateManagement)(nil)).Elem()
}

func (o ClusterNodePoolStateManagementOutput) ToClusterNodePoolStateManagementOutput() ClusterNodePoolStateManagementOutput {
	return o
}

func (o ClusterNodePoolStateManagementOutput) ToClusterNodePoolStateManagementOutputWithContext(ctx context.Context) ClusterNodePoolStateManagementOutput {
	return o
}

func (o ClusterNodePoolStateManagementOutput) ToClusterNodePoolStateManagementPtrOutput() ClusterNodePoolStateManagementPtrOutput {
	return o.ToClusterNodePoolStateManagementPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolStateManagementOutput) ToClusterNodePoolStateManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateManagementPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateManagement) *ClusterNodePoolStateManagement {
		return &v
	}).(ClusterNodePoolStateManagementPtrOutput)
}
func (o ClusterNodePoolStateManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

func (o ClusterNodePoolStateManagementOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolStateManagementPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateManagement)(nil)).Elem()
}

func (o ClusterNodePoolStateManagementPtrOutput) ToClusterNodePoolStateManagementPtrOutput() ClusterNodePoolStateManagementPtrOutput {
	return o
}

func (o ClusterNodePoolStateManagementPtrOutput) ToClusterNodePoolStateManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateManagementPtrOutput {
	return o
}

func (o ClusterNodePoolStateManagementPtrOutput) Elem() ClusterNodePoolStateManagementOutput {
	return o.ApplyT(func(v *ClusterNodePoolStateManagement) ClusterNodePoolStateManagement { return *v }).(ClusterNodePoolStateManagementOutput)
}

func (o ClusterNodePoolStateManagementPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

func (o ClusterNodePoolStateManagementPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolStateNodeConfig struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType *string `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodePoolStateNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType *string `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels map[string]string `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount *int `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType *string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig *ClusterNodePoolStateNodeConfigSandboxConfig `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig *ClusterNodePoolStateNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodePoolStateNodeConfigTaint `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodePoolStateNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

type ClusterNodePoolStateNodeConfigInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigOutput() ClusterNodePoolStateNodeConfigOutput
	ToClusterNodePoolStateNodeConfigOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigOutput
}

type ClusterNodePoolStateNodeConfigArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodePoolStateNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// The Kubernetes labels (key/value pairs) to be applied to each node.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntPtrInput `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig ClusterNodePoolStateNodeConfigSandboxConfigPtrInput `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodePoolStateNodeConfigTaintArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodePoolStateNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfig)(nil)).Elem()
}

func (i ClusterNodePoolStateNodeConfigArgs) ToClusterNodePoolStateNodeConfigOutput() ClusterNodePoolStateNodeConfigOutput {
	return i.ToClusterNodePoolStateNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigArgs) ToClusterNodePoolStateNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigOutput)
}

func (i ClusterNodePoolStateNodeConfigArgs) ToClusterNodePoolStateNodeConfigPtrOutput() ClusterNodePoolStateNodeConfigPtrOutput {
	return i.ToClusterNodePoolStateNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigArgs) ToClusterNodePoolStateNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigOutput).ToClusterNodePoolStateNodeConfigPtrOutputWithContext(ctx)
}

type ClusterNodePoolStateNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigPtrOutput() ClusterNodePoolStateNodeConfigPtrOutput
	ToClusterNodePoolStateNodeConfigPtrOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigPtrOutput
}

type clusterNodePoolStateNodeConfigPtrType ClusterNodePoolStateNodeConfigArgs

func ClusterNodePoolStateNodeConfigPtr(v *ClusterNodePoolStateNodeConfigArgs) ClusterNodePoolStateNodeConfigPtrInput {
	return (*clusterNodePoolStateNodeConfigPtrType)(v)
}

func (*clusterNodePoolStateNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateNodeConfig)(nil)).Elem()
}

func (i *clusterNodePoolStateNodeConfigPtrType) ToClusterNodePoolStateNodeConfigPtrOutput() ClusterNodePoolStateNodeConfigPtrOutput {
	return i.ToClusterNodePoolStateNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolStateNodeConfigPtrType) ToClusterNodePoolStateNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigPtrOutput)
}

type ClusterNodePoolStateNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigOutput) ToClusterNodePoolStateNodeConfigOutput() ClusterNodePoolStateNodeConfigOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigOutput) ToClusterNodePoolStateNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigOutput) ToClusterNodePoolStateNodeConfigPtrOutput() ClusterNodePoolStateNodeConfigPtrOutput {
	return o.ToClusterNodePoolStateNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolStateNodeConfigOutput) ToClusterNodePoolStateNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *ClusterNodePoolStateNodeConfig {
		return &v
	}).(ClusterNodePoolStateNodeConfigPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodePoolStateNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodePoolStateNodeConfigOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodePoolStateNodeConfigOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodePoolStateNodeConfigOutput) GuestAccelerators() ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) []ClusterNodePoolStateNodeConfigGuestAccelerator {
		return v.GuestAccelerators
	}).(ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodePoolStateNodeConfigOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodePoolStateNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodePoolStateNodeConfigOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodePoolStateNodeConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodePoolStateNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodePoolStateNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodePoolStateNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodePoolStateNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodePoolStateNodeConfigOutput) SandboxConfig() ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *ClusterNodePoolStateNodeConfigSandboxConfig {
		return v.SandboxConfig
	}).(ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodePoolStateNodeConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodePoolStateNodeConfigOutput) ShieldedInstanceConfig() ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *ClusterNodePoolStateNodeConfigShieldedInstanceConfig {
		return v.ShieldedInstanceConfig
	}).(ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodePoolStateNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodePoolStateNodeConfigOutput) Taints() ClusterNodePoolStateNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) []ClusterNodePoolStateNodeConfigTaint { return v.Taints }).(ClusterNodePoolStateNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodePoolStateNodeConfigOutput) WorkloadMetadataConfig() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *ClusterNodePoolStateNodeConfigWorkloadMetadataConfig {
		return v.WorkloadMetadataConfig
	}).(ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolStateNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigPtrOutput) ToClusterNodePoolStateNodeConfigPtrOutput() ClusterNodePoolStateNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigPtrOutput) ToClusterNodePoolStateNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigPtrOutput) Elem() ClusterNodePoolStateNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolStateNodeConfig) ClusterNodePoolStateNodeConfig { return *v }).(ClusterNodePoolStateNodeConfigOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodePoolStateNodeConfigPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodePoolStateNodeConfigPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodePoolStateNodeConfigPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodePoolStateNodeConfigPtrOutput) GuestAccelerators() ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) []ClusterNodePoolStateNodeConfigGuestAccelerator {
		return v.GuestAccelerators
	}).(ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodePoolStateNodeConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node.
func (o ClusterNodePoolStateNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodePoolStateNodeConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `n1-standard-1`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodePoolStateNodeConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodePoolStateNodeConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodePoolStateNodeConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodePoolStateNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodePoolStateNodeConfigPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodePoolStateNodeConfigPtrOutput) SandboxConfig() ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *ClusterNodePoolStateNodeConfigSandboxConfig {
		return v.SandboxConfig
	}).(ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodePoolStateNodeConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodePoolStateNodeConfigPtrOutput) ShieldedInstanceConfig() ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *ClusterNodePoolStateNodeConfigShieldedInstanceConfig {
		return v.ShieldedInstanceConfig
	}).(ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodePoolStateNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodePoolStateNodeConfigPtrOutput) Taints() ClusterNodePoolStateNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) []ClusterNodePoolStateNodeConfigTaint { return v.Taints }).(ClusterNodePoolStateNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodePoolStateNodeConfigPtrOutput) WorkloadMetadataConfig() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfig) *ClusterNodePoolStateNodeConfigWorkloadMetadataConfig {
		return v.WorkloadMetadataConfig
	}).(ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolStateNodeConfigGuestAccelerator struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

type ClusterNodePoolStateNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigGuestAcceleratorOutput() ClusterNodePoolStateNodeConfigGuestAcceleratorOutput
	ToClusterNodePoolStateNodeConfigGuestAcceleratorOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigGuestAcceleratorOutput
}

type ClusterNodePoolStateNodeConfigGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodePoolStateNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodePoolStateNodeConfigGuestAcceleratorArgs) ToClusterNodePoolStateNodeConfigGuestAcceleratorOutput() ClusterNodePoolStateNodeConfigGuestAcceleratorOutput {
	return i.ToClusterNodePoolStateNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigGuestAcceleratorArgs) ToClusterNodePoolStateNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigGuestAcceleratorOutput)
}

type ClusterNodePoolStateNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput
	ToClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput
}

type ClusterNodePoolStateNodeConfigGuestAcceleratorArray []ClusterNodePoolStateNodeConfigGuestAcceleratorInput

func (ClusterNodePoolStateNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolStateNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodePoolStateNodeConfigGuestAcceleratorArray) ToClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput {
	return i.ToClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigGuestAcceleratorArray) ToClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput)
}

type ClusterNodePoolStateNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigGuestAcceleratorOutput) ToClusterNodePoolStateNodeConfigGuestAcceleratorOutput() ClusterNodePoolStateNodeConfigGuestAcceleratorOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigGuestAcceleratorOutput) ToClusterNodePoolStateNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodePoolStateNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodePoolStateNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolStateNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput) ToClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput) ToClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolStateNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolStateNodeConfigGuestAccelerator {
		return vs[0].([]ClusterNodePoolStateNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(ClusterNodePoolStateNodeConfigGuestAcceleratorOutput)
}

type ClusterNodePoolStateNodeConfigSandboxConfig struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType string `pulumi:"sandboxType"`
}

type ClusterNodePoolStateNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigSandboxConfigOutput() ClusterNodePoolStateNodeConfigSandboxConfigOutput
	ToClusterNodePoolStateNodeConfigSandboxConfigOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigSandboxConfigOutput
}

type ClusterNodePoolStateNodeConfigSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodePoolStateNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigSandboxConfig)(nil)).Elem()
}

func (i ClusterNodePoolStateNodeConfigSandboxConfigArgs) ToClusterNodePoolStateNodeConfigSandboxConfigOutput() ClusterNodePoolStateNodeConfigSandboxConfigOutput {
	return i.ToClusterNodePoolStateNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigSandboxConfigArgs) ToClusterNodePoolStateNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigSandboxConfigOutput)
}

func (i ClusterNodePoolStateNodeConfigSandboxConfigArgs) ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutput() ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigSandboxConfigArgs) ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigSandboxConfigOutput).ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

type ClusterNodePoolStateNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutput() ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput
	ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput
}

type clusterNodePoolStateNodeConfigSandboxConfigPtrType ClusterNodePoolStateNodeConfigSandboxConfigArgs

func ClusterNodePoolStateNodeConfigSandboxConfigPtr(v *ClusterNodePoolStateNodeConfigSandboxConfigArgs) ClusterNodePoolStateNodeConfigSandboxConfigPtrInput {
	return (*clusterNodePoolStateNodeConfigSandboxConfigPtrType)(v)
}

func (*clusterNodePoolStateNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *clusterNodePoolStateNodeConfigSandboxConfigPtrType) ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutput() ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolStateNodeConfigSandboxConfigPtrType) ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput)
}

type ClusterNodePoolStateNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigSandboxConfigOutput) ToClusterNodePoolStateNodeConfigSandboxConfigOutput() ClusterNodePoolStateNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigSandboxConfigOutput) ToClusterNodePoolStateNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigSandboxConfigOutput) ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutput() ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return o.ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolStateNodeConfigSandboxConfigOutput) ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigSandboxConfig) *ClusterNodePoolStateNodeConfigSandboxConfig {
		return &v
	}).(ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodePoolStateNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput) ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutput() ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput) ToClusterNodePoolStateNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput) Elem() ClusterNodePoolStateNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolStateNodeConfigSandboxConfig) ClusterNodePoolStateNodeConfigSandboxConfig {
		return *v
	}).(ClusterNodePoolStateNodeConfigSandboxConfigOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodePoolStateNodeConfigShieldedInstanceConfig struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

type ClusterNodePoolStateNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput
	ToClusterNodePoolStateNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput
}

type ClusterNodePoolStateNodeConfigShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodePoolStateNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i ClusterNodePoolStateNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput {
	return i.ToClusterNodePoolStateNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput)
}

func (i ClusterNodePoolStateNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput).ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx)
}

type ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput
	ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput
}

type clusterNodePoolStateNodeConfigShieldedInstanceConfigPtrType ClusterNodePoolStateNodeConfigShieldedInstanceConfigArgs

func ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtr(v *ClusterNodePoolStateNodeConfigShieldedInstanceConfigArgs) ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrInput {
	return (*clusterNodePoolStateNodeConfigShieldedInstanceConfigPtrType)(v)
}

func (*clusterNodePoolStateNodeConfigShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i *clusterNodePoolStateNodeConfigShieldedInstanceConfigPtrType) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolStateNodeConfigShieldedInstanceConfigPtrType) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput)
}

type ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigShieldedInstanceConfig) *ClusterNodePoolStateNodeConfigShieldedInstanceConfig {
		return &v
	}).(ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigShieldedInstanceConfig) *bool {
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput) Elem() ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolStateNodeConfigShieldedInstanceConfig) ClusterNodePoolStateNodeConfigShieldedInstanceConfig {
		return *v
	}).(ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigShieldedInstanceConfig) *bool {
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolStateNodeConfigTaint struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

type ClusterNodePoolStateNodeConfigTaintInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigTaintOutput() ClusterNodePoolStateNodeConfigTaintOutput
	ToClusterNodePoolStateNodeConfigTaintOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigTaintOutput
}

type ClusterNodePoolStateNodeConfigTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodePoolStateNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodePoolStateNodeConfigTaintArgs) ToClusterNodePoolStateNodeConfigTaintOutput() ClusterNodePoolStateNodeConfigTaintOutput {
	return i.ToClusterNodePoolStateNodeConfigTaintOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigTaintArgs) ToClusterNodePoolStateNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigTaintOutput)
}

type ClusterNodePoolStateNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigTaintArrayOutput() ClusterNodePoolStateNodeConfigTaintArrayOutput
	ToClusterNodePoolStateNodeConfigTaintArrayOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigTaintArrayOutput
}

type ClusterNodePoolStateNodeConfigTaintArray []ClusterNodePoolStateNodeConfigTaintInput

func (ClusterNodePoolStateNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolStateNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodePoolStateNodeConfigTaintArray) ToClusterNodePoolStateNodeConfigTaintArrayOutput() ClusterNodePoolStateNodeConfigTaintArrayOutput {
	return i.ToClusterNodePoolStateNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigTaintArray) ToClusterNodePoolStateNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigTaintArrayOutput)
}

type ClusterNodePoolStateNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigTaintOutput) ToClusterNodePoolStateNodeConfigTaintOutput() ClusterNodePoolStateNodeConfigTaintOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigTaintOutput) ToClusterNodePoolStateNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigTaintOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodePoolStateNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodePoolStateNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodePoolStateNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodePoolStateNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolStateNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigTaintArrayOutput) ToClusterNodePoolStateNodeConfigTaintArrayOutput() ClusterNodePoolStateNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigTaintArrayOutput) ToClusterNodePoolStateNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolStateNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolStateNodeConfigTaint {
		return vs[0].([]ClusterNodePoolStateNodeConfigTaint)[vs[1].(int)]
	}).(ClusterNodePoolStateNodeConfigTaintOutput)
}

type ClusterNodePoolStateNodeConfigWorkloadMetadataConfig struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type ClusterNodePoolStateNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput
	ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput
}

type ClusterNodePoolStateNodeConfigWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (ClusterNodePoolStateNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i ClusterNodePoolStateNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput {
	return i.ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput)
}

func (i ClusterNodePoolStateNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput).ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

type ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput
	ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput
}

type clusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrType ClusterNodePoolStateNodeConfigWorkloadMetadataConfigArgs

func ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtr(v *ClusterNodePoolStateNodeConfigWorkloadMetadataConfigArgs) ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrInput {
	return (*clusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*clusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *clusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigWorkloadMetadataConfig) *ClusterNodePoolStateNodeConfigWorkloadMetadataConfig {
		return &v
	}).(ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput) Elem() ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolStateNodeConfigWorkloadMetadataConfig) ClusterNodePoolStateNodeConfigWorkloadMetadataConfig {
		return *v
	}).(ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolStateNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodePoolStateUpgradeSettings struct {
	MaxSurge       int `pulumi:"maxSurge"`
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

type ClusterNodePoolStateUpgradeSettingsInput interface {
	pulumi.Input

	ToClusterNodePoolStateUpgradeSettingsOutput() ClusterNodePoolStateUpgradeSettingsOutput
	ToClusterNodePoolStateUpgradeSettingsOutputWithContext(context.Context) ClusterNodePoolStateUpgradeSettingsOutput
}

type ClusterNodePoolStateUpgradeSettingsArgs struct {
	MaxSurge       pulumi.IntInput `pulumi:"maxSurge"`
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (ClusterNodePoolStateUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateUpgradeSettings)(nil)).Elem()
}

func (i ClusterNodePoolStateUpgradeSettingsArgs) ToClusterNodePoolStateUpgradeSettingsOutput() ClusterNodePoolStateUpgradeSettingsOutput {
	return i.ToClusterNodePoolStateUpgradeSettingsOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateUpgradeSettingsArgs) ToClusterNodePoolStateUpgradeSettingsOutputWithContext(ctx context.Context) ClusterNodePoolStateUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateUpgradeSettingsOutput)
}

func (i ClusterNodePoolStateUpgradeSettingsArgs) ToClusterNodePoolStateUpgradeSettingsPtrOutput() ClusterNodePoolStateUpgradeSettingsPtrOutput {
	return i.ToClusterNodePoolStateUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolStateUpgradeSettingsArgs) ToClusterNodePoolStateUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateUpgradeSettingsOutput).ToClusterNodePoolStateUpgradeSettingsPtrOutputWithContext(ctx)
}

type ClusterNodePoolStateUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolStateUpgradeSettingsPtrOutput() ClusterNodePoolStateUpgradeSettingsPtrOutput
	ToClusterNodePoolStateUpgradeSettingsPtrOutputWithContext(context.Context) ClusterNodePoolStateUpgradeSettingsPtrOutput
}

type clusterNodePoolStateUpgradeSettingsPtrType ClusterNodePoolStateUpgradeSettingsArgs

func ClusterNodePoolStateUpgradeSettingsPtr(v *ClusterNodePoolStateUpgradeSettingsArgs) ClusterNodePoolStateUpgradeSettingsPtrInput {
	return (*clusterNodePoolStateUpgradeSettingsPtrType)(v)
}

func (*clusterNodePoolStateUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateUpgradeSettings)(nil)).Elem()
}

func (i *clusterNodePoolStateUpgradeSettingsPtrType) ToClusterNodePoolStateUpgradeSettingsPtrOutput() ClusterNodePoolStateUpgradeSettingsPtrOutput {
	return i.ToClusterNodePoolStateUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolStateUpgradeSettingsPtrType) ToClusterNodePoolStateUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolStateUpgradeSettingsPtrOutput)
}

type ClusterNodePoolStateUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolStateUpgradeSettings)(nil)).Elem()
}

func (o ClusterNodePoolStateUpgradeSettingsOutput) ToClusterNodePoolStateUpgradeSettingsOutput() ClusterNodePoolStateUpgradeSettingsOutput {
	return o
}

func (o ClusterNodePoolStateUpgradeSettingsOutput) ToClusterNodePoolStateUpgradeSettingsOutputWithContext(ctx context.Context) ClusterNodePoolStateUpgradeSettingsOutput {
	return o
}

func (o ClusterNodePoolStateUpgradeSettingsOutput) ToClusterNodePoolStateUpgradeSettingsPtrOutput() ClusterNodePoolStateUpgradeSettingsPtrOutput {
	return o.ToClusterNodePoolStateUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolStateUpgradeSettingsOutput) ToClusterNodePoolStateUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolStateUpgradeSettings) *ClusterNodePoolStateUpgradeSettings {
		return &v
	}).(ClusterNodePoolStateUpgradeSettingsPtrOutput)
}
func (o ClusterNodePoolStateUpgradeSettingsOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolStateUpgradeSettings) int { return v.MaxSurge }).(pulumi.IntOutput)
}

func (o ClusterNodePoolStateUpgradeSettingsOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolStateUpgradeSettings) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type ClusterNodePoolStateUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolStateUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolStateUpgradeSettings)(nil)).Elem()
}

func (o ClusterNodePoolStateUpgradeSettingsPtrOutput) ToClusterNodePoolStateUpgradeSettingsPtrOutput() ClusterNodePoolStateUpgradeSettingsPtrOutput {
	return o
}

func (o ClusterNodePoolStateUpgradeSettingsPtrOutput) ToClusterNodePoolStateUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolStateUpgradeSettingsPtrOutput {
	return o
}

func (o ClusterNodePoolStateUpgradeSettingsPtrOutput) Elem() ClusterNodePoolStateUpgradeSettingsOutput {
	return o.ApplyT(func(v *ClusterNodePoolStateUpgradeSettings) ClusterNodePoolStateUpgradeSettings { return *v }).(ClusterNodePoolStateUpgradeSettingsOutput)
}

func (o ClusterNodePoolStateUpgradeSettingsPtrOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolStateUpgradeSettings) int { return v.MaxSurge }).(pulumi.IntOutput)
}

func (o ClusterNodePoolStateUpgradeSettingsPtrOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolStateUpgradeSettings) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type ClusterNodePoolUpgradeSettings struct {
	MaxSurge       int `pulumi:"maxSurge"`
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

type ClusterNodePoolUpgradeSettingsInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsOutput() ClusterNodePoolUpgradeSettingsOutput
	ToClusterNodePoolUpgradeSettingsOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsOutput
}

type ClusterNodePoolUpgradeSettingsArgs struct {
	MaxSurge       pulumi.IntInput `pulumi:"maxSurge"`
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (ClusterNodePoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsOutput() ClusterNodePoolUpgradeSettingsOutput {
	return i.ToClusterNodePoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsOutput)
}

type ClusterNodePoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsOutput() ClusterNodePoolUpgradeSettingsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettings) int { return v.MaxSurge }).(pulumi.IntOutput)
}

func (o ClusterNodePoolUpgradeSettingsOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettings) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type ClusterNodePoolUpgradeSettingsArgs struct {
	MaxSurge       int `pulumi:"maxSurge"`
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

type ClusterNodePoolUpgradeSettingsArgsInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsArgsOutput() ClusterNodePoolUpgradeSettingsArgsOutput
	ToClusterNodePoolUpgradeSettingsArgsOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsArgsOutput
}

type ClusterNodePoolUpgradeSettingsArgsArgs struct {
	MaxSurge       pulumi.IntInput `pulumi:"maxSurge"`
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (ClusterNodePoolUpgradeSettingsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettingsArgs)(nil)).Elem()
}

func (i ClusterNodePoolUpgradeSettingsArgsArgs) ToClusterNodePoolUpgradeSettingsArgsOutput() ClusterNodePoolUpgradeSettingsArgsOutput {
	return i.ToClusterNodePoolUpgradeSettingsArgsOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsArgsArgs) ToClusterNodePoolUpgradeSettingsArgsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsArgsOutput)
}

func (i ClusterNodePoolUpgradeSettingsArgsArgs) ToClusterNodePoolUpgradeSettingsArgsPtrOutput() ClusterNodePoolUpgradeSettingsArgsPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsArgsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsArgsArgs) ToClusterNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsArgsOutput).ToClusterNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx)
}

type ClusterNodePoolUpgradeSettingsArgsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsArgsPtrOutput() ClusterNodePoolUpgradeSettingsArgsPtrOutput
	ToClusterNodePoolUpgradeSettingsArgsPtrOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsArgsPtrOutput
}

type clusterNodePoolUpgradeSettingsArgsPtrType ClusterNodePoolUpgradeSettingsArgsArgs

func ClusterNodePoolUpgradeSettingsArgsPtr(v *ClusterNodePoolUpgradeSettingsArgsArgs) ClusterNodePoolUpgradeSettingsArgsPtrInput {
	return (*clusterNodePoolUpgradeSettingsArgsPtrType)(v)
}

func (*clusterNodePoolUpgradeSettingsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettingsArgs)(nil)).Elem()
}

func (i *clusterNodePoolUpgradeSettingsArgsPtrType) ToClusterNodePoolUpgradeSettingsArgsPtrOutput() ClusterNodePoolUpgradeSettingsArgsPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsArgsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolUpgradeSettingsArgsPtrType) ToClusterNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsArgsPtrOutput)
}

type ClusterNodePoolUpgradeSettingsArgsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettingsArgs)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsArgsOutput) ToClusterNodePoolUpgradeSettingsArgsOutput() ClusterNodePoolUpgradeSettingsArgsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsArgsOutput) ToClusterNodePoolUpgradeSettingsArgsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsArgsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsArgsOutput) ToClusterNodePoolUpgradeSettingsArgsPtrOutput() ClusterNodePoolUpgradeSettingsArgsPtrOutput {
	return o.ToClusterNodePoolUpgradeSettingsArgsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolUpgradeSettingsArgsOutput) ToClusterNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsArgsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsArgs) *ClusterNodePoolUpgradeSettingsArgs {
		return &v
	}).(ClusterNodePoolUpgradeSettingsArgsPtrOutput)
}
func (o ClusterNodePoolUpgradeSettingsArgsOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsArgs) int { return v.MaxSurge }).(pulumi.IntOutput)
}

func (o ClusterNodePoolUpgradeSettingsArgsOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsArgs) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type ClusterNodePoolUpgradeSettingsArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettingsArgs)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsArgsPtrOutput) ToClusterNodePoolUpgradeSettingsArgsPtrOutput() ClusterNodePoolUpgradeSettingsArgsPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsArgsPtrOutput) ToClusterNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsArgsPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsArgsPtrOutput) Elem() ClusterNodePoolUpgradeSettingsArgsOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettingsArgs) ClusterNodePoolUpgradeSettingsArgs { return *v }).(ClusterNodePoolUpgradeSettingsArgsOutput)
}

func (o ClusterNodePoolUpgradeSettingsArgsPtrOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsArgs) int { return v.MaxSurge }).(pulumi.IntOutput)
}

func (o ClusterNodePoolUpgradeSettingsArgsPtrOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettingsArgs) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type ClusterPodSecurityPolicyConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

type ClusterPodSecurityPolicyConfigInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyConfigOutput() ClusterPodSecurityPolicyConfigOutput
	ToClusterPodSecurityPolicyConfigOutputWithContext(context.Context) ClusterPodSecurityPolicyConfigOutput
}

type ClusterPodSecurityPolicyConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterPodSecurityPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigOutput() ClusterPodSecurityPolicyConfigOutput {
	return i.ToClusterPodSecurityPolicyConfigOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigOutput)
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return i.ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigOutput).ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx)
}

type ClusterPodSecurityPolicyConfigPtrInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput
	ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Context) ClusterPodSecurityPolicyConfigPtrOutput
}

type clusterPodSecurityPolicyConfigPtrType ClusterPodSecurityPolicyConfigArgs

func ClusterPodSecurityPolicyConfigPtr(v *ClusterPodSecurityPolicyConfigArgs) ClusterPodSecurityPolicyConfigPtrInput {
	return (*clusterPodSecurityPolicyConfigPtrType)(v)
}

func (*clusterPodSecurityPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i *clusterPodSecurityPolicyConfigPtrType) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return i.ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPodSecurityPolicyConfigPtrType) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigPtrOutput)
}

type ClusterPodSecurityPolicyConfigOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigOutput() ClusterPodSecurityPolicyConfigOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return o.ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfig) *ClusterPodSecurityPolicyConfig {
		return &v
	}).(ClusterPodSecurityPolicyConfigPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPodSecurityPolicyConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterPodSecurityPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyConfigPtrOutput) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigPtrOutput) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigPtrOutput) Elem() ClusterPodSecurityPolicyConfigOutput {
	return o.ApplyT(func(v *ClusterPodSecurityPolicyConfig) ClusterPodSecurityPolicyConfig { return *v }).(ClusterPodSecurityPolicyConfigOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPodSecurityPolicyConfigPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterPodSecurityPolicyConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

type ClusterPodSecurityPolicyConfigArgsInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyConfigArgsOutput() ClusterPodSecurityPolicyConfigArgsOutput
	ToClusterPodSecurityPolicyConfigArgsOutputWithContext(context.Context) ClusterPodSecurityPolicyConfigArgsOutput
}

type ClusterPodSecurityPolicyConfigArgsArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterPodSecurityPolicyConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfigArgs)(nil)).Elem()
}

func (i ClusterPodSecurityPolicyConfigArgsArgs) ToClusterPodSecurityPolicyConfigArgsOutput() ClusterPodSecurityPolicyConfigArgsOutput {
	return i.ToClusterPodSecurityPolicyConfigArgsOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyConfigArgsArgs) ToClusterPodSecurityPolicyConfigArgsOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigArgsOutput)
}

func (i ClusterPodSecurityPolicyConfigArgsArgs) ToClusterPodSecurityPolicyConfigArgsPtrOutput() ClusterPodSecurityPolicyConfigArgsPtrOutput {
	return i.ToClusterPodSecurityPolicyConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyConfigArgsArgs) ToClusterPodSecurityPolicyConfigArgsPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigArgsOutput).ToClusterPodSecurityPolicyConfigArgsPtrOutputWithContext(ctx)
}

type ClusterPodSecurityPolicyConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyConfigArgsPtrOutput() ClusterPodSecurityPolicyConfigArgsPtrOutput
	ToClusterPodSecurityPolicyConfigArgsPtrOutputWithContext(context.Context) ClusterPodSecurityPolicyConfigArgsPtrOutput
}

type clusterPodSecurityPolicyConfigArgsPtrType ClusterPodSecurityPolicyConfigArgsArgs

func ClusterPodSecurityPolicyConfigArgsPtr(v *ClusterPodSecurityPolicyConfigArgsArgs) ClusterPodSecurityPolicyConfigArgsPtrInput {
	return (*clusterPodSecurityPolicyConfigArgsPtrType)(v)
}

func (*clusterPodSecurityPolicyConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicyConfigArgs)(nil)).Elem()
}

func (i *clusterPodSecurityPolicyConfigArgsPtrType) ToClusterPodSecurityPolicyConfigArgsPtrOutput() ClusterPodSecurityPolicyConfigArgsPtrOutput {
	return i.ToClusterPodSecurityPolicyConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterPodSecurityPolicyConfigArgsPtrType) ToClusterPodSecurityPolicyConfigArgsPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigArgsPtrOutput)
}

type ClusterPodSecurityPolicyConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfigArgs)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyConfigArgsOutput) ToClusterPodSecurityPolicyConfigArgsOutput() ClusterPodSecurityPolicyConfigArgsOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigArgsOutput) ToClusterPodSecurityPolicyConfigArgsOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigArgsOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigArgsOutput) ToClusterPodSecurityPolicyConfigArgsPtrOutput() ClusterPodSecurityPolicyConfigArgsPtrOutput {
	return o.ToClusterPodSecurityPolicyConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterPodSecurityPolicyConfigArgsOutput) ToClusterPodSecurityPolicyConfigArgsPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfigArgs) *ClusterPodSecurityPolicyConfigArgs {
		return &v
	}).(ClusterPodSecurityPolicyConfigArgsPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPodSecurityPolicyConfigArgsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfigArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterPodSecurityPolicyConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicyConfigArgs)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyConfigArgsPtrOutput) ToClusterPodSecurityPolicyConfigArgsPtrOutput() ClusterPodSecurityPolicyConfigArgsPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigArgsPtrOutput) ToClusterPodSecurityPolicyConfigArgsPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigArgsPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigArgsPtrOutput) Elem() ClusterPodSecurityPolicyConfigArgsOutput {
	return o.ApplyT(func(v *ClusterPodSecurityPolicyConfigArgs) ClusterPodSecurityPolicyConfigArgs { return *v }).(ClusterPodSecurityPolicyConfigArgsOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPodSecurityPolicyConfigArgsPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfigArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterPodSecurityPolicyConfigState struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

type ClusterPodSecurityPolicyConfigStateInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyConfigStateOutput() ClusterPodSecurityPolicyConfigStateOutput
	ToClusterPodSecurityPolicyConfigStateOutputWithContext(context.Context) ClusterPodSecurityPolicyConfigStateOutput
}

type ClusterPodSecurityPolicyConfigStateArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterPodSecurityPolicyConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfigState)(nil)).Elem()
}

func (i ClusterPodSecurityPolicyConfigStateArgs) ToClusterPodSecurityPolicyConfigStateOutput() ClusterPodSecurityPolicyConfigStateOutput {
	return i.ToClusterPodSecurityPolicyConfigStateOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyConfigStateArgs) ToClusterPodSecurityPolicyConfigStateOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigStateOutput)
}

type ClusterPodSecurityPolicyConfigStateOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfigState)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyConfigStateOutput) ToClusterPodSecurityPolicyConfigStateOutput() ClusterPodSecurityPolicyConfigStateOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigStateOutput) ToClusterPodSecurityPolicyConfigStateOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigStateOutput {
	return o
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPodSecurityPolicyConfigStateOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfigState) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterPrivateClusterConfig struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint bool `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes *bool `pulumi:"enablePrivateNodes"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock *string `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName string `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint string `pulumi:"privateEndpoint"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint string `pulumi:"publicEndpoint"`
}

type ClusterPrivateClusterConfigInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigOutput() ClusterPrivateClusterConfigOutput
	ToClusterPrivateClusterConfigOutputWithContext(context.Context) ClusterPrivateClusterConfigOutput
}

type ClusterPrivateClusterConfigArgs struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint pulumi.BoolInput `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes pulumi.BoolPtrInput `pulumi:"enablePrivateNodes"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName pulumi.StringInput `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint pulumi.StringInput `pulumi:"privateEndpoint"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint pulumi.StringInput `pulumi:"publicEndpoint"`
}

func (ClusterPrivateClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfig)(nil)).Elem()
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigOutput() ClusterPrivateClusterConfigOutput {
	return i.ToClusterPrivateClusterConfigOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigOutput)
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigOutput).ToClusterPrivateClusterConfigPtrOutputWithContext(ctx)
}

type ClusterPrivateClusterConfigPtrInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput
	ToClusterPrivateClusterConfigPtrOutputWithContext(context.Context) ClusterPrivateClusterConfigPtrOutput
}

type clusterPrivateClusterConfigPtrType ClusterPrivateClusterConfigArgs

func ClusterPrivateClusterConfigPtr(v *ClusterPrivateClusterConfigArgs) ClusterPrivateClusterConfigPtrInput {
	return (*clusterPrivateClusterConfigPtrType)(v)
}

func (*clusterPrivateClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfig)(nil)).Elem()
}

func (i *clusterPrivateClusterConfigPtrType) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPrivateClusterConfigPtrType) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigPtrOutput)
}

type ClusterPrivateClusterConfigOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigOutput() ClusterPrivateClusterConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return o.ToClusterPrivateClusterConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *ClusterPrivateClusterConfig {
		return &v
	}).(ClusterPrivateClusterConfigPtrOutput)
}

// When `true`, the cluster's private
// endpoint is used as the cluster endpoint and access through the public endpoint
// is disabled. When `false`, either endpoint can be used. This field only applies
// to private clusters, when `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigOutput) EnablePrivateEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) bool { return v.EnablePrivateEndpoint }).(pulumi.BoolOutput)
}

// Enables the private cluster feature,
// creating a private endpoint on the cluster. In a private cluster, nodes only
// have RFC 1918 private addresses and communicate with the master's private
// endpoint via private networking.
func (o ClusterPrivateClusterConfigOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *bool { return v.EnablePrivateNodes }).(pulumi.BoolPtrOutput)
}

// The IP range in CIDR notation to use for
// the hosted master network. This range will be used for assigning private IP
// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
// with any other ranges in use within the cluster's network, and it must be a /28
// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
// for more details. This field only applies to private clusters, when
// `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.MasterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o ClusterPrivateClusterConfigOutput) PeeringName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) string { return v.PeeringName }).(pulumi.StringOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigOutput) PrivateEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) string { return v.PrivateEndpoint }).(pulumi.StringOutput)
}

// The external IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigOutput) PublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) string { return v.PublicEndpoint }).(pulumi.StringOutput)
}

type ClusterPrivateClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigPtrOutput) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigPtrOutput) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigPtrOutput) Elem() ClusterPrivateClusterConfigOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) ClusterPrivateClusterConfig { return *v }).(ClusterPrivateClusterConfigOutput)
}

// When `true`, the cluster's private
// endpoint is used as the cluster endpoint and access through the public endpoint
// is disabled. When `false`, either endpoint can be used. This field only applies
// to private clusters, when `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigPtrOutput) EnablePrivateEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) bool { return v.EnablePrivateEndpoint }).(pulumi.BoolOutput)
}

// Enables the private cluster feature,
// creating a private endpoint on the cluster. In a private cluster, nodes only
// have RFC 1918 private addresses and communicate with the master's private
// endpoint via private networking.
func (o ClusterPrivateClusterConfigPtrOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *bool { return v.EnablePrivateNodes }).(pulumi.BoolPtrOutput)
}

// The IP range in CIDR notation to use for
// the hosted master network. This range will be used for assigning private IP
// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
// with any other ranges in use within the cluster's network, and it must be a /28
// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
// for more details. This field only applies to private clusters, when
// `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigPtrOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.MasterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o ClusterPrivateClusterConfigPtrOutput) PeeringName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) string { return v.PeeringName }).(pulumi.StringOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigPtrOutput) PrivateEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) string { return v.PrivateEndpoint }).(pulumi.StringOutput)
}

// The external IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigPtrOutput) PublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) string { return v.PublicEndpoint }).(pulumi.StringOutput)
}

type ClusterPrivateClusterConfigArgs struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint bool `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes *bool `pulumi:"enablePrivateNodes"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock *string `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName *string `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint *string `pulumi:"privateEndpoint"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint *string `pulumi:"publicEndpoint"`
}

type ClusterPrivateClusterConfigArgsInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigArgsOutput() ClusterPrivateClusterConfigArgsOutput
	ToClusterPrivateClusterConfigArgsOutputWithContext(context.Context) ClusterPrivateClusterConfigArgsOutput
}

type ClusterPrivateClusterConfigArgsArgs struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint pulumi.BoolInput `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes pulumi.BoolPtrInput `pulumi:"enablePrivateNodes"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName pulumi.StringPtrInput `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint pulumi.StringPtrInput `pulumi:"privateEndpoint"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint pulumi.StringPtrInput `pulumi:"publicEndpoint"`
}

func (ClusterPrivateClusterConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfigArgs)(nil)).Elem()
}

func (i ClusterPrivateClusterConfigArgsArgs) ToClusterPrivateClusterConfigArgsOutput() ClusterPrivateClusterConfigArgsOutput {
	return i.ToClusterPrivateClusterConfigArgsOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigArgsArgs) ToClusterPrivateClusterConfigArgsOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigArgsOutput)
}

func (i ClusterPrivateClusterConfigArgsArgs) ToClusterPrivateClusterConfigArgsPtrOutput() ClusterPrivateClusterConfigArgsPtrOutput {
	return i.ToClusterPrivateClusterConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigArgsArgs) ToClusterPrivateClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigArgsOutput).ToClusterPrivateClusterConfigArgsPtrOutputWithContext(ctx)
}

type ClusterPrivateClusterConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigArgsPtrOutput() ClusterPrivateClusterConfigArgsPtrOutput
	ToClusterPrivateClusterConfigArgsPtrOutputWithContext(context.Context) ClusterPrivateClusterConfigArgsPtrOutput
}

type clusterPrivateClusterConfigArgsPtrType ClusterPrivateClusterConfigArgsArgs

func ClusterPrivateClusterConfigArgsPtr(v *ClusterPrivateClusterConfigArgsArgs) ClusterPrivateClusterConfigArgsPtrInput {
	return (*clusterPrivateClusterConfigArgsPtrType)(v)
}

func (*clusterPrivateClusterConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfigArgs)(nil)).Elem()
}

func (i *clusterPrivateClusterConfigArgsPtrType) ToClusterPrivateClusterConfigArgsPtrOutput() ClusterPrivateClusterConfigArgsPtrOutput {
	return i.ToClusterPrivateClusterConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterPrivateClusterConfigArgsPtrType) ToClusterPrivateClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigArgsPtrOutput)
}

type ClusterPrivateClusterConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfigArgs)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigArgsOutput) ToClusterPrivateClusterConfigArgsOutput() ClusterPrivateClusterConfigArgsOutput {
	return o
}

func (o ClusterPrivateClusterConfigArgsOutput) ToClusterPrivateClusterConfigArgsOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigArgsOutput {
	return o
}

func (o ClusterPrivateClusterConfigArgsOutput) ToClusterPrivateClusterConfigArgsPtrOutput() ClusterPrivateClusterConfigArgsPtrOutput {
	return o.ToClusterPrivateClusterConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterPrivateClusterConfigArgsOutput) ToClusterPrivateClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *ClusterPrivateClusterConfigArgs {
		return &v
	}).(ClusterPrivateClusterConfigArgsPtrOutput)
}

// When `true`, the cluster's private
// endpoint is used as the cluster endpoint and access through the public endpoint
// is disabled. When `false`, either endpoint can be used. This field only applies
// to private clusters, when `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigArgsOutput) EnablePrivateEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) bool { return v.EnablePrivateEndpoint }).(pulumi.BoolOutput)
}

// Enables the private cluster feature,
// creating a private endpoint on the cluster. In a private cluster, nodes only
// have RFC 1918 private addresses and communicate with the master's private
// endpoint via private networking.
func (o ClusterPrivateClusterConfigArgsOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *bool { return v.EnablePrivateNodes }).(pulumi.BoolPtrOutput)
}

// The IP range in CIDR notation to use for
// the hosted master network. This range will be used for assigning private IP
// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
// with any other ranges in use within the cluster's network, and it must be a /28
// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
// for more details. This field only applies to private clusters, when
// `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigArgsOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *string { return v.MasterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o ClusterPrivateClusterConfigArgsOutput) PeeringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *string { return v.PeeringName }).(pulumi.StringPtrOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigArgsOutput) PrivateEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *string { return v.PrivateEndpoint }).(pulumi.StringPtrOutput)
}

// The external IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigArgsOutput) PublicEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *string { return v.PublicEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterPrivateClusterConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfigArgs)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigArgsPtrOutput) ToClusterPrivateClusterConfigArgsPtrOutput() ClusterPrivateClusterConfigArgsPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigArgsPtrOutput) ToClusterPrivateClusterConfigArgsPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigArgsPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigArgsPtrOutput) Elem() ClusterPrivateClusterConfigArgsOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfigArgs) ClusterPrivateClusterConfigArgs { return *v }).(ClusterPrivateClusterConfigArgsOutput)
}

// When `true`, the cluster's private
// endpoint is used as the cluster endpoint and access through the public endpoint
// is disabled. When `false`, either endpoint can be used. This field only applies
// to private clusters, when `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigArgsPtrOutput) EnablePrivateEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) bool { return v.EnablePrivateEndpoint }).(pulumi.BoolOutput)
}

// Enables the private cluster feature,
// creating a private endpoint on the cluster. In a private cluster, nodes only
// have RFC 1918 private addresses and communicate with the master's private
// endpoint via private networking.
func (o ClusterPrivateClusterConfigArgsPtrOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *bool { return v.EnablePrivateNodes }).(pulumi.BoolPtrOutput)
}

// The IP range in CIDR notation to use for
// the hosted master network. This range will be used for assigning private IP
// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
// with any other ranges in use within the cluster's network, and it must be a /28
// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
// for more details. This field only applies to private clusters, when
// `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigArgsPtrOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *string { return v.MasterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o ClusterPrivateClusterConfigArgsPtrOutput) PeeringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *string { return v.PeeringName }).(pulumi.StringPtrOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigArgsPtrOutput) PrivateEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *string { return v.PrivateEndpoint }).(pulumi.StringPtrOutput)
}

// The external IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigArgsPtrOutput) PublicEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigArgs) *string { return v.PublicEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterPrivateClusterConfigState struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint bool `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes *bool `pulumi:"enablePrivateNodes"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock *string `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName *string `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint *string `pulumi:"privateEndpoint"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint *string `pulumi:"publicEndpoint"`
}

type ClusterPrivateClusterConfigStateInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigStateOutput() ClusterPrivateClusterConfigStateOutput
	ToClusterPrivateClusterConfigStateOutputWithContext(context.Context) ClusterPrivateClusterConfigStateOutput
}

type ClusterPrivateClusterConfigStateArgs struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint pulumi.BoolInput `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes pulumi.BoolPtrInput `pulumi:"enablePrivateNodes"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName pulumi.StringPtrInput `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint pulumi.StringPtrInput `pulumi:"privateEndpoint"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint pulumi.StringPtrInput `pulumi:"publicEndpoint"`
}

func (ClusterPrivateClusterConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfigState)(nil)).Elem()
}

func (i ClusterPrivateClusterConfigStateArgs) ToClusterPrivateClusterConfigStateOutput() ClusterPrivateClusterConfigStateOutput {
	return i.ToClusterPrivateClusterConfigStateOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigStateArgs) ToClusterPrivateClusterConfigStateOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigStateOutput)
}

type ClusterPrivateClusterConfigStateOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfigState)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigStateOutput) ToClusterPrivateClusterConfigStateOutput() ClusterPrivateClusterConfigStateOutput {
	return o
}

func (o ClusterPrivateClusterConfigStateOutput) ToClusterPrivateClusterConfigStateOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigStateOutput {
	return o
}

// When `true`, the cluster's private
// endpoint is used as the cluster endpoint and access through the public endpoint
// is disabled. When `false`, either endpoint can be used. This field only applies
// to private clusters, when `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigStateOutput) EnablePrivateEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigState) bool { return v.EnablePrivateEndpoint }).(pulumi.BoolOutput)
}

// Enables the private cluster feature,
// creating a private endpoint on the cluster. In a private cluster, nodes only
// have RFC 1918 private addresses and communicate with the master's private
// endpoint via private networking.
func (o ClusterPrivateClusterConfigStateOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigState) *bool { return v.EnablePrivateNodes }).(pulumi.BoolPtrOutput)
}

// The IP range in CIDR notation to use for
// the hosted master network. This range will be used for assigning private IP
// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
// with any other ranges in use within the cluster's network, and it must be a /28
// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
// for more details. This field only applies to private clusters, when
// `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigStateOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigState) *string { return v.MasterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o ClusterPrivateClusterConfigStateOutput) PeeringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigState) *string { return v.PeeringName }).(pulumi.StringPtrOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigStateOutput) PrivateEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigState) *string { return v.PrivateEndpoint }).(pulumi.StringPtrOutput)
}

// The external IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigStateOutput) PublicEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigState) *string { return v.PublicEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterReleaseChannel struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel string `pulumi:"channel"`
}

type ClusterReleaseChannelInput interface {
	pulumi.Input

	ToClusterReleaseChannelOutput() ClusterReleaseChannelOutput
	ToClusterReleaseChannelOutputWithContext(context.Context) ClusterReleaseChannelOutput
}

type ClusterReleaseChannelArgs struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel pulumi.StringInput `pulumi:"channel"`
}

func (ClusterReleaseChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannel)(nil)).Elem()
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelOutput() ClusterReleaseChannelOutput {
	return i.ToClusterReleaseChannelOutputWithContext(context.Background())
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelOutputWithContext(ctx context.Context) ClusterReleaseChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelOutput)
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return i.ToClusterReleaseChannelPtrOutputWithContext(context.Background())
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelOutput).ToClusterReleaseChannelPtrOutputWithContext(ctx)
}

type ClusterReleaseChannelPtrInput interface {
	pulumi.Input

	ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput
	ToClusterReleaseChannelPtrOutputWithContext(context.Context) ClusterReleaseChannelPtrOutput
}

type clusterReleaseChannelPtrType ClusterReleaseChannelArgs

func ClusterReleaseChannelPtr(v *ClusterReleaseChannelArgs) ClusterReleaseChannelPtrInput {
	return (*clusterReleaseChannelPtrType)(v)
}

func (*clusterReleaseChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterReleaseChannel)(nil)).Elem()
}

func (i *clusterReleaseChannelPtrType) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return i.ToClusterReleaseChannelPtrOutputWithContext(context.Background())
}

func (i *clusterReleaseChannelPtrType) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelPtrOutput)
}

type ClusterReleaseChannelOutput struct{ *pulumi.OutputState }

func (ClusterReleaseChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannel)(nil)).Elem()
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelOutput() ClusterReleaseChannelOutput {
	return o
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelOutputWithContext(ctx context.Context) ClusterReleaseChannelOutput {
	return o
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return o.ToClusterReleaseChannelPtrOutputWithContext(context.Background())
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return o.ApplyT(func(v ClusterReleaseChannel) *ClusterReleaseChannel {
		return &v
	}).(ClusterReleaseChannelPtrOutput)
}

// The selected release channel.
// Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o ClusterReleaseChannelOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReleaseChannel) string { return v.Channel }).(pulumi.StringOutput)
}

type ClusterReleaseChannelPtrOutput struct{ *pulumi.OutputState }

func (ClusterReleaseChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterReleaseChannel)(nil)).Elem()
}

func (o ClusterReleaseChannelPtrOutput) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return o
}

func (o ClusterReleaseChannelPtrOutput) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return o
}

func (o ClusterReleaseChannelPtrOutput) Elem() ClusterReleaseChannelOutput {
	return o.ApplyT(func(v *ClusterReleaseChannel) ClusterReleaseChannel { return *v }).(ClusterReleaseChannelOutput)
}

// The selected release channel.
// Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o ClusterReleaseChannelPtrOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReleaseChannel) string { return v.Channel }).(pulumi.StringOutput)
}

type ClusterReleaseChannelArgs struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel string `pulumi:"channel"`
}

type ClusterReleaseChannelArgsInput interface {
	pulumi.Input

	ToClusterReleaseChannelArgsOutput() ClusterReleaseChannelArgsOutput
	ToClusterReleaseChannelArgsOutputWithContext(context.Context) ClusterReleaseChannelArgsOutput
}

type ClusterReleaseChannelArgsArgs struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel pulumi.StringInput `pulumi:"channel"`
}

func (ClusterReleaseChannelArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannelArgs)(nil)).Elem()
}

func (i ClusterReleaseChannelArgsArgs) ToClusterReleaseChannelArgsOutput() ClusterReleaseChannelArgsOutput {
	return i.ToClusterReleaseChannelArgsOutputWithContext(context.Background())
}

func (i ClusterReleaseChannelArgsArgs) ToClusterReleaseChannelArgsOutputWithContext(ctx context.Context) ClusterReleaseChannelArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelArgsOutput)
}

func (i ClusterReleaseChannelArgsArgs) ToClusterReleaseChannelArgsPtrOutput() ClusterReleaseChannelArgsPtrOutput {
	return i.ToClusterReleaseChannelArgsPtrOutputWithContext(context.Background())
}

func (i ClusterReleaseChannelArgsArgs) ToClusterReleaseChannelArgsPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelArgsOutput).ToClusterReleaseChannelArgsPtrOutputWithContext(ctx)
}

type ClusterReleaseChannelArgsPtrInput interface {
	pulumi.Input

	ToClusterReleaseChannelArgsPtrOutput() ClusterReleaseChannelArgsPtrOutput
	ToClusterReleaseChannelArgsPtrOutputWithContext(context.Context) ClusterReleaseChannelArgsPtrOutput
}

type clusterReleaseChannelArgsPtrType ClusterReleaseChannelArgsArgs

func ClusterReleaseChannelArgsPtr(v *ClusterReleaseChannelArgsArgs) ClusterReleaseChannelArgsPtrInput {
	return (*clusterReleaseChannelArgsPtrType)(v)
}

func (*clusterReleaseChannelArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterReleaseChannelArgs)(nil)).Elem()
}

func (i *clusterReleaseChannelArgsPtrType) ToClusterReleaseChannelArgsPtrOutput() ClusterReleaseChannelArgsPtrOutput {
	return i.ToClusterReleaseChannelArgsPtrOutputWithContext(context.Background())
}

func (i *clusterReleaseChannelArgsPtrType) ToClusterReleaseChannelArgsPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelArgsPtrOutput)
}

type ClusterReleaseChannelArgsOutput struct{ *pulumi.OutputState }

func (ClusterReleaseChannelArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannelArgs)(nil)).Elem()
}

func (o ClusterReleaseChannelArgsOutput) ToClusterReleaseChannelArgsOutput() ClusterReleaseChannelArgsOutput {
	return o
}

func (o ClusterReleaseChannelArgsOutput) ToClusterReleaseChannelArgsOutputWithContext(ctx context.Context) ClusterReleaseChannelArgsOutput {
	return o
}

func (o ClusterReleaseChannelArgsOutput) ToClusterReleaseChannelArgsPtrOutput() ClusterReleaseChannelArgsPtrOutput {
	return o.ToClusterReleaseChannelArgsPtrOutputWithContext(context.Background())
}

func (o ClusterReleaseChannelArgsOutput) ToClusterReleaseChannelArgsPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelArgsPtrOutput {
	return o.ApplyT(func(v ClusterReleaseChannelArgs) *ClusterReleaseChannelArgs {
		return &v
	}).(ClusterReleaseChannelArgsPtrOutput)
}

// The selected release channel.
// Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o ClusterReleaseChannelArgsOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReleaseChannelArgs) string { return v.Channel }).(pulumi.StringOutput)
}

type ClusterReleaseChannelArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterReleaseChannelArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterReleaseChannelArgs)(nil)).Elem()
}

func (o ClusterReleaseChannelArgsPtrOutput) ToClusterReleaseChannelArgsPtrOutput() ClusterReleaseChannelArgsPtrOutput {
	return o
}

func (o ClusterReleaseChannelArgsPtrOutput) ToClusterReleaseChannelArgsPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelArgsPtrOutput {
	return o
}

func (o ClusterReleaseChannelArgsPtrOutput) Elem() ClusterReleaseChannelArgsOutput {
	return o.ApplyT(func(v *ClusterReleaseChannelArgs) ClusterReleaseChannelArgs { return *v }).(ClusterReleaseChannelArgsOutput)
}

// The selected release channel.
// Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o ClusterReleaseChannelArgsPtrOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReleaseChannelArgs) string { return v.Channel }).(pulumi.StringOutput)
}

type ClusterReleaseChannelState struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel string `pulumi:"channel"`
}

type ClusterReleaseChannelStateInput interface {
	pulumi.Input

	ToClusterReleaseChannelStateOutput() ClusterReleaseChannelStateOutput
	ToClusterReleaseChannelStateOutputWithContext(context.Context) ClusterReleaseChannelStateOutput
}

type ClusterReleaseChannelStateArgs struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel pulumi.StringInput `pulumi:"channel"`
}

func (ClusterReleaseChannelStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannelState)(nil)).Elem()
}

func (i ClusterReleaseChannelStateArgs) ToClusterReleaseChannelStateOutput() ClusterReleaseChannelStateOutput {
	return i.ToClusterReleaseChannelStateOutputWithContext(context.Background())
}

func (i ClusterReleaseChannelStateArgs) ToClusterReleaseChannelStateOutputWithContext(ctx context.Context) ClusterReleaseChannelStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelStateOutput)
}

type ClusterReleaseChannelStateOutput struct{ *pulumi.OutputState }

func (ClusterReleaseChannelStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannelState)(nil)).Elem()
}

func (o ClusterReleaseChannelStateOutput) ToClusterReleaseChannelStateOutput() ClusterReleaseChannelStateOutput {
	return o
}

func (o ClusterReleaseChannelStateOutput) ToClusterReleaseChannelStateOutputWithContext(ctx context.Context) ClusterReleaseChannelStateOutput {
	return o
}

// The selected release channel.
// Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o ClusterReleaseChannelStateOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReleaseChannelState) string { return v.Channel }).(pulumi.StringOutput)
}

type ClusterResourceUsageExportConfig struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestination ClusterResourceUsageExportConfigBigqueryDestination `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering *bool `pulumi:"enableNetworkEgressMetering"`
}

type ClusterResourceUsageExportConfigInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigOutput() ClusterResourceUsageExportConfigOutput
	ToClusterResourceUsageExportConfigOutputWithContext(context.Context) ClusterResourceUsageExportConfigOutput
}

type ClusterResourceUsageExportConfigArgs struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestination ClusterResourceUsageExportConfigBigqueryDestinationInput `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering pulumi.BoolPtrInput `pulumi:"enableNetworkEgressMetering"`
}

func (ClusterResourceUsageExportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigOutput() ClusterResourceUsageExportConfigOutput {
	return i.ToClusterResourceUsageExportConfigOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigOutput)
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return i.ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigOutput).ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx)
}

type ClusterResourceUsageExportConfigPtrInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput
	ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Context) ClusterResourceUsageExportConfigPtrOutput
}

type clusterResourceUsageExportConfigPtrType ClusterResourceUsageExportConfigArgs

func ClusterResourceUsageExportConfigPtr(v *ClusterResourceUsageExportConfigArgs) ClusterResourceUsageExportConfigPtrInput {
	return (*clusterResourceUsageExportConfigPtrType)(v)
}

func (*clusterResourceUsageExportConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i *clusterResourceUsageExportConfigPtrType) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return i.ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Background())
}

func (i *clusterResourceUsageExportConfigPtrType) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigPtrOutput)
}

type ClusterResourceUsageExportConfigOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigOutput() ClusterResourceUsageExportConfigOutput {
	return o
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigOutput {
	return o
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return o.ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Background())
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) *ClusterResourceUsageExportConfig {
		return &v
	}).(ClusterResourceUsageExportConfigPtrOutput)
}

// Parameters for using BigQuery as the destination of resource usage export.
func (o ClusterResourceUsageExportConfigOutput) BigqueryDestination() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) ClusterResourceUsageExportConfigBigqueryDestination {
		return v.BigqueryDestination
	}).(ClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
// in the cluster to meter network egress traffic.
func (o ClusterResourceUsageExportConfigOutput) EnableNetworkEgressMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) *bool { return v.EnableNetworkEgressMetering }).(pulumi.BoolPtrOutput)
}

type ClusterResourceUsageExportConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigPtrOutput) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigPtrOutput) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigPtrOutput) Elem() ClusterResourceUsageExportConfigOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfig) ClusterResourceUsageExportConfig { return *v }).(ClusterResourceUsageExportConfigOutput)
}

// Parameters for using BigQuery as the destination of resource usage export.
func (o ClusterResourceUsageExportConfigPtrOutput) BigqueryDestination() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) ClusterResourceUsageExportConfigBigqueryDestination {
		return v.BigqueryDestination
	}).(ClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
// in the cluster to meter network egress traffic.
func (o ClusterResourceUsageExportConfigPtrOutput) EnableNetworkEgressMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) *bool { return v.EnableNetworkEgressMetering }).(pulumi.BoolPtrOutput)
}

type ClusterResourceUsageExportConfigArgs struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestination ClusterResourceUsageExportConfigBigqueryDestinationArgs `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering *bool `pulumi:"enableNetworkEgressMetering"`
}

type ClusterResourceUsageExportConfigArgsInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigArgsOutput() ClusterResourceUsageExportConfigArgsOutput
	ToClusterResourceUsageExportConfigArgsOutputWithContext(context.Context) ClusterResourceUsageExportConfigArgsOutput
}

type ClusterResourceUsageExportConfigArgsArgs struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestination ClusterResourceUsageExportConfigBigqueryDestinationArgsInput `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering pulumi.BoolPtrInput `pulumi:"enableNetworkEgressMetering"`
}

func (ClusterResourceUsageExportConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigArgs)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigArgsArgs) ToClusterResourceUsageExportConfigArgsOutput() ClusterResourceUsageExportConfigArgsOutput {
	return i.ToClusterResourceUsageExportConfigArgsOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigArgsArgs) ToClusterResourceUsageExportConfigArgsOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigArgsOutput)
}

func (i ClusterResourceUsageExportConfigArgsArgs) ToClusterResourceUsageExportConfigArgsPtrOutput() ClusterResourceUsageExportConfigArgsPtrOutput {
	return i.ToClusterResourceUsageExportConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigArgsArgs) ToClusterResourceUsageExportConfigArgsPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigArgsOutput).ToClusterResourceUsageExportConfigArgsPtrOutputWithContext(ctx)
}

type ClusterResourceUsageExportConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigArgsPtrOutput() ClusterResourceUsageExportConfigArgsPtrOutput
	ToClusterResourceUsageExportConfigArgsPtrOutputWithContext(context.Context) ClusterResourceUsageExportConfigArgsPtrOutput
}

type clusterResourceUsageExportConfigArgsPtrType ClusterResourceUsageExportConfigArgsArgs

func ClusterResourceUsageExportConfigArgsPtr(v *ClusterResourceUsageExportConfigArgsArgs) ClusterResourceUsageExportConfigArgsPtrInput {
	return (*clusterResourceUsageExportConfigArgsPtrType)(v)
}

func (*clusterResourceUsageExportConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfigArgs)(nil)).Elem()
}

func (i *clusterResourceUsageExportConfigArgsPtrType) ToClusterResourceUsageExportConfigArgsPtrOutput() ClusterResourceUsageExportConfigArgsPtrOutput {
	return i.ToClusterResourceUsageExportConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterResourceUsageExportConfigArgsPtrType) ToClusterResourceUsageExportConfigArgsPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigArgsPtrOutput)
}

type ClusterResourceUsageExportConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigArgs)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigArgsOutput) ToClusterResourceUsageExportConfigArgsOutput() ClusterResourceUsageExportConfigArgsOutput {
	return o
}

func (o ClusterResourceUsageExportConfigArgsOutput) ToClusterResourceUsageExportConfigArgsOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigArgsOutput {
	return o
}

func (o ClusterResourceUsageExportConfigArgsOutput) ToClusterResourceUsageExportConfigArgsPtrOutput() ClusterResourceUsageExportConfigArgsPtrOutput {
	return o.ToClusterResourceUsageExportConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterResourceUsageExportConfigArgsOutput) ToClusterResourceUsageExportConfigArgsPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigArgs) *ClusterResourceUsageExportConfigArgs {
		return &v
	}).(ClusterResourceUsageExportConfigArgsPtrOutput)
}

// Parameters for using BigQuery as the destination of resource usage export.
func (o ClusterResourceUsageExportConfigArgsOutput) BigqueryDestination() ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigArgs) ClusterResourceUsageExportConfigBigqueryDestinationArgs {
		return v.BigqueryDestination
	}).(ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
// in the cluster to meter network egress traffic.
func (o ClusterResourceUsageExportConfigArgsOutput) EnableNetworkEgressMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigArgs) *bool { return v.EnableNetworkEgressMetering }).(pulumi.BoolPtrOutput)
}

type ClusterResourceUsageExportConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfigArgs)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigArgsPtrOutput) ToClusterResourceUsageExportConfigArgsPtrOutput() ClusterResourceUsageExportConfigArgsPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigArgsPtrOutput) ToClusterResourceUsageExportConfigArgsPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigArgsPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigArgsPtrOutput) Elem() ClusterResourceUsageExportConfigArgsOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfigArgs) ClusterResourceUsageExportConfigArgs { return *v }).(ClusterResourceUsageExportConfigArgsOutput)
}

// Parameters for using BigQuery as the destination of resource usage export.
func (o ClusterResourceUsageExportConfigArgsPtrOutput) BigqueryDestination() ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigArgs) ClusterResourceUsageExportConfigBigqueryDestinationArgs {
		return v.BigqueryDestination
	}).(ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
// in the cluster to meter network egress traffic.
func (o ClusterResourceUsageExportConfigArgsPtrOutput) EnableNetworkEgressMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigArgs) *bool { return v.EnableNetworkEgressMetering }).(pulumi.BoolPtrOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestination struct {
	DatasetId string `pulumi:"datasetId"`
}

type ClusterResourceUsageExportConfigBigqueryDestinationInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigBigqueryDestinationOutput() ClusterResourceUsageExportConfigBigqueryDestinationOutput
	ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Context) ClusterResourceUsageExportConfigBigqueryDestinationOutput
}

type ClusterResourceUsageExportConfigBigqueryDestinationArgs struct {
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
}

func (ClusterResourceUsageExportConfigBigqueryDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationOutput() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return i.ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestinationOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigBigqueryDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationOutput() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigBigqueryDestination) string { return v.DatasetId }).(pulumi.StringOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestinationArgs struct {
	DatasetId string `pulumi:"datasetId"`
}

type ClusterResourceUsageExportConfigBigqueryDestinationArgsInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigBigqueryDestinationArgsOutput() ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput
	ToClusterResourceUsageExportConfigBigqueryDestinationArgsOutputWithContext(context.Context) ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput
}

type ClusterResourceUsageExportConfigBigqueryDestinationArgsArgs struct {
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
}

func (ClusterResourceUsageExportConfigBigqueryDestinationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestinationArgs)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgsArgs) ToClusterResourceUsageExportConfigBigqueryDestinationArgsOutput() ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput {
	return i.ToClusterResourceUsageExportConfigBigqueryDestinationArgsOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgsArgs) ToClusterResourceUsageExportConfigBigqueryDestinationArgsOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestinationArgs)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput) ToClusterResourceUsageExportConfigBigqueryDestinationArgsOutput() ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput) ToClusterResourceUsageExportConfigBigqueryDestinationArgsOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigBigqueryDestinationArgs) string { return v.DatasetId }).(pulumi.StringOutput)
}

type ClusterResourceUsageExportConfigState struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestination ClusterResourceUsageExportConfigStateBigqueryDestination `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering *bool `pulumi:"enableNetworkEgressMetering"`
}

type ClusterResourceUsageExportConfigStateInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigStateOutput() ClusterResourceUsageExportConfigStateOutput
	ToClusterResourceUsageExportConfigStateOutputWithContext(context.Context) ClusterResourceUsageExportConfigStateOutput
}

type ClusterResourceUsageExportConfigStateArgs struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestination ClusterResourceUsageExportConfigStateBigqueryDestinationInput `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering pulumi.BoolPtrInput `pulumi:"enableNetworkEgressMetering"`
}

func (ClusterResourceUsageExportConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigState)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigStateArgs) ToClusterResourceUsageExportConfigStateOutput() ClusterResourceUsageExportConfigStateOutput {
	return i.ToClusterResourceUsageExportConfigStateOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigStateArgs) ToClusterResourceUsageExportConfigStateOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigStateOutput)
}

type ClusterResourceUsageExportConfigStateOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigState)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigStateOutput) ToClusterResourceUsageExportConfigStateOutput() ClusterResourceUsageExportConfigStateOutput {
	return o
}

func (o ClusterResourceUsageExportConfigStateOutput) ToClusterResourceUsageExportConfigStateOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigStateOutput {
	return o
}

// Parameters for using BigQuery as the destination of resource usage export.
func (o ClusterResourceUsageExportConfigStateOutput) BigqueryDestination() ClusterResourceUsageExportConfigStateBigqueryDestinationOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigState) ClusterResourceUsageExportConfigStateBigqueryDestination {
		return v.BigqueryDestination
	}).(ClusterResourceUsageExportConfigStateBigqueryDestinationOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
// in the cluster to meter network egress traffic.
func (o ClusterResourceUsageExportConfigStateOutput) EnableNetworkEgressMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigState) *bool { return v.EnableNetworkEgressMetering }).(pulumi.BoolPtrOutput)
}

type ClusterResourceUsageExportConfigStateBigqueryDestination struct {
	DatasetId string `pulumi:"datasetId"`
}

type ClusterResourceUsageExportConfigStateBigqueryDestinationInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigStateBigqueryDestinationOutput() ClusterResourceUsageExportConfigStateBigqueryDestinationOutput
	ToClusterResourceUsageExportConfigStateBigqueryDestinationOutputWithContext(context.Context) ClusterResourceUsageExportConfigStateBigqueryDestinationOutput
}

type ClusterResourceUsageExportConfigStateBigqueryDestinationArgs struct {
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
}

func (ClusterResourceUsageExportConfigStateBigqueryDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigStateBigqueryDestination)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigStateBigqueryDestinationArgs) ToClusterResourceUsageExportConfigStateBigqueryDestinationOutput() ClusterResourceUsageExportConfigStateBigqueryDestinationOutput {
	return i.ToClusterResourceUsageExportConfigStateBigqueryDestinationOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigStateBigqueryDestinationArgs) ToClusterResourceUsageExportConfigStateBigqueryDestinationOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigStateBigqueryDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigStateBigqueryDestinationOutput)
}

type ClusterResourceUsageExportConfigStateBigqueryDestinationOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigStateBigqueryDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigStateBigqueryDestination)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigStateBigqueryDestinationOutput) ToClusterResourceUsageExportConfigStateBigqueryDestinationOutput() ClusterResourceUsageExportConfigStateBigqueryDestinationOutput {
	return o
}

func (o ClusterResourceUsageExportConfigStateBigqueryDestinationOutput) ToClusterResourceUsageExportConfigStateBigqueryDestinationOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigStateBigqueryDestinationOutput {
	return o
}

func (o ClusterResourceUsageExportConfigStateBigqueryDestinationOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigStateBigqueryDestination) string { return v.DatasetId }).(pulumi.StringOutput)
}

type ClusterVerticalPodAutoscaling struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

type ClusterVerticalPodAutoscalingInput interface {
	pulumi.Input

	ToClusterVerticalPodAutoscalingOutput() ClusterVerticalPodAutoscalingOutput
	ToClusterVerticalPodAutoscalingOutputWithContext(context.Context) ClusterVerticalPodAutoscalingOutput
}

type ClusterVerticalPodAutoscalingArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterVerticalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingOutput() ClusterVerticalPodAutoscalingOutput {
	return i.ToClusterVerticalPodAutoscalingOutputWithContext(context.Background())
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingOutput)
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return i.ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingOutput).ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx)
}

type ClusterVerticalPodAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput
	ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Context) ClusterVerticalPodAutoscalingPtrOutput
}

type clusterVerticalPodAutoscalingPtrType ClusterVerticalPodAutoscalingArgs

func ClusterVerticalPodAutoscalingPtr(v *ClusterVerticalPodAutoscalingArgs) ClusterVerticalPodAutoscalingPtrInput {
	return (*clusterVerticalPodAutoscalingPtrType)(v)
}

func (*clusterVerticalPodAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i *clusterVerticalPodAutoscalingPtrType) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return i.ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterVerticalPodAutoscalingPtrType) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingPtrOutput)
}

type ClusterVerticalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterVerticalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingOutput() ClusterVerticalPodAutoscalingOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return o.ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscaling) *ClusterVerticalPodAutoscaling {
		return &v
	}).(ClusterVerticalPodAutoscalingPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterVerticalPodAutoscalingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterVerticalPodAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterVerticalPodAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o ClusterVerticalPodAutoscalingPtrOutput) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingPtrOutput) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingPtrOutput) Elem() ClusterVerticalPodAutoscalingOutput {
	return o.ApplyT(func(v *ClusterVerticalPodAutoscaling) ClusterVerticalPodAutoscaling { return *v }).(ClusterVerticalPodAutoscalingOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterVerticalPodAutoscalingPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterVerticalPodAutoscalingArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

type ClusterVerticalPodAutoscalingArgsInput interface {
	pulumi.Input

	ToClusterVerticalPodAutoscalingArgsOutput() ClusterVerticalPodAutoscalingArgsOutput
	ToClusterVerticalPodAutoscalingArgsOutputWithContext(context.Context) ClusterVerticalPodAutoscalingArgsOutput
}

type ClusterVerticalPodAutoscalingArgsArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterVerticalPodAutoscalingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscalingArgs)(nil)).Elem()
}

func (i ClusterVerticalPodAutoscalingArgsArgs) ToClusterVerticalPodAutoscalingArgsOutput() ClusterVerticalPodAutoscalingArgsOutput {
	return i.ToClusterVerticalPodAutoscalingArgsOutputWithContext(context.Background())
}

func (i ClusterVerticalPodAutoscalingArgsArgs) ToClusterVerticalPodAutoscalingArgsOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingArgsOutput)
}

func (i ClusterVerticalPodAutoscalingArgsArgs) ToClusterVerticalPodAutoscalingArgsPtrOutput() ClusterVerticalPodAutoscalingArgsPtrOutput {
	return i.ToClusterVerticalPodAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i ClusterVerticalPodAutoscalingArgsArgs) ToClusterVerticalPodAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingArgsOutput).ToClusterVerticalPodAutoscalingArgsPtrOutputWithContext(ctx)
}

type ClusterVerticalPodAutoscalingArgsPtrInput interface {
	pulumi.Input

	ToClusterVerticalPodAutoscalingArgsPtrOutput() ClusterVerticalPodAutoscalingArgsPtrOutput
	ToClusterVerticalPodAutoscalingArgsPtrOutputWithContext(context.Context) ClusterVerticalPodAutoscalingArgsPtrOutput
}

type clusterVerticalPodAutoscalingArgsPtrType ClusterVerticalPodAutoscalingArgsArgs

func ClusterVerticalPodAutoscalingArgsPtr(v *ClusterVerticalPodAutoscalingArgsArgs) ClusterVerticalPodAutoscalingArgsPtrInput {
	return (*clusterVerticalPodAutoscalingArgsPtrType)(v)
}

func (*clusterVerticalPodAutoscalingArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVerticalPodAutoscalingArgs)(nil)).Elem()
}

func (i *clusterVerticalPodAutoscalingArgsPtrType) ToClusterVerticalPodAutoscalingArgsPtrOutput() ClusterVerticalPodAutoscalingArgsPtrOutput {
	return i.ToClusterVerticalPodAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i *clusterVerticalPodAutoscalingArgsPtrType) ToClusterVerticalPodAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingArgsPtrOutput)
}

type ClusterVerticalPodAutoscalingArgsOutput struct{ *pulumi.OutputState }

func (ClusterVerticalPodAutoscalingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscalingArgs)(nil)).Elem()
}

func (o ClusterVerticalPodAutoscalingArgsOutput) ToClusterVerticalPodAutoscalingArgsOutput() ClusterVerticalPodAutoscalingArgsOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingArgsOutput) ToClusterVerticalPodAutoscalingArgsOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingArgsOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingArgsOutput) ToClusterVerticalPodAutoscalingArgsPtrOutput() ClusterVerticalPodAutoscalingArgsPtrOutput {
	return o.ToClusterVerticalPodAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (o ClusterVerticalPodAutoscalingArgsOutput) ToClusterVerticalPodAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingArgsPtrOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscalingArgs) *ClusterVerticalPodAutoscalingArgs {
		return &v
	}).(ClusterVerticalPodAutoscalingArgsPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterVerticalPodAutoscalingArgsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscalingArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterVerticalPodAutoscalingArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterVerticalPodAutoscalingArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVerticalPodAutoscalingArgs)(nil)).Elem()
}

func (o ClusterVerticalPodAutoscalingArgsPtrOutput) ToClusterVerticalPodAutoscalingArgsPtrOutput() ClusterVerticalPodAutoscalingArgsPtrOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingArgsPtrOutput) ToClusterVerticalPodAutoscalingArgsPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingArgsPtrOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingArgsPtrOutput) Elem() ClusterVerticalPodAutoscalingArgsOutput {
	return o.ApplyT(func(v *ClusterVerticalPodAutoscalingArgs) ClusterVerticalPodAutoscalingArgs { return *v }).(ClusterVerticalPodAutoscalingArgsOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterVerticalPodAutoscalingArgsPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscalingArgs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterVerticalPodAutoscalingState struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

type ClusterVerticalPodAutoscalingStateInput interface {
	pulumi.Input

	ToClusterVerticalPodAutoscalingStateOutput() ClusterVerticalPodAutoscalingStateOutput
	ToClusterVerticalPodAutoscalingStateOutputWithContext(context.Context) ClusterVerticalPodAutoscalingStateOutput
}

type ClusterVerticalPodAutoscalingStateArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterVerticalPodAutoscalingStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscalingState)(nil)).Elem()
}

func (i ClusterVerticalPodAutoscalingStateArgs) ToClusterVerticalPodAutoscalingStateOutput() ClusterVerticalPodAutoscalingStateOutput {
	return i.ToClusterVerticalPodAutoscalingStateOutputWithContext(context.Background())
}

func (i ClusterVerticalPodAutoscalingStateArgs) ToClusterVerticalPodAutoscalingStateOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingStateOutput)
}

type ClusterVerticalPodAutoscalingStateOutput struct{ *pulumi.OutputState }

func (ClusterVerticalPodAutoscalingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscalingState)(nil)).Elem()
}

func (o ClusterVerticalPodAutoscalingStateOutput) ToClusterVerticalPodAutoscalingStateOutput() ClusterVerticalPodAutoscalingStateOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingStateOutput) ToClusterVerticalPodAutoscalingStateOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingStateOutput {
	return o
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterVerticalPodAutoscalingStateOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscalingState) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterWorkloadIdentityConfig struct {
	// Currently, the only supported identity namespace is the project's default.
	IdentityNamespace string `pulumi:"identityNamespace"`
}

type ClusterWorkloadIdentityConfigInput interface {
	pulumi.Input

	ToClusterWorkloadIdentityConfigOutput() ClusterWorkloadIdentityConfigOutput
	ToClusterWorkloadIdentityConfigOutputWithContext(context.Context) ClusterWorkloadIdentityConfigOutput
}

type ClusterWorkloadIdentityConfigArgs struct {
	// Currently, the only supported identity namespace is the project's default.
	IdentityNamespace pulumi.StringInput `pulumi:"identityNamespace"`
}

func (ClusterWorkloadIdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigOutput() ClusterWorkloadIdentityConfigOutput {
	return i.ToClusterWorkloadIdentityConfigOutputWithContext(context.Background())
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigOutput)
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return i.ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Background())
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigOutput).ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx)
}

type ClusterWorkloadIdentityConfigPtrInput interface {
	pulumi.Input

	ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput
	ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Context) ClusterWorkloadIdentityConfigPtrOutput
}

type clusterWorkloadIdentityConfigPtrType ClusterWorkloadIdentityConfigArgs

func ClusterWorkloadIdentityConfigPtr(v *ClusterWorkloadIdentityConfigArgs) ClusterWorkloadIdentityConfigPtrInput {
	return (*clusterWorkloadIdentityConfigPtrType)(v)
}

func (*clusterWorkloadIdentityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i *clusterWorkloadIdentityConfigPtrType) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return i.ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Background())
}

func (i *clusterWorkloadIdentityConfigPtrType) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigPtrOutput)
}

type ClusterWorkloadIdentityConfigOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadIdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigOutput() ClusterWorkloadIdentityConfigOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return o.ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Background())
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfig) *ClusterWorkloadIdentityConfig {
		return &v
	}).(ClusterWorkloadIdentityConfigPtrOutput)
}

// Currently, the only supported identity namespace is the project's default.
func (o ClusterWorkloadIdentityConfigOutput) IdentityNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfig) string { return v.IdentityNamespace }).(pulumi.StringOutput)
}

type ClusterWorkloadIdentityConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadIdentityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o ClusterWorkloadIdentityConfigPtrOutput) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigPtrOutput) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigPtrOutput) Elem() ClusterWorkloadIdentityConfigOutput {
	return o.ApplyT(func(v *ClusterWorkloadIdentityConfig) ClusterWorkloadIdentityConfig { return *v }).(ClusterWorkloadIdentityConfigOutput)
}

// Currently, the only supported identity namespace is the project's default.
func (o ClusterWorkloadIdentityConfigPtrOutput) IdentityNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfig) string { return v.IdentityNamespace }).(pulumi.StringOutput)
}

type ClusterWorkloadIdentityConfigArgs struct {
	// Currently, the only supported identity namespace is the project's default.
	IdentityNamespace string `pulumi:"identityNamespace"`
}

type ClusterWorkloadIdentityConfigArgsInput interface {
	pulumi.Input

	ToClusterWorkloadIdentityConfigArgsOutput() ClusterWorkloadIdentityConfigArgsOutput
	ToClusterWorkloadIdentityConfigArgsOutputWithContext(context.Context) ClusterWorkloadIdentityConfigArgsOutput
}

type ClusterWorkloadIdentityConfigArgsArgs struct {
	// Currently, the only supported identity namespace is the project's default.
	IdentityNamespace pulumi.StringInput `pulumi:"identityNamespace"`
}

func (ClusterWorkloadIdentityConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfigArgs)(nil)).Elem()
}

func (i ClusterWorkloadIdentityConfigArgsArgs) ToClusterWorkloadIdentityConfigArgsOutput() ClusterWorkloadIdentityConfigArgsOutput {
	return i.ToClusterWorkloadIdentityConfigArgsOutputWithContext(context.Background())
}

func (i ClusterWorkloadIdentityConfigArgsArgs) ToClusterWorkloadIdentityConfigArgsOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigArgsOutput)
}

func (i ClusterWorkloadIdentityConfigArgsArgs) ToClusterWorkloadIdentityConfigArgsPtrOutput() ClusterWorkloadIdentityConfigArgsPtrOutput {
	return i.ToClusterWorkloadIdentityConfigArgsPtrOutputWithContext(context.Background())
}

func (i ClusterWorkloadIdentityConfigArgsArgs) ToClusterWorkloadIdentityConfigArgsPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigArgsOutput).ToClusterWorkloadIdentityConfigArgsPtrOutputWithContext(ctx)
}

type ClusterWorkloadIdentityConfigArgsPtrInput interface {
	pulumi.Input

	ToClusterWorkloadIdentityConfigArgsPtrOutput() ClusterWorkloadIdentityConfigArgsPtrOutput
	ToClusterWorkloadIdentityConfigArgsPtrOutputWithContext(context.Context) ClusterWorkloadIdentityConfigArgsPtrOutput
}

type clusterWorkloadIdentityConfigArgsPtrType ClusterWorkloadIdentityConfigArgsArgs

func ClusterWorkloadIdentityConfigArgsPtr(v *ClusterWorkloadIdentityConfigArgsArgs) ClusterWorkloadIdentityConfigArgsPtrInput {
	return (*clusterWorkloadIdentityConfigArgsPtrType)(v)
}

func (*clusterWorkloadIdentityConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadIdentityConfigArgs)(nil)).Elem()
}

func (i *clusterWorkloadIdentityConfigArgsPtrType) ToClusterWorkloadIdentityConfigArgsPtrOutput() ClusterWorkloadIdentityConfigArgsPtrOutput {
	return i.ToClusterWorkloadIdentityConfigArgsPtrOutputWithContext(context.Background())
}

func (i *clusterWorkloadIdentityConfigArgsPtrType) ToClusterWorkloadIdentityConfigArgsPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigArgsPtrOutput)
}

type ClusterWorkloadIdentityConfigArgsOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadIdentityConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfigArgs)(nil)).Elem()
}

func (o ClusterWorkloadIdentityConfigArgsOutput) ToClusterWorkloadIdentityConfigArgsOutput() ClusterWorkloadIdentityConfigArgsOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigArgsOutput) ToClusterWorkloadIdentityConfigArgsOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigArgsOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigArgsOutput) ToClusterWorkloadIdentityConfigArgsPtrOutput() ClusterWorkloadIdentityConfigArgsPtrOutput {
	return o.ToClusterWorkloadIdentityConfigArgsPtrOutputWithContext(context.Background())
}

func (o ClusterWorkloadIdentityConfigArgsOutput) ToClusterWorkloadIdentityConfigArgsPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigArgsPtrOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfigArgs) *ClusterWorkloadIdentityConfigArgs {
		return &v
	}).(ClusterWorkloadIdentityConfigArgsPtrOutput)
}

// Currently, the only supported identity namespace is the project's default.
func (o ClusterWorkloadIdentityConfigArgsOutput) IdentityNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfigArgs) string { return v.IdentityNamespace }).(pulumi.StringOutput)
}

type ClusterWorkloadIdentityConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadIdentityConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadIdentityConfigArgs)(nil)).Elem()
}

func (o ClusterWorkloadIdentityConfigArgsPtrOutput) ToClusterWorkloadIdentityConfigArgsPtrOutput() ClusterWorkloadIdentityConfigArgsPtrOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigArgsPtrOutput) ToClusterWorkloadIdentityConfigArgsPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigArgsPtrOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigArgsPtrOutput) Elem() ClusterWorkloadIdentityConfigArgsOutput {
	return o.ApplyT(func(v *ClusterWorkloadIdentityConfigArgs) ClusterWorkloadIdentityConfigArgs { return *v }).(ClusterWorkloadIdentityConfigArgsOutput)
}

// Currently, the only supported identity namespace is the project's default.
func (o ClusterWorkloadIdentityConfigArgsPtrOutput) IdentityNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfigArgs) string { return v.IdentityNamespace }).(pulumi.StringOutput)
}

type ClusterWorkloadIdentityConfigState struct {
	// Currently, the only supported identity namespace is the project's default.
	IdentityNamespace string `pulumi:"identityNamespace"`
}

type ClusterWorkloadIdentityConfigStateInput interface {
	pulumi.Input

	ToClusterWorkloadIdentityConfigStateOutput() ClusterWorkloadIdentityConfigStateOutput
	ToClusterWorkloadIdentityConfigStateOutputWithContext(context.Context) ClusterWorkloadIdentityConfigStateOutput
}

type ClusterWorkloadIdentityConfigStateArgs struct {
	// Currently, the only supported identity namespace is the project's default.
	IdentityNamespace pulumi.StringInput `pulumi:"identityNamespace"`
}

func (ClusterWorkloadIdentityConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfigState)(nil)).Elem()
}

func (i ClusterWorkloadIdentityConfigStateArgs) ToClusterWorkloadIdentityConfigStateOutput() ClusterWorkloadIdentityConfigStateOutput {
	return i.ToClusterWorkloadIdentityConfigStateOutputWithContext(context.Background())
}

func (i ClusterWorkloadIdentityConfigStateArgs) ToClusterWorkloadIdentityConfigStateOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigStateOutput)
}

type ClusterWorkloadIdentityConfigStateOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadIdentityConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfigState)(nil)).Elem()
}

func (o ClusterWorkloadIdentityConfigStateOutput) ToClusterWorkloadIdentityConfigStateOutput() ClusterWorkloadIdentityConfigStateOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigStateOutput) ToClusterWorkloadIdentityConfigStateOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigStateOutput {
	return o
}

// Currently, the only supported identity namespace is the project's default.
func (o ClusterWorkloadIdentityConfigStateOutput) IdentityNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfigState) string { return v.IdentityNamespace }).(pulumi.StringOutput)
}

type NodePoolAutoscaling struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >=0 and
	// <= `maxNodeCount`.
	MinNodeCount int `pulumi:"minNodeCount"`
}

type NodePoolAutoscalingInput interface {
	pulumi.Input

	ToNodePoolAutoscalingOutput() NodePoolAutoscalingOutput
	ToNodePoolAutoscalingOutputWithContext(context.Context) NodePoolAutoscalingOutput
}

type NodePoolAutoscalingArgs struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >=0 and
	// <= `maxNodeCount`.
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (NodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscaling)(nil)).Elem()
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingOutput() NodePoolAutoscalingOutput {
	return i.ToNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingOutputWithContext(ctx context.Context) NodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingOutput)
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return i.ToNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingOutput).ToNodePoolAutoscalingPtrOutputWithContext(ctx)
}

type NodePoolAutoscalingPtrInput interface {
	pulumi.Input

	ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput
	ToNodePoolAutoscalingPtrOutputWithContext(context.Context) NodePoolAutoscalingPtrOutput
}

type nodePoolAutoscalingPtrType NodePoolAutoscalingArgs

func NodePoolAutoscalingPtr(v *NodePoolAutoscalingArgs) NodePoolAutoscalingPtrInput {
	return (*nodePoolAutoscalingPtrType)(v)
}

func (*nodePoolAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoscaling)(nil)).Elem()
}

func (i *nodePoolAutoscalingPtrType) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return i.ToNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i *nodePoolAutoscalingPtrType) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingPtrOutput)
}

type NodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscaling)(nil)).Elem()
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingOutput() NodePoolAutoscalingOutput {
	return o
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingOutputWithContext(ctx context.Context) NodePoolAutoscalingOutput {
	return o
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return o.ToNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) *NodePoolAutoscaling {
		return &v
	}).(NodePoolAutoscalingPtrOutput)
}

// Maximum number of nodes in the NodePool. Must be >= min_node_count.
func (o NodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of nodes in the NodePool. Must be >=0 and
// <= `maxNodeCount`.
func (o NodePoolAutoscalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type NodePoolAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoscaling)(nil)).Elem()
}

func (o NodePoolAutoscalingPtrOutput) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return o
}

func (o NodePoolAutoscalingPtrOutput) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return o
}

func (o NodePoolAutoscalingPtrOutput) Elem() NodePoolAutoscalingOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) NodePoolAutoscaling { return *v }).(NodePoolAutoscalingOutput)
}

// Maximum number of nodes in the NodePool. Must be >= min_node_count.
func (o NodePoolAutoscalingPtrOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of nodes in the NodePool. Must be >=0 and
// <= `maxNodeCount`.
func (o NodePoolAutoscalingPtrOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type NodePoolAutoscalingArgs struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >=0 and
	// <= `maxNodeCount`.
	MinNodeCount int `pulumi:"minNodeCount"`
}

type NodePoolAutoscalingArgsInput interface {
	pulumi.Input

	ToNodePoolAutoscalingArgsOutput() NodePoolAutoscalingArgsOutput
	ToNodePoolAutoscalingArgsOutputWithContext(context.Context) NodePoolAutoscalingArgsOutput
}

type NodePoolAutoscalingArgsArgs struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >=0 and
	// <= `maxNodeCount`.
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (NodePoolAutoscalingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscalingArgs)(nil)).Elem()
}

func (i NodePoolAutoscalingArgsArgs) ToNodePoolAutoscalingArgsOutput() NodePoolAutoscalingArgsOutput {
	return i.ToNodePoolAutoscalingArgsOutputWithContext(context.Background())
}

func (i NodePoolAutoscalingArgsArgs) ToNodePoolAutoscalingArgsOutputWithContext(ctx context.Context) NodePoolAutoscalingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingArgsOutput)
}

func (i NodePoolAutoscalingArgsArgs) ToNodePoolAutoscalingArgsPtrOutput() NodePoolAutoscalingArgsPtrOutput {
	return i.ToNodePoolAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i NodePoolAutoscalingArgsArgs) ToNodePoolAutoscalingArgsPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingArgsOutput).ToNodePoolAutoscalingArgsPtrOutputWithContext(ctx)
}

type NodePoolAutoscalingArgsPtrInput interface {
	pulumi.Input

	ToNodePoolAutoscalingArgsPtrOutput() NodePoolAutoscalingArgsPtrOutput
	ToNodePoolAutoscalingArgsPtrOutputWithContext(context.Context) NodePoolAutoscalingArgsPtrOutput
}

type nodePoolAutoscalingArgsPtrType NodePoolAutoscalingArgsArgs

func NodePoolAutoscalingArgsPtr(v *NodePoolAutoscalingArgsArgs) NodePoolAutoscalingArgsPtrInput {
	return (*nodePoolAutoscalingArgsPtrType)(v)
}

func (*nodePoolAutoscalingArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoscalingArgs)(nil)).Elem()
}

func (i *nodePoolAutoscalingArgsPtrType) ToNodePoolAutoscalingArgsPtrOutput() NodePoolAutoscalingArgsPtrOutput {
	return i.ToNodePoolAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (i *nodePoolAutoscalingArgsPtrType) ToNodePoolAutoscalingArgsPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingArgsPtrOutput)
}

type NodePoolAutoscalingArgsOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscalingArgs)(nil)).Elem()
}

func (o NodePoolAutoscalingArgsOutput) ToNodePoolAutoscalingArgsOutput() NodePoolAutoscalingArgsOutput {
	return o
}

func (o NodePoolAutoscalingArgsOutput) ToNodePoolAutoscalingArgsOutputWithContext(ctx context.Context) NodePoolAutoscalingArgsOutput {
	return o
}

func (o NodePoolAutoscalingArgsOutput) ToNodePoolAutoscalingArgsPtrOutput() NodePoolAutoscalingArgsPtrOutput {
	return o.ToNodePoolAutoscalingArgsPtrOutputWithContext(context.Background())
}

func (o NodePoolAutoscalingArgsOutput) ToNodePoolAutoscalingArgsPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingArgsPtrOutput {
	return o.ApplyT(func(v NodePoolAutoscalingArgs) *NodePoolAutoscalingArgs {
		return &v
	}).(NodePoolAutoscalingArgsPtrOutput)
}

// Maximum number of nodes in the NodePool. Must be >= min_node_count.
func (o NodePoolAutoscalingArgsOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscalingArgs) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of nodes in the NodePool. Must be >=0 and
// <= `maxNodeCount`.
func (o NodePoolAutoscalingArgsOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscalingArgs) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type NodePoolAutoscalingArgsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoscalingArgs)(nil)).Elem()
}

func (o NodePoolAutoscalingArgsPtrOutput) ToNodePoolAutoscalingArgsPtrOutput() NodePoolAutoscalingArgsPtrOutput {
	return o
}

func (o NodePoolAutoscalingArgsPtrOutput) ToNodePoolAutoscalingArgsPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingArgsPtrOutput {
	return o
}

func (o NodePoolAutoscalingArgsPtrOutput) Elem() NodePoolAutoscalingArgsOutput {
	return o.ApplyT(func(v *NodePoolAutoscalingArgs) NodePoolAutoscalingArgs { return *v }).(NodePoolAutoscalingArgsOutput)
}

// Maximum number of nodes in the NodePool. Must be >= min_node_count.
func (o NodePoolAutoscalingArgsPtrOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscalingArgs) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of nodes in the NodePool. Must be >=0 and
// <= `maxNodeCount`.
func (o NodePoolAutoscalingArgsPtrOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscalingArgs) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type NodePoolAutoscalingState struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >=0 and
	// <= `maxNodeCount`.
	MinNodeCount int `pulumi:"minNodeCount"`
}

type NodePoolAutoscalingStateInput interface {
	pulumi.Input

	ToNodePoolAutoscalingStateOutput() NodePoolAutoscalingStateOutput
	ToNodePoolAutoscalingStateOutputWithContext(context.Context) NodePoolAutoscalingStateOutput
}

type NodePoolAutoscalingStateArgs struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >=0 and
	// <= `maxNodeCount`.
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (NodePoolAutoscalingStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscalingState)(nil)).Elem()
}

func (i NodePoolAutoscalingStateArgs) ToNodePoolAutoscalingStateOutput() NodePoolAutoscalingStateOutput {
	return i.ToNodePoolAutoscalingStateOutputWithContext(context.Background())
}

func (i NodePoolAutoscalingStateArgs) ToNodePoolAutoscalingStateOutputWithContext(ctx context.Context) NodePoolAutoscalingStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingStateOutput)
}

type NodePoolAutoscalingStateOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscalingState)(nil)).Elem()
}

func (o NodePoolAutoscalingStateOutput) ToNodePoolAutoscalingStateOutput() NodePoolAutoscalingStateOutput {
	return o
}

func (o NodePoolAutoscalingStateOutput) ToNodePoolAutoscalingStateOutputWithContext(ctx context.Context) NodePoolAutoscalingStateOutput {
	return o
}

// Maximum number of nodes in the NodePool. Must be >= min_node_count.
func (o NodePoolAutoscalingStateOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscalingState) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of nodes in the NodePool. Must be >=0 and
// <= `maxNodeCount`.
func (o NodePoolAutoscalingStateOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscalingState) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type NodePoolManagement struct {
	// Whether the nodes will be automatically repaired.
	AutoRepair *bool `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

type NodePoolManagementInput interface {
	pulumi.Input

	ToNodePoolManagementOutput() NodePoolManagementOutput
	ToNodePoolManagementOutputWithContext(context.Context) NodePoolManagementOutput
}

type NodePoolManagementArgs struct {
	// Whether the nodes will be automatically repaired.
	AutoRepair pulumi.BoolPtrInput `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded.
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (NodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagement)(nil)).Elem()
}

func (i NodePoolManagementArgs) ToNodePoolManagementOutput() NodePoolManagementOutput {
	return i.ToNodePoolManagementOutputWithContext(context.Background())
}

func (i NodePoolManagementArgs) ToNodePoolManagementOutputWithContext(ctx context.Context) NodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementOutput)
}

func (i NodePoolManagementArgs) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return i.ToNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i NodePoolManagementArgs) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementOutput).ToNodePoolManagementPtrOutputWithContext(ctx)
}

type NodePoolManagementPtrInput interface {
	pulumi.Input

	ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput
	ToNodePoolManagementPtrOutputWithContext(context.Context) NodePoolManagementPtrOutput
}

type nodePoolManagementPtrType NodePoolManagementArgs

func NodePoolManagementPtr(v *NodePoolManagementArgs) NodePoolManagementPtrInput {
	return (*nodePoolManagementPtrType)(v)
}

func (*nodePoolManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolManagement)(nil)).Elem()
}

func (i *nodePoolManagementPtrType) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return i.ToNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i *nodePoolManagementPtrType) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementPtrOutput)
}

type NodePoolManagementOutput struct{ *pulumi.OutputState }

func (NodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagement)(nil)).Elem()
}

func (o NodePoolManagementOutput) ToNodePoolManagementOutput() NodePoolManagementOutput {
	return o
}

func (o NodePoolManagementOutput) ToNodePoolManagementOutputWithContext(ctx context.Context) NodePoolManagementOutput {
	return o
}

func (o NodePoolManagementOutput) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return o.ToNodePoolManagementPtrOutputWithContext(context.Background())
}

func (o NodePoolManagementOutput) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *NodePoolManagement {
		return &v
	}).(NodePoolManagementPtrOutput)
}

// Whether the nodes will be automatically repaired.
func (o NodePoolManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

// Whether the nodes will be automatically upgraded.
func (o NodePoolManagementOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type NodePoolManagementPtrOutput struct{ *pulumi.OutputState }

func (NodePoolManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolManagement)(nil)).Elem()
}

func (o NodePoolManagementPtrOutput) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return o
}

func (o NodePoolManagementPtrOutput) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return o
}

func (o NodePoolManagementPtrOutput) Elem() NodePoolManagementOutput {
	return o.ApplyT(func(v *NodePoolManagement) NodePoolManagement { return *v }).(NodePoolManagementOutput)
}

// Whether the nodes will be automatically repaired.
func (o NodePoolManagementPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

// Whether the nodes will be automatically upgraded.
func (o NodePoolManagementPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type NodePoolManagementArgs struct {
	// Whether the nodes will be automatically repaired.
	AutoRepair *bool `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

type NodePoolManagementArgsInput interface {
	pulumi.Input

	ToNodePoolManagementArgsOutput() NodePoolManagementArgsOutput
	ToNodePoolManagementArgsOutputWithContext(context.Context) NodePoolManagementArgsOutput
}

type NodePoolManagementArgsArgs struct {
	// Whether the nodes will be automatically repaired.
	AutoRepair pulumi.BoolPtrInput `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded.
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (NodePoolManagementArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagementArgs)(nil)).Elem()
}

func (i NodePoolManagementArgsArgs) ToNodePoolManagementArgsOutput() NodePoolManagementArgsOutput {
	return i.ToNodePoolManagementArgsOutputWithContext(context.Background())
}

func (i NodePoolManagementArgsArgs) ToNodePoolManagementArgsOutputWithContext(ctx context.Context) NodePoolManagementArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementArgsOutput)
}

func (i NodePoolManagementArgsArgs) ToNodePoolManagementArgsPtrOutput() NodePoolManagementArgsPtrOutput {
	return i.ToNodePoolManagementArgsPtrOutputWithContext(context.Background())
}

func (i NodePoolManagementArgsArgs) ToNodePoolManagementArgsPtrOutputWithContext(ctx context.Context) NodePoolManagementArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementArgsOutput).ToNodePoolManagementArgsPtrOutputWithContext(ctx)
}

type NodePoolManagementArgsPtrInput interface {
	pulumi.Input

	ToNodePoolManagementArgsPtrOutput() NodePoolManagementArgsPtrOutput
	ToNodePoolManagementArgsPtrOutputWithContext(context.Context) NodePoolManagementArgsPtrOutput
}

type nodePoolManagementArgsPtrType NodePoolManagementArgsArgs

func NodePoolManagementArgsPtr(v *NodePoolManagementArgsArgs) NodePoolManagementArgsPtrInput {
	return (*nodePoolManagementArgsPtrType)(v)
}

func (*nodePoolManagementArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolManagementArgs)(nil)).Elem()
}

func (i *nodePoolManagementArgsPtrType) ToNodePoolManagementArgsPtrOutput() NodePoolManagementArgsPtrOutput {
	return i.ToNodePoolManagementArgsPtrOutputWithContext(context.Background())
}

func (i *nodePoolManagementArgsPtrType) ToNodePoolManagementArgsPtrOutputWithContext(ctx context.Context) NodePoolManagementArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementArgsPtrOutput)
}

type NodePoolManagementArgsOutput struct{ *pulumi.OutputState }

func (NodePoolManagementArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagementArgs)(nil)).Elem()
}

func (o NodePoolManagementArgsOutput) ToNodePoolManagementArgsOutput() NodePoolManagementArgsOutput {
	return o
}

func (o NodePoolManagementArgsOutput) ToNodePoolManagementArgsOutputWithContext(ctx context.Context) NodePoolManagementArgsOutput {
	return o
}

func (o NodePoolManagementArgsOutput) ToNodePoolManagementArgsPtrOutput() NodePoolManagementArgsPtrOutput {
	return o.ToNodePoolManagementArgsPtrOutputWithContext(context.Background())
}

func (o NodePoolManagementArgsOutput) ToNodePoolManagementArgsPtrOutputWithContext(ctx context.Context) NodePoolManagementArgsPtrOutput {
	return o.ApplyT(func(v NodePoolManagementArgs) *NodePoolManagementArgs {
		return &v
	}).(NodePoolManagementArgsPtrOutput)
}

// Whether the nodes will be automatically repaired.
func (o NodePoolManagementArgsOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagementArgs) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

// Whether the nodes will be automatically upgraded.
func (o NodePoolManagementArgsOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagementArgs) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type NodePoolManagementArgsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolManagementArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolManagementArgs)(nil)).Elem()
}

func (o NodePoolManagementArgsPtrOutput) ToNodePoolManagementArgsPtrOutput() NodePoolManagementArgsPtrOutput {
	return o
}

func (o NodePoolManagementArgsPtrOutput) ToNodePoolManagementArgsPtrOutputWithContext(ctx context.Context) NodePoolManagementArgsPtrOutput {
	return o
}

func (o NodePoolManagementArgsPtrOutput) Elem() NodePoolManagementArgsOutput {
	return o.ApplyT(func(v *NodePoolManagementArgs) NodePoolManagementArgs { return *v }).(NodePoolManagementArgsOutput)
}

// Whether the nodes will be automatically repaired.
func (o NodePoolManagementArgsPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagementArgs) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

// Whether the nodes will be automatically upgraded.
func (o NodePoolManagementArgsPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagementArgs) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type NodePoolManagementState struct {
	// Whether the nodes will be automatically repaired.
	AutoRepair *bool `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

type NodePoolManagementStateInput interface {
	pulumi.Input

	ToNodePoolManagementStateOutput() NodePoolManagementStateOutput
	ToNodePoolManagementStateOutputWithContext(context.Context) NodePoolManagementStateOutput
}

type NodePoolManagementStateArgs struct {
	// Whether the nodes will be automatically repaired.
	AutoRepair pulumi.BoolPtrInput `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded.
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (NodePoolManagementStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagementState)(nil)).Elem()
}

func (i NodePoolManagementStateArgs) ToNodePoolManagementStateOutput() NodePoolManagementStateOutput {
	return i.ToNodePoolManagementStateOutputWithContext(context.Background())
}

func (i NodePoolManagementStateArgs) ToNodePoolManagementStateOutputWithContext(ctx context.Context) NodePoolManagementStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementStateOutput)
}

type NodePoolManagementStateOutput struct{ *pulumi.OutputState }

func (NodePoolManagementStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagementState)(nil)).Elem()
}

func (o NodePoolManagementStateOutput) ToNodePoolManagementStateOutput() NodePoolManagementStateOutput {
	return o
}

func (o NodePoolManagementStateOutput) ToNodePoolManagementStateOutputWithContext(ctx context.Context) NodePoolManagementStateOutput {
	return o
}

// Whether the nodes will be automatically repaired.
func (o NodePoolManagementStateOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagementState) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

// Whether the nodes will be automatically upgraded.
func (o NodePoolManagementStateOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagementState) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfig struct {
	BootDiskKmsKey         *string                                   `pulumi:"bootDiskKmsKey"`
	DiskSizeGb             int                                       `pulumi:"diskSizeGb"`
	DiskType               string                                    `pulumi:"diskType"`
	GuestAccelerators      []NodePoolNodeConfigGuestAccelerator      `pulumi:"guestAccelerators"`
	ImageType              string                                    `pulumi:"imageType"`
	Labels                 map[string]string                         `pulumi:"labels"`
	LocalSsdCount          int                                       `pulumi:"localSsdCount"`
	MachineType            string                                    `pulumi:"machineType"`
	Metadata               map[string]string                         `pulumi:"metadata"`
	MinCpuPlatform         *string                                   `pulumi:"minCpuPlatform"`
	OauthScopes            []string                                  `pulumi:"oauthScopes"`
	Preemptible            *bool                                     `pulumi:"preemptible"`
	SandboxConfig          *NodePoolNodeConfigSandboxConfig          `pulumi:"sandboxConfig"`
	ServiceAccount         string                                    `pulumi:"serviceAccount"`
	ShieldedInstanceConfig NodePoolNodeConfigShieldedInstanceConfig  `pulumi:"shieldedInstanceConfig"`
	Tags                   []string                                  `pulumi:"tags"`
	Taints                 []NodePoolNodeConfigTaint                 `pulumi:"taints"`
	WorkloadMetadataConfig *NodePoolNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

type NodePoolNodeConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput
	ToNodePoolNodeConfigOutputWithContext(context.Context) NodePoolNodeConfigOutput
}

type NodePoolNodeConfigArgs struct {
	BootDiskKmsKey         pulumi.StringPtrInput                            `pulumi:"bootDiskKmsKey"`
	DiskSizeGb             pulumi.IntInput                                  `pulumi:"diskSizeGb"`
	DiskType               pulumi.StringInput                               `pulumi:"diskType"`
	GuestAccelerators      NodePoolNodeConfigGuestAcceleratorArrayInput     `pulumi:"guestAccelerators"`
	ImageType              pulumi.StringInput                               `pulumi:"imageType"`
	Labels                 pulumi.StringMapInput                            `pulumi:"labels"`
	LocalSsdCount          pulumi.IntInput                                  `pulumi:"localSsdCount"`
	MachineType            pulumi.StringInput                               `pulumi:"machineType"`
	Metadata               pulumi.StringMapInput                            `pulumi:"metadata"`
	MinCpuPlatform         pulumi.StringPtrInput                            `pulumi:"minCpuPlatform"`
	OauthScopes            pulumi.StringArrayInput                          `pulumi:"oauthScopes"`
	Preemptible            pulumi.BoolPtrInput                              `pulumi:"preemptible"`
	SandboxConfig          NodePoolNodeConfigSandboxConfigPtrInput          `pulumi:"sandboxConfig"`
	ServiceAccount         pulumi.StringInput                               `pulumi:"serviceAccount"`
	ShieldedInstanceConfig NodePoolNodeConfigShieldedInstanceConfigInput    `pulumi:"shieldedInstanceConfig"`
	Tags                   pulumi.StringArrayInput                          `pulumi:"tags"`
	Taints                 NodePoolNodeConfigTaintArrayInput                `pulumi:"taints"`
	WorkloadMetadataConfig NodePoolNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (NodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return i.ToNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput)
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput).ToNodePoolNodeConfigPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput
	ToNodePoolNodeConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigPtrOutput
}

type nodePoolNodeConfigPtrType NodePoolNodeConfigArgs

func NodePoolNodeConfigPtr(v *NodePoolNodeConfigArgs) NodePoolNodeConfigPtrInput {
	return (*nodePoolNodeConfigPtrType)(v)
}

func (*nodePoolNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigPtrOutput)
}

type NodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfig {
		return &v
	}).(NodePoolNodeConfigPtrOutput)
}
func (o NodePoolNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

func (o NodePoolNodeConfigOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigOutput) GuestAccelerators() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigGuestAccelerator { return v.GuestAccelerators }).(NodePoolNodeConfigGuestAcceleratorArrayOutput)
}

func (o NodePoolNodeConfigOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

func (o NodePoolNodeConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigOutput) SandboxConfig() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigSandboxConfig { return v.SandboxConfig }).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

func (o NodePoolNodeConfigOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigOutput) ShieldedInstanceConfig() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) NodePoolNodeConfigShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(NodePoolNodeConfigShieldedInstanceConfigOutput)
}

func (o NodePoolNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigOutput) Taints() NodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigTaint { return v.Taints }).(NodePoolNodeConfigTaintArrayOutput)
}

func (o NodePoolNodeConfigOutput) WorkloadMetadataConfig() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigWorkloadMetadataConfig { return v.WorkloadMetadataConfig }).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) Elem() NodePoolNodeConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) NodePoolNodeConfig { return *v }).(NodePoolNodeConfigOutput)
}

func (o NodePoolNodeConfigPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

func (o NodePoolNodeConfigPtrOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigPtrOutput) GuestAccelerators() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigGuestAccelerator { return v.GuestAccelerators }).(NodePoolNodeConfigGuestAcceleratorArrayOutput)
}

func (o NodePoolNodeConfigPtrOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigPtrOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

func (o NodePoolNodeConfigPtrOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) SandboxConfig() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigSandboxConfig { return v.SandboxConfig }).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigPtrOutput) ShieldedInstanceConfig() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) NodePoolNodeConfigShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(NodePoolNodeConfigShieldedInstanceConfigOutput)
}

func (o NodePoolNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigPtrOutput) Taints() NodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigTaint { return v.Taints }).(NodePoolNodeConfigTaintArrayOutput)
}

func (o NodePoolNodeConfigPtrOutput) WorkloadMetadataConfig() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigWorkloadMetadataConfig { return v.WorkloadMetadataConfig }).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigArgs struct {
	BootDiskKmsKey         *string                                       `pulumi:"bootDiskKmsKey"`
	DiskSizeGb             *int                                          `pulumi:"diskSizeGb"`
	DiskType               *string                                       `pulumi:"diskType"`
	GuestAccelerators      []NodePoolNodeConfigGuestAcceleratorArgs      `pulumi:"guestAccelerators"`
	ImageType              *string                                       `pulumi:"imageType"`
	Labels                 map[string]string                             `pulumi:"labels"`
	LocalSsdCount          *int                                          `pulumi:"localSsdCount"`
	MachineType            *string                                       `pulumi:"machineType"`
	Metadata               map[string]string                             `pulumi:"metadata"`
	MinCpuPlatform         *string                                       `pulumi:"minCpuPlatform"`
	OauthScopes            []string                                      `pulumi:"oauthScopes"`
	Preemptible            *bool                                         `pulumi:"preemptible"`
	SandboxConfig          *NodePoolNodeConfigSandboxConfigArgs          `pulumi:"sandboxConfig"`
	ServiceAccount         *string                                       `pulumi:"serviceAccount"`
	ShieldedInstanceConfig *NodePoolNodeConfigShieldedInstanceConfigArgs `pulumi:"shieldedInstanceConfig"`
	Tags                   []string                                      `pulumi:"tags"`
	Taints                 []NodePoolNodeConfigTaintArgs                 `pulumi:"taints"`
	WorkloadMetadataConfig *NodePoolNodeConfigWorkloadMetadataConfigArgs `pulumi:"workloadMetadataConfig"`
}

type NodePoolNodeConfigArgsInput interface {
	pulumi.Input

	ToNodePoolNodeConfigArgsOutput() NodePoolNodeConfigArgsOutput
	ToNodePoolNodeConfigArgsOutputWithContext(context.Context) NodePoolNodeConfigArgsOutput
}

type NodePoolNodeConfigArgsArgs struct {
	BootDiskKmsKey         pulumi.StringPtrInput                                `pulumi:"bootDiskKmsKey"`
	DiskSizeGb             pulumi.IntPtrInput                                   `pulumi:"diskSizeGb"`
	DiskType               pulumi.StringPtrInput                                `pulumi:"diskType"`
	GuestAccelerators      NodePoolNodeConfigGuestAcceleratorArgsArrayInput     `pulumi:"guestAccelerators"`
	ImageType              pulumi.StringPtrInput                                `pulumi:"imageType"`
	Labels                 pulumi.StringMapInput                                `pulumi:"labels"`
	LocalSsdCount          pulumi.IntPtrInput                                   `pulumi:"localSsdCount"`
	MachineType            pulumi.StringPtrInput                                `pulumi:"machineType"`
	Metadata               pulumi.StringMapInput                                `pulumi:"metadata"`
	MinCpuPlatform         pulumi.StringPtrInput                                `pulumi:"minCpuPlatform"`
	OauthScopes            pulumi.StringArrayInput                              `pulumi:"oauthScopes"`
	Preemptible            pulumi.BoolPtrInput                                  `pulumi:"preemptible"`
	SandboxConfig          NodePoolNodeConfigSandboxConfigArgsPtrInput          `pulumi:"sandboxConfig"`
	ServiceAccount         pulumi.StringPtrInput                                `pulumi:"serviceAccount"`
	ShieldedInstanceConfig NodePoolNodeConfigShieldedInstanceConfigArgsPtrInput `pulumi:"shieldedInstanceConfig"`
	Tags                   pulumi.StringArrayInput                              `pulumi:"tags"`
	Taints                 NodePoolNodeConfigTaintArgsArrayInput                `pulumi:"taints"`
	WorkloadMetadataConfig NodePoolNodeConfigWorkloadMetadataConfigArgsPtrInput `pulumi:"workloadMetadataConfig"`
}

func (NodePoolNodeConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigArgs)(nil)).Elem()
}

func (i NodePoolNodeConfigArgsArgs) ToNodePoolNodeConfigArgsOutput() NodePoolNodeConfigArgsOutput {
	return i.ToNodePoolNodeConfigArgsOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgsArgs) ToNodePoolNodeConfigArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigArgsOutput)
}

func (i NodePoolNodeConfigArgsArgs) ToNodePoolNodeConfigArgsPtrOutput() NodePoolNodeConfigArgsPtrOutput {
	return i.ToNodePoolNodeConfigArgsPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgsArgs) ToNodePoolNodeConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigArgsOutput).ToNodePoolNodeConfigArgsPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigArgsPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigArgsPtrOutput() NodePoolNodeConfigArgsPtrOutput
	ToNodePoolNodeConfigArgsPtrOutputWithContext(context.Context) NodePoolNodeConfigArgsPtrOutput
}

type nodePoolNodeConfigArgsPtrType NodePoolNodeConfigArgsArgs

func NodePoolNodeConfigArgsPtr(v *NodePoolNodeConfigArgsArgs) NodePoolNodeConfigArgsPtrInput {
	return (*nodePoolNodeConfigArgsPtrType)(v)
}

func (*nodePoolNodeConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigArgs)(nil)).Elem()
}

func (i *nodePoolNodeConfigArgsPtrType) ToNodePoolNodeConfigArgsPtrOutput() NodePoolNodeConfigArgsPtrOutput {
	return i.ToNodePoolNodeConfigArgsPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigArgsPtrType) ToNodePoolNodeConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigArgsPtrOutput)
}

type NodePoolNodeConfigArgsOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigArgsOutput) ToNodePoolNodeConfigArgsOutput() NodePoolNodeConfigArgsOutput {
	return o
}

func (o NodePoolNodeConfigArgsOutput) ToNodePoolNodeConfigArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigArgsOutput {
	return o
}

func (o NodePoolNodeConfigArgsOutput) ToNodePoolNodeConfigArgsPtrOutput() NodePoolNodeConfigArgsPtrOutput {
	return o.ToNodePoolNodeConfigArgsPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigArgsOutput) ToNodePoolNodeConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *NodePoolNodeConfigArgs {
		return &v
	}).(NodePoolNodeConfigArgsPtrOutput)
}
func (o NodePoolNodeConfigArgsOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) GuestAccelerators() NodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) []NodePoolNodeConfigGuestAcceleratorArgs { return v.GuestAccelerators }).(NodePoolNodeConfigGuestAcceleratorArgsArrayOutput)
}

func (o NodePoolNodeConfigArgsOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigArgsOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigArgsOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigArgsOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) SandboxConfig() NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *NodePoolNodeConfigSandboxConfigArgs { return v.SandboxConfig }).(NodePoolNodeConfigSandboxConfigArgsPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) ShieldedInstanceConfig() NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *NodePoolNodeConfigShieldedInstanceConfigArgs {
		return v.ShieldedInstanceConfig
	}).(NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

func (o NodePoolNodeConfigArgsOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigArgsOutput) Taints() NodePoolNodeConfigTaintArgsArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) []NodePoolNodeConfigTaintArgs { return v.Taints }).(NodePoolNodeConfigTaintArgsArrayOutput)
}

func (o NodePoolNodeConfigArgsOutput) WorkloadMetadataConfig() NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *NodePoolNodeConfigWorkloadMetadataConfigArgs {
		return v.WorkloadMetadataConfig
	}).(NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

type NodePoolNodeConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigArgsPtrOutput) ToNodePoolNodeConfigArgsPtrOutput() NodePoolNodeConfigArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigArgsPtrOutput) ToNodePoolNodeConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigArgsPtrOutput) Elem() NodePoolNodeConfigArgsOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigArgs) NodePoolNodeConfigArgs { return *v }).(NodePoolNodeConfigArgsOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) GuestAccelerators() NodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) []NodePoolNodeConfigGuestAcceleratorArgs { return v.GuestAccelerators }).(NodePoolNodeConfigGuestAcceleratorArgsArrayOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) SandboxConfig() NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *NodePoolNodeConfigSandboxConfigArgs { return v.SandboxConfig }).(NodePoolNodeConfigSandboxConfigArgsPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) ShieldedInstanceConfig() NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *NodePoolNodeConfigShieldedInstanceConfigArgs {
		return v.ShieldedInstanceConfig
	}).(NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) Taints() NodePoolNodeConfigTaintArgsArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) []NodePoolNodeConfigTaintArgs { return v.Taints }).(NodePoolNodeConfigTaintArgsArrayOutput)
}

func (o NodePoolNodeConfigArgsPtrOutput) WorkloadMetadataConfig() NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigArgs) *NodePoolNodeConfigWorkloadMetadataConfigArgs {
		return v.WorkloadMetadataConfig
	}).(NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

type NodePoolNodeConfigGuestAccelerator struct {
	Count int    `pulumi:"count"`
	Type  string `pulumi:"type"`
}

type NodePoolNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorOutput() NodePoolNodeConfigGuestAcceleratorOutput
	ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorOutput
}

type NodePoolNodeConfigGuestAcceleratorArgs struct {
	Count pulumi.IntInput    `pulumi:"count"`
	Type  pulumi.StringInput `pulumi:"type"`
}

func (NodePoolNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorArgs) ToNodePoolNodeConfigGuestAcceleratorOutput() NodePoolNodeConfigGuestAcceleratorOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorArgs) ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorOutput)
}

type NodePoolNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorArrayOutput() NodePoolNodeConfigGuestAcceleratorArrayOutput
	ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorArrayOutput
}

type NodePoolNodeConfigGuestAcceleratorArray []NodePoolNodeConfigGuestAcceleratorInput

func (NodePoolNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorArray) ToNodePoolNodeConfigGuestAcceleratorArrayOutput() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorArray) ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorArrayOutput)
}

type NodePoolNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) ToNodePoolNodeConfigGuestAcceleratorOutput() NodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type NodePoolNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorArrayOutput) ToNodePoolNodeConfigGuestAcceleratorArrayOutput() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArrayOutput) ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigGuestAccelerator {
		return vs[0].([]NodePoolNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(NodePoolNodeConfigGuestAcceleratorOutput)
}

type NodePoolNodeConfigGuestAcceleratorArgs struct {
	Count int    `pulumi:"count"`
	Type  string `pulumi:"type"`
}

type NodePoolNodeConfigGuestAcceleratorArgsInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorArgsOutput() NodePoolNodeConfigGuestAcceleratorArgsOutput
	ToNodePoolNodeConfigGuestAcceleratorArgsOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorArgsOutput
}

type NodePoolNodeConfigGuestAcceleratorArgsArgs struct {
	Count pulumi.IntInput    `pulumi:"count"`
	Type  pulumi.StringInput `pulumi:"type"`
}

func (NodePoolNodeConfigGuestAcceleratorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorArgsArgs) ToNodePoolNodeConfigGuestAcceleratorArgsOutput() NodePoolNodeConfigGuestAcceleratorArgsOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorArgsOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorArgsArgs) ToNodePoolNodeConfigGuestAcceleratorArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorArgsOutput)
}

type NodePoolNodeConfigGuestAcceleratorArgsArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorArgsArrayOutput() NodePoolNodeConfigGuestAcceleratorArgsArrayOutput
	ToNodePoolNodeConfigGuestAcceleratorArgsArrayOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorArgsArrayOutput
}

type NodePoolNodeConfigGuestAcceleratorArgsArray []NodePoolNodeConfigGuestAcceleratorArgsInput

func (NodePoolNodeConfigGuestAcceleratorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorArgsArray) ToNodePoolNodeConfigGuestAcceleratorArgsArrayOutput() NodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorArgsArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorArgsArray) ToNodePoolNodeConfigGuestAcceleratorArgsArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorArgsArrayOutput)
}

type NodePoolNodeConfigGuestAcceleratorArgsOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorArgsOutput) ToNodePoolNodeConfigGuestAcceleratorArgsOutput() NodePoolNodeConfigGuestAcceleratorArgsOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArgsOutput) ToNodePoolNodeConfigGuestAcceleratorArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArgsOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArgsOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAcceleratorArgs) int { return v.Count }).(pulumi.IntOutput)
}

func (o NodePoolNodeConfigGuestAcceleratorArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAcceleratorArgs) string { return v.Type }).(pulumi.StringOutput)
}

type NodePoolNodeConfigGuestAcceleratorArgsArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigGuestAcceleratorArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorArgsArrayOutput) ToNodePoolNodeConfigGuestAcceleratorArgsArrayOutput() NodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArgsArrayOutput) ToNodePoolNodeConfigGuestAcceleratorArgsArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArgsArrayOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArgsArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigGuestAcceleratorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigGuestAcceleratorArgs {
		return vs[0].([]NodePoolNodeConfigGuestAcceleratorArgs)[vs[1].(int)]
	}).(NodePoolNodeConfigGuestAcceleratorArgsOutput)
}

type NodePoolNodeConfigSandboxConfig struct {
	SandboxType string `pulumi:"sandboxType"`
}

type NodePoolNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSandboxConfigOutput() NodePoolNodeConfigSandboxConfigOutput
	ToNodePoolNodeConfigSandboxConfigOutputWithContext(context.Context) NodePoolNodeConfigSandboxConfigOutput
}

type NodePoolNodeConfigSandboxConfigArgs struct {
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (NodePoolNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigOutput() NodePoolNodeConfigSandboxConfigOutput {
	return i.ToNodePoolNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigOutput)
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigOutput).ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput
	ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigSandboxConfigPtrOutput
}

type nodePoolNodeConfigSandboxConfigPtrType NodePoolNodeConfigSandboxConfigArgs

func NodePoolNodeConfigSandboxConfigPtr(v *NodePoolNodeConfigSandboxConfigArgs) NodePoolNodeConfigSandboxConfigPtrInput {
	return (*nodePoolNodeConfigSandboxConfigPtrType)(v)
}

func (*nodePoolNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigSandboxConfigPtrType) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigSandboxConfigPtrType) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

type NodePoolNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigOutput() NodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSandboxConfig) *NodePoolNodeConfigSandboxConfig {
		return &v
	}).(NodePoolNodeConfigSandboxConfigPtrOutput)
}
func (o NodePoolNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type NodePoolNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) Elem() NodePoolNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigSandboxConfig) NodePoolNodeConfigSandboxConfig { return *v }).(NodePoolNodeConfigSandboxConfigOutput)
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type NodePoolNodeConfigSandboxConfigArgs struct {
	SandboxType string `pulumi:"sandboxType"`
}

type NodePoolNodeConfigSandboxConfigArgsInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSandboxConfigArgsOutput() NodePoolNodeConfigSandboxConfigArgsOutput
	ToNodePoolNodeConfigSandboxConfigArgsOutputWithContext(context.Context) NodePoolNodeConfigSandboxConfigArgsOutput
}

type NodePoolNodeConfigSandboxConfigArgsArgs struct {
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (NodePoolNodeConfigSandboxConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (i NodePoolNodeConfigSandboxConfigArgsArgs) ToNodePoolNodeConfigSandboxConfigArgsOutput() NodePoolNodeConfigSandboxConfigArgsOutput {
	return i.ToNodePoolNodeConfigSandboxConfigArgsOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSandboxConfigArgsArgs) ToNodePoolNodeConfigSandboxConfigArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigArgsOutput)
}

func (i NodePoolNodeConfigSandboxConfigArgsArgs) ToNodePoolNodeConfigSandboxConfigArgsPtrOutput() NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return i.ToNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSandboxConfigArgsArgs) ToNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigArgsOutput).ToNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigSandboxConfigArgsPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSandboxConfigArgsPtrOutput() NodePoolNodeConfigSandboxConfigArgsPtrOutput
	ToNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Context) NodePoolNodeConfigSandboxConfigArgsPtrOutput
}

type nodePoolNodeConfigSandboxConfigArgsPtrType NodePoolNodeConfigSandboxConfigArgsArgs

func NodePoolNodeConfigSandboxConfigArgsPtr(v *NodePoolNodeConfigSandboxConfigArgsArgs) NodePoolNodeConfigSandboxConfigArgsPtrInput {
	return (*nodePoolNodeConfigSandboxConfigArgsPtrType)(v)
}

func (*nodePoolNodeConfigSandboxConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (i *nodePoolNodeConfigSandboxConfigArgsPtrType) ToNodePoolNodeConfigSandboxConfigArgsPtrOutput() NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return i.ToNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigSandboxConfigArgsPtrType) ToNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigArgsPtrOutput)
}

type NodePoolNodeConfigSandboxConfigArgsOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSandboxConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigSandboxConfigArgsOutput) ToNodePoolNodeConfigSandboxConfigArgsOutput() NodePoolNodeConfigSandboxConfigArgsOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigArgsOutput) ToNodePoolNodeConfigSandboxConfigArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigArgsOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigArgsOutput) ToNodePoolNodeConfigSandboxConfigArgsPtrOutput() NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o.ToNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigSandboxConfigArgsOutput) ToNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSandboxConfigArgs) *NodePoolNodeConfigSandboxConfigArgs {
		return &v
	}).(NodePoolNodeConfigSandboxConfigArgsPtrOutput)
}
func (o NodePoolNodeConfigSandboxConfigArgsOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSandboxConfigArgs) string { return v.SandboxType }).(pulumi.StringOutput)
}

type NodePoolNodeConfigSandboxConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSandboxConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSandboxConfigArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigSandboxConfigArgsPtrOutput) ToNodePoolNodeConfigSandboxConfigArgsPtrOutput() NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigArgsPtrOutput) ToNodePoolNodeConfigSandboxConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigArgsPtrOutput) Elem() NodePoolNodeConfigSandboxConfigArgsOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigSandboxConfigArgs) NodePoolNodeConfigSandboxConfigArgs { return *v }).(NodePoolNodeConfigSandboxConfigArgsOutput)
}

func (o NodePoolNodeConfigSandboxConfigArgsPtrOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSandboxConfigArgs) string { return v.SandboxType }).(pulumi.StringOutput)
}

type NodePoolNodeConfigShieldedInstanceConfig struct {
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          *bool `pulumi:"enableSecureBoot"`
}

type NodePoolNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigShieldedInstanceConfigOutput() NodePoolNodeConfigShieldedInstanceConfigOutput
	ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) NodePoolNodeConfigShieldedInstanceConfigOutput
}

type NodePoolNodeConfigShieldedInstanceConfigArgs struct {
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (NodePoolNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigOutput() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigOutput)
}

type NodePoolNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigOutput() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigShieldedInstanceConfigArgs struct {
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          *bool `pulumi:"enableSecureBoot"`
}

type NodePoolNodeConfigShieldedInstanceConfigArgsInput interface {
	pulumi.Input

	ToNodePoolNodeConfigShieldedInstanceConfigArgsOutput() NodePoolNodeConfigShieldedInstanceConfigArgsOutput
	ToNodePoolNodeConfigShieldedInstanceConfigArgsOutputWithContext(context.Context) NodePoolNodeConfigShieldedInstanceConfigArgsOutput
}

type NodePoolNodeConfigShieldedInstanceConfigArgsArgs struct {
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (NodePoolNodeConfigShieldedInstanceConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgsArgs) ToNodePoolNodeConfigShieldedInstanceConfigArgsOutput() NodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigArgsOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgsArgs) ToNodePoolNodeConfigShieldedInstanceConfigArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigArgsOutput)
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgsArgs) ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgsArgs) ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigArgsOutput).ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigShieldedInstanceConfigArgsPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput
	ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Context) NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput
}

type nodePoolNodeConfigShieldedInstanceConfigArgsPtrType NodePoolNodeConfigShieldedInstanceConfigArgsArgs

func NodePoolNodeConfigShieldedInstanceConfigArgsPtr(v *NodePoolNodeConfigShieldedInstanceConfigArgsArgs) NodePoolNodeConfigShieldedInstanceConfigArgsPtrInput {
	return (*nodePoolNodeConfigShieldedInstanceConfigArgsPtrType)(v)
}

func (*nodePoolNodeConfigShieldedInstanceConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (i *nodePoolNodeConfigShieldedInstanceConfigArgsPtrType) ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigShieldedInstanceConfigArgsPtrType) ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput)
}

type NodePoolNodeConfigShieldedInstanceConfigArgsOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigShieldedInstanceConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsOutput) ToNodePoolNodeConfigShieldedInstanceConfigArgsOutput() NodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsOutput) ToNodePoolNodeConfigShieldedInstanceConfigArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsOutput) ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsOutput) ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfigArgs) *NodePoolNodeConfigShieldedInstanceConfigArgs {
		return &v
	}).(NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput)
}
func (o NodePoolNodeConfigShieldedInstanceConfigArgsOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigShieldedInstanceConfigArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput() NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) ToNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) Elem() NodePoolNodeConfigShieldedInstanceConfigArgsOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigShieldedInstanceConfigArgs) NodePoolNodeConfigShieldedInstanceConfigArgs {
		return *v
	}).(NodePoolNodeConfigShieldedInstanceConfigArgsOutput)
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfigArgs) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigState struct {
	BootDiskKmsKey         *string                                        `pulumi:"bootDiskKmsKey"`
	DiskSizeGb             *int                                           `pulumi:"diskSizeGb"`
	DiskType               *string                                        `pulumi:"diskType"`
	GuestAccelerators      []NodePoolNodeConfigStateGuestAccelerator      `pulumi:"guestAccelerators"`
	ImageType              *string                                        `pulumi:"imageType"`
	Labels                 map[string]string                              `pulumi:"labels"`
	LocalSsdCount          *int                                           `pulumi:"localSsdCount"`
	MachineType            *string                                        `pulumi:"machineType"`
	Metadata               map[string]string                              `pulumi:"metadata"`
	MinCpuPlatform         *string                                        `pulumi:"minCpuPlatform"`
	OauthScopes            []string                                       `pulumi:"oauthScopes"`
	Preemptible            *bool                                          `pulumi:"preemptible"`
	SandboxConfig          *NodePoolNodeConfigStateSandboxConfig          `pulumi:"sandboxConfig"`
	ServiceAccount         *string                                        `pulumi:"serviceAccount"`
	ShieldedInstanceConfig *NodePoolNodeConfigStateShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	Tags                   []string                                       `pulumi:"tags"`
	Taints                 []NodePoolNodeConfigStateTaint                 `pulumi:"taints"`
	WorkloadMetadataConfig *NodePoolNodeConfigStateWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

type NodePoolNodeConfigStateInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateOutput() NodePoolNodeConfigStateOutput
	ToNodePoolNodeConfigStateOutputWithContext(context.Context) NodePoolNodeConfigStateOutput
}

type NodePoolNodeConfigStateArgs struct {
	BootDiskKmsKey         pulumi.StringPtrInput                                 `pulumi:"bootDiskKmsKey"`
	DiskSizeGb             pulumi.IntPtrInput                                    `pulumi:"diskSizeGb"`
	DiskType               pulumi.StringPtrInput                                 `pulumi:"diskType"`
	GuestAccelerators      NodePoolNodeConfigStateGuestAcceleratorArrayInput     `pulumi:"guestAccelerators"`
	ImageType              pulumi.StringPtrInput                                 `pulumi:"imageType"`
	Labels                 pulumi.StringMapInput                                 `pulumi:"labels"`
	LocalSsdCount          pulumi.IntPtrInput                                    `pulumi:"localSsdCount"`
	MachineType            pulumi.StringPtrInput                                 `pulumi:"machineType"`
	Metadata               pulumi.StringMapInput                                 `pulumi:"metadata"`
	MinCpuPlatform         pulumi.StringPtrInput                                 `pulumi:"minCpuPlatform"`
	OauthScopes            pulumi.StringArrayInput                               `pulumi:"oauthScopes"`
	Preemptible            pulumi.BoolPtrInput                                   `pulumi:"preemptible"`
	SandboxConfig          NodePoolNodeConfigStateSandboxConfigPtrInput          `pulumi:"sandboxConfig"`
	ServiceAccount         pulumi.StringPtrInput                                 `pulumi:"serviceAccount"`
	ShieldedInstanceConfig NodePoolNodeConfigStateShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	Tags                   pulumi.StringArrayInput                               `pulumi:"tags"`
	Taints                 NodePoolNodeConfigStateTaintArrayInput                `pulumi:"taints"`
	WorkloadMetadataConfig NodePoolNodeConfigStateWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (NodePoolNodeConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigState)(nil)).Elem()
}

func (i NodePoolNodeConfigStateArgs) ToNodePoolNodeConfigStateOutput() NodePoolNodeConfigStateOutput {
	return i.ToNodePoolNodeConfigStateOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateArgs) ToNodePoolNodeConfigStateOutputWithContext(ctx context.Context) NodePoolNodeConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateOutput)
}

type NodePoolNodeConfigStateOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigState)(nil)).Elem()
}

func (o NodePoolNodeConfigStateOutput) ToNodePoolNodeConfigStateOutput() NodePoolNodeConfigStateOutput {
	return o
}

func (o NodePoolNodeConfigStateOutput) ToNodePoolNodeConfigStateOutputWithContext(ctx context.Context) NodePoolNodeConfigStateOutput {
	return o
}

func (o NodePoolNodeConfigStateOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) GuestAccelerators() NodePoolNodeConfigStateGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) []NodePoolNodeConfigStateGuestAccelerator { return v.GuestAccelerators }).(NodePoolNodeConfigStateGuestAcceleratorArrayOutput)
}

func (o NodePoolNodeConfigStateOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigStateOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigStateOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigStateOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) SandboxConfig() NodePoolNodeConfigStateSandboxConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *NodePoolNodeConfigStateSandboxConfig { return v.SandboxConfig }).(NodePoolNodeConfigStateSandboxConfigPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) ShieldedInstanceConfig() NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *NodePoolNodeConfigStateShieldedInstanceConfig {
		return v.ShieldedInstanceConfig
	}).(NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput)
}

func (o NodePoolNodeConfigStateOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigStateOutput) Taints() NodePoolNodeConfigStateTaintArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) []NodePoolNodeConfigStateTaint { return v.Taints }).(NodePoolNodeConfigStateTaintArrayOutput)
}

func (o NodePoolNodeConfigStateOutput) WorkloadMetadataConfig() NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigState) *NodePoolNodeConfigStateWorkloadMetadataConfig {
		return v.WorkloadMetadataConfig
	}).(NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigStateGuestAccelerator struct {
	Count int    `pulumi:"count"`
	Type  string `pulumi:"type"`
}

type NodePoolNodeConfigStateGuestAcceleratorInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateGuestAcceleratorOutput() NodePoolNodeConfigStateGuestAcceleratorOutput
	ToNodePoolNodeConfigStateGuestAcceleratorOutputWithContext(context.Context) NodePoolNodeConfigStateGuestAcceleratorOutput
}

type NodePoolNodeConfigStateGuestAcceleratorArgs struct {
	Count pulumi.IntInput    `pulumi:"count"`
	Type  pulumi.StringInput `pulumi:"type"`
}

func (NodePoolNodeConfigStateGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateGuestAccelerator)(nil)).Elem()
}

func (i NodePoolNodeConfigStateGuestAcceleratorArgs) ToNodePoolNodeConfigStateGuestAcceleratorOutput() NodePoolNodeConfigStateGuestAcceleratorOutput {
	return i.ToNodePoolNodeConfigStateGuestAcceleratorOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateGuestAcceleratorArgs) ToNodePoolNodeConfigStateGuestAcceleratorOutputWithContext(ctx context.Context) NodePoolNodeConfigStateGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateGuestAcceleratorOutput)
}

type NodePoolNodeConfigStateGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateGuestAcceleratorArrayOutput() NodePoolNodeConfigStateGuestAcceleratorArrayOutput
	ToNodePoolNodeConfigStateGuestAcceleratorArrayOutputWithContext(context.Context) NodePoolNodeConfigStateGuestAcceleratorArrayOutput
}

type NodePoolNodeConfigStateGuestAcceleratorArray []NodePoolNodeConfigStateGuestAcceleratorInput

func (NodePoolNodeConfigStateGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigStateGuestAccelerator)(nil)).Elem()
}

func (i NodePoolNodeConfigStateGuestAcceleratorArray) ToNodePoolNodeConfigStateGuestAcceleratorArrayOutput() NodePoolNodeConfigStateGuestAcceleratorArrayOutput {
	return i.ToNodePoolNodeConfigStateGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateGuestAcceleratorArray) ToNodePoolNodeConfigStateGuestAcceleratorArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigStateGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateGuestAcceleratorArrayOutput)
}

type NodePoolNodeConfigStateGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateGuestAccelerator)(nil)).Elem()
}

func (o NodePoolNodeConfigStateGuestAcceleratorOutput) ToNodePoolNodeConfigStateGuestAcceleratorOutput() NodePoolNodeConfigStateGuestAcceleratorOutput {
	return o
}

func (o NodePoolNodeConfigStateGuestAcceleratorOutput) ToNodePoolNodeConfigStateGuestAcceleratorOutputWithContext(ctx context.Context) NodePoolNodeConfigStateGuestAcceleratorOutput {
	return o
}

func (o NodePoolNodeConfigStateGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

func (o NodePoolNodeConfigStateGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type NodePoolNodeConfigStateGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigStateGuestAccelerator)(nil)).Elem()
}

func (o NodePoolNodeConfigStateGuestAcceleratorArrayOutput) ToNodePoolNodeConfigStateGuestAcceleratorArrayOutput() NodePoolNodeConfigStateGuestAcceleratorArrayOutput {
	return o
}

func (o NodePoolNodeConfigStateGuestAcceleratorArrayOutput) ToNodePoolNodeConfigStateGuestAcceleratorArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigStateGuestAcceleratorArrayOutput {
	return o
}

func (o NodePoolNodeConfigStateGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigStateGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigStateGuestAccelerator {
		return vs[0].([]NodePoolNodeConfigStateGuestAccelerator)[vs[1].(int)]
	}).(NodePoolNodeConfigStateGuestAcceleratorOutput)
}

type NodePoolNodeConfigStateSandboxConfig struct {
	SandboxType string `pulumi:"sandboxType"`
}

type NodePoolNodeConfigStateSandboxConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateSandboxConfigOutput() NodePoolNodeConfigStateSandboxConfigOutput
	ToNodePoolNodeConfigStateSandboxConfigOutputWithContext(context.Context) NodePoolNodeConfigStateSandboxConfigOutput
}

type NodePoolNodeConfigStateSandboxConfigArgs struct {
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (NodePoolNodeConfigStateSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateSandboxConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigStateSandboxConfigArgs) ToNodePoolNodeConfigStateSandboxConfigOutput() NodePoolNodeConfigStateSandboxConfigOutput {
	return i.ToNodePoolNodeConfigStateSandboxConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateSandboxConfigArgs) ToNodePoolNodeConfigStateSandboxConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigStateSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateSandboxConfigOutput)
}

func (i NodePoolNodeConfigStateSandboxConfigArgs) ToNodePoolNodeConfigStateSandboxConfigPtrOutput() NodePoolNodeConfigStateSandboxConfigPtrOutput {
	return i.ToNodePoolNodeConfigStateSandboxConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateSandboxConfigArgs) ToNodePoolNodeConfigStateSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateSandboxConfigOutput).ToNodePoolNodeConfigStateSandboxConfigPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigStateSandboxConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateSandboxConfigPtrOutput() NodePoolNodeConfigStateSandboxConfigPtrOutput
	ToNodePoolNodeConfigStateSandboxConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigStateSandboxConfigPtrOutput
}

type nodePoolNodeConfigStateSandboxConfigPtrType NodePoolNodeConfigStateSandboxConfigArgs

func NodePoolNodeConfigStateSandboxConfigPtr(v *NodePoolNodeConfigStateSandboxConfigArgs) NodePoolNodeConfigStateSandboxConfigPtrInput {
	return (*nodePoolNodeConfigStateSandboxConfigPtrType)(v)
}

func (*nodePoolNodeConfigStateSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigStateSandboxConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigStateSandboxConfigPtrType) ToNodePoolNodeConfigStateSandboxConfigPtrOutput() NodePoolNodeConfigStateSandboxConfigPtrOutput {
	return i.ToNodePoolNodeConfigStateSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigStateSandboxConfigPtrType) ToNodePoolNodeConfigStateSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateSandboxConfigPtrOutput)
}

type NodePoolNodeConfigStateSandboxConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateSandboxConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigStateSandboxConfigOutput) ToNodePoolNodeConfigStateSandboxConfigOutput() NodePoolNodeConfigStateSandboxConfigOutput {
	return o
}

func (o NodePoolNodeConfigStateSandboxConfigOutput) ToNodePoolNodeConfigStateSandboxConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigStateSandboxConfigOutput {
	return o
}

func (o NodePoolNodeConfigStateSandboxConfigOutput) ToNodePoolNodeConfigStateSandboxConfigPtrOutput() NodePoolNodeConfigStateSandboxConfigPtrOutput {
	return o.ToNodePoolNodeConfigStateSandboxConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigStateSandboxConfigOutput) ToNodePoolNodeConfigStateSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateSandboxConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateSandboxConfig) *NodePoolNodeConfigStateSandboxConfig {
		return &v
	}).(NodePoolNodeConfigStateSandboxConfigPtrOutput)
}
func (o NodePoolNodeConfigStateSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type NodePoolNodeConfigStateSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigStateSandboxConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigStateSandboxConfigPtrOutput) ToNodePoolNodeConfigStateSandboxConfigPtrOutput() NodePoolNodeConfigStateSandboxConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigStateSandboxConfigPtrOutput) ToNodePoolNodeConfigStateSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateSandboxConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigStateSandboxConfigPtrOutput) Elem() NodePoolNodeConfigStateSandboxConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigStateSandboxConfig) NodePoolNodeConfigStateSandboxConfig { return *v }).(NodePoolNodeConfigStateSandboxConfigOutput)
}

func (o NodePoolNodeConfigStateSandboxConfigPtrOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type NodePoolNodeConfigStateShieldedInstanceConfig struct {
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          *bool `pulumi:"enableSecureBoot"`
}

type NodePoolNodeConfigStateShieldedInstanceConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateShieldedInstanceConfigOutput() NodePoolNodeConfigStateShieldedInstanceConfigOutput
	ToNodePoolNodeConfigStateShieldedInstanceConfigOutputWithContext(context.Context) NodePoolNodeConfigStateShieldedInstanceConfigOutput
}

type NodePoolNodeConfigStateShieldedInstanceConfigArgs struct {
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (NodePoolNodeConfigStateShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateShieldedInstanceConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigStateShieldedInstanceConfigArgs) ToNodePoolNodeConfigStateShieldedInstanceConfigOutput() NodePoolNodeConfigStateShieldedInstanceConfigOutput {
	return i.ToNodePoolNodeConfigStateShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateShieldedInstanceConfigArgs) ToNodePoolNodeConfigStateShieldedInstanceConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigStateShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateShieldedInstanceConfigOutput)
}

func (i NodePoolNodeConfigStateShieldedInstanceConfigArgs) ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutput() NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput {
	return i.ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateShieldedInstanceConfigArgs) ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateShieldedInstanceConfigOutput).ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigStateShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutput() NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput
	ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput
}

type nodePoolNodeConfigStateShieldedInstanceConfigPtrType NodePoolNodeConfigStateShieldedInstanceConfigArgs

func NodePoolNodeConfigStateShieldedInstanceConfigPtr(v *NodePoolNodeConfigStateShieldedInstanceConfigArgs) NodePoolNodeConfigStateShieldedInstanceConfigPtrInput {
	return (*nodePoolNodeConfigStateShieldedInstanceConfigPtrType)(v)
}

func (*nodePoolNodeConfigStateShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigStateShieldedInstanceConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigStateShieldedInstanceConfigPtrType) ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutput() NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput {
	return i.ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigStateShieldedInstanceConfigPtrType) ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput)
}

type NodePoolNodeConfigStateShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateShieldedInstanceConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigOutput) ToNodePoolNodeConfigStateShieldedInstanceConfigOutput() NodePoolNodeConfigStateShieldedInstanceConfigOutput {
	return o
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigOutput) ToNodePoolNodeConfigStateShieldedInstanceConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigStateShieldedInstanceConfigOutput {
	return o
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigOutput) ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutput() NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o.ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigOutput) ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateShieldedInstanceConfig) *NodePoolNodeConfigStateShieldedInstanceConfig {
		return &v
	}).(NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput)
}
func (o NodePoolNodeConfigStateShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigStateShieldedInstanceConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput) ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutput() NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput) ToNodePoolNodeConfigStateShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput) Elem() NodePoolNodeConfigStateShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigStateShieldedInstanceConfig) NodePoolNodeConfigStateShieldedInstanceConfig {
		return *v
	}).(NodePoolNodeConfigStateShieldedInstanceConfigOutput)
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigStateTaint struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

type NodePoolNodeConfigStateTaintInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateTaintOutput() NodePoolNodeConfigStateTaintOutput
	ToNodePoolNodeConfigStateTaintOutputWithContext(context.Context) NodePoolNodeConfigStateTaintOutput
}

type NodePoolNodeConfigStateTaintArgs struct {
	Effect pulumi.StringInput `pulumi:"effect"`
	Key    pulumi.StringInput `pulumi:"key"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (NodePoolNodeConfigStateTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigStateTaintArgs) ToNodePoolNodeConfigStateTaintOutput() NodePoolNodeConfigStateTaintOutput {
	return i.ToNodePoolNodeConfigStateTaintOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateTaintArgs) ToNodePoolNodeConfigStateTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigStateTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateTaintOutput)
}

type NodePoolNodeConfigStateTaintArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateTaintArrayOutput() NodePoolNodeConfigStateTaintArrayOutput
	ToNodePoolNodeConfigStateTaintArrayOutputWithContext(context.Context) NodePoolNodeConfigStateTaintArrayOutput
}

type NodePoolNodeConfigStateTaintArray []NodePoolNodeConfigStateTaintInput

func (NodePoolNodeConfigStateTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigStateTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigStateTaintArray) ToNodePoolNodeConfigStateTaintArrayOutput() NodePoolNodeConfigStateTaintArrayOutput {
	return i.ToNodePoolNodeConfigStateTaintArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateTaintArray) ToNodePoolNodeConfigStateTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigStateTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateTaintArrayOutput)
}

type NodePoolNodeConfigStateTaintOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigStateTaintOutput) ToNodePoolNodeConfigStateTaintOutput() NodePoolNodeConfigStateTaintOutput {
	return o
}

func (o NodePoolNodeConfigStateTaintOutput) ToNodePoolNodeConfigStateTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigStateTaintOutput {
	return o
}

func (o NodePoolNodeConfigStateTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateTaint) string { return v.Effect }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigStateTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateTaint) string { return v.Key }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigStateTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateTaint) string { return v.Value }).(pulumi.StringOutput)
}

type NodePoolNodeConfigStateTaintArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigStateTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigStateTaintArrayOutput) ToNodePoolNodeConfigStateTaintArrayOutput() NodePoolNodeConfigStateTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigStateTaintArrayOutput) ToNodePoolNodeConfigStateTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigStateTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigStateTaintArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigStateTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigStateTaint {
		return vs[0].([]NodePoolNodeConfigStateTaint)[vs[1].(int)]
	}).(NodePoolNodeConfigStateTaintOutput)
}

type NodePoolNodeConfigStateWorkloadMetadataConfig struct {
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type NodePoolNodeConfigStateWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateWorkloadMetadataConfigOutput() NodePoolNodeConfigStateWorkloadMetadataConfigOutput
	ToNodePoolNodeConfigStateWorkloadMetadataConfigOutputWithContext(context.Context) NodePoolNodeConfigStateWorkloadMetadataConfigOutput
}

type NodePoolNodeConfigStateWorkloadMetadataConfigArgs struct {
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (NodePoolNodeConfigStateWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateWorkloadMetadataConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigStateWorkloadMetadataConfigArgs) ToNodePoolNodeConfigStateWorkloadMetadataConfigOutput() NodePoolNodeConfigStateWorkloadMetadataConfigOutput {
	return i.ToNodePoolNodeConfigStateWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateWorkloadMetadataConfigArgs) ToNodePoolNodeConfigStateWorkloadMetadataConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigStateWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateWorkloadMetadataConfigOutput)
}

func (i NodePoolNodeConfigStateWorkloadMetadataConfigArgs) ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return i.ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigStateWorkloadMetadataConfigArgs) ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateWorkloadMetadataConfigOutput).ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigStateWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput
	ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput
}

type nodePoolNodeConfigStateWorkloadMetadataConfigPtrType NodePoolNodeConfigStateWorkloadMetadataConfigArgs

func NodePoolNodeConfigStateWorkloadMetadataConfigPtr(v *NodePoolNodeConfigStateWorkloadMetadataConfigArgs) NodePoolNodeConfigStateWorkloadMetadataConfigPtrInput {
	return (*nodePoolNodeConfigStateWorkloadMetadataConfigPtrType)(v)
}

func (*nodePoolNodeConfigStateWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigStateWorkloadMetadataConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigStateWorkloadMetadataConfigPtrType) ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return i.ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigStateWorkloadMetadataConfigPtrType) ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigStateWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigStateWorkloadMetadataConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigStateWorkloadMetadataConfigOutput) ToNodePoolNodeConfigStateWorkloadMetadataConfigOutput() NodePoolNodeConfigStateWorkloadMetadataConfigOutput {
	return o
}

func (o NodePoolNodeConfigStateWorkloadMetadataConfigOutput) ToNodePoolNodeConfigStateWorkloadMetadataConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigStateWorkloadMetadataConfigOutput {
	return o
}

func (o NodePoolNodeConfigStateWorkloadMetadataConfigOutput) ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o.ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigStateWorkloadMetadataConfigOutput) ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateWorkloadMetadataConfig) *NodePoolNodeConfigStateWorkloadMetadataConfig {
		return &v
	}).(NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput)
}
func (o NodePoolNodeConfigStateWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigStateWorkloadMetadataConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput) ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput) ToNodePoolNodeConfigStateWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput) Elem() NodePoolNodeConfigStateWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigStateWorkloadMetadataConfig) NodePoolNodeConfigStateWorkloadMetadataConfig {
		return *v
	}).(NodePoolNodeConfigStateWorkloadMetadataConfigOutput)
}

func (o NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigStateWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type NodePoolNodeConfigTaint struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

type NodePoolNodeConfigTaintInput interface {
	pulumi.Input

	ToNodePoolNodeConfigTaintOutput() NodePoolNodeConfigTaintOutput
	ToNodePoolNodeConfigTaintOutputWithContext(context.Context) NodePoolNodeConfigTaintOutput
}

type NodePoolNodeConfigTaintArgs struct {
	Effect pulumi.StringInput `pulumi:"effect"`
	Key    pulumi.StringInput `pulumi:"key"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (NodePoolNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigTaintArgs) ToNodePoolNodeConfigTaintOutput() NodePoolNodeConfigTaintOutput {
	return i.ToNodePoolNodeConfigTaintOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigTaintArgs) ToNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigTaintOutput)
}

type NodePoolNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigTaintArrayOutput() NodePoolNodeConfigTaintArrayOutput
	ToNodePoolNodeConfigTaintArrayOutputWithContext(context.Context) NodePoolNodeConfigTaintArrayOutput
}

type NodePoolNodeConfigTaintArray []NodePoolNodeConfigTaintInput

func (NodePoolNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigTaintArray) ToNodePoolNodeConfigTaintArrayOutput() NodePoolNodeConfigTaintArrayOutput {
	return i.ToNodePoolNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigTaintArray) ToNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigTaintArrayOutput)
}

type NodePoolNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigTaintOutput) ToNodePoolNodeConfigTaintOutput() NodePoolNodeConfigTaintOutput {
	return o
}

func (o NodePoolNodeConfigTaintOutput) ToNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintOutput {
	return o
}

func (o NodePoolNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type NodePoolNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigTaintArrayOutput) ToNodePoolNodeConfigTaintArrayOutput() NodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigTaintArrayOutput) ToNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigTaint {
		return vs[0].([]NodePoolNodeConfigTaint)[vs[1].(int)]
	}).(NodePoolNodeConfigTaintOutput)
}

type NodePoolNodeConfigTaintArgs struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

type NodePoolNodeConfigTaintArgsInput interface {
	pulumi.Input

	ToNodePoolNodeConfigTaintArgsOutput() NodePoolNodeConfigTaintArgsOutput
	ToNodePoolNodeConfigTaintArgsOutputWithContext(context.Context) NodePoolNodeConfigTaintArgsOutput
}

type NodePoolNodeConfigTaintArgsArgs struct {
	Effect pulumi.StringInput `pulumi:"effect"`
	Key    pulumi.StringInput `pulumi:"key"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (NodePoolNodeConfigTaintArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigTaintArgs)(nil)).Elem()
}

func (i NodePoolNodeConfigTaintArgsArgs) ToNodePoolNodeConfigTaintArgsOutput() NodePoolNodeConfigTaintArgsOutput {
	return i.ToNodePoolNodeConfigTaintArgsOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigTaintArgsArgs) ToNodePoolNodeConfigTaintArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigTaintArgsOutput)
}

type NodePoolNodeConfigTaintArgsArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigTaintArgsArrayOutput() NodePoolNodeConfigTaintArgsArrayOutput
	ToNodePoolNodeConfigTaintArgsArrayOutputWithContext(context.Context) NodePoolNodeConfigTaintArgsArrayOutput
}

type NodePoolNodeConfigTaintArgsArray []NodePoolNodeConfigTaintArgsInput

func (NodePoolNodeConfigTaintArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigTaintArgs)(nil)).Elem()
}

func (i NodePoolNodeConfigTaintArgsArray) ToNodePoolNodeConfigTaintArgsArrayOutput() NodePoolNodeConfigTaintArgsArrayOutput {
	return i.ToNodePoolNodeConfigTaintArgsArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigTaintArgsArray) ToNodePoolNodeConfigTaintArgsArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigTaintArgsArrayOutput)
}

type NodePoolNodeConfigTaintArgsOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigTaintArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigTaintArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigTaintArgsOutput) ToNodePoolNodeConfigTaintArgsOutput() NodePoolNodeConfigTaintArgsOutput {
	return o
}

func (o NodePoolNodeConfigTaintArgsOutput) ToNodePoolNodeConfigTaintArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArgsOutput {
	return o
}

func (o NodePoolNodeConfigTaintArgsOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaintArgs) string { return v.Effect }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigTaintArgsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaintArgs) string { return v.Key }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigTaintArgsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaintArgs) string { return v.Value }).(pulumi.StringOutput)
}

type NodePoolNodeConfigTaintArgsArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigTaintArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigTaintArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigTaintArgsArrayOutput) ToNodePoolNodeConfigTaintArgsArrayOutput() NodePoolNodeConfigTaintArgsArrayOutput {
	return o
}

func (o NodePoolNodeConfigTaintArgsArrayOutput) ToNodePoolNodeConfigTaintArgsArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArgsArrayOutput {
	return o
}

func (o NodePoolNodeConfigTaintArgsArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigTaintArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigTaintArgs {
		return vs[0].([]NodePoolNodeConfigTaintArgs)[vs[1].(int)]
	}).(NodePoolNodeConfigTaintArgsOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfig struct {
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type NodePoolNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigWorkloadMetadataConfigOutput() NodePoolNodeConfigWorkloadMetadataConfigOutput
	ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) NodePoolNodeConfigWorkloadMetadataConfigOutput
}

type NodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (NodePoolNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigOutput() NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigOutput)
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigOutput).ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput
	ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput
}

type nodePoolNodeConfigWorkloadMetadataConfigPtrType NodePoolNodeConfigWorkloadMetadataConfigArgs

func NodePoolNodeConfigWorkloadMetadataConfigPtr(v *NodePoolNodeConfigWorkloadMetadataConfigArgs) NodePoolNodeConfigWorkloadMetadataConfigPtrInput {
	return (*nodePoolNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*nodePoolNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigWorkloadMetadataConfigPtrType) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigWorkloadMetadataConfigPtrType) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigOutput() NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigWorkloadMetadataConfig) *NodePoolNodeConfigWorkloadMetadataConfig {
		return &v
	}).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}
func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) Elem() NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigWorkloadMetadataConfig) NodePoolNodeConfigWorkloadMetadataConfig { return *v }).(NodePoolNodeConfigWorkloadMetadataConfigOutput)
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type NodePoolNodeConfigWorkloadMetadataConfigArgsInput interface {
	pulumi.Input

	ToNodePoolNodeConfigWorkloadMetadataConfigArgsOutput() NodePoolNodeConfigWorkloadMetadataConfigArgsOutput
	ToNodePoolNodeConfigWorkloadMetadataConfigArgsOutputWithContext(context.Context) NodePoolNodeConfigWorkloadMetadataConfigArgsOutput
}

type NodePoolNodeConfigWorkloadMetadataConfigArgsArgs struct {
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (NodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ToNodePoolNodeConfigWorkloadMetadataConfigArgsOutput() NodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigArgsOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ToNodePoolNodeConfigWorkloadMetadataConfigArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigArgsOutput)
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgsArgs) ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigArgsOutput).ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx)
}

type NodePoolNodeConfigWorkloadMetadataConfigArgsPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput
	ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Context) NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput
}

type nodePoolNodeConfigWorkloadMetadataConfigArgsPtrType NodePoolNodeConfigWorkloadMetadataConfigArgsArgs

func NodePoolNodeConfigWorkloadMetadataConfigArgsPtr(v *NodePoolNodeConfigWorkloadMetadataConfigArgsArgs) NodePoolNodeConfigWorkloadMetadataConfigArgsPtrInput {
	return (*nodePoolNodeConfigWorkloadMetadataConfigArgsPtrType)(v)
}

func (*nodePoolNodeConfigWorkloadMetadataConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (i *nodePoolNodeConfigWorkloadMetadataConfigArgsPtrType) ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigWorkloadMetadataConfigArgsPtrType) ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfigArgsOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ToNodePoolNodeConfigWorkloadMetadataConfigArgsOutput() NodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ToNodePoolNodeConfigWorkloadMetadataConfigArgsOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigWorkloadMetadataConfigArgsOutput) ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigWorkloadMetadataConfigArgs) *NodePoolNodeConfigWorkloadMetadataConfigArgs {
		return &v
	}).(NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput)
}
func (o NodePoolNodeConfigWorkloadMetadataConfigArgsOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigWorkloadMetadataConfigArgs) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigWorkloadMetadataConfigArgs)(nil)).Elem()
}

func (o NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) ToNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) Elem() NodePoolNodeConfigWorkloadMetadataConfigArgsOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigWorkloadMetadataConfigArgs) NodePoolNodeConfigWorkloadMetadataConfigArgs {
		return *v
	}).(NodePoolNodeConfigWorkloadMetadataConfigArgsOutput)
}

func (o NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigWorkloadMetadataConfigArgs) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type NodePoolUpgradeSettings struct {
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge int `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

type NodePoolUpgradeSettingsInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsOutput() NodePoolUpgradeSettingsOutput
	ToNodePoolUpgradeSettingsOutputWithContext(context.Context) NodePoolUpgradeSettingsOutput
}

type NodePoolUpgradeSettingsArgs struct {
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge pulumi.IntInput `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (NodePoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettings)(nil)).Elem()
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsOutput() NodePoolUpgradeSettingsOutput {
	return i.ToNodePoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsOutput)
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return i.ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsOutput).ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx)
}

type NodePoolUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput
	ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Context) NodePoolUpgradeSettingsPtrOutput
}

type nodePoolUpgradeSettingsPtrType NodePoolUpgradeSettingsArgs

func NodePoolUpgradeSettingsPtr(v *NodePoolUpgradeSettingsArgs) NodePoolUpgradeSettingsPtrInput {
	return (*nodePoolUpgradeSettingsPtrType)(v)
}

func (*nodePoolUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettings)(nil)).Elem()
}

func (i *nodePoolUpgradeSettingsPtrType) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return i.ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *nodePoolUpgradeSettingsPtrType) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsPtrOutput)
}

type NodePoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettings)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsOutput() NodePoolUpgradeSettingsOutput {
	return o
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsOutput {
	return o
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return o.ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) *NodePoolUpgradeSettings {
		return &v
	}).(NodePoolUpgradeSettingsPtrOutput)
}

// The number of additional nodes that can be added to the node pool during
// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
// Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The number of nodes that can be simultaneously unavailable during
// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
// parallel. Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type NodePoolUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettings)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsPtrOutput) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsPtrOutput) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsPtrOutput) Elem() NodePoolUpgradeSettingsOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettings) NodePoolUpgradeSettings { return *v }).(NodePoolUpgradeSettingsOutput)
}

// The number of additional nodes that can be added to the node pool during
// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
// Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsPtrOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The number of nodes that can be simultaneously unavailable during
// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
// parallel. Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsPtrOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type NodePoolUpgradeSettingsArgs struct {
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge int `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

type NodePoolUpgradeSettingsArgsInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsArgsOutput() NodePoolUpgradeSettingsArgsOutput
	ToNodePoolUpgradeSettingsArgsOutputWithContext(context.Context) NodePoolUpgradeSettingsArgsOutput
}

type NodePoolUpgradeSettingsArgsArgs struct {
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge pulumi.IntInput `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (NodePoolUpgradeSettingsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettingsArgs)(nil)).Elem()
}

func (i NodePoolUpgradeSettingsArgsArgs) ToNodePoolUpgradeSettingsArgsOutput() NodePoolUpgradeSettingsArgsOutput {
	return i.ToNodePoolUpgradeSettingsArgsOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsArgsArgs) ToNodePoolUpgradeSettingsArgsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsArgsOutput)
}

func (i NodePoolUpgradeSettingsArgsArgs) ToNodePoolUpgradeSettingsArgsPtrOutput() NodePoolUpgradeSettingsArgsPtrOutput {
	return i.ToNodePoolUpgradeSettingsArgsPtrOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsArgsArgs) ToNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsArgsOutput).ToNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx)
}

type NodePoolUpgradeSettingsArgsPtrInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsArgsPtrOutput() NodePoolUpgradeSettingsArgsPtrOutput
	ToNodePoolUpgradeSettingsArgsPtrOutputWithContext(context.Context) NodePoolUpgradeSettingsArgsPtrOutput
}

type nodePoolUpgradeSettingsArgsPtrType NodePoolUpgradeSettingsArgsArgs

func NodePoolUpgradeSettingsArgsPtr(v *NodePoolUpgradeSettingsArgsArgs) NodePoolUpgradeSettingsArgsPtrInput {
	return (*nodePoolUpgradeSettingsArgsPtrType)(v)
}

func (*nodePoolUpgradeSettingsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettingsArgs)(nil)).Elem()
}

func (i *nodePoolUpgradeSettingsArgsPtrType) ToNodePoolUpgradeSettingsArgsPtrOutput() NodePoolUpgradeSettingsArgsPtrOutput {
	return i.ToNodePoolUpgradeSettingsArgsPtrOutputWithContext(context.Background())
}

func (i *nodePoolUpgradeSettingsArgsPtrType) ToNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsArgsPtrOutput)
}

type NodePoolUpgradeSettingsArgsOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettingsArgs)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsArgsOutput) ToNodePoolUpgradeSettingsArgsOutput() NodePoolUpgradeSettingsArgsOutput {
	return o
}

func (o NodePoolUpgradeSettingsArgsOutput) ToNodePoolUpgradeSettingsArgsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsArgsOutput {
	return o
}

func (o NodePoolUpgradeSettingsArgsOutput) ToNodePoolUpgradeSettingsArgsPtrOutput() NodePoolUpgradeSettingsArgsPtrOutput {
	return o.ToNodePoolUpgradeSettingsArgsPtrOutputWithContext(context.Background())
}

func (o NodePoolUpgradeSettingsArgsOutput) ToNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsArgsPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsArgs) *NodePoolUpgradeSettingsArgs {
		return &v
	}).(NodePoolUpgradeSettingsArgsPtrOutput)
}

// The number of additional nodes that can be added to the node pool during
// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
// Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsArgsOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsArgs) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The number of nodes that can be simultaneously unavailable during
// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
// parallel. Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsArgsOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsArgs) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type NodePoolUpgradeSettingsArgsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettingsArgs)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsArgsPtrOutput) ToNodePoolUpgradeSettingsArgsPtrOutput() NodePoolUpgradeSettingsArgsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsArgsPtrOutput) ToNodePoolUpgradeSettingsArgsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsArgsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsArgsPtrOutput) Elem() NodePoolUpgradeSettingsArgsOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettingsArgs) NodePoolUpgradeSettingsArgs { return *v }).(NodePoolUpgradeSettingsArgsOutput)
}

// The number of additional nodes that can be added to the node pool during
// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
// Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsArgsPtrOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsArgs) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The number of nodes that can be simultaneously unavailable during
// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
// parallel. Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsArgsPtrOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsArgs) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type NodePoolUpgradeSettingsState struct {
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge int `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

type NodePoolUpgradeSettingsStateInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsStateOutput() NodePoolUpgradeSettingsStateOutput
	ToNodePoolUpgradeSettingsStateOutputWithContext(context.Context) NodePoolUpgradeSettingsStateOutput
}

type NodePoolUpgradeSettingsStateArgs struct {
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge pulumi.IntInput `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (NodePoolUpgradeSettingsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettingsState)(nil)).Elem()
}

func (i NodePoolUpgradeSettingsStateArgs) ToNodePoolUpgradeSettingsStateOutput() NodePoolUpgradeSettingsStateOutput {
	return i.ToNodePoolUpgradeSettingsStateOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsStateArgs) ToNodePoolUpgradeSettingsStateOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsStateOutput)
}

type NodePoolUpgradeSettingsStateOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettingsState)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsStateOutput) ToNodePoolUpgradeSettingsStateOutput() NodePoolUpgradeSettingsStateOutput {
	return o
}

func (o NodePoolUpgradeSettingsStateOutput) ToNodePoolUpgradeSettingsStateOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsStateOutput {
	return o
}

// The number of additional nodes that can be added to the node pool during
// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
// Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsStateOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsState) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The number of nodes that can be simultaneously unavailable during
// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
// parallel. Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsStateOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettingsState) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type GetClusterAddonsConfig struct {
	CloudrunConfigs           []GetClusterAddonsConfigCloudrunConfig           `pulumi:"cloudrunConfigs"`
	DnsCacheConfigs           []GetClusterAddonsConfigDnsCacheConfig           `pulumi:"dnsCacheConfigs"`
	HorizontalPodAutoscalings []GetClusterAddonsConfigHorizontalPodAutoscaling `pulumi:"horizontalPodAutoscalings"`
	HttpLoadBalancings        []GetClusterAddonsConfigHttpLoadBalancing        `pulumi:"httpLoadBalancings"`
	IstioConfigs              []GetClusterAddonsConfigIstioConfig              `pulumi:"istioConfigs"`
	KubernetesDashboards      []GetClusterAddonsConfigKubernetesDashboard      `pulumi:"kubernetesDashboards"`
	NetworkPolicyConfigs      []GetClusterAddonsConfigNetworkPolicyConfig      `pulumi:"networkPolicyConfigs"`
}

type GetClusterAddonsConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigOutput() GetClusterAddonsConfigOutput
	ToGetClusterAddonsConfigOutputWithContext(context.Context) GetClusterAddonsConfigOutput
}

type GetClusterAddonsConfigArgs struct {
	CloudrunConfigs           GetClusterAddonsConfigCloudrunConfigArrayInput           `pulumi:"cloudrunConfigs"`
	DnsCacheConfigs           GetClusterAddonsConfigDnsCacheConfigArrayInput           `pulumi:"dnsCacheConfigs"`
	HorizontalPodAutoscalings GetClusterAddonsConfigHorizontalPodAutoscalingArrayInput `pulumi:"horizontalPodAutoscalings"`
	HttpLoadBalancings        GetClusterAddonsConfigHttpLoadBalancingArrayInput        `pulumi:"httpLoadBalancings"`
	IstioConfigs              GetClusterAddonsConfigIstioConfigArrayInput              `pulumi:"istioConfigs"`
	KubernetesDashboards      GetClusterAddonsConfigKubernetesDashboardArrayInput      `pulumi:"kubernetesDashboards"`
	NetworkPolicyConfigs      GetClusterAddonsConfigNetworkPolicyConfigArrayInput      `pulumi:"networkPolicyConfigs"`
}

func (GetClusterAddonsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigArgs) ToGetClusterAddonsConfigOutput() GetClusterAddonsConfigOutput {
	return i.ToGetClusterAddonsConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigArgs) ToGetClusterAddonsConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigOutput)
}

type GetClusterAddonsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigArrayOutput() GetClusterAddonsConfigArrayOutput
	ToGetClusterAddonsConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigArrayOutput
}

type GetClusterAddonsConfigArray []GetClusterAddonsConfigInput

func (GetClusterAddonsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigArray) ToGetClusterAddonsConfigArrayOutput() GetClusterAddonsConfigArrayOutput {
	return i.ToGetClusterAddonsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigArray) ToGetClusterAddonsConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigArrayOutput)
}

type GetClusterAddonsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigOutput) ToGetClusterAddonsConfigOutput() GetClusterAddonsConfigOutput {
	return o
}

func (o GetClusterAddonsConfigOutput) ToGetClusterAddonsConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigOutput {
	return o
}

func (o GetClusterAddonsConfigOutput) CloudrunConfigs() GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigCloudrunConfig { return v.CloudrunConfigs }).(GetClusterAddonsConfigCloudrunConfigArrayOutput)
}

func (o GetClusterAddonsConfigOutput) DnsCacheConfigs() GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigDnsCacheConfig { return v.DnsCacheConfigs }).(GetClusterAddonsConfigDnsCacheConfigArrayOutput)
}

func (o GetClusterAddonsConfigOutput) HorizontalPodAutoscalings() GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigHorizontalPodAutoscaling {
		return v.HorizontalPodAutoscalings
	}).(GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput)
}

func (o GetClusterAddonsConfigOutput) HttpLoadBalancings() GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigHttpLoadBalancing { return v.HttpLoadBalancings }).(GetClusterAddonsConfigHttpLoadBalancingArrayOutput)
}

func (o GetClusterAddonsConfigOutput) IstioConfigs() GetClusterAddonsConfigIstioConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigIstioConfig { return v.IstioConfigs }).(GetClusterAddonsConfigIstioConfigArrayOutput)
}

func (o GetClusterAddonsConfigOutput) KubernetesDashboards() GetClusterAddonsConfigKubernetesDashboardArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigKubernetesDashboard {
		return v.KubernetesDashboards
	}).(GetClusterAddonsConfigKubernetesDashboardArrayOutput)
}

func (o GetClusterAddonsConfigOutput) NetworkPolicyConfigs() GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return o.ApplyT(func(v GetClusterAddonsConfig) []GetClusterAddonsConfigNetworkPolicyConfig {
		return v.NetworkPolicyConfigs
	}).(GetClusterAddonsConfigNetworkPolicyConfigArrayOutput)
}

type GetClusterAddonsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigArrayOutput) ToGetClusterAddonsConfigArrayOutput() GetClusterAddonsConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigArrayOutput) ToGetClusterAddonsConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfig {
		return vs[0].([]GetClusterAddonsConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigOutput)
}

type GetClusterAddonsConfigCloudrunConfig struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAddonsConfigCloudrunConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigCloudrunConfigOutput() GetClusterAddonsConfigCloudrunConfigOutput
	ToGetClusterAddonsConfigCloudrunConfigOutputWithContext(context.Context) GetClusterAddonsConfigCloudrunConfigOutput
}

type GetClusterAddonsConfigCloudrunConfigArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterAddonsConfigCloudrunConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigCloudrunConfigArgs) ToGetClusterAddonsConfigCloudrunConfigOutput() GetClusterAddonsConfigCloudrunConfigOutput {
	return i.ToGetClusterAddonsConfigCloudrunConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigCloudrunConfigArgs) ToGetClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigCloudrunConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigCloudrunConfigOutput)
}

type GetClusterAddonsConfigCloudrunConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigCloudrunConfigArrayOutput() GetClusterAddonsConfigCloudrunConfigArrayOutput
	ToGetClusterAddonsConfigCloudrunConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigCloudrunConfigArrayOutput
}

type GetClusterAddonsConfigCloudrunConfigArray []GetClusterAddonsConfigCloudrunConfigInput

func (GetClusterAddonsConfigCloudrunConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigCloudrunConfigArray) ToGetClusterAddonsConfigCloudrunConfigArrayOutput() GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return i.ToGetClusterAddonsConfigCloudrunConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigCloudrunConfigArray) ToGetClusterAddonsConfigCloudrunConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigCloudrunConfigArrayOutput)
}

type GetClusterAddonsConfigCloudrunConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigCloudrunConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigCloudrunConfigOutput) ToGetClusterAddonsConfigCloudrunConfigOutput() GetClusterAddonsConfigCloudrunConfigOutput {
	return o
}

func (o GetClusterAddonsConfigCloudrunConfigOutput) ToGetClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigCloudrunConfigOutput {
	return o
}

func (o GetClusterAddonsConfigCloudrunConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigCloudrunConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigCloudrunConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigCloudrunConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigCloudrunConfigArrayOutput) ToGetClusterAddonsConfigCloudrunConfigArrayOutput() GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigCloudrunConfigArrayOutput) ToGetClusterAddonsConfigCloudrunConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigCloudrunConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigCloudrunConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigCloudrunConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigCloudrunConfig {
		return vs[0].([]GetClusterAddonsConfigCloudrunConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigCloudrunConfigOutput)
}

type GetClusterAddonsConfigDnsCacheConfig struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterAddonsConfigDnsCacheConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigDnsCacheConfigOutput() GetClusterAddonsConfigDnsCacheConfigOutput
	ToGetClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Context) GetClusterAddonsConfigDnsCacheConfigOutput
}

type GetClusterAddonsConfigDnsCacheConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterAddonsConfigDnsCacheConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigDnsCacheConfigArgs) ToGetClusterAddonsConfigDnsCacheConfigOutput() GetClusterAddonsConfigDnsCacheConfigOutput {
	return i.ToGetClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigDnsCacheConfigArgs) ToGetClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigDnsCacheConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigDnsCacheConfigOutput)
}

type GetClusterAddonsConfigDnsCacheConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigDnsCacheConfigArrayOutput() GetClusterAddonsConfigDnsCacheConfigArrayOutput
	ToGetClusterAddonsConfigDnsCacheConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigDnsCacheConfigArrayOutput
}

type GetClusterAddonsConfigDnsCacheConfigArray []GetClusterAddonsConfigDnsCacheConfigInput

func (GetClusterAddonsConfigDnsCacheConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigDnsCacheConfigArray) ToGetClusterAddonsConfigDnsCacheConfigArrayOutput() GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return i.ToGetClusterAddonsConfigDnsCacheConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigDnsCacheConfigArray) ToGetClusterAddonsConfigDnsCacheConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigDnsCacheConfigArrayOutput)
}

type GetClusterAddonsConfigDnsCacheConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigDnsCacheConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigDnsCacheConfigOutput) ToGetClusterAddonsConfigDnsCacheConfigOutput() GetClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

func (o GetClusterAddonsConfigDnsCacheConfigOutput) ToGetClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

func (o GetClusterAddonsConfigDnsCacheConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigDnsCacheConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigDnsCacheConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigDnsCacheConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigDnsCacheConfigArrayOutput) ToGetClusterAddonsConfigDnsCacheConfigArrayOutput() GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigDnsCacheConfigArrayOutput) ToGetClusterAddonsConfigDnsCacheConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigDnsCacheConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigDnsCacheConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigDnsCacheConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigDnsCacheConfig {
		return vs[0].([]GetClusterAddonsConfigDnsCacheConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigDnsCacheConfigOutput)
}

type GetClusterAddonsConfigHorizontalPodAutoscaling struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAddonsConfigHorizontalPodAutoscalingInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigHorizontalPodAutoscalingOutput() GetClusterAddonsConfigHorizontalPodAutoscalingOutput
	ToGetClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingOutput
}

type GetClusterAddonsConfigHorizontalPodAutoscalingArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterAddonsConfigHorizontalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (i GetClusterAddonsConfigHorizontalPodAutoscalingArgs) ToGetClusterAddonsConfigHorizontalPodAutoscalingOutput() GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return i.ToGetClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigHorizontalPodAutoscalingArgs) ToGetClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

type GetClusterAddonsConfigHorizontalPodAutoscalingArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput() GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput
	ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutputWithContext(context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput
}

type GetClusterAddonsConfigHorizontalPodAutoscalingArray []GetClusterAddonsConfigHorizontalPodAutoscalingInput

func (GetClusterAddonsConfigHorizontalPodAutoscalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (i GetClusterAddonsConfigHorizontalPodAutoscalingArray) ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput() GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return i.ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigHorizontalPodAutoscalingArray) ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput)
}

type GetClusterAddonsConfigHorizontalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigHorizontalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingOutput) ToGetClusterAddonsConfigHorizontalPodAutoscalingOutput() GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingOutput) ToGetClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigHorizontalPodAutoscaling) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput) ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput() GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return o
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput) ToGetClusterAddonsConfigHorizontalPodAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput {
	return o
}

func (o GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigHorizontalPodAutoscaling {
		return vs[0].([]GetClusterAddonsConfigHorizontalPodAutoscaling)[vs[1].(int)]
	}).(GetClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

type GetClusterAddonsConfigHttpLoadBalancing struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAddonsConfigHttpLoadBalancingInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigHttpLoadBalancingOutput() GetClusterAddonsConfigHttpLoadBalancingOutput
	ToGetClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Context) GetClusterAddonsConfigHttpLoadBalancingOutput
}

type GetClusterAddonsConfigHttpLoadBalancingArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterAddonsConfigHttpLoadBalancingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (i GetClusterAddonsConfigHttpLoadBalancingArgs) ToGetClusterAddonsConfigHttpLoadBalancingOutput() GetClusterAddonsConfigHttpLoadBalancingOutput {
	return i.ToGetClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigHttpLoadBalancingArgs) ToGetClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) GetClusterAddonsConfigHttpLoadBalancingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigHttpLoadBalancingOutput)
}

type GetClusterAddonsConfigHttpLoadBalancingArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigHttpLoadBalancingArrayOutput() GetClusterAddonsConfigHttpLoadBalancingArrayOutput
	ToGetClusterAddonsConfigHttpLoadBalancingArrayOutputWithContext(context.Context) GetClusterAddonsConfigHttpLoadBalancingArrayOutput
}

type GetClusterAddonsConfigHttpLoadBalancingArray []GetClusterAddonsConfigHttpLoadBalancingInput

func (GetClusterAddonsConfigHttpLoadBalancingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (i GetClusterAddonsConfigHttpLoadBalancingArray) ToGetClusterAddonsConfigHttpLoadBalancingArrayOutput() GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return i.ToGetClusterAddonsConfigHttpLoadBalancingArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigHttpLoadBalancingArray) ToGetClusterAddonsConfigHttpLoadBalancingArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigHttpLoadBalancingArrayOutput)
}

type GetClusterAddonsConfigHttpLoadBalancingOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigHttpLoadBalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (o GetClusterAddonsConfigHttpLoadBalancingOutput) ToGetClusterAddonsConfigHttpLoadBalancingOutput() GetClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

func (o GetClusterAddonsConfigHttpLoadBalancingOutput) ToGetClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) GetClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

func (o GetClusterAddonsConfigHttpLoadBalancingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigHttpLoadBalancing) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigHttpLoadBalancingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigHttpLoadBalancingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (o GetClusterAddonsConfigHttpLoadBalancingArrayOutput) ToGetClusterAddonsConfigHttpLoadBalancingArrayOutput() GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return o
}

func (o GetClusterAddonsConfigHttpLoadBalancingArrayOutput) ToGetClusterAddonsConfigHttpLoadBalancingArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigHttpLoadBalancingArrayOutput {
	return o
}

func (o GetClusterAddonsConfigHttpLoadBalancingArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigHttpLoadBalancingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigHttpLoadBalancing {
		return vs[0].([]GetClusterAddonsConfigHttpLoadBalancing)[vs[1].(int)]
	}).(GetClusterAddonsConfigHttpLoadBalancingOutput)
}

type GetClusterAddonsConfigIstioConfig struct {
	Auth     string `pulumi:"auth"`
	Disabled bool   `pulumi:"disabled"`
}

type GetClusterAddonsConfigIstioConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigIstioConfigOutput() GetClusterAddonsConfigIstioConfigOutput
	ToGetClusterAddonsConfigIstioConfigOutputWithContext(context.Context) GetClusterAddonsConfigIstioConfigOutput
}

type GetClusterAddonsConfigIstioConfigArgs struct {
	Auth     pulumi.StringInput `pulumi:"auth"`
	Disabled pulumi.BoolInput   `pulumi:"disabled"`
}

func (GetClusterAddonsConfigIstioConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigIstioConfigArgs) ToGetClusterAddonsConfigIstioConfigOutput() GetClusterAddonsConfigIstioConfigOutput {
	return i.ToGetClusterAddonsConfigIstioConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigIstioConfigArgs) ToGetClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigIstioConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigIstioConfigOutput)
}

type GetClusterAddonsConfigIstioConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigIstioConfigArrayOutput() GetClusterAddonsConfigIstioConfigArrayOutput
	ToGetClusterAddonsConfigIstioConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigIstioConfigArrayOutput
}

type GetClusterAddonsConfigIstioConfigArray []GetClusterAddonsConfigIstioConfigInput

func (GetClusterAddonsConfigIstioConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigIstioConfigArray) ToGetClusterAddonsConfigIstioConfigArrayOutput() GetClusterAddonsConfigIstioConfigArrayOutput {
	return i.ToGetClusterAddonsConfigIstioConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigIstioConfigArray) ToGetClusterAddonsConfigIstioConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigIstioConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigIstioConfigArrayOutput)
}

type GetClusterAddonsConfigIstioConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigIstioConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigIstioConfigOutput) ToGetClusterAddonsConfigIstioConfigOutput() GetClusterAddonsConfigIstioConfigOutput {
	return o
}

func (o GetClusterAddonsConfigIstioConfigOutput) ToGetClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigIstioConfigOutput {
	return o
}

func (o GetClusterAddonsConfigIstioConfigOutput) Auth() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigIstioConfig) string { return v.Auth }).(pulumi.StringOutput)
}

func (o GetClusterAddonsConfigIstioConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigIstioConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigIstioConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigIstioConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigIstioConfigArrayOutput) ToGetClusterAddonsConfigIstioConfigArrayOutput() GetClusterAddonsConfigIstioConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigIstioConfigArrayOutput) ToGetClusterAddonsConfigIstioConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigIstioConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigIstioConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigIstioConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigIstioConfig {
		return vs[0].([]GetClusterAddonsConfigIstioConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigIstioConfigOutput)
}

type GetClusterAddonsConfigKubernetesDashboard struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAddonsConfigKubernetesDashboardInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigKubernetesDashboardOutput() GetClusterAddonsConfigKubernetesDashboardOutput
	ToGetClusterAddonsConfigKubernetesDashboardOutputWithContext(context.Context) GetClusterAddonsConfigKubernetesDashboardOutput
}

type GetClusterAddonsConfigKubernetesDashboardArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterAddonsConfigKubernetesDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigKubernetesDashboard)(nil)).Elem()
}

func (i GetClusterAddonsConfigKubernetesDashboardArgs) ToGetClusterAddonsConfigKubernetesDashboardOutput() GetClusterAddonsConfigKubernetesDashboardOutput {
	return i.ToGetClusterAddonsConfigKubernetesDashboardOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigKubernetesDashboardArgs) ToGetClusterAddonsConfigKubernetesDashboardOutputWithContext(ctx context.Context) GetClusterAddonsConfigKubernetesDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigKubernetesDashboardOutput)
}

type GetClusterAddonsConfigKubernetesDashboardArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigKubernetesDashboardArrayOutput() GetClusterAddonsConfigKubernetesDashboardArrayOutput
	ToGetClusterAddonsConfigKubernetesDashboardArrayOutputWithContext(context.Context) GetClusterAddonsConfigKubernetesDashboardArrayOutput
}

type GetClusterAddonsConfigKubernetesDashboardArray []GetClusterAddonsConfigKubernetesDashboardInput

func (GetClusterAddonsConfigKubernetesDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigKubernetesDashboard)(nil)).Elem()
}

func (i GetClusterAddonsConfigKubernetesDashboardArray) ToGetClusterAddonsConfigKubernetesDashboardArrayOutput() GetClusterAddonsConfigKubernetesDashboardArrayOutput {
	return i.ToGetClusterAddonsConfigKubernetesDashboardArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigKubernetesDashboardArray) ToGetClusterAddonsConfigKubernetesDashboardArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigKubernetesDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigKubernetesDashboardArrayOutput)
}

type GetClusterAddonsConfigKubernetesDashboardOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigKubernetesDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigKubernetesDashboard)(nil)).Elem()
}

func (o GetClusterAddonsConfigKubernetesDashboardOutput) ToGetClusterAddonsConfigKubernetesDashboardOutput() GetClusterAddonsConfigKubernetesDashboardOutput {
	return o
}

func (o GetClusterAddonsConfigKubernetesDashboardOutput) ToGetClusterAddonsConfigKubernetesDashboardOutputWithContext(ctx context.Context) GetClusterAddonsConfigKubernetesDashboardOutput {
	return o
}

func (o GetClusterAddonsConfigKubernetesDashboardOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigKubernetesDashboard) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigKubernetesDashboardArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigKubernetesDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigKubernetesDashboard)(nil)).Elem()
}

func (o GetClusterAddonsConfigKubernetesDashboardArrayOutput) ToGetClusterAddonsConfigKubernetesDashboardArrayOutput() GetClusterAddonsConfigKubernetesDashboardArrayOutput {
	return o
}

func (o GetClusterAddonsConfigKubernetesDashboardArrayOutput) ToGetClusterAddonsConfigKubernetesDashboardArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigKubernetesDashboardArrayOutput {
	return o
}

func (o GetClusterAddonsConfigKubernetesDashboardArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigKubernetesDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigKubernetesDashboard {
		return vs[0].([]GetClusterAddonsConfigKubernetesDashboard)[vs[1].(int)]
	}).(GetClusterAddonsConfigKubernetesDashboardOutput)
}

type GetClusterAddonsConfigNetworkPolicyConfig struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAddonsConfigNetworkPolicyConfigInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigNetworkPolicyConfigOutput() GetClusterAddonsConfigNetworkPolicyConfigOutput
	ToGetClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Context) GetClusterAddonsConfigNetworkPolicyConfigOutput
}

type GetClusterAddonsConfigNetworkPolicyConfigArgs struct {
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (GetClusterAddonsConfigNetworkPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigNetworkPolicyConfigArgs) ToGetClusterAddonsConfigNetworkPolicyConfigOutput() GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return i.ToGetClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigNetworkPolicyConfigArgs) ToGetClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigNetworkPolicyConfigOutput)
}

type GetClusterAddonsConfigNetworkPolicyConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutput() GetClusterAddonsConfigNetworkPolicyConfigArrayOutput
	ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutputWithContext(context.Context) GetClusterAddonsConfigNetworkPolicyConfigArrayOutput
}

type GetClusterAddonsConfigNetworkPolicyConfigArray []GetClusterAddonsConfigNetworkPolicyConfigInput

func (GetClusterAddonsConfigNetworkPolicyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (i GetClusterAddonsConfigNetworkPolicyConfigArray) ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutput() GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return i.ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAddonsConfigNetworkPolicyConfigArray) ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAddonsConfigNetworkPolicyConfigArrayOutput)
}

type GetClusterAddonsConfigNetworkPolicyConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigNetworkPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigNetworkPolicyConfigOutput) ToGetClusterAddonsConfigNetworkPolicyConfigOutput() GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

func (o GetClusterAddonsConfigNetworkPolicyConfigOutput) ToGetClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

func (o GetClusterAddonsConfigNetworkPolicyConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAddonsConfigNetworkPolicyConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type GetClusterAddonsConfigNetworkPolicyConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAddonsConfigNetworkPolicyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (o GetClusterAddonsConfigNetworkPolicyConfigArrayOutput) ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutput() GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigNetworkPolicyConfigArrayOutput) ToGetClusterAddonsConfigNetworkPolicyConfigArrayOutputWithContext(ctx context.Context) GetClusterAddonsConfigNetworkPolicyConfigArrayOutput {
	return o
}

func (o GetClusterAddonsConfigNetworkPolicyConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAddonsConfigNetworkPolicyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAddonsConfigNetworkPolicyConfig {
		return vs[0].([]GetClusterAddonsConfigNetworkPolicyConfig)[vs[1].(int)]
	}).(GetClusterAddonsConfigNetworkPolicyConfigOutput)
}

type GetClusterAuthenticatorGroupsConfig struct {
	SecurityGroup string `pulumi:"securityGroup"`
}

type GetClusterAuthenticatorGroupsConfigInput interface {
	pulumi.Input

	ToGetClusterAuthenticatorGroupsConfigOutput() GetClusterAuthenticatorGroupsConfigOutput
	ToGetClusterAuthenticatorGroupsConfigOutputWithContext(context.Context) GetClusterAuthenticatorGroupsConfigOutput
}

type GetClusterAuthenticatorGroupsConfigArgs struct {
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
}

func (GetClusterAuthenticatorGroupsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i GetClusterAuthenticatorGroupsConfigArgs) ToGetClusterAuthenticatorGroupsConfigOutput() GetClusterAuthenticatorGroupsConfigOutput {
	return i.ToGetClusterAuthenticatorGroupsConfigOutputWithContext(context.Background())
}

func (i GetClusterAuthenticatorGroupsConfigArgs) ToGetClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) GetClusterAuthenticatorGroupsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAuthenticatorGroupsConfigOutput)
}

type GetClusterAuthenticatorGroupsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAuthenticatorGroupsConfigArrayOutput() GetClusterAuthenticatorGroupsConfigArrayOutput
	ToGetClusterAuthenticatorGroupsConfigArrayOutputWithContext(context.Context) GetClusterAuthenticatorGroupsConfigArrayOutput
}

type GetClusterAuthenticatorGroupsConfigArray []GetClusterAuthenticatorGroupsConfigInput

func (GetClusterAuthenticatorGroupsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i GetClusterAuthenticatorGroupsConfigArray) ToGetClusterAuthenticatorGroupsConfigArrayOutput() GetClusterAuthenticatorGroupsConfigArrayOutput {
	return i.ToGetClusterAuthenticatorGroupsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAuthenticatorGroupsConfigArray) ToGetClusterAuthenticatorGroupsConfigArrayOutputWithContext(ctx context.Context) GetClusterAuthenticatorGroupsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAuthenticatorGroupsConfigArrayOutput)
}

type GetClusterAuthenticatorGroupsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAuthenticatorGroupsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o GetClusterAuthenticatorGroupsConfigOutput) ToGetClusterAuthenticatorGroupsConfigOutput() GetClusterAuthenticatorGroupsConfigOutput {
	return o
}

func (o GetClusterAuthenticatorGroupsConfigOutput) ToGetClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) GetClusterAuthenticatorGroupsConfigOutput {
	return o
}

func (o GetClusterAuthenticatorGroupsConfigOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAuthenticatorGroupsConfig) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type GetClusterAuthenticatorGroupsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAuthenticatorGroupsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o GetClusterAuthenticatorGroupsConfigArrayOutput) ToGetClusterAuthenticatorGroupsConfigArrayOutput() GetClusterAuthenticatorGroupsConfigArrayOutput {
	return o
}

func (o GetClusterAuthenticatorGroupsConfigArrayOutput) ToGetClusterAuthenticatorGroupsConfigArrayOutputWithContext(ctx context.Context) GetClusterAuthenticatorGroupsConfigArrayOutput {
	return o
}

func (o GetClusterAuthenticatorGroupsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAuthenticatorGroupsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAuthenticatorGroupsConfig {
		return vs[0].([]GetClusterAuthenticatorGroupsConfig)[vs[1].(int)]
	}).(GetClusterAuthenticatorGroupsConfigOutput)
}

type GetClusterClusterAutoscaling struct {
	AutoProvisioningDefaults []GetClusterClusterAutoscalingAutoProvisioningDefault `pulumi:"autoProvisioningDefaults"`
	AutoscalingProfile       string                                                `pulumi:"autoscalingProfile"`
	Enabled                  bool                                                  `pulumi:"enabled"`
	ResourceLimits           []GetClusterClusterAutoscalingResourceLimit           `pulumi:"resourceLimits"`
}

type GetClusterClusterAutoscalingInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingOutput() GetClusterClusterAutoscalingOutput
	ToGetClusterClusterAutoscalingOutputWithContext(context.Context) GetClusterClusterAutoscalingOutput
}

type GetClusterClusterAutoscalingArgs struct {
	AutoProvisioningDefaults GetClusterClusterAutoscalingAutoProvisioningDefaultArrayInput `pulumi:"autoProvisioningDefaults"`
	AutoscalingProfile       pulumi.StringInput                                            `pulumi:"autoscalingProfile"`
	Enabled                  pulumi.BoolInput                                              `pulumi:"enabled"`
	ResourceLimits           GetClusterClusterAutoscalingResourceLimitArrayInput           `pulumi:"resourceLimits"`
}

func (GetClusterClusterAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscaling)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingArgs) ToGetClusterClusterAutoscalingOutput() GetClusterClusterAutoscalingOutput {
	return i.ToGetClusterClusterAutoscalingOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingArgs) ToGetClusterClusterAutoscalingOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingOutput)
}

type GetClusterClusterAutoscalingArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingArrayOutput() GetClusterClusterAutoscalingArrayOutput
	ToGetClusterClusterAutoscalingArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingArrayOutput
}

type GetClusterClusterAutoscalingArray []GetClusterClusterAutoscalingInput

func (GetClusterClusterAutoscalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscaling)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingArray) ToGetClusterClusterAutoscalingArrayOutput() GetClusterClusterAutoscalingArrayOutput {
	return i.ToGetClusterClusterAutoscalingArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingArray) ToGetClusterClusterAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingArrayOutput)
}

type GetClusterClusterAutoscalingOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscaling)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingOutput) ToGetClusterClusterAutoscalingOutput() GetClusterClusterAutoscalingOutput {
	return o
}

func (o GetClusterClusterAutoscalingOutput) ToGetClusterClusterAutoscalingOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingOutput {
	return o
}

func (o GetClusterClusterAutoscalingOutput) AutoProvisioningDefaults() GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscaling) []GetClusterClusterAutoscalingAutoProvisioningDefault {
		return v.AutoProvisioningDefaults
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput)
}

func (o GetClusterClusterAutoscalingOutput) AutoscalingProfile() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscaling) string { return v.AutoscalingProfile }).(pulumi.StringOutput)
}

func (o GetClusterClusterAutoscalingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetClusterClusterAutoscalingOutput) ResourceLimits() GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscaling) []GetClusterClusterAutoscalingResourceLimit {
		return v.ResourceLimits
	}).(GetClusterClusterAutoscalingResourceLimitArrayOutput)
}

type GetClusterClusterAutoscalingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscaling)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingArrayOutput) ToGetClusterClusterAutoscalingArrayOutput() GetClusterClusterAutoscalingArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingArrayOutput) ToGetClusterClusterAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscaling {
		return vs[0].([]GetClusterClusterAutoscaling)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefault struct {
	OauthScopes    []string `pulumi:"oauthScopes"`
	ServiceAccount string   `pulumi:"serviceAccount"`
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultArgs struct {
	OauthScopes    pulumi.StringArrayInput `pulumi:"oauthScopes"`
	ServiceAccount pulumi.StringInput      `pulumi:"serviceAccount"`
}

func (GetClusterClusterAutoscalingAutoProvisioningDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefault)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultArgs) ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput
	ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultArray []GetClusterClusterAutoscalingAutoProvisioningDefaultInput

func (GetClusterClusterAutoscalingAutoProvisioningDefaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefault)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return i.ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingAutoProvisioningDefaultArray) ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingAutoProvisioningDefault)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingAutoProvisioningDefault) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

type GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingAutoProvisioningDefault)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput() GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput) ToGetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingAutoProvisioningDefaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingAutoProvisioningDefault {
		return vs[0].([]GetClusterClusterAutoscalingAutoProvisioningDefault)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingAutoProvisioningDefaultOutput)
}

type GetClusterClusterAutoscalingResourceLimit struct {
	Maximum      int    `pulumi:"maximum"`
	Minimum      int    `pulumi:"minimum"`
	ResourceType string `pulumi:"resourceType"`
}

type GetClusterClusterAutoscalingResourceLimitInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingResourceLimitOutput() GetClusterClusterAutoscalingResourceLimitOutput
	ToGetClusterClusterAutoscalingResourceLimitOutputWithContext(context.Context) GetClusterClusterAutoscalingResourceLimitOutput
}

type GetClusterClusterAutoscalingResourceLimitArgs struct {
	Maximum      pulumi.IntInput    `pulumi:"maximum"`
	Minimum      pulumi.IntInput    `pulumi:"minimum"`
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetClusterClusterAutoscalingResourceLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingResourceLimitArgs) ToGetClusterClusterAutoscalingResourceLimitOutput() GetClusterClusterAutoscalingResourceLimitOutput {
	return i.ToGetClusterClusterAutoscalingResourceLimitOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingResourceLimitArgs) ToGetClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingResourceLimitOutput)
}

type GetClusterClusterAutoscalingResourceLimitArrayInput interface {
	pulumi.Input

	ToGetClusterClusterAutoscalingResourceLimitArrayOutput() GetClusterClusterAutoscalingResourceLimitArrayOutput
	ToGetClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Context) GetClusterClusterAutoscalingResourceLimitArrayOutput
}

type GetClusterClusterAutoscalingResourceLimitArray []GetClusterClusterAutoscalingResourceLimitInput

func (GetClusterClusterAutoscalingResourceLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i GetClusterClusterAutoscalingResourceLimitArray) ToGetClusterClusterAutoscalingResourceLimitArrayOutput() GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return i.ToGetClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Background())
}

func (i GetClusterClusterAutoscalingResourceLimitArray) ToGetClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterClusterAutoscalingResourceLimitArrayOutput)
}

type GetClusterClusterAutoscalingResourceLimitOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingResourceLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingResourceLimitOutput) ToGetClusterClusterAutoscalingResourceLimitOutput() GetClusterClusterAutoscalingResourceLimitOutput {
	return o
}

func (o GetClusterClusterAutoscalingResourceLimitOutput) ToGetClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingResourceLimitOutput {
	return o
}

func (o GetClusterClusterAutoscalingResourceLimitOutput) Maximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingResourceLimit) int { return v.Maximum }).(pulumi.IntOutput)
}

func (o GetClusterClusterAutoscalingResourceLimitOutput) Minimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingResourceLimit) int { return v.Minimum }).(pulumi.IntOutput)
}

func (o GetClusterClusterAutoscalingResourceLimitOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterClusterAutoscalingResourceLimit) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetClusterClusterAutoscalingResourceLimitArrayOutput struct{ *pulumi.OutputState }

func (GetClusterClusterAutoscalingResourceLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o GetClusterClusterAutoscalingResourceLimitArrayOutput) ToGetClusterClusterAutoscalingResourceLimitArrayOutput() GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingResourceLimitArrayOutput) ToGetClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) GetClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o GetClusterClusterAutoscalingResourceLimitArrayOutput) Index(i pulumi.IntInput) GetClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterClusterAutoscalingResourceLimit {
		return vs[0].([]GetClusterClusterAutoscalingResourceLimit)[vs[1].(int)]
	}).(GetClusterClusterAutoscalingResourceLimitOutput)
}

type GetClusterDatabaseEncryption struct {
	KeyName string `pulumi:"keyName"`
	State   string `pulumi:"state"`
}

type GetClusterDatabaseEncryptionInput interface {
	pulumi.Input

	ToGetClusterDatabaseEncryptionOutput() GetClusterDatabaseEncryptionOutput
	ToGetClusterDatabaseEncryptionOutputWithContext(context.Context) GetClusterDatabaseEncryptionOutput
}

type GetClusterDatabaseEncryptionArgs struct {
	KeyName pulumi.StringInput `pulumi:"keyName"`
	State   pulumi.StringInput `pulumi:"state"`
}

func (GetClusterDatabaseEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDatabaseEncryption)(nil)).Elem()
}

func (i GetClusterDatabaseEncryptionArgs) ToGetClusterDatabaseEncryptionOutput() GetClusterDatabaseEncryptionOutput {
	return i.ToGetClusterDatabaseEncryptionOutputWithContext(context.Background())
}

func (i GetClusterDatabaseEncryptionArgs) ToGetClusterDatabaseEncryptionOutputWithContext(ctx context.Context) GetClusterDatabaseEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDatabaseEncryptionOutput)
}

type GetClusterDatabaseEncryptionArrayInput interface {
	pulumi.Input

	ToGetClusterDatabaseEncryptionArrayOutput() GetClusterDatabaseEncryptionArrayOutput
	ToGetClusterDatabaseEncryptionArrayOutputWithContext(context.Context) GetClusterDatabaseEncryptionArrayOutput
}

type GetClusterDatabaseEncryptionArray []GetClusterDatabaseEncryptionInput

func (GetClusterDatabaseEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDatabaseEncryption)(nil)).Elem()
}

func (i GetClusterDatabaseEncryptionArray) ToGetClusterDatabaseEncryptionArrayOutput() GetClusterDatabaseEncryptionArrayOutput {
	return i.ToGetClusterDatabaseEncryptionArrayOutputWithContext(context.Background())
}

func (i GetClusterDatabaseEncryptionArray) ToGetClusterDatabaseEncryptionArrayOutputWithContext(ctx context.Context) GetClusterDatabaseEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterDatabaseEncryptionArrayOutput)
}

type GetClusterDatabaseEncryptionOutput struct{ *pulumi.OutputState }

func (GetClusterDatabaseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterDatabaseEncryption)(nil)).Elem()
}

func (o GetClusterDatabaseEncryptionOutput) ToGetClusterDatabaseEncryptionOutput() GetClusterDatabaseEncryptionOutput {
	return o
}

func (o GetClusterDatabaseEncryptionOutput) ToGetClusterDatabaseEncryptionOutputWithContext(ctx context.Context) GetClusterDatabaseEncryptionOutput {
	return o
}

func (o GetClusterDatabaseEncryptionOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDatabaseEncryption) string { return v.KeyName }).(pulumi.StringOutput)
}

func (o GetClusterDatabaseEncryptionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterDatabaseEncryption) string { return v.State }).(pulumi.StringOutput)
}

type GetClusterDatabaseEncryptionArrayOutput struct{ *pulumi.OutputState }

func (GetClusterDatabaseEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterDatabaseEncryption)(nil)).Elem()
}

func (o GetClusterDatabaseEncryptionArrayOutput) ToGetClusterDatabaseEncryptionArrayOutput() GetClusterDatabaseEncryptionArrayOutput {
	return o
}

func (o GetClusterDatabaseEncryptionArrayOutput) ToGetClusterDatabaseEncryptionArrayOutputWithContext(ctx context.Context) GetClusterDatabaseEncryptionArrayOutput {
	return o
}

func (o GetClusterDatabaseEncryptionArrayOutput) Index(i pulumi.IntInput) GetClusterDatabaseEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterDatabaseEncryption {
		return vs[0].([]GetClusterDatabaseEncryption)[vs[1].(int)]
	}).(GetClusterDatabaseEncryptionOutput)
}

type GetClusterIpAllocationPolicy struct {
	ClusterIpv4CidrBlock       string `pulumi:"clusterIpv4CidrBlock"`
	ClusterSecondaryRangeName  string `pulumi:"clusterSecondaryRangeName"`
	NodeIpv4CidrBlock          string `pulumi:"nodeIpv4CidrBlock"`
	ServicesIpv4CidrBlock      string `pulumi:"servicesIpv4CidrBlock"`
	ServicesSecondaryRangeName string `pulumi:"servicesSecondaryRangeName"`
	SubnetworkName             string `pulumi:"subnetworkName"`
}

type GetClusterIpAllocationPolicyInput interface {
	pulumi.Input

	ToGetClusterIpAllocationPolicyOutput() GetClusterIpAllocationPolicyOutput
	ToGetClusterIpAllocationPolicyOutputWithContext(context.Context) GetClusterIpAllocationPolicyOutput
}

type GetClusterIpAllocationPolicyArgs struct {
	ClusterIpv4CidrBlock       pulumi.StringInput `pulumi:"clusterIpv4CidrBlock"`
	ClusterSecondaryRangeName  pulumi.StringInput `pulumi:"clusterSecondaryRangeName"`
	NodeIpv4CidrBlock          pulumi.StringInput `pulumi:"nodeIpv4CidrBlock"`
	ServicesIpv4CidrBlock      pulumi.StringInput `pulumi:"servicesIpv4CidrBlock"`
	ServicesSecondaryRangeName pulumi.StringInput `pulumi:"servicesSecondaryRangeName"`
	SubnetworkName             pulumi.StringInput `pulumi:"subnetworkName"`
}

func (GetClusterIpAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpAllocationPolicy)(nil)).Elem()
}

func (i GetClusterIpAllocationPolicyArgs) ToGetClusterIpAllocationPolicyOutput() GetClusterIpAllocationPolicyOutput {
	return i.ToGetClusterIpAllocationPolicyOutputWithContext(context.Background())
}

func (i GetClusterIpAllocationPolicyArgs) ToGetClusterIpAllocationPolicyOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpAllocationPolicyOutput)
}

type GetClusterIpAllocationPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterIpAllocationPolicyArrayOutput() GetClusterIpAllocationPolicyArrayOutput
	ToGetClusterIpAllocationPolicyArrayOutputWithContext(context.Context) GetClusterIpAllocationPolicyArrayOutput
}

type GetClusterIpAllocationPolicyArray []GetClusterIpAllocationPolicyInput

func (GetClusterIpAllocationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpAllocationPolicy)(nil)).Elem()
}

func (i GetClusterIpAllocationPolicyArray) ToGetClusterIpAllocationPolicyArrayOutput() GetClusterIpAllocationPolicyArrayOutput {
	return i.ToGetClusterIpAllocationPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterIpAllocationPolicyArray) ToGetClusterIpAllocationPolicyArrayOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterIpAllocationPolicyArrayOutput)
}

type GetClusterIpAllocationPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterIpAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterIpAllocationPolicy)(nil)).Elem()
}

func (o GetClusterIpAllocationPolicyOutput) ToGetClusterIpAllocationPolicyOutput() GetClusterIpAllocationPolicyOutput {
	return o
}

func (o GetClusterIpAllocationPolicyOutput) ToGetClusterIpAllocationPolicyOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyOutput {
	return o
}

func (o GetClusterIpAllocationPolicyOutput) ClusterIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.ClusterIpv4CidrBlock }).(pulumi.StringOutput)
}

func (o GetClusterIpAllocationPolicyOutput) ClusterSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.ClusterSecondaryRangeName }).(pulumi.StringOutput)
}

func (o GetClusterIpAllocationPolicyOutput) NodeIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.NodeIpv4CidrBlock }).(pulumi.StringOutput)
}

func (o GetClusterIpAllocationPolicyOutput) ServicesIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.ServicesIpv4CidrBlock }).(pulumi.StringOutput)
}

func (o GetClusterIpAllocationPolicyOutput) ServicesSecondaryRangeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.ServicesSecondaryRangeName }).(pulumi.StringOutput)
}

func (o GetClusterIpAllocationPolicyOutput) SubnetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterIpAllocationPolicy) string { return v.SubnetworkName }).(pulumi.StringOutput)
}

type GetClusterIpAllocationPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterIpAllocationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterIpAllocationPolicy)(nil)).Elem()
}

func (o GetClusterIpAllocationPolicyArrayOutput) ToGetClusterIpAllocationPolicyArrayOutput() GetClusterIpAllocationPolicyArrayOutput {
	return o
}

func (o GetClusterIpAllocationPolicyArrayOutput) ToGetClusterIpAllocationPolicyArrayOutputWithContext(ctx context.Context) GetClusterIpAllocationPolicyArrayOutput {
	return o
}

func (o GetClusterIpAllocationPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterIpAllocationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterIpAllocationPolicy {
		return vs[0].([]GetClusterIpAllocationPolicy)[vs[1].(int)]
	}).(GetClusterIpAllocationPolicyOutput)
}

type GetClusterMaintenancePolicy struct {
	DailyMaintenanceWindows []GetClusterMaintenancePolicyDailyMaintenanceWindow `pulumi:"dailyMaintenanceWindows"`
	RecurringWindows        []GetClusterMaintenancePolicyRecurringWindow        `pulumi:"recurringWindows"`
}

type GetClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyOutput() GetClusterMaintenancePolicyOutput
	ToGetClusterMaintenancePolicyOutputWithContext(context.Context) GetClusterMaintenancePolicyOutput
}

type GetClusterMaintenancePolicyArgs struct {
	DailyMaintenanceWindows GetClusterMaintenancePolicyDailyMaintenanceWindowArrayInput `pulumi:"dailyMaintenanceWindows"`
	RecurringWindows        GetClusterMaintenancePolicyRecurringWindowArrayInput        `pulumi:"recurringWindows"`
}

func (GetClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyArgs) ToGetClusterMaintenancePolicyOutput() GetClusterMaintenancePolicyOutput {
	return i.ToGetClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyArgs) ToGetClusterMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyOutput)
}

type GetClusterMaintenancePolicyArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyArrayOutput() GetClusterMaintenancePolicyArrayOutput
	ToGetClusterMaintenancePolicyArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyArrayOutput
}

type GetClusterMaintenancePolicyArray []GetClusterMaintenancePolicyInput

func (GetClusterMaintenancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicy)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyArray) ToGetClusterMaintenancePolicyArrayOutput() GetClusterMaintenancePolicyArrayOutput {
	return i.ToGetClusterMaintenancePolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyArray) ToGetClusterMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyArrayOutput)
}

type GetClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyOutput) ToGetClusterMaintenancePolicyOutput() GetClusterMaintenancePolicyOutput {
	return o
}

func (o GetClusterMaintenancePolicyOutput) ToGetClusterMaintenancePolicyOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyOutput {
	return o
}

func (o GetClusterMaintenancePolicyOutput) DailyMaintenanceWindows() GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicy) []GetClusterMaintenancePolicyDailyMaintenanceWindow {
		return v.DailyMaintenanceWindows
	}).(GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput)
}

func (o GetClusterMaintenancePolicyOutput) RecurringWindows() GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicy) []GetClusterMaintenancePolicyRecurringWindow {
		return v.RecurringWindows
	}).(GetClusterMaintenancePolicyRecurringWindowArrayOutput)
}

type GetClusterMaintenancePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicy)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyArrayOutput) ToGetClusterMaintenancePolicyArrayOutput() GetClusterMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyArrayOutput) ToGetClusterMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicy {
		return vs[0].([]GetClusterMaintenancePolicy)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyOutput)
}

type GetClusterMaintenancePolicyDailyMaintenanceWindow struct {
	Duration  string `pulumi:"duration"`
	StartTime string `pulumi:"startTime"`
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowOutput
	ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowOutput
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowArgs struct {
	Duration  pulumi.StringInput `pulumi:"duration"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetClusterMaintenancePolicyDailyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return i.ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput
	ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowArray []GetClusterMaintenancePolicyDailyMaintenanceWindowInput

func (GetClusterMaintenancePolicyDailyMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyDailyMaintenanceWindowArray) ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return i.ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyDailyMaintenanceWindowArray) ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput)
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToGetClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.Duration }).(pulumi.StringOutput)
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput) ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput() GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput) ToGetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicyDailyMaintenanceWindow {
		return vs[0].([]GetClusterMaintenancePolicyDailyMaintenanceWindow)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

type GetClusterMaintenancePolicyRecurringWindow struct {
	EndTime    string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime  string `pulumi:"startTime"`
}

type GetClusterMaintenancePolicyRecurringWindowInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyRecurringWindowOutput() GetClusterMaintenancePolicyRecurringWindowOutput
	ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Context) GetClusterMaintenancePolicyRecurringWindowOutput
}

type GetClusterMaintenancePolicyRecurringWindowArgs struct {
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	StartTime  pulumi.StringInput `pulumi:"startTime"`
}

func (GetClusterMaintenancePolicyRecurringWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyRecurringWindowArgs) ToGetClusterMaintenancePolicyRecurringWindowOutput() GetClusterMaintenancePolicyRecurringWindowOutput {
	return i.ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyRecurringWindowArgs) ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyRecurringWindowOutput)
}

type GetClusterMaintenancePolicyRecurringWindowArrayInput interface {
	pulumi.Input

	ToGetClusterMaintenancePolicyRecurringWindowArrayOutput() GetClusterMaintenancePolicyRecurringWindowArrayOutput
	ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(context.Context) GetClusterMaintenancePolicyRecurringWindowArrayOutput
}

type GetClusterMaintenancePolicyRecurringWindowArray []GetClusterMaintenancePolicyRecurringWindowInput

func (GetClusterMaintenancePolicyRecurringWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i GetClusterMaintenancePolicyRecurringWindowArray) ToGetClusterMaintenancePolicyRecurringWindowArrayOutput() GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return i.ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(context.Background())
}

func (i GetClusterMaintenancePolicyRecurringWindowArray) ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMaintenancePolicyRecurringWindowArrayOutput)
}

type GetClusterMaintenancePolicyRecurringWindowOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyRecurringWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) ToGetClusterMaintenancePolicyRecurringWindowOutput() GetClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) ToGetClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyRecurringWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyRecurringWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o GetClusterMaintenancePolicyRecurringWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMaintenancePolicyRecurringWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetClusterMaintenancePolicyRecurringWindowArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMaintenancePolicyRecurringWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o GetClusterMaintenancePolicyRecurringWindowArrayOutput) ToGetClusterMaintenancePolicyRecurringWindowArrayOutput() GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowArrayOutput) ToGetClusterMaintenancePolicyRecurringWindowArrayOutputWithContext(ctx context.Context) GetClusterMaintenancePolicyRecurringWindowArrayOutput {
	return o
}

func (o GetClusterMaintenancePolicyRecurringWindowArrayOutput) Index(i pulumi.IntInput) GetClusterMaintenancePolicyRecurringWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMaintenancePolicyRecurringWindow {
		return vs[0].([]GetClusterMaintenancePolicyRecurringWindow)[vs[1].(int)]
	}).(GetClusterMaintenancePolicyRecurringWindowOutput)
}

type GetClusterMasterAuth struct {
	ClientCertificate        string                                        `pulumi:"clientCertificate"`
	ClientCertificateConfigs []GetClusterMasterAuthClientCertificateConfig `pulumi:"clientCertificateConfigs"`
	ClientKey                string                                        `pulumi:"clientKey"`
	ClusterCaCertificate     string                                        `pulumi:"clusterCaCertificate"`
	Password                 string                                        `pulumi:"password"`
	Username                 string                                        `pulumi:"username"`
}

type GetClusterMasterAuthInput interface {
	pulumi.Input

	ToGetClusterMasterAuthOutput() GetClusterMasterAuthOutput
	ToGetClusterMasterAuthOutputWithContext(context.Context) GetClusterMasterAuthOutput
}

type GetClusterMasterAuthArgs struct {
	ClientCertificate        pulumi.StringInput                                    `pulumi:"clientCertificate"`
	ClientCertificateConfigs GetClusterMasterAuthClientCertificateConfigArrayInput `pulumi:"clientCertificateConfigs"`
	ClientKey                pulumi.StringInput                                    `pulumi:"clientKey"`
	ClusterCaCertificate     pulumi.StringInput                                    `pulumi:"clusterCaCertificate"`
	Password                 pulumi.StringInput                                    `pulumi:"password"`
	Username                 pulumi.StringInput                                    `pulumi:"username"`
}

func (GetClusterMasterAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuth)(nil)).Elem()
}

func (i GetClusterMasterAuthArgs) ToGetClusterMasterAuthOutput() GetClusterMasterAuthOutput {
	return i.ToGetClusterMasterAuthOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthArgs) ToGetClusterMasterAuthOutputWithContext(ctx context.Context) GetClusterMasterAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthOutput)
}

type GetClusterMasterAuthArrayInput interface {
	pulumi.Input

	ToGetClusterMasterAuthArrayOutput() GetClusterMasterAuthArrayOutput
	ToGetClusterMasterAuthArrayOutputWithContext(context.Context) GetClusterMasterAuthArrayOutput
}

type GetClusterMasterAuthArray []GetClusterMasterAuthInput

func (GetClusterMasterAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuth)(nil)).Elem()
}

func (i GetClusterMasterAuthArray) ToGetClusterMasterAuthArrayOutput() GetClusterMasterAuthArrayOutput {
	return i.ToGetClusterMasterAuthArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthArray) ToGetClusterMasterAuthArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthArrayOutput)
}

type GetClusterMasterAuthOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuth)(nil)).Elem()
}

func (o GetClusterMasterAuthOutput) ToGetClusterMasterAuthOutput() GetClusterMasterAuthOutput {
	return o
}

func (o GetClusterMasterAuthOutput) ToGetClusterMasterAuthOutputWithContext(ctx context.Context) GetClusterMasterAuthOutput {
	return o
}

func (o GetClusterMasterAuthOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

func (o GetClusterMasterAuthOutput) ClientCertificateConfigs() GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) []GetClusterMasterAuthClientCertificateConfig {
		return v.ClientCertificateConfigs
	}).(GetClusterMasterAuthClientCertificateConfigArrayOutput)
}

func (o GetClusterMasterAuthOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o GetClusterMasterAuthOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

func (o GetClusterMasterAuthOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetClusterMasterAuthOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuth) string { return v.Username }).(pulumi.StringOutput)
}

type GetClusterMasterAuthArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuth)(nil)).Elem()
}

func (o GetClusterMasterAuthArrayOutput) ToGetClusterMasterAuthArrayOutput() GetClusterMasterAuthArrayOutput {
	return o
}

func (o GetClusterMasterAuthArrayOutput) ToGetClusterMasterAuthArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthArrayOutput {
	return o
}

func (o GetClusterMasterAuthArrayOutput) Index(i pulumi.IntInput) GetClusterMasterAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMasterAuth {
		return vs[0].([]GetClusterMasterAuth)[vs[1].(int)]
	}).(GetClusterMasterAuthOutput)
}

type GetClusterMasterAuthClientCertificateConfig struct {
	IssueClientCertificate bool `pulumi:"issueClientCertificate"`
}

type GetClusterMasterAuthClientCertificateConfigInput interface {
	pulumi.Input

	ToGetClusterMasterAuthClientCertificateConfigOutput() GetClusterMasterAuthClientCertificateConfigOutput
	ToGetClusterMasterAuthClientCertificateConfigOutputWithContext(context.Context) GetClusterMasterAuthClientCertificateConfigOutput
}

type GetClusterMasterAuthClientCertificateConfigArgs struct {
	IssueClientCertificate pulumi.BoolInput `pulumi:"issueClientCertificate"`
}

func (GetClusterMasterAuthClientCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (i GetClusterMasterAuthClientCertificateConfigArgs) ToGetClusterMasterAuthClientCertificateConfigOutput() GetClusterMasterAuthClientCertificateConfigOutput {
	return i.ToGetClusterMasterAuthClientCertificateConfigOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthClientCertificateConfigArgs) ToGetClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) GetClusterMasterAuthClientCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthClientCertificateConfigOutput)
}

type GetClusterMasterAuthClientCertificateConfigArrayInput interface {
	pulumi.Input

	ToGetClusterMasterAuthClientCertificateConfigArrayOutput() GetClusterMasterAuthClientCertificateConfigArrayOutput
	ToGetClusterMasterAuthClientCertificateConfigArrayOutputWithContext(context.Context) GetClusterMasterAuthClientCertificateConfigArrayOutput
}

type GetClusterMasterAuthClientCertificateConfigArray []GetClusterMasterAuthClientCertificateConfigInput

func (GetClusterMasterAuthClientCertificateConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (i GetClusterMasterAuthClientCertificateConfigArray) ToGetClusterMasterAuthClientCertificateConfigArrayOutput() GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return i.ToGetClusterMasterAuthClientCertificateConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthClientCertificateConfigArray) ToGetClusterMasterAuthClientCertificateConfigArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthClientCertificateConfigArrayOutput)
}

type GetClusterMasterAuthClientCertificateConfigOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthClientCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (o GetClusterMasterAuthClientCertificateConfigOutput) ToGetClusterMasterAuthClientCertificateConfigOutput() GetClusterMasterAuthClientCertificateConfigOutput {
	return o
}

func (o GetClusterMasterAuthClientCertificateConfigOutput) ToGetClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) GetClusterMasterAuthClientCertificateConfigOutput {
	return o
}

func (o GetClusterMasterAuthClientCertificateConfigOutput) IssueClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterMasterAuthClientCertificateConfig) bool { return v.IssueClientCertificate }).(pulumi.BoolOutput)
}

type GetClusterMasterAuthClientCertificateConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthClientCertificateConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (o GetClusterMasterAuthClientCertificateConfigArrayOutput) ToGetClusterMasterAuthClientCertificateConfigArrayOutput() GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return o
}

func (o GetClusterMasterAuthClientCertificateConfigArrayOutput) ToGetClusterMasterAuthClientCertificateConfigArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return o
}

func (o GetClusterMasterAuthClientCertificateConfigArrayOutput) Index(i pulumi.IntInput) GetClusterMasterAuthClientCertificateConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMasterAuthClientCertificateConfig {
		return vs[0].([]GetClusterMasterAuthClientCertificateConfig)[vs[1].(int)]
	}).(GetClusterMasterAuthClientCertificateConfigOutput)
}

type GetClusterMasterAuthorizedNetworksConfig struct {
	CidrBlocks []GetClusterMasterAuthorizedNetworksConfigCidrBlock `pulumi:"cidrBlocks"`
}

type GetClusterMasterAuthorizedNetworksConfigInput interface {
	pulumi.Input

	ToGetClusterMasterAuthorizedNetworksConfigOutput() GetClusterMasterAuthorizedNetworksConfigOutput
	ToGetClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Context) GetClusterMasterAuthorizedNetworksConfigOutput
}

type GetClusterMasterAuthorizedNetworksConfigArgs struct {
	CidrBlocks GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput `pulumi:"cidrBlocks"`
}

func (GetClusterMasterAuthorizedNetworksConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i GetClusterMasterAuthorizedNetworksConfigArgs) ToGetClusterMasterAuthorizedNetworksConfigOutput() GetClusterMasterAuthorizedNetworksConfigOutput {
	return i.ToGetClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthorizedNetworksConfigArgs) ToGetClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthorizedNetworksConfigOutput)
}

type GetClusterMasterAuthorizedNetworksConfigArrayInput interface {
	pulumi.Input

	ToGetClusterMasterAuthorizedNetworksConfigArrayOutput() GetClusterMasterAuthorizedNetworksConfigArrayOutput
	ToGetClusterMasterAuthorizedNetworksConfigArrayOutputWithContext(context.Context) GetClusterMasterAuthorizedNetworksConfigArrayOutput
}

type GetClusterMasterAuthorizedNetworksConfigArray []GetClusterMasterAuthorizedNetworksConfigInput

func (GetClusterMasterAuthorizedNetworksConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i GetClusterMasterAuthorizedNetworksConfigArray) ToGetClusterMasterAuthorizedNetworksConfigArrayOutput() GetClusterMasterAuthorizedNetworksConfigArrayOutput {
	return i.ToGetClusterMasterAuthorizedNetworksConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthorizedNetworksConfigArray) ToGetClusterMasterAuthorizedNetworksConfigArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthorizedNetworksConfigArrayOutput)
}

type GetClusterMasterAuthorizedNetworksConfigOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthorizedNetworksConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o GetClusterMasterAuthorizedNetworksConfigOutput) ToGetClusterMasterAuthorizedNetworksConfigOutput() GetClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigOutput) ToGetClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigOutput) CidrBlocks() GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o.ApplyT(func(v GetClusterMasterAuthorizedNetworksConfig) []GetClusterMasterAuthorizedNetworksConfigCidrBlock {
		return v.CidrBlocks
	}).(GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type GetClusterMasterAuthorizedNetworksConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthorizedNetworksConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o GetClusterMasterAuthorizedNetworksConfigArrayOutput) ToGetClusterMasterAuthorizedNetworksConfigArrayOutput() GetClusterMasterAuthorizedNetworksConfigArrayOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigArrayOutput) ToGetClusterMasterAuthorizedNetworksConfigArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigArrayOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigArrayOutput) Index(i pulumi.IntInput) GetClusterMasterAuthorizedNetworksConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMasterAuthorizedNetworksConfig {
		return vs[0].([]GetClusterMasterAuthorizedNetworksConfig)[vs[1].(int)]
	}).(GetClusterMasterAuthorizedNetworksConfigOutput)
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlock struct {
	CidrBlock   string `pulumi:"cidrBlock"`
	DisplayName string `pulumi:"displayName"`
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockInput interface {
	pulumi.Input

	ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput
	ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs struct {
	CidrBlock   pulumi.StringInput `pulumi:"cidrBlock"`
	DisplayName pulumi.StringInput `pulumi:"displayName"`
}

func (GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return i.ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput interface {
	pulumi.Input

	ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
	ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockArray []GetClusterMasterAuthorizedNetworksConfigCidrBlockInput

func (GetClusterMasterAuthorizedNetworksConfigCidrBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i GetClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return i.ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuthorizedNetworksConfigCidrBlock) string { return v.CidrBlock }).(pulumi.StringOutput)
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterAuthorizedNetworksConfigCidrBlock) string { return v.DisplayName }).(pulumi.StringOutput)
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToGetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) Index(i pulumi.IntInput) GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMasterAuthorizedNetworksConfigCidrBlock {
		return vs[0].([]GetClusterMasterAuthorizedNetworksConfigCidrBlock)[vs[1].(int)]
	}).(GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

type GetClusterNetworkPolicy struct {
	Enabled  bool   `pulumi:"enabled"`
	Provider string `pulumi:"provider"`
}

type GetClusterNetworkPolicyInput interface {
	pulumi.Input

	ToGetClusterNetworkPolicyOutput() GetClusterNetworkPolicyOutput
	ToGetClusterNetworkPolicyOutputWithContext(context.Context) GetClusterNetworkPolicyOutput
}

type GetClusterNetworkPolicyArgs struct {
	Enabled  pulumi.BoolInput   `pulumi:"enabled"`
	Provider pulumi.StringInput `pulumi:"provider"`
}

func (GetClusterNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNetworkPolicy)(nil)).Elem()
}

func (i GetClusterNetworkPolicyArgs) ToGetClusterNetworkPolicyOutput() GetClusterNetworkPolicyOutput {
	return i.ToGetClusterNetworkPolicyOutputWithContext(context.Background())
}

func (i GetClusterNetworkPolicyArgs) ToGetClusterNetworkPolicyOutputWithContext(ctx context.Context) GetClusterNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNetworkPolicyOutput)
}

type GetClusterNetworkPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterNetworkPolicyArrayOutput() GetClusterNetworkPolicyArrayOutput
	ToGetClusterNetworkPolicyArrayOutputWithContext(context.Context) GetClusterNetworkPolicyArrayOutput
}

type GetClusterNetworkPolicyArray []GetClusterNetworkPolicyInput

func (GetClusterNetworkPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNetworkPolicy)(nil)).Elem()
}

func (i GetClusterNetworkPolicyArray) ToGetClusterNetworkPolicyArrayOutput() GetClusterNetworkPolicyArrayOutput {
	return i.ToGetClusterNetworkPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterNetworkPolicyArray) ToGetClusterNetworkPolicyArrayOutputWithContext(ctx context.Context) GetClusterNetworkPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNetworkPolicyArrayOutput)
}

type GetClusterNetworkPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNetworkPolicy)(nil)).Elem()
}

func (o GetClusterNetworkPolicyOutput) ToGetClusterNetworkPolicyOutput() GetClusterNetworkPolicyOutput {
	return o
}

func (o GetClusterNetworkPolicyOutput) ToGetClusterNetworkPolicyOutputWithContext(ctx context.Context) GetClusterNetworkPolicyOutput {
	return o
}

func (o GetClusterNetworkPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNetworkPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetClusterNetworkPolicyOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNetworkPolicy) string { return v.Provider }).(pulumi.StringOutput)
}

type GetClusterNetworkPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNetworkPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNetworkPolicy)(nil)).Elem()
}

func (o GetClusterNetworkPolicyArrayOutput) ToGetClusterNetworkPolicyArrayOutput() GetClusterNetworkPolicyArrayOutput {
	return o
}

func (o GetClusterNetworkPolicyArrayOutput) ToGetClusterNetworkPolicyArrayOutputWithContext(ctx context.Context) GetClusterNetworkPolicyArrayOutput {
	return o
}

func (o GetClusterNetworkPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterNetworkPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNetworkPolicy {
		return vs[0].([]GetClusterNetworkPolicy)[vs[1].(int)]
	}).(GetClusterNetworkPolicyOutput)
}

type GetClusterNodeConfig struct {
	BootDiskKmsKey          string                                       `pulumi:"bootDiskKmsKey"`
	DiskSizeGb              int                                          `pulumi:"diskSizeGb"`
	DiskType                string                                       `pulumi:"diskType"`
	GuestAccelerators       []GetClusterNodeConfigGuestAccelerator       `pulumi:"guestAccelerators"`
	ImageType               string                                       `pulumi:"imageType"`
	Labels                  map[string]string                            `pulumi:"labels"`
	LocalSsdCount           int                                          `pulumi:"localSsdCount"`
	MachineType             string                                       `pulumi:"machineType"`
	Metadata                map[string]string                            `pulumi:"metadata"`
	MinCpuPlatform          string                                       `pulumi:"minCpuPlatform"`
	OauthScopes             []string                                     `pulumi:"oauthScopes"`
	Preemptible             bool                                         `pulumi:"preemptible"`
	SandboxConfigs          []GetClusterNodeConfigSandboxConfig          `pulumi:"sandboxConfigs"`
	ServiceAccount          string                                       `pulumi:"serviceAccount"`
	ShieldedInstanceConfigs []GetClusterNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfigs"`
	Tags                    []string                                     `pulumi:"tags"`
	Taints                  []GetClusterNodeConfigTaint                  `pulumi:"taints"`
	WorkloadMetadataConfigs []GetClusterNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfigs"`
}

type GetClusterNodeConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigOutput() GetClusterNodeConfigOutput
	ToGetClusterNodeConfigOutputWithContext(context.Context) GetClusterNodeConfigOutput
}

type GetClusterNodeConfigArgs struct {
	BootDiskKmsKey          pulumi.StringInput                                   `pulumi:"bootDiskKmsKey"`
	DiskSizeGb              pulumi.IntInput                                      `pulumi:"diskSizeGb"`
	DiskType                pulumi.StringInput                                   `pulumi:"diskType"`
	GuestAccelerators       GetClusterNodeConfigGuestAcceleratorArrayInput       `pulumi:"guestAccelerators"`
	ImageType               pulumi.StringInput                                   `pulumi:"imageType"`
	Labels                  pulumi.StringMapInput                                `pulumi:"labels"`
	LocalSsdCount           pulumi.IntInput                                      `pulumi:"localSsdCount"`
	MachineType             pulumi.StringInput                                   `pulumi:"machineType"`
	Metadata                pulumi.StringMapInput                                `pulumi:"metadata"`
	MinCpuPlatform          pulumi.StringInput                                   `pulumi:"minCpuPlatform"`
	OauthScopes             pulumi.StringArrayInput                              `pulumi:"oauthScopes"`
	Preemptible             pulumi.BoolInput                                     `pulumi:"preemptible"`
	SandboxConfigs          GetClusterNodeConfigSandboxConfigArrayInput          `pulumi:"sandboxConfigs"`
	ServiceAccount          pulumi.StringInput                                   `pulumi:"serviceAccount"`
	ShieldedInstanceConfigs GetClusterNodeConfigShieldedInstanceConfigArrayInput `pulumi:"shieldedInstanceConfigs"`
	Tags                    pulumi.StringArrayInput                              `pulumi:"tags"`
	Taints                  GetClusterNodeConfigTaintArrayInput                  `pulumi:"taints"`
	WorkloadMetadataConfigs GetClusterNodeConfigWorkloadMetadataConfigArrayInput `pulumi:"workloadMetadataConfigs"`
}

func (GetClusterNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigArgs) ToGetClusterNodeConfigOutput() GetClusterNodeConfigOutput {
	return i.ToGetClusterNodeConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigArgs) ToGetClusterNodeConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigOutput)
}

type GetClusterNodeConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigArrayOutput() GetClusterNodeConfigArrayOutput
	ToGetClusterNodeConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigArrayOutput
}

type GetClusterNodeConfigArray []GetClusterNodeConfigInput

func (GetClusterNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigArray) ToGetClusterNodeConfigArrayOutput() GetClusterNodeConfigArrayOutput {
	return i.ToGetClusterNodeConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigArray) ToGetClusterNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigArrayOutput)
}

type GetClusterNodeConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigOutput) ToGetClusterNodeConfigOutput() GetClusterNodeConfigOutput {
	return o
}

func (o GetClusterNodeConfigOutput) ToGetClusterNodeConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigOutput {
	return o
}

func (o GetClusterNodeConfigOutput) BootDiskKmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.BootDiskKmsKey }).(pulumi.StringOutput)
}

func (o GetClusterNodeConfigOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

func (o GetClusterNodeConfigOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o GetClusterNodeConfigOutput) GuestAccelerators() GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigGuestAccelerator { return v.GuestAccelerators }).(GetClusterNodeConfigGuestAcceleratorArrayOutput)
}

func (o GetClusterNodeConfigOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o GetClusterNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o GetClusterNodeConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

func (o GetClusterNodeConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o GetClusterNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o GetClusterNodeConfigOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.MinCpuPlatform }).(pulumi.StringOutput)
}

func (o GetClusterNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o GetClusterNodeConfigOutput) Preemptible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) bool { return v.Preemptible }).(pulumi.BoolOutput)
}

func (o GetClusterNodeConfigOutput) SandboxConfigs() GetClusterNodeConfigSandboxConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigSandboxConfig { return v.SandboxConfigs }).(GetClusterNodeConfigSandboxConfigArrayOutput)
}

func (o GetClusterNodeConfigOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

func (o GetClusterNodeConfigOutput) ShieldedInstanceConfigs() GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigShieldedInstanceConfig {
		return v.ShieldedInstanceConfigs
	}).(GetClusterNodeConfigShieldedInstanceConfigArrayOutput)
}

func (o GetClusterNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetClusterNodeConfigOutput) Taints() GetClusterNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigTaint { return v.Taints }).(GetClusterNodeConfigTaintArrayOutput)
}

func (o GetClusterNodeConfigOutput) WorkloadMetadataConfigs() GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodeConfig) []GetClusterNodeConfigWorkloadMetadataConfig {
		return v.WorkloadMetadataConfigs
	}).(GetClusterNodeConfigWorkloadMetadataConfigArrayOutput)
}

type GetClusterNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigArrayOutput) ToGetClusterNodeConfigArrayOutput() GetClusterNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigArrayOutput) ToGetClusterNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfig {
		return vs[0].([]GetClusterNodeConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigOutput)
}

type GetClusterNodeConfigGuestAccelerator struct {
	Count int    `pulumi:"count"`
	Type  string `pulumi:"type"`
}

type GetClusterNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGuestAcceleratorOutput() GetClusterNodeConfigGuestAcceleratorOutput
	ToGetClusterNodeConfigGuestAcceleratorOutputWithContext(context.Context) GetClusterNodeConfigGuestAcceleratorOutput
}

type GetClusterNodeConfigGuestAcceleratorArgs struct {
	Count pulumi.IntInput    `pulumi:"count"`
	Type  pulumi.StringInput `pulumi:"type"`
}

func (GetClusterNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i GetClusterNodeConfigGuestAcceleratorArgs) ToGetClusterNodeConfigGuestAcceleratorOutput() GetClusterNodeConfigGuestAcceleratorOutput {
	return i.ToGetClusterNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGuestAcceleratorArgs) ToGetClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGuestAcceleratorOutput)
}

type GetClusterNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigGuestAcceleratorArrayOutput() GetClusterNodeConfigGuestAcceleratorArrayOutput
	ToGetClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) GetClusterNodeConfigGuestAcceleratorArrayOutput
}

type GetClusterNodeConfigGuestAcceleratorArray []GetClusterNodeConfigGuestAcceleratorInput

func (GetClusterNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i GetClusterNodeConfigGuestAcceleratorArray) ToGetClusterNodeConfigGuestAcceleratorArrayOutput() GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return i.ToGetClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigGuestAcceleratorArray) ToGetClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigGuestAcceleratorArrayOutput)
}

type GetClusterNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o GetClusterNodeConfigGuestAcceleratorOutput) ToGetClusterNodeConfigGuestAcceleratorOutput() GetClusterNodeConfigGuestAcceleratorOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorOutput) ToGetClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

func (o GetClusterNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o GetClusterNodeConfigGuestAcceleratorArrayOutput) ToGetClusterNodeConfigGuestAcceleratorArrayOutput() GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorArrayOutput) ToGetClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o GetClusterNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigGuestAccelerator {
		return vs[0].([]GetClusterNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(GetClusterNodeConfigGuestAcceleratorOutput)
}

type GetClusterNodeConfigSandboxConfig struct {
	SandboxType string `pulumi:"sandboxType"`
}

type GetClusterNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSandboxConfigOutput() GetClusterNodeConfigSandboxConfigOutput
	ToGetClusterNodeConfigSandboxConfigOutputWithContext(context.Context) GetClusterNodeConfigSandboxConfigOutput
}

type GetClusterNodeConfigSandboxConfigArgs struct {
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (GetClusterNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigSandboxConfigArgs) ToGetClusterNodeConfigSandboxConfigOutput() GetClusterNodeConfigSandboxConfigOutput {
	return i.ToGetClusterNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSandboxConfigArgs) ToGetClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSandboxConfigOutput)
}

type GetClusterNodeConfigSandboxConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigSandboxConfigArrayOutput() GetClusterNodeConfigSandboxConfigArrayOutput
	ToGetClusterNodeConfigSandboxConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigSandboxConfigArrayOutput
}

type GetClusterNodeConfigSandboxConfigArray []GetClusterNodeConfigSandboxConfigInput

func (GetClusterNodeConfigSandboxConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigSandboxConfigArray) ToGetClusterNodeConfigSandboxConfigArrayOutput() GetClusterNodeConfigSandboxConfigArrayOutput {
	return i.ToGetClusterNodeConfigSandboxConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigSandboxConfigArray) ToGetClusterNodeConfigSandboxConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSandboxConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigSandboxConfigArrayOutput)
}

type GetClusterNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigSandboxConfigOutput) ToGetClusterNodeConfigSandboxConfigOutput() GetClusterNodeConfigSandboxConfigOutput {
	return o
}

func (o GetClusterNodeConfigSandboxConfigOutput) ToGetClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigSandboxConfigOutput {
	return o
}

func (o GetClusterNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type GetClusterNodeConfigSandboxConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigSandboxConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigSandboxConfigArrayOutput) ToGetClusterNodeConfigSandboxConfigArrayOutput() GetClusterNodeConfigSandboxConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigSandboxConfigArrayOutput) ToGetClusterNodeConfigSandboxConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigSandboxConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigSandboxConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigSandboxConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigSandboxConfig {
		return vs[0].([]GetClusterNodeConfigSandboxConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigSandboxConfigOutput)
}

type GetClusterNodeConfigShieldedInstanceConfig struct {
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          bool `pulumi:"enableSecureBoot"`
}

type GetClusterNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigShieldedInstanceConfigOutput() GetClusterNodeConfigShieldedInstanceConfigOutput
	ToGetClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) GetClusterNodeConfigShieldedInstanceConfigOutput
}

type GetClusterNodeConfigShieldedInstanceConfigArgs struct {
	EnableIntegrityMonitoring pulumi.BoolInput `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          pulumi.BoolInput `pulumi:"enableSecureBoot"`
}

func (GetClusterNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigShieldedInstanceConfigArgs) ToGetClusterNodeConfigShieldedInstanceConfigOutput() GetClusterNodeConfigShieldedInstanceConfigOutput {
	return i.ToGetClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigShieldedInstanceConfigArgs) ToGetClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigShieldedInstanceConfigOutput)
}

type GetClusterNodeConfigShieldedInstanceConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodeConfigShieldedInstanceConfigArrayOutput
	ToGetClusterNodeConfigShieldedInstanceConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigShieldedInstanceConfigArrayOutput
}

type GetClusterNodeConfigShieldedInstanceConfigArray []GetClusterNodeConfigShieldedInstanceConfigInput

func (GetClusterNodeConfigShieldedInstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigShieldedInstanceConfigArray) ToGetClusterNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return i.ToGetClusterNodeConfigShieldedInstanceConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigShieldedInstanceConfigArray) ToGetClusterNodeConfigShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigShieldedInstanceConfigArrayOutput)
}

type GetClusterNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigShieldedInstanceConfigOutput) ToGetClusterNodeConfigShieldedInstanceConfigOutput() GetClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o GetClusterNodeConfigShieldedInstanceConfigOutput) ToGetClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o GetClusterNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigShieldedInstanceConfig) bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolOutput)
}

func (o GetClusterNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodeConfigShieldedInstanceConfig) bool { return v.EnableSecureBoot }).(pulumi.BoolOutput)
}

type GetClusterNodeConfigShieldedInstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigShieldedInstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigShieldedInstanceConfigArrayOutput) ToGetClusterNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigShieldedInstanceConfigArrayOutput) ToGetClusterNodeConfigShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigShieldedInstanceConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigShieldedInstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigShieldedInstanceConfig {
		return vs[0].([]GetClusterNodeConfigShieldedInstanceConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigShieldedInstanceConfigOutput)
}

type GetClusterNodeConfigTaint struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

type GetClusterNodeConfigTaintInput interface {
	pulumi.Input

	ToGetClusterNodeConfigTaintOutput() GetClusterNodeConfigTaintOutput
	ToGetClusterNodeConfigTaintOutputWithContext(context.Context) GetClusterNodeConfigTaintOutput
}

type GetClusterNodeConfigTaintArgs struct {
	Effect pulumi.StringInput `pulumi:"effect"`
	Key    pulumi.StringInput `pulumi:"key"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (GetClusterNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigTaint)(nil)).Elem()
}

func (i GetClusterNodeConfigTaintArgs) ToGetClusterNodeConfigTaintOutput() GetClusterNodeConfigTaintOutput {
	return i.ToGetClusterNodeConfigTaintOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigTaintArgs) ToGetClusterNodeConfigTaintOutputWithContext(ctx context.Context) GetClusterNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigTaintOutput)
}

type GetClusterNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigTaintArrayOutput() GetClusterNodeConfigTaintArrayOutput
	ToGetClusterNodeConfigTaintArrayOutputWithContext(context.Context) GetClusterNodeConfigTaintArrayOutput
}

type GetClusterNodeConfigTaintArray []GetClusterNodeConfigTaintInput

func (GetClusterNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigTaint)(nil)).Elem()
}

func (i GetClusterNodeConfigTaintArray) ToGetClusterNodeConfigTaintArrayOutput() GetClusterNodeConfigTaintArrayOutput {
	return i.ToGetClusterNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigTaintArray) ToGetClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigTaintArrayOutput)
}

type GetClusterNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigTaint)(nil)).Elem()
}

func (o GetClusterNodeConfigTaintOutput) ToGetClusterNodeConfigTaintOutput() GetClusterNodeConfigTaintOutput {
	return o
}

func (o GetClusterNodeConfigTaintOutput) ToGetClusterNodeConfigTaintOutputWithContext(ctx context.Context) GetClusterNodeConfigTaintOutput {
	return o
}

func (o GetClusterNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

func (o GetClusterNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetClusterNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigTaint)(nil)).Elem()
}

func (o GetClusterNodeConfigTaintArrayOutput) ToGetClusterNodeConfigTaintArrayOutput() GetClusterNodeConfigTaintArrayOutput {
	return o
}

func (o GetClusterNodeConfigTaintArrayOutput) ToGetClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigTaintArrayOutput {
	return o
}

func (o GetClusterNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigTaint {
		return vs[0].([]GetClusterNodeConfigTaint)[vs[1].(int)]
	}).(GetClusterNodeConfigTaintOutput)
}

type GetClusterNodeConfigWorkloadMetadataConfig struct {
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type GetClusterNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToGetClusterNodeConfigWorkloadMetadataConfigOutput() GetClusterNodeConfigWorkloadMetadataConfigOutput
	ToGetClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) GetClusterNodeConfigWorkloadMetadataConfigOutput
}

type GetClusterNodeConfigWorkloadMetadataConfigArgs struct {
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (GetClusterNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigWorkloadMetadataConfigArgs) ToGetClusterNodeConfigWorkloadMetadataConfigOutput() GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return i.ToGetClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigWorkloadMetadataConfigArgs) ToGetClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigWorkloadMetadataConfigOutput)
}

type GetClusterNodeConfigWorkloadMetadataConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodeConfigWorkloadMetadataConfigArrayOutput
	ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutputWithContext(context.Context) GetClusterNodeConfigWorkloadMetadataConfigArrayOutput
}

type GetClusterNodeConfigWorkloadMetadataConfigArray []GetClusterNodeConfigWorkloadMetadataConfigInput

func (GetClusterNodeConfigWorkloadMetadataConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i GetClusterNodeConfigWorkloadMetadataConfigArray) ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return i.ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodeConfigWorkloadMetadataConfigArray) ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodeConfigWorkloadMetadataConfigArrayOutput)
}

type GetClusterNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigWorkloadMetadataConfigOutput) ToGetClusterNodeConfigWorkloadMetadataConfigOutput() GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o GetClusterNodeConfigWorkloadMetadataConfigOutput) ToGetClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o GetClusterNodeConfigWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type GetClusterNodeConfigWorkloadMetadataConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodeConfigWorkloadMetadataConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o GetClusterNodeConfigWorkloadMetadataConfigArrayOutput) ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigWorkloadMetadataConfigArrayOutput) ToGetClusterNodeConfigWorkloadMetadataConfigArrayOutputWithContext(ctx context.Context) GetClusterNodeConfigWorkloadMetadataConfigArrayOutput {
	return o
}

func (o GetClusterNodeConfigWorkloadMetadataConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodeConfigWorkloadMetadataConfig {
		return vs[0].([]GetClusterNodeConfigWorkloadMetadataConfig)[vs[1].(int)]
	}).(GetClusterNodeConfigWorkloadMetadataConfigOutput)
}

type GetClusterNodePool struct {
	Autoscalings      []GetClusterNodePoolAutoscaling `pulumi:"autoscalings"`
	InitialNodeCount  int                             `pulumi:"initialNodeCount"`
	InstanceGroupUrls []string                        `pulumi:"instanceGroupUrls"`
	Managements       []GetClusterNodePoolManagement  `pulumi:"managements"`
	MaxPodsPerNode    int                             `pulumi:"maxPodsPerNode"`
	// The name of the cluster.
	Name            string                             `pulumi:"name"`
	NamePrefix      string                             `pulumi:"namePrefix"`
	NodeConfigs     []GetClusterNodePoolNodeConfig     `pulumi:"nodeConfigs"`
	NodeCount       int                                `pulumi:"nodeCount"`
	NodeLocations   []string                           `pulumi:"nodeLocations"`
	UpgradeSettings []GetClusterNodePoolUpgradeSetting `pulumi:"upgradeSettings"`
	Version         string                             `pulumi:"version"`
}

type GetClusterNodePoolInput interface {
	pulumi.Input

	ToGetClusterNodePoolOutput() GetClusterNodePoolOutput
	ToGetClusterNodePoolOutputWithContext(context.Context) GetClusterNodePoolOutput
}

type GetClusterNodePoolArgs struct {
	Autoscalings      GetClusterNodePoolAutoscalingArrayInput `pulumi:"autoscalings"`
	InitialNodeCount  pulumi.IntInput                         `pulumi:"initialNodeCount"`
	InstanceGroupUrls pulumi.StringArrayInput                 `pulumi:"instanceGroupUrls"`
	Managements       GetClusterNodePoolManagementArrayInput  `pulumi:"managements"`
	MaxPodsPerNode    pulumi.IntInput                         `pulumi:"maxPodsPerNode"`
	// The name of the cluster.
	Name            pulumi.StringInput                         `pulumi:"name"`
	NamePrefix      pulumi.StringInput                         `pulumi:"namePrefix"`
	NodeConfigs     GetClusterNodePoolNodeConfigArrayInput     `pulumi:"nodeConfigs"`
	NodeCount       pulumi.IntInput                            `pulumi:"nodeCount"`
	NodeLocations   pulumi.StringArrayInput                    `pulumi:"nodeLocations"`
	UpgradeSettings GetClusterNodePoolUpgradeSettingArrayInput `pulumi:"upgradeSettings"`
	Version         pulumi.StringInput                         `pulumi:"version"`
}

func (GetClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePool)(nil)).Elem()
}

func (i GetClusterNodePoolArgs) ToGetClusterNodePoolOutput() GetClusterNodePoolOutput {
	return i.ToGetClusterNodePoolOutputWithContext(context.Background())
}

func (i GetClusterNodePoolArgs) ToGetClusterNodePoolOutputWithContext(ctx context.Context) GetClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolOutput)
}

type GetClusterNodePoolArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolArrayOutput() GetClusterNodePoolArrayOutput
	ToGetClusterNodePoolArrayOutputWithContext(context.Context) GetClusterNodePoolArrayOutput
}

type GetClusterNodePoolArray []GetClusterNodePoolInput

func (GetClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePool)(nil)).Elem()
}

func (i GetClusterNodePoolArray) ToGetClusterNodePoolArrayOutput() GetClusterNodePoolArrayOutput {
	return i.ToGetClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolArray) ToGetClusterNodePoolArrayOutputWithContext(ctx context.Context) GetClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolArrayOutput)
}

type GetClusterNodePoolOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePool)(nil)).Elem()
}

func (o GetClusterNodePoolOutput) ToGetClusterNodePoolOutput() GetClusterNodePoolOutput {
	return o
}

func (o GetClusterNodePoolOutput) ToGetClusterNodePoolOutputWithContext(ctx context.Context) GetClusterNodePoolOutput {
	return o
}

func (o GetClusterNodePoolOutput) Autoscalings() GetClusterNodePoolAutoscalingArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolAutoscaling { return v.Autoscalings }).(GetClusterNodePoolAutoscalingArrayOutput)
}

func (o GetClusterNodePoolOutput) InitialNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePool) int { return v.InitialNodeCount }).(pulumi.IntOutput)
}

func (o GetClusterNodePoolOutput) InstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []string { return v.InstanceGroupUrls }).(pulumi.StringArrayOutput)
}

func (o GetClusterNodePoolOutput) Managements() GetClusterNodePoolManagementArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolManagement { return v.Managements }).(GetClusterNodePoolManagementArrayOutput)
}

func (o GetClusterNodePoolOutput) MaxPodsPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePool) int { return v.MaxPodsPerNode }).(pulumi.IntOutput)
}

// The name of the cluster.
func (o GetClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePool) string { return v.NamePrefix }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolOutput) NodeConfigs() GetClusterNodePoolNodeConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolNodeConfig { return v.NodeConfigs }).(GetClusterNodePoolNodeConfigArrayOutput)
}

func (o GetClusterNodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePool) int { return v.NodeCount }).(pulumi.IntOutput)
}

func (o GetClusterNodePoolOutput) NodeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []string { return v.NodeLocations }).(pulumi.StringArrayOutput)
}

func (o GetClusterNodePoolOutput) UpgradeSettings() GetClusterNodePoolUpgradeSettingArrayOutput {
	return o.ApplyT(func(v GetClusterNodePool) []GetClusterNodePoolUpgradeSetting { return v.UpgradeSettings }).(GetClusterNodePoolUpgradeSettingArrayOutput)
}

func (o GetClusterNodePoolOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePool) string { return v.Version }).(pulumi.StringOutput)
}

type GetClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePool)(nil)).Elem()
}

func (o GetClusterNodePoolArrayOutput) ToGetClusterNodePoolArrayOutput() GetClusterNodePoolArrayOutput {
	return o
}

func (o GetClusterNodePoolArrayOutput) ToGetClusterNodePoolArrayOutputWithContext(ctx context.Context) GetClusterNodePoolArrayOutput {
	return o
}

func (o GetClusterNodePoolArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePool {
		return vs[0].([]GetClusterNodePool)[vs[1].(int)]
	}).(GetClusterNodePoolOutput)
}

type GetClusterNodePoolAutoscaling struct {
	MaxNodeCount int `pulumi:"maxNodeCount"`
	MinNodeCount int `pulumi:"minNodeCount"`
}

type GetClusterNodePoolAutoscalingInput interface {
	pulumi.Input

	ToGetClusterNodePoolAutoscalingOutput() GetClusterNodePoolAutoscalingOutput
	ToGetClusterNodePoolAutoscalingOutputWithContext(context.Context) GetClusterNodePoolAutoscalingOutput
}

type GetClusterNodePoolAutoscalingArgs struct {
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (GetClusterNodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i GetClusterNodePoolAutoscalingArgs) ToGetClusterNodePoolAutoscalingOutput() GetClusterNodePoolAutoscalingOutput {
	return i.ToGetClusterNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i GetClusterNodePoolAutoscalingArgs) ToGetClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) GetClusterNodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolAutoscalingOutput)
}

type GetClusterNodePoolAutoscalingArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolAutoscalingArrayOutput() GetClusterNodePoolAutoscalingArrayOutput
	ToGetClusterNodePoolAutoscalingArrayOutputWithContext(context.Context) GetClusterNodePoolAutoscalingArrayOutput
}

type GetClusterNodePoolAutoscalingArray []GetClusterNodePoolAutoscalingInput

func (GetClusterNodePoolAutoscalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i GetClusterNodePoolAutoscalingArray) ToGetClusterNodePoolAutoscalingArrayOutput() GetClusterNodePoolAutoscalingArrayOutput {
	return i.ToGetClusterNodePoolAutoscalingArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolAutoscalingArray) ToGetClusterNodePoolAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolAutoscalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolAutoscalingArrayOutput)
}

type GetClusterNodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o GetClusterNodePoolAutoscalingOutput) ToGetClusterNodePoolAutoscalingOutput() GetClusterNodePoolAutoscalingOutput {
	return o
}

func (o GetClusterNodePoolAutoscalingOutput) ToGetClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) GetClusterNodePoolAutoscalingOutput {
	return o
}

func (o GetClusterNodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

func (o GetClusterNodePoolAutoscalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type GetClusterNodePoolAutoscalingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolAutoscalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o GetClusterNodePoolAutoscalingArrayOutput) ToGetClusterNodePoolAutoscalingArrayOutput() GetClusterNodePoolAutoscalingArrayOutput {
	return o
}

func (o GetClusterNodePoolAutoscalingArrayOutput) ToGetClusterNodePoolAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolAutoscalingArrayOutput {
	return o
}

func (o GetClusterNodePoolAutoscalingArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolAutoscalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolAutoscaling {
		return vs[0].([]GetClusterNodePoolAutoscaling)[vs[1].(int)]
	}).(GetClusterNodePoolAutoscalingOutput)
}

type GetClusterNodePoolManagement struct {
	AutoRepair  bool `pulumi:"autoRepair"`
	AutoUpgrade bool `pulumi:"autoUpgrade"`
}

type GetClusterNodePoolManagementInput interface {
	pulumi.Input

	ToGetClusterNodePoolManagementOutput() GetClusterNodePoolManagementOutput
	ToGetClusterNodePoolManagementOutputWithContext(context.Context) GetClusterNodePoolManagementOutput
}

type GetClusterNodePoolManagementArgs struct {
	AutoRepair  pulumi.BoolInput `pulumi:"autoRepair"`
	AutoUpgrade pulumi.BoolInput `pulumi:"autoUpgrade"`
}

func (GetClusterNodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolManagement)(nil)).Elem()
}

func (i GetClusterNodePoolManagementArgs) ToGetClusterNodePoolManagementOutput() GetClusterNodePoolManagementOutput {
	return i.ToGetClusterNodePoolManagementOutputWithContext(context.Background())
}

func (i GetClusterNodePoolManagementArgs) ToGetClusterNodePoolManagementOutputWithContext(ctx context.Context) GetClusterNodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolManagementOutput)
}

type GetClusterNodePoolManagementArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolManagementArrayOutput() GetClusterNodePoolManagementArrayOutput
	ToGetClusterNodePoolManagementArrayOutputWithContext(context.Context) GetClusterNodePoolManagementArrayOutput
}

type GetClusterNodePoolManagementArray []GetClusterNodePoolManagementInput

func (GetClusterNodePoolManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolManagement)(nil)).Elem()
}

func (i GetClusterNodePoolManagementArray) ToGetClusterNodePoolManagementArrayOutput() GetClusterNodePoolManagementArrayOutput {
	return i.ToGetClusterNodePoolManagementArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolManagementArray) ToGetClusterNodePoolManagementArrayOutputWithContext(ctx context.Context) GetClusterNodePoolManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolManagementArrayOutput)
}

type GetClusterNodePoolManagementOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolManagement)(nil)).Elem()
}

func (o GetClusterNodePoolManagementOutput) ToGetClusterNodePoolManagementOutput() GetClusterNodePoolManagementOutput {
	return o
}

func (o GetClusterNodePoolManagementOutput) ToGetClusterNodePoolManagementOutputWithContext(ctx context.Context) GetClusterNodePoolManagementOutput {
	return o
}

func (o GetClusterNodePoolManagementOutput) AutoRepair() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolManagement) bool { return v.AutoRepair }).(pulumi.BoolOutput)
}

func (o GetClusterNodePoolManagementOutput) AutoUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolManagement) bool { return v.AutoUpgrade }).(pulumi.BoolOutput)
}

type GetClusterNodePoolManagementArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolManagement)(nil)).Elem()
}

func (o GetClusterNodePoolManagementArrayOutput) ToGetClusterNodePoolManagementArrayOutput() GetClusterNodePoolManagementArrayOutput {
	return o
}

func (o GetClusterNodePoolManagementArrayOutput) ToGetClusterNodePoolManagementArrayOutputWithContext(ctx context.Context) GetClusterNodePoolManagementArrayOutput {
	return o
}

func (o GetClusterNodePoolManagementArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolManagement {
		return vs[0].([]GetClusterNodePoolManagement)[vs[1].(int)]
	}).(GetClusterNodePoolManagementOutput)
}

type GetClusterNodePoolNodeConfig struct {
	BootDiskKmsKey          string                                               `pulumi:"bootDiskKmsKey"`
	DiskSizeGb              int                                                  `pulumi:"diskSizeGb"`
	DiskType                string                                               `pulumi:"diskType"`
	GuestAccelerators       []GetClusterNodePoolNodeConfigGuestAccelerator       `pulumi:"guestAccelerators"`
	ImageType               string                                               `pulumi:"imageType"`
	Labels                  map[string]string                                    `pulumi:"labels"`
	LocalSsdCount           int                                                  `pulumi:"localSsdCount"`
	MachineType             string                                               `pulumi:"machineType"`
	Metadata                map[string]string                                    `pulumi:"metadata"`
	MinCpuPlatform          string                                               `pulumi:"minCpuPlatform"`
	OauthScopes             []string                                             `pulumi:"oauthScopes"`
	Preemptible             bool                                                 `pulumi:"preemptible"`
	SandboxConfigs          []GetClusterNodePoolNodeConfigSandboxConfig          `pulumi:"sandboxConfigs"`
	ServiceAccount          string                                               `pulumi:"serviceAccount"`
	ShieldedInstanceConfigs []GetClusterNodePoolNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfigs"`
	Tags                    []string                                             `pulumi:"tags"`
	Taints                  []GetClusterNodePoolNodeConfigTaint                  `pulumi:"taints"`
	WorkloadMetadataConfigs []GetClusterNodePoolNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfigs"`
}

type GetClusterNodePoolNodeConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigOutput() GetClusterNodePoolNodeConfigOutput
	ToGetClusterNodePoolNodeConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigOutput
}

type GetClusterNodePoolNodeConfigArgs struct {
	BootDiskKmsKey          pulumi.StringInput                                           `pulumi:"bootDiskKmsKey"`
	DiskSizeGb              pulumi.IntInput                                              `pulumi:"diskSizeGb"`
	DiskType                pulumi.StringInput                                           `pulumi:"diskType"`
	GuestAccelerators       GetClusterNodePoolNodeConfigGuestAcceleratorArrayInput       `pulumi:"guestAccelerators"`
	ImageType               pulumi.StringInput                                           `pulumi:"imageType"`
	Labels                  pulumi.StringMapInput                                        `pulumi:"labels"`
	LocalSsdCount           pulumi.IntInput                                              `pulumi:"localSsdCount"`
	MachineType             pulumi.StringInput                                           `pulumi:"machineType"`
	Metadata                pulumi.StringMapInput                                        `pulumi:"metadata"`
	MinCpuPlatform          pulumi.StringInput                                           `pulumi:"minCpuPlatform"`
	OauthScopes             pulumi.StringArrayInput                                      `pulumi:"oauthScopes"`
	Preemptible             pulumi.BoolInput                                             `pulumi:"preemptible"`
	SandboxConfigs          GetClusterNodePoolNodeConfigSandboxConfigArrayInput          `pulumi:"sandboxConfigs"`
	ServiceAccount          pulumi.StringInput                                           `pulumi:"serviceAccount"`
	ShieldedInstanceConfigs GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayInput `pulumi:"shieldedInstanceConfigs"`
	Tags                    pulumi.StringArrayInput                                      `pulumi:"tags"`
	Taints                  GetClusterNodePoolNodeConfigTaintArrayInput                  `pulumi:"taints"`
	WorkloadMetadataConfigs GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayInput `pulumi:"workloadMetadataConfigs"`
}

func (GetClusterNodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigArgs) ToGetClusterNodePoolNodeConfigOutput() GetClusterNodePoolNodeConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigArgs) ToGetClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigOutput)
}

type GetClusterNodePoolNodeConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigArrayOutput() GetClusterNodePoolNodeConfigArrayOutput
	ToGetClusterNodePoolNodeConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigArrayOutput
}

type GetClusterNodePoolNodeConfigArray []GetClusterNodePoolNodeConfigInput

func (GetClusterNodePoolNodeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigArray) ToGetClusterNodePoolNodeConfigArrayOutput() GetClusterNodePoolNodeConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigArray) ToGetClusterNodePoolNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigOutput) ToGetClusterNodePoolNodeConfigOutput() GetClusterNodePoolNodeConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigOutput) ToGetClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigOutput) BootDiskKmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.BootDiskKmsKey }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) GuestAccelerators() GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigGuestAccelerator {
		return v.GuestAccelerators
	}).(GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) LocalSsdCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) int { return v.LocalSsdCount }).(pulumi.IntOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.MachineType }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.MinCpuPlatform }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) Preemptible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) bool { return v.Preemptible }).(pulumi.BoolOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) SandboxConfigs() GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigSandboxConfig {
		return v.SandboxConfigs
	}).(GetClusterNodePoolNodeConfigSandboxConfigArrayOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) ShieldedInstanceConfigs() GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigShieldedInstanceConfig {
		return v.ShieldedInstanceConfigs
	}).(GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) Taints() GetClusterNodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigTaint { return v.Taints }).(GetClusterNodePoolNodeConfigTaintArrayOutput)
}

func (o GetClusterNodePoolNodeConfigOutput) WorkloadMetadataConfigs() GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfig) []GetClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return v.WorkloadMetadataConfigs
	}).(GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigArrayOutput) ToGetClusterNodePoolNodeConfigArrayOutput() GetClusterNodePoolNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigArrayOutput) ToGetClusterNodePoolNodeConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfig {
		return vs[0].([]GetClusterNodePoolNodeConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigOutput)
}

type GetClusterNodePoolNodeConfigGuestAccelerator struct {
	Count int    `pulumi:"count"`
	Type  string `pulumi:"type"`
}

type GetClusterNodePoolNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGuestAcceleratorOutput() GetClusterNodePoolNodeConfigGuestAcceleratorOutput
	ToGetClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorOutput
}

type GetClusterNodePoolNodeConfigGuestAcceleratorArgs struct {
	Count pulumi.IntInput    `pulumi:"count"`
	Type  pulumi.StringInput `pulumi:"type"`
}

func (GetClusterNodePoolNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorArgs) ToGetClusterNodePoolNodeConfigGuestAcceleratorOutput() GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return i.ToGetClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorArgs) ToGetClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
	ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
}

type GetClusterNodePoolNodeConfigGuestAcceleratorArray []GetClusterNodePoolNodeConfigGuestAcceleratorInput

func (GetClusterNodePoolNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorArray) ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigGuestAcceleratorArray) ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorOutput() GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToGetClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigGuestAccelerator {
		return vs[0].([]GetClusterNodePoolNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

type GetClusterNodePoolNodeConfigSandboxConfig struct {
	SandboxType string `pulumi:"sandboxType"`
}

type GetClusterNodePoolNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSandboxConfigOutput() GetClusterNodePoolNodeConfigSandboxConfigOutput
	ToGetClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSandboxConfigOutput
}

type GetClusterNodePoolNodeConfigSandboxConfigArgs struct {
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (GetClusterNodePoolNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSandboxConfigArgs) ToGetClusterNodePoolNodeConfigSandboxConfigOutput() GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSandboxConfigArgs) ToGetClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSandboxConfigOutput)
}

type GetClusterNodePoolNodeConfigSandboxConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutput() GetClusterNodePoolNodeConfigSandboxConfigArrayOutput
	ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigSandboxConfigArrayOutput
}

type GetClusterNodePoolNodeConfigSandboxConfigArray []GetClusterNodePoolNodeConfigSandboxConfigInput

func (GetClusterNodePoolNodeConfigSandboxConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigSandboxConfigArray) ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutput() GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigSandboxConfigArray) ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigSandboxConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSandboxConfigOutput) ToGetClusterNodePoolNodeConfigSandboxConfigOutput() GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSandboxConfigOutput) ToGetClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigSandboxConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigSandboxConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigSandboxConfigArrayOutput) ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutput() GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSandboxConfigArrayOutput) ToGetClusterNodePoolNodeConfigSandboxConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigSandboxConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigSandboxConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigSandboxConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigSandboxConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigSandboxConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigSandboxConfigOutput)
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfig struct {
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          bool `pulumi:"enableSecureBoot"`
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput
	ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs struct {
	EnableIntegrityMonitoring pulumi.BoolInput `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          pulumi.BoolInput `pulumi:"enableSecureBoot"`
}

func (GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput
	ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigArray []GetClusterNodePoolNodeConfigShieldedInstanceConfigInput

func (GetClusterNodePoolNodeConfigShieldedInstanceConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigShieldedInstanceConfigArray) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigShieldedInstanceConfigArray) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigShieldedInstanceConfig) bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolOutput)
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigShieldedInstanceConfig) bool { return v.EnableSecureBoot }).(pulumi.BoolOutput)
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput() GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput) ToGetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigShieldedInstanceConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigShieldedInstanceConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

type GetClusterNodePoolNodeConfigTaint struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

type GetClusterNodePoolNodeConfigTaintInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigTaintOutput() GetClusterNodePoolNodeConfigTaintOutput
	ToGetClusterNodePoolNodeConfigTaintOutputWithContext(context.Context) GetClusterNodePoolNodeConfigTaintOutput
}

type GetClusterNodePoolNodeConfigTaintArgs struct {
	Effect pulumi.StringInput `pulumi:"effect"`
	Key    pulumi.StringInput `pulumi:"key"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (GetClusterNodePoolNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigTaintArgs) ToGetClusterNodePoolNodeConfigTaintOutput() GetClusterNodePoolNodeConfigTaintOutput {
	return i.ToGetClusterNodePoolNodeConfigTaintOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigTaintArgs) ToGetClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigTaintOutput)
}

type GetClusterNodePoolNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigTaintArrayOutput() GetClusterNodePoolNodeConfigTaintArrayOutput
	ToGetClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigTaintArrayOutput
}

type GetClusterNodePoolNodeConfigTaintArray []GetClusterNodePoolNodeConfigTaintInput

func (GetClusterNodePoolNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigTaintArray) ToGetClusterNodePoolNodeConfigTaintArrayOutput() GetClusterNodePoolNodeConfigTaintArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigTaintArray) ToGetClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigTaintArrayOutput)
}

type GetClusterNodePoolNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigTaintOutput) ToGetClusterNodePoolNodeConfigTaintOutput() GetClusterNodePoolNodeConfigTaintOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigTaintOutput) ToGetClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigTaintOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetClusterNodePoolNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigTaintArrayOutput) ToGetClusterNodePoolNodeConfigTaintArrayOutput() GetClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigTaintArrayOutput) ToGetClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigTaint {
		return vs[0].([]GetClusterNodePoolNodeConfigTaint)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigTaintOutput)
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfig struct {
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
	ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return i.ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput
	ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutputWithContext(context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray []GetClusterNodePoolNodeConfigWorkloadMetadataConfigInput

func (GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return i.ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolNodeConfigWorkloadMetadataConfigArray) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput)
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput() GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput) ToGetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutputWithContext(ctx context.Context) GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput {
	return o
}

func (o GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return vs[0].([]GetClusterNodePoolNodeConfigWorkloadMetadataConfig)[vs[1].(int)]
	}).(GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

type GetClusterNodePoolUpgradeSetting struct {
	MaxSurge       int `pulumi:"maxSurge"`
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

type GetClusterNodePoolUpgradeSettingInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingOutput() GetClusterNodePoolUpgradeSettingOutput
	ToGetClusterNodePoolUpgradeSettingOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingOutput
}

type GetClusterNodePoolUpgradeSettingArgs struct {
	MaxSurge       pulumi.IntInput `pulumi:"maxSurge"`
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (GetClusterNodePoolUpgradeSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingArgs) ToGetClusterNodePoolUpgradeSettingOutput() GetClusterNodePoolUpgradeSettingOutput {
	return i.ToGetClusterNodePoolUpgradeSettingOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingArgs) ToGetClusterNodePoolUpgradeSettingOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingOutput)
}

type GetClusterNodePoolUpgradeSettingArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingArrayOutput() GetClusterNodePoolUpgradeSettingArrayOutput
	ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingArrayOutput
}

type GetClusterNodePoolUpgradeSettingArray []GetClusterNodePoolUpgradeSettingInput

func (GetClusterNodePoolUpgradeSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingArray) ToGetClusterNodePoolUpgradeSettingArrayOutput() GetClusterNodePoolUpgradeSettingArrayOutput {
	return i.ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingArray) ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingArrayOutput)
}

type GetClusterNodePoolUpgradeSettingOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingOutput) ToGetClusterNodePoolUpgradeSettingOutput() GetClusterNodePoolUpgradeSettingOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingOutput) ToGetClusterNodePoolUpgradeSettingOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSetting) int { return v.MaxSurge }).(pulumi.IntOutput)
}

func (o GetClusterNodePoolUpgradeSettingOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSetting) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type GetClusterNodePoolUpgradeSettingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingArrayOutput) ToGetClusterNodePoolUpgradeSettingArrayOutput() GetClusterNodePoolUpgradeSettingArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingArrayOutput) ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolUpgradeSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolUpgradeSetting {
		return vs[0].([]GetClusterNodePoolUpgradeSetting)[vs[1].(int)]
	}).(GetClusterNodePoolUpgradeSettingOutput)
}

type GetClusterPodSecurityPolicyConfig struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterPodSecurityPolicyConfigInput interface {
	pulumi.Input

	ToGetClusterPodSecurityPolicyConfigOutput() GetClusterPodSecurityPolicyConfigOutput
	ToGetClusterPodSecurityPolicyConfigOutputWithContext(context.Context) GetClusterPodSecurityPolicyConfigOutput
}

type GetClusterPodSecurityPolicyConfigArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterPodSecurityPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i GetClusterPodSecurityPolicyConfigArgs) ToGetClusterPodSecurityPolicyConfigOutput() GetClusterPodSecurityPolicyConfigOutput {
	return i.ToGetClusterPodSecurityPolicyConfigOutputWithContext(context.Background())
}

func (i GetClusterPodSecurityPolicyConfigArgs) ToGetClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) GetClusterPodSecurityPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPodSecurityPolicyConfigOutput)
}

type GetClusterPodSecurityPolicyConfigArrayInput interface {
	pulumi.Input

	ToGetClusterPodSecurityPolicyConfigArrayOutput() GetClusterPodSecurityPolicyConfigArrayOutput
	ToGetClusterPodSecurityPolicyConfigArrayOutputWithContext(context.Context) GetClusterPodSecurityPolicyConfigArrayOutput
}

type GetClusterPodSecurityPolicyConfigArray []GetClusterPodSecurityPolicyConfigInput

func (GetClusterPodSecurityPolicyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i GetClusterPodSecurityPolicyConfigArray) ToGetClusterPodSecurityPolicyConfigArrayOutput() GetClusterPodSecurityPolicyConfigArrayOutput {
	return i.ToGetClusterPodSecurityPolicyConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterPodSecurityPolicyConfigArray) ToGetClusterPodSecurityPolicyConfigArrayOutputWithContext(ctx context.Context) GetClusterPodSecurityPolicyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPodSecurityPolicyConfigArrayOutput)
}

type GetClusterPodSecurityPolicyConfigOutput struct{ *pulumi.OutputState }

func (GetClusterPodSecurityPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o GetClusterPodSecurityPolicyConfigOutput) ToGetClusterPodSecurityPolicyConfigOutput() GetClusterPodSecurityPolicyConfigOutput {
	return o
}

func (o GetClusterPodSecurityPolicyConfigOutput) ToGetClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) GetClusterPodSecurityPolicyConfigOutput {
	return o
}

func (o GetClusterPodSecurityPolicyConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterPodSecurityPolicyConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterPodSecurityPolicyConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPodSecurityPolicyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o GetClusterPodSecurityPolicyConfigArrayOutput) ToGetClusterPodSecurityPolicyConfigArrayOutput() GetClusterPodSecurityPolicyConfigArrayOutput {
	return o
}

func (o GetClusterPodSecurityPolicyConfigArrayOutput) ToGetClusterPodSecurityPolicyConfigArrayOutputWithContext(ctx context.Context) GetClusterPodSecurityPolicyConfigArrayOutput {
	return o
}

func (o GetClusterPodSecurityPolicyConfigArrayOutput) Index(i pulumi.IntInput) GetClusterPodSecurityPolicyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPodSecurityPolicyConfig {
		return vs[0].([]GetClusterPodSecurityPolicyConfig)[vs[1].(int)]
	}).(GetClusterPodSecurityPolicyConfigOutput)
}

type GetClusterPrivateClusterConfig struct {
	EnablePrivateEndpoint bool   `pulumi:"enablePrivateEndpoint"`
	EnablePrivateNodes    bool   `pulumi:"enablePrivateNodes"`
	MasterIpv4CidrBlock   string `pulumi:"masterIpv4CidrBlock"`
	PeeringName           string `pulumi:"peeringName"`
	PrivateEndpoint       string `pulumi:"privateEndpoint"`
	PublicEndpoint        string `pulumi:"publicEndpoint"`
}

type GetClusterPrivateClusterConfigInput interface {
	pulumi.Input

	ToGetClusterPrivateClusterConfigOutput() GetClusterPrivateClusterConfigOutput
	ToGetClusterPrivateClusterConfigOutputWithContext(context.Context) GetClusterPrivateClusterConfigOutput
}

type GetClusterPrivateClusterConfigArgs struct {
	EnablePrivateEndpoint pulumi.BoolInput   `pulumi:"enablePrivateEndpoint"`
	EnablePrivateNodes    pulumi.BoolInput   `pulumi:"enablePrivateNodes"`
	MasterIpv4CidrBlock   pulumi.StringInput `pulumi:"masterIpv4CidrBlock"`
	PeeringName           pulumi.StringInput `pulumi:"peeringName"`
	PrivateEndpoint       pulumi.StringInput `pulumi:"privateEndpoint"`
	PublicEndpoint        pulumi.StringInput `pulumi:"publicEndpoint"`
}

func (GetClusterPrivateClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPrivateClusterConfig)(nil)).Elem()
}

func (i GetClusterPrivateClusterConfigArgs) ToGetClusterPrivateClusterConfigOutput() GetClusterPrivateClusterConfigOutput {
	return i.ToGetClusterPrivateClusterConfigOutputWithContext(context.Background())
}

func (i GetClusterPrivateClusterConfigArgs) ToGetClusterPrivateClusterConfigOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPrivateClusterConfigOutput)
}

type GetClusterPrivateClusterConfigArrayInput interface {
	pulumi.Input

	ToGetClusterPrivateClusterConfigArrayOutput() GetClusterPrivateClusterConfigArrayOutput
	ToGetClusterPrivateClusterConfigArrayOutputWithContext(context.Context) GetClusterPrivateClusterConfigArrayOutput
}

type GetClusterPrivateClusterConfigArray []GetClusterPrivateClusterConfigInput

func (GetClusterPrivateClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPrivateClusterConfig)(nil)).Elem()
}

func (i GetClusterPrivateClusterConfigArray) ToGetClusterPrivateClusterConfigArrayOutput() GetClusterPrivateClusterConfigArrayOutput {
	return i.ToGetClusterPrivateClusterConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterPrivateClusterConfigArray) ToGetClusterPrivateClusterConfigArrayOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterPrivateClusterConfigArrayOutput)
}

type GetClusterPrivateClusterConfigOutput struct{ *pulumi.OutputState }

func (GetClusterPrivateClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterPrivateClusterConfig)(nil)).Elem()
}

func (o GetClusterPrivateClusterConfigOutput) ToGetClusterPrivateClusterConfigOutput() GetClusterPrivateClusterConfigOutput {
	return o
}

func (o GetClusterPrivateClusterConfigOutput) ToGetClusterPrivateClusterConfigOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigOutput {
	return o
}

func (o GetClusterPrivateClusterConfigOutput) EnablePrivateEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) bool { return v.EnablePrivateEndpoint }).(pulumi.BoolOutput)
}

func (o GetClusterPrivateClusterConfigOutput) EnablePrivateNodes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) bool { return v.EnablePrivateNodes }).(pulumi.BoolOutput)
}

func (o GetClusterPrivateClusterConfigOutput) MasterIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) string { return v.MasterIpv4CidrBlock }).(pulumi.StringOutput)
}

func (o GetClusterPrivateClusterConfigOutput) PeeringName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) string { return v.PeeringName }).(pulumi.StringOutput)
}

func (o GetClusterPrivateClusterConfigOutput) PrivateEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) string { return v.PrivateEndpoint }).(pulumi.StringOutput)
}

func (o GetClusterPrivateClusterConfigOutput) PublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterPrivateClusterConfig) string { return v.PublicEndpoint }).(pulumi.StringOutput)
}

type GetClusterPrivateClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterPrivateClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterPrivateClusterConfig)(nil)).Elem()
}

func (o GetClusterPrivateClusterConfigArrayOutput) ToGetClusterPrivateClusterConfigArrayOutput() GetClusterPrivateClusterConfigArrayOutput {
	return o
}

func (o GetClusterPrivateClusterConfigArrayOutput) ToGetClusterPrivateClusterConfigArrayOutputWithContext(ctx context.Context) GetClusterPrivateClusterConfigArrayOutput {
	return o
}

func (o GetClusterPrivateClusterConfigArrayOutput) Index(i pulumi.IntInput) GetClusterPrivateClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterPrivateClusterConfig {
		return vs[0].([]GetClusterPrivateClusterConfig)[vs[1].(int)]
	}).(GetClusterPrivateClusterConfigOutput)
}

type GetClusterReleaseChannel struct {
	Channel string `pulumi:"channel"`
}

type GetClusterReleaseChannelInput interface {
	pulumi.Input

	ToGetClusterReleaseChannelOutput() GetClusterReleaseChannelOutput
	ToGetClusterReleaseChannelOutputWithContext(context.Context) GetClusterReleaseChannelOutput
}

type GetClusterReleaseChannelArgs struct {
	Channel pulumi.StringInput `pulumi:"channel"`
}

func (GetClusterReleaseChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReleaseChannel)(nil)).Elem()
}

func (i GetClusterReleaseChannelArgs) ToGetClusterReleaseChannelOutput() GetClusterReleaseChannelOutput {
	return i.ToGetClusterReleaseChannelOutputWithContext(context.Background())
}

func (i GetClusterReleaseChannelArgs) ToGetClusterReleaseChannelOutputWithContext(ctx context.Context) GetClusterReleaseChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReleaseChannelOutput)
}

type GetClusterReleaseChannelArrayInput interface {
	pulumi.Input

	ToGetClusterReleaseChannelArrayOutput() GetClusterReleaseChannelArrayOutput
	ToGetClusterReleaseChannelArrayOutputWithContext(context.Context) GetClusterReleaseChannelArrayOutput
}

type GetClusterReleaseChannelArray []GetClusterReleaseChannelInput

func (GetClusterReleaseChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReleaseChannel)(nil)).Elem()
}

func (i GetClusterReleaseChannelArray) ToGetClusterReleaseChannelArrayOutput() GetClusterReleaseChannelArrayOutput {
	return i.ToGetClusterReleaseChannelArrayOutputWithContext(context.Background())
}

func (i GetClusterReleaseChannelArray) ToGetClusterReleaseChannelArrayOutputWithContext(ctx context.Context) GetClusterReleaseChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReleaseChannelArrayOutput)
}

type GetClusterReleaseChannelOutput struct{ *pulumi.OutputState }

func (GetClusterReleaseChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReleaseChannel)(nil)).Elem()
}

func (o GetClusterReleaseChannelOutput) ToGetClusterReleaseChannelOutput() GetClusterReleaseChannelOutput {
	return o
}

func (o GetClusterReleaseChannelOutput) ToGetClusterReleaseChannelOutputWithContext(ctx context.Context) GetClusterReleaseChannelOutput {
	return o
}

func (o GetClusterReleaseChannelOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReleaseChannel) string { return v.Channel }).(pulumi.StringOutput)
}

type GetClusterReleaseChannelArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReleaseChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReleaseChannel)(nil)).Elem()
}

func (o GetClusterReleaseChannelArrayOutput) ToGetClusterReleaseChannelArrayOutput() GetClusterReleaseChannelArrayOutput {
	return o
}

func (o GetClusterReleaseChannelArrayOutput) ToGetClusterReleaseChannelArrayOutputWithContext(ctx context.Context) GetClusterReleaseChannelArrayOutput {
	return o
}

func (o GetClusterReleaseChannelArrayOutput) Index(i pulumi.IntInput) GetClusterReleaseChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReleaseChannel {
		return vs[0].([]GetClusterReleaseChannel)[vs[1].(int)]
	}).(GetClusterReleaseChannelOutput)
}

type GetClusterResourceUsageExportConfig struct {
	BigqueryDestinations        []GetClusterResourceUsageExportConfigBigqueryDestination `pulumi:"bigqueryDestinations"`
	EnableNetworkEgressMetering bool                                                     `pulumi:"enableNetworkEgressMetering"`
}

type GetClusterResourceUsageExportConfigInput interface {
	pulumi.Input

	ToGetClusterResourceUsageExportConfigOutput() GetClusterResourceUsageExportConfigOutput
	ToGetClusterResourceUsageExportConfigOutputWithContext(context.Context) GetClusterResourceUsageExportConfigOutput
}

type GetClusterResourceUsageExportConfigArgs struct {
	BigqueryDestinations        GetClusterResourceUsageExportConfigBigqueryDestinationArrayInput `pulumi:"bigqueryDestinations"`
	EnableNetworkEgressMetering pulumi.BoolInput                                                 `pulumi:"enableNetworkEgressMetering"`
}

func (GetClusterResourceUsageExportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i GetClusterResourceUsageExportConfigArgs) ToGetClusterResourceUsageExportConfigOutput() GetClusterResourceUsageExportConfigOutput {
	return i.ToGetClusterResourceUsageExportConfigOutputWithContext(context.Background())
}

func (i GetClusterResourceUsageExportConfigArgs) ToGetClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterResourceUsageExportConfigOutput)
}

type GetClusterResourceUsageExportConfigArrayInput interface {
	pulumi.Input

	ToGetClusterResourceUsageExportConfigArrayOutput() GetClusterResourceUsageExportConfigArrayOutput
	ToGetClusterResourceUsageExportConfigArrayOutputWithContext(context.Context) GetClusterResourceUsageExportConfigArrayOutput
}

type GetClusterResourceUsageExportConfigArray []GetClusterResourceUsageExportConfigInput

func (GetClusterResourceUsageExportConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i GetClusterResourceUsageExportConfigArray) ToGetClusterResourceUsageExportConfigArrayOutput() GetClusterResourceUsageExportConfigArrayOutput {
	return i.ToGetClusterResourceUsageExportConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterResourceUsageExportConfigArray) ToGetClusterResourceUsageExportConfigArrayOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterResourceUsageExportConfigArrayOutput)
}

type GetClusterResourceUsageExportConfigOutput struct{ *pulumi.OutputState }

func (GetClusterResourceUsageExportConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o GetClusterResourceUsageExportConfigOutput) ToGetClusterResourceUsageExportConfigOutput() GetClusterResourceUsageExportConfigOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigOutput) ToGetClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigOutput) BigqueryDestinations() GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return o.ApplyT(func(v GetClusterResourceUsageExportConfig) []GetClusterResourceUsageExportConfigBigqueryDestination {
		return v.BigqueryDestinations
	}).(GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput)
}

func (o GetClusterResourceUsageExportConfigOutput) EnableNetworkEgressMetering() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterResourceUsageExportConfig) bool { return v.EnableNetworkEgressMetering }).(pulumi.BoolOutput)
}

type GetClusterResourceUsageExportConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterResourceUsageExportConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o GetClusterResourceUsageExportConfigArrayOutput) ToGetClusterResourceUsageExportConfigArrayOutput() GetClusterResourceUsageExportConfigArrayOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigArrayOutput) ToGetClusterResourceUsageExportConfigArrayOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigArrayOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigArrayOutput) Index(i pulumi.IntInput) GetClusterResourceUsageExportConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterResourceUsageExportConfig {
		return vs[0].([]GetClusterResourceUsageExportConfig)[vs[1].(int)]
	}).(GetClusterResourceUsageExportConfigOutput)
}

type GetClusterResourceUsageExportConfigBigqueryDestination struct {
	DatasetId string `pulumi:"datasetId"`
}

type GetClusterResourceUsageExportConfigBigqueryDestinationInput interface {
	pulumi.Input

	ToGetClusterResourceUsageExportConfigBigqueryDestinationOutput() GetClusterResourceUsageExportConfigBigqueryDestinationOutput
	ToGetClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationOutput
}

type GetClusterResourceUsageExportConfigBigqueryDestinationArgs struct {
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
}

func (GetClusterResourceUsageExportConfigBigqueryDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (i GetClusterResourceUsageExportConfigBigqueryDestinationArgs) ToGetClusterResourceUsageExportConfigBigqueryDestinationOutput() GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return i.ToGetClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Background())
}

func (i GetClusterResourceUsageExportConfigBigqueryDestinationArgs) ToGetClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

type GetClusterResourceUsageExportConfigBigqueryDestinationArrayInput interface {
	pulumi.Input

	ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput() GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput
	ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutputWithContext(context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput
}

type GetClusterResourceUsageExportConfigBigqueryDestinationArray []GetClusterResourceUsageExportConfigBigqueryDestinationInput

func (GetClusterResourceUsageExportConfigBigqueryDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (i GetClusterResourceUsageExportConfigBigqueryDestinationArray) ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput() GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return i.ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutputWithContext(context.Background())
}

func (i GetClusterResourceUsageExportConfigBigqueryDestinationArray) ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput)
}

type GetClusterResourceUsageExportConfigBigqueryDestinationOutput struct{ *pulumi.OutputState }

func (GetClusterResourceUsageExportConfigBigqueryDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationOutput) ToGetClusterResourceUsageExportConfigBigqueryDestinationOutput() GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationOutput) ToGetClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterResourceUsageExportConfigBigqueryDestination) string { return v.DatasetId }).(pulumi.StringOutput)
}

type GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput) ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput() GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput) ToGetClusterResourceUsageExportConfigBigqueryDestinationArrayOutputWithContext(ctx context.Context) GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput {
	return o
}

func (o GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput) Index(i pulumi.IntInput) GetClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterResourceUsageExportConfigBigqueryDestination {
		return vs[0].([]GetClusterResourceUsageExportConfigBigqueryDestination)[vs[1].(int)]
	}).(GetClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

type GetClusterVerticalPodAutoscaling struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterVerticalPodAutoscalingInput interface {
	pulumi.Input

	ToGetClusterVerticalPodAutoscalingOutput() GetClusterVerticalPodAutoscalingOutput
	ToGetClusterVerticalPodAutoscalingOutputWithContext(context.Context) GetClusterVerticalPodAutoscalingOutput
}

type GetClusterVerticalPodAutoscalingArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClusterVerticalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i GetClusterVerticalPodAutoscalingArgs) ToGetClusterVerticalPodAutoscalingOutput() GetClusterVerticalPodAutoscalingOutput {
	return i.ToGetClusterVerticalPodAutoscalingOutputWithContext(context.Background())
}

func (i GetClusterVerticalPodAutoscalingArgs) ToGetClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) GetClusterVerticalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterVerticalPodAutoscalingOutput)
}

type GetClusterVerticalPodAutoscalingArrayInput interface {
	pulumi.Input

	ToGetClusterVerticalPodAutoscalingArrayOutput() GetClusterVerticalPodAutoscalingArrayOutput
	ToGetClusterVerticalPodAutoscalingArrayOutputWithContext(context.Context) GetClusterVerticalPodAutoscalingArrayOutput
}

type GetClusterVerticalPodAutoscalingArray []GetClusterVerticalPodAutoscalingInput

func (GetClusterVerticalPodAutoscalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i GetClusterVerticalPodAutoscalingArray) ToGetClusterVerticalPodAutoscalingArrayOutput() GetClusterVerticalPodAutoscalingArrayOutput {
	return i.ToGetClusterVerticalPodAutoscalingArrayOutputWithContext(context.Background())
}

func (i GetClusterVerticalPodAutoscalingArray) ToGetClusterVerticalPodAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterVerticalPodAutoscalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterVerticalPodAutoscalingArrayOutput)
}

type GetClusterVerticalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (GetClusterVerticalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o GetClusterVerticalPodAutoscalingOutput) ToGetClusterVerticalPodAutoscalingOutput() GetClusterVerticalPodAutoscalingOutput {
	return o
}

func (o GetClusterVerticalPodAutoscalingOutput) ToGetClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) GetClusterVerticalPodAutoscalingOutput {
	return o
}

func (o GetClusterVerticalPodAutoscalingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterVerticalPodAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClusterVerticalPodAutoscalingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterVerticalPodAutoscalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o GetClusterVerticalPodAutoscalingArrayOutput) ToGetClusterVerticalPodAutoscalingArrayOutput() GetClusterVerticalPodAutoscalingArrayOutput {
	return o
}

func (o GetClusterVerticalPodAutoscalingArrayOutput) ToGetClusterVerticalPodAutoscalingArrayOutputWithContext(ctx context.Context) GetClusterVerticalPodAutoscalingArrayOutput {
	return o
}

func (o GetClusterVerticalPodAutoscalingArrayOutput) Index(i pulumi.IntInput) GetClusterVerticalPodAutoscalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterVerticalPodAutoscaling {
		return vs[0].([]GetClusterVerticalPodAutoscaling)[vs[1].(int)]
	}).(GetClusterVerticalPodAutoscalingOutput)
}

type GetClusterWorkloadIdentityConfig struct {
	IdentityNamespace string `pulumi:"identityNamespace"`
}

type GetClusterWorkloadIdentityConfigInput interface {
	pulumi.Input

	ToGetClusterWorkloadIdentityConfigOutput() GetClusterWorkloadIdentityConfigOutput
	ToGetClusterWorkloadIdentityConfigOutputWithContext(context.Context) GetClusterWorkloadIdentityConfigOutput
}

type GetClusterWorkloadIdentityConfigArgs struct {
	IdentityNamespace pulumi.StringInput `pulumi:"identityNamespace"`
}

func (GetClusterWorkloadIdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i GetClusterWorkloadIdentityConfigArgs) ToGetClusterWorkloadIdentityConfigOutput() GetClusterWorkloadIdentityConfigOutput {
	return i.ToGetClusterWorkloadIdentityConfigOutputWithContext(context.Background())
}

func (i GetClusterWorkloadIdentityConfigArgs) ToGetClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) GetClusterWorkloadIdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterWorkloadIdentityConfigOutput)
}

type GetClusterWorkloadIdentityConfigArrayInput interface {
	pulumi.Input

	ToGetClusterWorkloadIdentityConfigArrayOutput() GetClusterWorkloadIdentityConfigArrayOutput
	ToGetClusterWorkloadIdentityConfigArrayOutputWithContext(context.Context) GetClusterWorkloadIdentityConfigArrayOutput
}

type GetClusterWorkloadIdentityConfigArray []GetClusterWorkloadIdentityConfigInput

func (GetClusterWorkloadIdentityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i GetClusterWorkloadIdentityConfigArray) ToGetClusterWorkloadIdentityConfigArrayOutput() GetClusterWorkloadIdentityConfigArrayOutput {
	return i.ToGetClusterWorkloadIdentityConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterWorkloadIdentityConfigArray) ToGetClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) GetClusterWorkloadIdentityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterWorkloadIdentityConfigArrayOutput)
}

type GetClusterWorkloadIdentityConfigOutput struct{ *pulumi.OutputState }

func (GetClusterWorkloadIdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o GetClusterWorkloadIdentityConfigOutput) ToGetClusterWorkloadIdentityConfigOutput() GetClusterWorkloadIdentityConfigOutput {
	return o
}

func (o GetClusterWorkloadIdentityConfigOutput) ToGetClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) GetClusterWorkloadIdentityConfigOutput {
	return o
}

func (o GetClusterWorkloadIdentityConfigOutput) IdentityNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterWorkloadIdentityConfig) string { return v.IdentityNamespace }).(pulumi.StringOutput)
}

type GetClusterWorkloadIdentityConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterWorkloadIdentityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o GetClusterWorkloadIdentityConfigArrayOutput) ToGetClusterWorkloadIdentityConfigArrayOutput() GetClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o GetClusterWorkloadIdentityConfigArrayOutput) ToGetClusterWorkloadIdentityConfigArrayOutputWithContext(ctx context.Context) GetClusterWorkloadIdentityConfigArrayOutput {
	return o
}

func (o GetClusterWorkloadIdentityConfigArrayOutput) Index(i pulumi.IntInput) GetClusterWorkloadIdentityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterWorkloadIdentityConfig {
		return vs[0].([]GetClusterWorkloadIdentityConfig)[vs[1].(int)]
	}).(GetClusterWorkloadIdentityConfigOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterAddonsConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigCloudrunConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigCloudrunConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigCloudrunConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigDnsCacheConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigDnsCacheConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigDnsCacheConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHorizontalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHorizontalPodAutoscalingArgsOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHorizontalPodAutoscalingArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHttpLoadBalancingOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHttpLoadBalancingArgsOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHttpLoadBalancingArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigIstioConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigIstioConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigIstioConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigNetworkPolicyConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigNetworkPolicyConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigNetworkPolicyConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateCloudrunConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateCloudrunConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateDnsCacheConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateDnsCacheConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateHorizontalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateHorizontalPodAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateHttpLoadBalancingOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateHttpLoadBalancingPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateIstioConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateIstioConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateNetworkPolicyConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigStateNetworkPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticatorGroupsConfigOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticatorGroupsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticatorGroupsConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticatorGroupsConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticatorGroupsConfigStateOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingResourceLimitOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingResourceLimitArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingResourceLimitArgsOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingResourceLimitArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingStateOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingStateAutoProvisioningDefaultsOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingStateAutoProvisioningDefaultsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingStateResourceLimitOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingStateResourceLimitArrayOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseEncryptionOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseEncryptionArgsOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseEncryptionArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseEncryptionStateOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyArgsOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyStateOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyArgsOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyDailyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyDailyMaintenanceWindowArgsOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyDailyMaintenanceWindowArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyRecurringWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyRecurringWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyRecurringWindowArgsOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyRecurringWindowArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyStateOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyStateDailyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyStateDailyMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyStateRecurringWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyStateRecurringWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthArgsOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthClientCertificateConfigOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthClientCertificateConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthClientCertificateConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthStateOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthStateClientCertificateConfigOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthStateClientCertificateConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigCidrBlockOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigCidrBlockArgsOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigCidrBlockArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigStateOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigStateCidrBlockOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigStateCidrBlockArrayOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPolicyOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPolicyArgsOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPolicyArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPolicyStateOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSandboxConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSandboxConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigShieldedInstanceConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigShieldedInstanceConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateSandboxConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigStateWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigTaintArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigTaintArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigWorkloadMetadataConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigWorkloadMetadataConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoscalingArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoscalingArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolManagementOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolManagementArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolManagementArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSandboxConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSandboxConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigShieldedInstanceConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigTaintArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigTaintArgsArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateManagementOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateManagementPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolStateUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsArgsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyConfigOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyConfigStateOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigStateOutput{})
	pulumi.RegisterOutputType(ClusterReleaseChannelOutput{})
	pulumi.RegisterOutputType(ClusterReleaseChannelPtrOutput{})
	pulumi.RegisterOutputType(ClusterReleaseChannelArgsOutput{})
	pulumi.RegisterOutputType(ClusterReleaseChannelArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterReleaseChannelStateOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigBigqueryDestinationOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigBigqueryDestinationArgsOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigStateOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigStateBigqueryDestinationOutput{})
	pulumi.RegisterOutputType(ClusterVerticalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterVerticalPodAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterVerticalPodAutoscalingArgsOutput{})
	pulumi.RegisterOutputType(ClusterVerticalPodAutoscalingArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterVerticalPodAutoscalingStateOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadIdentityConfigOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadIdentityConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadIdentityConfigArgsOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadIdentityConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadIdentityConfigStateOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingArgsOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingArgsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingStateOutput{})
	pulumi.RegisterOutputType(NodePoolManagementOutput{})
	pulumi.RegisterOutputType(NodePoolManagementPtrOutput{})
	pulumi.RegisterOutputType(NodePoolManagementArgsOutput{})
	pulumi.RegisterOutputType(NodePoolManagementArgsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolManagementStateOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigArgsOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorArgsOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorArgsArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSandboxConfigArgsOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSandboxConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigShieldedInstanceConfigArgsOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigShieldedInstanceConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateSandboxConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateTaintOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateTaintArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigStateWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigTaintArgsOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigTaintArgsArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigWorkloadMetadataConfigArgsOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigWorkloadMetadataConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsArgsOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsArgsPtrOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsStateOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigCloudrunConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigCloudrunConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigDnsCacheConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigDnsCacheConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHorizontalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHttpLoadBalancingOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHttpLoadBalancingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigIstioConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigIstioConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigKubernetesDashboardOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigKubernetesDashboardArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigNetworkPolicyConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigNetworkPolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAuthenticatorGroupsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAuthenticatorGroupsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingResourceLimitOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingResourceLimitArrayOutput{})
	pulumi.RegisterOutputType(GetClusterDatabaseEncryptionOutput{})
	pulumi.RegisterOutputType(GetClusterDatabaseEncryptionArrayOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyDailyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyRecurringWindowOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyRecurringWindowArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthClientCertificateConfigOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthClientCertificateConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNetworkPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterNetworkPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSandboxConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigShieldedInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigWorkloadMetadataConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolManagementOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolManagementArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSandboxConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPodSecurityPolicyConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPodSecurityPolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReleaseChannelOutput{})
	pulumi.RegisterOutputType(GetClusterReleaseChannelArrayOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigBigqueryDestinationOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetClusterVerticalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterVerticalPodAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterWorkloadIdentityConfigOutput{})
	pulumi.RegisterOutputType(GetClusterWorkloadIdentityConfigArrayOutput{})
}
