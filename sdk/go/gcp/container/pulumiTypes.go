// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package container

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ClusterAddonsConfig struct {
	// .
	// The status of the CloudRun addon. It is disabled by default.
	// Set `disabled = false` to enable.
	CloudrunConfig *ClusterAddonsConfigCloudrunConfig `pulumi:"cloudrunConfig"`
	// .
	// The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
	ConfigConnectorConfig *ClusterAddonsConfigConfigConnectorConfig `pulumi:"configConnectorConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	DnsCacheConfig *ClusterAddonsConfigDnsCacheConfig `pulumi:"dnsCacheConfig"`
	// .
	// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Defaults to disabled; set `enabled = true` to enable.
	GcePersistentDiskCsiDriverConfig *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig `pulumi:"gcePersistentDiskCsiDriverConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling *ClusterAddonsConfigHorizontalPodAutoscaling `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing *ClusterAddonsConfigHttpLoadBalancing `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig *ClusterAddonsConfigIstioConfig `pulumi:"istioConfig"`
	// .
	// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
	KalmConfig *ClusterAddonsConfigKalmConfig `pulumi:"kalmConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig *ClusterAddonsConfigNetworkPolicyConfig `pulumi:"networkPolicyConfig"`
}

// ClusterAddonsConfigInput is an input type that accepts ClusterAddonsConfigArgs and ClusterAddonsConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigInput` via:
//
//          ClusterAddonsConfigArgs{...}
type ClusterAddonsConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigOutput() ClusterAddonsConfigOutput
	ToClusterAddonsConfigOutputWithContext(context.Context) ClusterAddonsConfigOutput
}

type ClusterAddonsConfigArgs struct {
	// .
	// The status of the CloudRun addon. It is disabled by default.
	// Set `disabled = false` to enable.
	CloudrunConfig ClusterAddonsConfigCloudrunConfigPtrInput `pulumi:"cloudrunConfig"`
	// .
	// The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
	ConfigConnectorConfig ClusterAddonsConfigConfigConnectorConfigPtrInput `pulumi:"configConnectorConfig"`
	// .
	// The status of the NodeLocal DNSCache addon. It is disabled by default.
	// Set `enabled = true` to enable.
	DnsCacheConfig ClusterAddonsConfigDnsCacheConfigPtrInput `pulumi:"dnsCacheConfig"`
	// .
	// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Defaults to disabled; set `enabled = true` to enable.
	GcePersistentDiskCsiDriverConfig ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput `pulumi:"gcePersistentDiskCsiDriverConfig"`
	// The status of the Horizontal Pod Autoscaling
	// addon, which increases or decreases the number of replica pods a replication controller
	// has based on the resource usage of the existing pods.
	// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
	// It is enabled by default;
	// set `disabled = true` to disable.
	HorizontalPodAutoscaling ClusterAddonsConfigHorizontalPodAutoscalingPtrInput `pulumi:"horizontalPodAutoscaling"`
	// The status of the HTTP (L7) load balancing
	// controller addon, which makes it easy to set up HTTP load balancers for services in a
	// cluster. It is enabled by default; set `disabled = true` to disable.
	HttpLoadBalancing ClusterAddonsConfigHttpLoadBalancingPtrInput `pulumi:"httpLoadBalancing"`
	// .
	// Structure is documented below.
	IstioConfig ClusterAddonsConfigIstioConfigPtrInput `pulumi:"istioConfig"`
	// .
	// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
	KalmConfig ClusterAddonsConfigKalmConfigPtrInput `pulumi:"kalmConfig"`
	// Whether we should enable the network policy addon
	// for the master.  This must be enabled in order to enable network policy for the nodes.
	// To enable this, you must also define a `networkPolicy` block,
	// otherwise nothing will happen.
	// It can only be disabled if the nodes already do not have network policies enabled.
	// Defaults to disabled; set `disabled = false` to enable.
	NetworkPolicyConfig ClusterAddonsConfigNetworkPolicyConfigPtrInput `pulumi:"networkPolicyConfig"`
}

func (ClusterAddonsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigOutput() ClusterAddonsConfigOutput {
	return i.ToClusterAddonsConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigOutput)
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return i.ToClusterAddonsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigArgs) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigOutput).ToClusterAddonsConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigPtrInput is an input type that accepts ClusterAddonsConfigArgs, ClusterAddonsConfigPtr and ClusterAddonsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigPtrInput` via:
//
//          ClusterAddonsConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput
	ToClusterAddonsConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigPtrOutput
}

type clusterAddonsConfigPtrType ClusterAddonsConfigArgs

func ClusterAddonsConfigPtr(v *ClusterAddonsConfigArgs) ClusterAddonsConfigPtrInput {
	return (*clusterAddonsConfigPtrType)(v)
}

func (*clusterAddonsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigPtrType) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return i.ToClusterAddonsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigPtrType) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigPtrOutput)
}

type ClusterAddonsConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigOutput() ClusterAddonsConfigOutput {
	return o
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigOutput {
	return o
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return o.ToClusterAddonsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigOutput) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfig {
		return &v
	}).(ClusterAddonsConfigPtrOutput)
}

// .
// The status of the CloudRun addon. It is disabled by default.
// Set `disabled = false` to enable.
func (o ClusterAddonsConfigOutput) CloudrunConfig() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigCloudrunConfig { return v.CloudrunConfig }).(ClusterAddonsConfigCloudrunConfigPtrOutput)
}

// .
// The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigOutput) ConfigConnectorConfig() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigConfigConnectorConfig { return v.ConfigConnectorConfig }).(ClusterAddonsConfigConfigConnectorConfigPtrOutput)
}

// .
// The status of the NodeLocal DNSCache addon. It is disabled by default.
// Set `enabled = true` to enable.
func (o ClusterAddonsConfigOutput) DnsCacheConfig() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigDnsCacheConfig { return v.DnsCacheConfig }).(ClusterAddonsConfigDnsCacheConfigPtrOutput)
}

// .
// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Defaults to disabled; set `enabled = true` to enable.
func (o ClusterAddonsConfigOutput) GcePersistentDiskCsiDriverConfig() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		return v.GcePersistentDiskCsiDriverConfig
	}).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput)
}

// The status of the Horizontal Pod Autoscaling
// addon, which increases or decreases the number of replica pods a replication controller
// has based on the resource usage of the existing pods.
// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
// It is enabled by default;
// set `disabled = true` to disable.
func (o ClusterAddonsConfigOutput) HorizontalPodAutoscaling() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigHorizontalPodAutoscaling {
		return v.HorizontalPodAutoscaling
	}).(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput)
}

// The status of the HTTP (L7) load balancing
// controller addon, which makes it easy to set up HTTP load balancers for services in a
// cluster. It is enabled by default; set `disabled = true` to disable.
func (o ClusterAddonsConfigOutput) HttpLoadBalancing() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigHttpLoadBalancing { return v.HttpLoadBalancing }).(ClusterAddonsConfigHttpLoadBalancingPtrOutput)
}

// .
// Structure is documented below.
func (o ClusterAddonsConfigOutput) IstioConfig() ClusterAddonsConfigIstioConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigIstioConfig { return v.IstioConfig }).(ClusterAddonsConfigIstioConfigPtrOutput)
}

// .
// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigOutput) KalmConfig() ClusterAddonsConfigKalmConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigKalmConfig { return v.KalmConfig }).(ClusterAddonsConfigKalmConfigPtrOutput)
}

// Whether we should enable the network policy addon
// for the master.  This must be enabled in order to enable network policy for the nodes.
// To enable this, you must also define a `networkPolicy` block,
// otherwise nothing will happen.
// It can only be disabled if the nodes already do not have network policies enabled.
// Defaults to disabled; set `disabled = false` to enable.
func (o ClusterAddonsConfigOutput) NetworkPolicyConfig() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfig) *ClusterAddonsConfigNetworkPolicyConfig { return v.NetworkPolicyConfig }).(ClusterAddonsConfigNetworkPolicyConfigPtrOutput)
}

type ClusterAddonsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigPtrOutput) ToClusterAddonsConfigPtrOutput() ClusterAddonsConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigPtrOutput) ToClusterAddonsConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigPtrOutput) Elem() ClusterAddonsConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) ClusterAddonsConfig { return *v }).(ClusterAddonsConfigOutput)
}

// .
// The status of the CloudRun addon. It is disabled by default.
// Set `disabled = false` to enable.
func (o ClusterAddonsConfigPtrOutput) CloudrunConfig() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigCloudrunConfig {
		if v == nil {
			return nil
		}
		return v.CloudrunConfig
	}).(ClusterAddonsConfigCloudrunConfigPtrOutput)
}

// .
// The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigPtrOutput) ConfigConnectorConfig() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigConfigConnectorConfig {
		if v == nil {
			return nil
		}
		return v.ConfigConnectorConfig
	}).(ClusterAddonsConfigConfigConnectorConfigPtrOutput)
}

// .
// The status of the NodeLocal DNSCache addon. It is disabled by default.
// Set `enabled = true` to enable.
func (o ClusterAddonsConfigPtrOutput) DnsCacheConfig() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigDnsCacheConfig {
		if v == nil {
			return nil
		}
		return v.DnsCacheConfig
	}).(ClusterAddonsConfigDnsCacheConfigPtrOutput)
}

// .
// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Defaults to disabled; set `enabled = true` to enable.
func (o ClusterAddonsConfigPtrOutput) GcePersistentDiskCsiDriverConfig() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		if v == nil {
			return nil
		}
		return v.GcePersistentDiskCsiDriverConfig
	}).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput)
}

// The status of the Horizontal Pod Autoscaling
// addon, which increases or decreases the number of replica pods a replication controller
// has based on the resource usage of the existing pods.
// It ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
// It is enabled by default;
// set `disabled = true` to disable.
func (o ClusterAddonsConfigPtrOutput) HorizontalPodAutoscaling() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigHorizontalPodAutoscaling {
		if v == nil {
			return nil
		}
		return v.HorizontalPodAutoscaling
	}).(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput)
}

// The status of the HTTP (L7) load balancing
// controller addon, which makes it easy to set up HTTP load balancers for services in a
// cluster. It is enabled by default; set `disabled = true` to disable.
func (o ClusterAddonsConfigPtrOutput) HttpLoadBalancing() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigHttpLoadBalancing {
		if v == nil {
			return nil
		}
		return v.HttpLoadBalancing
	}).(ClusterAddonsConfigHttpLoadBalancingPtrOutput)
}

// .
// Structure is documented below.
func (o ClusterAddonsConfigPtrOutput) IstioConfig() ClusterAddonsConfigIstioConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigIstioConfig {
		if v == nil {
			return nil
		}
		return v.IstioConfig
	}).(ClusterAddonsConfigIstioConfigPtrOutput)
}

// .
// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
func (o ClusterAddonsConfigPtrOutput) KalmConfig() ClusterAddonsConfigKalmConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigKalmConfig {
		if v == nil {
			return nil
		}
		return v.KalmConfig
	}).(ClusterAddonsConfigKalmConfigPtrOutput)
}

// Whether we should enable the network policy addon
// for the master.  This must be enabled in order to enable network policy for the nodes.
// To enable this, you must also define a `networkPolicy` block,
// otherwise nothing will happen.
// It can only be disabled if the nodes already do not have network policies enabled.
// Defaults to disabled; set `disabled = false` to enable.
func (o ClusterAddonsConfigPtrOutput) NetworkPolicyConfig() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfig) *ClusterAddonsConfigNetworkPolicyConfig {
		if v == nil {
			return nil
		}
		return v.NetworkPolicyConfig
	}).(ClusterAddonsConfigNetworkPolicyConfigPtrOutput)
}

type ClusterAddonsConfigCloudrunConfig struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

// ClusterAddonsConfigCloudrunConfigInput is an input type that accepts ClusterAddonsConfigCloudrunConfigArgs and ClusterAddonsConfigCloudrunConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigCloudrunConfigInput` via:
//
//          ClusterAddonsConfigCloudrunConfigArgs{...}
type ClusterAddonsConfigCloudrunConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigCloudrunConfigOutput() ClusterAddonsConfigCloudrunConfigOutput
	ToClusterAddonsConfigCloudrunConfigOutputWithContext(context.Context) ClusterAddonsConfigCloudrunConfigOutput
}

type ClusterAddonsConfigCloudrunConfigArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigCloudrunConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigOutput() ClusterAddonsConfigCloudrunConfigOutput {
	return i.ToClusterAddonsConfigCloudrunConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigOutput)
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return i.ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigCloudrunConfigArgs) ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigOutput).ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigCloudrunConfigPtrInput is an input type that accepts ClusterAddonsConfigCloudrunConfigArgs, ClusterAddonsConfigCloudrunConfigPtr and ClusterAddonsConfigCloudrunConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigCloudrunConfigPtrInput` via:
//
//          ClusterAddonsConfigCloudrunConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigCloudrunConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput
	ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput
}

type clusterAddonsConfigCloudrunConfigPtrType ClusterAddonsConfigCloudrunConfigArgs

func ClusterAddonsConfigCloudrunConfigPtr(v *ClusterAddonsConfigCloudrunConfigArgs) ClusterAddonsConfigCloudrunConfigPtrInput {
	return (*clusterAddonsConfigCloudrunConfigPtrType)(v)
}

func (*clusterAddonsConfigCloudrunConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigCloudrunConfigPtrType) ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return i.ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigCloudrunConfigPtrType) ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigCloudrunConfigPtrOutput)
}

type ClusterAddonsConfigCloudrunConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigCloudrunConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigOutput() ClusterAddonsConfigCloudrunConfigOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o.ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigCloudrunConfigOutput) ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigCloudrunConfig) *ClusterAddonsConfigCloudrunConfig {
		return &v
	}).(ClusterAddonsConfigCloudrunConfigPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigCloudrunConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigCloudrunConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigCloudrunConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigCloudrunConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigCloudrunConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigCloudrunConfigPtrOutput) ToClusterAddonsConfigCloudrunConfigPtrOutput() ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigPtrOutput) ToClusterAddonsConfigCloudrunConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigCloudrunConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigCloudrunConfigPtrOutput) Elem() ClusterAddonsConfigCloudrunConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigCloudrunConfig) ClusterAddonsConfigCloudrunConfig { return *v }).(ClusterAddonsConfigCloudrunConfigOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigCloudrunConfigPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigCloudrunConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigConfigConnectorConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigConfigConnectorConfigInput is an input type that accepts ClusterAddonsConfigConfigConnectorConfigArgs and ClusterAddonsConfigConfigConnectorConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigConfigConnectorConfigInput` via:
//
//          ClusterAddonsConfigConfigConnectorConfigArgs{...}
type ClusterAddonsConfigConfigConnectorConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigConfigConnectorConfigOutput() ClusterAddonsConfigConfigConnectorConfigOutput
	ToClusterAddonsConfigConfigConnectorConfigOutputWithContext(context.Context) ClusterAddonsConfigConfigConnectorConfigOutput
}

type ClusterAddonsConfigConfigConnectorConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigConfigConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigConfigConnectorConfigArgs) ToClusterAddonsConfigConfigConnectorConfigOutput() ClusterAddonsConfigConfigConnectorConfigOutput {
	return i.ToClusterAddonsConfigConfigConnectorConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigConfigConnectorConfigArgs) ToClusterAddonsConfigConfigConnectorConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigConfigConnectorConfigOutput)
}

func (i ClusterAddonsConfigConfigConnectorConfigArgs) ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return i.ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigConfigConnectorConfigArgs) ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigConfigConnectorConfigOutput).ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigConfigConnectorConfigPtrInput is an input type that accepts ClusterAddonsConfigConfigConnectorConfigArgs, ClusterAddonsConfigConfigConnectorConfigPtr and ClusterAddonsConfigConfigConnectorConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigConfigConnectorConfigPtrInput` via:
//
//          ClusterAddonsConfigConfigConnectorConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigConfigConnectorConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput
	ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput
}

type clusterAddonsConfigConfigConnectorConfigPtrType ClusterAddonsConfigConfigConnectorConfigArgs

func ClusterAddonsConfigConfigConnectorConfigPtr(v *ClusterAddonsConfigConfigConnectorConfigArgs) ClusterAddonsConfigConfigConnectorConfigPtrInput {
	return (*clusterAddonsConfigConfigConnectorConfigPtrType)(v)
}

func (*clusterAddonsConfigConfigConnectorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigConfigConnectorConfigPtrType) ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return i.ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigConfigConnectorConfigPtrType) ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigConfigConnectorConfigPtrOutput)
}

type ClusterAddonsConfigConfigConnectorConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigConfigConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigConfigConnectorConfigOutput) ToClusterAddonsConfigConfigConnectorConfigOutput() ClusterAddonsConfigConfigConnectorConfigOutput {
	return o
}

func (o ClusterAddonsConfigConfigConnectorConfigOutput) ToClusterAddonsConfigConfigConnectorConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigOutput {
	return o
}

func (o ClusterAddonsConfigConfigConnectorConfigOutput) ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o.ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigConfigConnectorConfigOutput) ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigConfigConnectorConfig) *ClusterAddonsConfigConfigConnectorConfig {
		return &v
	}).(ClusterAddonsConfigConfigConnectorConfigPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigConfigConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigConfigConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigConfigConnectorConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigConfigConnectorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigConfigConnectorConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigConfigConnectorConfigPtrOutput) ToClusterAddonsConfigConfigConnectorConfigPtrOutput() ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigConfigConnectorConfigPtrOutput) ToClusterAddonsConfigConfigConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigConfigConnectorConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigConfigConnectorConfigPtrOutput) Elem() ClusterAddonsConfigConfigConnectorConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigConfigConnectorConfig) ClusterAddonsConfigConfigConnectorConfig { return *v }).(ClusterAddonsConfigConfigConnectorConfigOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigConfigConnectorConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigConfigConnectorConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigDnsCacheConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigDnsCacheConfigInput is an input type that accepts ClusterAddonsConfigDnsCacheConfigArgs and ClusterAddonsConfigDnsCacheConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigDnsCacheConfigInput` via:
//
//          ClusterAddonsConfigDnsCacheConfigArgs{...}
type ClusterAddonsConfigDnsCacheConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigDnsCacheConfigOutput() ClusterAddonsConfigDnsCacheConfigOutput
	ToClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Context) ClusterAddonsConfigDnsCacheConfigOutput
}

type ClusterAddonsConfigDnsCacheConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigDnsCacheConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigOutput() ClusterAddonsConfigDnsCacheConfigOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigOutput)
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigDnsCacheConfigArgs) ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigOutput).ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigDnsCacheConfigPtrInput is an input type that accepts ClusterAddonsConfigDnsCacheConfigArgs, ClusterAddonsConfigDnsCacheConfigPtr and ClusterAddonsConfigDnsCacheConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigDnsCacheConfigPtrInput` via:
//
//          ClusterAddonsConfigDnsCacheConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigDnsCacheConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput
	ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput
}

type clusterAddonsConfigDnsCacheConfigPtrType ClusterAddonsConfigDnsCacheConfigArgs

func ClusterAddonsConfigDnsCacheConfigPtr(v *ClusterAddonsConfigDnsCacheConfigArgs) ClusterAddonsConfigDnsCacheConfigPtrInput {
	return (*clusterAddonsConfigDnsCacheConfigPtrType)(v)
}

func (*clusterAddonsConfigDnsCacheConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigDnsCacheConfigPtrType) ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return i.ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigDnsCacheConfigPtrType) ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigDnsCacheConfigPtrOutput)
}

type ClusterAddonsConfigDnsCacheConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigDnsCacheConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigOutput() ClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o.ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigDnsCacheConfigOutput) ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigDnsCacheConfig) *ClusterAddonsConfigDnsCacheConfig {
		return &v
	}).(ClusterAddonsConfigDnsCacheConfigPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigDnsCacheConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigDnsCacheConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigDnsCacheConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigDnsCacheConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigDnsCacheConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigDnsCacheConfigPtrOutput) ToClusterAddonsConfigDnsCacheConfigPtrOutput() ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigPtrOutput) ToClusterAddonsConfigDnsCacheConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigDnsCacheConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigDnsCacheConfigPtrOutput) Elem() ClusterAddonsConfigDnsCacheConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigDnsCacheConfig) ClusterAddonsConfigDnsCacheConfig { return *v }).(ClusterAddonsConfigDnsCacheConfigOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigDnsCacheConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigDnsCacheConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigGcePersistentDiskCsiDriverConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput is an input type that accepts ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs and ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput` via:
//
//          ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs{...}
type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput
	ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput
}

type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return i.ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput)
}

func (i ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return i.ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput).ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput is an input type that accepts ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs, ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtr and ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput` via:
//
//          ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput
	ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput
}

type clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs

func ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtr(v *ClusterAddonsConfigGcePersistentDiskCsiDriverConfigArgs) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrInput {
	return (*clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType)(v)
}

func (*clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return i.ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrType) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput)
}

type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return o
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return o
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o.ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigGcePersistentDiskCsiDriverConfig) *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		return &v
	}).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigGcePersistentDiskCsiDriverConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigGcePersistentDiskCsiDriverConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) ToClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) Elem() ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig) ClusterAddonsConfigGcePersistentDiskCsiDriverConfig {
		return *v
	}).(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigGcePersistentDiskCsiDriverConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscaling struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

// ClusterAddonsConfigHorizontalPodAutoscalingInput is an input type that accepts ClusterAddonsConfigHorizontalPodAutoscalingArgs and ClusterAddonsConfigHorizontalPodAutoscalingOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigHorizontalPodAutoscalingInput` via:
//
//          ClusterAddonsConfigHorizontalPodAutoscalingArgs{...}
type ClusterAddonsConfigHorizontalPodAutoscalingInput interface {
	pulumi.Input

	ToClusterAddonsConfigHorizontalPodAutoscalingOutput() ClusterAddonsConfigHorizontalPodAutoscalingOutput
	ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Context) ClusterAddonsConfigHorizontalPodAutoscalingOutput
}

type ClusterAddonsConfigHorizontalPodAutoscalingArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigHorizontalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingOutput() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHorizontalPodAutoscalingArgs) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingOutput).ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigHorizontalPodAutoscalingPtrInput is an input type that accepts ClusterAddonsConfigHorizontalPodAutoscalingArgs, ClusterAddonsConfigHorizontalPodAutoscalingPtr and ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigHorizontalPodAutoscalingPtrInput` via:
//
//          ClusterAddonsConfigHorizontalPodAutoscalingArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigHorizontalPodAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput
	ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput
}

type clusterAddonsConfigHorizontalPodAutoscalingPtrType ClusterAddonsConfigHorizontalPodAutoscalingArgs

func ClusterAddonsConfigHorizontalPodAutoscalingPtr(v *ClusterAddonsConfigHorizontalPodAutoscalingArgs) ClusterAddonsConfigHorizontalPodAutoscalingPtrInput {
	return (*clusterAddonsConfigHorizontalPodAutoscalingPtrType)(v)
}

func (*clusterAddonsConfigHorizontalPodAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (i *clusterAddonsConfigHorizontalPodAutoscalingPtrType) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return i.ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigHorizontalPodAutoscalingPtrType) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHorizontalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingOutput() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o.ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHorizontalPodAutoscaling) *ClusterAddonsConfigHorizontalPodAutoscaling {
		return &v
	}).(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHorizontalPodAutoscalingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHorizontalPodAutoscaling) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHorizontalPodAutoscaling)(nil)).Elem()
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutput() ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) ToClusterAddonsConfigHorizontalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) Elem() ClusterAddonsConfigHorizontalPodAutoscalingOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHorizontalPodAutoscaling) ClusterAddonsConfigHorizontalPodAutoscaling {
		return *v
	}).(ClusterAddonsConfigHorizontalPodAutoscalingOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHorizontalPodAutoscaling) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigHttpLoadBalancing struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

// ClusterAddonsConfigHttpLoadBalancingInput is an input type that accepts ClusterAddonsConfigHttpLoadBalancingArgs and ClusterAddonsConfigHttpLoadBalancingOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigHttpLoadBalancingInput` via:
//
//          ClusterAddonsConfigHttpLoadBalancingArgs{...}
type ClusterAddonsConfigHttpLoadBalancingInput interface {
	pulumi.Input

	ToClusterAddonsConfigHttpLoadBalancingOutput() ClusterAddonsConfigHttpLoadBalancingOutput
	ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Context) ClusterAddonsConfigHttpLoadBalancingOutput
}

type ClusterAddonsConfigHttpLoadBalancingArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigHttpLoadBalancingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingOutput() ClusterAddonsConfigHttpLoadBalancingOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingOutput)
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigHttpLoadBalancingArgs) ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingOutput).ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigHttpLoadBalancingPtrInput is an input type that accepts ClusterAddonsConfigHttpLoadBalancingArgs, ClusterAddonsConfigHttpLoadBalancingPtr and ClusterAddonsConfigHttpLoadBalancingPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigHttpLoadBalancingPtrInput` via:
//
//          ClusterAddonsConfigHttpLoadBalancingArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigHttpLoadBalancingPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput
	ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput
}

type clusterAddonsConfigHttpLoadBalancingPtrType ClusterAddonsConfigHttpLoadBalancingArgs

func ClusterAddonsConfigHttpLoadBalancingPtr(v *ClusterAddonsConfigHttpLoadBalancingArgs) ClusterAddonsConfigHttpLoadBalancingPtrInput {
	return (*clusterAddonsConfigHttpLoadBalancingPtrType)(v)
}

func (*clusterAddonsConfigHttpLoadBalancingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (i *clusterAddonsConfigHttpLoadBalancingPtrType) ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return i.ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigHttpLoadBalancingPtrType) ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigHttpLoadBalancingPtrOutput)
}

type ClusterAddonsConfigHttpLoadBalancingOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHttpLoadBalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingOutput() ClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o.ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigHttpLoadBalancingOutput) ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHttpLoadBalancing) *ClusterAddonsConfigHttpLoadBalancing {
		return &v
	}).(ClusterAddonsConfigHttpLoadBalancingPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHttpLoadBalancingOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigHttpLoadBalancing) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigHttpLoadBalancingPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigHttpLoadBalancingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigHttpLoadBalancing)(nil)).Elem()
}

func (o ClusterAddonsConfigHttpLoadBalancingPtrOutput) ToClusterAddonsConfigHttpLoadBalancingPtrOutput() ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingPtrOutput) ToClusterAddonsConfigHttpLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigHttpLoadBalancingPtrOutput {
	return o
}

func (o ClusterAddonsConfigHttpLoadBalancingPtrOutput) Elem() ClusterAddonsConfigHttpLoadBalancingOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHttpLoadBalancing) ClusterAddonsConfigHttpLoadBalancing { return *v }).(ClusterAddonsConfigHttpLoadBalancingOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigHttpLoadBalancingPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigHttpLoadBalancing) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigIstioConfig struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth *string `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

// ClusterAddonsConfigIstioConfigInput is an input type that accepts ClusterAddonsConfigIstioConfigArgs and ClusterAddonsConfigIstioConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigIstioConfigInput` via:
//
//          ClusterAddonsConfigIstioConfigArgs{...}
type ClusterAddonsConfigIstioConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigIstioConfigOutput() ClusterAddonsConfigIstioConfigOutput
	ToClusterAddonsConfigIstioConfigOutputWithContext(context.Context) ClusterAddonsConfigIstioConfigOutput
}

type ClusterAddonsConfigIstioConfigArgs struct {
	// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
	Auth pulumi.StringPtrInput `pulumi:"auth"`
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigIstioConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigOutput() ClusterAddonsConfigIstioConfigOutput {
	return i.ToClusterAddonsConfigIstioConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigOutput)
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput {
	return i.ToClusterAddonsConfigIstioConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigIstioConfigArgs) ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigOutput).ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigIstioConfigPtrInput is an input type that accepts ClusterAddonsConfigIstioConfigArgs, ClusterAddonsConfigIstioConfigPtr and ClusterAddonsConfigIstioConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigIstioConfigPtrInput` via:
//
//          ClusterAddonsConfigIstioConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigIstioConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput
	ToClusterAddonsConfigIstioConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigIstioConfigPtrOutput
}

type clusterAddonsConfigIstioConfigPtrType ClusterAddonsConfigIstioConfigArgs

func ClusterAddonsConfigIstioConfigPtr(v *ClusterAddonsConfigIstioConfigArgs) ClusterAddonsConfigIstioConfigPtrInput {
	return (*clusterAddonsConfigIstioConfigPtrType)(v)
}

func (*clusterAddonsConfigIstioConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigIstioConfigPtrType) ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput {
	return i.ToClusterAddonsConfigIstioConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigIstioConfigPtrType) ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigIstioConfigPtrOutput)
}

type ClusterAddonsConfigIstioConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigIstioConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigOutput() ClusterAddonsConfigIstioConfigOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput {
	return o.ToClusterAddonsConfigIstioConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigIstioConfigOutput) ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfig) *ClusterAddonsConfigIstioConfig {
		return &v
	}).(ClusterAddonsConfigIstioConfigPtrOutput)
}

// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
func (o ClusterAddonsConfigIstioConfigOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfig) *string { return v.Auth }).(pulumi.StringPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigIstioConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigIstioConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigIstioConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigIstioConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigIstioConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigIstioConfigPtrOutput) ToClusterAddonsConfigIstioConfigPtrOutput() ClusterAddonsConfigIstioConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigPtrOutput) ToClusterAddonsConfigIstioConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigIstioConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigIstioConfigPtrOutput) Elem() ClusterAddonsConfigIstioConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigIstioConfig) ClusterAddonsConfigIstioConfig { return *v }).(ClusterAddonsConfigIstioConfigOutput)
}

// The authentication type between services in Istio. Available options include `AUTH_MUTUAL_TLS`.
func (o ClusterAddonsConfigIstioConfigPtrOutput) Auth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigIstioConfig) *string {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(pulumi.StringPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigIstioConfigPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigIstioConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigKalmConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

// ClusterAddonsConfigKalmConfigInput is an input type that accepts ClusterAddonsConfigKalmConfigArgs and ClusterAddonsConfigKalmConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigKalmConfigInput` via:
//
//          ClusterAddonsConfigKalmConfigArgs{...}
type ClusterAddonsConfigKalmConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigKalmConfigOutput() ClusterAddonsConfigKalmConfigOutput
	ToClusterAddonsConfigKalmConfigOutputWithContext(context.Context) ClusterAddonsConfigKalmConfigOutput
}

type ClusterAddonsConfigKalmConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterAddonsConfigKalmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigKalmConfigArgs) ToClusterAddonsConfigKalmConfigOutput() ClusterAddonsConfigKalmConfigOutput {
	return i.ToClusterAddonsConfigKalmConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigKalmConfigArgs) ToClusterAddonsConfigKalmConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigKalmConfigOutput)
}

func (i ClusterAddonsConfigKalmConfigArgs) ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput {
	return i.ToClusterAddonsConfigKalmConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigKalmConfigArgs) ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigKalmConfigOutput).ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigKalmConfigPtrInput is an input type that accepts ClusterAddonsConfigKalmConfigArgs, ClusterAddonsConfigKalmConfigPtr and ClusterAddonsConfigKalmConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigKalmConfigPtrInput` via:
//
//          ClusterAddonsConfigKalmConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigKalmConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput
	ToClusterAddonsConfigKalmConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigKalmConfigPtrOutput
}

type clusterAddonsConfigKalmConfigPtrType ClusterAddonsConfigKalmConfigArgs

func ClusterAddonsConfigKalmConfigPtr(v *ClusterAddonsConfigKalmConfigArgs) ClusterAddonsConfigKalmConfigPtrInput {
	return (*clusterAddonsConfigKalmConfigPtrType)(v)
}

func (*clusterAddonsConfigKalmConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigKalmConfigPtrType) ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput {
	return i.ToClusterAddonsConfigKalmConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigKalmConfigPtrType) ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigKalmConfigPtrOutput)
}

type ClusterAddonsConfigKalmConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigKalmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigKalmConfigOutput) ToClusterAddonsConfigKalmConfigOutput() ClusterAddonsConfigKalmConfigOutput {
	return o
}

func (o ClusterAddonsConfigKalmConfigOutput) ToClusterAddonsConfigKalmConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigOutput {
	return o
}

func (o ClusterAddonsConfigKalmConfigOutput) ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput {
	return o.ToClusterAddonsConfigKalmConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigKalmConfigOutput) ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigKalmConfig) *ClusterAddonsConfigKalmConfig {
		return &v
	}).(ClusterAddonsConfigKalmConfigPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigKalmConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigKalmConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigKalmConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigKalmConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigKalmConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigKalmConfigPtrOutput) ToClusterAddonsConfigKalmConfigPtrOutput() ClusterAddonsConfigKalmConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigKalmConfigPtrOutput) ToClusterAddonsConfigKalmConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigKalmConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigKalmConfigPtrOutput) Elem() ClusterAddonsConfigKalmConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigKalmConfig) ClusterAddonsConfigKalmConfig { return *v }).(ClusterAddonsConfigKalmConfigOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterAddonsConfigKalmConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigKalmConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAddonsConfigNetworkPolicyConfig struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

// ClusterAddonsConfigNetworkPolicyConfigInput is an input type that accepts ClusterAddonsConfigNetworkPolicyConfigArgs and ClusterAddonsConfigNetworkPolicyConfigOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigNetworkPolicyConfigInput` via:
//
//          ClusterAddonsConfigNetworkPolicyConfigArgs{...}
type ClusterAddonsConfigNetworkPolicyConfigInput interface {
	pulumi.Input

	ToClusterAddonsConfigNetworkPolicyConfigOutput() ClusterAddonsConfigNetworkPolicyConfigOutput
	ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Context) ClusterAddonsConfigNetworkPolicyConfigOutput
}

type ClusterAddonsConfigNetworkPolicyConfigArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterAddonsConfigNetworkPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigOutput() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigOutput)
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsConfigNetworkPolicyConfigArgs) ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigOutput).ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx)
}

// ClusterAddonsConfigNetworkPolicyConfigPtrInput is an input type that accepts ClusterAddonsConfigNetworkPolicyConfigArgs, ClusterAddonsConfigNetworkPolicyConfigPtr and ClusterAddonsConfigNetworkPolicyConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsConfigNetworkPolicyConfigPtrInput` via:
//
//          ClusterAddonsConfigNetworkPolicyConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAddonsConfigNetworkPolicyConfigPtrInput interface {
	pulumi.Input

	ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput
	ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput
}

type clusterAddonsConfigNetworkPolicyConfigPtrType ClusterAddonsConfigNetworkPolicyConfigArgs

func ClusterAddonsConfigNetworkPolicyConfigPtr(v *ClusterAddonsConfigNetworkPolicyConfigArgs) ClusterAddonsConfigNetworkPolicyConfigPtrInput {
	return (*clusterAddonsConfigNetworkPolicyConfigPtrType)(v)
}

func (*clusterAddonsConfigNetworkPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (i *clusterAddonsConfigNetworkPolicyConfigPtrType) ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return i.ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsConfigNetworkPolicyConfigPtrType) ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsConfigNetworkPolicyConfigPtrOutput)
}

type ClusterAddonsConfigNetworkPolicyConfigOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigNetworkPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigOutput() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o.ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsConfigNetworkPolicyConfigOutput) ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o.ApplyT(func(v ClusterAddonsConfigNetworkPolicyConfig) *ClusterAddonsConfigNetworkPolicyConfig {
		return &v
	}).(ClusterAddonsConfigNetworkPolicyConfigPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigNetworkPolicyConfigOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAddonsConfigNetworkPolicyConfig) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterAddonsConfigNetworkPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsConfigNetworkPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsConfigNetworkPolicyConfig)(nil)).Elem()
}

func (o ClusterAddonsConfigNetworkPolicyConfigPtrOutput) ToClusterAddonsConfigNetworkPolicyConfigPtrOutput() ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigPtrOutput) ToClusterAddonsConfigNetworkPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterAddonsConfigNetworkPolicyConfigPtrOutput {
	return o
}

func (o ClusterAddonsConfigNetworkPolicyConfigPtrOutput) Elem() ClusterAddonsConfigNetworkPolicyConfigOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigNetworkPolicyConfig) ClusterAddonsConfigNetworkPolicyConfig { return *v }).(ClusterAddonsConfigNetworkPolicyConfigOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterAddonsConfigNetworkPolicyConfigPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsConfigNetworkPolicyConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterAuthenticatorGroupsConfig struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup string `pulumi:"securityGroup"`
}

// ClusterAuthenticatorGroupsConfigInput is an input type that accepts ClusterAuthenticatorGroupsConfigArgs and ClusterAuthenticatorGroupsConfigOutput values.
// You can construct a concrete instance of `ClusterAuthenticatorGroupsConfigInput` via:
//
//          ClusterAuthenticatorGroupsConfigArgs{...}
type ClusterAuthenticatorGroupsConfigInput interface {
	pulumi.Input

	ToClusterAuthenticatorGroupsConfigOutput() ClusterAuthenticatorGroupsConfigOutput
	ToClusterAuthenticatorGroupsConfigOutputWithContext(context.Context) ClusterAuthenticatorGroupsConfigOutput
}

type ClusterAuthenticatorGroupsConfigArgs struct {
	// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
}

func (ClusterAuthenticatorGroupsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigOutput() ClusterAuthenticatorGroupsConfigOutput {
	return i.ToClusterAuthenticatorGroupsConfigOutputWithContext(context.Background())
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigOutput)
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return i.ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAuthenticatorGroupsConfigArgs) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigOutput).ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx)
}

// ClusterAuthenticatorGroupsConfigPtrInput is an input type that accepts ClusterAuthenticatorGroupsConfigArgs, ClusterAuthenticatorGroupsConfigPtr and ClusterAuthenticatorGroupsConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAuthenticatorGroupsConfigPtrInput` via:
//
//          ClusterAuthenticatorGroupsConfigArgs{...}
//
//  or:
//
//          nil
type ClusterAuthenticatorGroupsConfigPtrInput interface {
	pulumi.Input

	ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput
	ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Context) ClusterAuthenticatorGroupsConfigPtrOutput
}

type clusterAuthenticatorGroupsConfigPtrType ClusterAuthenticatorGroupsConfigArgs

func ClusterAuthenticatorGroupsConfigPtr(v *ClusterAuthenticatorGroupsConfigArgs) ClusterAuthenticatorGroupsConfigPtrInput {
	return (*clusterAuthenticatorGroupsConfigPtrType)(v)
}

func (*clusterAuthenticatorGroupsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (i *clusterAuthenticatorGroupsConfigPtrType) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return i.ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAuthenticatorGroupsConfigPtrType) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticatorGroupsConfigPtrOutput)
}

type ClusterAuthenticatorGroupsConfigOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticatorGroupsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigOutput() ClusterAuthenticatorGroupsConfigOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return o.ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAuthenticatorGroupsConfigOutput) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfig) *ClusterAuthenticatorGroupsConfig {
		return &v
	}).(ClusterAuthenticatorGroupsConfigPtrOutput)
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
func (o ClusterAuthenticatorGroupsConfigOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAuthenticatorGroupsConfig) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type ClusterAuthenticatorGroupsConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticatorGroupsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticatorGroupsConfig)(nil)).Elem()
}

func (o ClusterAuthenticatorGroupsConfigPtrOutput) ToClusterAuthenticatorGroupsConfigPtrOutput() ClusterAuthenticatorGroupsConfigPtrOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigPtrOutput) ToClusterAuthenticatorGroupsConfigPtrOutputWithContext(ctx context.Context) ClusterAuthenticatorGroupsConfigPtrOutput {
	return o
}

func (o ClusterAuthenticatorGroupsConfigPtrOutput) Elem() ClusterAuthenticatorGroupsConfigOutput {
	return o.ApplyT(func(v *ClusterAuthenticatorGroupsConfig) ClusterAuthenticatorGroupsConfig { return *v }).(ClusterAuthenticatorGroupsConfigOutput)
}

// The name of the RBAC security group for use with Google security groups in Kubernetes RBAC. Group name must be in format `gke-security-groups@yourdomain.com`.
func (o ClusterAuthenticatorGroupsConfigPtrOutput) SecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAuthenticatorGroupsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SecurityGroup
	}).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscaling struct {
	// Contains defaults for a node pool created by NAP.
	// Structure is documented below.
	AutoProvisioningDefaults *ClusterClusterAutoscalingAutoProvisioningDefaults `pulumi:"autoProvisioningDefaults"`
	// ) Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile *string `pulumi:"autoscalingProfile"`
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits []ClusterClusterAutoscalingResourceLimit `pulumi:"resourceLimits"`
}

// ClusterClusterAutoscalingInput is an input type that accepts ClusterClusterAutoscalingArgs and ClusterClusterAutoscalingOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingInput` via:
//
//          ClusterClusterAutoscalingArgs{...}
type ClusterClusterAutoscalingInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingOutput() ClusterClusterAutoscalingOutput
	ToClusterClusterAutoscalingOutputWithContext(context.Context) ClusterClusterAutoscalingOutput
}

type ClusterClusterAutoscalingArgs struct {
	// Contains defaults for a node pool created by NAP.
	// Structure is documented below.
	AutoProvisioningDefaults ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput `pulumi:"autoProvisioningDefaults"`
	// ) Configuration
	// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
	// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
	// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
	AutoscalingProfile pulumi.StringPtrInput `pulumi:"autoscalingProfile"`
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Global constraints for machine resources in the
	// cluster. Configuring the `cpu` and `memory` types is required if node
	// auto-provisioning is enabled. These limits will apply to node pool autoscaling
	// in addition to node auto-provisioning. Structure is documented below.
	ResourceLimits ClusterClusterAutoscalingResourceLimitArrayInput `pulumi:"resourceLimits"`
}

func (ClusterClusterAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscaling)(nil)).Elem()
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingOutput() ClusterClusterAutoscalingOutput {
	return i.ToClusterClusterAutoscalingOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingOutputWithContext(ctx context.Context) ClusterClusterAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingOutput)
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return i.ToClusterClusterAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingArgs) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingOutput).ToClusterClusterAutoscalingPtrOutputWithContext(ctx)
}

// ClusterClusterAutoscalingPtrInput is an input type that accepts ClusterClusterAutoscalingArgs, ClusterClusterAutoscalingPtr and ClusterClusterAutoscalingPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingPtrInput` via:
//
//          ClusterClusterAutoscalingArgs{...}
//
//  or:
//
//          nil
type ClusterClusterAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput
	ToClusterClusterAutoscalingPtrOutputWithContext(context.Context) ClusterClusterAutoscalingPtrOutput
}

type clusterClusterAutoscalingPtrType ClusterClusterAutoscalingArgs

func ClusterClusterAutoscalingPtr(v *ClusterClusterAutoscalingArgs) ClusterClusterAutoscalingPtrInput {
	return (*clusterClusterAutoscalingPtrType)(v)
}

func (*clusterClusterAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscaling)(nil)).Elem()
}

func (i *clusterClusterAutoscalingPtrType) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return i.ToClusterClusterAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingPtrType) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingPtrOutput)
}

type ClusterClusterAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscaling)(nil)).Elem()
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingOutput() ClusterClusterAutoscalingOutput {
	return o
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingOutputWithContext(ctx context.Context) ClusterClusterAutoscalingOutput {
	return o
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return o.ToClusterClusterAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingOutput) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) *ClusterClusterAutoscaling {
		return &v
	}).(ClusterClusterAutoscalingPtrOutput)
}

// Contains defaults for a node pool created by NAP.
// Structure is documented below.
func (o ClusterClusterAutoscalingOutput) AutoProvisioningDefaults() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) *ClusterClusterAutoscalingAutoProvisioningDefaults {
		return v.AutoProvisioningDefaults
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput)
}

// ) Configuration
// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
func (o ClusterClusterAutoscalingOutput) AutoscalingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) *string { return v.AutoscalingProfile }).(pulumi.StringPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterClusterAutoscalingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Global constraints for machine resources in the
// cluster. Configuring the `cpu` and `memory` types is required if node
// auto-provisioning is enabled. These limits will apply to node pool autoscaling
// in addition to node auto-provisioning. Structure is documented below.
func (o ClusterClusterAutoscalingOutput) ResourceLimits() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscaling) []ClusterClusterAutoscalingResourceLimit { return v.ResourceLimits }).(ClusterClusterAutoscalingResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscaling)(nil)).Elem()
}

func (o ClusterClusterAutoscalingPtrOutput) ToClusterClusterAutoscalingPtrOutput() ClusterClusterAutoscalingPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingPtrOutput) ToClusterClusterAutoscalingPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingPtrOutput) Elem() ClusterClusterAutoscalingOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) ClusterClusterAutoscaling { return *v }).(ClusterClusterAutoscalingOutput)
}

// Contains defaults for a node pool created by NAP.
// Structure is documented below.
func (o ClusterClusterAutoscalingPtrOutput) AutoProvisioningDefaults() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) *ClusterClusterAutoscalingAutoProvisioningDefaults {
		if v == nil {
			return nil
		}
		return v.AutoProvisioningDefaults
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput)
}

// ) Configuration
// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
func (o ClusterClusterAutoscalingPtrOutput) AutoscalingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.AutoscalingProfile
	}).(pulumi.StringPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterClusterAutoscalingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Global constraints for machine resources in the
// cluster. Configuring the `cpu` and `memory` types is required if node
// auto-provisioning is enabled. These limits will apply to node pool autoscaling
// in addition to node auto-provisioning. Structure is documented below.
func (o ClusterClusterAutoscalingPtrOutput) ResourceLimits() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscaling) []ClusterClusterAutoscalingResourceLimit {
		if v == nil {
			return nil
		}
		return v.ResourceLimits
	}).(ClusterClusterAutoscalingResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaults struct {
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsArgs and ClusterClusterAutoscalingAutoProvisioningDefaultsOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsInput` via:
//
//          ClusterClusterAutoscalingAutoProvisioningDefaultsArgs{...}
type ClusterClusterAutoscalingAutoProvisioningDefaultsInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsOutput
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsArgs struct {
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
}

func (ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput)
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput).ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx)
}

// ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput is an input type that accepts ClusterClusterAutoscalingAutoProvisioningDefaultsArgs, ClusterClusterAutoscalingAutoProvisioningDefaultsPtr and ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput` via:
//
//          ClusterClusterAutoscalingAutoProvisioningDefaultsArgs{...}
//
//  or:
//
//          nil
type ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput
	ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput
}

type clusterClusterAutoscalingAutoProvisioningDefaultsPtrType ClusterClusterAutoscalingAutoProvisioningDefaultsArgs

func ClusterClusterAutoscalingAutoProvisioningDefaultsPtr(v *ClusterClusterAutoscalingAutoProvisioningDefaultsArgs) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrInput {
	return (*clusterClusterAutoscalingAutoProvisioningDefaultsPtrType)(v)
}

func (*clusterClusterAutoscalingAutoProvisioningDefaultsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return i.ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(context.Background())
}

func (i *clusterClusterAutoscalingAutoProvisioningDefaultsPtrType) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o.ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(context.Background())
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *ClusterClusterAutoscalingAutoProvisioningDefaults {
		return &v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingAutoProvisioningDefaults) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterAutoscalingAutoProvisioningDefaults)(nil)).Elem()
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput() ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ToClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutputWithContext(ctx context.Context) ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput {
	return o
}

func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) Elem() ClusterClusterAutoscalingAutoProvisioningDefaultsOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) ClusterClusterAutoscalingAutoProvisioningDefaults {
		return *v
	}).(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterAutoscalingAutoProvisioningDefaults) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

type ClusterClusterAutoscalingResourceLimit struct {
	// Maximum amount of the resource in the cluster.
	Maximum *int `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum *int `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType string `pulumi:"resourceType"`
}

// ClusterClusterAutoscalingResourceLimitInput is an input type that accepts ClusterClusterAutoscalingResourceLimitArgs and ClusterClusterAutoscalingResourceLimitOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingResourceLimitInput` via:
//
//          ClusterClusterAutoscalingResourceLimitArgs{...}
type ClusterClusterAutoscalingResourceLimitInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingResourceLimitOutput() ClusterClusterAutoscalingResourceLimitOutput
	ToClusterClusterAutoscalingResourceLimitOutputWithContext(context.Context) ClusterClusterAutoscalingResourceLimitOutput
}

type ClusterClusterAutoscalingResourceLimitArgs struct {
	// Maximum amount of the resource in the cluster.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum amount of the resource in the cluster.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// The type of the resource. For example, `cpu` and
	// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
	// for a list of types.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (ClusterClusterAutoscalingResourceLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i ClusterClusterAutoscalingResourceLimitArgs) ToClusterClusterAutoscalingResourceLimitOutput() ClusterClusterAutoscalingResourceLimitOutput {
	return i.ToClusterClusterAutoscalingResourceLimitOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingResourceLimitArgs) ToClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingResourceLimitOutput)
}

// ClusterClusterAutoscalingResourceLimitArrayInput is an input type that accepts ClusterClusterAutoscalingResourceLimitArray and ClusterClusterAutoscalingResourceLimitArrayOutput values.
// You can construct a concrete instance of `ClusterClusterAutoscalingResourceLimitArrayInput` via:
//
//          ClusterClusterAutoscalingResourceLimitArray{ ClusterClusterAutoscalingResourceLimitArgs{...} }
type ClusterClusterAutoscalingResourceLimitArrayInput interface {
	pulumi.Input

	ToClusterClusterAutoscalingResourceLimitArrayOutput() ClusterClusterAutoscalingResourceLimitArrayOutput
	ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Context) ClusterClusterAutoscalingResourceLimitArrayOutput
}

type ClusterClusterAutoscalingResourceLimitArray []ClusterClusterAutoscalingResourceLimitInput

func (ClusterClusterAutoscalingResourceLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (i ClusterClusterAutoscalingResourceLimitArray) ToClusterClusterAutoscalingResourceLimitArrayOutput() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return i.ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(context.Background())
}

func (i ClusterClusterAutoscalingResourceLimitArray) ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterAutoscalingResourceLimitArrayOutput)
}

type ClusterClusterAutoscalingResourceLimitOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingResourceLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o ClusterClusterAutoscalingResourceLimitOutput) ToClusterClusterAutoscalingResourceLimitOutput() ClusterClusterAutoscalingResourceLimitOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitOutput) ToClusterClusterAutoscalingResourceLimitOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitOutput {
	return o
}

// Maximum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingResourceLimitOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimit) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum amount of the resource in the cluster.
func (o ClusterClusterAutoscalingResourceLimitOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimit) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// The type of the resource. For example, `cpu` and
// `memory`.  See the [guide to using Node Auto-Provisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning)
// for a list of types.
func (o ClusterClusterAutoscalingResourceLimitOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterAutoscalingResourceLimit) string { return v.ResourceType }).(pulumi.StringOutput)
}

type ClusterClusterAutoscalingResourceLimitArrayOutput struct{ *pulumi.OutputState }

func (ClusterClusterAutoscalingResourceLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterClusterAutoscalingResourceLimit)(nil)).Elem()
}

func (o ClusterClusterAutoscalingResourceLimitArrayOutput) ToClusterClusterAutoscalingResourceLimitArrayOutput() ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitArrayOutput) ToClusterClusterAutoscalingResourceLimitArrayOutputWithContext(ctx context.Context) ClusterClusterAutoscalingResourceLimitArrayOutput {
	return o
}

func (o ClusterClusterAutoscalingResourceLimitArrayOutput) Index(i pulumi.IntInput) ClusterClusterAutoscalingResourceLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterClusterAutoscalingResourceLimit {
		return vs[0].([]ClusterClusterAutoscalingResourceLimit)[vs[1].(int)]
	}).(ClusterClusterAutoscalingResourceLimitOutput)
}

type ClusterClusterTelemetry struct {
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

// ClusterClusterTelemetryInput is an input type that accepts ClusterClusterTelemetryArgs and ClusterClusterTelemetryOutput values.
// You can construct a concrete instance of `ClusterClusterTelemetryInput` via:
//
//          ClusterClusterTelemetryArgs{...}
type ClusterClusterTelemetryInput interface {
	pulumi.Input

	ToClusterClusterTelemetryOutput() ClusterClusterTelemetryOutput
	ToClusterClusterTelemetryOutputWithContext(context.Context) ClusterClusterTelemetryOutput
}

type ClusterClusterTelemetryArgs struct {
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterClusterTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterTelemetry)(nil)).Elem()
}

func (i ClusterClusterTelemetryArgs) ToClusterClusterTelemetryOutput() ClusterClusterTelemetryOutput {
	return i.ToClusterClusterTelemetryOutputWithContext(context.Background())
}

func (i ClusterClusterTelemetryArgs) ToClusterClusterTelemetryOutputWithContext(ctx context.Context) ClusterClusterTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterTelemetryOutput)
}

func (i ClusterClusterTelemetryArgs) ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput {
	return i.ToClusterClusterTelemetryPtrOutputWithContext(context.Background())
}

func (i ClusterClusterTelemetryArgs) ToClusterClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterClusterTelemetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterTelemetryOutput).ToClusterClusterTelemetryPtrOutputWithContext(ctx)
}

// ClusterClusterTelemetryPtrInput is an input type that accepts ClusterClusterTelemetryArgs, ClusterClusterTelemetryPtr and ClusterClusterTelemetryPtrOutput values.
// You can construct a concrete instance of `ClusterClusterTelemetryPtrInput` via:
//
//          ClusterClusterTelemetryArgs{...}
//
//  or:
//
//          nil
type ClusterClusterTelemetryPtrInput interface {
	pulumi.Input

	ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput
	ToClusterClusterTelemetryPtrOutputWithContext(context.Context) ClusterClusterTelemetryPtrOutput
}

type clusterClusterTelemetryPtrType ClusterClusterTelemetryArgs

func ClusterClusterTelemetryPtr(v *ClusterClusterTelemetryArgs) ClusterClusterTelemetryPtrInput {
	return (*clusterClusterTelemetryPtrType)(v)
}

func (*clusterClusterTelemetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterTelemetry)(nil)).Elem()
}

func (i *clusterClusterTelemetryPtrType) ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput {
	return i.ToClusterClusterTelemetryPtrOutputWithContext(context.Background())
}

func (i *clusterClusterTelemetryPtrType) ToClusterClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterClusterTelemetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClusterTelemetryPtrOutput)
}

type ClusterClusterTelemetryOutput struct{ *pulumi.OutputState }

func (ClusterClusterTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClusterTelemetry)(nil)).Elem()
}

func (o ClusterClusterTelemetryOutput) ToClusterClusterTelemetryOutput() ClusterClusterTelemetryOutput {
	return o
}

func (o ClusterClusterTelemetryOutput) ToClusterClusterTelemetryOutputWithContext(ctx context.Context) ClusterClusterTelemetryOutput {
	return o
}

func (o ClusterClusterTelemetryOutput) ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput {
	return o.ToClusterClusterTelemetryPtrOutputWithContext(context.Background())
}

func (o ClusterClusterTelemetryOutput) ToClusterClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterClusterTelemetryPtrOutput {
	return o.ApplyT(func(v ClusterClusterTelemetry) *ClusterClusterTelemetry {
		return &v
	}).(ClusterClusterTelemetryPtrOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterClusterTelemetryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterClusterTelemetry) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterClusterTelemetryPtrOutput struct{ *pulumi.OutputState }

func (ClusterClusterTelemetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClusterTelemetry)(nil)).Elem()
}

func (o ClusterClusterTelemetryPtrOutput) ToClusterClusterTelemetryPtrOutput() ClusterClusterTelemetryPtrOutput {
	return o
}

func (o ClusterClusterTelemetryPtrOutput) ToClusterClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterClusterTelemetryPtrOutput {
	return o
}

func (o ClusterClusterTelemetryPtrOutput) Elem() ClusterClusterTelemetryOutput {
	return o.ApplyT(func(v *ClusterClusterTelemetry) ClusterClusterTelemetry { return *v }).(ClusterClusterTelemetryOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterClusterTelemetryPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterClusterTelemetry) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ClusterDatabaseEncryption struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	KeyName *string `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State string `pulumi:"state"`
}

// ClusterDatabaseEncryptionInput is an input type that accepts ClusterDatabaseEncryptionArgs and ClusterDatabaseEncryptionOutput values.
// You can construct a concrete instance of `ClusterDatabaseEncryptionInput` via:
//
//          ClusterDatabaseEncryptionArgs{...}
type ClusterDatabaseEncryptionInput interface {
	pulumi.Input

	ToClusterDatabaseEncryptionOutput() ClusterDatabaseEncryptionOutput
	ToClusterDatabaseEncryptionOutputWithContext(context.Context) ClusterDatabaseEncryptionOutput
}

type ClusterDatabaseEncryptionArgs struct {
	// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// `ENCRYPTED` or `DECRYPTED`
	State pulumi.StringInput `pulumi:"state"`
}

func (ClusterDatabaseEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryption)(nil)).Elem()
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionOutput() ClusterDatabaseEncryptionOutput {
	return i.ToClusterDatabaseEncryptionOutputWithContext(context.Background())
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionOutput)
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return i.ToClusterDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i ClusterDatabaseEncryptionArgs) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionOutput).ToClusterDatabaseEncryptionPtrOutputWithContext(ctx)
}

// ClusterDatabaseEncryptionPtrInput is an input type that accepts ClusterDatabaseEncryptionArgs, ClusterDatabaseEncryptionPtr and ClusterDatabaseEncryptionPtrOutput values.
// You can construct a concrete instance of `ClusterDatabaseEncryptionPtrInput` via:
//
//          ClusterDatabaseEncryptionArgs{...}
//
//  or:
//
//          nil
type ClusterDatabaseEncryptionPtrInput interface {
	pulumi.Input

	ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput
	ToClusterDatabaseEncryptionPtrOutputWithContext(context.Context) ClusterDatabaseEncryptionPtrOutput
}

type clusterDatabaseEncryptionPtrType ClusterDatabaseEncryptionArgs

func ClusterDatabaseEncryptionPtr(v *ClusterDatabaseEncryptionArgs) ClusterDatabaseEncryptionPtrInput {
	return (*clusterDatabaseEncryptionPtrType)(v)
}

func (*clusterDatabaseEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDatabaseEncryption)(nil)).Elem()
}

func (i *clusterDatabaseEncryptionPtrType) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return i.ToClusterDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (i *clusterDatabaseEncryptionPtrType) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDatabaseEncryptionPtrOutput)
}

type ClusterDatabaseEncryptionOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseEncryption)(nil)).Elem()
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionOutput() ClusterDatabaseEncryptionOutput {
	return o
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionOutput {
	return o
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return o.ToClusterDatabaseEncryptionPtrOutputWithContext(context.Background())
}

func (o ClusterDatabaseEncryptionOutput) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) *ClusterDatabaseEncryption {
		return &v
	}).(ClusterDatabaseEncryptionPtrOutput)
}

// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
func (o ClusterDatabaseEncryptionOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// `ENCRYPTED` or `DECRYPTED`
func (o ClusterDatabaseEncryptionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterDatabaseEncryption) string { return v.State }).(pulumi.StringOutput)
}

type ClusterDatabaseEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDatabaseEncryption)(nil)).Elem()
}

func (o ClusterDatabaseEncryptionPtrOutput) ToClusterDatabaseEncryptionPtrOutput() ClusterDatabaseEncryptionPtrOutput {
	return o
}

func (o ClusterDatabaseEncryptionPtrOutput) ToClusterDatabaseEncryptionPtrOutputWithContext(ctx context.Context) ClusterDatabaseEncryptionPtrOutput {
	return o
}

func (o ClusterDatabaseEncryptionPtrOutput) Elem() ClusterDatabaseEncryptionOutput {
	return o.ApplyT(func(v *ClusterDatabaseEncryption) ClusterDatabaseEncryption { return *v }).(ClusterDatabaseEncryptionOutput)
}

// the key to use to encrypt/decrypt secrets.  See the [DatabaseEncryption definition](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters#Cluster.DatabaseEncryption) for more information.
func (o ClusterDatabaseEncryptionPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDatabaseEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// `ENCRYPTED` or `DECRYPTED`
func (o ClusterDatabaseEncryptionPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDatabaseEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

type ClusterDefaultSnatStatus struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled bool `pulumi:"disabled"`
}

// ClusterDefaultSnatStatusInput is an input type that accepts ClusterDefaultSnatStatusArgs and ClusterDefaultSnatStatusOutput values.
// You can construct a concrete instance of `ClusterDefaultSnatStatusInput` via:
//
//          ClusterDefaultSnatStatusArgs{...}
type ClusterDefaultSnatStatusInput interface {
	pulumi.Input

	ToClusterDefaultSnatStatusOutput() ClusterDefaultSnatStatusOutput
	ToClusterDefaultSnatStatusOutputWithContext(context.Context) ClusterDefaultSnatStatusOutput
}

type ClusterDefaultSnatStatusArgs struct {
	// The status of the Istio addon, which makes it easy to set up Istio for services in a
	// cluster. It is disabled by default. Set `disabled = false` to enable.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
}

func (ClusterDefaultSnatStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDefaultSnatStatus)(nil)).Elem()
}

func (i ClusterDefaultSnatStatusArgs) ToClusterDefaultSnatStatusOutput() ClusterDefaultSnatStatusOutput {
	return i.ToClusterDefaultSnatStatusOutputWithContext(context.Background())
}

func (i ClusterDefaultSnatStatusArgs) ToClusterDefaultSnatStatusOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDefaultSnatStatusOutput)
}

func (i ClusterDefaultSnatStatusArgs) ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput {
	return i.ToClusterDefaultSnatStatusPtrOutputWithContext(context.Background())
}

func (i ClusterDefaultSnatStatusArgs) ToClusterDefaultSnatStatusPtrOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDefaultSnatStatusOutput).ToClusterDefaultSnatStatusPtrOutputWithContext(ctx)
}

// ClusterDefaultSnatStatusPtrInput is an input type that accepts ClusterDefaultSnatStatusArgs, ClusterDefaultSnatStatusPtr and ClusterDefaultSnatStatusPtrOutput values.
// You can construct a concrete instance of `ClusterDefaultSnatStatusPtrInput` via:
//
//          ClusterDefaultSnatStatusArgs{...}
//
//  or:
//
//          nil
type ClusterDefaultSnatStatusPtrInput interface {
	pulumi.Input

	ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput
	ToClusterDefaultSnatStatusPtrOutputWithContext(context.Context) ClusterDefaultSnatStatusPtrOutput
}

type clusterDefaultSnatStatusPtrType ClusterDefaultSnatStatusArgs

func ClusterDefaultSnatStatusPtr(v *ClusterDefaultSnatStatusArgs) ClusterDefaultSnatStatusPtrInput {
	return (*clusterDefaultSnatStatusPtrType)(v)
}

func (*clusterDefaultSnatStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDefaultSnatStatus)(nil)).Elem()
}

func (i *clusterDefaultSnatStatusPtrType) ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput {
	return i.ToClusterDefaultSnatStatusPtrOutputWithContext(context.Background())
}

func (i *clusterDefaultSnatStatusPtrType) ToClusterDefaultSnatStatusPtrOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDefaultSnatStatusPtrOutput)
}

type ClusterDefaultSnatStatusOutput struct{ *pulumi.OutputState }

func (ClusterDefaultSnatStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDefaultSnatStatus)(nil)).Elem()
}

func (o ClusterDefaultSnatStatusOutput) ToClusterDefaultSnatStatusOutput() ClusterDefaultSnatStatusOutput {
	return o
}

func (o ClusterDefaultSnatStatusOutput) ToClusterDefaultSnatStatusOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusOutput {
	return o
}

func (o ClusterDefaultSnatStatusOutput) ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput {
	return o.ToClusterDefaultSnatStatusPtrOutputWithContext(context.Background())
}

func (o ClusterDefaultSnatStatusOutput) ToClusterDefaultSnatStatusPtrOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusPtrOutput {
	return o.ApplyT(func(v ClusterDefaultSnatStatus) *ClusterDefaultSnatStatus {
		return &v
	}).(ClusterDefaultSnatStatusPtrOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterDefaultSnatStatusOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterDefaultSnatStatus) bool { return v.Disabled }).(pulumi.BoolOutput)
}

type ClusterDefaultSnatStatusPtrOutput struct{ *pulumi.OutputState }

func (ClusterDefaultSnatStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDefaultSnatStatus)(nil)).Elem()
}

func (o ClusterDefaultSnatStatusPtrOutput) ToClusterDefaultSnatStatusPtrOutput() ClusterDefaultSnatStatusPtrOutput {
	return o
}

func (o ClusterDefaultSnatStatusPtrOutput) ToClusterDefaultSnatStatusPtrOutputWithContext(ctx context.Context) ClusterDefaultSnatStatusPtrOutput {
	return o
}

func (o ClusterDefaultSnatStatusPtrOutput) Elem() ClusterDefaultSnatStatusOutput {
	return o.ApplyT(func(v *ClusterDefaultSnatStatus) ClusterDefaultSnatStatus { return *v }).(ClusterDefaultSnatStatusOutput)
}

// The status of the Istio addon, which makes it easy to set up Istio for services in a
// cluster. It is disabled by default. Set `disabled = false` to enable.
func (o ClusterDefaultSnatStatusPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterDefaultSnatStatus) *bool {
		if v == nil {
			return nil
		}
		return &v.Disabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterIpAllocationPolicy struct {
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock *string `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName *string `pulumi:"clusterSecondaryRangeName"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock *string `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName *string `pulumi:"servicesSecondaryRangeName"`
}

// ClusterIpAllocationPolicyInput is an input type that accepts ClusterIpAllocationPolicyArgs and ClusterIpAllocationPolicyOutput values.
// You can construct a concrete instance of `ClusterIpAllocationPolicyInput` via:
//
//          ClusterIpAllocationPolicyArgs{...}
type ClusterIpAllocationPolicyInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyOutput() ClusterIpAllocationPolicyOutput
	ToClusterIpAllocationPolicyOutputWithContext(context.Context) ClusterIpAllocationPolicyOutput
}

type ClusterIpAllocationPolicyArgs struct {
	// The IP address range for the cluster pod IPs.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ClusterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"clusterIpv4CidrBlock"`
	// The name of the existing secondary
	// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
	// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
	ClusterSecondaryRangeName pulumi.StringPtrInput `pulumi:"clusterSecondaryRangeName"`
	// The IP address range of the services IPs in this cluster.
	// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
	// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
	// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
	// pick a specific range to use.
	ServicesIpv4CidrBlock pulumi.StringPtrInput `pulumi:"servicesIpv4CidrBlock"`
	// The name of the existing
	// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
	// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
	// GKE-managed one.
	ServicesSecondaryRangeName pulumi.StringPtrInput `pulumi:"servicesSecondaryRangeName"`
}

func (ClusterIpAllocationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicy)(nil)).Elem()
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyOutput() ClusterIpAllocationPolicyOutput {
	return i.ToClusterIpAllocationPolicyOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyOutput)
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return i.ToClusterIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterIpAllocationPolicyArgs) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyOutput).ToClusterIpAllocationPolicyPtrOutputWithContext(ctx)
}

// ClusterIpAllocationPolicyPtrInput is an input type that accepts ClusterIpAllocationPolicyArgs, ClusterIpAllocationPolicyPtr and ClusterIpAllocationPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterIpAllocationPolicyPtrInput` via:
//
//          ClusterIpAllocationPolicyArgs{...}
//
//  or:
//
//          nil
type ClusterIpAllocationPolicyPtrInput interface {
	pulumi.Input

	ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput
	ToClusterIpAllocationPolicyPtrOutputWithContext(context.Context) ClusterIpAllocationPolicyPtrOutput
}

type clusterIpAllocationPolicyPtrType ClusterIpAllocationPolicyArgs

func ClusterIpAllocationPolicyPtr(v *ClusterIpAllocationPolicyArgs) ClusterIpAllocationPolicyPtrInput {
	return (*clusterIpAllocationPolicyPtrType)(v)
}

func (*clusterIpAllocationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicy)(nil)).Elem()
}

func (i *clusterIpAllocationPolicyPtrType) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return i.ToClusterIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterIpAllocationPolicyPtrType) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIpAllocationPolicyPtrOutput)
}

type ClusterIpAllocationPolicyOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIpAllocationPolicy)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyOutput() ClusterIpAllocationPolicyOutput {
	return o
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyOutput {
	return o
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return o.ToClusterIpAllocationPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterIpAllocationPolicyOutput) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *ClusterIpAllocationPolicy {
		return &v
	}).(ClusterIpAllocationPolicyPtrOutput)
}

// The IP address range for the cluster pod IPs.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyOutput) ClusterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *string { return v.ClusterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing secondary
// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
func (o ClusterIpAllocationPolicyOutput) ClusterSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *string { return v.ClusterSecondaryRangeName }).(pulumi.StringPtrOutput)
}

// The IP address range of the services IPs in this cluster.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyOutput) ServicesIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *string { return v.ServicesIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the existing
// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
// GKE-managed one.
func (o ClusterIpAllocationPolicyOutput) ServicesSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIpAllocationPolicy) *string { return v.ServicesSecondaryRangeName }).(pulumi.StringPtrOutput)
}

type ClusterIpAllocationPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterIpAllocationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIpAllocationPolicy)(nil)).Elem()
}

func (o ClusterIpAllocationPolicyPtrOutput) ToClusterIpAllocationPolicyPtrOutput() ClusterIpAllocationPolicyPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyPtrOutput) ToClusterIpAllocationPolicyPtrOutputWithContext(ctx context.Context) ClusterIpAllocationPolicyPtrOutput {
	return o
}

func (o ClusterIpAllocationPolicyPtrOutput) Elem() ClusterIpAllocationPolicyOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) ClusterIpAllocationPolicy { return *v }).(ClusterIpAllocationPolicyOutput)
}

// The IP address range for the cluster pod IPs.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyPtrOutput) ClusterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The name of the existing secondary
// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
// `clusterIpv4CidrBlock` can be used to automatically create a GKE-managed one.
func (o ClusterIpAllocationPolicyPtrOutput) ClusterSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ClusterSecondaryRangeName
	}).(pulumi.StringPtrOutput)
}

// The IP address range of the services IPs in this cluster.
// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
// pick a specific range to use.
func (o ClusterIpAllocationPolicyPtrOutput) ServicesIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ServicesIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The name of the existing
// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
// Alternatively, `servicesIpv4CidrBlock` can be used to automatically create a
// GKE-managed one.
func (o ClusterIpAllocationPolicyPtrOutput) ServicesSecondaryRangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIpAllocationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ServicesSecondaryRangeName
	}).(pulumi.StringPtrOutput)
}

type ClusterMaintenancePolicy struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	DailyMaintenanceWindow *ClusterMaintenancePolicyDailyMaintenanceWindow `pulumi:"dailyMaintenanceWindow"`
	// Time window for
	// recurring maintenance operations.
	RecurringWindow *ClusterMaintenancePolicyRecurringWindow `pulumi:"recurringWindow"`
}

// ClusterMaintenancePolicyInput is an input type that accepts ClusterMaintenancePolicyArgs and ClusterMaintenancePolicyOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyInput` via:
//
//          ClusterMaintenancePolicyArgs{...}
type ClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput
	ToClusterMaintenancePolicyOutputWithContext(context.Context) ClusterMaintenancePolicyOutput
}

type ClusterMaintenancePolicyArgs struct {
	// Time window specified for daily maintenance operations.
	// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
	// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
	DailyMaintenanceWindow ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput `pulumi:"dailyMaintenanceWindow"`
	// Time window for
	// recurring maintenance operations.
	RecurringWindow ClusterMaintenancePolicyRecurringWindowPtrInput `pulumi:"recurringWindow"`
}

func (ClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return i.ToClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput)
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyArgs) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyOutput).ToClusterMaintenancePolicyPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyPtrInput is an input type that accepts ClusterMaintenancePolicyArgs, ClusterMaintenancePolicyPtr and ClusterMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyPtrInput` via:
//
//          ClusterMaintenancePolicyArgs{...}
//
//  or:
//
//          nil
type ClusterMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput
	ToClusterMaintenancePolicyPtrOutputWithContext(context.Context) ClusterMaintenancePolicyPtrOutput
}

type clusterMaintenancePolicyPtrType ClusterMaintenancePolicyArgs

func ClusterMaintenancePolicyPtr(v *ClusterMaintenancePolicyArgs) ClusterMaintenancePolicyPtrInput {
	return (*clusterMaintenancePolicyPtrType)(v)
}

func (*clusterMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return i.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyPtrType) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyPtrOutput)
}

type ClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutput() ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyOutputWithContext(ctx context.Context) ClusterMaintenancePolicyOutput {
	return o
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o.ToClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicy {
		return &v
	}).(ClusterMaintenancePolicyPtrOutput)
}

// Time window specified for daily maintenance operations.
// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
func (o ClusterMaintenancePolicyOutput) DailyMaintenanceWindow() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicyDailyMaintenanceWindow {
		return v.DailyMaintenanceWindow
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

// Time window for
// recurring maintenance operations.
func (o ClusterMaintenancePolicyOutput) RecurringWindow() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicy) *ClusterMaintenancePolicyRecurringWindow { return v.RecurringWindow }).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicy)(nil)).Elem()
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutput() ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) ToClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyPtrOutput) Elem() ClusterMaintenancePolicyOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) ClusterMaintenancePolicy { return *v }).(ClusterMaintenancePolicyOutput)
}

// Time window specified for daily maintenance operations.
// Specify `startTime` in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format "HH:MM”,
// where HH : \[00-23\] and MM : \[00-59\] GMT. For example:
func (o ClusterMaintenancePolicyPtrOutput) DailyMaintenanceWindow() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) *ClusterMaintenancePolicyDailyMaintenanceWindow {
		if v == nil {
			return nil
		}
		return v.DailyMaintenanceWindow
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

// Time window for
// recurring maintenance operations.
func (o ClusterMaintenancePolicyPtrOutput) RecurringWindow() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicy) *ClusterMaintenancePolicyRecurringWindow {
		if v == nil {
			return nil
		}
		return v.RecurringWindow
	}).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindow struct {
	Duration  *string `pulumi:"duration"`
	StartTime string  `pulumi:"startTime"`
}

// ClusterMaintenancePolicyDailyMaintenanceWindowInput is an input type that accepts ClusterMaintenancePolicyDailyMaintenanceWindowArgs and ClusterMaintenancePolicyDailyMaintenanceWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyDailyMaintenanceWindowInput` via:
//
//          ClusterMaintenancePolicyDailyMaintenanceWindowArgs{...}
type ClusterMaintenancePolicyDailyMaintenanceWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyDailyMaintenanceWindowOutput() ClusterMaintenancePolicyDailyMaintenanceWindowOutput
	ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowOutput
}

type ClusterMaintenancePolicyDailyMaintenanceWindowArgs struct {
	Duration  pulumi.StringPtrInput `pulumi:"duration"`
	StartTime pulumi.StringInput    `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowOutput() ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowOutput).ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput is an input type that accepts ClusterMaintenancePolicyDailyMaintenanceWindowArgs, ClusterMaintenancePolicyDailyMaintenanceWindowPtr and ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput` via:
//
//          ClusterMaintenancePolicyDailyMaintenanceWindowArgs{...}
//
//  or:
//
//          nil
type ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput
	ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput
}

type clusterMaintenancePolicyDailyMaintenanceWindowPtrType ClusterMaintenancePolicyDailyMaintenanceWindowArgs

func ClusterMaintenancePolicyDailyMaintenanceWindowPtr(v *ClusterMaintenancePolicyDailyMaintenanceWindowArgs) ClusterMaintenancePolicyDailyMaintenanceWindowPtrInput {
	return (*clusterMaintenancePolicyDailyMaintenanceWindowPtrType)(v)
}

func (*clusterMaintenancePolicyDailyMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyDailyMaintenanceWindowPtrType) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return i.ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyDailyMaintenanceWindowPtrType) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowOutput() ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) *ClusterMaintenancePolicyDailyMaintenanceWindow {
		return &v
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput)
}
func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyDailyMaintenanceWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyDailyMaintenanceWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput() ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) ToClusterMaintenancePolicyDailyMaintenanceWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) Elem() ClusterMaintenancePolicyDailyMaintenanceWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyDailyMaintenanceWindow) ClusterMaintenancePolicyDailyMaintenanceWindow {
		return *v
	}).(ClusterMaintenancePolicyDailyMaintenanceWindowOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyDailyMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyDailyMaintenanceWindow) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type ClusterMaintenancePolicyRecurringWindow struct {
	EndTime    string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime  string `pulumi:"startTime"`
}

// ClusterMaintenancePolicyRecurringWindowInput is an input type that accepts ClusterMaintenancePolicyRecurringWindowArgs and ClusterMaintenancePolicyRecurringWindowOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyRecurringWindowInput` via:
//
//          ClusterMaintenancePolicyRecurringWindowArgs{...}
type ClusterMaintenancePolicyRecurringWindowInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyRecurringWindowOutput() ClusterMaintenancePolicyRecurringWindowOutput
	ToClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Context) ClusterMaintenancePolicyRecurringWindowOutput
}

type ClusterMaintenancePolicyRecurringWindowArgs struct {
	EndTime    pulumi.StringInput `pulumi:"endTime"`
	Recurrence pulumi.StringInput `pulumi:"recurrence"`
	StartTime  pulumi.StringInput `pulumi:"startTime"`
}

func (ClusterMaintenancePolicyRecurringWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowOutput() ClusterMaintenancePolicyRecurringWindowOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowOutput)
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Background())
}

func (i ClusterMaintenancePolicyRecurringWindowArgs) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowOutput).ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx)
}

// ClusterMaintenancePolicyRecurringWindowPtrInput is an input type that accepts ClusterMaintenancePolicyRecurringWindowArgs, ClusterMaintenancePolicyRecurringWindowPtr and ClusterMaintenancePolicyRecurringWindowPtrOutput values.
// You can construct a concrete instance of `ClusterMaintenancePolicyRecurringWindowPtrInput` via:
//
//          ClusterMaintenancePolicyRecurringWindowArgs{...}
//
//  or:
//
//          nil
type ClusterMaintenancePolicyRecurringWindowPtrInput interface {
	pulumi.Input

	ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput
	ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput
}

type clusterMaintenancePolicyRecurringWindowPtrType ClusterMaintenancePolicyRecurringWindowArgs

func ClusterMaintenancePolicyRecurringWindowPtr(v *ClusterMaintenancePolicyRecurringWindowArgs) ClusterMaintenancePolicyRecurringWindowPtrInput {
	return (*clusterMaintenancePolicyRecurringWindowPtrType)(v)
}

func (*clusterMaintenancePolicyRecurringWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (i *clusterMaintenancePolicyRecurringWindowPtrType) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return i.ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Background())
}

func (i *clusterMaintenancePolicyRecurringWindowPtrType) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}

type ClusterMaintenancePolicyRecurringWindowOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyRecurringWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowOutput() ClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(context.Background())
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) *ClusterMaintenancePolicyRecurringWindow {
		return &v
	}).(ClusterMaintenancePolicyRecurringWindowPtrOutput)
}
func (o ClusterMaintenancePolicyRecurringWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) Recurrence() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.Recurrence }).(pulumi.StringOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMaintenancePolicyRecurringWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

type ClusterMaintenancePolicyRecurringWindowPtrOutput struct{ *pulumi.OutputState }

func (ClusterMaintenancePolicyRecurringWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMaintenancePolicyRecurringWindow)(nil)).Elem()
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutput() ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) ToClusterMaintenancePolicyRecurringWindowPtrOutputWithContext(ctx context.Context) ClusterMaintenancePolicyRecurringWindowPtrOutput {
	return o
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) Elem() ClusterMaintenancePolicyRecurringWindowOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindow) ClusterMaintenancePolicyRecurringWindow { return *v }).(ClusterMaintenancePolicyRecurringWindowOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindow) *string {
		if v == nil {
			return nil
		}
		return &v.EndTime
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) Recurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Recurrence
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMaintenancePolicyRecurringWindowPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMaintenancePolicyRecurringWindow) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type ClusterMasterAuth struct {
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig *ClusterMasterAuthClientCertificateConfig `pulumi:"clientCertificateConfig"`
	ClientKey               *string                                   `pulumi:"clientKey"`
	ClusterCaCertificate    *string                                   `pulumi:"clusterCaCertificate"`
	// The password to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint.
	Password *string `pulumi:"password"`
	// The username to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint. If not present basic auth will be disabled.
	Username *string `pulumi:"username"`
}

// ClusterMasterAuthInput is an input type that accepts ClusterMasterAuthArgs and ClusterMasterAuthOutput values.
// You can construct a concrete instance of `ClusterMasterAuthInput` via:
//
//          ClusterMasterAuthArgs{...}
type ClusterMasterAuthInput interface {
	pulumi.Input

	ToClusterMasterAuthOutput() ClusterMasterAuthOutput
	ToClusterMasterAuthOutputWithContext(context.Context) ClusterMasterAuthOutput
}

type ClusterMasterAuthArgs struct {
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Whether client certificate authorization is enabled for this cluster.  For example:
	ClientCertificateConfig ClusterMasterAuthClientCertificateConfigPtrInput `pulumi:"clientCertificateConfig"`
	ClientKey               pulumi.StringPtrInput                            `pulumi:"clientKey"`
	ClusterCaCertificate    pulumi.StringPtrInput                            `pulumi:"clusterCaCertificate"`
	// The password to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username to use for HTTP basic authentication when accessing
	// the Kubernetes master endpoint. If not present basic auth will be disabled.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ClusterMasterAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuth)(nil)).Elem()
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthOutput() ClusterMasterAuthOutput {
	return i.ToClusterMasterAuthOutputWithContext(context.Background())
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthOutputWithContext(ctx context.Context) ClusterMasterAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthOutput)
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return i.ToClusterMasterAuthPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthArgs) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthOutput).ToClusterMasterAuthPtrOutputWithContext(ctx)
}

// ClusterMasterAuthPtrInput is an input type that accepts ClusterMasterAuthArgs, ClusterMasterAuthPtr and ClusterMasterAuthPtrOutput values.
// You can construct a concrete instance of `ClusterMasterAuthPtrInput` via:
//
//          ClusterMasterAuthArgs{...}
//
//  or:
//
//          nil
type ClusterMasterAuthPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput
	ToClusterMasterAuthPtrOutputWithContext(context.Context) ClusterMasterAuthPtrOutput
}

type clusterMasterAuthPtrType ClusterMasterAuthArgs

func ClusterMasterAuthPtr(v *ClusterMasterAuthArgs) ClusterMasterAuthPtrInput {
	return (*clusterMasterAuthPtrType)(v)
}

func (*clusterMasterAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuth)(nil)).Elem()
}

func (i *clusterMasterAuthPtrType) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return i.ToClusterMasterAuthPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthPtrType) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthPtrOutput)
}

type ClusterMasterAuthOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuth)(nil)).Elem()
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthOutput() ClusterMasterAuthOutput {
	return o
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthOutputWithContext(ctx context.Context) ClusterMasterAuthOutput {
	return o
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return o.ToClusterMasterAuthPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthOutput) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *ClusterMasterAuth {
		return &v
	}).(ClusterMasterAuthPtrOutput)
}
func (o ClusterMasterAuthOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Whether client certificate authorization is enabled for this cluster.  For example:
func (o ClusterMasterAuthOutput) ClientCertificateConfig() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *ClusterMasterAuthClientCertificateConfig { return v.ClientCertificateConfig }).(ClusterMasterAuthClientCertificateConfigPtrOutput)
}

func (o ClusterMasterAuthOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterAuthOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The password to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint.
func (o ClusterMasterAuthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint. If not present basic auth will be disabled.
func (o ClusterMasterAuthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuth)(nil)).Elem()
}

func (o ClusterMasterAuthPtrOutput) ToClusterMasterAuthPtrOutput() ClusterMasterAuthPtrOutput {
	return o
}

func (o ClusterMasterAuthPtrOutput) ToClusterMasterAuthPtrOutputWithContext(ctx context.Context) ClusterMasterAuthPtrOutput {
	return o
}

func (o ClusterMasterAuthPtrOutput) Elem() ClusterMasterAuthOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) ClusterMasterAuth { return *v }).(ClusterMasterAuthOutput)
}

func (o ClusterMasterAuthPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// Whether client certificate authorization is enabled for this cluster.  For example:
func (o ClusterMasterAuthPtrOutput) ClientCertificateConfig() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *ClusterMasterAuthClientCertificateConfig {
		if v == nil {
			return nil
		}
		return v.ClientCertificateConfig
	}).(ClusterMasterAuthClientCertificateConfigPtrOutput)
}

func (o ClusterMasterAuthPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMasterAuthPtrOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCaCertificate
	}).(pulumi.StringPtrOutput)
}

// The password to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint.
func (o ClusterMasterAuthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing
// the Kubernetes master endpoint. If not present basic auth will be disabled.
func (o ClusterMasterAuthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuth) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthClientCertificateConfig struct {
	IssueClientCertificate bool `pulumi:"issueClientCertificate"`
}

// ClusterMasterAuthClientCertificateConfigInput is an input type that accepts ClusterMasterAuthClientCertificateConfigArgs and ClusterMasterAuthClientCertificateConfigOutput values.
// You can construct a concrete instance of `ClusterMasterAuthClientCertificateConfigInput` via:
//
//          ClusterMasterAuthClientCertificateConfigArgs{...}
type ClusterMasterAuthClientCertificateConfigInput interface {
	pulumi.Input

	ToClusterMasterAuthClientCertificateConfigOutput() ClusterMasterAuthClientCertificateConfigOutput
	ToClusterMasterAuthClientCertificateConfigOutputWithContext(context.Context) ClusterMasterAuthClientCertificateConfigOutput
}

type ClusterMasterAuthClientCertificateConfigArgs struct {
	IssueClientCertificate pulumi.BoolInput `pulumi:"issueClientCertificate"`
}

func (ClusterMasterAuthClientCertificateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigOutput() ClusterMasterAuthClientCertificateConfigOutput {
	return i.ToClusterMasterAuthClientCertificateConfigOutputWithContext(context.Background())
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigOutput)
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return i.ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthClientCertificateConfigArgs) ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigOutput).ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx)
}

// ClusterMasterAuthClientCertificateConfigPtrInput is an input type that accepts ClusterMasterAuthClientCertificateConfigArgs, ClusterMasterAuthClientCertificateConfigPtr and ClusterMasterAuthClientCertificateConfigPtrOutput values.
// You can construct a concrete instance of `ClusterMasterAuthClientCertificateConfigPtrInput` via:
//
//          ClusterMasterAuthClientCertificateConfigArgs{...}
//
//  or:
//
//          nil
type ClusterMasterAuthClientCertificateConfigPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput
	ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput
}

type clusterMasterAuthClientCertificateConfigPtrType ClusterMasterAuthClientCertificateConfigArgs

func ClusterMasterAuthClientCertificateConfigPtr(v *ClusterMasterAuthClientCertificateConfigArgs) ClusterMasterAuthClientCertificateConfigPtrInput {
	return (*clusterMasterAuthClientCertificateConfigPtrType)(v)
}

func (*clusterMasterAuthClientCertificateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (i *clusterMasterAuthClientCertificateConfigPtrType) ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return i.ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthClientCertificateConfigPtrType) ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthClientCertificateConfigPtrOutput)
}

type ClusterMasterAuthClientCertificateConfigOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthClientCertificateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigOutput() ClusterMasterAuthClientCertificateConfigOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o.ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthClientCertificateConfigOutput) ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthClientCertificateConfig) *ClusterMasterAuthClientCertificateConfig {
		return &v
	}).(ClusterMasterAuthClientCertificateConfigPtrOutput)
}
func (o ClusterMasterAuthClientCertificateConfigOutput) IssueClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterMasterAuthClientCertificateConfig) bool { return v.IssueClientCertificate }).(pulumi.BoolOutput)
}

type ClusterMasterAuthClientCertificateConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthClientCertificateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthClientCertificateConfig)(nil)).Elem()
}

func (o ClusterMasterAuthClientCertificateConfigPtrOutput) ToClusterMasterAuthClientCertificateConfigPtrOutput() ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigPtrOutput) ToClusterMasterAuthClientCertificateConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthClientCertificateConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthClientCertificateConfigPtrOutput) Elem() ClusterMasterAuthClientCertificateConfigOutput {
	return o.ApplyT(func(v *ClusterMasterAuthClientCertificateConfig) ClusterMasterAuthClientCertificateConfig { return *v }).(ClusterMasterAuthClientCertificateConfigOutput)
}

func (o ClusterMasterAuthClientCertificateConfigPtrOutput) IssueClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterMasterAuthClientCertificateConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.IssueClientCertificate
	}).(pulumi.BoolPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfig struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks []ClusterMasterAuthorizedNetworksConfigCidrBlock `pulumi:"cidrBlocks"`
}

// ClusterMasterAuthorizedNetworksConfigInput is an input type that accepts ClusterMasterAuthorizedNetworksConfigArgs and ClusterMasterAuthorizedNetworksConfigOutput values.
// You can construct a concrete instance of `ClusterMasterAuthorizedNetworksConfigInput` via:
//
//          ClusterMasterAuthorizedNetworksConfigArgs{...}
type ClusterMasterAuthorizedNetworksConfigInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigOutput() ClusterMasterAuthorizedNetworksConfigOutput
	ToClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigOutput
}

type ClusterMasterAuthorizedNetworksConfigArgs struct {
	// External networks that can access the
	// Kubernetes cluster master through HTTPS.
	CidrBlocks ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput `pulumi:"cidrBlocks"`
}

func (ClusterMasterAuthorizedNetworksConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigOutput() ClusterMasterAuthorizedNetworksConfigOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigOutput)
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigArgs) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigOutput).ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx)
}

// ClusterMasterAuthorizedNetworksConfigPtrInput is an input type that accepts ClusterMasterAuthorizedNetworksConfigArgs, ClusterMasterAuthorizedNetworksConfigPtr and ClusterMasterAuthorizedNetworksConfigPtrOutput values.
// You can construct a concrete instance of `ClusterMasterAuthorizedNetworksConfigPtrInput` via:
//
//          ClusterMasterAuthorizedNetworksConfigArgs{...}
//
//  or:
//
//          nil
type ClusterMasterAuthorizedNetworksConfigPtrInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput
	ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput
}

type clusterMasterAuthorizedNetworksConfigPtrType ClusterMasterAuthorizedNetworksConfigArgs

func ClusterMasterAuthorizedNetworksConfigPtr(v *ClusterMasterAuthorizedNetworksConfigArgs) ClusterMasterAuthorizedNetworksConfigPtrInput {
	return (*clusterMasterAuthorizedNetworksConfigPtrType)(v)
}

func (*clusterMasterAuthorizedNetworksConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (i *clusterMasterAuthorizedNetworksConfigPtrType) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Background())
}

func (i *clusterMasterAuthorizedNetworksConfigPtrType) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigOutput() ClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o.ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(context.Background())
}

func (o ClusterMasterAuthorizedNetworksConfigOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfig) *ClusterMasterAuthorizedNetworksConfig {
		return &v
	}).(ClusterMasterAuthorizedNetworksConfigPtrOutput)
}

// External networks that can access the
// Kubernetes cluster master through HTTPS.
func (o ClusterMasterAuthorizedNetworksConfigOutput) CidrBlocks() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfig) []ClusterMasterAuthorizedNetworksConfigCidrBlock {
		return v.CidrBlocks
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterAuthorizedNetworksConfig)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutput() ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) ToClusterMasterAuthorizedNetworksConfigPtrOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) Elem() ClusterMasterAuthorizedNetworksConfigOutput {
	return o.ApplyT(func(v *ClusterMasterAuthorizedNetworksConfig) ClusterMasterAuthorizedNetworksConfig { return *v }).(ClusterMasterAuthorizedNetworksConfigOutput)
}

// External networks that can access the
// Kubernetes cluster master through HTTPS.
func (o ClusterMasterAuthorizedNetworksConfigPtrOutput) CidrBlocks() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o.ApplyT(func(v *ClusterMasterAuthorizedNetworksConfig) []ClusterMasterAuthorizedNetworksConfigCidrBlock {
		if v == nil {
			return nil
		}
		return v.CidrBlocks
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlock struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock string `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName *string `pulumi:"displayName"`
}

// ClusterMasterAuthorizedNetworksConfigCidrBlockInput is an input type that accepts ClusterMasterAuthorizedNetworksConfigCidrBlockArgs and ClusterMasterAuthorizedNetworksConfigCidrBlockOutput values.
// You can construct a concrete instance of `ClusterMasterAuthorizedNetworksConfigCidrBlockInput` via:
//
//          ClusterMasterAuthorizedNetworksConfigCidrBlockArgs{...}
type ClusterMasterAuthorizedNetworksConfigCidrBlockInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockOutput
	ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArgs struct {
	// External network that can access Kubernetes master through HTTPS.
	// Must be specified in CIDR notation.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Field for users to identify CIDR blocks.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
}

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArgs) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

// ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput is an input type that accepts ClusterMasterAuthorizedNetworksConfigCidrBlockArray and ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput values.
// You can construct a concrete instance of `ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput` via:
//
//          ClusterMasterAuthorizedNetworksConfigCidrBlockArray{ ClusterMasterAuthorizedNetworksConfigCidrBlockArgs{...} }
type ClusterMasterAuthorizedNetworksConfigCidrBlockArrayInput interface {
	pulumi.Input

	ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
	ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArray []ClusterMasterAuthorizedNetworksConfigCidrBlockInput

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return i.ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(context.Background())
}

func (i ClusterMasterAuthorizedNetworksConfigCidrBlockArray) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return o
}

// External network that can access Kubernetes master through HTTPS.
// Must be specified in CIDR notation.
func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigCidrBlock) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Field for users to identify CIDR blocks.
func (o ClusterMasterAuthorizedNetworksConfigCidrBlockOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterAuthorizedNetworksConfigCidrBlock) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

type ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput struct{ *pulumi.OutputState }

func (ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterAuthorizedNetworksConfigCidrBlock)(nil)).Elem()
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput() ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) ToClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutputWithContext(ctx context.Context) ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput {
	return o
}

func (o ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput) Index(i pulumi.IntInput) ClusterMasterAuthorizedNetworksConfigCidrBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMasterAuthorizedNetworksConfigCidrBlock {
		return vs[0].([]ClusterMasterAuthorizedNetworksConfigCidrBlock)[vs[1].(int)]
	}).(ClusterMasterAuthorizedNetworksConfigCidrBlockOutput)
}

type ClusterNetworkPolicy struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider *string `pulumi:"provider"`
}

// ClusterNetworkPolicyInput is an input type that accepts ClusterNetworkPolicyArgs and ClusterNetworkPolicyOutput values.
// You can construct a concrete instance of `ClusterNetworkPolicyInput` via:
//
//          ClusterNetworkPolicyArgs{...}
type ClusterNetworkPolicyInput interface {
	pulumi.Input

	ToClusterNetworkPolicyOutput() ClusterNetworkPolicyOutput
	ToClusterNetworkPolicyOutputWithContext(context.Context) ClusterNetworkPolicyOutput
}

type ClusterNetworkPolicyArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (ClusterNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicy)(nil)).Elem()
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyOutput() ClusterNetworkPolicyOutput {
	return i.ToClusterNetworkPolicyOutputWithContext(context.Background())
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyOutputWithContext(ctx context.Context) ClusterNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyOutput)
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return i.ToClusterNetworkPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkPolicyArgs) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyOutput).ToClusterNetworkPolicyPtrOutputWithContext(ctx)
}

// ClusterNetworkPolicyPtrInput is an input type that accepts ClusterNetworkPolicyArgs, ClusterNetworkPolicyPtr and ClusterNetworkPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkPolicyPtrInput` via:
//
//          ClusterNetworkPolicyArgs{...}
//
//  or:
//
//          nil
type ClusterNetworkPolicyPtrInput interface {
	pulumi.Input

	ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput
	ToClusterNetworkPolicyPtrOutputWithContext(context.Context) ClusterNetworkPolicyPtrOutput
}

type clusterNetworkPolicyPtrType ClusterNetworkPolicyArgs

func ClusterNetworkPolicyPtr(v *ClusterNetworkPolicyArgs) ClusterNetworkPolicyPtrInput {
	return (*clusterNetworkPolicyPtrType)(v)
}

func (*clusterNetworkPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkPolicy)(nil)).Elem()
}

func (i *clusterNetworkPolicyPtrType) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return i.ToClusterNetworkPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkPolicyPtrType) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPolicyPtrOutput)
}

type ClusterNetworkPolicyOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkPolicy)(nil)).Elem()
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyOutput() ClusterNetworkPolicyOutput {
	return o
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyOutputWithContext(ctx context.Context) ClusterNetworkPolicyOutput {
	return o
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return o.ToClusterNetworkPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkPolicyOutput) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) *ClusterNetworkPolicy {
		return &v
	}).(ClusterNetworkPolicyPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterNetworkPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
func (o ClusterNetworkPolicyOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkPolicy) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type ClusterNetworkPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkPolicy)(nil)).Elem()
}

func (o ClusterNetworkPolicyPtrOutput) ToClusterNetworkPolicyPtrOutput() ClusterNetworkPolicyPtrOutput {
	return o
}

func (o ClusterNetworkPolicyPtrOutput) ToClusterNetworkPolicyPtrOutputWithContext(ctx context.Context) ClusterNetworkPolicyPtrOutput {
	return o
}

func (o ClusterNetworkPolicyPtrOutput) Elem() ClusterNetworkPolicyOutput {
	return o.ApplyT(func(v *ClusterNetworkPolicy) ClusterNetworkPolicy { return *v }).(ClusterNetworkPolicyOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterNetworkPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The selected network policy provider. Defaults to PROVIDER_UNSPECIFIED.
func (o ClusterNetworkPolicyPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

type ClusterNodeConfig struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType *string `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType *string `pulumi:"imageType"`
	// )
	// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Structure is documented below.
	KubeletConfig *ClusterNodeConfigKubeletConfig `pulumi:"kubeletConfig"`
	// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
	// reserved by Kubernetes Core components and cannot be specified.
	Labels map[string]string `pulumi:"labels"`
	// )
	// Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Note that validations happen all server side. All attributes are optional.
	// Structure is documented below.
	LinuxNodeConfig *ClusterNodeConfigLinuxNodeConfig `pulumi:"linuxNodeConfig"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount *int `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType *string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig *ClusterNodeConfigSandboxConfig `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig *ClusterNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodeConfigTaint `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

// ClusterNodeConfigInput is an input type that accepts ClusterNodeConfigArgs and ClusterNodeConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigInput` via:
//
//          ClusterNodeConfigArgs{...}
type ClusterNodeConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigOutput() ClusterNodeConfigOutput
	ToClusterNodeConfigOutputWithContext(context.Context) ClusterNodeConfigOutput
}

type ClusterNodeConfigArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// )
	// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Structure is documented below.
	KubeletConfig ClusterNodeConfigKubeletConfigPtrInput `pulumi:"kubeletConfig"`
	// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
	// reserved by Kubernetes Core components and cannot be specified.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// )
	// Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Note that validations happen all server side. All attributes are optional.
	// Structure is documented below.
	LinuxNodeConfig ClusterNodeConfigLinuxNodeConfigPtrInput `pulumi:"linuxNodeConfig"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntPtrInput `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig ClusterNodeConfigSandboxConfigPtrInput `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodeConfigShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodeConfigTaintArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfig)(nil)).Elem()
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigOutput() ClusterNodeConfigOutput {
	return i.ToClusterNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigOutput)
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return i.ToClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigArgs) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigOutput).ToClusterNodeConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigPtrInput is an input type that accepts ClusterNodeConfigArgs, ClusterNodeConfigPtr and ClusterNodeConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigPtrInput` via:
//
//          ClusterNodeConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput
	ToClusterNodeConfigPtrOutputWithContext(context.Context) ClusterNodeConfigPtrOutput
}

type clusterNodeConfigPtrType ClusterNodeConfigArgs

func ClusterNodeConfigPtr(v *ClusterNodeConfigArgs) ClusterNodeConfigPtrInput {
	return (*clusterNodeConfigPtrType)(v)
}

func (*clusterNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfig)(nil)).Elem()
}

func (i *clusterNodeConfigPtrType) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return i.ToClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigPtrType) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigPtrOutput)
}

type ClusterNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigOutput() ClusterNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return o.ToClusterNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigOutput) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfig {
		return &v
	}).(ClusterNodeConfigPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodeConfigOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodeConfigOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodeConfigOutput) GuestAccelerators() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigGuestAccelerator { return v.GuestAccelerators }).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodeConfigOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// )
// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Structure is documented below.
func (o ClusterNodeConfigOutput) KubeletConfig() ClusterNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigKubeletConfig { return v.KubeletConfig }).(ClusterNodeConfigKubeletConfigPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
// reserved by Kubernetes Core components and cannot be specified.
func (o ClusterNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// )
// Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Note that validations happen all server side. All attributes are optional.
// Structure is documented below.
func (o ClusterNodeConfigOutput) LinuxNodeConfig() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigLinuxNodeConfig { return v.LinuxNodeConfig }).(ClusterNodeConfigLinuxNodeConfigPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodeConfigOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodeConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodeConfigOutput) SandboxConfig() ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigSandboxConfig { return v.SandboxConfig }).(ClusterNodeConfigSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodeConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodeConfigOutput) ShieldedInstanceConfig() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(ClusterNodeConfigShieldedInstanceConfigPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodeConfigOutput) Taints() ClusterNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodeConfig) []ClusterNodeConfigTaint { return v.Taints }).(ClusterNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodeConfigOutput) WorkloadMetadataConfig() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfig) *ClusterNodeConfigWorkloadMetadataConfig { return v.WorkloadMetadataConfig }).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigPtrOutput) ToClusterNodeConfigPtrOutput() ClusterNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigPtrOutput) ToClusterNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigPtrOutput) Elem() ClusterNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) ClusterNodeConfig { return *v }).(ClusterNodeConfigOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodeConfigPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.BootDiskKmsKey
	}).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodeConfigPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodeConfigPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodeConfigPtrOutput) GuestAccelerators() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []ClusterNodeConfigGuestAccelerator {
		if v == nil {
			return nil
		}
		return v.GuestAccelerators
	}).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodeConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// )
// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) KubeletConfig() ClusterNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigKubeletConfig {
		if v == nil {
			return nil
		}
		return v.KubeletConfig
	}).(ClusterNodeConfigKubeletConfigPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
// reserved by Kubernetes Core components and cannot be specified.
func (o ClusterNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// )
// Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Note that validations happen all server side. All attributes are optional.
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) LinuxNodeConfig() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigLinuxNodeConfig {
		if v == nil {
			return nil
		}
		return v.LinuxNodeConfig
	}).(ClusterNodeConfigLinuxNodeConfigPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodeConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodeConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodeConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodeConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodeConfigPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Preemptible
	}).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) SandboxConfig() ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigSandboxConfig {
		if v == nil {
			return nil
		}
		return v.SandboxConfig
	}).(ClusterNodeConfigSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodeConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) ShieldedInstanceConfig() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigShieldedInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ShieldedInstanceConfig
	}).(ClusterNodeConfigShieldedInstanceConfigPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodeConfigPtrOutput) Taints() ClusterNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) []ClusterNodeConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(ClusterNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodeConfigPtrOutput) WorkloadMetadataConfig() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfig) *ClusterNodeConfigWorkloadMetadataConfig {
		if v == nil {
			return nil
		}
		return v.WorkloadMetadataConfig
	}).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigGuestAccelerator struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

// ClusterNodeConfigGuestAcceleratorInput is an input type that accepts ClusterNodeConfigGuestAcceleratorArgs and ClusterNodeConfigGuestAcceleratorOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGuestAcceleratorInput` via:
//
//          ClusterNodeConfigGuestAcceleratorArgs{...}
type ClusterNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput
	ToClusterNodeConfigGuestAcceleratorOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorOutput
}

type ClusterNodeConfigGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArgs) ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput {
	return i.ToClusterNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArgs) ToClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorOutput)
}

// ClusterNodeConfigGuestAcceleratorArrayInput is an input type that accepts ClusterNodeConfigGuestAcceleratorArray and ClusterNodeConfigGuestAcceleratorArrayOutput values.
// You can construct a concrete instance of `ClusterNodeConfigGuestAcceleratorArrayInput` via:
//
//          ClusterNodeConfigGuestAcceleratorArray{ ClusterNodeConfigGuestAcceleratorArgs{...} }
type ClusterNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput
	ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput
}

type ClusterNodeConfigGuestAcceleratorArray []ClusterNodeConfigGuestAcceleratorInput

func (ClusterNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArray) ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return i.ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArray) ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

type ClusterNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorOutput) ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorOutput) ToClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigGuestAccelerator {
		return vs[0].([]ClusterNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(ClusterNodeConfigGuestAcceleratorOutput)
}

type ClusterNodeConfigKubeletConfig struct {
	// If true, enables CPU CFS quota enforcement for
	// containers that specify CPU limits.
	CpuCfsQuota *bool `pulumi:"cpuCfsQuota"`
	// The CPU CFS quota period value. Specified
	// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
	// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
	// "h". The value must be a positive duration.
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	// The CPU management policy on the node. See
	// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
	// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
	CpuManagerPolicy string `pulumi:"cpuManagerPolicy"`
}

// ClusterNodeConfigKubeletConfigInput is an input type that accepts ClusterNodeConfigKubeletConfigArgs and ClusterNodeConfigKubeletConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigKubeletConfigInput` via:
//
//          ClusterNodeConfigKubeletConfigArgs{...}
type ClusterNodeConfigKubeletConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigKubeletConfigOutput() ClusterNodeConfigKubeletConfigOutput
	ToClusterNodeConfigKubeletConfigOutputWithContext(context.Context) ClusterNodeConfigKubeletConfigOutput
}

type ClusterNodeConfigKubeletConfigArgs struct {
	// If true, enables CPU CFS quota enforcement for
	// containers that specify CPU limits.
	CpuCfsQuota pulumi.BoolPtrInput `pulumi:"cpuCfsQuota"`
	// The CPU CFS quota period value. Specified
	// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
	// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
	// "h". The value must be a positive duration.
	CpuCfsQuotaPeriod pulumi.StringPtrInput `pulumi:"cpuCfsQuotaPeriod"`
	// The CPU management policy on the node. See
	// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
	// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
	CpuManagerPolicy pulumi.StringInput `pulumi:"cpuManagerPolicy"`
}

func (ClusterNodeConfigKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (i ClusterNodeConfigKubeletConfigArgs) ToClusterNodeConfigKubeletConfigOutput() ClusterNodeConfigKubeletConfigOutput {
	return i.ToClusterNodeConfigKubeletConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigKubeletConfigArgs) ToClusterNodeConfigKubeletConfigOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigKubeletConfigOutput)
}

func (i ClusterNodeConfigKubeletConfigArgs) ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput {
	return i.ToClusterNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigKubeletConfigArgs) ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigKubeletConfigOutput).ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigKubeletConfigPtrInput is an input type that accepts ClusterNodeConfigKubeletConfigArgs, ClusterNodeConfigKubeletConfigPtr and ClusterNodeConfigKubeletConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigKubeletConfigPtrInput` via:
//
//          ClusterNodeConfigKubeletConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodeConfigKubeletConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput
	ToClusterNodeConfigKubeletConfigPtrOutputWithContext(context.Context) ClusterNodeConfigKubeletConfigPtrOutput
}

type clusterNodeConfigKubeletConfigPtrType ClusterNodeConfigKubeletConfigArgs

func ClusterNodeConfigKubeletConfigPtr(v *ClusterNodeConfigKubeletConfigArgs) ClusterNodeConfigKubeletConfigPtrInput {
	return (*clusterNodeConfigKubeletConfigPtrType)(v)
}

func (*clusterNodeConfigKubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (i *clusterNodeConfigKubeletConfigPtrType) ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput {
	return i.ToClusterNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigKubeletConfigPtrType) ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigKubeletConfigPtrOutput)
}

type ClusterNodeConfigKubeletConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (o ClusterNodeConfigKubeletConfigOutput) ToClusterNodeConfigKubeletConfigOutput() ClusterNodeConfigKubeletConfigOutput {
	return o
}

func (o ClusterNodeConfigKubeletConfigOutput) ToClusterNodeConfigKubeletConfigOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigOutput {
	return o
}

func (o ClusterNodeConfigKubeletConfigOutput) ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput {
	return o.ToClusterNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigKubeletConfigOutput) ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigKubeletConfig) *ClusterNodeConfigKubeletConfig {
		return &v
	}).(ClusterNodeConfigKubeletConfigPtrOutput)
}

// If true, enables CPU CFS quota enforcement for
// containers that specify CPU limits.
func (o ClusterNodeConfigKubeletConfigOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigKubeletConfig) *bool { return v.CpuCfsQuota }).(pulumi.BoolPtrOutput)
}

// The CPU CFS quota period value. Specified
// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
// "h". The value must be a positive duration.
func (o ClusterNodeConfigKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigKubeletConfig) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

// The CPU management policy on the node. See
// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
func (o ClusterNodeConfigKubeletConfigOutput) CpuManagerPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigKubeletConfig) string { return v.CpuManagerPolicy }).(pulumi.StringOutput)
}

type ClusterNodeConfigKubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigKubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigKubeletConfig)(nil)).Elem()
}

func (o ClusterNodeConfigKubeletConfigPtrOutput) ToClusterNodeConfigKubeletConfigPtrOutput() ClusterNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigKubeletConfigPtrOutput) ToClusterNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigKubeletConfigPtrOutput) Elem() ClusterNodeConfigKubeletConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigKubeletConfig) ClusterNodeConfigKubeletConfig { return *v }).(ClusterNodeConfigKubeletConfigOutput)
}

// If true, enables CPU CFS quota enforcement for
// containers that specify CPU limits.
func (o ClusterNodeConfigKubeletConfigPtrOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigKubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuota
	}).(pulumi.BoolPtrOutput)
}

// The CPU CFS quota period value. Specified
// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
// "h". The value must be a positive duration.
func (o ClusterNodeConfigKubeletConfigPtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

// The CPU management policy on the node. See
// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
func (o ClusterNodeConfigKubeletConfigPtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

type ClusterNodeConfigLinuxNodeConfig struct {
	// The Linux kernel parameters to be applied to the nodes
	// and all pods running on the nodes. Specified as a map from the key, such as
	// `net.core.wmem_max`, to a string value.
	Sysctls map[string]string `pulumi:"sysctls"`
}

// ClusterNodeConfigLinuxNodeConfigInput is an input type that accepts ClusterNodeConfigLinuxNodeConfigArgs and ClusterNodeConfigLinuxNodeConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigLinuxNodeConfigInput` via:
//
//          ClusterNodeConfigLinuxNodeConfigArgs{...}
type ClusterNodeConfigLinuxNodeConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigLinuxNodeConfigOutput() ClusterNodeConfigLinuxNodeConfigOutput
	ToClusterNodeConfigLinuxNodeConfigOutputWithContext(context.Context) ClusterNodeConfigLinuxNodeConfigOutput
}

type ClusterNodeConfigLinuxNodeConfigArgs struct {
	// The Linux kernel parameters to be applied to the nodes
	// and all pods running on the nodes. Specified as a map from the key, such as
	// `net.core.wmem_max`, to a string value.
	Sysctls pulumi.StringMapInput `pulumi:"sysctls"`
}

func (ClusterNodeConfigLinuxNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i ClusterNodeConfigLinuxNodeConfigArgs) ToClusterNodeConfigLinuxNodeConfigOutput() ClusterNodeConfigLinuxNodeConfigOutput {
	return i.ToClusterNodeConfigLinuxNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigLinuxNodeConfigArgs) ToClusterNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigLinuxNodeConfigOutput)
}

func (i ClusterNodeConfigLinuxNodeConfigArgs) ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigLinuxNodeConfigArgs) ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigLinuxNodeConfigOutput).ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigLinuxNodeConfigPtrInput is an input type that accepts ClusterNodeConfigLinuxNodeConfigArgs, ClusterNodeConfigLinuxNodeConfigPtr and ClusterNodeConfigLinuxNodeConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigLinuxNodeConfigPtrInput` via:
//
//          ClusterNodeConfigLinuxNodeConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodeConfigLinuxNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput
	ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput
}

type clusterNodeConfigLinuxNodeConfigPtrType ClusterNodeConfigLinuxNodeConfigArgs

func ClusterNodeConfigLinuxNodeConfigPtr(v *ClusterNodeConfigLinuxNodeConfigArgs) ClusterNodeConfigLinuxNodeConfigPtrInput {
	return (*clusterNodeConfigLinuxNodeConfigPtrType)(v)
}

func (*clusterNodeConfigLinuxNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i *clusterNodeConfigLinuxNodeConfigPtrType) ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigLinuxNodeConfigPtrType) ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigLinuxNodeConfigPtrOutput)
}

type ClusterNodeConfigLinuxNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigLinuxNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigLinuxNodeConfigOutput) ToClusterNodeConfigLinuxNodeConfigOutput() ClusterNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigLinuxNodeConfigOutput) ToClusterNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o ClusterNodeConfigLinuxNodeConfigOutput) ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o.ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigLinuxNodeConfigOutput) ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigLinuxNodeConfig) *ClusterNodeConfigLinuxNodeConfig {
		return &v
	}).(ClusterNodeConfigLinuxNodeConfigPtrOutput)
}

// The Linux kernel parameters to be applied to the nodes
// and all pods running on the nodes. Specified as a map from the key, such as
// `net.core.wmem_max`, to a string value.
func (o ClusterNodeConfigLinuxNodeConfigOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodeConfigLinuxNodeConfig) map[string]string { return v.Sysctls }).(pulumi.StringMapOutput)
}

type ClusterNodeConfigLinuxNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigLinuxNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o ClusterNodeConfigLinuxNodeConfigPtrOutput) ToClusterNodeConfigLinuxNodeConfigPtrOutput() ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigLinuxNodeConfigPtrOutput) ToClusterNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigLinuxNodeConfigPtrOutput) Elem() ClusterNodeConfigLinuxNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigLinuxNodeConfig) ClusterNodeConfigLinuxNodeConfig { return *v }).(ClusterNodeConfigLinuxNodeConfigOutput)
}

// The Linux kernel parameters to be applied to the nodes
// and all pods running on the nodes. Specified as a map from the key, such as
// `net.core.wmem_max`, to a string value.
func (o ClusterNodeConfigLinuxNodeConfigPtrOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodeConfigLinuxNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(pulumi.StringMapOutput)
}

type ClusterNodeConfigSandboxConfig struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType string `pulumi:"sandboxType"`
}

// ClusterNodeConfigSandboxConfigInput is an input type that accepts ClusterNodeConfigSandboxConfigArgs and ClusterNodeConfigSandboxConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSandboxConfigInput` via:
//
//          ClusterNodeConfigSandboxConfigArgs{...}
type ClusterNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigSandboxConfigOutput() ClusterNodeConfigSandboxConfigOutput
	ToClusterNodeConfigSandboxConfigOutputWithContext(context.Context) ClusterNodeConfigSandboxConfigOutput
}

type ClusterNodeConfigSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigOutput() ClusterNodeConfigSandboxConfigOutput {
	return i.ToClusterNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigOutput)
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigSandboxConfigArgs) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigOutput).ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigSandboxConfigPtrInput is an input type that accepts ClusterNodeConfigSandboxConfigArgs, ClusterNodeConfigSandboxConfigPtr and ClusterNodeConfigSandboxConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigSandboxConfigPtrInput` via:
//
//          ClusterNodeConfigSandboxConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput
	ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Context) ClusterNodeConfigSandboxConfigPtrOutput
}

type clusterNodeConfigSandboxConfigPtrType ClusterNodeConfigSandboxConfigArgs

func ClusterNodeConfigSandboxConfigPtr(v *ClusterNodeConfigSandboxConfigArgs) ClusterNodeConfigSandboxConfigPtrInput {
	return (*clusterNodeConfigSandboxConfigPtrType)(v)
}

func (*clusterNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *clusterNodeConfigSandboxConfigPtrType) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigSandboxConfigPtrType) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigSandboxConfigPtrOutput)
}

type ClusterNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigOutput() ClusterNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ToClusterNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigSandboxConfigOutput) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigSandboxConfig) *ClusterNodeConfigSandboxConfig {
		return &v
	}).(ClusterNodeConfigSandboxConfigPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodeConfigSandboxConfigPtrOutput) ToClusterNodeConfigSandboxConfigPtrOutput() ClusterNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigPtrOutput) ToClusterNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigSandboxConfigPtrOutput) Elem() ClusterNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigSandboxConfig) ClusterNodeConfigSandboxConfig { return *v }).(ClusterNodeConfigSandboxConfigOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigSandboxConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SandboxType
	}).(pulumi.StringPtrOutput)
}

type ClusterNodeConfigShieldedInstanceConfig struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

// ClusterNodeConfigShieldedInstanceConfigInput is an input type that accepts ClusterNodeConfigShieldedInstanceConfigArgs and ClusterNodeConfigShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigShieldedInstanceConfigInput` via:
//
//          ClusterNodeConfigShieldedInstanceConfigArgs{...}
type ClusterNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigShieldedInstanceConfigOutput() ClusterNodeConfigShieldedInstanceConfigOutput
	ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) ClusterNodeConfigShieldedInstanceConfigOutput
}

type ClusterNodeConfigShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigOutput() ClusterNodeConfigShieldedInstanceConfigOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigOutput)
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigShieldedInstanceConfigArgs) ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigOutput).ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigShieldedInstanceConfigPtrInput is an input type that accepts ClusterNodeConfigShieldedInstanceConfigArgs, ClusterNodeConfigShieldedInstanceConfigPtr and ClusterNodeConfigShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigShieldedInstanceConfigPtrInput` via:
//
//          ClusterNodeConfigShieldedInstanceConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodeConfigShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput
	ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput
}

type clusterNodeConfigShieldedInstanceConfigPtrType ClusterNodeConfigShieldedInstanceConfigArgs

func ClusterNodeConfigShieldedInstanceConfigPtr(v *ClusterNodeConfigShieldedInstanceConfigArgs) ClusterNodeConfigShieldedInstanceConfigPtrInput {
	return (*clusterNodeConfigShieldedInstanceConfigPtrType)(v)
}

func (*clusterNodeConfigShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i *clusterNodeConfigShieldedInstanceConfigPtrType) ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigShieldedInstanceConfigPtrType) ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigShieldedInstanceConfigPtrOutput)
}

type ClusterNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigOutput() ClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigShieldedInstanceConfigOutput) ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfig) *ClusterNodeConfigShieldedInstanceConfig {
		return &v
	}).(ClusterNodeConfigShieldedInstanceConfigPtrOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) Elem() ClusterNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigShieldedInstanceConfig) ClusterNodeConfigShieldedInstanceConfig { return *v }).(ClusterNodeConfigShieldedInstanceConfigOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodeConfigShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodeConfigTaint struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

// ClusterNodeConfigTaintInput is an input type that accepts ClusterNodeConfigTaintArgs and ClusterNodeConfigTaintOutput values.
// You can construct a concrete instance of `ClusterNodeConfigTaintInput` via:
//
//          ClusterNodeConfigTaintArgs{...}
type ClusterNodeConfigTaintInput interface {
	pulumi.Input

	ToClusterNodeConfigTaintOutput() ClusterNodeConfigTaintOutput
	ToClusterNodeConfigTaintOutputWithContext(context.Context) ClusterNodeConfigTaintOutput
}

type ClusterNodeConfigTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodeConfigTaintArgs) ToClusterNodeConfigTaintOutput() ClusterNodeConfigTaintOutput {
	return i.ToClusterNodeConfigTaintOutputWithContext(context.Background())
}

func (i ClusterNodeConfigTaintArgs) ToClusterNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigTaintOutput)
}

// ClusterNodeConfigTaintArrayInput is an input type that accepts ClusterNodeConfigTaintArray and ClusterNodeConfigTaintArrayOutput values.
// You can construct a concrete instance of `ClusterNodeConfigTaintArrayInput` via:
//
//          ClusterNodeConfigTaintArray{ ClusterNodeConfigTaintArgs{...} }
type ClusterNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigTaintArrayOutput() ClusterNodeConfigTaintArrayOutput
	ToClusterNodeConfigTaintArrayOutputWithContext(context.Context) ClusterNodeConfigTaintArrayOutput
}

type ClusterNodeConfigTaintArray []ClusterNodeConfigTaintInput

func (ClusterNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodeConfigTaintArray) ToClusterNodeConfigTaintArrayOutput() ClusterNodeConfigTaintArrayOutput {
	return i.ToClusterNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigTaintArray) ToClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigTaintArrayOutput)
}

type ClusterNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodeConfigTaintOutput) ToClusterNodeConfigTaintOutput() ClusterNodeConfigTaintOutput {
	return o
}

func (o ClusterNodeConfigTaintOutput) ToClusterNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodeConfigTaintOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodeConfigTaintArrayOutput) ToClusterNodeConfigTaintArrayOutput() ClusterNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigTaintArrayOutput) ToClusterNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeConfigTaint {
		return vs[0].([]ClusterNodeConfigTaint)[vs[1].(int)]
	}).(ClusterNodeConfigTaintOutput)
}

type ClusterNodeConfigWorkloadMetadataConfig struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata string `pulumi:"nodeMetadata"`
}

// ClusterNodeConfigWorkloadMetadataConfigInput is an input type that accepts ClusterNodeConfigWorkloadMetadataConfigArgs and ClusterNodeConfigWorkloadMetadataConfigOutput values.
// You can construct a concrete instance of `ClusterNodeConfigWorkloadMetadataConfigInput` via:
//
//          ClusterNodeConfigWorkloadMetadataConfigArgs{...}
type ClusterNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToClusterNodeConfigWorkloadMetadataConfigOutput() ClusterNodeConfigWorkloadMetadataConfigOutput
	ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) ClusterNodeConfigWorkloadMetadataConfigOutput
}

type ClusterNodeConfigWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (ClusterNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigOutput() ClusterNodeConfigWorkloadMetadataConfigOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigOutput)
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodeConfigWorkloadMetadataConfigArgs) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigOutput).ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

// ClusterNodeConfigWorkloadMetadataConfigPtrInput is an input type that accepts ClusterNodeConfigWorkloadMetadataConfigArgs, ClusterNodeConfigWorkloadMetadataConfigPtr and ClusterNodeConfigWorkloadMetadataConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodeConfigWorkloadMetadataConfigPtrInput` via:
//
//          ClusterNodeConfigWorkloadMetadataConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput
	ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput
}

type clusterNodeConfigWorkloadMetadataConfigPtrType ClusterNodeConfigWorkloadMetadataConfigArgs

func ClusterNodeConfigWorkloadMetadataConfigPtr(v *ClusterNodeConfigWorkloadMetadataConfigArgs) ClusterNodeConfigWorkloadMetadataConfigPtrInput {
	return (*clusterNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*clusterNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *clusterNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigOutput() ClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodeConfigWorkloadMetadataConfigOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodeConfigWorkloadMetadataConfig) *ClusterNodeConfigWorkloadMetadataConfig {
		return &v
	}).(ClusterNodeConfigWorkloadMetadataConfigPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodeConfigWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) Elem() ClusterNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *ClusterNodeConfigWorkloadMetadataConfig) ClusterNodeConfigWorkloadMetadataConfig { return *v }).(ClusterNodeConfigWorkloadMetadataConfigOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodeConfigWorkloadMetadataConfigPtrOutput) NodeMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeConfigWorkloadMetadataConfig) *string {
		if v == nil {
			return nil
		}
		return &v.NodeMetadata
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePool struct {
	Autoscaling *ClusterNodePoolAutoscaling `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount *int `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls []string                   `pulumi:"instanceGroupUrls"`
	Management        *ClusterNodePoolManagement `pulumi:"management"`
	MaxPodsPerNode    *int                       `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name       *string `pulumi:"name"`
	NamePrefix *string `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used.
	// Structure is documented below.
	NodeConfig *ClusterNodePoolNodeConfig `pulumi:"nodeConfig"`
	NodeCount  *int                       `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations   []string                        `pulumi:"nodeLocations"`
	UpgradeSettings *ClusterNodePoolUpgradeSettings `pulumi:"upgradeSettings"`
	Version         *string                         `pulumi:"version"`
}

// ClusterNodePoolInput is an input type that accepts ClusterNodePoolArgs and ClusterNodePoolOutput values.
// You can construct a concrete instance of `ClusterNodePoolInput` via:
//
//          ClusterNodePoolArgs{...}
type ClusterNodePoolInput interface {
	pulumi.Input

	ToClusterNodePoolOutput() ClusterNodePoolOutput
	ToClusterNodePoolOutputWithContext(context.Context) ClusterNodePoolOutput
}

type ClusterNodePoolArgs struct {
	Autoscaling ClusterNodePoolAutoscalingPtrInput `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount pulumi.IntPtrInput `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls pulumi.StringArrayInput           `pulumi:"instanceGroupUrls"`
	Management        ClusterNodePoolManagementPtrInput `pulumi:"management"`
	MaxPodsPerNode    pulumi.IntPtrInput                `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name       pulumi.StringPtrInput `pulumi:"name"`
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used.
	// Structure is documented below.
	NodeConfig ClusterNodePoolNodeConfigPtrInput `pulumi:"nodeConfig"`
	NodeCount  pulumi.IntPtrInput                `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations   pulumi.StringArrayInput                `pulumi:"nodeLocations"`
	UpgradeSettings ClusterNodePoolUpgradeSettingsPtrInput `pulumi:"upgradeSettings"`
	Version         pulumi.StringPtrInput                  `pulumi:"version"`
}

func (ClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return i.ToClusterNodePoolOutputWithContext(context.Background())
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolOutput)
}

// ClusterNodePoolArrayInput is an input type that accepts ClusterNodePoolArray and ClusterNodePoolArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolArrayInput` via:
//
//          ClusterNodePoolArray{ ClusterNodePoolArgs{...} }
type ClusterNodePoolArrayInput interface {
	pulumi.Input

	ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput
	ToClusterNodePoolArrayOutputWithContext(context.Context) ClusterNodePoolArrayOutput
}

type ClusterNodePoolArray []ClusterNodePoolInput

func (ClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return i.ToClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolArrayOutput)
}

type ClusterNodePoolOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return o
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return o
}

func (o ClusterNodePoolOutput) Autoscaling() ClusterNodePoolAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolAutoscaling { return v.Autoscaling }).(ClusterNodePoolAutoscalingPtrOutput)
}

// The number of nodes to create in this
// cluster's default node pool. In regional or multi-zonal clusters, this is the
// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
// `container.NodePool` objects with no default node pool, you'll need to
// set this to a value of at least `1`, alongside setting
// `removeDefaultNodePool` to `true`.
func (o ClusterNodePoolOutput) InitialNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *int { return v.InitialNodeCount }).(pulumi.IntPtrOutput)
}

// List of instance group URLs which have been assigned
// to the cluster.
func (o ClusterNodePoolOutput) InstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePool) []string { return v.InstanceGroupUrls }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolOutput) Management() ClusterNodePoolManagementPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolManagement { return v.Management }).(ClusterNodePoolManagementPtrOutput)
}

func (o ClusterNodePoolOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// The name of the cluster, unique within the project and
// location.
func (o ClusterNodePoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterNodePoolOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// Parameters used in creating the default node pool.
// Generally, this field should not be used at the same time as a
// `container.NodePool` or a `nodePool` block; this configuration
// manages the default node pool, which isn't recommended to be used.
// Structure is documented below.
func (o ClusterNodePoolOutput) NodeConfig() ClusterNodePoolNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolNodeConfig { return v.NodeConfig }).(ClusterNodePoolNodeConfigPtrOutput)
}

func (o ClusterNodePoolOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The list of zones in which the cluster's nodes
// are located. Nodes must be in the region of their regional cluster or in the
// same region as their cluster's zone for zonal clusters. If this is specified for
// a zonal cluster, omit the cluster's zone.
func (o ClusterNodePoolOutput) NodeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePool) []string { return v.NodeLocations }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolOutput) UpgradeSettings() ClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *ClusterNodePoolUpgradeSettings { return v.UpgradeSettings }).(ClusterNodePoolUpgradeSettingsPtrOutput)
}

func (o ClusterNodePoolOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePool) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePool {
		return vs[0].([]ClusterNodePool)[vs[1].(int)]
	}).(ClusterNodePoolOutput)
}

type ClusterNodePoolAutoscaling struct {
	MaxNodeCount int `pulumi:"maxNodeCount"`
	MinNodeCount int `pulumi:"minNodeCount"`
}

// ClusterNodePoolAutoscalingInput is an input type that accepts ClusterNodePoolAutoscalingArgs and ClusterNodePoolAutoscalingOutput values.
// You can construct a concrete instance of `ClusterNodePoolAutoscalingInput` via:
//
//          ClusterNodePoolAutoscalingArgs{...}
type ClusterNodePoolAutoscalingInput interface {
	pulumi.Input

	ToClusterNodePoolAutoscalingOutput() ClusterNodePoolAutoscalingOutput
	ToClusterNodePoolAutoscalingOutputWithContext(context.Context) ClusterNodePoolAutoscalingOutput
}

type ClusterNodePoolAutoscalingArgs struct {
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (ClusterNodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingOutput() ClusterNodePoolAutoscalingOutput {
	return i.ToClusterNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingOutput)
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return i.ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolAutoscalingArgs) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingOutput).ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx)
}

// ClusterNodePoolAutoscalingPtrInput is an input type that accepts ClusterNodePoolAutoscalingArgs, ClusterNodePoolAutoscalingPtr and ClusterNodePoolAutoscalingPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolAutoscalingPtrInput` via:
//
//          ClusterNodePoolAutoscalingArgs{...}
//
//  or:
//
//          nil
type ClusterNodePoolAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput
	ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Context) ClusterNodePoolAutoscalingPtrOutput
}

type clusterNodePoolAutoscalingPtrType ClusterNodePoolAutoscalingArgs

func ClusterNodePoolAutoscalingPtr(v *ClusterNodePoolAutoscalingArgs) ClusterNodePoolAutoscalingPtrInput {
	return (*clusterNodePoolAutoscalingPtrType)(v)
}

func (*clusterNodePoolAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (i *clusterNodePoolAutoscalingPtrType) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return i.ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolAutoscalingPtrType) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolAutoscalingPtrOutput)
}

type ClusterNodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingOutput() ClusterNodePoolAutoscalingOutput {
	return o
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingOutput {
	return o
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return o.ToClusterNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolAutoscalingOutput) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) *ClusterNodePoolAutoscaling {
		return &v
	}).(ClusterNodePoolAutoscalingPtrOutput)
}
func (o ClusterNodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

func (o ClusterNodePoolAutoscalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type ClusterNodePoolAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolAutoscaling)(nil)).Elem()
}

func (o ClusterNodePoolAutoscalingPtrOutput) ToClusterNodePoolAutoscalingPtrOutput() ClusterNodePoolAutoscalingPtrOutput {
	return o
}

func (o ClusterNodePoolAutoscalingPtrOutput) ToClusterNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) ClusterNodePoolAutoscalingPtrOutput {
	return o
}

func (o ClusterNodePoolAutoscalingPtrOutput) Elem() ClusterNodePoolAutoscalingOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) ClusterNodePoolAutoscaling { return *v }).(ClusterNodePoolAutoscalingOutput)
}

func (o ClusterNodePoolAutoscalingPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterNodePoolAutoscalingPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

type ClusterNodePoolManagement struct {
	AutoRepair  *bool `pulumi:"autoRepair"`
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

// ClusterNodePoolManagementInput is an input type that accepts ClusterNodePoolManagementArgs and ClusterNodePoolManagementOutput values.
// You can construct a concrete instance of `ClusterNodePoolManagementInput` via:
//
//          ClusterNodePoolManagementArgs{...}
type ClusterNodePoolManagementInput interface {
	pulumi.Input

	ToClusterNodePoolManagementOutput() ClusterNodePoolManagementOutput
	ToClusterNodePoolManagementOutputWithContext(context.Context) ClusterNodePoolManagementOutput
}

type ClusterNodePoolManagementArgs struct {
	AutoRepair  pulumi.BoolPtrInput `pulumi:"autoRepair"`
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (ClusterNodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolManagement)(nil)).Elem()
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementOutput() ClusterNodePoolManagementOutput {
	return i.ToClusterNodePoolManagementOutputWithContext(context.Background())
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementOutputWithContext(ctx context.Context) ClusterNodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementOutput)
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput {
	return i.ToClusterNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolManagementArgs) ToClusterNodePoolManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementOutput).ToClusterNodePoolManagementPtrOutputWithContext(ctx)
}

// ClusterNodePoolManagementPtrInput is an input type that accepts ClusterNodePoolManagementArgs, ClusterNodePoolManagementPtr and ClusterNodePoolManagementPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolManagementPtrInput` via:
//
//          ClusterNodePoolManagementArgs{...}
//
//  or:
//
//          nil
type ClusterNodePoolManagementPtrInput interface {
	pulumi.Input

	ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput
	ToClusterNodePoolManagementPtrOutputWithContext(context.Context) ClusterNodePoolManagementPtrOutput
}

type clusterNodePoolManagementPtrType ClusterNodePoolManagementArgs

func ClusterNodePoolManagementPtr(v *ClusterNodePoolManagementArgs) ClusterNodePoolManagementPtrInput {
	return (*clusterNodePoolManagementPtrType)(v)
}

func (*clusterNodePoolManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolManagement)(nil)).Elem()
}

func (i *clusterNodePoolManagementPtrType) ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput {
	return i.ToClusterNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolManagementPtrType) ToClusterNodePoolManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolManagementPtrOutput)
}

type ClusterNodePoolManagementOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolManagement)(nil)).Elem()
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementOutput() ClusterNodePoolManagementOutput {
	return o
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementOutputWithContext(ctx context.Context) ClusterNodePoolManagementOutput {
	return o
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput {
	return o.ToClusterNodePoolManagementPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolManagementOutput) ToClusterNodePoolManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagement) *ClusterNodePoolManagement {
		return &v
	}).(ClusterNodePoolManagementPtrOutput)
}
func (o ClusterNodePoolManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

func (o ClusterNodePoolManagementOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolManagementPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolManagement)(nil)).Elem()
}

func (o ClusterNodePoolManagementPtrOutput) ToClusterNodePoolManagementPtrOutput() ClusterNodePoolManagementPtrOutput {
	return o
}

func (o ClusterNodePoolManagementPtrOutput) ToClusterNodePoolManagementPtrOutputWithContext(ctx context.Context) ClusterNodePoolManagementPtrOutput {
	return o
}

func (o ClusterNodePoolManagementPtrOutput) Elem() ClusterNodePoolManagementOutput {
	return o.ApplyT(func(v *ClusterNodePoolManagement) ClusterNodePoolManagement { return *v }).(ClusterNodePoolManagementOutput)
}

func (o ClusterNodePoolManagementPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRepair
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterNodePoolManagementPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgrade
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfig struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey *string `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType *string `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators []ClusterNodePoolNodeConfigGuestAccelerator `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType *string `pulumi:"imageType"`
	// )
	// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Structure is documented below.
	KubeletConfig *ClusterNodePoolNodeConfigKubeletConfig `pulumi:"kubeletConfig"`
	// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
	// reserved by Kubernetes Core components and cannot be specified.
	Labels map[string]string `pulumi:"labels"`
	// )
	// Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Note that validations happen all server side. All attributes are optional.
	// Structure is documented below.
	LinuxNodeConfig *ClusterNodePoolNodeConfigLinuxNodeConfig `pulumi:"linuxNodeConfig"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount *int `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType *string `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata map[string]string `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform *string `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes []string `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible *bool `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig *ClusterNodePoolNodeConfigSandboxConfig `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig *ClusterNodePoolNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags []string `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints []ClusterNodePoolNodeConfigTaint `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig *ClusterNodePoolNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

// ClusterNodePoolNodeConfigInput is an input type that accepts ClusterNodePoolNodeConfigArgs and ClusterNodePoolNodeConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigInput` via:
//
//          ClusterNodePoolNodeConfigArgs{...}
type ClusterNodePoolNodeConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigOutput() ClusterNodePoolNodeConfigOutput
	ToClusterNodePoolNodeConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigOutput
}

type ClusterNodePoolNodeConfigArgs struct {
	// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
	BootDiskKmsKey pulumi.StringPtrInput `pulumi:"bootDiskKmsKey"`
	// Size of the disk attached to each node, specified
	// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Type of the disk attached to each node
	// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// List of the type and count of accelerator cards attached to the instance.
	// Structure documented below.
	GuestAccelerators ClusterNodePoolNodeConfigGuestAcceleratorArrayInput `pulumi:"guestAccelerators"`
	// The image type to use for this node. Note that changing the image type
	// will delete and recreate all nodes in the node pool.
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// )
	// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Structure is documented below.
	KubeletConfig ClusterNodePoolNodeConfigKubeletConfigPtrInput `pulumi:"kubeletConfig"`
	// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
	// reserved by Kubernetes Core components and cannot be specified.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// )
	// Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
	// Note that validations happen all server side. All attributes are optional.
	// Structure is documented below.
	LinuxNodeConfig ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput `pulumi:"linuxNodeConfig"`
	// The amount of local SSD disks that will be
	// attached to each cluster node. Defaults to 0.
	LocalSsdCount pulumi.IntPtrInput `pulumi:"localSsdCount"`
	// The name of a Google Compute Engine machine type.
	// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
	// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
	MachineType pulumi.StringPtrInput `pulumi:"machineType"`
	// The metadata key/value pairs assigned to instances in
	// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
	// `true` by the API; if `metadata` is set but that default value is not
	// included, the provider will attempt to unset the value. To avoid this, set the
	// value in your config.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Minimum CPU platform to be used by this instance.
	// The instance may be scheduled on the specified or newer CPU platform. Applicable
	// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
	// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
	// for more information.
	MinCpuPlatform pulumi.StringPtrInput `pulumi:"minCpuPlatform"`
	// The set of Google API scopes to be made available
	// on all of the node VMs under the "default" service account. These can be
	// either FQDNs, or scope aliases. The following scopes are necessary to ensure
	// the correct functioning of the cluster:
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
	// A boolean that represents whether or not the underlying node VMs
	// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
	// for more information. Defaults to false.
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
	// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
	// Structure is documented below.
	SandboxConfig ClusterNodePoolNodeConfigSandboxConfigPtrInput `pulumi:"sandboxConfig"`
	// The service account to be used by the Node VMs.
	// If not specified, the "default" service account is used.
	// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
	// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
	// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
	ServiceAccount pulumi.StringPtrInput `pulumi:"serviceAccount"`
	// Shielded Instance options. Structure is documented below.
	ShieldedInstanceConfig ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	// The list of instance tags applied to all nodes. Tags are used to identify
	// valid sources or targets for network firewalls.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
	// to apply to nodes. GKE's API can only set this field on cluster creation.
	// However, GKE will add taints to your nodes if you enable certain features such
	// as GPUs. If this field is set, any diffs on this field will cause the provider to
	// recreate the underlying resource. Taint values can be updated safely in
	// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
	// this field to manage taints. If you do, `lifecycle.ignore_changes` is
	// recommended. Structure is documented below.
	Taints ClusterNodePoolNodeConfigTaintArrayInput `pulumi:"taints"`
	// Metadata configuration to expose to workloads on the node pool.
	// Structure is documented below.
	WorkloadMetadataConfig ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (ClusterNodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigOutput() ClusterNodePoolNodeConfigOutput {
	return i.ToClusterNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigOutput)
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigArgs) ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigOutput).ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigArgs, ClusterNodePoolNodeConfigPtr and ClusterNodePoolNodeConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigPtrInput` via:
//
//          ClusterNodePoolNodeConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodePoolNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput
	ToClusterNodePoolNodeConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigPtrOutput
}

type clusterNodePoolNodeConfigPtrType ClusterNodePoolNodeConfigArgs

func ClusterNodePoolNodeConfigPtr(v *ClusterNodePoolNodeConfigArgs) ClusterNodePoolNodeConfigPtrInput {
	return (*clusterNodePoolNodeConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigPtrType) ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigPtrType) ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigPtrOutput)
}

type ClusterNodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigOutput() ClusterNodePoolNodeConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigOutput) ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfig {
		return &v
	}).(ClusterNodePoolNodeConfigPtrOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodePoolNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodePoolNodeConfigOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodePoolNodeConfigOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodePoolNodeConfigOutput) GuestAccelerators() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigGuestAccelerator {
		return v.GuestAccelerators
	}).(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodePoolNodeConfigOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// )
// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) KubeletConfig() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigKubeletConfig { return v.KubeletConfig }).(ClusterNodePoolNodeConfigKubeletConfigPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
// reserved by Kubernetes Core components and cannot be specified.
func (o ClusterNodePoolNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// )
// Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Note that validations happen all server side. All attributes are optional.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) LinuxNodeConfig() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigLinuxNodeConfig { return v.LinuxNodeConfig }).(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodePoolNodeConfigOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodePoolNodeConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodePoolNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodePoolNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodePoolNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodePoolNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) SandboxConfig() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigSandboxConfig { return v.SandboxConfig }).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodePoolNodeConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) ShieldedInstanceConfig() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigShieldedInstanceConfig {
		return v.ShieldedInstanceConfig
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodePoolNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) Taints() ClusterNodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigTaint { return v.Taints }).(ClusterNodePoolNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigOutput) WorkloadMetadataConfig() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return v.WorkloadMetadataConfig
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigPtrOutput) ToClusterNodePoolNodeConfigPtrOutput() ClusterNodePoolNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigPtrOutput) ToClusterNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigPtrOutput) Elem() ClusterNodePoolNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) ClusterNodePoolNodeConfig { return *v }).(ClusterNodePoolNodeConfigOutput)
}

// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
func (o ClusterNodePoolNodeConfigPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.BootDiskKmsKey
	}).(pulumi.StringPtrOutput)
}

// Size of the disk attached to each node, specified
// in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
func (o ClusterNodePoolNodeConfigPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Type of the disk attached to each node
// (e.g. 'pd-standard', 'pd-balanced' or 'pd-ssd'). If unspecified, the default disk type is 'pd-standard'
func (o ClusterNodePoolNodeConfigPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// List of the type and count of accelerator cards attached to the instance.
// Structure documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) GuestAccelerators() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigGuestAccelerator {
		if v == nil {
			return nil
		}
		return v.GuestAccelerators
	}).(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

// The image type to use for this node. Note that changing the image type
// will delete and recreate all nodes in the node pool.
func (o ClusterNodePoolNodeConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// )
// Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) KubeletConfig() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigKubeletConfig {
		if v == nil {
			return nil
		}
		return v.KubeletConfig
	}).(ClusterNodePoolNodeConfigKubeletConfigPtrOutput)
}

// The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
// reserved by Kubernetes Core components and cannot be specified.
func (o ClusterNodePoolNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// )
// Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
// Note that validations happen all server side. All attributes are optional.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) LinuxNodeConfig() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigLinuxNodeConfig {
		if v == nil {
			return nil
		}
		return v.LinuxNodeConfig
	}).(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

// The amount of local SSD disks that will be
// attached to each cluster node. Defaults to 0.
func (o ClusterNodePoolNodeConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

// The name of a Google Compute Engine machine type.
// Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
// [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
func (o ClusterNodePoolNodeConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

// The metadata key/value pairs assigned to instances in
// the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
// `true` by the API; if `metadata` is set but that default value is not
// included, the provider will attempt to unset the value. To avoid this, set the
// value in your config.
func (o ClusterNodePoolNodeConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Minimum CPU platform to be used by this instance.
// The instance may be scheduled on the specified or newer CPU platform. Applicable
// values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
// [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
// for more information.
func (o ClusterNodePoolNodeConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

// The set of Google API scopes to be made available
// on all of the node VMs under the "default" service account. These can be
// either FQDNs, or scope aliases. The following scopes are necessary to ensure
// the correct functioning of the cluster:
func (o ClusterNodePoolNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

// A boolean that represents whether or not the underlying node VMs
// are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
// for more information. Defaults to false.
func (o ClusterNodePoolNodeConfigPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Preemptible
	}).(pulumi.BoolPtrOutput)
}

// [GKE Sandbox](https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods) configuration. When enabling this feature you must specify `imageType = "COS_CONTAINERD"` and `nodeVersion = "1.12.7-gke.17"` or later to use it.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) SandboxConfig() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigSandboxConfig {
		if v == nil {
			return nil
		}
		return v.SandboxConfig
	}).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

// The service account to be used by the Node VMs.
// If not specified, the "default" service account is used.
// In order to use the configured `oauthScopes` for logging and monitoring, the service account being used needs the
// [roles/logging.logWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_logging_roles) and
// [roles/monitoring.metricWriter](https://cloud.google.com/iam/docs/understanding-roles#stackdriver_monitoring_roles) roles.
func (o ClusterNodePoolNodeConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Shielded Instance options. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) ShieldedInstanceConfig() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigShieldedInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ShieldedInstanceConfig
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

// The list of instance tags applied to all nodes. Tags are used to identify
// valid sources or targets for network firewalls.
func (o ClusterNodePoolNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
// to apply to nodes. GKE's API can only set this field on cluster creation.
// However, GKE will add taints to your nodes if you enable certain features such
// as GPUs. If this field is set, any diffs on this field will cause the provider to
// recreate the underlying resource. Taint values can be updated safely in
// Kubernetes (eg. through `kubectl`), and it's recommended that you do not use
// this field to manage taints. If you do, `lifecycle.ignore_changes` is
// recommended. Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) Taints() ClusterNodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) []ClusterNodePoolNodeConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(ClusterNodePoolNodeConfigTaintArrayOutput)
}

// Metadata configuration to expose to workloads on the node pool.
// Structure is documented below.
func (o ClusterNodePoolNodeConfigPtrOutput) WorkloadMetadataConfig() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfig) *ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		if v == nil {
			return nil
		}
		return v.WorkloadMetadataConfig
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolNodeConfigGuestAccelerator struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count int `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type string `pulumi:"type"`
}

// ClusterNodePoolNodeConfigGuestAcceleratorInput is an input type that accepts ClusterNodePoolNodeConfigGuestAcceleratorArgs and ClusterNodePoolNodeConfigGuestAcceleratorOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGuestAcceleratorInput` via:
//
//          ClusterNodePoolNodeConfigGuestAcceleratorArgs{...}
type ClusterNodePoolNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorOutput() ClusterNodePoolNodeConfigGuestAcceleratorOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorArgs struct {
	// The number of the guest accelerator cards exposed to this instance.
	Count pulumi.IntInput `pulumi:"count"`
	// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodePoolNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgs) ToClusterNodePoolNodeConfigGuestAcceleratorOutput() ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArgs) ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

// ClusterNodePoolNodeConfigGuestAcceleratorArrayInput is an input type that accepts ClusterNodePoolNodeConfigGuestAcceleratorArray and ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigGuestAcceleratorArrayInput` via:
//
//          ClusterNodePoolNodeConfigGuestAcceleratorArray{ ClusterNodePoolNodeConfigGuestAcceleratorArgs{...} }
type ClusterNodePoolNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
	ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput
}

type ClusterNodePoolNodeConfigGuestAcceleratorArray []ClusterNodePoolNodeConfigGuestAcceleratorInput

func (ClusterNodePoolNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArray) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return i.ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigGuestAcceleratorArray) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) ToClusterNodePoolNodeConfigGuestAcceleratorOutput() ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) ToClusterNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

// The number of the guest accelerator cards exposed to this instance.
func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

// The accelerator type resource to expose to this instance. E.g. `nvidia-tesla-k80`.
func (o ClusterNodePoolNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutput() ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) ToClusterNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigGuestAccelerator {
		return vs[0].([]ClusterNodePoolNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigGuestAcceleratorOutput)
}

type ClusterNodePoolNodeConfigKubeletConfig struct {
	// If true, enables CPU CFS quota enforcement for
	// containers that specify CPU limits.
	CpuCfsQuota *bool `pulumi:"cpuCfsQuota"`
	// The CPU CFS quota period value. Specified
	// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
	// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
	// "h". The value must be a positive duration.
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	// The CPU management policy on the node. See
	// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
	// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
	CpuManagerPolicy string `pulumi:"cpuManagerPolicy"`
}

// ClusterNodePoolNodeConfigKubeletConfigInput is an input type that accepts ClusterNodePoolNodeConfigKubeletConfigArgs and ClusterNodePoolNodeConfigKubeletConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigKubeletConfigInput` via:
//
//          ClusterNodePoolNodeConfigKubeletConfigArgs{...}
type ClusterNodePoolNodeConfigKubeletConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigKubeletConfigOutput() ClusterNodePoolNodeConfigKubeletConfigOutput
	ToClusterNodePoolNodeConfigKubeletConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigKubeletConfigOutput
}

type ClusterNodePoolNodeConfigKubeletConfigArgs struct {
	// If true, enables CPU CFS quota enforcement for
	// containers that specify CPU limits.
	CpuCfsQuota pulumi.BoolPtrInput `pulumi:"cpuCfsQuota"`
	// The CPU CFS quota period value. Specified
	// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
	// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
	// "h". The value must be a positive duration.
	CpuCfsQuotaPeriod pulumi.StringPtrInput `pulumi:"cpuCfsQuotaPeriod"`
	// The CPU management policy on the node. See
	// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
	// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
	CpuManagerPolicy pulumi.StringInput `pulumi:"cpuManagerPolicy"`
}

func (ClusterNodePoolNodeConfigKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigKubeletConfigArgs) ToClusterNodePoolNodeConfigKubeletConfigOutput() ClusterNodePoolNodeConfigKubeletConfigOutput {
	return i.ToClusterNodePoolNodeConfigKubeletConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigKubeletConfigArgs) ToClusterNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigKubeletConfigOutput)
}

func (i ClusterNodePoolNodeConfigKubeletConfigArgs) ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigKubeletConfigArgs) ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigKubeletConfigOutput).ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigKubeletConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigKubeletConfigArgs, ClusterNodePoolNodeConfigKubeletConfigPtr and ClusterNodePoolNodeConfigKubeletConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigKubeletConfigPtrInput` via:
//
//          ClusterNodePoolNodeConfigKubeletConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodePoolNodeConfigKubeletConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput
	ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput
}

type clusterNodePoolNodeConfigKubeletConfigPtrType ClusterNodePoolNodeConfigKubeletConfigArgs

func ClusterNodePoolNodeConfigKubeletConfigPtr(v *ClusterNodePoolNodeConfigKubeletConfigArgs) ClusterNodePoolNodeConfigKubeletConfigPtrInput {
	return (*clusterNodePoolNodeConfigKubeletConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigKubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigKubeletConfigPtrType) ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigKubeletConfigPtrType) ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigKubeletConfigPtrOutput)
}

type ClusterNodePoolNodeConfigKubeletConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigKubeletConfigOutput) ToClusterNodePoolNodeConfigKubeletConfigOutput() ClusterNodePoolNodeConfigKubeletConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigKubeletConfigOutput) ToClusterNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigKubeletConfigOutput) ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigKubeletConfigOutput) ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigKubeletConfig) *ClusterNodePoolNodeConfigKubeletConfig {
		return &v
	}).(ClusterNodePoolNodeConfigKubeletConfigPtrOutput)
}

// If true, enables CPU CFS quota enforcement for
// containers that specify CPU limits.
func (o ClusterNodePoolNodeConfigKubeletConfigOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigKubeletConfig) *bool { return v.CpuCfsQuota }).(pulumi.BoolPtrOutput)
}

// The CPU CFS quota period value. Specified
// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
// "h". The value must be a positive duration.
func (o ClusterNodePoolNodeConfigKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigKubeletConfig) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

// The CPU management policy on the node. See
// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
func (o ClusterNodePoolNodeConfigKubeletConfigOutput) CpuManagerPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigKubeletConfig) string { return v.CpuManagerPolicy }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigKubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigKubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) ToClusterNodePoolNodeConfigKubeletConfigPtrOutput() ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) ToClusterNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) Elem() ClusterNodePoolNodeConfigKubeletConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigKubeletConfig) ClusterNodePoolNodeConfigKubeletConfig { return *v }).(ClusterNodePoolNodeConfigKubeletConfigOutput)
}

// If true, enables CPU CFS quota enforcement for
// containers that specify CPU limits.
func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigKubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuota
	}).(pulumi.BoolPtrOutput)
}

// The CPU CFS quota period value. Specified
// as a sequence of decimal numbers, each with optional fraction and a unit suffix,
// such as `"300ms"`. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m",
// "h". The value must be a positive duration.
func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

// The CPU management policy on the node. See
// [K8S CPU Management Policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/).
// One of `"none"` or `"static"`. Defaults to `none` when `kubeletConfig` is unset.
func (o ClusterNodePoolNodeConfigKubeletConfigPtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNodeConfigLinuxNodeConfig struct {
	// The Linux kernel parameters to be applied to the nodes
	// and all pods running on the nodes. Specified as a map from the key, such as
	// `net.core.wmem_max`, to a string value.
	Sysctls map[string]string `pulumi:"sysctls"`
}

// ClusterNodePoolNodeConfigLinuxNodeConfigInput is an input type that accepts ClusterNodePoolNodeConfigLinuxNodeConfigArgs and ClusterNodePoolNodeConfigLinuxNodeConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigLinuxNodeConfigInput` via:
//
//          ClusterNodePoolNodeConfigLinuxNodeConfigArgs{...}
type ClusterNodePoolNodeConfigLinuxNodeConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigLinuxNodeConfigOutput() ClusterNodePoolNodeConfigLinuxNodeConfigOutput
	ToClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigOutput
}

type ClusterNodePoolNodeConfigLinuxNodeConfigArgs struct {
	// The Linux kernel parameters to be applied to the nodes
	// and all pods running on the nodes. Specified as a map from the key, such as
	// `net.core.wmem_max`, to a string value.
	Sysctls pulumi.StringMapInput `pulumi:"sysctls"`
}

func (ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToClusterNodePoolNodeConfigLinuxNodeConfigOutput() ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return i.ToClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigLinuxNodeConfigOutput)
}

func (i ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigLinuxNodeConfigOutput).ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigLinuxNodeConfigArgs, ClusterNodePoolNodeConfigLinuxNodeConfigPtr and ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput` via:
//
//          ClusterNodePoolNodeConfigLinuxNodeConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput
	ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput
}

type clusterNodePoolNodeConfigLinuxNodeConfigPtrType ClusterNodePoolNodeConfigLinuxNodeConfigArgs

func ClusterNodePoolNodeConfigLinuxNodeConfigPtr(v *ClusterNodePoolNodeConfigLinuxNodeConfigArgs) ClusterNodePoolNodeConfigLinuxNodeConfigPtrInput {
	return (*clusterNodePoolNodeConfigLinuxNodeConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigLinuxNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigLinuxNodeConfigPtrType) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigLinuxNodeConfigPtrType) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

type ClusterNodePoolNodeConfigLinuxNodeConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigOutput() ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigLinuxNodeConfig) *ClusterNodePoolNodeConfigLinuxNodeConfig {
		return &v
	}).(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

// The Linux kernel parameters to be applied to the nodes
// and all pods running on the nodes. Specified as a map from the key, such as
// `net.core.wmem_max`, to a string value.
func (o ClusterNodePoolNodeConfigLinuxNodeConfigOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigLinuxNodeConfig) map[string]string { return v.Sysctls }).(pulumi.StringMapOutput)
}

type ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput() ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) ToClusterNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) Elem() ClusterNodePoolNodeConfigLinuxNodeConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigLinuxNodeConfig) ClusterNodePoolNodeConfigLinuxNodeConfig { return *v }).(ClusterNodePoolNodeConfigLinuxNodeConfigOutput)
}

// The Linux kernel parameters to be applied to the nodes
// and all pods running on the nodes. Specified as a map from the key, such as
// `net.core.wmem_max`, to a string value.
func (o ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigLinuxNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(pulumi.StringMapOutput)
}

type ClusterNodePoolNodeConfigSandboxConfig struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType string `pulumi:"sandboxType"`
}

// ClusterNodePoolNodeConfigSandboxConfigInput is an input type that accepts ClusterNodePoolNodeConfigSandboxConfigArgs and ClusterNodePoolNodeConfigSandboxConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSandboxConfigInput` via:
//
//          ClusterNodePoolNodeConfigSandboxConfigArgs{...}
type ClusterNodePoolNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSandboxConfigOutput() ClusterNodePoolNodeConfigSandboxConfigOutput
	ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigSandboxConfigOutput
}

type ClusterNodePoolNodeConfigSandboxConfigArgs struct {
	// Which sandbox to use for pods in the node pool.
	// Accepted values are:
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (ClusterNodePoolNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigOutput() ClusterNodePoolNodeConfigSandboxConfigOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigOutput)
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigSandboxConfigArgs) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigOutput).ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigSandboxConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigSandboxConfigArgs, ClusterNodePoolNodeConfigSandboxConfigPtr and ClusterNodePoolNodeConfigSandboxConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigSandboxConfigPtrInput` via:
//
//          ClusterNodePoolNodeConfigSandboxConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodePoolNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput
	ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput
}

type clusterNodePoolNodeConfigSandboxConfigPtrType ClusterNodePoolNodeConfigSandboxConfigArgs

func ClusterNodePoolNodeConfigSandboxConfigPtr(v *ClusterNodePoolNodeConfigSandboxConfigArgs) ClusterNodePoolNodeConfigSandboxConfigPtrInput {
	return (*clusterNodePoolNodeConfigSandboxConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigSandboxConfigPtrType) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigSandboxConfigPtrType) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

type ClusterNodePoolNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigOutput() ClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigSandboxConfigOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSandboxConfig) *ClusterNodePoolNodeConfigSandboxConfig {
		return &v
	}).(ClusterNodePoolNodeConfigSandboxConfigPtrOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodePoolNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutput() ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) ToClusterNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) Elem() ClusterNodePoolNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigSandboxConfig) ClusterNodePoolNodeConfigSandboxConfig { return *v }).(ClusterNodePoolNodeConfigSandboxConfigOutput)
}

// Which sandbox to use for pods in the node pool.
// Accepted values are:
func (o ClusterNodePoolNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigSandboxConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SandboxType
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfig struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
}

// ClusterNodePoolNodeConfigShieldedInstanceConfigInput is an input type that accepts ClusterNodePoolNodeConfigShieldedInstanceConfigArgs and ClusterNodePoolNodeConfigShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigShieldedInstanceConfigInput` via:
//
//          ClusterNodePoolNodeConfigShieldedInstanceConfigArgs{...}
type ClusterNodePoolNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput
	ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigOutput
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigArgs struct {
	// Defines if the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines if the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput).ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigShieldedInstanceConfigArgs, ClusterNodePoolNodeConfigShieldedInstanceConfigPtr and ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput` via:
//
//          ClusterNodePoolNodeConfigShieldedInstanceConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput
	ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput
}

type clusterNodePoolNodeConfigShieldedInstanceConfigPtrType ClusterNodePoolNodeConfigShieldedInstanceConfigArgs

func ClusterNodePoolNodeConfigShieldedInstanceConfigPtr(v *ClusterNodePoolNodeConfigShieldedInstanceConfigArgs) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrInput {
	return (*clusterNodePoolNodeConfigShieldedInstanceConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigShieldedInstanceConfigPtrType) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigShieldedInstanceConfigPtrType) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfig) *ClusterNodePoolNodeConfigShieldedInstanceConfig {
		return &v
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput() ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) ToClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) Elem() ClusterNodePoolNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigShieldedInstanceConfig) ClusterNodePoolNodeConfigShieldedInstanceConfig {
		return *v
	}).(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput)
}

// Defines if the instance has integrity monitoring enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines if the instance has Secure Boot enabled.
func (o ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

type ClusterNodePoolNodeConfigTaint struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect string `pulumi:"effect"`
	// Key for taint.
	Key string `pulumi:"key"`
	// Value for taint.
	Value string `pulumi:"value"`
}

// ClusterNodePoolNodeConfigTaintInput is an input type that accepts ClusterNodePoolNodeConfigTaintArgs and ClusterNodePoolNodeConfigTaintOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigTaintInput` via:
//
//          ClusterNodePoolNodeConfigTaintArgs{...}
type ClusterNodePoolNodeConfigTaintInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigTaintOutput() ClusterNodePoolNodeConfigTaintOutput
	ToClusterNodePoolNodeConfigTaintOutputWithContext(context.Context) ClusterNodePoolNodeConfigTaintOutput
}

type ClusterNodePoolNodeConfigTaintArgs struct {
	// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Key for taint.
	Key pulumi.StringInput `pulumi:"key"`
	// Value for taint.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodePoolNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigTaintArgs) ToClusterNodePoolNodeConfigTaintOutput() ClusterNodePoolNodeConfigTaintOutput {
	return i.ToClusterNodePoolNodeConfigTaintOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigTaintArgs) ToClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigTaintOutput)
}

// ClusterNodePoolNodeConfigTaintArrayInput is an input type that accepts ClusterNodePoolNodeConfigTaintArray and ClusterNodePoolNodeConfigTaintArrayOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigTaintArrayInput` via:
//
//          ClusterNodePoolNodeConfigTaintArray{ ClusterNodePoolNodeConfigTaintArgs{...} }
type ClusterNodePoolNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigTaintArrayOutput() ClusterNodePoolNodeConfigTaintArrayOutput
	ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Context) ClusterNodePoolNodeConfigTaintArrayOutput
}

type ClusterNodePoolNodeConfigTaintArray []ClusterNodePoolNodeConfigTaintInput

func (ClusterNodePoolNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigTaintArray) ToClusterNodePoolNodeConfigTaintArrayOutput() ClusterNodePoolNodeConfigTaintArrayOutput {
	return i.ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigTaintArray) ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigTaintArrayOutput)
}

type ClusterNodePoolNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigTaintOutput) ToClusterNodePoolNodeConfigTaintOutput() ClusterNodePoolNodeConfigTaintOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintOutput) ToClusterNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintOutput {
	return o
}

// Effect for taint. Accepted values are `NO_SCHEDULE`, `PREFER_NO_SCHEDULE`, and `NO_EXECUTE`.
func (o ClusterNodePoolNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Key for taint.
func (o ClusterNodePoolNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value for taint.
func (o ClusterNodePoolNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePoolNodeConfigTaint)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigTaintArrayOutput) ToClusterNodePoolNodeConfigTaintArrayOutput() ClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintArrayOutput) ToClusterNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o ClusterNodePoolNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodePoolNodeConfigTaint {
		return vs[0].([]ClusterNodePoolNodeConfigTaint)[vs[1].(int)]
	}).(ClusterNodePoolNodeConfigTaintOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfig struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata string `pulumi:"nodeMetadata"`
}

// ClusterNodePoolNodeConfigWorkloadMetadataConfigInput is an input type that accepts ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs and ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigWorkloadMetadataConfigInput` via:
//
//          ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs{...}
type ClusterNodePoolNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
	ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	// How to expose the node metadata to the workload running on the node.
	// Accepted values are:
	// * UNSPECIFIED: Not Set
	// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
	// * EXPOSE: Expose all VM metadata to pods.
	// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput).ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

// ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput is an input type that accepts ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs, ClusterNodePoolNodeConfigWorkloadMetadataConfigPtr and ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput` via:
//
//          ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs{...}
//
//  or:
//
//          nil
type ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput
	ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput
}

type clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs

func ClusterNodePoolNodeConfigWorkloadMetadataConfigPtr(v *ClusterNodePoolNodeConfigWorkloadMetadataConfigArgs) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrInput {
	return (*clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolNodeConfigWorkloadMetadataConfigPtrType) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigWorkloadMetadataConfig) *ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return &v
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodePoolNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) Elem() ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigWorkloadMetadataConfig) ClusterNodePoolNodeConfigWorkloadMetadataConfig {
		return *v
	}).(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput)
}

// How to expose the node metadata to the workload running on the node.
// Accepted values are:
// * UNSPECIFIED: Not Set
// * SECURE: Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. See [Metadata Concealment](https://cloud.google.com/kubernetes-engine/docs/how-to/metadata-proxy) documentation.
// * EXPOSE: Expose all VM metadata to pods.
// * GKE_METADATA_SERVER: Enables [workload identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) on the node.
func (o ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput) NodeMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolNodeConfigWorkloadMetadataConfig) *string {
		if v == nil {
			return nil
		}
		return &v.NodeMetadata
	}).(pulumi.StringPtrOutput)
}

type ClusterNodePoolUpgradeSettings struct {
	MaxSurge       int `pulumi:"maxSurge"`
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

// ClusterNodePoolUpgradeSettingsInput is an input type that accepts ClusterNodePoolUpgradeSettingsArgs and ClusterNodePoolUpgradeSettingsOutput values.
// You can construct a concrete instance of `ClusterNodePoolUpgradeSettingsInput` via:
//
//          ClusterNodePoolUpgradeSettingsArgs{...}
type ClusterNodePoolUpgradeSettingsInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsOutput() ClusterNodePoolUpgradeSettingsOutput
	ToClusterNodePoolUpgradeSettingsOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsOutput
}

type ClusterNodePoolUpgradeSettingsArgs struct {
	MaxSurge       pulumi.IntInput `pulumi:"maxSurge"`
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (ClusterNodePoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsOutput() ClusterNodePoolUpgradeSettingsOutput {
	return i.ToClusterNodePoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsOutput)
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i ClusterNodePoolUpgradeSettingsArgs) ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsOutput).ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx)
}

// ClusterNodePoolUpgradeSettingsPtrInput is an input type that accepts ClusterNodePoolUpgradeSettingsArgs, ClusterNodePoolUpgradeSettingsPtr and ClusterNodePoolUpgradeSettingsPtrOutput values.
// You can construct a concrete instance of `ClusterNodePoolUpgradeSettingsPtrInput` via:
//
//          ClusterNodePoolUpgradeSettingsArgs{...}
//
//  or:
//
//          nil
type ClusterNodePoolUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput
	ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Context) ClusterNodePoolUpgradeSettingsPtrOutput
}

type clusterNodePoolUpgradeSettingsPtrType ClusterNodePoolUpgradeSettingsArgs

func ClusterNodePoolUpgradeSettingsPtr(v *ClusterNodePoolUpgradeSettingsArgs) ClusterNodePoolUpgradeSettingsPtrInput {
	return (*clusterNodePoolUpgradeSettingsPtrType)(v)
}

func (*clusterNodePoolUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (i *clusterNodePoolUpgradeSettingsPtrType) ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput {
	return i.ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *clusterNodePoolUpgradeSettingsPtrType) ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolUpgradeSettingsPtrOutput)
}

type ClusterNodePoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsOutput() ClusterNodePoolUpgradeSettingsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o ClusterNodePoolUpgradeSettingsOutput) ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettings) *ClusterNodePoolUpgradeSettings {
		return &v
	}).(ClusterNodePoolUpgradeSettingsPtrOutput)
}
func (o ClusterNodePoolUpgradeSettingsOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettings) int { return v.MaxSurge }).(pulumi.IntOutput)
}

func (o ClusterNodePoolUpgradeSettingsOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterNodePoolUpgradeSettings) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type ClusterNodePoolUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodePoolUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (o ClusterNodePoolUpgradeSettingsPtrOutput) ToClusterNodePoolUpgradeSettingsPtrOutput() ClusterNodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsPtrOutput) ToClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) ClusterNodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o ClusterNodePoolUpgradeSettingsPtrOutput) Elem() ClusterNodePoolUpgradeSettingsOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettings) ClusterNodePoolUpgradeSettings { return *v }).(ClusterNodePoolUpgradeSettingsOutput)
}

func (o ClusterNodePoolUpgradeSettingsPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

func (o ClusterNodePoolUpgradeSettingsPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNodePoolUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

type ClusterPodSecurityPolicyConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

// ClusterPodSecurityPolicyConfigInput is an input type that accepts ClusterPodSecurityPolicyConfigArgs and ClusterPodSecurityPolicyConfigOutput values.
// You can construct a concrete instance of `ClusterPodSecurityPolicyConfigInput` via:
//
//          ClusterPodSecurityPolicyConfigArgs{...}
type ClusterPodSecurityPolicyConfigInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyConfigOutput() ClusterPodSecurityPolicyConfigOutput
	ToClusterPodSecurityPolicyConfigOutputWithContext(context.Context) ClusterPodSecurityPolicyConfigOutput
}

type ClusterPodSecurityPolicyConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterPodSecurityPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigOutput() ClusterPodSecurityPolicyConfigOutput {
	return i.ToClusterPodSecurityPolicyConfigOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigOutput)
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return i.ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyConfigArgs) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigOutput).ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx)
}

// ClusterPodSecurityPolicyConfigPtrInput is an input type that accepts ClusterPodSecurityPolicyConfigArgs, ClusterPodSecurityPolicyConfigPtr and ClusterPodSecurityPolicyConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPodSecurityPolicyConfigPtrInput` via:
//
//          ClusterPodSecurityPolicyConfigArgs{...}
//
//  or:
//
//          nil
type ClusterPodSecurityPolicyConfigPtrInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput
	ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Context) ClusterPodSecurityPolicyConfigPtrOutput
}

type clusterPodSecurityPolicyConfigPtrType ClusterPodSecurityPolicyConfigArgs

func ClusterPodSecurityPolicyConfigPtr(v *ClusterPodSecurityPolicyConfigArgs) ClusterPodSecurityPolicyConfigPtrInput {
	return (*clusterPodSecurityPolicyConfigPtrType)(v)
}

func (*clusterPodSecurityPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (i *clusterPodSecurityPolicyConfigPtrType) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return i.ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPodSecurityPolicyConfigPtrType) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyConfigPtrOutput)
}

type ClusterPodSecurityPolicyConfigOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigOutput() ClusterPodSecurityPolicyConfigOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return o.ToClusterPodSecurityPolicyConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPodSecurityPolicyConfigOutput) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfig) *ClusterPodSecurityPolicyConfig {
		return &v
	}).(ClusterPodSecurityPolicyConfigPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPodSecurityPolicyConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicyConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterPodSecurityPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicyConfig)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyConfigPtrOutput) ToClusterPodSecurityPolicyConfigPtrOutput() ClusterPodSecurityPolicyConfigPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigPtrOutput) ToClusterPodSecurityPolicyConfigPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyConfigPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyConfigPtrOutput) Elem() ClusterPodSecurityPolicyConfigOutput {
	return o.ApplyT(func(v *ClusterPodSecurityPolicyConfig) ClusterPodSecurityPolicyConfig { return *v }).(ClusterPodSecurityPolicyConfigOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPodSecurityPolicyConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPodSecurityPolicyConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterPrivateClusterConfig struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint bool `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes       *bool                                                `pulumi:"enablePrivateNodes"`
	MasterGlobalAccessConfig *ClusterPrivateClusterConfigMasterGlobalAccessConfig `pulumi:"masterGlobalAccessConfig"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock *string `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName *string `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint *string `pulumi:"privateEndpoint"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint *string `pulumi:"publicEndpoint"`
}

// ClusterPrivateClusterConfigInput is an input type that accepts ClusterPrivateClusterConfigArgs and ClusterPrivateClusterConfigOutput values.
// You can construct a concrete instance of `ClusterPrivateClusterConfigInput` via:
//
//          ClusterPrivateClusterConfigArgs{...}
type ClusterPrivateClusterConfigInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigOutput() ClusterPrivateClusterConfigOutput
	ToClusterPrivateClusterConfigOutputWithContext(context.Context) ClusterPrivateClusterConfigOutput
}

type ClusterPrivateClusterConfigArgs struct {
	// When `true`, the cluster's private
	// endpoint is used as the cluster endpoint and access through the public endpoint
	// is disabled. When `false`, either endpoint can be used. This field only applies
	// to private clusters, when `enablePrivateNodes` is `true`.
	EnablePrivateEndpoint pulumi.BoolInput `pulumi:"enablePrivateEndpoint"`
	// Enables the private cluster feature,
	// creating a private endpoint on the cluster. In a private cluster, nodes only
	// have RFC 1918 private addresses and communicate with the master's private
	// endpoint via private networking.
	EnablePrivateNodes       pulumi.BoolPtrInput                                         `pulumi:"enablePrivateNodes"`
	MasterGlobalAccessConfig ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput `pulumi:"masterGlobalAccessConfig"`
	// The IP range in CIDR notation to use for
	// the hosted master network. This range will be used for assigning private IP
	// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
	// with any other ranges in use within the cluster's network, and it must be a /28
	// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
	// for more details. This field only applies to private clusters, when
	// `enablePrivateNodes` is `true`.
	MasterIpv4CidrBlock pulumi.StringPtrInput `pulumi:"masterIpv4CidrBlock"`
	// The name of the peering between this cluster and the Google owned VPC.
	PeeringName pulumi.StringPtrInput `pulumi:"peeringName"`
	// The internal IP address of this cluster's master endpoint.
	PrivateEndpoint pulumi.StringPtrInput `pulumi:"privateEndpoint"`
	// The external IP address of this cluster's master endpoint.
	PublicEndpoint pulumi.StringPtrInput `pulumi:"publicEndpoint"`
}

func (ClusterPrivateClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfig)(nil)).Elem()
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigOutput() ClusterPrivateClusterConfigOutput {
	return i.ToClusterPrivateClusterConfigOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigOutput)
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigArgs) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigOutput).ToClusterPrivateClusterConfigPtrOutputWithContext(ctx)
}

// ClusterPrivateClusterConfigPtrInput is an input type that accepts ClusterPrivateClusterConfigArgs, ClusterPrivateClusterConfigPtr and ClusterPrivateClusterConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPrivateClusterConfigPtrInput` via:
//
//          ClusterPrivateClusterConfigArgs{...}
//
//  or:
//
//          nil
type ClusterPrivateClusterConfigPtrInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput
	ToClusterPrivateClusterConfigPtrOutputWithContext(context.Context) ClusterPrivateClusterConfigPtrOutput
}

type clusterPrivateClusterConfigPtrType ClusterPrivateClusterConfigArgs

func ClusterPrivateClusterConfigPtr(v *ClusterPrivateClusterConfigArgs) ClusterPrivateClusterConfigPtrInput {
	return (*clusterPrivateClusterConfigPtrType)(v)
}

func (*clusterPrivateClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfig)(nil)).Elem()
}

func (i *clusterPrivateClusterConfigPtrType) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPrivateClusterConfigPtrType) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigPtrOutput)
}

type ClusterPrivateClusterConfigOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigOutput() ClusterPrivateClusterConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return o.ToClusterPrivateClusterConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPrivateClusterConfigOutput) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *ClusterPrivateClusterConfig {
		return &v
	}).(ClusterPrivateClusterConfigPtrOutput)
}

// When `true`, the cluster's private
// endpoint is used as the cluster endpoint and access through the public endpoint
// is disabled. When `false`, either endpoint can be used. This field only applies
// to private clusters, when `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigOutput) EnablePrivateEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) bool { return v.EnablePrivateEndpoint }).(pulumi.BoolOutput)
}

// Enables the private cluster feature,
// creating a private endpoint on the cluster. In a private cluster, nodes only
// have RFC 1918 private addresses and communicate with the master's private
// endpoint via private networking.
func (o ClusterPrivateClusterConfigOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *bool { return v.EnablePrivateNodes }).(pulumi.BoolPtrOutput)
}

func (o ClusterPrivateClusterConfigOutput) MasterGlobalAccessConfig() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *ClusterPrivateClusterConfigMasterGlobalAccessConfig {
		return v.MasterGlobalAccessConfig
	}).(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput)
}

// The IP range in CIDR notation to use for
// the hosted master network. This range will be used for assigning private IP
// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
// with any other ranges in use within the cluster's network, and it must be a /28
// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
// for more details. This field only applies to private clusters, when
// `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.MasterIpv4CidrBlock }).(pulumi.StringPtrOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o ClusterPrivateClusterConfigOutput) PeeringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.PeeringName }).(pulumi.StringPtrOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigOutput) PrivateEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.PrivateEndpoint }).(pulumi.StringPtrOutput)
}

// The external IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigOutput) PublicEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfig) *string { return v.PublicEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterPrivateClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigPtrOutput) ToClusterPrivateClusterConfigPtrOutput() ClusterPrivateClusterConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigPtrOutput) ToClusterPrivateClusterConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigPtrOutput) Elem() ClusterPrivateClusterConfigOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) ClusterPrivateClusterConfig { return *v }).(ClusterPrivateClusterConfigOutput)
}

// When `true`, the cluster's private
// endpoint is used as the cluster endpoint and access through the public endpoint
// is disabled. When `false`, either endpoint can be used. This field only applies
// to private clusters, when `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigPtrOutput) EnablePrivateEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.EnablePrivateEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Enables the private cluster feature,
// creating a private endpoint on the cluster. In a private cluster, nodes only
// have RFC 1918 private addresses and communicate with the master's private
// endpoint via private networking.
func (o ClusterPrivateClusterConfigPtrOutput) EnablePrivateNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateNodes
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterPrivateClusterConfigPtrOutput) MasterGlobalAccessConfig() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *ClusterPrivateClusterConfigMasterGlobalAccessConfig {
		if v == nil {
			return nil
		}
		return v.MasterGlobalAccessConfig
	}).(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput)
}

// The IP range in CIDR notation to use for
// the hosted master network. This range will be used for assigning private IP
// addresses to the cluster master(s) and the ILB VIP. This range must not overlap
// with any other ranges in use within the cluster's network, and it must be a /28
// subnet. See [Private Cluster Limitations](https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters#limitations)
// for more details. This field only applies to private clusters, when
// `enablePrivateNodes` is `true`.
func (o ClusterPrivateClusterConfigPtrOutput) MasterIpv4CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.MasterIpv4CidrBlock
	}).(pulumi.StringPtrOutput)
}

// The name of the peering between this cluster and the Google owned VPC.
func (o ClusterPrivateClusterConfigPtrOutput) PeeringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.PeeringName
	}).(pulumi.StringPtrOutput)
}

// The internal IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigPtrOutput) PrivateEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(pulumi.StringPtrOutput)
}

// The external IP address of this cluster's master endpoint.
func (o ClusterPrivateClusterConfigPtrOutput) PublicEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.PublicEndpoint
	}).(pulumi.StringPtrOutput)
}

type ClusterPrivateClusterConfigMasterGlobalAccessConfig struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

// ClusterPrivateClusterConfigMasterGlobalAccessConfigInput is an input type that accepts ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs and ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput values.
// You can construct a concrete instance of `ClusterPrivateClusterConfigMasterGlobalAccessConfigInput` via:
//
//          ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs{...}
type ClusterPrivateClusterConfigMasterGlobalAccessConfigInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput
	ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput
}

type ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (i ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return i.ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput)
}

func (i ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(context.Background())
}

func (i ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput).ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx)
}

// ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput is an input type that accepts ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs, ClusterPrivateClusterConfigMasterGlobalAccessConfigPtr and ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput values.
// You can construct a concrete instance of `ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput` via:
//
//          ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs{...}
//
//  or:
//
//          nil
type ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput interface {
	pulumi.Input

	ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput
	ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput
}

type clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs

func ClusterPrivateClusterConfigMasterGlobalAccessConfigPtr(v *ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrInput {
	return (*clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType)(v)
}

func (*clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (i *clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return i.ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(context.Background())
}

func (i *clusterPrivateClusterConfigMasterGlobalAccessConfigPtrType) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput)
}

type ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return o
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o.ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(context.Background())
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigMasterGlobalAccessConfig) *ClusterPrivateClusterConfigMasterGlobalAccessConfig {
		return &v
	}).(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterPrivateClusterConfigMasterGlobalAccessConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateClusterConfigMasterGlobalAccessConfig)(nil)).Elem()
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput() ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) ToClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutputWithContext(ctx context.Context) ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput {
	return o
}

func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) Elem() ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfigMasterGlobalAccessConfig) ClusterPrivateClusterConfigMasterGlobalAccessConfig {
		return *v
	}).(ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateClusterConfigMasterGlobalAccessConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterReleaseChannel struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel string `pulumi:"channel"`
}

// ClusterReleaseChannelInput is an input type that accepts ClusterReleaseChannelArgs and ClusterReleaseChannelOutput values.
// You can construct a concrete instance of `ClusterReleaseChannelInput` via:
//
//          ClusterReleaseChannelArgs{...}
type ClusterReleaseChannelInput interface {
	pulumi.Input

	ToClusterReleaseChannelOutput() ClusterReleaseChannelOutput
	ToClusterReleaseChannelOutputWithContext(context.Context) ClusterReleaseChannelOutput
}

type ClusterReleaseChannelArgs struct {
	// The selected release channel.
	// Accepted values are:
	// * UNSPECIFIED: Not set.
	// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
	// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
	// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
	Channel pulumi.StringInput `pulumi:"channel"`
}

func (ClusterReleaseChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannel)(nil)).Elem()
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelOutput() ClusterReleaseChannelOutput {
	return i.ToClusterReleaseChannelOutputWithContext(context.Background())
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelOutputWithContext(ctx context.Context) ClusterReleaseChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelOutput)
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return i.ToClusterReleaseChannelPtrOutputWithContext(context.Background())
}

func (i ClusterReleaseChannelArgs) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelOutput).ToClusterReleaseChannelPtrOutputWithContext(ctx)
}

// ClusterReleaseChannelPtrInput is an input type that accepts ClusterReleaseChannelArgs, ClusterReleaseChannelPtr and ClusterReleaseChannelPtrOutput values.
// You can construct a concrete instance of `ClusterReleaseChannelPtrInput` via:
//
//          ClusterReleaseChannelArgs{...}
//
//  or:
//
//          nil
type ClusterReleaseChannelPtrInput interface {
	pulumi.Input

	ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput
	ToClusterReleaseChannelPtrOutputWithContext(context.Context) ClusterReleaseChannelPtrOutput
}

type clusterReleaseChannelPtrType ClusterReleaseChannelArgs

func ClusterReleaseChannelPtr(v *ClusterReleaseChannelArgs) ClusterReleaseChannelPtrInput {
	return (*clusterReleaseChannelPtrType)(v)
}

func (*clusterReleaseChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterReleaseChannel)(nil)).Elem()
}

func (i *clusterReleaseChannelPtrType) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return i.ToClusterReleaseChannelPtrOutputWithContext(context.Background())
}

func (i *clusterReleaseChannelPtrType) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReleaseChannelPtrOutput)
}

type ClusterReleaseChannelOutput struct{ *pulumi.OutputState }

func (ClusterReleaseChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReleaseChannel)(nil)).Elem()
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelOutput() ClusterReleaseChannelOutput {
	return o
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelOutputWithContext(ctx context.Context) ClusterReleaseChannelOutput {
	return o
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return o.ToClusterReleaseChannelPtrOutputWithContext(context.Background())
}

func (o ClusterReleaseChannelOutput) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return o.ApplyT(func(v ClusterReleaseChannel) *ClusterReleaseChannel {
		return &v
	}).(ClusterReleaseChannelPtrOutput)
}

// The selected release channel.
// Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o ClusterReleaseChannelOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReleaseChannel) string { return v.Channel }).(pulumi.StringOutput)
}

type ClusterReleaseChannelPtrOutput struct{ *pulumi.OutputState }

func (ClusterReleaseChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterReleaseChannel)(nil)).Elem()
}

func (o ClusterReleaseChannelPtrOutput) ToClusterReleaseChannelPtrOutput() ClusterReleaseChannelPtrOutput {
	return o
}

func (o ClusterReleaseChannelPtrOutput) ToClusterReleaseChannelPtrOutputWithContext(ctx context.Context) ClusterReleaseChannelPtrOutput {
	return o
}

func (o ClusterReleaseChannelPtrOutput) Elem() ClusterReleaseChannelOutput {
	return o.ApplyT(func(v *ClusterReleaseChannel) ClusterReleaseChannel { return *v }).(ClusterReleaseChannelOutput)
}

// The selected release channel.
// Accepted values are:
// * UNSPECIFIED: Not set.
// * RAPID: Weekly upgrade cadence; Early testers and developers who requires new features.
// * REGULAR: Multiple per month upgrade cadence; Production users who need features not yet offered in the Stable channel.
// * STABLE: Every few months upgrade cadence; Production users who need stability above all else, and for whom frequent upgrades are too risky.
func (o ClusterReleaseChannelPtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterReleaseChannel) *string {
		if v == nil {
			return nil
		}
		return &v.Channel
	}).(pulumi.StringPtrOutput)
}

type ClusterResourceUsageExportConfig struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestination ClusterResourceUsageExportConfigBigqueryDestination `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering *bool `pulumi:"enableNetworkEgressMetering"`
	// Whether to enable resource
	// consumption metering on this cluster. When enabled, a table will be created in
	// the resource export BigQuery dataset to store resource consumption data. The
	// resulting table can be joined with the resource usage table or with BigQuery
	// billing export. Defaults to `true`.
	EnableResourceConsumptionMetering *bool `pulumi:"enableResourceConsumptionMetering"`
}

// ClusterResourceUsageExportConfigInput is an input type that accepts ClusterResourceUsageExportConfigArgs and ClusterResourceUsageExportConfigOutput values.
// You can construct a concrete instance of `ClusterResourceUsageExportConfigInput` via:
//
//          ClusterResourceUsageExportConfigArgs{...}
type ClusterResourceUsageExportConfigInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigOutput() ClusterResourceUsageExportConfigOutput
	ToClusterResourceUsageExportConfigOutputWithContext(context.Context) ClusterResourceUsageExportConfigOutput
}

type ClusterResourceUsageExportConfigArgs struct {
	// Parameters for using BigQuery as the destination of resource usage export.
	BigqueryDestination ClusterResourceUsageExportConfigBigqueryDestinationInput `pulumi:"bigqueryDestination"`
	// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
	// in the cluster to meter network egress traffic.
	EnableNetworkEgressMetering pulumi.BoolPtrInput `pulumi:"enableNetworkEgressMetering"`
	// Whether to enable resource
	// consumption metering on this cluster. When enabled, a table will be created in
	// the resource export BigQuery dataset to store resource consumption data. The
	// resulting table can be joined with the resource usage table or with BigQuery
	// billing export. Defaults to `true`.
	EnableResourceConsumptionMetering pulumi.BoolPtrInput `pulumi:"enableResourceConsumptionMetering"`
}

func (ClusterResourceUsageExportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigOutput() ClusterResourceUsageExportConfigOutput {
	return i.ToClusterResourceUsageExportConfigOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigOutput)
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return i.ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigArgs) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigOutput).ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx)
}

// ClusterResourceUsageExportConfigPtrInput is an input type that accepts ClusterResourceUsageExportConfigArgs, ClusterResourceUsageExportConfigPtr and ClusterResourceUsageExportConfigPtrOutput values.
// You can construct a concrete instance of `ClusterResourceUsageExportConfigPtrInput` via:
//
//          ClusterResourceUsageExportConfigArgs{...}
//
//  or:
//
//          nil
type ClusterResourceUsageExportConfigPtrInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput
	ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Context) ClusterResourceUsageExportConfigPtrOutput
}

type clusterResourceUsageExportConfigPtrType ClusterResourceUsageExportConfigArgs

func ClusterResourceUsageExportConfigPtr(v *ClusterResourceUsageExportConfigArgs) ClusterResourceUsageExportConfigPtrInput {
	return (*clusterResourceUsageExportConfigPtrType)(v)
}

func (*clusterResourceUsageExportConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (i *clusterResourceUsageExportConfigPtrType) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return i.ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Background())
}

func (i *clusterResourceUsageExportConfigPtrType) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigPtrOutput)
}

type ClusterResourceUsageExportConfigOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigOutput() ClusterResourceUsageExportConfigOutput {
	return o
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigOutput {
	return o
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return o.ToClusterResourceUsageExportConfigPtrOutputWithContext(context.Background())
}

func (o ClusterResourceUsageExportConfigOutput) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) *ClusterResourceUsageExportConfig {
		return &v
	}).(ClusterResourceUsageExportConfigPtrOutput)
}

// Parameters for using BigQuery as the destination of resource usage export.
func (o ClusterResourceUsageExportConfigOutput) BigqueryDestination() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) ClusterResourceUsageExportConfigBigqueryDestination {
		return v.BigqueryDestination
	}).(ClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
// in the cluster to meter network egress traffic.
func (o ClusterResourceUsageExportConfigOutput) EnableNetworkEgressMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) *bool { return v.EnableNetworkEgressMetering }).(pulumi.BoolPtrOutput)
}

// Whether to enable resource
// consumption metering on this cluster. When enabled, a table will be created in
// the resource export BigQuery dataset to store resource consumption data. The
// resulting table can be joined with the resource usage table or with BigQuery
// billing export. Defaults to `true`.
func (o ClusterResourceUsageExportConfigOutput) EnableResourceConsumptionMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfig) *bool { return v.EnableResourceConsumptionMetering }).(pulumi.BoolPtrOutput)
}

type ClusterResourceUsageExportConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfig)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigPtrOutput) ToClusterResourceUsageExportConfigPtrOutput() ClusterResourceUsageExportConfigPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigPtrOutput) ToClusterResourceUsageExportConfigPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigPtrOutput) Elem() ClusterResourceUsageExportConfigOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfig) ClusterResourceUsageExportConfig { return *v }).(ClusterResourceUsageExportConfigOutput)
}

// Parameters for using BigQuery as the destination of resource usage export.
func (o ClusterResourceUsageExportConfigPtrOutput) BigqueryDestination() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfig) *ClusterResourceUsageExportConfigBigqueryDestination {
		if v == nil {
			return nil
		}
		return &v.BigqueryDestination
	}).(ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput)
}

// Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created
// in the cluster to meter network egress traffic.
func (o ClusterResourceUsageExportConfigPtrOutput) EnableNetworkEgressMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNetworkEgressMetering
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable resource
// consumption metering on this cluster. When enabled, a table will be created in
// the resource export BigQuery dataset to store resource consumption data. The
// resulting table can be joined with the resource usage table or with BigQuery
// billing export. Defaults to `true`.
func (o ClusterResourceUsageExportConfigPtrOutput) EnableResourceConsumptionMetering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableResourceConsumptionMetering
	}).(pulumi.BoolPtrOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestination struct {
	DatasetId string `pulumi:"datasetId"`
}

// ClusterResourceUsageExportConfigBigqueryDestinationInput is an input type that accepts ClusterResourceUsageExportConfigBigqueryDestinationArgs and ClusterResourceUsageExportConfigBigqueryDestinationOutput values.
// You can construct a concrete instance of `ClusterResourceUsageExportConfigBigqueryDestinationInput` via:
//
//          ClusterResourceUsageExportConfigBigqueryDestinationArgs{...}
type ClusterResourceUsageExportConfigBigqueryDestinationInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigBigqueryDestinationOutput() ClusterResourceUsageExportConfigBigqueryDestinationOutput
	ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Context) ClusterResourceUsageExportConfigBigqueryDestinationOutput
}

type ClusterResourceUsageExportConfigBigqueryDestinationArgs struct {
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
}

func (ClusterResourceUsageExportConfigBigqueryDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationOutput() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return i.ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return i.ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(context.Background())
}

func (i ClusterResourceUsageExportConfigBigqueryDestinationArgs) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigBigqueryDestinationOutput).ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx)
}

// ClusterResourceUsageExportConfigBigqueryDestinationPtrInput is an input type that accepts ClusterResourceUsageExportConfigBigqueryDestinationArgs, ClusterResourceUsageExportConfigBigqueryDestinationPtr and ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput values.
// You can construct a concrete instance of `ClusterResourceUsageExportConfigBigqueryDestinationPtrInput` via:
//
//          ClusterResourceUsageExportConfigBigqueryDestinationArgs{...}
//
//  or:
//
//          nil
type ClusterResourceUsageExportConfigBigqueryDestinationPtrInput interface {
	pulumi.Input

	ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput
	ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput
}

type clusterResourceUsageExportConfigBigqueryDestinationPtrType ClusterResourceUsageExportConfigBigqueryDestinationArgs

func ClusterResourceUsageExportConfigBigqueryDestinationPtr(v *ClusterResourceUsageExportConfigBigqueryDestinationArgs) ClusterResourceUsageExportConfigBigqueryDestinationPtrInput {
	return (*clusterResourceUsageExportConfigBigqueryDestinationPtrType)(v)
}

func (*clusterResourceUsageExportConfigBigqueryDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (i *clusterResourceUsageExportConfigBigqueryDestinationPtrType) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return i.ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(context.Background())
}

func (i *clusterResourceUsageExportConfigBigqueryDestinationPtrType) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestinationOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigBigqueryDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationOutput() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o.ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(context.Background())
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigBigqueryDestination) *ClusterResourceUsageExportConfigBigqueryDestination {
		return &v
	}).(ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput)
}
func (o ClusterResourceUsageExportConfigBigqueryDestinationOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterResourceUsageExportConfigBigqueryDestination) string { return v.DatasetId }).(pulumi.StringOutput)
}

type ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceUsageExportConfigBigqueryDestination)(nil)).Elem()
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutput() ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) ToClusterResourceUsageExportConfigBigqueryDestinationPtrOutputWithContext(ctx context.Context) ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput {
	return o
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) Elem() ClusterResourceUsageExportConfigBigqueryDestinationOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfigBigqueryDestination) ClusterResourceUsageExportConfigBigqueryDestination {
		return *v
	}).(ClusterResourceUsageExportConfigBigqueryDestinationOutput)
}

func (o ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceUsageExportConfigBigqueryDestination) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetId
	}).(pulumi.StringPtrOutput)
}

type ClusterVerticalPodAutoscaling struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled bool `pulumi:"enabled"`
}

// ClusterVerticalPodAutoscalingInput is an input type that accepts ClusterVerticalPodAutoscalingArgs and ClusterVerticalPodAutoscalingOutput values.
// You can construct a concrete instance of `ClusterVerticalPodAutoscalingInput` via:
//
//          ClusterVerticalPodAutoscalingArgs{...}
type ClusterVerticalPodAutoscalingInput interface {
	pulumi.Input

	ToClusterVerticalPodAutoscalingOutput() ClusterVerticalPodAutoscalingOutput
	ToClusterVerticalPodAutoscalingOutputWithContext(context.Context) ClusterVerticalPodAutoscalingOutput
}

type ClusterVerticalPodAutoscalingArgs struct {
	// Enable the PodSecurityPolicy controller for this cluster.
	// If enabled, pods must be valid under a PodSecurityPolicy to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterVerticalPodAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingOutput() ClusterVerticalPodAutoscalingOutput {
	return i.ToClusterVerticalPodAutoscalingOutputWithContext(context.Background())
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingOutput)
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return i.ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i ClusterVerticalPodAutoscalingArgs) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingOutput).ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx)
}

// ClusterVerticalPodAutoscalingPtrInput is an input type that accepts ClusterVerticalPodAutoscalingArgs, ClusterVerticalPodAutoscalingPtr and ClusterVerticalPodAutoscalingPtrOutput values.
// You can construct a concrete instance of `ClusterVerticalPodAutoscalingPtrInput` via:
//
//          ClusterVerticalPodAutoscalingArgs{...}
//
//  or:
//
//          nil
type ClusterVerticalPodAutoscalingPtrInput interface {
	pulumi.Input

	ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput
	ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Context) ClusterVerticalPodAutoscalingPtrOutput
}

type clusterVerticalPodAutoscalingPtrType ClusterVerticalPodAutoscalingArgs

func ClusterVerticalPodAutoscalingPtr(v *ClusterVerticalPodAutoscalingArgs) ClusterVerticalPodAutoscalingPtrInput {
	return (*clusterVerticalPodAutoscalingPtrType)(v)
}

func (*clusterVerticalPodAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (i *clusterVerticalPodAutoscalingPtrType) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return i.ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (i *clusterVerticalPodAutoscalingPtrType) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVerticalPodAutoscalingPtrOutput)
}

type ClusterVerticalPodAutoscalingOutput struct{ *pulumi.OutputState }

func (ClusterVerticalPodAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingOutput() ClusterVerticalPodAutoscalingOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return o.ToClusterVerticalPodAutoscalingPtrOutputWithContext(context.Background())
}

func (o ClusterVerticalPodAutoscalingOutput) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscaling) *ClusterVerticalPodAutoscaling {
		return &v
	}).(ClusterVerticalPodAutoscalingPtrOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterVerticalPodAutoscalingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterVerticalPodAutoscaling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterVerticalPodAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (ClusterVerticalPodAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVerticalPodAutoscaling)(nil)).Elem()
}

func (o ClusterVerticalPodAutoscalingPtrOutput) ToClusterVerticalPodAutoscalingPtrOutput() ClusterVerticalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingPtrOutput) ToClusterVerticalPodAutoscalingPtrOutputWithContext(ctx context.Context) ClusterVerticalPodAutoscalingPtrOutput {
	return o
}

func (o ClusterVerticalPodAutoscalingPtrOutput) Elem() ClusterVerticalPodAutoscalingOutput {
	return o.ApplyT(func(v *ClusterVerticalPodAutoscaling) ClusterVerticalPodAutoscaling { return *v }).(ClusterVerticalPodAutoscalingOutput)
}

// Enable the PodSecurityPolicy controller for this cluster.
// If enabled, pods must be valid under a PodSecurityPolicy to be created.
func (o ClusterVerticalPodAutoscalingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterVerticalPodAutoscaling) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterWorkloadIdentityConfig struct {
	// Currently, the only supported identity namespace is the project's default.
	IdentityNamespace string `pulumi:"identityNamespace"`
}

// ClusterWorkloadIdentityConfigInput is an input type that accepts ClusterWorkloadIdentityConfigArgs and ClusterWorkloadIdentityConfigOutput values.
// You can construct a concrete instance of `ClusterWorkloadIdentityConfigInput` via:
//
//          ClusterWorkloadIdentityConfigArgs{...}
type ClusterWorkloadIdentityConfigInput interface {
	pulumi.Input

	ToClusterWorkloadIdentityConfigOutput() ClusterWorkloadIdentityConfigOutput
	ToClusterWorkloadIdentityConfigOutputWithContext(context.Context) ClusterWorkloadIdentityConfigOutput
}

type ClusterWorkloadIdentityConfigArgs struct {
	// Currently, the only supported identity namespace is the project's default.
	IdentityNamespace pulumi.StringInput `pulumi:"identityNamespace"`
}

func (ClusterWorkloadIdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigOutput() ClusterWorkloadIdentityConfigOutput {
	return i.ToClusterWorkloadIdentityConfigOutputWithContext(context.Background())
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigOutput)
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return i.ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Background())
}

func (i ClusterWorkloadIdentityConfigArgs) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigOutput).ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx)
}

// ClusterWorkloadIdentityConfigPtrInput is an input type that accepts ClusterWorkloadIdentityConfigArgs, ClusterWorkloadIdentityConfigPtr and ClusterWorkloadIdentityConfigPtrOutput values.
// You can construct a concrete instance of `ClusterWorkloadIdentityConfigPtrInput` via:
//
//          ClusterWorkloadIdentityConfigArgs{...}
//
//  or:
//
//          nil
type ClusterWorkloadIdentityConfigPtrInput interface {
	pulumi.Input

	ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput
	ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Context) ClusterWorkloadIdentityConfigPtrOutput
}

type clusterWorkloadIdentityConfigPtrType ClusterWorkloadIdentityConfigArgs

func ClusterWorkloadIdentityConfigPtr(v *ClusterWorkloadIdentityConfigArgs) ClusterWorkloadIdentityConfigPtrInput {
	return (*clusterWorkloadIdentityConfigPtrType)(v)
}

func (*clusterWorkloadIdentityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (i *clusterWorkloadIdentityConfigPtrType) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return i.ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Background())
}

func (i *clusterWorkloadIdentityConfigPtrType) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkloadIdentityConfigPtrOutput)
}

type ClusterWorkloadIdentityConfigOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadIdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigOutput() ClusterWorkloadIdentityConfigOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return o.ToClusterWorkloadIdentityConfigPtrOutputWithContext(context.Background())
}

func (o ClusterWorkloadIdentityConfigOutput) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfig) *ClusterWorkloadIdentityConfig {
		return &v
	}).(ClusterWorkloadIdentityConfigPtrOutput)
}

// Currently, the only supported identity namespace is the project's default.
func (o ClusterWorkloadIdentityConfigOutput) IdentityNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWorkloadIdentityConfig) string { return v.IdentityNamespace }).(pulumi.StringOutput)
}

type ClusterWorkloadIdentityConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterWorkloadIdentityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWorkloadIdentityConfig)(nil)).Elem()
}

func (o ClusterWorkloadIdentityConfigPtrOutput) ToClusterWorkloadIdentityConfigPtrOutput() ClusterWorkloadIdentityConfigPtrOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigPtrOutput) ToClusterWorkloadIdentityConfigPtrOutputWithContext(ctx context.Context) ClusterWorkloadIdentityConfigPtrOutput {
	return o
}

func (o ClusterWorkloadIdentityConfigPtrOutput) Elem() ClusterWorkloadIdentityConfigOutput {
	return o.ApplyT(func(v *ClusterWorkloadIdentityConfig) ClusterWorkloadIdentityConfig { return *v }).(ClusterWorkloadIdentityConfigOutput)
}

// Currently, the only supported identity namespace is the project's default.
func (o ClusterWorkloadIdentityConfigPtrOutput) IdentityNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterWorkloadIdentityConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityNamespace
	}).(pulumi.StringPtrOutput)
}

type NodePoolAutoscaling struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >=0 and
	// <= `maxNodeCount`.
	MinNodeCount int `pulumi:"minNodeCount"`
}

// NodePoolAutoscalingInput is an input type that accepts NodePoolAutoscalingArgs and NodePoolAutoscalingOutput values.
// You can construct a concrete instance of `NodePoolAutoscalingInput` via:
//
//          NodePoolAutoscalingArgs{...}
type NodePoolAutoscalingInput interface {
	pulumi.Input

	ToNodePoolAutoscalingOutput() NodePoolAutoscalingOutput
	ToNodePoolAutoscalingOutputWithContext(context.Context) NodePoolAutoscalingOutput
}

type NodePoolAutoscalingArgs struct {
	// Maximum number of nodes in the NodePool. Must be >= min_node_count.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Minimum number of nodes in the NodePool. Must be >=0 and
	// <= `maxNodeCount`.
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (NodePoolAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscaling)(nil)).Elem()
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingOutput() NodePoolAutoscalingOutput {
	return i.ToNodePoolAutoscalingOutputWithContext(context.Background())
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingOutputWithContext(ctx context.Context) NodePoolAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingOutput)
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return i.ToNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i NodePoolAutoscalingArgs) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingOutput).ToNodePoolAutoscalingPtrOutputWithContext(ctx)
}

// NodePoolAutoscalingPtrInput is an input type that accepts NodePoolAutoscalingArgs, NodePoolAutoscalingPtr and NodePoolAutoscalingPtrOutput values.
// You can construct a concrete instance of `NodePoolAutoscalingPtrInput` via:
//
//          NodePoolAutoscalingArgs{...}
//
//  or:
//
//          nil
type NodePoolAutoscalingPtrInput interface {
	pulumi.Input

	ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput
	ToNodePoolAutoscalingPtrOutputWithContext(context.Context) NodePoolAutoscalingPtrOutput
}

type nodePoolAutoscalingPtrType NodePoolAutoscalingArgs

func NodePoolAutoscalingPtr(v *NodePoolAutoscalingArgs) NodePoolAutoscalingPtrInput {
	return (*nodePoolAutoscalingPtrType)(v)
}

func (*nodePoolAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoscaling)(nil)).Elem()
}

func (i *nodePoolAutoscalingPtrType) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return i.ToNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (i *nodePoolAutoscalingPtrType) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolAutoscalingPtrOutput)
}

type NodePoolAutoscalingOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolAutoscaling)(nil)).Elem()
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingOutput() NodePoolAutoscalingOutput {
	return o
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingOutputWithContext(ctx context.Context) NodePoolAutoscalingOutput {
	return o
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return o.ToNodePoolAutoscalingPtrOutputWithContext(context.Background())
}

func (o NodePoolAutoscalingOutput) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) *NodePoolAutoscaling {
		return &v
	}).(NodePoolAutoscalingPtrOutput)
}

// Maximum number of nodes in the NodePool. Must be >= min_node_count.
func (o NodePoolAutoscalingOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Minimum number of nodes in the NodePool. Must be >=0 and
// <= `maxNodeCount`.
func (o NodePoolAutoscalingOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolAutoscaling) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type NodePoolAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (NodePoolAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolAutoscaling)(nil)).Elem()
}

func (o NodePoolAutoscalingPtrOutput) ToNodePoolAutoscalingPtrOutput() NodePoolAutoscalingPtrOutput {
	return o
}

func (o NodePoolAutoscalingPtrOutput) ToNodePoolAutoscalingPtrOutputWithContext(ctx context.Context) NodePoolAutoscalingPtrOutput {
	return o
}

func (o NodePoolAutoscalingPtrOutput) Elem() NodePoolAutoscalingOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) NodePoolAutoscaling { return *v }).(NodePoolAutoscalingOutput)
}

// Maximum number of nodes in the NodePool. Must be >= min_node_count.
func (o NodePoolAutoscalingPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes in the NodePool. Must be >=0 and
// <= `maxNodeCount`.
func (o NodePoolAutoscalingPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolAutoscaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

type NodePoolManagement struct {
	// Whether the nodes will be automatically repaired.
	AutoRepair *bool `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
}

// NodePoolManagementInput is an input type that accepts NodePoolManagementArgs and NodePoolManagementOutput values.
// You can construct a concrete instance of `NodePoolManagementInput` via:
//
//          NodePoolManagementArgs{...}
type NodePoolManagementInput interface {
	pulumi.Input

	ToNodePoolManagementOutput() NodePoolManagementOutput
	ToNodePoolManagementOutputWithContext(context.Context) NodePoolManagementOutput
}

type NodePoolManagementArgs struct {
	// Whether the nodes will be automatically repaired.
	AutoRepair pulumi.BoolPtrInput `pulumi:"autoRepair"`
	// Whether the nodes will be automatically upgraded.
	AutoUpgrade pulumi.BoolPtrInput `pulumi:"autoUpgrade"`
}

func (NodePoolManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagement)(nil)).Elem()
}

func (i NodePoolManagementArgs) ToNodePoolManagementOutput() NodePoolManagementOutput {
	return i.ToNodePoolManagementOutputWithContext(context.Background())
}

func (i NodePoolManagementArgs) ToNodePoolManagementOutputWithContext(ctx context.Context) NodePoolManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementOutput)
}

func (i NodePoolManagementArgs) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return i.ToNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i NodePoolManagementArgs) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementOutput).ToNodePoolManagementPtrOutputWithContext(ctx)
}

// NodePoolManagementPtrInput is an input type that accepts NodePoolManagementArgs, NodePoolManagementPtr and NodePoolManagementPtrOutput values.
// You can construct a concrete instance of `NodePoolManagementPtrInput` via:
//
//          NodePoolManagementArgs{...}
//
//  or:
//
//          nil
type NodePoolManagementPtrInput interface {
	pulumi.Input

	ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput
	ToNodePoolManagementPtrOutputWithContext(context.Context) NodePoolManagementPtrOutput
}

type nodePoolManagementPtrType NodePoolManagementArgs

func NodePoolManagementPtr(v *NodePoolManagementArgs) NodePoolManagementPtrInput {
	return (*nodePoolManagementPtrType)(v)
}

func (*nodePoolManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolManagement)(nil)).Elem()
}

func (i *nodePoolManagementPtrType) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return i.ToNodePoolManagementPtrOutputWithContext(context.Background())
}

func (i *nodePoolManagementPtrType) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolManagementPtrOutput)
}

type NodePoolManagementOutput struct{ *pulumi.OutputState }

func (NodePoolManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolManagement)(nil)).Elem()
}

func (o NodePoolManagementOutput) ToNodePoolManagementOutput() NodePoolManagementOutput {
	return o
}

func (o NodePoolManagementOutput) ToNodePoolManagementOutputWithContext(ctx context.Context) NodePoolManagementOutput {
	return o
}

func (o NodePoolManagementOutput) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return o.ToNodePoolManagementPtrOutputWithContext(context.Background())
}

func (o NodePoolManagementOutput) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *NodePoolManagement {
		return &v
	}).(NodePoolManagementPtrOutput)
}

// Whether the nodes will be automatically repaired.
func (o NodePoolManagementOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *bool { return v.AutoRepair }).(pulumi.BoolPtrOutput)
}

// Whether the nodes will be automatically upgraded.
func (o NodePoolManagementOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolManagement) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

type NodePoolManagementPtrOutput struct{ *pulumi.OutputState }

func (NodePoolManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolManagement)(nil)).Elem()
}

func (o NodePoolManagementPtrOutput) ToNodePoolManagementPtrOutput() NodePoolManagementPtrOutput {
	return o
}

func (o NodePoolManagementPtrOutput) ToNodePoolManagementPtrOutputWithContext(ctx context.Context) NodePoolManagementPtrOutput {
	return o
}

func (o NodePoolManagementPtrOutput) Elem() NodePoolManagementOutput {
	return o.ApplyT(func(v *NodePoolManagement) NodePoolManagement { return *v }).(NodePoolManagementOutput)
}

// Whether the nodes will be automatically repaired.
func (o NodePoolManagementPtrOutput) AutoRepair() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoRepair
	}).(pulumi.BoolPtrOutput)
}

// Whether the nodes will be automatically upgraded.
func (o NodePoolManagementPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolManagement) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgrade
	}).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfig struct {
	BootDiskKmsKey         *string                                   `pulumi:"bootDiskKmsKey"`
	DiskSizeGb             *int                                      `pulumi:"diskSizeGb"`
	DiskType               *string                                   `pulumi:"diskType"`
	GuestAccelerators      []NodePoolNodeConfigGuestAccelerator      `pulumi:"guestAccelerators"`
	ImageType              *string                                   `pulumi:"imageType"`
	KubeletConfig          *NodePoolNodeConfigKubeletConfig          `pulumi:"kubeletConfig"`
	Labels                 map[string]string                         `pulumi:"labels"`
	LinuxNodeConfig        *NodePoolNodeConfigLinuxNodeConfig        `pulumi:"linuxNodeConfig"`
	LocalSsdCount          *int                                      `pulumi:"localSsdCount"`
	MachineType            *string                                   `pulumi:"machineType"`
	Metadata               map[string]string                         `pulumi:"metadata"`
	MinCpuPlatform         *string                                   `pulumi:"minCpuPlatform"`
	OauthScopes            []string                                  `pulumi:"oauthScopes"`
	Preemptible            *bool                                     `pulumi:"preemptible"`
	SandboxConfig          *NodePoolNodeConfigSandboxConfig          `pulumi:"sandboxConfig"`
	ServiceAccount         *string                                   `pulumi:"serviceAccount"`
	ShieldedInstanceConfig *NodePoolNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfig"`
	Tags                   []string                                  `pulumi:"tags"`
	Taints                 []NodePoolNodeConfigTaint                 `pulumi:"taints"`
	WorkloadMetadataConfig *NodePoolNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfig"`
}

// NodePoolNodeConfigInput is an input type that accepts NodePoolNodeConfigArgs and NodePoolNodeConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigInput` via:
//
//          NodePoolNodeConfigArgs{...}
type NodePoolNodeConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput
	ToNodePoolNodeConfigOutputWithContext(context.Context) NodePoolNodeConfigOutput
}

type NodePoolNodeConfigArgs struct {
	BootDiskKmsKey         pulumi.StringPtrInput                            `pulumi:"bootDiskKmsKey"`
	DiskSizeGb             pulumi.IntPtrInput                               `pulumi:"diskSizeGb"`
	DiskType               pulumi.StringPtrInput                            `pulumi:"diskType"`
	GuestAccelerators      NodePoolNodeConfigGuestAcceleratorArrayInput     `pulumi:"guestAccelerators"`
	ImageType              pulumi.StringPtrInput                            `pulumi:"imageType"`
	KubeletConfig          NodePoolNodeConfigKubeletConfigPtrInput          `pulumi:"kubeletConfig"`
	Labels                 pulumi.StringMapInput                            `pulumi:"labels"`
	LinuxNodeConfig        NodePoolNodeConfigLinuxNodeConfigPtrInput        `pulumi:"linuxNodeConfig"`
	LocalSsdCount          pulumi.IntPtrInput                               `pulumi:"localSsdCount"`
	MachineType            pulumi.StringPtrInput                            `pulumi:"machineType"`
	Metadata               pulumi.StringMapInput                            `pulumi:"metadata"`
	MinCpuPlatform         pulumi.StringPtrInput                            `pulumi:"minCpuPlatform"`
	OauthScopes            pulumi.StringArrayInput                          `pulumi:"oauthScopes"`
	Preemptible            pulumi.BoolPtrInput                              `pulumi:"preemptible"`
	SandboxConfig          NodePoolNodeConfigSandboxConfigPtrInput          `pulumi:"sandboxConfig"`
	ServiceAccount         pulumi.StringPtrInput                            `pulumi:"serviceAccount"`
	ShieldedInstanceConfig NodePoolNodeConfigShieldedInstanceConfigPtrInput `pulumi:"shieldedInstanceConfig"`
	Tags                   pulumi.StringArrayInput                          `pulumi:"tags"`
	Taints                 NodePoolNodeConfigTaintArrayInput                `pulumi:"taints"`
	WorkloadMetadataConfig NodePoolNodeConfigWorkloadMetadataConfigPtrInput `pulumi:"workloadMetadataConfig"`
}

func (NodePoolNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return i.ToNodePoolNodeConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput)
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigArgs) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigOutput).ToNodePoolNodeConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigPtrInput is an input type that accepts NodePoolNodeConfigArgs, NodePoolNodeConfigPtr and NodePoolNodeConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigPtrInput` via:
//
//          NodePoolNodeConfigArgs{...}
//
//  or:
//
//          nil
type NodePoolNodeConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput
	ToNodePoolNodeConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigPtrOutput
}

type nodePoolNodeConfigPtrType NodePoolNodeConfigArgs

func NodePoolNodeConfigPtr(v *NodePoolNodeConfigArgs) NodePoolNodeConfigPtrInput {
	return (*nodePoolNodeConfigPtrType)(v)
}

func (*nodePoolNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigPtrType) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigPtrOutput)
}

type NodePoolNodeConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutput() NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o.ToNodePoolNodeConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfig {
		return &v
	}).(NodePoolNodeConfigPtrOutput)
}
func (o NodePoolNodeConfigOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.BootDiskKmsKey }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigOutput) GuestAccelerators() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigGuestAccelerator { return v.GuestAccelerators }).(NodePoolNodeConfigGuestAcceleratorArrayOutput)
}

func (o NodePoolNodeConfigOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigOutput) KubeletConfig() NodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigKubeletConfig { return v.KubeletConfig }).(NodePoolNodeConfigKubeletConfigPtrOutput)
}

func (o NodePoolNodeConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigOutput) LinuxNodeConfig() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigLinuxNodeConfig { return v.LinuxNodeConfig }).(NodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

func (o NodePoolNodeConfigOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *int { return v.LocalSsdCount }).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.MachineType }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.MinCpuPlatform }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigOutput) SandboxConfig() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigSandboxConfig { return v.SandboxConfig }).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

func (o NodePoolNodeConfigOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *string { return v.ServiceAccount }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigOutput) ShieldedInstanceConfig() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigShieldedInstanceConfig { return v.ShieldedInstanceConfig }).(NodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

func (o NodePoolNodeConfigOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigOutput) Taints() NodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) []NodePoolNodeConfigTaint { return v.Taints }).(NodePoolNodeConfigTaintArrayOutput)
}

func (o NodePoolNodeConfigOutput) WorkloadMetadataConfig() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfig) *NodePoolNodeConfigWorkloadMetadataConfig { return v.WorkloadMetadataConfig }).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutput() NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) ToNodePoolNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigPtrOutput) Elem() NodePoolNodeConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) NodePoolNodeConfig { return *v }).(NodePoolNodeConfigOutput)
}

func (o NodePoolNodeConfigPtrOutput) BootDiskKmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.BootDiskKmsKey
	}).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) GuestAccelerators() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []NodePoolNodeConfigGuestAccelerator {
		if v == nil {
			return nil
		}
		return v.GuestAccelerators
	}).(NodePoolNodeConfigGuestAcceleratorArrayOutput)
}

func (o NodePoolNodeConfigPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) KubeletConfig() NodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigKubeletConfig {
		if v == nil {
			return nil
		}
		return v.KubeletConfig
	}).(NodePoolNodeConfigKubeletConfigPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigPtrOutput) LinuxNodeConfig() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigLinuxNodeConfig {
		if v == nil {
			return nil
		}
		return v.LinuxNodeConfig
	}).(NodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) LocalSsdCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *int {
		if v == nil {
			return nil
		}
		return v.LocalSsdCount
	}).(pulumi.IntPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) MachineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MachineType
	}).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

func (o NodePoolNodeConfigPtrOutput) MinCpuPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinCpuPlatform
	}).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Preemptible
	}).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) SandboxConfig() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigSandboxConfig {
		if v == nil {
			return nil
		}
		return v.SandboxConfig
	}).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) ServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) ShieldedInstanceConfig() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigShieldedInstanceConfig {
		if v == nil {
			return nil
		}
		return v.ShieldedInstanceConfig
	}).(NodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

func (o NodePoolNodeConfigPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

func (o NodePoolNodeConfigPtrOutput) Taints() NodePoolNodeConfigTaintArrayOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) []NodePoolNodeConfigTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(NodePoolNodeConfigTaintArrayOutput)
}

func (o NodePoolNodeConfigPtrOutput) WorkloadMetadataConfig() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfig) *NodePoolNodeConfigWorkloadMetadataConfig {
		if v == nil {
			return nil
		}
		return v.WorkloadMetadataConfig
	}).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigGuestAccelerator struct {
	Count int    `pulumi:"count"`
	Type  string `pulumi:"type"`
}

// NodePoolNodeConfigGuestAcceleratorInput is an input type that accepts NodePoolNodeConfigGuestAcceleratorArgs and NodePoolNodeConfigGuestAcceleratorOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGuestAcceleratorInput` via:
//
//          NodePoolNodeConfigGuestAcceleratorArgs{...}
type NodePoolNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorOutput() NodePoolNodeConfigGuestAcceleratorOutput
	ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorOutput
}

type NodePoolNodeConfigGuestAcceleratorArgs struct {
	Count pulumi.IntInput    `pulumi:"count"`
	Type  pulumi.StringInput `pulumi:"type"`
}

func (NodePoolNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorArgs) ToNodePoolNodeConfigGuestAcceleratorOutput() NodePoolNodeConfigGuestAcceleratorOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorArgs) ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorOutput)
}

// NodePoolNodeConfigGuestAcceleratorArrayInput is an input type that accepts NodePoolNodeConfigGuestAcceleratorArray and NodePoolNodeConfigGuestAcceleratorArrayOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigGuestAcceleratorArrayInput` via:
//
//          NodePoolNodeConfigGuestAcceleratorArray{ NodePoolNodeConfigGuestAcceleratorArgs{...} }
type NodePoolNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigGuestAcceleratorArrayOutput() NodePoolNodeConfigGuestAcceleratorArrayOutput
	ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) NodePoolNodeConfigGuestAcceleratorArrayOutput
}

type NodePoolNodeConfigGuestAcceleratorArray []NodePoolNodeConfigGuestAcceleratorInput

func (NodePoolNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i NodePoolNodeConfigGuestAcceleratorArray) ToNodePoolNodeConfigGuestAcceleratorArrayOutput() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return i.ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigGuestAcceleratorArray) ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigGuestAcceleratorArrayOutput)
}

type NodePoolNodeConfigGuestAcceleratorOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) ToNodePoolNodeConfigGuestAcceleratorOutput() NodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) ToNodePoolNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

func (o NodePoolNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type NodePoolNodeConfigGuestAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o NodePoolNodeConfigGuestAcceleratorArrayOutput) ToNodePoolNodeConfigGuestAcceleratorArrayOutput() NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArrayOutput) ToNodePoolNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o NodePoolNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigGuestAccelerator {
		return vs[0].([]NodePoolNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(NodePoolNodeConfigGuestAcceleratorOutput)
}

type NodePoolNodeConfigKubeletConfig struct {
	CpuCfsQuota       *bool   `pulumi:"cpuCfsQuota"`
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	CpuManagerPolicy  string  `pulumi:"cpuManagerPolicy"`
}

// NodePoolNodeConfigKubeletConfigInput is an input type that accepts NodePoolNodeConfigKubeletConfigArgs and NodePoolNodeConfigKubeletConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigKubeletConfigInput` via:
//
//          NodePoolNodeConfigKubeletConfigArgs{...}
type NodePoolNodeConfigKubeletConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigKubeletConfigOutput() NodePoolNodeConfigKubeletConfigOutput
	ToNodePoolNodeConfigKubeletConfigOutputWithContext(context.Context) NodePoolNodeConfigKubeletConfigOutput
}

type NodePoolNodeConfigKubeletConfigArgs struct {
	CpuCfsQuota       pulumi.BoolPtrInput   `pulumi:"cpuCfsQuota"`
	CpuCfsQuotaPeriod pulumi.StringPtrInput `pulumi:"cpuCfsQuotaPeriod"`
	CpuManagerPolicy  pulumi.StringInput    `pulumi:"cpuManagerPolicy"`
}

func (NodePoolNodeConfigKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigKubeletConfigArgs) ToNodePoolNodeConfigKubeletConfigOutput() NodePoolNodeConfigKubeletConfigOutput {
	return i.ToNodePoolNodeConfigKubeletConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigKubeletConfigArgs) ToNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigKubeletConfigOutput)
}

func (i NodePoolNodeConfigKubeletConfigArgs) ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput {
	return i.ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigKubeletConfigArgs) ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigKubeletConfigOutput).ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigKubeletConfigPtrInput is an input type that accepts NodePoolNodeConfigKubeletConfigArgs, NodePoolNodeConfigKubeletConfigPtr and NodePoolNodeConfigKubeletConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigKubeletConfigPtrInput` via:
//
//          NodePoolNodeConfigKubeletConfigArgs{...}
//
//  or:
//
//          nil
type NodePoolNodeConfigKubeletConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput
	ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigKubeletConfigPtrOutput
}

type nodePoolNodeConfigKubeletConfigPtrType NodePoolNodeConfigKubeletConfigArgs

func NodePoolNodeConfigKubeletConfigPtr(v *NodePoolNodeConfigKubeletConfigArgs) NodePoolNodeConfigKubeletConfigPtrInput {
	return (*nodePoolNodeConfigKubeletConfigPtrType)(v)
}

func (*nodePoolNodeConfigKubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigKubeletConfigPtrType) ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput {
	return i.ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigKubeletConfigPtrType) ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigKubeletConfigPtrOutput)
}

type NodePoolNodeConfigKubeletConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigKubeletConfigOutput) ToNodePoolNodeConfigKubeletConfigOutput() NodePoolNodeConfigKubeletConfigOutput {
	return o
}

func (o NodePoolNodeConfigKubeletConfigOutput) ToNodePoolNodeConfigKubeletConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigOutput {
	return o
}

func (o NodePoolNodeConfigKubeletConfigOutput) ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigKubeletConfigOutput) ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigKubeletConfig) *NodePoolNodeConfigKubeletConfig {
		return &v
	}).(NodePoolNodeConfigKubeletConfigPtrOutput)
}
func (o NodePoolNodeConfigKubeletConfigOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigKubeletConfig) *bool { return v.CpuCfsQuota }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigKubeletConfig) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigKubeletConfigOutput) CpuManagerPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigKubeletConfig) string { return v.CpuManagerPolicy }).(pulumi.StringOutput)
}

type NodePoolNodeConfigKubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigKubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigKubeletConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigKubeletConfigPtrOutput) ToNodePoolNodeConfigKubeletConfigPtrOutput() NodePoolNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigKubeletConfigPtrOutput) ToNodePoolNodeConfigKubeletConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigKubeletConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigKubeletConfigPtrOutput) Elem() NodePoolNodeConfigKubeletConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigKubeletConfig) NodePoolNodeConfigKubeletConfig { return *v }).(NodePoolNodeConfigKubeletConfigOutput)
}

func (o NodePoolNodeConfigKubeletConfigPtrOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigKubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuota
	}).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigKubeletConfigPtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

func (o NodePoolNodeConfigKubeletConfigPtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigLinuxNodeConfig struct {
	Sysctls map[string]string `pulumi:"sysctls"`
}

// NodePoolNodeConfigLinuxNodeConfigInput is an input type that accepts NodePoolNodeConfigLinuxNodeConfigArgs and NodePoolNodeConfigLinuxNodeConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigLinuxNodeConfigInput` via:
//
//          NodePoolNodeConfigLinuxNodeConfigArgs{...}
type NodePoolNodeConfigLinuxNodeConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigLinuxNodeConfigOutput() NodePoolNodeConfigLinuxNodeConfigOutput
	ToNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Context) NodePoolNodeConfigLinuxNodeConfigOutput
}

type NodePoolNodeConfigLinuxNodeConfigArgs struct {
	Sysctls pulumi.StringMapInput `pulumi:"sysctls"`
}

func (NodePoolNodeConfigLinuxNodeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigLinuxNodeConfigArgs) ToNodePoolNodeConfigLinuxNodeConfigOutput() NodePoolNodeConfigLinuxNodeConfigOutput {
	return i.ToNodePoolNodeConfigLinuxNodeConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigLinuxNodeConfigArgs) ToNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigLinuxNodeConfigOutput)
}

func (i NodePoolNodeConfigLinuxNodeConfigArgs) ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigLinuxNodeConfigArgs) ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigLinuxNodeConfigOutput).ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigLinuxNodeConfigPtrInput is an input type that accepts NodePoolNodeConfigLinuxNodeConfigArgs, NodePoolNodeConfigLinuxNodeConfigPtr and NodePoolNodeConfigLinuxNodeConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigLinuxNodeConfigPtrInput` via:
//
//          NodePoolNodeConfigLinuxNodeConfigArgs{...}
//
//  or:
//
//          nil
type NodePoolNodeConfigLinuxNodeConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput
	ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput
}

type nodePoolNodeConfigLinuxNodeConfigPtrType NodePoolNodeConfigLinuxNodeConfigArgs

func NodePoolNodeConfigLinuxNodeConfigPtr(v *NodePoolNodeConfigLinuxNodeConfigArgs) NodePoolNodeConfigLinuxNodeConfigPtrInput {
	return (*nodePoolNodeConfigLinuxNodeConfigPtrType)(v)
}

func (*nodePoolNodeConfigLinuxNodeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigLinuxNodeConfigPtrType) ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return i.ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigLinuxNodeConfigPtrType) ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigLinuxNodeConfigPtrOutput)
}

type NodePoolNodeConfigLinuxNodeConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigLinuxNodeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigLinuxNodeConfigOutput) ToNodePoolNodeConfigLinuxNodeConfigOutput() NodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigLinuxNodeConfigOutput) ToNodePoolNodeConfigLinuxNodeConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigOutput {
	return o
}

func (o NodePoolNodeConfigLinuxNodeConfigOutput) ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigLinuxNodeConfigOutput) ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigLinuxNodeConfig) *NodePoolNodeConfigLinuxNodeConfig {
		return &v
	}).(NodePoolNodeConfigLinuxNodeConfigPtrOutput)
}
func (o NodePoolNodeConfigLinuxNodeConfigOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodePoolNodeConfigLinuxNodeConfig) map[string]string { return v.Sysctls }).(pulumi.StringMapOutput)
}

type NodePoolNodeConfigLinuxNodeConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigLinuxNodeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigLinuxNodeConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigLinuxNodeConfigPtrOutput) ToNodePoolNodeConfigLinuxNodeConfigPtrOutput() NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigLinuxNodeConfigPtrOutput) ToNodePoolNodeConfigLinuxNodeConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigLinuxNodeConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigLinuxNodeConfigPtrOutput) Elem() NodePoolNodeConfigLinuxNodeConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigLinuxNodeConfig) NodePoolNodeConfigLinuxNodeConfig { return *v }).(NodePoolNodeConfigLinuxNodeConfigOutput)
}

func (o NodePoolNodeConfigLinuxNodeConfigPtrOutput) Sysctls() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigLinuxNodeConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(pulumi.StringMapOutput)
}

type NodePoolNodeConfigSandboxConfig struct {
	SandboxType string `pulumi:"sandboxType"`
}

// NodePoolNodeConfigSandboxConfigInput is an input type that accepts NodePoolNodeConfigSandboxConfigArgs and NodePoolNodeConfigSandboxConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSandboxConfigInput` via:
//
//          NodePoolNodeConfigSandboxConfigArgs{...}
type NodePoolNodeConfigSandboxConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSandboxConfigOutput() NodePoolNodeConfigSandboxConfigOutput
	ToNodePoolNodeConfigSandboxConfigOutputWithContext(context.Context) NodePoolNodeConfigSandboxConfigOutput
}

type NodePoolNodeConfigSandboxConfigArgs struct {
	SandboxType pulumi.StringInput `pulumi:"sandboxType"`
}

func (NodePoolNodeConfigSandboxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigOutput() NodePoolNodeConfigSandboxConfigOutput {
	return i.ToNodePoolNodeConfigSandboxConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigOutput)
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigSandboxConfigArgs) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigOutput).ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigSandboxConfigPtrInput is an input type that accepts NodePoolNodeConfigSandboxConfigArgs, NodePoolNodeConfigSandboxConfigPtr and NodePoolNodeConfigSandboxConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigSandboxConfigPtrInput` via:
//
//          NodePoolNodeConfigSandboxConfigArgs{...}
//
//  or:
//
//          nil
type NodePoolNodeConfigSandboxConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput
	ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigSandboxConfigPtrOutput
}

type nodePoolNodeConfigSandboxConfigPtrType NodePoolNodeConfigSandboxConfigArgs

func NodePoolNodeConfigSandboxConfigPtr(v *NodePoolNodeConfigSandboxConfigArgs) NodePoolNodeConfigSandboxConfigPtrInput {
	return (*nodePoolNodeConfigSandboxConfigPtrType)(v)
}

func (*nodePoolNodeConfigSandboxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigSandboxConfigPtrType) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return i.ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigSandboxConfigPtrType) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigSandboxConfigPtrOutput)
}

type NodePoolNodeConfigSandboxConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSandboxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigOutput() NodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigSandboxConfigOutput) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSandboxConfig) *NodePoolNodeConfigSandboxConfig {
		return &v
	}).(NodePoolNodeConfigSandboxConfigPtrOutput)
}
func (o NodePoolNodeConfigSandboxConfigOutput) SandboxType() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigSandboxConfig) string { return v.SandboxType }).(pulumi.StringOutput)
}

type NodePoolNodeConfigSandboxConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigSandboxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigSandboxConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) ToNodePoolNodeConfigSandboxConfigPtrOutput() NodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) ToNodePoolNodeConfigSandboxConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigSandboxConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) Elem() NodePoolNodeConfigSandboxConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigSandboxConfig) NodePoolNodeConfigSandboxConfig { return *v }).(NodePoolNodeConfigSandboxConfigOutput)
}

func (o NodePoolNodeConfigSandboxConfigPtrOutput) SandboxType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigSandboxConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SandboxType
	}).(pulumi.StringPtrOutput)
}

type NodePoolNodeConfigShieldedInstanceConfig struct {
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          *bool `pulumi:"enableSecureBoot"`
}

// NodePoolNodeConfigShieldedInstanceConfigInput is an input type that accepts NodePoolNodeConfigShieldedInstanceConfigArgs and NodePoolNodeConfigShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigShieldedInstanceConfigInput` via:
//
//          NodePoolNodeConfigShieldedInstanceConfigArgs{...}
type NodePoolNodeConfigShieldedInstanceConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigShieldedInstanceConfigOutput() NodePoolNodeConfigShieldedInstanceConfigOutput
	ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Context) NodePoolNodeConfigShieldedInstanceConfigOutput
}

type NodePoolNodeConfigShieldedInstanceConfigArgs struct {
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
}

func (NodePoolNodeConfigShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigOutput() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigOutput)
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigShieldedInstanceConfigArgs) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigOutput).ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigShieldedInstanceConfigPtrInput is an input type that accepts NodePoolNodeConfigShieldedInstanceConfigArgs, NodePoolNodeConfigShieldedInstanceConfigPtr and NodePoolNodeConfigShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigShieldedInstanceConfigPtrInput` via:
//
//          NodePoolNodeConfigShieldedInstanceConfigArgs{...}
//
//  or:
//
//          nil
type NodePoolNodeConfigShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput
	ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput
}

type nodePoolNodeConfigShieldedInstanceConfigPtrType NodePoolNodeConfigShieldedInstanceConfigArgs

func NodePoolNodeConfigShieldedInstanceConfigPtr(v *NodePoolNodeConfigShieldedInstanceConfigArgs) NodePoolNodeConfigShieldedInstanceConfigPtrInput {
	return (*nodePoolNodeConfigShieldedInstanceConfigPtrType)(v)
}

func (*nodePoolNodeConfigShieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigShieldedInstanceConfigPtrType) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return i.ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigShieldedInstanceConfigPtrType) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}

type NodePoolNodeConfigShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigOutput() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfig) *NodePoolNodeConfigShieldedInstanceConfig {
		return &v
	}).(NodePoolNodeConfigShieldedInstanceConfigPtrOutput)
}
func (o NodePoolNodeConfigShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigShieldedInstanceConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutput() NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) ToNodePoolNodeConfigShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigShieldedInstanceConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) Elem() NodePoolNodeConfigShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigShieldedInstanceConfig) NodePoolNodeConfigShieldedInstanceConfig { return *v }).(NodePoolNodeConfigShieldedInstanceConfigOutput)
}

func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

func (o NodePoolNodeConfigShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

type NodePoolNodeConfigTaint struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

// NodePoolNodeConfigTaintInput is an input type that accepts NodePoolNodeConfigTaintArgs and NodePoolNodeConfigTaintOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigTaintInput` via:
//
//          NodePoolNodeConfigTaintArgs{...}
type NodePoolNodeConfigTaintInput interface {
	pulumi.Input

	ToNodePoolNodeConfigTaintOutput() NodePoolNodeConfigTaintOutput
	ToNodePoolNodeConfigTaintOutputWithContext(context.Context) NodePoolNodeConfigTaintOutput
}

type NodePoolNodeConfigTaintArgs struct {
	Effect pulumi.StringInput `pulumi:"effect"`
	Key    pulumi.StringInput `pulumi:"key"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (NodePoolNodeConfigTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigTaintArgs) ToNodePoolNodeConfigTaintOutput() NodePoolNodeConfigTaintOutput {
	return i.ToNodePoolNodeConfigTaintOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigTaintArgs) ToNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigTaintOutput)
}

// NodePoolNodeConfigTaintArrayInput is an input type that accepts NodePoolNodeConfigTaintArray and NodePoolNodeConfigTaintArrayOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigTaintArrayInput` via:
//
//          NodePoolNodeConfigTaintArray{ NodePoolNodeConfigTaintArgs{...} }
type NodePoolNodeConfigTaintArrayInput interface {
	pulumi.Input

	ToNodePoolNodeConfigTaintArrayOutput() NodePoolNodeConfigTaintArrayOutput
	ToNodePoolNodeConfigTaintArrayOutputWithContext(context.Context) NodePoolNodeConfigTaintArrayOutput
}

type NodePoolNodeConfigTaintArray []NodePoolNodeConfigTaintInput

func (NodePoolNodeConfigTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigTaint)(nil)).Elem()
}

func (i NodePoolNodeConfigTaintArray) ToNodePoolNodeConfigTaintArrayOutput() NodePoolNodeConfigTaintArrayOutput {
	return i.ToNodePoolNodeConfigTaintArrayOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigTaintArray) ToNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigTaintArrayOutput)
}

type NodePoolNodeConfigTaintOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigTaintOutput) ToNodePoolNodeConfigTaintOutput() NodePoolNodeConfigTaintOutput {
	return o
}

func (o NodePoolNodeConfigTaintOutput) ToNodePoolNodeConfigTaintOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintOutput {
	return o
}

func (o NodePoolNodeConfigTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaint) string { return v.Effect }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaint) string { return v.Key }).(pulumi.StringOutput)
}

func (o NodePoolNodeConfigTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigTaint) string { return v.Value }).(pulumi.StringOutput)
}

type NodePoolNodeConfigTaintArrayOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodePoolNodeConfigTaint)(nil)).Elem()
}

func (o NodePoolNodeConfigTaintArrayOutput) ToNodePoolNodeConfigTaintArrayOutput() NodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigTaintArrayOutput) ToNodePoolNodeConfigTaintArrayOutputWithContext(ctx context.Context) NodePoolNodeConfigTaintArrayOutput {
	return o
}

func (o NodePoolNodeConfigTaintArrayOutput) Index(i pulumi.IntInput) NodePoolNodeConfigTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodePoolNodeConfigTaint {
		return vs[0].([]NodePoolNodeConfigTaint)[vs[1].(int)]
	}).(NodePoolNodeConfigTaintOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfig struct {
	NodeMetadata string `pulumi:"nodeMetadata"`
}

// NodePoolNodeConfigWorkloadMetadataConfigInput is an input type that accepts NodePoolNodeConfigWorkloadMetadataConfigArgs and NodePoolNodeConfigWorkloadMetadataConfigOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigWorkloadMetadataConfigInput` via:
//
//          NodePoolNodeConfigWorkloadMetadataConfigArgs{...}
type NodePoolNodeConfigWorkloadMetadataConfigInput interface {
	pulumi.Input

	ToNodePoolNodeConfigWorkloadMetadataConfigOutput() NodePoolNodeConfigWorkloadMetadataConfigOutput
	ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Context) NodePoolNodeConfigWorkloadMetadataConfigOutput
}

type NodePoolNodeConfigWorkloadMetadataConfigArgs struct {
	NodeMetadata pulumi.StringInput `pulumi:"nodeMetadata"`
}

func (NodePoolNodeConfigWorkloadMetadataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigOutput() NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigOutput)
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i NodePoolNodeConfigWorkloadMetadataConfigArgs) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigOutput).ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx)
}

// NodePoolNodeConfigWorkloadMetadataConfigPtrInput is an input type that accepts NodePoolNodeConfigWorkloadMetadataConfigArgs, NodePoolNodeConfigWorkloadMetadataConfigPtr and NodePoolNodeConfigWorkloadMetadataConfigPtrOutput values.
// You can construct a concrete instance of `NodePoolNodeConfigWorkloadMetadataConfigPtrInput` via:
//
//          NodePoolNodeConfigWorkloadMetadataConfigArgs{...}
//
//  or:
//
//          nil
type NodePoolNodeConfigWorkloadMetadataConfigPtrInput interface {
	pulumi.Input

	ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput
	ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput
}

type nodePoolNodeConfigWorkloadMetadataConfigPtrType NodePoolNodeConfigWorkloadMetadataConfigArgs

func NodePoolNodeConfigWorkloadMetadataConfigPtr(v *NodePoolNodeConfigWorkloadMetadataConfigArgs) NodePoolNodeConfigWorkloadMetadataConfigPtrInput {
	return (*nodePoolNodeConfigWorkloadMetadataConfigPtrType)(v)
}

func (*nodePoolNodeConfigWorkloadMetadataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (i *nodePoolNodeConfigWorkloadMetadataConfigPtrType) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return i.ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (i *nodePoolNodeConfigWorkloadMetadataConfigPtrType) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfigOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigWorkloadMetadataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigOutput() NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(context.Background())
}

func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o.ApplyT(func(v NodePoolNodeConfigWorkloadMetadataConfig) *NodePoolNodeConfigWorkloadMetadataConfig {
		return &v
	}).(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput)
}
func (o NodePoolNodeConfigWorkloadMetadataConfigOutput) NodeMetadata() pulumi.StringOutput {
	return o.ApplyT(func(v NodePoolNodeConfigWorkloadMetadataConfig) string { return v.NodeMetadata }).(pulumi.StringOutput)
}

type NodePoolNodeConfigWorkloadMetadataConfigPtrOutput struct{ *pulumi.OutputState }

func (NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolNodeConfigWorkloadMetadataConfig)(nil)).Elem()
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutput() NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) ToNodePoolNodeConfigWorkloadMetadataConfigPtrOutputWithContext(ctx context.Context) NodePoolNodeConfigWorkloadMetadataConfigPtrOutput {
	return o
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) Elem() NodePoolNodeConfigWorkloadMetadataConfigOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigWorkloadMetadataConfig) NodePoolNodeConfigWorkloadMetadataConfig { return *v }).(NodePoolNodeConfigWorkloadMetadataConfigOutput)
}

func (o NodePoolNodeConfigWorkloadMetadataConfigPtrOutput) NodeMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePoolNodeConfigWorkloadMetadataConfig) *string {
		if v == nil {
			return nil
		}
		return &v.NodeMetadata
	}).(pulumi.StringPtrOutput)
}

type NodePoolUpgradeSettings struct {
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge int `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

// NodePoolUpgradeSettingsInput is an input type that accepts NodePoolUpgradeSettingsArgs and NodePoolUpgradeSettingsOutput values.
// You can construct a concrete instance of `NodePoolUpgradeSettingsInput` via:
//
//          NodePoolUpgradeSettingsArgs{...}
type NodePoolUpgradeSettingsInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsOutput() NodePoolUpgradeSettingsOutput
	ToNodePoolUpgradeSettingsOutputWithContext(context.Context) NodePoolUpgradeSettingsOutput
}

type NodePoolUpgradeSettingsArgs struct {
	// The number of additional nodes that can be added to the node pool during
	// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
	// Can be set to 0 or greater.
	MaxSurge pulumi.IntInput `pulumi:"maxSurge"`
	// The number of nodes that can be simultaneously unavailable during
	// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
	// parallel. Can be set to 0 or greater.
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (NodePoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettings)(nil)).Elem()
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsOutput() NodePoolUpgradeSettingsOutput {
	return i.ToNodePoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsOutput)
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return i.ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i NodePoolUpgradeSettingsArgs) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsOutput).ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx)
}

// NodePoolUpgradeSettingsPtrInput is an input type that accepts NodePoolUpgradeSettingsArgs, NodePoolUpgradeSettingsPtr and NodePoolUpgradeSettingsPtrOutput values.
// You can construct a concrete instance of `NodePoolUpgradeSettingsPtrInput` via:
//
//          NodePoolUpgradeSettingsArgs{...}
//
//  or:
//
//          nil
type NodePoolUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput
	ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Context) NodePoolUpgradeSettingsPtrOutput
}

type nodePoolUpgradeSettingsPtrType NodePoolUpgradeSettingsArgs

func NodePoolUpgradeSettingsPtr(v *NodePoolUpgradeSettingsArgs) NodePoolUpgradeSettingsPtrInput {
	return (*nodePoolUpgradeSettingsPtrType)(v)
}

func (*nodePoolUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettings)(nil)).Elem()
}

func (i *nodePoolUpgradeSettingsPtrType) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return i.ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *nodePoolUpgradeSettingsPtrType) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolUpgradeSettingsPtrOutput)
}

type NodePoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodePoolUpgradeSettings)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsOutput() NodePoolUpgradeSettingsOutput {
	return o
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsOutput {
	return o
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return o.ToNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o NodePoolUpgradeSettingsOutput) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) *NodePoolUpgradeSettings {
		return &v
	}).(NodePoolUpgradeSettingsPtrOutput)
}

// The number of additional nodes that can be added to the node pool during
// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
// Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The number of nodes that can be simultaneously unavailable during
// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
// parallel. Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v NodePoolUpgradeSettings) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type NodePoolUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (NodePoolUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePoolUpgradeSettings)(nil)).Elem()
}

func (o NodePoolUpgradeSettingsPtrOutput) ToNodePoolUpgradeSettingsPtrOutput() NodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsPtrOutput) ToNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) NodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o NodePoolUpgradeSettingsPtrOutput) Elem() NodePoolUpgradeSettingsOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettings) NodePoolUpgradeSettings { return *v }).(NodePoolUpgradeSettingsOutput)
}

// The number of additional nodes that can be added to the node pool during
// an upgrade. Increasing `maxSurge` raises the number of nodes that can be upgraded simultaneously.
// Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

// The number of nodes that can be simultaneously unavailable during
// an upgrade. Increasing `maxUnavailable` raises the number of nodes that can be upgraded in
// parallel. Can be set to 0 or greater.
func (o NodePoolUpgradeSettingsPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePoolUpgradeSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

type GetClusterAddonsConfig struct {
	CloudrunConfigs                   []GetClusterAddonsConfigCloudrunConfig                   `pulumi:"cloudrunConfigs"`
	ConfigConnectorConfigs            []GetClusterAddonsConfigConfigConnectorConfig            `pulumi:"configConnectorConfigs"`
	DnsCacheConfigs                   []GetClusterAddonsConfigDnsCacheConfig                   `pulumi:"dnsCacheConfigs"`
	GcePersistentDiskCsiDriverConfigs []GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig `pulumi:"gcePersistentDiskCsiDriverConfigs"`
	HorizontalPodAutoscalings         []GetClusterAddonsConfigHorizontalPodAutoscaling         `pulumi:"horizontalPodAutoscalings"`
	HttpLoadBalancings                []GetClusterAddonsConfigHttpLoadBalancing                `pulumi:"httpLoadBalancings"`
	IstioConfigs                      []GetClusterAddonsConfigIstioConfig                      `pulumi:"istioConfigs"`
	KalmConfigs                       []GetClusterAddonsConfigKalmConfig                       `pulumi:"kalmConfigs"`
	KubernetesDashboards              []GetClusterAddonsConfigKubernetesDashboard              `pulumi:"kubernetesDashboards"`
	NetworkPolicyConfigs              []GetClusterAddonsConfigNetworkPolicyConfig              `pulumi:"networkPolicyConfigs"`
}

type GetClusterAddonsConfigCloudrunConfig struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAddonsConfigConfigConnectorConfig struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterAddonsConfigDnsCacheConfig struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterAddonsConfigGcePersistentDiskCsiDriverConfig struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterAddonsConfigHorizontalPodAutoscaling struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAddonsConfigHttpLoadBalancing struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAddonsConfigIstioConfig struct {
	Auth     string `pulumi:"auth"`
	Disabled bool   `pulumi:"disabled"`
}

type GetClusterAddonsConfigKalmConfig struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterAddonsConfigKubernetesDashboard struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAddonsConfigNetworkPolicyConfig struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterAuthenticatorGroupsConfig struct {
	SecurityGroup string `pulumi:"securityGroup"`
}

type GetClusterClusterAutoscaling struct {
	AutoProvisioningDefaults []GetClusterClusterAutoscalingAutoProvisioningDefault `pulumi:"autoProvisioningDefaults"`
	AutoscalingProfile       string                                                `pulumi:"autoscalingProfile"`
	Enabled                  bool                                                  `pulumi:"enabled"`
	ResourceLimits           []GetClusterClusterAutoscalingResourceLimit           `pulumi:"resourceLimits"`
}

type GetClusterClusterAutoscalingAutoProvisioningDefault struct {
	MinCpuPlatform string   `pulumi:"minCpuPlatform"`
	OauthScopes    []string `pulumi:"oauthScopes"`
	ServiceAccount string   `pulumi:"serviceAccount"`
}

type GetClusterClusterAutoscalingResourceLimit struct {
	Maximum      int    `pulumi:"maximum"`
	Minimum      int    `pulumi:"minimum"`
	ResourceType string `pulumi:"resourceType"`
}

type GetClusterClusterTelemetry struct {
	Type string `pulumi:"type"`
}

type GetClusterDatabaseEncryption struct {
	KeyName string `pulumi:"keyName"`
	State   string `pulumi:"state"`
}

type GetClusterDefaultSnatStatus struct {
	Disabled bool `pulumi:"disabled"`
}

type GetClusterIpAllocationPolicy struct {
	ClusterIpv4CidrBlock       string `pulumi:"clusterIpv4CidrBlock"`
	ClusterSecondaryRangeName  string `pulumi:"clusterSecondaryRangeName"`
	NodeIpv4CidrBlock          string `pulumi:"nodeIpv4CidrBlock"`
	ServicesIpv4CidrBlock      string `pulumi:"servicesIpv4CidrBlock"`
	ServicesSecondaryRangeName string `pulumi:"servicesSecondaryRangeName"`
	SubnetworkName             string `pulumi:"subnetworkName"`
}

type GetClusterMaintenancePolicy struct {
	DailyMaintenanceWindows []GetClusterMaintenancePolicyDailyMaintenanceWindow `pulumi:"dailyMaintenanceWindows"`
	RecurringWindows        []GetClusterMaintenancePolicyRecurringWindow        `pulumi:"recurringWindows"`
}

type GetClusterMaintenancePolicyDailyMaintenanceWindow struct {
	Duration  string `pulumi:"duration"`
	StartTime string `pulumi:"startTime"`
}

type GetClusterMaintenancePolicyRecurringWindow struct {
	EndTime    string `pulumi:"endTime"`
	Recurrence string `pulumi:"recurrence"`
	StartTime  string `pulumi:"startTime"`
}

type GetClusterMasterAuth struct {
	ClientCertificate        string                                        `pulumi:"clientCertificate"`
	ClientCertificateConfigs []GetClusterMasterAuthClientCertificateConfig `pulumi:"clientCertificateConfigs"`
	ClientKey                string                                        `pulumi:"clientKey"`
	ClusterCaCertificate     string                                        `pulumi:"clusterCaCertificate"`
	Password                 string                                        `pulumi:"password"`
	Username                 string                                        `pulumi:"username"`
}

type GetClusterMasterAuthClientCertificateConfig struct {
	IssueClientCertificate bool `pulumi:"issueClientCertificate"`
}

type GetClusterMasterAuthorizedNetworksConfig struct {
	CidrBlocks []GetClusterMasterAuthorizedNetworksConfigCidrBlock `pulumi:"cidrBlocks"`
}

type GetClusterMasterAuthorizedNetworksConfigCidrBlock struct {
	CidrBlock   string `pulumi:"cidrBlock"`
	DisplayName string `pulumi:"displayName"`
}

type GetClusterNetworkPolicy struct {
	Enabled  bool   `pulumi:"enabled"`
	Provider string `pulumi:"provider"`
}

type GetClusterNodeConfig struct {
	BootDiskKmsKey          string                                       `pulumi:"bootDiskKmsKey"`
	DiskSizeGb              int                                          `pulumi:"diskSizeGb"`
	DiskType                string                                       `pulumi:"diskType"`
	GuestAccelerators       []GetClusterNodeConfigGuestAccelerator       `pulumi:"guestAccelerators"`
	ImageType               string                                       `pulumi:"imageType"`
	KubeletConfigs          []GetClusterNodeConfigKubeletConfig          `pulumi:"kubeletConfigs"`
	Labels                  map[string]string                            `pulumi:"labels"`
	LinuxNodeConfigs        []GetClusterNodeConfigLinuxNodeConfig        `pulumi:"linuxNodeConfigs"`
	LocalSsdCount           int                                          `pulumi:"localSsdCount"`
	MachineType             string                                       `pulumi:"machineType"`
	Metadata                map[string]string                            `pulumi:"metadata"`
	MinCpuPlatform          string                                       `pulumi:"minCpuPlatform"`
	OauthScopes             []string                                     `pulumi:"oauthScopes"`
	Preemptible             bool                                         `pulumi:"preemptible"`
	SandboxConfigs          []GetClusterNodeConfigSandboxConfig          `pulumi:"sandboxConfigs"`
	ServiceAccount          string                                       `pulumi:"serviceAccount"`
	ShieldedInstanceConfigs []GetClusterNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfigs"`
	Tags                    []string                                     `pulumi:"tags"`
	Taints                  []GetClusterNodeConfigTaint                  `pulumi:"taints"`
	WorkloadMetadataConfigs []GetClusterNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfigs"`
}

type GetClusterNodeConfigGuestAccelerator struct {
	Count int    `pulumi:"count"`
	Type  string `pulumi:"type"`
}

type GetClusterNodeConfigKubeletConfig struct {
	CpuCfsQuota       bool   `pulumi:"cpuCfsQuota"`
	CpuCfsQuotaPeriod string `pulumi:"cpuCfsQuotaPeriod"`
	CpuManagerPolicy  string `pulumi:"cpuManagerPolicy"`
}

type GetClusterNodeConfigLinuxNodeConfig struct {
	Sysctls map[string]string `pulumi:"sysctls"`
}

type GetClusterNodeConfigSandboxConfig struct {
	SandboxType string `pulumi:"sandboxType"`
}

type GetClusterNodeConfigShieldedInstanceConfig struct {
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          bool `pulumi:"enableSecureBoot"`
}

type GetClusterNodeConfigTaint struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

type GetClusterNodeConfigWorkloadMetadataConfig struct {
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type GetClusterNodePool struct {
	Autoscalings      []GetClusterNodePoolAutoscaling `pulumi:"autoscalings"`
	InitialNodeCount  int                             `pulumi:"initialNodeCount"`
	InstanceGroupUrls []string                        `pulumi:"instanceGroupUrls"`
	Managements       []GetClusterNodePoolManagement  `pulumi:"managements"`
	MaxPodsPerNode    int                             `pulumi:"maxPodsPerNode"`
	// The name of the cluster.
	Name            string                             `pulumi:"name"`
	NamePrefix      string                             `pulumi:"namePrefix"`
	NodeConfigs     []GetClusterNodePoolNodeConfig     `pulumi:"nodeConfigs"`
	NodeCount       int                                `pulumi:"nodeCount"`
	NodeLocations   []string                           `pulumi:"nodeLocations"`
	UpgradeSettings []GetClusterNodePoolUpgradeSetting `pulumi:"upgradeSettings"`
	Version         string                             `pulumi:"version"`
}

type GetClusterNodePoolAutoscaling struct {
	MaxNodeCount int `pulumi:"maxNodeCount"`
	MinNodeCount int `pulumi:"minNodeCount"`
}

type GetClusterNodePoolManagement struct {
	AutoRepair  bool `pulumi:"autoRepair"`
	AutoUpgrade bool `pulumi:"autoUpgrade"`
}

type GetClusterNodePoolNodeConfig struct {
	BootDiskKmsKey          string                                               `pulumi:"bootDiskKmsKey"`
	DiskSizeGb              int                                                  `pulumi:"diskSizeGb"`
	DiskType                string                                               `pulumi:"diskType"`
	GuestAccelerators       []GetClusterNodePoolNodeConfigGuestAccelerator       `pulumi:"guestAccelerators"`
	ImageType               string                                               `pulumi:"imageType"`
	KubeletConfigs          []GetClusterNodePoolNodeConfigKubeletConfig          `pulumi:"kubeletConfigs"`
	Labels                  map[string]string                                    `pulumi:"labels"`
	LinuxNodeConfigs        []GetClusterNodePoolNodeConfigLinuxNodeConfig        `pulumi:"linuxNodeConfigs"`
	LocalSsdCount           int                                                  `pulumi:"localSsdCount"`
	MachineType             string                                               `pulumi:"machineType"`
	Metadata                map[string]string                                    `pulumi:"metadata"`
	MinCpuPlatform          string                                               `pulumi:"minCpuPlatform"`
	OauthScopes             []string                                             `pulumi:"oauthScopes"`
	Preemptible             bool                                                 `pulumi:"preemptible"`
	SandboxConfigs          []GetClusterNodePoolNodeConfigSandboxConfig          `pulumi:"sandboxConfigs"`
	ServiceAccount          string                                               `pulumi:"serviceAccount"`
	ShieldedInstanceConfigs []GetClusterNodePoolNodeConfigShieldedInstanceConfig `pulumi:"shieldedInstanceConfigs"`
	Tags                    []string                                             `pulumi:"tags"`
	Taints                  []GetClusterNodePoolNodeConfigTaint                  `pulumi:"taints"`
	WorkloadMetadataConfigs []GetClusterNodePoolNodeConfigWorkloadMetadataConfig `pulumi:"workloadMetadataConfigs"`
}

type GetClusterNodePoolNodeConfigGuestAccelerator struct {
	Count int    `pulumi:"count"`
	Type  string `pulumi:"type"`
}

type GetClusterNodePoolNodeConfigKubeletConfig struct {
	CpuCfsQuota       bool   `pulumi:"cpuCfsQuota"`
	CpuCfsQuotaPeriod string `pulumi:"cpuCfsQuotaPeriod"`
	CpuManagerPolicy  string `pulumi:"cpuManagerPolicy"`
}

type GetClusterNodePoolNodeConfigLinuxNodeConfig struct {
	Sysctls map[string]string `pulumi:"sysctls"`
}

type GetClusterNodePoolNodeConfigSandboxConfig struct {
	SandboxType string `pulumi:"sandboxType"`
}

type GetClusterNodePoolNodeConfigShieldedInstanceConfig struct {
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	EnableSecureBoot          bool `pulumi:"enableSecureBoot"`
}

type GetClusterNodePoolNodeConfigTaint struct {
	Effect string `pulumi:"effect"`
	Key    string `pulumi:"key"`
	Value  string `pulumi:"value"`
}

type GetClusterNodePoolNodeConfigWorkloadMetadataConfig struct {
	NodeMetadata string `pulumi:"nodeMetadata"`
}

type GetClusterNodePoolUpgradeSetting struct {
	MaxSurge       int `pulumi:"maxSurge"`
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

type GetClusterPodSecurityPolicyConfig struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterPrivateClusterConfig struct {
	EnablePrivateEndpoint     bool                                                     `pulumi:"enablePrivateEndpoint"`
	EnablePrivateNodes        bool                                                     `pulumi:"enablePrivateNodes"`
	MasterGlobalAccessConfigs []GetClusterPrivateClusterConfigMasterGlobalAccessConfig `pulumi:"masterGlobalAccessConfigs"`
	MasterIpv4CidrBlock       string                                                   `pulumi:"masterIpv4CidrBlock"`
	PeeringName               string                                                   `pulumi:"peeringName"`
	PrivateEndpoint           string                                                   `pulumi:"privateEndpoint"`
	PublicEndpoint            string                                                   `pulumi:"publicEndpoint"`
}

type GetClusterPrivateClusterConfigMasterGlobalAccessConfig struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterReleaseChannel struct {
	Channel string `pulumi:"channel"`
}

type GetClusterResourceUsageExportConfig struct {
	BigqueryDestinations              []GetClusterResourceUsageExportConfigBigqueryDestination `pulumi:"bigqueryDestinations"`
	EnableNetworkEgressMetering       bool                                                     `pulumi:"enableNetworkEgressMetering"`
	EnableResourceConsumptionMetering bool                                                     `pulumi:"enableResourceConsumptionMetering"`
}

type GetClusterResourceUsageExportConfigBigqueryDestination struct {
	DatasetId string `pulumi:"datasetId"`
}

type GetClusterVerticalPodAutoscaling struct {
	Enabled bool `pulumi:"enabled"`
}

type GetClusterWorkloadIdentityConfig struct {
	IdentityNamespace string `pulumi:"identityNamespace"`
}

func init() {
	pulumi.RegisterOutputType(ClusterAddonsConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigCloudrunConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigCloudrunConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigConfigConnectorConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigConfigConnectorConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigDnsCacheConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigDnsCacheConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigGcePersistentDiskCsiDriverConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHorizontalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHorizontalPodAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHttpLoadBalancingOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigHttpLoadBalancingPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigIstioConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigIstioConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigKalmConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigKalmConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigNetworkPolicyConfigOutput{})
	pulumi.RegisterOutputType(ClusterAddonsConfigNetworkPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticatorGroupsConfigOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticatorGroupsConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingAutoProvisioningDefaultsPtrOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingResourceLimitOutput{})
	pulumi.RegisterOutputType(ClusterClusterAutoscalingResourceLimitArrayOutput{})
	pulumi.RegisterOutputType(ClusterClusterTelemetryOutput{})
	pulumi.RegisterOutputType(ClusterClusterTelemetryPtrOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseEncryptionOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ClusterDefaultSnatStatusOutput{})
	pulumi.RegisterOutputType(ClusterDefaultSnatStatusPtrOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyOutput{})
	pulumi.RegisterOutputType(ClusterIpAllocationPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyDailyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyDailyMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyRecurringWindowOutput{})
	pulumi.RegisterOutputType(ClusterMaintenancePolicyRecurringWindowPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthClientCertificateConfigOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthClientCertificateConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigCidrBlockOutput{})
	pulumi.RegisterOutputType(ClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPolicyOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigKubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigLinuxNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolManagementOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolManagementPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigKubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigLinuxNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyConfigOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigMasterGlobalAccessConfigOutput{})
	pulumi.RegisterOutputType(ClusterPrivateClusterConfigMasterGlobalAccessConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterReleaseChannelOutput{})
	pulumi.RegisterOutputType(ClusterReleaseChannelPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigBigqueryDestinationOutput{})
	pulumi.RegisterOutputType(ClusterResourceUsageExportConfigBigqueryDestinationPtrOutput{})
	pulumi.RegisterOutputType(ClusterVerticalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(ClusterVerticalPodAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadIdentityConfigOutput{})
	pulumi.RegisterOutputType(ClusterWorkloadIdentityConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(NodePoolAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(NodePoolManagementOutput{})
	pulumi.RegisterOutputType(NodePoolManagementPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigKubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigLinuxNodeConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigSandboxConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(NodePoolNodeConfigWorkloadMetadataConfigPtrOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(NodePoolUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigCloudrunConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigCloudrunConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigConfigConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigConfigConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigDnsCacheConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigDnsCacheConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigGcePersistentDiskCsiDriverConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHorizontalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHorizontalPodAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHttpLoadBalancingOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigHttpLoadBalancingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigIstioConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigIstioConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigKalmConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigKalmConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigKubernetesDashboardOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigKubernetesDashboardArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigNetworkPolicyConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAddonsConfigNetworkPolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAuthenticatorGroupsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAuthenticatorGroupsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingAutoProvisioningDefaultArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingResourceLimitOutput{})
	pulumi.RegisterOutputType(GetClusterClusterAutoscalingResourceLimitArrayOutput{})
	pulumi.RegisterOutputType(GetClusterClusterTelemetryOutput{})
	pulumi.RegisterOutputType(GetClusterClusterTelemetryArrayOutput{})
	pulumi.RegisterOutputType(GetClusterDatabaseEncryptionOutput{})
	pulumi.RegisterOutputType(GetClusterDatabaseEncryptionArrayOutput{})
	pulumi.RegisterOutputType(GetClusterDefaultSnatStatusOutput{})
	pulumi.RegisterOutputType(GetClusterDefaultSnatStatusArrayOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterIpAllocationPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyDailyMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyDailyMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyRecurringWindowOutput{})
	pulumi.RegisterOutputType(GetClusterMaintenancePolicyRecurringWindowArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthClientCertificateConfigOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthClientCertificateConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigCidrBlockOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthorizedNetworksConfigCidrBlockArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNetworkPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterNetworkPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigKubeletConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigLinuxNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigSandboxConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigShieldedInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodeConfigWorkloadMetadataConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolManagementOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolManagementArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigGuestAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigKubeletConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigKubeletConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigLinuxNodeConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigLinuxNodeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSandboxConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigSandboxConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigShieldedInstanceConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigTaintOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigTaintArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigWorkloadMetadataConfigOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolNodeConfigWorkloadMetadataConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPodSecurityPolicyConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPodSecurityPolicyConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigMasterGlobalAccessConfigOutput{})
	pulumi.RegisterOutputType(GetClusterPrivateClusterConfigMasterGlobalAccessConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReleaseChannelOutput{})
	pulumi.RegisterOutputType(GetClusterReleaseChannelArrayOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigBigqueryDestinationOutput{})
	pulumi.RegisterOutputType(GetClusterResourceUsageExportConfigBigqueryDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetClusterVerticalPodAutoscalingOutput{})
	pulumi.RegisterOutputType(GetClusterVerticalPodAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetClusterWorkloadIdentityConfigOutput{})
	pulumi.RegisterOutputType(GetClusterWorkloadIdentityConfigArrayOutput{})
}
