// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getClusterMasterAuth

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/container/getClusterMasterAuthClientCertificateConfig"
)

type GetClusterMasterAuth struct {
	ClientCertificate string `pulumi:"clientCertificate"`
	ClientCertificateConfigs []containergetClusterMasterAuthClientCertificateConfig.GetClusterMasterAuthClientCertificateConfig `pulumi:"clientCertificateConfigs"`
	ClientKey string `pulumi:"clientKey"`
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	Password string `pulumi:"password"`
	Username string `pulumi:"username"`
}

type GetClusterMasterAuthInput interface {
	pulumi.Input

	ToGetClusterMasterAuthOutput() GetClusterMasterAuthOutput
	ToGetClusterMasterAuthOutputWithContext(context.Context) GetClusterMasterAuthOutput
}

type GetClusterMasterAuthArgs struct {
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	ClientCertificateConfigs containergetClusterMasterAuthClientCertificateConfig.GetClusterMasterAuthClientCertificateConfigArrayInput `pulumi:"clientCertificateConfigs"`
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	Password pulumi.StringInput `pulumi:"password"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetClusterMasterAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuth)(nil)).Elem()
}

func (i GetClusterMasterAuthArgs) ToGetClusterMasterAuthOutput() GetClusterMasterAuthOutput {
	return i.ToGetClusterMasterAuthOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthArgs) ToGetClusterMasterAuthOutputWithContext(ctx context.Context) GetClusterMasterAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthOutput)
}

type GetClusterMasterAuthArrayInput interface {
	pulumi.Input

	ToGetClusterMasterAuthArrayOutput() GetClusterMasterAuthArrayOutput
	ToGetClusterMasterAuthArrayOutputWithContext(context.Context) GetClusterMasterAuthArrayOutput
}

type GetClusterMasterAuthArray []GetClusterMasterAuthInput

func (GetClusterMasterAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuth)(nil)).Elem()
}

func (i GetClusterMasterAuthArray) ToGetClusterMasterAuthArrayOutput() GetClusterMasterAuthArrayOutput {
	return i.ToGetClusterMasterAuthArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterAuthArray) ToGetClusterMasterAuthArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterAuthArrayOutput)
}

type GetClusterMasterAuthOutput struct { *pulumi.OutputState }

func (GetClusterMasterAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterAuth)(nil)).Elem()
}

func (o GetClusterMasterAuthOutput) ToGetClusterMasterAuthOutput() GetClusterMasterAuthOutput {
	return o
}

func (o GetClusterMasterAuthOutput) ToGetClusterMasterAuthOutputWithContext(ctx context.Context) GetClusterMasterAuthOutput {
	return o
}

func (o GetClusterMasterAuthOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func (v GetClusterMasterAuth) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

func (o GetClusterMasterAuthOutput) ClientCertificateConfigs() containergetClusterMasterAuthClientCertificateConfig.GetClusterMasterAuthClientCertificateConfigArrayOutput {
	return o.ApplyT(func (v GetClusterMasterAuth) []containergetClusterMasterAuthClientCertificateConfig.GetClusterMasterAuthClientCertificateConfig { return v.ClientCertificateConfigs }).(containergetClusterMasterAuthClientCertificateConfig.GetClusterMasterAuthClientCertificateConfigArrayOutput)
}

func (o GetClusterMasterAuthOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func (v GetClusterMasterAuth) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o GetClusterMasterAuthOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func (v GetClusterMasterAuth) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

func (o GetClusterMasterAuthOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func (v GetClusterMasterAuth) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetClusterMasterAuthOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func (v GetClusterMasterAuth) string { return v.Username }).(pulumi.StringOutput)
}

type GetClusterMasterAuthArrayOutput struct { *pulumi.OutputState}

func (GetClusterMasterAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterAuth)(nil)).Elem()
}

func (o GetClusterMasterAuthArrayOutput) ToGetClusterMasterAuthArrayOutput() GetClusterMasterAuthArrayOutput {
	return o
}

func (o GetClusterMasterAuthArrayOutput) ToGetClusterMasterAuthArrayOutputWithContext(ctx context.Context) GetClusterMasterAuthArrayOutput {
	return o
}

func (o GetClusterMasterAuthArrayOutput) Index(i pulumi.IntInput) GetClusterMasterAuthOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetClusterMasterAuth {
		return vs[0].([]GetClusterMasterAuth)[vs[1].(int)]
	}).(GetClusterMasterAuthOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterMasterAuthOutput{})
	pulumi.RegisterOutputType(GetClusterMasterAuthArrayOutput{})
}
