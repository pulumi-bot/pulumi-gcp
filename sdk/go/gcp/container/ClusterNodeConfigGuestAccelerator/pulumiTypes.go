// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ClusterNodeConfigGuestAccelerator

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ClusterNodeConfigGuestAccelerator struct {
	Count int `pulumi:"count"`
	Type string `pulumi:"type"`
}

type ClusterNodeConfigGuestAcceleratorInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput
	ToClusterNodeConfigGuestAcceleratorOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorOutput
}

type ClusterNodeConfigGuestAcceleratorArgs struct {
	Count pulumi.IntInput `pulumi:"count"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterNodeConfigGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArgs) ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput {
	return i.ToClusterNodeConfigGuestAcceleratorOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArgs) ToClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorOutput)
}

type ClusterNodeConfigGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput
	ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput
}

type ClusterNodeConfigGuestAcceleratorArray []ClusterNodeConfigGuestAcceleratorInput

func (ClusterNodeConfigGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (i ClusterNodeConfigGuestAcceleratorArray) ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return i.ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i ClusterNodeConfigGuestAcceleratorArray) ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeConfigGuestAcceleratorArrayOutput)
}

type ClusterNodeConfigGuestAcceleratorOutput struct { *pulumi.OutputState }

func (ClusterNodeConfigGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorOutput) ToClusterNodeConfigGuestAcceleratorOutput() ClusterNodeConfigGuestAcceleratorOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorOutput) ToClusterNodeConfigGuestAcceleratorOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func (v ClusterNodeConfigGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

func (o ClusterNodeConfigGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v ClusterNodeConfigGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterNodeConfigGuestAcceleratorArrayOutput struct { *pulumi.OutputState}

func (ClusterNodeConfigGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeConfigGuestAccelerator)(nil)).Elem()
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) ToClusterNodeConfigGuestAcceleratorArrayOutput() ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) ToClusterNodeConfigGuestAcceleratorArrayOutputWithContext(ctx context.Context) ClusterNodeConfigGuestAcceleratorArrayOutput {
	return o
}

func (o ClusterNodeConfigGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) ClusterNodeConfigGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterNodeConfigGuestAccelerator {
		return vs[0].([]ClusterNodeConfigGuestAccelerator)[vs[1].(int)]
	}).(ClusterNodeConfigGuestAcceleratorOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(ClusterNodeConfigGuestAcceleratorArrayOutput{})
}
