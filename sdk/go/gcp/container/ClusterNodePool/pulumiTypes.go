// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ClusterNodePool

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/container/ClusterNodePoolAutoscaling"
	"https:/github.com/pulumi/pulumi-gcp/container/ClusterNodePoolManagement"
	"https:/github.com/pulumi/pulumi-gcp/container/ClusterNodePoolNodeConfig"
	"https:/github.com/pulumi/pulumi-gcp/container/ClusterNodePoolNodeConfigGuestAccelerator"
	"https:/github.com/pulumi/pulumi-gcp/container/ClusterNodePoolNodeConfigSandboxConfig"
	"https:/github.com/pulumi/pulumi-gcp/container/ClusterNodePoolNodeConfigShieldedInstanceConfig"
	"https:/github.com/pulumi/pulumi-gcp/container/ClusterNodePoolNodeConfigTaint"
	"https:/github.com/pulumi/pulumi-gcp/container/ClusterNodePoolNodeConfigWorkloadMetadataConfig"
	"https:/github.com/pulumi/pulumi-gcp/container/ClusterNodePoolUpgradeSettings"
)

type ClusterNodePool struct {
	Autoscaling *containerClusterNodePoolAutoscaling.ClusterNodePoolAutoscaling `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount *int `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls []string `pulumi:"instanceGroupUrls"`
	Management *containerClusterNodePoolManagement.ClusterNodePoolManagement `pulumi:"management"`
	MaxPodsPerNode *int `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name *string `pulumi:"name"`
	NamePrefix *string `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used with
	// this provider. Structure is documented below.
	NodeConfig *containerClusterNodePoolNodeConfig.ClusterNodePoolNodeConfig `pulumi:"nodeConfig"`
	NodeCount *int `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations []string `pulumi:"nodeLocations"`
	UpgradeSettings *containerClusterNodePoolUpgradeSettings.ClusterNodePoolUpgradeSettings `pulumi:"upgradeSettings"`
	Version *string `pulumi:"version"`
}

type ClusterNodePoolInput interface {
	pulumi.Input

	ToClusterNodePoolOutput() ClusterNodePoolOutput
	ToClusterNodePoolOutputWithContext(context.Context) ClusterNodePoolOutput
}

type ClusterNodePoolArgs struct {
	Autoscaling containerClusterNodePoolAutoscaling.ClusterNodePoolAutoscalingPtrInput `pulumi:"autoscaling"`
	// The number of nodes to create in this
	// cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
	// `container.NodePool` objects with no default node pool, you'll need to
	// set this to a value of at least `1`, alongside setting
	// `removeDefaultNodePool` to `true`.
	InitialNodeCount pulumi.IntPtrInput `pulumi:"initialNodeCount"`
	// List of instance group URLs which have been assigned
	// to the cluster.
	InstanceGroupUrls pulumi.StringArrayInput `pulumi:"instanceGroupUrls"`
	Management containerClusterNodePoolManagement.ClusterNodePoolManagementPtrInput `pulumi:"management"`
	MaxPodsPerNode pulumi.IntPtrInput `pulumi:"maxPodsPerNode"`
	// The name of the cluster, unique within the project and
	// location.
	Name pulumi.StringPtrInput `pulumi:"name"`
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
	// Parameters used in creating the default node pool.
	// Generally, this field should not be used at the same time as a
	// `container.NodePool` or a `nodePool` block; this configuration
	// manages the default node pool, which isn't recommended to be used with
	// this provider. Structure is documented below.
	NodeConfig containerClusterNodePoolNodeConfig.ClusterNodePoolNodeConfigPtrInput `pulumi:"nodeConfig"`
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// The list of zones in which the cluster's nodes
	// are located. Nodes must be in the region of their regional cluster or in the
	// same region as their cluster's zone for zonal clusters. If this is specified for
	// a zonal cluster, omit the cluster's zone.
	NodeLocations pulumi.StringArrayInput `pulumi:"nodeLocations"`
	UpgradeSettings containerClusterNodePoolUpgradeSettings.ClusterNodePoolUpgradeSettingsPtrInput `pulumi:"upgradeSettings"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return i.ToClusterNodePoolOutputWithContext(context.Background())
}

func (i ClusterNodePoolArgs) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolOutput)
}

type ClusterNodePoolArrayInput interface {
	pulumi.Input

	ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput
	ToClusterNodePoolArrayOutputWithContext(context.Context) ClusterNodePoolArrayOutput
}

type ClusterNodePoolArray []ClusterNodePoolInput

func (ClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return i.ToClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i ClusterNodePoolArray) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodePoolArrayOutput)
}

type ClusterNodePoolOutput struct { *pulumi.OutputState }

func (ClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutput() ClusterNodePoolOutput {
	return o
}

func (o ClusterNodePoolOutput) ToClusterNodePoolOutputWithContext(ctx context.Context) ClusterNodePoolOutput {
	return o
}

func (o ClusterNodePoolOutput) Autoscaling() containerClusterNodePoolAutoscaling.ClusterNodePoolAutoscalingPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *containerClusterNodePoolAutoscaling.ClusterNodePoolAutoscaling { return v.Autoscaling }).(containerClusterNodePoolAutoscaling.ClusterNodePoolAutoscalingPtrOutput)
}

// The number of nodes to create in this
// cluster's default node pool. In regional or multi-zonal clusters, this is the
// number of nodes per zone. Must be set if `nodePool` is not set. If you're using
// `container.NodePool` objects with no default node pool, you'll need to
// set this to a value of at least `1`, alongside setting
// `removeDefaultNodePool` to `true`.
func (o ClusterNodePoolOutput) InitialNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *int { return v.InitialNodeCount }).(pulumi.IntPtrOutput)
}

// List of instance group URLs which have been assigned
// to the cluster.
func (o ClusterNodePoolOutput) InstanceGroupUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterNodePool) []string { return v.InstanceGroupUrls }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolOutput) Management() containerClusterNodePoolManagement.ClusterNodePoolManagementPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *containerClusterNodePoolManagement.ClusterNodePoolManagement { return v.Management }).(containerClusterNodePoolManagement.ClusterNodePoolManagementPtrOutput)
}

func (o ClusterNodePoolOutput) MaxPodsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *int { return v.MaxPodsPerNode }).(pulumi.IntPtrOutput)
}

// The name of the cluster, unique within the project and
// location.
func (o ClusterNodePoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterNodePoolOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

// Parameters used in creating the default node pool.
// Generally, this field should not be used at the same time as a
// `container.NodePool` or a `nodePool` block; this configuration
// manages the default node pool, which isn't recommended to be used with
// this provider. Structure is documented below.
func (o ClusterNodePoolOutput) NodeConfig() containerClusterNodePoolNodeConfig.ClusterNodePoolNodeConfigPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *containerClusterNodePoolNodeConfig.ClusterNodePoolNodeConfig { return v.NodeConfig }).(containerClusterNodePoolNodeConfig.ClusterNodePoolNodeConfigPtrOutput)
}

func (o ClusterNodePoolOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The list of zones in which the cluster's nodes
// are located. Nodes must be in the region of their regional cluster or in the
// same region as their cluster's zone for zonal clusters. If this is specified for
// a zonal cluster, omit the cluster's zone.
func (o ClusterNodePoolOutput) NodeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ClusterNodePool) []string { return v.NodeLocations }).(pulumi.StringArrayOutput)
}

func (o ClusterNodePoolOutput) UpgradeSettings() containerClusterNodePoolUpgradeSettings.ClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *containerClusterNodePoolUpgradeSettings.ClusterNodePoolUpgradeSettings { return v.UpgradeSettings }).(containerClusterNodePoolUpgradeSettings.ClusterNodePoolUpgradeSettingsPtrOutput)
}

func (o ClusterNodePoolOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ClusterNodePool) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterNodePoolArrayOutput struct { *pulumi.OutputState}

func (ClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodePool)(nil)).Elem()
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutput() ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) ToClusterNodePoolArrayOutputWithContext(ctx context.Context) ClusterNodePoolArrayOutput {
	return o
}

func (o ClusterNodePoolArrayOutput) Index(i pulumi.IntInput) ClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ClusterNodePool {
		return vs[0].([]ClusterNodePool)[vs[1].(int)]
	}).(ClusterNodePoolOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterNodePoolOutput{})
	pulumi.RegisterOutputType(ClusterNodePoolArrayOutput{})
}
