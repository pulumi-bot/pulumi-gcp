// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package uRLMap

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapHostRule"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcher"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRule"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionCorsPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyAbort"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyDelayFixedDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionRetryPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionRetryPolicyPerTryTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionUrlRewrite"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendService"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleUrlRedirect"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRule"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRule"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleHeaderMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleMetadataFilter"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleMetadataFilterFilterLabel"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionCorsPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyAbort"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyDelayFixedDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionRetryPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionRetryPolicyPerTryTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionUrlRewrite"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendService"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleUrlRedirect"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapTest"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_url_map.html.markdown.
type URLMap struct {
	pulumi.CustomResourceState

	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// The backend service or backend bucket to use when none of the given rules match.
	DefaultService pulumi.StringPtrOutput `pulumi:"defaultService"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// Specifies changes to request and response headers that need to take effect for the selected backendService. The
	// headerAction specified here take effect after headerAction specified under pathMatcher.
	HeaderAction computeURLMapHeaderAction.URLMapHeaderActionPtrOutput `pulumi:"headerAction"`
	// The list of HostRules to use against the URL.
	HostRules computeURLMapHostRule.URLMapHostRuleArrayOutput `pulumi:"hostRules"`
	// The unique identifier for the resource.
	MapId pulumi.IntOutput `pulumi:"mapId"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of named PathMatchers to use against the URL.
	PathMatchers computeURLMapPathMatcher.URLMapPathMatcherArrayOutput `pulumi:"pathMatchers"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass.
	// You can specify a maximum of 100 tests per UrlMap.
	Tests computeURLMapTest.URLMapTestArrayOutput `pulumi:"tests"`
}

// NewURLMap registers a new resource with the given unique name, arguments, and options.
func NewURLMap(ctx *pulumi.Context,
	name string, args *URLMapArgs, opts ...pulumi.ResourceOption) (*URLMap, error) {
	if args == nil {
		args = &URLMapArgs{}
	}
	var resource URLMap
	err := ctx.RegisterResource("gcp:compute/uRLMap:URLMap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetURLMap gets an existing URLMap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetURLMap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *URLMapState, opts ...pulumi.ResourceOption) (*URLMap, error) {
	var resource URLMap
	err := ctx.ReadResource("gcp:compute/uRLMap:URLMap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering URLMap resources.
type urlmapState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// The backend service or backend bucket to use when none of the given rules match.
	DefaultService *string `pulumi:"defaultService"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint *string `pulumi:"fingerprint"`
	// Specifies changes to request and response headers that need to take effect for the selected backendService. The
	// headerAction specified here take effect after headerAction specified under pathMatcher.
	HeaderAction *computeURLMapHeaderAction.URLMapHeaderAction `pulumi:"headerAction"`
	// The list of HostRules to use against the URL.
	HostRules []computeURLMapHostRule.URLMapHostRule `pulumi:"hostRules"`
	// The unique identifier for the resource.
	MapId *int `pulumi:"mapId"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The list of named PathMatchers to use against the URL.
	PathMatchers []computeURLMapPathMatcher.URLMapPathMatcher `pulumi:"pathMatchers"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The URI of the created resource.
	SelfLink *string `pulumi:"selfLink"`
	// The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass.
	// You can specify a maximum of 100 tests per UrlMap.
	Tests []computeURLMapTest.URLMapTest `pulumi:"tests"`
}

type URLMapState struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// The backend service or backend bucket to use when none of the given rules match.
	DefaultService pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint pulumi.StringPtrInput
	// Specifies changes to request and response headers that need to take effect for the selected backendService. The
	// headerAction specified here take effect after headerAction specified under pathMatcher.
	HeaderAction computeURLMapHeaderAction.URLMapHeaderActionPtrInput
	// The list of HostRules to use against the URL.
	HostRules computeURLMapHostRule.URLMapHostRuleArrayInput
	// The unique identifier for the resource.
	MapId pulumi.IntPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The list of named PathMatchers to use against the URL.
	PathMatchers computeURLMapPathMatcher.URLMapPathMatcherArrayInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
	// The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass.
	// You can specify a maximum of 100 tests per UrlMap.
	Tests computeURLMapTest.URLMapTestArrayInput
}

func (URLMapState) ElementType() reflect.Type {
	return reflect.TypeOf((*urlmapState)(nil)).Elem()
}

type urlmapArgs struct {
	// The backend service or backend bucket to use when none of the given rules match.
	DefaultService *string `pulumi:"defaultService"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Specifies changes to request and response headers that need to take effect for the selected backendService. The
	// headerAction specified here take effect after headerAction specified under pathMatcher.
	HeaderAction *computeURLMapHeaderAction.URLMapHeaderAction `pulumi:"headerAction"`
	// The list of HostRules to use against the URL.
	HostRules []computeURLMapHostRule.URLMapHostRule `pulumi:"hostRules"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The list of named PathMatchers to use against the URL.
	PathMatchers []computeURLMapPathMatcher.URLMapPathMatcher `pulumi:"pathMatchers"`
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass.
	// You can specify a maximum of 100 tests per UrlMap.
	Tests []computeURLMapTest.URLMapTest `pulumi:"tests"`
}

// The set of arguments for constructing a URLMap resource.
type URLMapArgs struct {
	// The backend service or backend bucket to use when none of the given rules match.
	DefaultService pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Specifies changes to request and response headers that need to take effect for the selected backendService. The
	// headerAction specified here take effect after headerAction specified under pathMatcher.
	HeaderAction computeURLMapHeaderAction.URLMapHeaderActionPtrInput
	// The list of HostRules to use against the URL.
	HostRules computeURLMapHostRule.URLMapHostRuleArrayInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all following characters
	// must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The list of named PathMatchers to use against the URL.
	PathMatchers computeURLMapPathMatcher.URLMapPathMatcherArrayInput
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass.
	// You can specify a maximum of 100 tests per UrlMap.
	Tests computeURLMapTest.URLMapTestArrayInput
}

func (URLMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*urlmapArgs)(nil)).Elem()
}

