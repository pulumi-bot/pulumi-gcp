// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package URLMapPathMatcherRouteRuleMatchRule

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleHeaderMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleMetadataFilter"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleMetadataFilterFilterLabel"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch"
)

type URLMapPathMatcherRouteRuleMatchRule struct {
	FullPathMatch *string `pulumi:"fullPathMatch"`
	HeaderMatches []computeURLMapPathMatcherRouteRuleMatchRuleHeaderMatch.URLMapPathMatcherRouteRuleMatchRuleHeaderMatch `pulumi:"headerMatches"`
	IgnoreCase *bool `pulumi:"ignoreCase"`
	MetadataFilters []computeURLMapPathMatcherRouteRuleMatchRuleMetadataFilter.URLMapPathMatcherRouteRuleMatchRuleMetadataFilter `pulumi:"metadataFilters"`
	PrefixMatch *string `pulumi:"prefixMatch"`
	QueryParameterMatches []computeURLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.URLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch `pulumi:"queryParameterMatches"`
	RegexMatch *string `pulumi:"regexMatch"`
}

type URLMapPathMatcherRouteRuleMatchRuleInput interface {
	pulumi.Input

	ToURLMapPathMatcherRouteRuleMatchRuleOutput() URLMapPathMatcherRouteRuleMatchRuleOutput
	ToURLMapPathMatcherRouteRuleMatchRuleOutputWithContext(context.Context) URLMapPathMatcherRouteRuleMatchRuleOutput
}

type URLMapPathMatcherRouteRuleMatchRuleArgs struct {
	FullPathMatch pulumi.StringPtrInput `pulumi:"fullPathMatch"`
	HeaderMatches computeURLMapPathMatcherRouteRuleMatchRuleHeaderMatch.URLMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayInput `pulumi:"headerMatches"`
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	MetadataFilters computeURLMapPathMatcherRouteRuleMatchRuleMetadataFilter.URLMapPathMatcherRouteRuleMatchRuleMetadataFilterArrayInput `pulumi:"metadataFilters"`
	PrefixMatch pulumi.StringPtrInput `pulumi:"prefixMatch"`
	QueryParameterMatches computeURLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.URLMapPathMatcherRouteRuleMatchRuleQueryParameterMatchArrayInput `pulumi:"queryParameterMatches"`
	RegexMatch pulumi.StringPtrInput `pulumi:"regexMatch"`
}

func (URLMapPathMatcherRouteRuleMatchRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapPathMatcherRouteRuleMatchRule)(nil)).Elem()
}

func (i URLMapPathMatcherRouteRuleMatchRuleArgs) ToURLMapPathMatcherRouteRuleMatchRuleOutput() URLMapPathMatcherRouteRuleMatchRuleOutput {
	return i.ToURLMapPathMatcherRouteRuleMatchRuleOutputWithContext(context.Background())
}

func (i URLMapPathMatcherRouteRuleMatchRuleArgs) ToURLMapPathMatcherRouteRuleMatchRuleOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleMatchRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherRouteRuleMatchRuleOutput)
}

type URLMapPathMatcherRouteRuleMatchRuleArrayInput interface {
	pulumi.Input

	ToURLMapPathMatcherRouteRuleMatchRuleArrayOutput() URLMapPathMatcherRouteRuleMatchRuleArrayOutput
	ToURLMapPathMatcherRouteRuleMatchRuleArrayOutputWithContext(context.Context) URLMapPathMatcherRouteRuleMatchRuleArrayOutput
}

type URLMapPathMatcherRouteRuleMatchRuleArray []URLMapPathMatcherRouteRuleMatchRuleInput

func (URLMapPathMatcherRouteRuleMatchRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]URLMapPathMatcherRouteRuleMatchRule)(nil)).Elem()
}

func (i URLMapPathMatcherRouteRuleMatchRuleArray) ToURLMapPathMatcherRouteRuleMatchRuleArrayOutput() URLMapPathMatcherRouteRuleMatchRuleArrayOutput {
	return i.ToURLMapPathMatcherRouteRuleMatchRuleArrayOutputWithContext(context.Background())
}

func (i URLMapPathMatcherRouteRuleMatchRuleArray) ToURLMapPathMatcherRouteRuleMatchRuleArrayOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleMatchRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherRouteRuleMatchRuleArrayOutput)
}

type URLMapPathMatcherRouteRuleMatchRuleOutput struct { *pulumi.OutputState }

func (URLMapPathMatcherRouteRuleMatchRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapPathMatcherRouteRuleMatchRule)(nil)).Elem()
}

func (o URLMapPathMatcherRouteRuleMatchRuleOutput) ToURLMapPathMatcherRouteRuleMatchRuleOutput() URLMapPathMatcherRouteRuleMatchRuleOutput {
	return o
}

func (o URLMapPathMatcherRouteRuleMatchRuleOutput) ToURLMapPathMatcherRouteRuleMatchRuleOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleMatchRuleOutput {
	return o
}

func (o URLMapPathMatcherRouteRuleMatchRuleOutput) FullPathMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleMatchRule) *string { return v.FullPathMatch }).(pulumi.StringPtrOutput)
}

func (o URLMapPathMatcherRouteRuleMatchRuleOutput) HeaderMatches() computeURLMapPathMatcherRouteRuleMatchRuleHeaderMatch.URLMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleMatchRule) []computeURLMapPathMatcherRouteRuleMatchRuleHeaderMatch.URLMapPathMatcherRouteRuleMatchRuleHeaderMatch { return v.HeaderMatches }).(computeURLMapPathMatcherRouteRuleMatchRuleHeaderMatch.URLMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput)
}

func (o URLMapPathMatcherRouteRuleMatchRuleOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleMatchRule) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

func (o URLMapPathMatcherRouteRuleMatchRuleOutput) MetadataFilters() computeURLMapPathMatcherRouteRuleMatchRuleMetadataFilter.URLMapPathMatcherRouteRuleMatchRuleMetadataFilterArrayOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleMatchRule) []computeURLMapPathMatcherRouteRuleMatchRuleMetadataFilter.URLMapPathMatcherRouteRuleMatchRuleMetadataFilter { return v.MetadataFilters }).(computeURLMapPathMatcherRouteRuleMatchRuleMetadataFilter.URLMapPathMatcherRouteRuleMatchRuleMetadataFilterArrayOutput)
}

func (o URLMapPathMatcherRouteRuleMatchRuleOutput) PrefixMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleMatchRule) *string { return v.PrefixMatch }).(pulumi.StringPtrOutput)
}

func (o URLMapPathMatcherRouteRuleMatchRuleOutput) QueryParameterMatches() computeURLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.URLMapPathMatcherRouteRuleMatchRuleQueryParameterMatchArrayOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleMatchRule) []computeURLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.URLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch { return v.QueryParameterMatches }).(computeURLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.URLMapPathMatcherRouteRuleMatchRuleQueryParameterMatchArrayOutput)
}

func (o URLMapPathMatcherRouteRuleMatchRuleOutput) RegexMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleMatchRule) *string { return v.RegexMatch }).(pulumi.StringPtrOutput)
}

type URLMapPathMatcherRouteRuleMatchRuleArrayOutput struct { *pulumi.OutputState}

func (URLMapPathMatcherRouteRuleMatchRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]URLMapPathMatcherRouteRuleMatchRule)(nil)).Elem()
}

func (o URLMapPathMatcherRouteRuleMatchRuleArrayOutput) ToURLMapPathMatcherRouteRuleMatchRuleArrayOutput() URLMapPathMatcherRouteRuleMatchRuleArrayOutput {
	return o
}

func (o URLMapPathMatcherRouteRuleMatchRuleArrayOutput) ToURLMapPathMatcherRouteRuleMatchRuleArrayOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleMatchRuleArrayOutput {
	return o
}

func (o URLMapPathMatcherRouteRuleMatchRuleArrayOutput) Index(i pulumi.IntInput) URLMapPathMatcherRouteRuleMatchRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) URLMapPathMatcherRouteRuleMatchRule {
		return vs[0].([]URLMapPathMatcherRouteRuleMatchRule)[vs[1].(int)]
	}).(URLMapPathMatcherRouteRuleMatchRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(URLMapPathMatcherRouteRuleMatchRuleOutput{})
	pulumi.RegisterOutputType(URLMapPathMatcherRouteRuleMatchRuleArrayOutput{})
}
