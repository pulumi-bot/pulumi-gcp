// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RouterBgpAdvertisedIpRange

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RouterBgpAdvertisedIpRange struct {
	Description *string `pulumi:"description"`
	Range string `pulumi:"range"`
}

type RouterBgpAdvertisedIpRangeInput interface {
	pulumi.Input

	ToRouterBgpAdvertisedIpRangeOutput() RouterBgpAdvertisedIpRangeOutput
	ToRouterBgpAdvertisedIpRangeOutputWithContext(context.Context) RouterBgpAdvertisedIpRangeOutput
}

type RouterBgpAdvertisedIpRangeArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Range pulumi.StringInput `pulumi:"range"`
}

func (RouterBgpAdvertisedIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdvertisedIpRange)(nil)).Elem()
}

func (i RouterBgpAdvertisedIpRangeArgs) ToRouterBgpAdvertisedIpRangeOutput() RouterBgpAdvertisedIpRangeOutput {
	return i.ToRouterBgpAdvertisedIpRangeOutputWithContext(context.Background())
}

func (i RouterBgpAdvertisedIpRangeArgs) ToRouterBgpAdvertisedIpRangeOutputWithContext(ctx context.Context) RouterBgpAdvertisedIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAdvertisedIpRangeOutput)
}

type RouterBgpAdvertisedIpRangeArrayInput interface {
	pulumi.Input

	ToRouterBgpAdvertisedIpRangeArrayOutput() RouterBgpAdvertisedIpRangeArrayOutput
	ToRouterBgpAdvertisedIpRangeArrayOutputWithContext(context.Context) RouterBgpAdvertisedIpRangeArrayOutput
}

type RouterBgpAdvertisedIpRangeArray []RouterBgpAdvertisedIpRangeInput

func (RouterBgpAdvertisedIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAdvertisedIpRange)(nil)).Elem()
}

func (i RouterBgpAdvertisedIpRangeArray) ToRouterBgpAdvertisedIpRangeArrayOutput() RouterBgpAdvertisedIpRangeArrayOutput {
	return i.ToRouterBgpAdvertisedIpRangeArrayOutputWithContext(context.Background())
}

func (i RouterBgpAdvertisedIpRangeArray) ToRouterBgpAdvertisedIpRangeArrayOutputWithContext(ctx context.Context) RouterBgpAdvertisedIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterBgpAdvertisedIpRangeArrayOutput)
}

type RouterBgpAdvertisedIpRangeOutput struct { *pulumi.OutputState }

func (RouterBgpAdvertisedIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterBgpAdvertisedIpRange)(nil)).Elem()
}

func (o RouterBgpAdvertisedIpRangeOutput) ToRouterBgpAdvertisedIpRangeOutput() RouterBgpAdvertisedIpRangeOutput {
	return o
}

func (o RouterBgpAdvertisedIpRangeOutput) ToRouterBgpAdvertisedIpRangeOutputWithContext(ctx context.Context) RouterBgpAdvertisedIpRangeOutput {
	return o
}

func (o RouterBgpAdvertisedIpRangeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RouterBgpAdvertisedIpRange) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RouterBgpAdvertisedIpRangeOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func (v RouterBgpAdvertisedIpRange) string { return v.Range }).(pulumi.StringOutput)
}

type RouterBgpAdvertisedIpRangeArrayOutput struct { *pulumi.OutputState}

func (RouterBgpAdvertisedIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterBgpAdvertisedIpRange)(nil)).Elem()
}

func (o RouterBgpAdvertisedIpRangeArrayOutput) ToRouterBgpAdvertisedIpRangeArrayOutput() RouterBgpAdvertisedIpRangeArrayOutput {
	return o
}

func (o RouterBgpAdvertisedIpRangeArrayOutput) ToRouterBgpAdvertisedIpRangeArrayOutputWithContext(ctx context.Context) RouterBgpAdvertisedIpRangeArrayOutput {
	return o
}

func (o RouterBgpAdvertisedIpRangeArrayOutput) Index(i pulumi.IntInput) RouterBgpAdvertisedIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RouterBgpAdvertisedIpRange {
		return vs[0].([]RouterBgpAdvertisedIpRange)[vs[1].(int)]
	}).(RouterBgpAdvertisedIpRangeOutput)
}

func init() {
	pulumi.RegisterOutputType(RouterBgpAdvertisedIpRangeOutput{})
	pulumi.RegisterOutputType(RouterBgpAdvertisedIpRangeArrayOutput{})
}
