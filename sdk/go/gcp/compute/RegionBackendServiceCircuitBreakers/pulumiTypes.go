// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RegionBackendServiceCircuitBreakers

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionBackendServiceCircuitBreakersConnectTimeout"
)

type RegionBackendServiceCircuitBreakers struct {
	ConnectTimeout *computeRegionBackendServiceCircuitBreakersConnectTimeout.RegionBackendServiceCircuitBreakersConnectTimeout `pulumi:"connectTimeout"`
	MaxConnections *int `pulumi:"maxConnections"`
	MaxPendingRequests *int `pulumi:"maxPendingRequests"`
	MaxRequests *int `pulumi:"maxRequests"`
	MaxRequestsPerConnection *int `pulumi:"maxRequestsPerConnection"`
	MaxRetries *int `pulumi:"maxRetries"`
}

type RegionBackendServiceCircuitBreakersInput interface {
	pulumi.Input

	ToRegionBackendServiceCircuitBreakersOutput() RegionBackendServiceCircuitBreakersOutput
	ToRegionBackendServiceCircuitBreakersOutputWithContext(context.Context) RegionBackendServiceCircuitBreakersOutput
}

type RegionBackendServiceCircuitBreakersArgs struct {
	ConnectTimeout computeRegionBackendServiceCircuitBreakersConnectTimeout.RegionBackendServiceCircuitBreakersConnectTimeoutPtrInput `pulumi:"connectTimeout"`
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	MaxPendingRequests pulumi.IntPtrInput `pulumi:"maxPendingRequests"`
	MaxRequests pulumi.IntPtrInput `pulumi:"maxRequests"`
	MaxRequestsPerConnection pulumi.IntPtrInput `pulumi:"maxRequestsPerConnection"`
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
}

func (RegionBackendServiceCircuitBreakersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceCircuitBreakers)(nil)).Elem()
}

func (i RegionBackendServiceCircuitBreakersArgs) ToRegionBackendServiceCircuitBreakersOutput() RegionBackendServiceCircuitBreakersOutput {
	return i.ToRegionBackendServiceCircuitBreakersOutputWithContext(context.Background())
}

func (i RegionBackendServiceCircuitBreakersArgs) ToRegionBackendServiceCircuitBreakersOutputWithContext(ctx context.Context) RegionBackendServiceCircuitBreakersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionBackendServiceCircuitBreakersOutput)
}

func (i RegionBackendServiceCircuitBreakersArgs) ToRegionBackendServiceCircuitBreakersPtrOutput() RegionBackendServiceCircuitBreakersPtrOutput {
	return i.ToRegionBackendServiceCircuitBreakersPtrOutputWithContext(context.Background())
}

func (i RegionBackendServiceCircuitBreakersArgs) ToRegionBackendServiceCircuitBreakersPtrOutputWithContext(ctx context.Context) RegionBackendServiceCircuitBreakersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionBackendServiceCircuitBreakersOutput).ToRegionBackendServiceCircuitBreakersPtrOutputWithContext(ctx)
}

type RegionBackendServiceCircuitBreakersPtrInput interface {
	pulumi.Input

	ToRegionBackendServiceCircuitBreakersPtrOutput() RegionBackendServiceCircuitBreakersPtrOutput
	ToRegionBackendServiceCircuitBreakersPtrOutputWithContext(context.Context) RegionBackendServiceCircuitBreakersPtrOutput
}

type regionBackendServiceCircuitBreakersPtrType RegionBackendServiceCircuitBreakersArgs

func RegionBackendServiceCircuitBreakersPtr(v *RegionBackendServiceCircuitBreakersArgs) RegionBackendServiceCircuitBreakersPtrInput {	return (*regionBackendServiceCircuitBreakersPtrType)(v)
}

func (*regionBackendServiceCircuitBreakersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionBackendServiceCircuitBreakers)(nil)).Elem()
}

func (i *regionBackendServiceCircuitBreakersPtrType) ToRegionBackendServiceCircuitBreakersPtrOutput() RegionBackendServiceCircuitBreakersPtrOutput {
	return i.ToRegionBackendServiceCircuitBreakersPtrOutputWithContext(context.Background())
}

func (i *regionBackendServiceCircuitBreakersPtrType) ToRegionBackendServiceCircuitBreakersPtrOutputWithContext(ctx context.Context) RegionBackendServiceCircuitBreakersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionBackendServiceCircuitBreakersPtrOutput)
}

type RegionBackendServiceCircuitBreakersOutput struct { *pulumi.OutputState }

func (RegionBackendServiceCircuitBreakersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionBackendServiceCircuitBreakers)(nil)).Elem()
}

func (o RegionBackendServiceCircuitBreakersOutput) ToRegionBackendServiceCircuitBreakersOutput() RegionBackendServiceCircuitBreakersOutput {
	return o
}

func (o RegionBackendServiceCircuitBreakersOutput) ToRegionBackendServiceCircuitBreakersOutputWithContext(ctx context.Context) RegionBackendServiceCircuitBreakersOutput {
	return o
}

func (o RegionBackendServiceCircuitBreakersOutput) ToRegionBackendServiceCircuitBreakersPtrOutput() RegionBackendServiceCircuitBreakersPtrOutput {
	return o.ToRegionBackendServiceCircuitBreakersPtrOutputWithContext(context.Background())
}

func (o RegionBackendServiceCircuitBreakersOutput) ToRegionBackendServiceCircuitBreakersPtrOutputWithContext(ctx context.Context) RegionBackendServiceCircuitBreakersPtrOutput {
	return o.ApplyT(func(v RegionBackendServiceCircuitBreakers) *RegionBackendServiceCircuitBreakers {
		return &v
	}).(RegionBackendServiceCircuitBreakersPtrOutput)
}
func (o RegionBackendServiceCircuitBreakersOutput) ConnectTimeout() computeRegionBackendServiceCircuitBreakersConnectTimeout.RegionBackendServiceCircuitBreakersConnectTimeoutPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *computeRegionBackendServiceCircuitBreakersConnectTimeout.RegionBackendServiceCircuitBreakersConnectTimeout { return v.ConnectTimeout }).(computeRegionBackendServiceCircuitBreakersConnectTimeout.RegionBackendServiceCircuitBreakersConnectTimeoutPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxRequests }).(pulumi.IntPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxRequestsPerConnection }).(pulumi.IntPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

type RegionBackendServiceCircuitBreakersPtrOutput struct { *pulumi.OutputState}

func (RegionBackendServiceCircuitBreakersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionBackendServiceCircuitBreakers)(nil)).Elem()
}

func (o RegionBackendServiceCircuitBreakersPtrOutput) ToRegionBackendServiceCircuitBreakersPtrOutput() RegionBackendServiceCircuitBreakersPtrOutput {
	return o
}

func (o RegionBackendServiceCircuitBreakersPtrOutput) ToRegionBackendServiceCircuitBreakersPtrOutputWithContext(ctx context.Context) RegionBackendServiceCircuitBreakersPtrOutput {
	return o
}

func (o RegionBackendServiceCircuitBreakersPtrOutput) Elem() RegionBackendServiceCircuitBreakersOutput {
	return o.ApplyT(func (v *RegionBackendServiceCircuitBreakers) RegionBackendServiceCircuitBreakers { return *v }).(RegionBackendServiceCircuitBreakersOutput)
}

func (o RegionBackendServiceCircuitBreakersPtrOutput) ConnectTimeout() computeRegionBackendServiceCircuitBreakersConnectTimeout.RegionBackendServiceCircuitBreakersConnectTimeoutPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *computeRegionBackendServiceCircuitBreakersConnectTimeout.RegionBackendServiceCircuitBreakersConnectTimeout { return v.ConnectTimeout }).(computeRegionBackendServiceCircuitBreakersConnectTimeout.RegionBackendServiceCircuitBreakersConnectTimeoutPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersPtrOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersPtrOutput) MaxPendingRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxPendingRequests }).(pulumi.IntPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersPtrOutput) MaxRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxRequests }).(pulumi.IntPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersPtrOutput) MaxRequestsPerConnection() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxRequestsPerConnection }).(pulumi.IntPtrOutput)
}

func (o RegionBackendServiceCircuitBreakersPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func (v RegionBackendServiceCircuitBreakers) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RegionBackendServiceCircuitBreakersOutput{})
	pulumi.RegisterOutputType(RegionBackendServiceCircuitBreakersPtrOutput{})
}
