// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getInstanceScheduling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/getInstanceSchedulingNodeAffinity"
)

type GetInstanceScheduling struct {
	// Specifies if the instance should be
	// restarted if it was terminated by Compute Engine (not a user).
	AutomaticRestart bool `pulumi:"automaticRestart"`
	NodeAffinities []computegetInstanceSchedulingNodeAffinity.GetInstanceSchedulingNodeAffinity `pulumi:"nodeAffinities"`
	// Describes maintenance behavior for the
	// instance. One of `MIGRATE` or `TERMINATE`, for more info, read
	// [here](https://cloud.google.com/compute/docs/instances/setting-instance-scheduling-options)
	OnHostMaintenance string `pulumi:"onHostMaintenance"`
	// Whether the instance is preemptible.
	Preemptible bool `pulumi:"preemptible"`
}

type GetInstanceSchedulingInput interface {
	pulumi.Input

	ToGetInstanceSchedulingOutput() GetInstanceSchedulingOutput
	ToGetInstanceSchedulingOutputWithContext(context.Context) GetInstanceSchedulingOutput
}

type GetInstanceSchedulingArgs struct {
	// Specifies if the instance should be
	// restarted if it was terminated by Compute Engine (not a user).
	AutomaticRestart pulumi.BoolInput `pulumi:"automaticRestart"`
	NodeAffinities computegetInstanceSchedulingNodeAffinity.GetInstanceSchedulingNodeAffinityArrayInput `pulumi:"nodeAffinities"`
	// Describes maintenance behavior for the
	// instance. One of `MIGRATE` or `TERMINATE`, for more info, read
	// [here](https://cloud.google.com/compute/docs/instances/setting-instance-scheduling-options)
	OnHostMaintenance pulumi.StringInput `pulumi:"onHostMaintenance"`
	// Whether the instance is preemptible.
	Preemptible pulumi.BoolInput `pulumi:"preemptible"`
}

func (GetInstanceSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceScheduling)(nil)).Elem()
}

func (i GetInstanceSchedulingArgs) ToGetInstanceSchedulingOutput() GetInstanceSchedulingOutput {
	return i.ToGetInstanceSchedulingOutputWithContext(context.Background())
}

func (i GetInstanceSchedulingArgs) ToGetInstanceSchedulingOutputWithContext(ctx context.Context) GetInstanceSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSchedulingOutput)
}

type GetInstanceSchedulingArrayInput interface {
	pulumi.Input

	ToGetInstanceSchedulingArrayOutput() GetInstanceSchedulingArrayOutput
	ToGetInstanceSchedulingArrayOutputWithContext(context.Context) GetInstanceSchedulingArrayOutput
}

type GetInstanceSchedulingArray []GetInstanceSchedulingInput

func (GetInstanceSchedulingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceScheduling)(nil)).Elem()
}

func (i GetInstanceSchedulingArray) ToGetInstanceSchedulingArrayOutput() GetInstanceSchedulingArrayOutput {
	return i.ToGetInstanceSchedulingArrayOutputWithContext(context.Background())
}

func (i GetInstanceSchedulingArray) ToGetInstanceSchedulingArrayOutputWithContext(ctx context.Context) GetInstanceSchedulingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSchedulingArrayOutput)
}

type GetInstanceSchedulingOutput struct { *pulumi.OutputState }

func (GetInstanceSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceScheduling)(nil)).Elem()
}

func (o GetInstanceSchedulingOutput) ToGetInstanceSchedulingOutput() GetInstanceSchedulingOutput {
	return o
}

func (o GetInstanceSchedulingOutput) ToGetInstanceSchedulingOutputWithContext(ctx context.Context) GetInstanceSchedulingOutput {
	return o
}

// Specifies if the instance should be
// restarted if it was terminated by Compute Engine (not a user).
func (o GetInstanceSchedulingOutput) AutomaticRestart() pulumi.BoolOutput {
	return o.ApplyT(func (v GetInstanceScheduling) bool { return v.AutomaticRestart }).(pulumi.BoolOutput)
}

func (o GetInstanceSchedulingOutput) NodeAffinities() computegetInstanceSchedulingNodeAffinity.GetInstanceSchedulingNodeAffinityArrayOutput {
	return o.ApplyT(func (v GetInstanceScheduling) []computegetInstanceSchedulingNodeAffinity.GetInstanceSchedulingNodeAffinity { return v.NodeAffinities }).(computegetInstanceSchedulingNodeAffinity.GetInstanceSchedulingNodeAffinityArrayOutput)
}

// Describes maintenance behavior for the
// instance. One of `MIGRATE` or `TERMINATE`, for more info, read
// [here](https://cloud.google.com/compute/docs/instances/setting-instance-scheduling-options)
func (o GetInstanceSchedulingOutput) OnHostMaintenance() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceScheduling) string { return v.OnHostMaintenance }).(pulumi.StringOutput)
}

// Whether the instance is preemptible.
func (o GetInstanceSchedulingOutput) Preemptible() pulumi.BoolOutput {
	return o.ApplyT(func (v GetInstanceScheduling) bool { return v.Preemptible }).(pulumi.BoolOutput)
}

type GetInstanceSchedulingArrayOutput struct { *pulumi.OutputState}

func (GetInstanceSchedulingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceScheduling)(nil)).Elem()
}

func (o GetInstanceSchedulingArrayOutput) ToGetInstanceSchedulingArrayOutput() GetInstanceSchedulingArrayOutput {
	return o
}

func (o GetInstanceSchedulingArrayOutput) ToGetInstanceSchedulingArrayOutputWithContext(ctx context.Context) GetInstanceSchedulingArrayOutput {
	return o
}

func (o GetInstanceSchedulingArrayOutput) Index(i pulumi.IntInput) GetInstanceSchedulingOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetInstanceScheduling {
		return vs[0].([]GetInstanceScheduling)[vs[1].(int)]
	}).(GetInstanceSchedulingOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceSchedulingOutput{})
	pulumi.RegisterOutputType(GetInstanceSchedulingArrayOutput{})
}
