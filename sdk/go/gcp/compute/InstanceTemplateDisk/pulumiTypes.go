// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceTemplateDisk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/InstanceTemplateDiskDiskEncryptionKey"
)

type InstanceTemplateDisk struct {
	AutoDelete *bool `pulumi:"autoDelete"`
	Boot *bool `pulumi:"boot"`
	DeviceName *string `pulumi:"deviceName"`
	DiskEncryptionKey *computeInstanceTemplateDiskDiskEncryptionKey.InstanceTemplateDiskDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	DiskName *string `pulumi:"diskName"`
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	DiskType *string `pulumi:"diskType"`
	Interface *string `pulumi:"interface"`
	// A set of key/value label pairs to assign to instances
	// created from this template,
	Labels map[string]string `pulumi:"labels"`
	Mode *string `pulumi:"mode"`
	Source *string `pulumi:"source"`
	SourceImage *string `pulumi:"sourceImage"`
	Type *string `pulumi:"type"`
}

type InstanceTemplateDiskInput interface {
	pulumi.Input

	ToInstanceTemplateDiskOutput() InstanceTemplateDiskOutput
	ToInstanceTemplateDiskOutputWithContext(context.Context) InstanceTemplateDiskOutput
}

type InstanceTemplateDiskArgs struct {
	AutoDelete pulumi.BoolPtrInput `pulumi:"autoDelete"`
	Boot pulumi.BoolPtrInput `pulumi:"boot"`
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	DiskEncryptionKey computeInstanceTemplateDiskDiskEncryptionKey.InstanceTemplateDiskDiskEncryptionKeyPtrInput `pulumi:"diskEncryptionKey"`
	DiskName pulumi.StringPtrInput `pulumi:"diskName"`
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	Interface pulumi.StringPtrInput `pulumi:"interface"`
	// A set of key/value label pairs to assign to instances
	// created from this template,
	Labels pulumi.StringMapInput `pulumi:"labels"`
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	Source pulumi.StringPtrInput `pulumi:"source"`
	SourceImage pulumi.StringPtrInput `pulumi:"sourceImage"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (InstanceTemplateDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTemplateDisk)(nil)).Elem()
}

func (i InstanceTemplateDiskArgs) ToInstanceTemplateDiskOutput() InstanceTemplateDiskOutput {
	return i.ToInstanceTemplateDiskOutputWithContext(context.Background())
}

func (i InstanceTemplateDiskArgs) ToInstanceTemplateDiskOutputWithContext(ctx context.Context) InstanceTemplateDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTemplateDiskOutput)
}

type InstanceTemplateDiskArrayInput interface {
	pulumi.Input

	ToInstanceTemplateDiskArrayOutput() InstanceTemplateDiskArrayOutput
	ToInstanceTemplateDiskArrayOutputWithContext(context.Context) InstanceTemplateDiskArrayOutput
}

type InstanceTemplateDiskArray []InstanceTemplateDiskInput

func (InstanceTemplateDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTemplateDisk)(nil)).Elem()
}

func (i InstanceTemplateDiskArray) ToInstanceTemplateDiskArrayOutput() InstanceTemplateDiskArrayOutput {
	return i.ToInstanceTemplateDiskArrayOutputWithContext(context.Background())
}

func (i InstanceTemplateDiskArray) ToInstanceTemplateDiskArrayOutputWithContext(ctx context.Context) InstanceTemplateDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTemplateDiskArrayOutput)
}

type InstanceTemplateDiskOutput struct { *pulumi.OutputState }

func (InstanceTemplateDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTemplateDisk)(nil)).Elem()
}

func (o InstanceTemplateDiskOutput) ToInstanceTemplateDiskOutput() InstanceTemplateDiskOutput {
	return o
}

func (o InstanceTemplateDiskOutput) ToInstanceTemplateDiskOutputWithContext(ctx context.Context) InstanceTemplateDiskOutput {
	return o
}

func (o InstanceTemplateDiskOutput) AutoDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *bool { return v.AutoDelete }).(pulumi.BoolPtrOutput)
}

func (o InstanceTemplateDiskOutput) Boot() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *bool { return v.Boot }).(pulumi.BoolPtrOutput)
}

func (o InstanceTemplateDiskOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

func (o InstanceTemplateDiskOutput) DiskEncryptionKey() computeInstanceTemplateDiskDiskEncryptionKey.InstanceTemplateDiskDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *computeInstanceTemplateDiskDiskEncryptionKey.InstanceTemplateDiskDiskEncryptionKey { return v.DiskEncryptionKey }).(computeInstanceTemplateDiskDiskEncryptionKey.InstanceTemplateDiskDiskEncryptionKeyPtrOutput)
}

func (o InstanceTemplateDiskOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *string { return v.DiskName }).(pulumi.StringPtrOutput)
}

func (o InstanceTemplateDiskOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

func (o InstanceTemplateDiskOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o InstanceTemplateDiskOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *string { return v.Interface }).(pulumi.StringPtrOutput)
}

// A set of key/value label pairs to assign to instances
// created from this template,
func (o InstanceTemplateDiskOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o InstanceTemplateDiskOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o InstanceTemplateDiskOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o InstanceTemplateDiskOutput) SourceImage() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *string { return v.SourceImage }).(pulumi.StringPtrOutput)
}

func (o InstanceTemplateDiskOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceTemplateDisk) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InstanceTemplateDiskArrayOutput struct { *pulumi.OutputState}

func (InstanceTemplateDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTemplateDisk)(nil)).Elem()
}

func (o InstanceTemplateDiskArrayOutput) ToInstanceTemplateDiskArrayOutput() InstanceTemplateDiskArrayOutput {
	return o
}

func (o InstanceTemplateDiskArrayOutput) ToInstanceTemplateDiskArrayOutputWithContext(ctx context.Context) InstanceTemplateDiskArrayOutput {
	return o
}

func (o InstanceTemplateDiskArrayOutput) Index(i pulumi.IntInput) InstanceTemplateDiskOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceTemplateDisk {
		return vs[0].([]InstanceTemplateDisk)[vs[1].(int)]
	}).(InstanceTemplateDiskOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceTemplateDiskOutput{})
	pulumi.RegisterOutputType(InstanceTemplateDiskArrayOutput{})
}
