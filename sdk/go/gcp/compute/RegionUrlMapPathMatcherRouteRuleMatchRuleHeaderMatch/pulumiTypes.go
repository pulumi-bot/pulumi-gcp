// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch"
)

type RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch struct {
	ExactMatch *string `pulumi:"exactMatch"`
	HeaderName string `pulumi:"headerName"`
	InvertMatch *bool `pulumi:"invertMatch"`
	PrefixMatch *string `pulumi:"prefixMatch"`
	PresentMatch *bool `pulumi:"presentMatch"`
	RangeMatch *computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch `pulumi:"rangeMatch"`
	RegexMatch *string `pulumi:"regexMatch"`
	SuffixMatch *string `pulumi:"suffixMatch"`
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchInput interface {
	pulumi.Input

	ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput
	ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutputWithContext(context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArgs struct {
	ExactMatch pulumi.StringPtrInput `pulumi:"exactMatch"`
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	InvertMatch pulumi.BoolPtrInput `pulumi:"invertMatch"`
	PrefixMatch pulumi.StringPtrInput `pulumi:"prefixMatch"`
	PresentMatch pulumi.BoolPtrInput `pulumi:"presentMatch"`
	RangeMatch computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchPtrInput `pulumi:"rangeMatch"`
	RegexMatch pulumi.StringPtrInput `pulumi:"regexMatch"`
	SuffixMatch pulumi.StringPtrInput `pulumi:"suffixMatch"`
}

func (RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch)(nil)).Elem()
}

func (i RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArgs) ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput {
	return i.ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutputWithContext(context.Background())
}

func (i RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArgs) ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput)
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayInput interface {
	pulumi.Input

	ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput
	ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutputWithContext(context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArray []RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchInput

func (RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch)(nil)).Elem()
}

func (i RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArray) ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput {
	return i.ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutputWithContext(context.Background())
}

func (i RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArray) ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput)
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput struct { *pulumi.OutputState }

func (RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch)(nil)).Elem()
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) ExactMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch) *string { return v.ExactMatch }).(pulumi.StringPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) InvertMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch) *bool { return v.InvertMatch }).(pulumi.BoolPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) PrefixMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch) *string { return v.PrefixMatch }).(pulumi.StringPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) PresentMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch) *bool { return v.PresentMatch }).(pulumi.BoolPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) RangeMatch() computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch) *computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch { return v.RangeMatch }).(computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatchPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) RegexMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch) *string { return v.RegexMatch }).(pulumi.StringPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput) SuffixMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch) *string { return v.SuffixMatch }).(pulumi.StringPtrOutput)
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput struct { *pulumi.OutputState}

func (RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch)(nil)).Elem()
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput) ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput) ToRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput) Index(i pulumi.IntInput) RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch {
		return vs[0].([]RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch)[vs[1].(int)]
	}).(RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput)
}

func init() {
	pulumi.RegisterOutputType(RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchOutput{})
	pulumi.RegisterOutputType(RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput{})
}
