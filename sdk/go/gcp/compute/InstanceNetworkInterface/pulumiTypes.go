// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceNetworkInterface

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/InstanceNetworkInterfaceAccessConfig"
	"https:/github.com/pulumi/pulumi-gcp/compute/InstanceNetworkInterfaceAliasIpRange"
)

type InstanceNetworkInterface struct {
	AccessConfigs []computeInstanceNetworkInterfaceAccessConfig.InstanceNetworkInterfaceAccessConfig `pulumi:"accessConfigs"`
	AliasIpRanges []computeInstanceNetworkInterfaceAliasIpRange.InstanceNetworkInterfaceAliasIpRange `pulumi:"aliasIpRanges"`
	// A unique name for the resource, required by GCE.
	// Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	Network *string `pulumi:"network"`
	NetworkIp *string `pulumi:"networkIp"`
	Subnetwork *string `pulumi:"subnetwork"`
	SubnetworkProject *string `pulumi:"subnetworkProject"`
}

type InstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput
	ToInstanceNetworkInterfaceOutputWithContext(context.Context) InstanceNetworkInterfaceOutput
}

type InstanceNetworkInterfaceArgs struct {
	AccessConfigs computeInstanceNetworkInterfaceAccessConfig.InstanceNetworkInterfaceAccessConfigArrayInput `pulumi:"accessConfigs"`
	AliasIpRanges computeInstanceNetworkInterfaceAliasIpRange.InstanceNetworkInterfaceAliasIpRangeArrayInput `pulumi:"aliasIpRanges"`
	// A unique name for the resource, required by GCE.
	// Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
	Network pulumi.StringPtrInput `pulumi:"network"`
	NetworkIp pulumi.StringPtrInput `pulumi:"networkIp"`
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
	SubnetworkProject pulumi.StringPtrInput `pulumi:"subnetworkProject"`
}

func (InstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return i.ToInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceOutput)
}

type InstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput
	ToInstanceNetworkInterfaceArrayOutputWithContext(context.Context) InstanceNetworkInterfaceArrayOutput
}

type InstanceNetworkInterfaceArray []InstanceNetworkInterfaceInput

func (InstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return i.ToInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceArrayOutput)
}

type InstanceNetworkInterfaceOutput struct { *pulumi.OutputState }

func (InstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return o
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return o
}

func (o InstanceNetworkInterfaceOutput) AccessConfigs() computeInstanceNetworkInterfaceAccessConfig.InstanceNetworkInterfaceAccessConfigArrayOutput {
	return o.ApplyT(func (v InstanceNetworkInterface) []computeInstanceNetworkInterfaceAccessConfig.InstanceNetworkInterfaceAccessConfig { return v.AccessConfigs }).(computeInstanceNetworkInterfaceAccessConfig.InstanceNetworkInterfaceAccessConfigArrayOutput)
}

func (o InstanceNetworkInterfaceOutput) AliasIpRanges() computeInstanceNetworkInterfaceAliasIpRange.InstanceNetworkInterfaceAliasIpRangeArrayOutput {
	return o.ApplyT(func (v InstanceNetworkInterface) []computeInstanceNetworkInterfaceAliasIpRange.InstanceNetworkInterfaceAliasIpRange { return v.AliasIpRanges }).(computeInstanceNetworkInterfaceAliasIpRange.InstanceNetworkInterfaceAliasIpRangeArrayOutput)
}

// A unique name for the resource, required by GCE.
// Changing this forces a new resource to be created.
func (o InstanceNetworkInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetworkInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o InstanceNetworkInterfaceOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetworkInterface) *string { return v.Network }).(pulumi.StringPtrOutput)
}

func (o InstanceNetworkInterfaceOutput) NetworkIp() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetworkInterface) *string { return v.NetworkIp }).(pulumi.StringPtrOutput)
}

func (o InstanceNetworkInterfaceOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetworkInterface) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

func (o InstanceNetworkInterfaceOutput) SubnetworkProject() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceNetworkInterface) *string { return v.SubnetworkProject }).(pulumi.StringPtrOutput)
}

type InstanceNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (InstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceNetworkInterface {
		return vs[0].([]InstanceNetworkInterface)[vs[1].(int)]
	}).(InstanceNetworkInterfaceOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceArrayOutput{})
}
