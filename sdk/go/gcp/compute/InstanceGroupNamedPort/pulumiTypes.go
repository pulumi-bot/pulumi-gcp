// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceGroupNamedPort

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type InstanceGroupNamedPort struct {
	// The name of the instance group. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name string `pulumi:"name"`
	Port int `pulumi:"port"`
}

type InstanceGroupNamedPortInput interface {
	pulumi.Input

	ToInstanceGroupNamedPortOutput() InstanceGroupNamedPortOutput
	ToInstanceGroupNamedPortOutputWithContext(context.Context) InstanceGroupNamedPortOutput
}

type InstanceGroupNamedPortArgs struct {
	// The name of the instance group. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name pulumi.StringInput `pulumi:"name"`
	Port pulumi.IntInput `pulumi:"port"`
}

func (InstanceGroupNamedPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupNamedPort)(nil)).Elem()
}

func (i InstanceGroupNamedPortArgs) ToInstanceGroupNamedPortOutput() InstanceGroupNamedPortOutput {
	return i.ToInstanceGroupNamedPortOutputWithContext(context.Background())
}

func (i InstanceGroupNamedPortArgs) ToInstanceGroupNamedPortOutputWithContext(ctx context.Context) InstanceGroupNamedPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupNamedPortOutput)
}

type InstanceGroupNamedPortArrayInput interface {
	pulumi.Input

	ToInstanceGroupNamedPortArrayOutput() InstanceGroupNamedPortArrayOutput
	ToInstanceGroupNamedPortArrayOutputWithContext(context.Context) InstanceGroupNamedPortArrayOutput
}

type InstanceGroupNamedPortArray []InstanceGroupNamedPortInput

func (InstanceGroupNamedPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGroupNamedPort)(nil)).Elem()
}

func (i InstanceGroupNamedPortArray) ToInstanceGroupNamedPortArrayOutput() InstanceGroupNamedPortArrayOutput {
	return i.ToInstanceGroupNamedPortArrayOutputWithContext(context.Background())
}

func (i InstanceGroupNamedPortArray) ToInstanceGroupNamedPortArrayOutputWithContext(ctx context.Context) InstanceGroupNamedPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupNamedPortArrayOutput)
}

type InstanceGroupNamedPortOutput struct { *pulumi.OutputState }

func (InstanceGroupNamedPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroupNamedPort)(nil)).Elem()
}

func (o InstanceGroupNamedPortOutput) ToInstanceGroupNamedPortOutput() InstanceGroupNamedPortOutput {
	return o
}

func (o InstanceGroupNamedPortOutput) ToInstanceGroupNamedPortOutputWithContext(ctx context.Context) InstanceGroupNamedPortOutput {
	return o
}

// The name of the instance group. Must be 1-63
// characters long and comply with
// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
// include lowercase letters, numbers, and hyphens.
func (o InstanceGroupNamedPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceGroupNamedPort) string { return v.Name }).(pulumi.StringOutput)
}

func (o InstanceGroupNamedPortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v InstanceGroupNamedPort) int { return v.Port }).(pulumi.IntOutput)
}

type InstanceGroupNamedPortArrayOutput struct { *pulumi.OutputState}

func (InstanceGroupNamedPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGroupNamedPort)(nil)).Elem()
}

func (o InstanceGroupNamedPortArrayOutput) ToInstanceGroupNamedPortArrayOutput() InstanceGroupNamedPortArrayOutput {
	return o
}

func (o InstanceGroupNamedPortArrayOutput) ToInstanceGroupNamedPortArrayOutputWithContext(ctx context.Context) InstanceGroupNamedPortArrayOutput {
	return o
}

func (o InstanceGroupNamedPortArrayOutput) Index(i pulumi.IntInput) InstanceGroupNamedPortOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceGroupNamedPort {
		return vs[0].([]InstanceGroupNamedPort)[vs[1].(int)]
	}).(InstanceGroupNamedPortOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceGroupNamedPortOutput{})
	pulumi.RegisterOutputType(InstanceGroupNamedPortArrayOutput{})
}
