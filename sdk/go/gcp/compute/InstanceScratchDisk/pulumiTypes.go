// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceScratchDisk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type InstanceScratchDisk struct {
	Interface string `pulumi:"interface"`
}

type InstanceScratchDiskInput interface {
	pulumi.Input

	ToInstanceScratchDiskOutput() InstanceScratchDiskOutput
	ToInstanceScratchDiskOutputWithContext(context.Context) InstanceScratchDiskOutput
}

type InstanceScratchDiskArgs struct {
	Interface pulumi.StringInput `pulumi:"interface"`
}

func (InstanceScratchDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceScratchDisk)(nil)).Elem()
}

func (i InstanceScratchDiskArgs) ToInstanceScratchDiskOutput() InstanceScratchDiskOutput {
	return i.ToInstanceScratchDiskOutputWithContext(context.Background())
}

func (i InstanceScratchDiskArgs) ToInstanceScratchDiskOutputWithContext(ctx context.Context) InstanceScratchDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceScratchDiskOutput)
}

type InstanceScratchDiskArrayInput interface {
	pulumi.Input

	ToInstanceScratchDiskArrayOutput() InstanceScratchDiskArrayOutput
	ToInstanceScratchDiskArrayOutputWithContext(context.Context) InstanceScratchDiskArrayOutput
}

type InstanceScratchDiskArray []InstanceScratchDiskInput

func (InstanceScratchDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceScratchDisk)(nil)).Elem()
}

func (i InstanceScratchDiskArray) ToInstanceScratchDiskArrayOutput() InstanceScratchDiskArrayOutput {
	return i.ToInstanceScratchDiskArrayOutputWithContext(context.Background())
}

func (i InstanceScratchDiskArray) ToInstanceScratchDiskArrayOutputWithContext(ctx context.Context) InstanceScratchDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceScratchDiskArrayOutput)
}

type InstanceScratchDiskOutput struct { *pulumi.OutputState }

func (InstanceScratchDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceScratchDisk)(nil)).Elem()
}

func (o InstanceScratchDiskOutput) ToInstanceScratchDiskOutput() InstanceScratchDiskOutput {
	return o
}

func (o InstanceScratchDiskOutput) ToInstanceScratchDiskOutputWithContext(ctx context.Context) InstanceScratchDiskOutput {
	return o
}

func (o InstanceScratchDiskOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceScratchDisk) string { return v.Interface }).(pulumi.StringOutput)
}

type InstanceScratchDiskArrayOutput struct { *pulumi.OutputState}

func (InstanceScratchDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceScratchDisk)(nil)).Elem()
}

func (o InstanceScratchDiskArrayOutput) ToInstanceScratchDiskArrayOutput() InstanceScratchDiskArrayOutput {
	return o
}

func (o InstanceScratchDiskArrayOutput) ToInstanceScratchDiskArrayOutputWithContext(ctx context.Context) InstanceScratchDiskArrayOutput {
	return o
}

func (o InstanceScratchDiskArrayOutput) Index(i pulumi.IntInput) InstanceScratchDiskOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceScratchDisk {
		return vs[0].([]InstanceScratchDisk)[vs[1].(int)]
	}).(InstanceScratchDiskOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceScratchDiskOutput{})
	pulumi.RegisterOutputType(InstanceScratchDiskArrayOutput{})
}
