// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceGuestAccelerator

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type InstanceGuestAccelerator struct {
	Count int `pulumi:"count"`
	Type string `pulumi:"type"`
}

type InstanceGuestAcceleratorInput interface {
	pulumi.Input

	ToInstanceGuestAcceleratorOutput() InstanceGuestAcceleratorOutput
	ToInstanceGuestAcceleratorOutputWithContext(context.Context) InstanceGuestAcceleratorOutput
}

type InstanceGuestAcceleratorArgs struct {
	Count pulumi.IntInput `pulumi:"count"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (InstanceGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGuestAccelerator)(nil)).Elem()
}

func (i InstanceGuestAcceleratorArgs) ToInstanceGuestAcceleratorOutput() InstanceGuestAcceleratorOutput {
	return i.ToInstanceGuestAcceleratorOutputWithContext(context.Background())
}

func (i InstanceGuestAcceleratorArgs) ToInstanceGuestAcceleratorOutputWithContext(ctx context.Context) InstanceGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGuestAcceleratorOutput)
}

type InstanceGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToInstanceGuestAcceleratorArrayOutput() InstanceGuestAcceleratorArrayOutput
	ToInstanceGuestAcceleratorArrayOutputWithContext(context.Context) InstanceGuestAcceleratorArrayOutput
}

type InstanceGuestAcceleratorArray []InstanceGuestAcceleratorInput

func (InstanceGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGuestAccelerator)(nil)).Elem()
}

func (i InstanceGuestAcceleratorArray) ToInstanceGuestAcceleratorArrayOutput() InstanceGuestAcceleratorArrayOutput {
	return i.ToInstanceGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i InstanceGuestAcceleratorArray) ToInstanceGuestAcceleratorArrayOutputWithContext(ctx context.Context) InstanceGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGuestAcceleratorArrayOutput)
}

type InstanceGuestAcceleratorOutput struct { *pulumi.OutputState }

func (InstanceGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGuestAccelerator)(nil)).Elem()
}

func (o InstanceGuestAcceleratorOutput) ToInstanceGuestAcceleratorOutput() InstanceGuestAcceleratorOutput {
	return o
}

func (o InstanceGuestAcceleratorOutput) ToInstanceGuestAcceleratorOutputWithContext(ctx context.Context) InstanceGuestAcceleratorOutput {
	return o
}

func (o InstanceGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func (v InstanceGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

func (o InstanceGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type InstanceGuestAcceleratorArrayOutput struct { *pulumi.OutputState}

func (InstanceGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceGuestAccelerator)(nil)).Elem()
}

func (o InstanceGuestAcceleratorArrayOutput) ToInstanceGuestAcceleratorArrayOutput() InstanceGuestAcceleratorArrayOutput {
	return o
}

func (o InstanceGuestAcceleratorArrayOutput) ToInstanceGuestAcceleratorArrayOutputWithContext(ctx context.Context) InstanceGuestAcceleratorArrayOutput {
	return o
}

func (o InstanceGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) InstanceGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceGuestAccelerator {
		return vs[0].([]InstanceGuestAccelerator)[vs[1].(int)]
	}).(InstanceGuestAcceleratorOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(InstanceGuestAcceleratorArrayOutput{})
}
