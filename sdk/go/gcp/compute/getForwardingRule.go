// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a forwarding rule within GCE from its name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/compute"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := compute.LookupForwardingRule(ctx, &compute.LookupForwardingRuleArgs{
// 			Name: "forwarding-rule-us-east1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupForwardingRule(ctx *pulumi.Context, args *LookupForwardingRuleArgs, opts ...pulumi.InvokeOption) (*LookupForwardingRuleResult, error) {
	var rv LookupForwardingRuleResult
	err := ctx.Invoke("gcp:compute/getForwardingRule:getForwardingRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getForwardingRule.
type LookupForwardingRuleArgs struct {
	// The name of the forwarding rule.
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region in which the resource belongs. If it
	// is not provided, the project region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getForwardingRule.
type LookupForwardingRuleResult struct {
	AllPorts          bool   `pulumi:"allPorts"`
	AllowGlobalAccess bool   `pulumi:"allowGlobalAccess"`
	BackendService    string `pulumi:"backendService"`
	CreationTimestamp string `pulumi:"creationTimestamp"`
	Description       string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string            `pulumi:"id"`
	IpAddress            string            `pulumi:"ipAddress"`
	IpProtocol           string            `pulumi:"ipProtocol"`
	IsMirroringCollector bool              `pulumi:"isMirroringCollector"`
	LabelFingerprint     string            `pulumi:"labelFingerprint"`
	Labels               map[string]string `pulumi:"labels"`
	LoadBalancingScheme  string            `pulumi:"loadBalancingScheme"`
	Name                 string            `pulumi:"name"`
	Network              string            `pulumi:"network"`
	NetworkTier          string            `pulumi:"networkTier"`
	PortRange            string            `pulumi:"portRange"`
	Ports                []string          `pulumi:"ports"`
	Project              *string           `pulumi:"project"`
	Region               *string           `pulumi:"region"`
	SelfLink             string            `pulumi:"selfLink"`
	ServiceLabel         string            `pulumi:"serviceLabel"`
	ServiceName          string            `pulumi:"serviceName"`
	Subnetwork           string            `pulumi:"subnetwork"`
	Target               string            `pulumi:"target"`
}

func LookupForwardingRuleApply(ctx *pulumi.Context, args LookupForwardingRuleApplyInput, opts ...pulumi.InvokeOption) LookupForwardingRuleResultOutput {
	return args.ToLookupForwardingRuleApplyOutput().ApplyT(func(v LookupForwardingRuleArgs) (LookupForwardingRuleResult, error) {
		r, err := LookupForwardingRule(ctx, &v, opts...)
		return *r, err

	}).(LookupForwardingRuleResultOutput)
}

// LookupForwardingRuleApplyInput is an input type that accepts LookupForwardingRuleApplyArgs and LookupForwardingRuleApplyOutput values.
// You can construct a concrete instance of `LookupForwardingRuleApplyInput` via:
//
//          LookupForwardingRuleApplyArgs{...}
type LookupForwardingRuleApplyInput interface {
	pulumi.Input

	ToLookupForwardingRuleApplyOutput() LookupForwardingRuleApplyOutput
	ToLookupForwardingRuleApplyOutputWithContext(context.Context) LookupForwardingRuleApplyOutput
}

// A collection of arguments for invoking getForwardingRule.
type LookupForwardingRuleApplyArgs struct {
	// The name of the forwarding rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region in which the resource belongs. If it
	// is not provided, the project region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupForwardingRuleApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupForwardingRuleArgs)(nil)).Elem()
}

func (i LookupForwardingRuleApplyArgs) ToLookupForwardingRuleApplyOutput() LookupForwardingRuleApplyOutput {
	return i.ToLookupForwardingRuleApplyOutputWithContext(context.Background())
}

func (i LookupForwardingRuleApplyArgs) ToLookupForwardingRuleApplyOutputWithContext(ctx context.Context) LookupForwardingRuleApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupForwardingRuleApplyOutput)
}

// A collection of arguments for invoking getForwardingRule.
type LookupForwardingRuleApplyOutput struct{ *pulumi.OutputState }

func (LookupForwardingRuleApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupForwardingRuleArgs)(nil)).Elem()
}

func (o LookupForwardingRuleApplyOutput) ToLookupForwardingRuleApplyOutput() LookupForwardingRuleApplyOutput {
	return o
}

func (o LookupForwardingRuleApplyOutput) ToLookupForwardingRuleApplyOutputWithContext(ctx context.Context) LookupForwardingRuleApplyOutput {
	return o
}

// The name of the forwarding rule.
func (o LookupForwardingRuleApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The project in which the resource belongs. If it
// is not provided, the provider project is used.
func (o LookupForwardingRuleApplyOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupForwardingRuleArgs) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// The region in which the resource belongs. If it
// is not provided, the project region is used.
func (o LookupForwardingRuleApplyOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupForwardingRuleArgs) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// A collection of values returned by getForwardingRule.
type LookupForwardingRuleResultOutput struct{ *pulumi.OutputState }

func (LookupForwardingRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupForwardingRuleResult)(nil)).Elem()
}

func (o LookupForwardingRuleResultOutput) ToLookupForwardingRuleResultOutput() LookupForwardingRuleResultOutput {
	return o
}

func (o LookupForwardingRuleResultOutput) ToLookupForwardingRuleResultOutputWithContext(ctx context.Context) LookupForwardingRuleResultOutput {
	return o
}

func (o LookupForwardingRuleResultOutput) AllPorts() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) bool { return v.AllPorts }).(pulumi.BoolOutput)
}

func (o LookupForwardingRuleResultOutput) AllowGlobalAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) bool { return v.AllowGlobalAccess }).(pulumi.BoolOutput)
}

func (o LookupForwardingRuleResultOutput) BackendService() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.BackendService }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupForwardingRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.IpProtocol }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) IsMirroringCollector() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) bool { return v.IsMirroringCollector }).(pulumi.BoolOutput)
}

func (o LookupForwardingRuleResultOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.LabelFingerprint }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupForwardingRuleResultOutput) LoadBalancingScheme() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.LoadBalancingScheme }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.Network }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) NetworkTier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.NetworkTier }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.PortRange }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

func (o LookupForwardingRuleResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupForwardingRuleResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupForwardingRuleResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) ServiceLabel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.ServiceLabel }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.Subnetwork }).(pulumi.StringOutput)
}

func (o LookupForwardingRuleResultOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v LookupForwardingRuleResult) string { return v.Target }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupForwardingRuleApplyOutput{})
	pulumi.RegisterOutputType(LookupForwardingRuleResultOutput{})
}
