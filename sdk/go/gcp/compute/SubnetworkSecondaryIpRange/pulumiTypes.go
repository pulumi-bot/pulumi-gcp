// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package SubnetworkSecondaryIpRange

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SubnetworkSecondaryIpRange struct {
	IpCidrRange string `pulumi:"ipCidrRange"`
	RangeName string `pulumi:"rangeName"`
}

type SubnetworkSecondaryIpRangeInput interface {
	pulumi.Input

	ToSubnetworkSecondaryIpRangeOutput() SubnetworkSecondaryIpRangeOutput
	ToSubnetworkSecondaryIpRangeOutputWithContext(context.Context) SubnetworkSecondaryIpRangeOutput
}

type SubnetworkSecondaryIpRangeArgs struct {
	IpCidrRange pulumi.StringInput `pulumi:"ipCidrRange"`
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (SubnetworkSecondaryIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkSecondaryIpRange)(nil)).Elem()
}

func (i SubnetworkSecondaryIpRangeArgs) ToSubnetworkSecondaryIpRangeOutput() SubnetworkSecondaryIpRangeOutput {
	return i.ToSubnetworkSecondaryIpRangeOutputWithContext(context.Background())
}

func (i SubnetworkSecondaryIpRangeArgs) ToSubnetworkSecondaryIpRangeOutputWithContext(ctx context.Context) SubnetworkSecondaryIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkSecondaryIpRangeOutput)
}

type SubnetworkSecondaryIpRangeArrayInput interface {
	pulumi.Input

	ToSubnetworkSecondaryIpRangeArrayOutput() SubnetworkSecondaryIpRangeArrayOutput
	ToSubnetworkSecondaryIpRangeArrayOutputWithContext(context.Context) SubnetworkSecondaryIpRangeArrayOutput
}

type SubnetworkSecondaryIpRangeArray []SubnetworkSecondaryIpRangeInput

func (SubnetworkSecondaryIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetworkSecondaryIpRange)(nil)).Elem()
}

func (i SubnetworkSecondaryIpRangeArray) ToSubnetworkSecondaryIpRangeArrayOutput() SubnetworkSecondaryIpRangeArrayOutput {
	return i.ToSubnetworkSecondaryIpRangeArrayOutputWithContext(context.Background())
}

func (i SubnetworkSecondaryIpRangeArray) ToSubnetworkSecondaryIpRangeArrayOutputWithContext(ctx context.Context) SubnetworkSecondaryIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkSecondaryIpRangeArrayOutput)
}

type SubnetworkSecondaryIpRangeOutput struct { *pulumi.OutputState }

func (SubnetworkSecondaryIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkSecondaryIpRange)(nil)).Elem()
}

func (o SubnetworkSecondaryIpRangeOutput) ToSubnetworkSecondaryIpRangeOutput() SubnetworkSecondaryIpRangeOutput {
	return o
}

func (o SubnetworkSecondaryIpRangeOutput) ToSubnetworkSecondaryIpRangeOutputWithContext(ctx context.Context) SubnetworkSecondaryIpRangeOutput {
	return o
}

func (o SubnetworkSecondaryIpRangeOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func (v SubnetworkSecondaryIpRange) string { return v.IpCidrRange }).(pulumi.StringOutput)
}

func (o SubnetworkSecondaryIpRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func (v SubnetworkSecondaryIpRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type SubnetworkSecondaryIpRangeArrayOutput struct { *pulumi.OutputState}

func (SubnetworkSecondaryIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetworkSecondaryIpRange)(nil)).Elem()
}

func (o SubnetworkSecondaryIpRangeArrayOutput) ToSubnetworkSecondaryIpRangeArrayOutput() SubnetworkSecondaryIpRangeArrayOutput {
	return o
}

func (o SubnetworkSecondaryIpRangeArrayOutput) ToSubnetworkSecondaryIpRangeArrayOutputWithContext(ctx context.Context) SubnetworkSecondaryIpRangeArrayOutput {
	return o
}

func (o SubnetworkSecondaryIpRangeArrayOutput) Index(i pulumi.IntInput) SubnetworkSecondaryIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) SubnetworkSecondaryIpRange {
		return vs[0].([]SubnetworkSecondaryIpRange)[vs[1].(int)]
	}).(SubnetworkSecondaryIpRangeOutput)
}

func init() {
	pulumi.RegisterOutputType(SubnetworkSecondaryIpRangeOutput{})
	pulumi.RegisterOutputType(SubnetworkSecondaryIpRangeArrayOutput{})
}
