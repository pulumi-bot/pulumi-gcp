// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// A Network endpoint represents a IP address and port combination that is
// part of a specific network endpoint group (NEG). NEGs are zonals
// collection of these endpoints for GCP resources within a
// single subnet. **NOTE**: Network endpoints cannot be created outside of a
// network endpoint group.
// 
// 
// To get more information about NetworkEndpoint, see:
// 
// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/networkEndpointGroups)
// * How-to Guides
//     * [Official Documentation](https://cloud.google.com/load-balancing/docs/negs/)
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_network_endpoint.html.markdown.
type NetworkEndpoint struct {
	s *pulumi.ResourceState
}

// NewNetworkEndpoint registers a new resource with the given unique name, arguments, and options.
func NewNetworkEndpoint(ctx *pulumi.Context,
	name string, args *NetworkEndpointArgs, opts ...pulumi.ResourceOpt) (*NetworkEndpoint, error) {
	if args == nil || args.Instance == nil {
		return nil, errors.New("missing required argument 'Instance'")
	}
	if args == nil || args.IpAddress == nil {
		return nil, errors.New("missing required argument 'IpAddress'")
	}
	if args == nil || args.NetworkEndpointGroup == nil {
		return nil, errors.New("missing required argument 'NetworkEndpointGroup'")
	}
	if args == nil || args.Port == nil {
		return nil, errors.New("missing required argument 'Port'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["instance"] = nil
		inputs["ipAddress"] = nil
		inputs["networkEndpointGroup"] = nil
		inputs["port"] = nil
		inputs["project"] = nil
		inputs["zone"] = nil
	} else {
		inputs["instance"] = args.Instance
		inputs["ipAddress"] = args.IpAddress
		inputs["networkEndpointGroup"] = args.NetworkEndpointGroup
		inputs["port"] = args.Port
		inputs["project"] = args.Project
		inputs["zone"] = args.Zone
	}
	s, err := ctx.RegisterResource("gcp:compute/networkEndpoint:NetworkEndpoint", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkEndpoint{s: s}, nil
}

// GetNetworkEndpoint gets an existing NetworkEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkEndpoint(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NetworkEndpointState, opts ...pulumi.ResourceOpt) (*NetworkEndpoint, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["instance"] = state.Instance
		inputs["ipAddress"] = state.IpAddress
		inputs["networkEndpointGroup"] = state.NetworkEndpointGroup
		inputs["port"] = state.Port
		inputs["project"] = state.Project
		inputs["zone"] = state.Zone
	}
	s, err := ctx.ReadResource("gcp:compute/networkEndpoint:NetworkEndpoint", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkEndpoint{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NetworkEndpoint) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NetworkEndpoint) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *NetworkEndpoint) Instance() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["instance"])
}

func (r *NetworkEndpoint) IpAddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipAddress"])
}

func (r *NetworkEndpoint) NetworkEndpointGroup() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["networkEndpointGroup"])
}

func (r *NetworkEndpoint) Port() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["port"])
}

// The ID of the project in which the resource belongs.
// If it is not provided, the provider project is used.
func (r *NetworkEndpoint) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

func (r *NetworkEndpoint) Zone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zone"])
}

// Input properties used for looking up and filtering NetworkEndpoint resources.
type NetworkEndpointState struct {
	Instance interface{}
	IpAddress interface{}
	NetworkEndpointGroup interface{}
	Port interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	Zone interface{}
}

// The set of arguments for constructing a NetworkEndpoint resource.
type NetworkEndpointArgs struct {
	Instance interface{}
	IpAddress interface{}
	NetworkEndpointGroup interface{}
	Port interface{}
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	Project interface{}
	Zone interface{}
}
