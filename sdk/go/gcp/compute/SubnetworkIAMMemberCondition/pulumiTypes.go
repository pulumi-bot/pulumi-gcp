// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package SubnetworkIAMMemberCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SubnetworkIAMMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression string `pulumi:"expression"`
	Title string `pulumi:"title"`
}

type SubnetworkIAMMemberConditionInput interface {
	pulumi.Input

	ToSubnetworkIAMMemberConditionOutput() SubnetworkIAMMemberConditionOutput
	ToSubnetworkIAMMemberConditionOutputWithContext(context.Context) SubnetworkIAMMemberConditionOutput
}

type SubnetworkIAMMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression pulumi.StringInput `pulumi:"expression"`
	Title pulumi.StringInput `pulumi:"title"`
}

func (SubnetworkIAMMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkIAMMemberCondition)(nil)).Elem()
}

func (i SubnetworkIAMMemberConditionArgs) ToSubnetworkIAMMemberConditionOutput() SubnetworkIAMMemberConditionOutput {
	return i.ToSubnetworkIAMMemberConditionOutputWithContext(context.Background())
}

func (i SubnetworkIAMMemberConditionArgs) ToSubnetworkIAMMemberConditionOutputWithContext(ctx context.Context) SubnetworkIAMMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkIAMMemberConditionOutput)
}

func (i SubnetworkIAMMemberConditionArgs) ToSubnetworkIAMMemberConditionPtrOutput() SubnetworkIAMMemberConditionPtrOutput {
	return i.ToSubnetworkIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i SubnetworkIAMMemberConditionArgs) ToSubnetworkIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubnetworkIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkIAMMemberConditionOutput).ToSubnetworkIAMMemberConditionPtrOutputWithContext(ctx)
}

type SubnetworkIAMMemberConditionPtrInput interface {
	pulumi.Input

	ToSubnetworkIAMMemberConditionPtrOutput() SubnetworkIAMMemberConditionPtrOutput
	ToSubnetworkIAMMemberConditionPtrOutputWithContext(context.Context) SubnetworkIAMMemberConditionPtrOutput
}

type subnetworkIAMMemberConditionPtrType SubnetworkIAMMemberConditionArgs

func SubnetworkIAMMemberConditionPtr(v *SubnetworkIAMMemberConditionArgs) SubnetworkIAMMemberConditionPtrInput {	return (*subnetworkIAMMemberConditionPtrType)(v)
}

func (*subnetworkIAMMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkIAMMemberCondition)(nil)).Elem()
}

func (i *subnetworkIAMMemberConditionPtrType) ToSubnetworkIAMMemberConditionPtrOutput() SubnetworkIAMMemberConditionPtrOutput {
	return i.ToSubnetworkIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (i *subnetworkIAMMemberConditionPtrType) ToSubnetworkIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubnetworkIAMMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkIAMMemberConditionPtrOutput)
}

type SubnetworkIAMMemberConditionOutput struct { *pulumi.OutputState }

func (SubnetworkIAMMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkIAMMemberCondition)(nil)).Elem()
}

func (o SubnetworkIAMMemberConditionOutput) ToSubnetworkIAMMemberConditionOutput() SubnetworkIAMMemberConditionOutput {
	return o
}

func (o SubnetworkIAMMemberConditionOutput) ToSubnetworkIAMMemberConditionOutputWithContext(ctx context.Context) SubnetworkIAMMemberConditionOutput {
	return o
}

func (o SubnetworkIAMMemberConditionOutput) ToSubnetworkIAMMemberConditionPtrOutput() SubnetworkIAMMemberConditionPtrOutput {
	return o.ToSubnetworkIAMMemberConditionPtrOutputWithContext(context.Background())
}

func (o SubnetworkIAMMemberConditionOutput) ToSubnetworkIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubnetworkIAMMemberConditionPtrOutput {
	return o.ApplyT(func(v SubnetworkIAMMemberCondition) *SubnetworkIAMMemberCondition {
		return &v
	}).(SubnetworkIAMMemberConditionPtrOutput)
}
func (o SubnetworkIAMMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SubnetworkIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubnetworkIAMMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v SubnetworkIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubnetworkIAMMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v SubnetworkIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type SubnetworkIAMMemberConditionPtrOutput struct { *pulumi.OutputState}

func (SubnetworkIAMMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkIAMMemberCondition)(nil)).Elem()
}

func (o SubnetworkIAMMemberConditionPtrOutput) ToSubnetworkIAMMemberConditionPtrOutput() SubnetworkIAMMemberConditionPtrOutput {
	return o
}

func (o SubnetworkIAMMemberConditionPtrOutput) ToSubnetworkIAMMemberConditionPtrOutputWithContext(ctx context.Context) SubnetworkIAMMemberConditionPtrOutput {
	return o
}

func (o SubnetworkIAMMemberConditionPtrOutput) Elem() SubnetworkIAMMemberConditionOutput {
	return o.ApplyT(func (v *SubnetworkIAMMemberCondition) SubnetworkIAMMemberCondition { return *v }).(SubnetworkIAMMemberConditionOutput)
}

func (o SubnetworkIAMMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SubnetworkIAMMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SubnetworkIAMMemberConditionPtrOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func (v SubnetworkIAMMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o SubnetworkIAMMemberConditionPtrOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func (v SubnetworkIAMMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SubnetworkIAMMemberConditionOutput{})
	pulumi.RegisterOutputType(SubnetworkIAMMemberConditionPtrOutput{})
}
