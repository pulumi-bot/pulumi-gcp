// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getBackendServiceConsistentHash

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/getBackendServiceConsistentHashHttpCooky"
	"https:/github.com/pulumi/pulumi-gcp/compute/getBackendServiceConsistentHashHttpCookyTtl"
)

type GetBackendServiceConsistentHash struct {
	HttpCookies []computegetBackendServiceConsistentHashHttpCooky.GetBackendServiceConsistentHashHttpCooky `pulumi:"httpCookies"`
	HttpHeaderName string `pulumi:"httpHeaderName"`
	MinimumRingSize int `pulumi:"minimumRingSize"`
}

type GetBackendServiceConsistentHashInput interface {
	pulumi.Input

	ToGetBackendServiceConsistentHashOutput() GetBackendServiceConsistentHashOutput
	ToGetBackendServiceConsistentHashOutputWithContext(context.Context) GetBackendServiceConsistentHashOutput
}

type GetBackendServiceConsistentHashArgs struct {
	HttpCookies computegetBackendServiceConsistentHashHttpCooky.GetBackendServiceConsistentHashHttpCookyArrayInput `pulumi:"httpCookies"`
	HttpHeaderName pulumi.StringInput `pulumi:"httpHeaderName"`
	MinimumRingSize pulumi.IntInput `pulumi:"minimumRingSize"`
}

func (GetBackendServiceConsistentHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendServiceConsistentHash)(nil)).Elem()
}

func (i GetBackendServiceConsistentHashArgs) ToGetBackendServiceConsistentHashOutput() GetBackendServiceConsistentHashOutput {
	return i.ToGetBackendServiceConsistentHashOutputWithContext(context.Background())
}

func (i GetBackendServiceConsistentHashArgs) ToGetBackendServiceConsistentHashOutputWithContext(ctx context.Context) GetBackendServiceConsistentHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendServiceConsistentHashOutput)
}

type GetBackendServiceConsistentHashArrayInput interface {
	pulumi.Input

	ToGetBackendServiceConsistentHashArrayOutput() GetBackendServiceConsistentHashArrayOutput
	ToGetBackendServiceConsistentHashArrayOutputWithContext(context.Context) GetBackendServiceConsistentHashArrayOutput
}

type GetBackendServiceConsistentHashArray []GetBackendServiceConsistentHashInput

func (GetBackendServiceConsistentHashArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendServiceConsistentHash)(nil)).Elem()
}

func (i GetBackendServiceConsistentHashArray) ToGetBackendServiceConsistentHashArrayOutput() GetBackendServiceConsistentHashArrayOutput {
	return i.ToGetBackendServiceConsistentHashArrayOutputWithContext(context.Background())
}

func (i GetBackendServiceConsistentHashArray) ToGetBackendServiceConsistentHashArrayOutputWithContext(ctx context.Context) GetBackendServiceConsistentHashArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendServiceConsistentHashArrayOutput)
}

type GetBackendServiceConsistentHashOutput struct { *pulumi.OutputState }

func (GetBackendServiceConsistentHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendServiceConsistentHash)(nil)).Elem()
}

func (o GetBackendServiceConsistentHashOutput) ToGetBackendServiceConsistentHashOutput() GetBackendServiceConsistentHashOutput {
	return o
}

func (o GetBackendServiceConsistentHashOutput) ToGetBackendServiceConsistentHashOutputWithContext(ctx context.Context) GetBackendServiceConsistentHashOutput {
	return o
}

func (o GetBackendServiceConsistentHashOutput) HttpCookies() computegetBackendServiceConsistentHashHttpCooky.GetBackendServiceConsistentHashHttpCookyArrayOutput {
	return o.ApplyT(func (v GetBackendServiceConsistentHash) []computegetBackendServiceConsistentHashHttpCooky.GetBackendServiceConsistentHashHttpCooky { return v.HttpCookies }).(computegetBackendServiceConsistentHashHttpCooky.GetBackendServiceConsistentHashHttpCookyArrayOutput)
}

func (o GetBackendServiceConsistentHashOutput) HttpHeaderName() pulumi.StringOutput {
	return o.ApplyT(func (v GetBackendServiceConsistentHash) string { return v.HttpHeaderName }).(pulumi.StringOutput)
}

func (o GetBackendServiceConsistentHashOutput) MinimumRingSize() pulumi.IntOutput {
	return o.ApplyT(func (v GetBackendServiceConsistentHash) int { return v.MinimumRingSize }).(pulumi.IntOutput)
}

type GetBackendServiceConsistentHashArrayOutput struct { *pulumi.OutputState}

func (GetBackendServiceConsistentHashArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendServiceConsistentHash)(nil)).Elem()
}

func (o GetBackendServiceConsistentHashArrayOutput) ToGetBackendServiceConsistentHashArrayOutput() GetBackendServiceConsistentHashArrayOutput {
	return o
}

func (o GetBackendServiceConsistentHashArrayOutput) ToGetBackendServiceConsistentHashArrayOutputWithContext(ctx context.Context) GetBackendServiceConsistentHashArrayOutput {
	return o
}

func (o GetBackendServiceConsistentHashArrayOutput) Index(i pulumi.IntInput) GetBackendServiceConsistentHashOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetBackendServiceConsistentHash {
		return vs[0].([]GetBackendServiceConsistentHash)[vs[1].(int)]
	}).(GetBackendServiceConsistentHashOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBackendServiceConsistentHashOutput{})
	pulumi.RegisterOutputType(GetBackendServiceConsistentHashArrayOutput{})
}
