// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceFromTemplateGuestAccelerator

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type InstanceFromTemplateGuestAccelerator struct {
	Count int `pulumi:"count"`
	Type string `pulumi:"type"`
}

type InstanceFromTemplateGuestAcceleratorInput interface {
	pulumi.Input

	ToInstanceFromTemplateGuestAcceleratorOutput() InstanceFromTemplateGuestAcceleratorOutput
	ToInstanceFromTemplateGuestAcceleratorOutputWithContext(context.Context) InstanceFromTemplateGuestAcceleratorOutput
}

type InstanceFromTemplateGuestAcceleratorArgs struct {
	Count pulumi.IntInput `pulumi:"count"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (InstanceFromTemplateGuestAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFromTemplateGuestAccelerator)(nil)).Elem()
}

func (i InstanceFromTemplateGuestAcceleratorArgs) ToInstanceFromTemplateGuestAcceleratorOutput() InstanceFromTemplateGuestAcceleratorOutput {
	return i.ToInstanceFromTemplateGuestAcceleratorOutputWithContext(context.Background())
}

func (i InstanceFromTemplateGuestAcceleratorArgs) ToInstanceFromTemplateGuestAcceleratorOutputWithContext(ctx context.Context) InstanceFromTemplateGuestAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFromTemplateGuestAcceleratorOutput)
}

type InstanceFromTemplateGuestAcceleratorArrayInput interface {
	pulumi.Input

	ToInstanceFromTemplateGuestAcceleratorArrayOutput() InstanceFromTemplateGuestAcceleratorArrayOutput
	ToInstanceFromTemplateGuestAcceleratorArrayOutputWithContext(context.Context) InstanceFromTemplateGuestAcceleratorArrayOutput
}

type InstanceFromTemplateGuestAcceleratorArray []InstanceFromTemplateGuestAcceleratorInput

func (InstanceFromTemplateGuestAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceFromTemplateGuestAccelerator)(nil)).Elem()
}

func (i InstanceFromTemplateGuestAcceleratorArray) ToInstanceFromTemplateGuestAcceleratorArrayOutput() InstanceFromTemplateGuestAcceleratorArrayOutput {
	return i.ToInstanceFromTemplateGuestAcceleratorArrayOutputWithContext(context.Background())
}

func (i InstanceFromTemplateGuestAcceleratorArray) ToInstanceFromTemplateGuestAcceleratorArrayOutputWithContext(ctx context.Context) InstanceFromTemplateGuestAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFromTemplateGuestAcceleratorArrayOutput)
}

type InstanceFromTemplateGuestAcceleratorOutput struct { *pulumi.OutputState }

func (InstanceFromTemplateGuestAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFromTemplateGuestAccelerator)(nil)).Elem()
}

func (o InstanceFromTemplateGuestAcceleratorOutput) ToInstanceFromTemplateGuestAcceleratorOutput() InstanceFromTemplateGuestAcceleratorOutput {
	return o
}

func (o InstanceFromTemplateGuestAcceleratorOutput) ToInstanceFromTemplateGuestAcceleratorOutputWithContext(ctx context.Context) InstanceFromTemplateGuestAcceleratorOutput {
	return o
}

func (o InstanceFromTemplateGuestAcceleratorOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func (v InstanceFromTemplateGuestAccelerator) int { return v.Count }).(pulumi.IntOutput)
}

func (o InstanceFromTemplateGuestAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceFromTemplateGuestAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type InstanceFromTemplateGuestAcceleratorArrayOutput struct { *pulumi.OutputState}

func (InstanceFromTemplateGuestAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceFromTemplateGuestAccelerator)(nil)).Elem()
}

func (o InstanceFromTemplateGuestAcceleratorArrayOutput) ToInstanceFromTemplateGuestAcceleratorArrayOutput() InstanceFromTemplateGuestAcceleratorArrayOutput {
	return o
}

func (o InstanceFromTemplateGuestAcceleratorArrayOutput) ToInstanceFromTemplateGuestAcceleratorArrayOutputWithContext(ctx context.Context) InstanceFromTemplateGuestAcceleratorArrayOutput {
	return o
}

func (o InstanceFromTemplateGuestAcceleratorArrayOutput) Index(i pulumi.IntInput) InstanceFromTemplateGuestAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceFromTemplateGuestAccelerator {
		return vs[0].([]InstanceFromTemplateGuestAccelerator)[vs[1].(int)]
	}).(InstanceFromTemplateGuestAcceleratorOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceFromTemplateGuestAcceleratorOutput{})
	pulumi.RegisterOutputType(InstanceFromTemplateGuestAcceleratorArrayOutput{})
}
