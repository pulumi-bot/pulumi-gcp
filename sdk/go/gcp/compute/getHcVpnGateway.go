// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a HA VPN Gateway within GCE from its name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/compute"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := compute.GetHcVpnGateway(ctx, &compute.GetHcVpnGatewayArgs{
// 			Name: "foobar",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetHcVpnGateway(ctx *pulumi.Context, args *GetHcVpnGatewayArgs, opts ...pulumi.InvokeOption) (*GetHcVpnGatewayResult, error) {
	var rv GetHcVpnGatewayResult
	err := ctx.Invoke("gcp:compute/getHcVpnGateway:getHcVpnGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHcVpnGateway.
type GetHcVpnGatewayArgs struct {
	// The name of the forwarding rule.
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region in which the resource belongs. If it
	// is not provided, the project region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getHcVpnGateway.
type GetHcVpnGatewayResult struct {
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                        `pulumi:"id"`
	Name          string                        `pulumi:"name"`
	Network       string                        `pulumi:"network"`
	Project       *string                       `pulumi:"project"`
	Region        *string                       `pulumi:"region"`
	SelfLink      string                        `pulumi:"selfLink"`
	VpnInterfaces []GetHcVpnGatewayVpnInterface `pulumi:"vpnInterfaces"`
}

func GetHcVpnGatewayApply(ctx *pulumi.Context, args GetHcVpnGatewayApplyInput, opts ...pulumi.InvokeOption) GetHcVpnGatewayResultOutput {
	return args.ToGetHcVpnGatewayApplyOutput().ApplyT(func(v GetHcVpnGatewayArgs) (GetHcVpnGatewayResult, error) {
		r, err := GetHcVpnGateway(ctx, &v, opts...)
		return *r, err

	}).(GetHcVpnGatewayResultOutput)
}

// GetHcVpnGatewayApplyInput is an input type that accepts GetHcVpnGatewayApplyArgs and GetHcVpnGatewayApplyOutput values.
// You can construct a concrete instance of `GetHcVpnGatewayApplyInput` via:
//
//          GetHcVpnGatewayApplyArgs{...}
type GetHcVpnGatewayApplyInput interface {
	pulumi.Input

	ToGetHcVpnGatewayApplyOutput() GetHcVpnGatewayApplyOutput
	ToGetHcVpnGatewayApplyOutputWithContext(context.Context) GetHcVpnGatewayApplyOutput
}

// A collection of arguments for invoking getHcVpnGateway.
type GetHcVpnGatewayApplyArgs struct {
	// The name of the forwarding rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The region in which the resource belongs. If it
	// is not provided, the project region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetHcVpnGatewayApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHcVpnGatewayArgs)(nil)).Elem()
}

func (i GetHcVpnGatewayApplyArgs) ToGetHcVpnGatewayApplyOutput() GetHcVpnGatewayApplyOutput {
	return i.ToGetHcVpnGatewayApplyOutputWithContext(context.Background())
}

func (i GetHcVpnGatewayApplyArgs) ToGetHcVpnGatewayApplyOutputWithContext(ctx context.Context) GetHcVpnGatewayApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHcVpnGatewayApplyOutput)
}

// A collection of arguments for invoking getHcVpnGateway.
type GetHcVpnGatewayApplyOutput struct{ *pulumi.OutputState }

func (GetHcVpnGatewayApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHcVpnGatewayArgs)(nil)).Elem()
}

func (o GetHcVpnGatewayApplyOutput) ToGetHcVpnGatewayApplyOutput() GetHcVpnGatewayApplyOutput {
	return o
}

func (o GetHcVpnGatewayApplyOutput) ToGetHcVpnGatewayApplyOutputWithContext(ctx context.Context) GetHcVpnGatewayApplyOutput {
	return o
}

// The name of the forwarding rule.
func (o GetHcVpnGatewayApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHcVpnGatewayArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The project in which the resource belongs. If it
// is not provided, the provider project is used.
func (o GetHcVpnGatewayApplyOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHcVpnGatewayArgs) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// The region in which the resource belongs. If it
// is not provided, the project region is used.
func (o GetHcVpnGatewayApplyOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHcVpnGatewayArgs) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// A collection of values returned by getHcVpnGateway.
type GetHcVpnGatewayResultOutput struct{ *pulumi.OutputState }

func (GetHcVpnGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHcVpnGatewayResult)(nil)).Elem()
}

func (o GetHcVpnGatewayResultOutput) ToGetHcVpnGatewayResultOutput() GetHcVpnGatewayResultOutput {
	return o
}

func (o GetHcVpnGatewayResultOutput) ToGetHcVpnGatewayResultOutputWithContext(ctx context.Context) GetHcVpnGatewayResultOutput {
	return o
}

func (o GetHcVpnGatewayResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHcVpnGatewayResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHcVpnGatewayResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHcVpnGatewayResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetHcVpnGatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHcVpnGatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetHcVpnGatewayResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetHcVpnGatewayResult) string { return v.Network }).(pulumi.StringOutput)
}

func (o GetHcVpnGatewayResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHcVpnGatewayResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o GetHcVpnGatewayResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHcVpnGatewayResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetHcVpnGatewayResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHcVpnGatewayResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

func (o GetHcVpnGatewayResultOutput) VpnInterfaces() GetHcVpnGatewayVpnInterfaceArrayOutput {
	return o.ApplyT(func(v GetHcVpnGatewayResult) []GetHcVpnGatewayVpnInterface { return v.VpnInterfaces }).(GetHcVpnGatewayVpnInterfaceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHcVpnGatewayApplyOutput{})
	pulumi.RegisterOutputType(GetHcVpnGatewayResultOutput{})
}
