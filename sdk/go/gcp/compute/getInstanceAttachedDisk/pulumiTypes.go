// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getInstanceAttachedDisk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetInstanceAttachedDisk struct {
	// Name with which the attached disk is accessible
	// under `/dev/disk/by-id/`
	DeviceName string `pulumi:"deviceName"`
	DiskEncryptionKeyRaw string `pulumi:"diskEncryptionKeyRaw"`
	DiskEncryptionKeySha256 string `pulumi:"diskEncryptionKeySha256"`
	KmsKeySelfLink string `pulumi:"kmsKeySelfLink"`
	// Read/write mode for the disk. One of `"READ_ONLY"` or `"READ_WRITE"`.
	Mode string `pulumi:"mode"`
	// The name or selfLink of the disk attached to this instance.
	Source string `pulumi:"source"`
}

type GetInstanceAttachedDiskInput interface {
	pulumi.Input

	ToGetInstanceAttachedDiskOutput() GetInstanceAttachedDiskOutput
	ToGetInstanceAttachedDiskOutputWithContext(context.Context) GetInstanceAttachedDiskOutput
}

type GetInstanceAttachedDiskArgs struct {
	// Name with which the attached disk is accessible
	// under `/dev/disk/by-id/`
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	DiskEncryptionKeyRaw pulumi.StringInput `pulumi:"diskEncryptionKeyRaw"`
	DiskEncryptionKeySha256 pulumi.StringInput `pulumi:"diskEncryptionKeySha256"`
	KmsKeySelfLink pulumi.StringInput `pulumi:"kmsKeySelfLink"`
	// Read/write mode for the disk. One of `"READ_ONLY"` or `"READ_WRITE"`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name or selfLink of the disk attached to this instance.
	Source pulumi.StringInput `pulumi:"source"`
}

func (GetInstanceAttachedDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAttachedDisk)(nil)).Elem()
}

func (i GetInstanceAttachedDiskArgs) ToGetInstanceAttachedDiskOutput() GetInstanceAttachedDiskOutput {
	return i.ToGetInstanceAttachedDiskOutputWithContext(context.Background())
}

func (i GetInstanceAttachedDiskArgs) ToGetInstanceAttachedDiskOutputWithContext(ctx context.Context) GetInstanceAttachedDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAttachedDiskOutput)
}

type GetInstanceAttachedDiskArrayInput interface {
	pulumi.Input

	ToGetInstanceAttachedDiskArrayOutput() GetInstanceAttachedDiskArrayOutput
	ToGetInstanceAttachedDiskArrayOutputWithContext(context.Context) GetInstanceAttachedDiskArrayOutput
}

type GetInstanceAttachedDiskArray []GetInstanceAttachedDiskInput

func (GetInstanceAttachedDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAttachedDisk)(nil)).Elem()
}

func (i GetInstanceAttachedDiskArray) ToGetInstanceAttachedDiskArrayOutput() GetInstanceAttachedDiskArrayOutput {
	return i.ToGetInstanceAttachedDiskArrayOutputWithContext(context.Background())
}

func (i GetInstanceAttachedDiskArray) ToGetInstanceAttachedDiskArrayOutputWithContext(ctx context.Context) GetInstanceAttachedDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAttachedDiskArrayOutput)
}

type GetInstanceAttachedDiskOutput struct { *pulumi.OutputState }

func (GetInstanceAttachedDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAttachedDisk)(nil)).Elem()
}

func (o GetInstanceAttachedDiskOutput) ToGetInstanceAttachedDiskOutput() GetInstanceAttachedDiskOutput {
	return o
}

func (o GetInstanceAttachedDiskOutput) ToGetInstanceAttachedDiskOutputWithContext(ctx context.Context) GetInstanceAttachedDiskOutput {
	return o
}

// Name with which the attached disk is accessible
// under `/dev/disk/by-id/`
func (o GetInstanceAttachedDiskOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceAttachedDisk) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o GetInstanceAttachedDiskOutput) DiskEncryptionKeyRaw() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceAttachedDisk) string { return v.DiskEncryptionKeyRaw }).(pulumi.StringOutput)
}

func (o GetInstanceAttachedDiskOutput) DiskEncryptionKeySha256() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceAttachedDisk) string { return v.DiskEncryptionKeySha256 }).(pulumi.StringOutput)
}

func (o GetInstanceAttachedDiskOutput) KmsKeySelfLink() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceAttachedDisk) string { return v.KmsKeySelfLink }).(pulumi.StringOutput)
}

// Read/write mode for the disk. One of `"READ_ONLY"` or `"READ_WRITE"`.
func (o GetInstanceAttachedDiskOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceAttachedDisk) string { return v.Mode }).(pulumi.StringOutput)
}

// The name or selfLink of the disk attached to this instance.
func (o GetInstanceAttachedDiskOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceAttachedDisk) string { return v.Source }).(pulumi.StringOutput)
}

type GetInstanceAttachedDiskArrayOutput struct { *pulumi.OutputState}

func (GetInstanceAttachedDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAttachedDisk)(nil)).Elem()
}

func (o GetInstanceAttachedDiskArrayOutput) ToGetInstanceAttachedDiskArrayOutput() GetInstanceAttachedDiskArrayOutput {
	return o
}

func (o GetInstanceAttachedDiskArrayOutput) ToGetInstanceAttachedDiskArrayOutputWithContext(ctx context.Context) GetInstanceAttachedDiskArrayOutput {
	return o
}

func (o GetInstanceAttachedDiskArrayOutput) Index(i pulumi.IntInput) GetInstanceAttachedDiskOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetInstanceAttachedDisk {
		return vs[0].([]GetInstanceAttachedDisk)[vs[1].(int)]
	}).(GetInstanceAttachedDiskOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceAttachedDiskOutput{})
	pulumi.RegisterOutputType(GetInstanceAttachedDiskArrayOutput{})
}
