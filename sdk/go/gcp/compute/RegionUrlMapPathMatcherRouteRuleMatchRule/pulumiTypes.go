// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RegionUrlMapPathMatcherRouteRuleMatchRule

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilter"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilterFilterLabel"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatch"
)

type RegionUrlMapPathMatcherRouteRuleMatchRule struct {
	FullPathMatch *string `pulumi:"fullPathMatch"`
	HeaderMatches []computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch `pulumi:"headerMatches"`
	IgnoreCase *bool `pulumi:"ignoreCase"`
	MetadataFilters []computeRegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilter.RegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilter `pulumi:"metadataFilters"`
	PrefixMatch *string `pulumi:"prefixMatch"`
	QueryParameterMatches []computeRegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatch `pulumi:"queryParameterMatches"`
	RegexMatch *string `pulumi:"regexMatch"`
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleInput interface {
	pulumi.Input

	ToRegionUrlMapPathMatcherRouteRuleMatchRuleOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleOutput
	ToRegionUrlMapPathMatcherRouteRuleMatchRuleOutputWithContext(context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleOutput
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleArgs struct {
	FullPathMatch pulumi.StringPtrInput `pulumi:"fullPathMatch"`
	HeaderMatches computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayInput `pulumi:"headerMatches"`
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	MetadataFilters computeRegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilter.RegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilterArrayInput `pulumi:"metadataFilters"`
	PrefixMatch pulumi.StringPtrInput `pulumi:"prefixMatch"`
	QueryParameterMatches computeRegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatchArrayInput `pulumi:"queryParameterMatches"`
	RegexMatch pulumi.StringPtrInput `pulumi:"regexMatch"`
}

func (RegionUrlMapPathMatcherRouteRuleMatchRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionUrlMapPathMatcherRouteRuleMatchRule)(nil)).Elem()
}

func (i RegionUrlMapPathMatcherRouteRuleMatchRuleArgs) ToRegionUrlMapPathMatcherRouteRuleMatchRuleOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleOutput {
	return i.ToRegionUrlMapPathMatcherRouteRuleMatchRuleOutputWithContext(context.Background())
}

func (i RegionUrlMapPathMatcherRouteRuleMatchRuleArgs) ToRegionUrlMapPathMatcherRouteRuleMatchRuleOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionUrlMapPathMatcherRouteRuleMatchRuleOutput)
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleArrayInput interface {
	pulumi.Input

	ToRegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput
	ToRegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutputWithContext(context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleArray []RegionUrlMapPathMatcherRouteRuleMatchRuleInput

func (RegionUrlMapPathMatcherRouteRuleMatchRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionUrlMapPathMatcherRouteRuleMatchRule)(nil)).Elem()
}

func (i RegionUrlMapPathMatcherRouteRuleMatchRuleArray) ToRegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput {
	return i.ToRegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutputWithContext(context.Background())
}

func (i RegionUrlMapPathMatcherRouteRuleMatchRuleArray) ToRegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput)
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleOutput struct { *pulumi.OutputState }

func (RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionUrlMapPathMatcherRouteRuleMatchRule)(nil)).Elem()
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) ToRegionUrlMapPathMatcherRouteRuleMatchRuleOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) ToRegionUrlMapPathMatcherRouteRuleMatchRuleOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) FullPathMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRule) *string { return v.FullPathMatch }).(pulumi.StringPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) HeaderMatches() computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRule) []computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch { return v.HeaderMatches }).(computeRegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchArrayOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRule) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) MetadataFilters() computeRegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilter.RegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilterArrayOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRule) []computeRegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilter.RegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilter { return v.MetadataFilters }).(computeRegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilter.RegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilterArrayOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) PrefixMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRule) *string { return v.PrefixMatch }).(pulumi.StringPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) QueryParameterMatches() computeRegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatchArrayOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRule) []computeRegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatch { return v.QueryParameterMatches }).(computeRegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatch.RegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatchArrayOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleOutput) RegexMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRuleMatchRule) *string { return v.RegexMatch }).(pulumi.StringPtrOutput)
}

type RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput struct { *pulumi.OutputState}

func (RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionUrlMapPathMatcherRouteRuleMatchRule)(nil)).Elem()
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput) ToRegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput() RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput) ToRegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput) Index(i pulumi.IntInput) RegionUrlMapPathMatcherRouteRuleMatchRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RegionUrlMapPathMatcherRouteRuleMatchRule {
		return vs[0].([]RegionUrlMapPathMatcherRouteRuleMatchRule)[vs[1].(int)]
	}).(RegionUrlMapPathMatcherRouteRuleMatchRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(RegionUrlMapPathMatcherRouteRuleMatchRuleOutput{})
	pulumi.RegisterOutputType(RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput{})
}
