// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RouterNatSubnetwork

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RouterNatSubnetwork struct {
	Name string `pulumi:"name"`
	SecondaryIpRangeNames []string `pulumi:"secondaryIpRangeNames"`
	SourceIpRangesToNats []string `pulumi:"sourceIpRangesToNats"`
}

type RouterNatSubnetworkInput interface {
	pulumi.Input

	ToRouterNatSubnetworkOutput() RouterNatSubnetworkOutput
	ToRouterNatSubnetworkOutputWithContext(context.Context) RouterNatSubnetworkOutput
}

type RouterNatSubnetworkArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	SecondaryIpRangeNames pulumi.StringArrayInput `pulumi:"secondaryIpRangeNames"`
	SourceIpRangesToNats pulumi.StringArrayInput `pulumi:"sourceIpRangesToNats"`
}

func (RouterNatSubnetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatSubnetwork)(nil)).Elem()
}

func (i RouterNatSubnetworkArgs) ToRouterNatSubnetworkOutput() RouterNatSubnetworkOutput {
	return i.ToRouterNatSubnetworkOutputWithContext(context.Background())
}

func (i RouterNatSubnetworkArgs) ToRouterNatSubnetworkOutputWithContext(ctx context.Context) RouterNatSubnetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterNatSubnetworkOutput)
}

type RouterNatSubnetworkArrayInput interface {
	pulumi.Input

	ToRouterNatSubnetworkArrayOutput() RouterNatSubnetworkArrayOutput
	ToRouterNatSubnetworkArrayOutputWithContext(context.Context) RouterNatSubnetworkArrayOutput
}

type RouterNatSubnetworkArray []RouterNatSubnetworkInput

func (RouterNatSubnetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterNatSubnetwork)(nil)).Elem()
}

func (i RouterNatSubnetworkArray) ToRouterNatSubnetworkArrayOutput() RouterNatSubnetworkArrayOutput {
	return i.ToRouterNatSubnetworkArrayOutputWithContext(context.Background())
}

func (i RouterNatSubnetworkArray) ToRouterNatSubnetworkArrayOutputWithContext(ctx context.Context) RouterNatSubnetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterNatSubnetworkArrayOutput)
}

type RouterNatSubnetworkOutput struct { *pulumi.OutputState }

func (RouterNatSubnetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterNatSubnetwork)(nil)).Elem()
}

func (o RouterNatSubnetworkOutput) ToRouterNatSubnetworkOutput() RouterNatSubnetworkOutput {
	return o
}

func (o RouterNatSubnetworkOutput) ToRouterNatSubnetworkOutputWithContext(ctx context.Context) RouterNatSubnetworkOutput {
	return o
}

func (o RouterNatSubnetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v RouterNatSubnetwork) string { return v.Name }).(pulumi.StringOutput)
}

func (o RouterNatSubnetworkOutput) SecondaryIpRangeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v RouterNatSubnetwork) []string { return v.SecondaryIpRangeNames }).(pulumi.StringArrayOutput)
}

func (o RouterNatSubnetworkOutput) SourceIpRangesToNats() pulumi.StringArrayOutput {
	return o.ApplyT(func (v RouterNatSubnetwork) []string { return v.SourceIpRangesToNats }).(pulumi.StringArrayOutput)
}

type RouterNatSubnetworkArrayOutput struct { *pulumi.OutputState}

func (RouterNatSubnetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterNatSubnetwork)(nil)).Elem()
}

func (o RouterNatSubnetworkArrayOutput) ToRouterNatSubnetworkArrayOutput() RouterNatSubnetworkArrayOutput {
	return o
}

func (o RouterNatSubnetworkArrayOutput) ToRouterNatSubnetworkArrayOutputWithContext(ctx context.Context) RouterNatSubnetworkArrayOutput {
	return o
}

func (o RouterNatSubnetworkArrayOutput) Index(i pulumi.IntInput) RouterNatSubnetworkOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RouterNatSubnetwork {
		return vs[0].([]RouterNatSubnetwork)[vs[1].(int)]
	}).(RouterNatSubnetworkOutput)
}

func init() {
	pulumi.RegisterOutputType(RouterNatSubnetworkOutput{})
	pulumi.RegisterOutputType(RouterNatSubnetworkArrayOutput{})
}
