// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceFromTemplateScratchDisk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type InstanceFromTemplateScratchDisk struct {
	Interface string `pulumi:"interface"`
}

type InstanceFromTemplateScratchDiskInput interface {
	pulumi.Input

	ToInstanceFromTemplateScratchDiskOutput() InstanceFromTemplateScratchDiskOutput
	ToInstanceFromTemplateScratchDiskOutputWithContext(context.Context) InstanceFromTemplateScratchDiskOutput
}

type InstanceFromTemplateScratchDiskArgs struct {
	Interface pulumi.StringInput `pulumi:"interface"`
}

func (InstanceFromTemplateScratchDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFromTemplateScratchDisk)(nil)).Elem()
}

func (i InstanceFromTemplateScratchDiskArgs) ToInstanceFromTemplateScratchDiskOutput() InstanceFromTemplateScratchDiskOutput {
	return i.ToInstanceFromTemplateScratchDiskOutputWithContext(context.Background())
}

func (i InstanceFromTemplateScratchDiskArgs) ToInstanceFromTemplateScratchDiskOutputWithContext(ctx context.Context) InstanceFromTemplateScratchDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFromTemplateScratchDiskOutput)
}

type InstanceFromTemplateScratchDiskArrayInput interface {
	pulumi.Input

	ToInstanceFromTemplateScratchDiskArrayOutput() InstanceFromTemplateScratchDiskArrayOutput
	ToInstanceFromTemplateScratchDiskArrayOutputWithContext(context.Context) InstanceFromTemplateScratchDiskArrayOutput
}

type InstanceFromTemplateScratchDiskArray []InstanceFromTemplateScratchDiskInput

func (InstanceFromTemplateScratchDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceFromTemplateScratchDisk)(nil)).Elem()
}

func (i InstanceFromTemplateScratchDiskArray) ToInstanceFromTemplateScratchDiskArrayOutput() InstanceFromTemplateScratchDiskArrayOutput {
	return i.ToInstanceFromTemplateScratchDiskArrayOutputWithContext(context.Background())
}

func (i InstanceFromTemplateScratchDiskArray) ToInstanceFromTemplateScratchDiskArrayOutputWithContext(ctx context.Context) InstanceFromTemplateScratchDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFromTemplateScratchDiskArrayOutput)
}

type InstanceFromTemplateScratchDiskOutput struct { *pulumi.OutputState }

func (InstanceFromTemplateScratchDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFromTemplateScratchDisk)(nil)).Elem()
}

func (o InstanceFromTemplateScratchDiskOutput) ToInstanceFromTemplateScratchDiskOutput() InstanceFromTemplateScratchDiskOutput {
	return o
}

func (o InstanceFromTemplateScratchDiskOutput) ToInstanceFromTemplateScratchDiskOutputWithContext(ctx context.Context) InstanceFromTemplateScratchDiskOutput {
	return o
}

func (o InstanceFromTemplateScratchDiskOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceFromTemplateScratchDisk) string { return v.Interface }).(pulumi.StringOutput)
}

type InstanceFromTemplateScratchDiskArrayOutput struct { *pulumi.OutputState}

func (InstanceFromTemplateScratchDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceFromTemplateScratchDisk)(nil)).Elem()
}

func (o InstanceFromTemplateScratchDiskArrayOutput) ToInstanceFromTemplateScratchDiskArrayOutput() InstanceFromTemplateScratchDiskArrayOutput {
	return o
}

func (o InstanceFromTemplateScratchDiskArrayOutput) ToInstanceFromTemplateScratchDiskArrayOutputWithContext(ctx context.Context) InstanceFromTemplateScratchDiskArrayOutput {
	return o
}

func (o InstanceFromTemplateScratchDiskArrayOutput) Index(i pulumi.IntInput) InstanceFromTemplateScratchDiskOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceFromTemplateScratchDisk {
		return vs[0].([]InstanceFromTemplateScratchDisk)[vs[1].(int)]
	}).(InstanceFromTemplateScratchDiskOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceFromTemplateScratchDiskOutput{})
	pulumi.RegisterOutputType(InstanceFromTemplateScratchDiskArrayOutput{})
}
