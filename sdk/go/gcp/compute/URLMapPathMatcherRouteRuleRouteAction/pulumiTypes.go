// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package URLMapPathMatcherRouteRuleRouteAction

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionCorsPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyAbort"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyDelayFixedDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionRetryPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionRetryPolicyPerTryTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionUrlRewrite"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendService"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderActionResponseHeadersToAdd"
)

type URLMapPathMatcherRouteRuleRouteAction struct {
	CorsPolicy *computeURLMapPathMatcherRouteRuleRouteActionCorsPolicy.URLMapPathMatcherRouteRuleRouteActionCorsPolicy `pulumi:"corsPolicy"`
	FaultInjectionPolicy *computeURLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy `pulumi:"faultInjectionPolicy"`
	RequestMirrorPolicy *computeURLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy `pulumi:"requestMirrorPolicy"`
	RetryPolicy *computeURLMapPathMatcherRouteRuleRouteActionRetryPolicy.URLMapPathMatcherRouteRuleRouteActionRetryPolicy `pulumi:"retryPolicy"`
	Timeout *computeURLMapPathMatcherRouteRuleRouteActionTimeout.URLMapPathMatcherRouteRuleRouteActionTimeout `pulumi:"timeout"`
	UrlRewrite *computeURLMapPathMatcherRouteRuleRouteActionUrlRewrite.URLMapPathMatcherRouteRuleRouteActionUrlRewrite `pulumi:"urlRewrite"`
	WeightedBackendServices []computeURLMapPathMatcherRouteRuleRouteActionWeightedBackendService.URLMapPathMatcherRouteRuleRouteActionWeightedBackendService `pulumi:"weightedBackendServices"`
}

type URLMapPathMatcherRouteRuleRouteActionInput interface {
	pulumi.Input

	ToURLMapPathMatcherRouteRuleRouteActionOutput() URLMapPathMatcherRouteRuleRouteActionOutput
	ToURLMapPathMatcherRouteRuleRouteActionOutputWithContext(context.Context) URLMapPathMatcherRouteRuleRouteActionOutput
}

type URLMapPathMatcherRouteRuleRouteActionArgs struct {
	CorsPolicy computeURLMapPathMatcherRouteRuleRouteActionCorsPolicy.URLMapPathMatcherRouteRuleRouteActionCorsPolicyPtrInput `pulumi:"corsPolicy"`
	FaultInjectionPolicy computeURLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyPtrInput `pulumi:"faultInjectionPolicy"`
	RequestMirrorPolicy computeURLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicyPtrInput `pulumi:"requestMirrorPolicy"`
	RetryPolicy computeURLMapPathMatcherRouteRuleRouteActionRetryPolicy.URLMapPathMatcherRouteRuleRouteActionRetryPolicyPtrInput `pulumi:"retryPolicy"`
	Timeout computeURLMapPathMatcherRouteRuleRouteActionTimeout.URLMapPathMatcherRouteRuleRouteActionTimeoutPtrInput `pulumi:"timeout"`
	UrlRewrite computeURLMapPathMatcherRouteRuleRouteActionUrlRewrite.URLMapPathMatcherRouteRuleRouteActionUrlRewritePtrInput `pulumi:"urlRewrite"`
	WeightedBackendServices computeURLMapPathMatcherRouteRuleRouteActionWeightedBackendService.URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceArrayInput `pulumi:"weightedBackendServices"`
}

func (URLMapPathMatcherRouteRuleRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapPathMatcherRouteRuleRouteAction)(nil)).Elem()
}

func (i URLMapPathMatcherRouteRuleRouteActionArgs) ToURLMapPathMatcherRouteRuleRouteActionOutput() URLMapPathMatcherRouteRuleRouteActionOutput {
	return i.ToURLMapPathMatcherRouteRuleRouteActionOutputWithContext(context.Background())
}

func (i URLMapPathMatcherRouteRuleRouteActionArgs) ToURLMapPathMatcherRouteRuleRouteActionOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherRouteRuleRouteActionOutput)
}

func (i URLMapPathMatcherRouteRuleRouteActionArgs) ToURLMapPathMatcherRouteRuleRouteActionPtrOutput() URLMapPathMatcherRouteRuleRouteActionPtrOutput {
	return i.ToURLMapPathMatcherRouteRuleRouteActionPtrOutputWithContext(context.Background())
}

func (i URLMapPathMatcherRouteRuleRouteActionArgs) ToURLMapPathMatcherRouteRuleRouteActionPtrOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherRouteRuleRouteActionOutput).ToURLMapPathMatcherRouteRuleRouteActionPtrOutputWithContext(ctx)
}

type URLMapPathMatcherRouteRuleRouteActionPtrInput interface {
	pulumi.Input

	ToURLMapPathMatcherRouteRuleRouteActionPtrOutput() URLMapPathMatcherRouteRuleRouteActionPtrOutput
	ToURLMapPathMatcherRouteRuleRouteActionPtrOutputWithContext(context.Context) URLMapPathMatcherRouteRuleRouteActionPtrOutput
}

type urlmapPathMatcherRouteRuleRouteActionPtrType URLMapPathMatcherRouteRuleRouteActionArgs

func URLMapPathMatcherRouteRuleRouteActionPtr(v *URLMapPathMatcherRouteRuleRouteActionArgs) URLMapPathMatcherRouteRuleRouteActionPtrInput {	return (*urlmapPathMatcherRouteRuleRouteActionPtrType)(v)
}

func (*urlmapPathMatcherRouteRuleRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**URLMapPathMatcherRouteRuleRouteAction)(nil)).Elem()
}

func (i *urlmapPathMatcherRouteRuleRouteActionPtrType) ToURLMapPathMatcherRouteRuleRouteActionPtrOutput() URLMapPathMatcherRouteRuleRouteActionPtrOutput {
	return i.ToURLMapPathMatcherRouteRuleRouteActionPtrOutputWithContext(context.Background())
}

func (i *urlmapPathMatcherRouteRuleRouteActionPtrType) ToURLMapPathMatcherRouteRuleRouteActionPtrOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherRouteRuleRouteActionPtrOutput)
}

type URLMapPathMatcherRouteRuleRouteActionOutput struct { *pulumi.OutputState }

func (URLMapPathMatcherRouteRuleRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapPathMatcherRouteRuleRouteAction)(nil)).Elem()
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) ToURLMapPathMatcherRouteRuleRouteActionOutput() URLMapPathMatcherRouteRuleRouteActionOutput {
	return o
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) ToURLMapPathMatcherRouteRuleRouteActionOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleRouteActionOutput {
	return o
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) ToURLMapPathMatcherRouteRuleRouteActionPtrOutput() URLMapPathMatcherRouteRuleRouteActionPtrOutput {
	return o.ToURLMapPathMatcherRouteRuleRouteActionPtrOutputWithContext(context.Background())
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) ToURLMapPathMatcherRouteRuleRouteActionPtrOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleRouteActionPtrOutput {
	return o.ApplyT(func(v URLMapPathMatcherRouteRuleRouteAction) *URLMapPathMatcherRouteRuleRouteAction {
		return &v
	}).(URLMapPathMatcherRouteRuleRouteActionPtrOutput)
}
func (o URLMapPathMatcherRouteRuleRouteActionOutput) CorsPolicy() computeURLMapPathMatcherRouteRuleRouteActionCorsPolicy.URLMapPathMatcherRouteRuleRouteActionCorsPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionCorsPolicy.URLMapPathMatcherRouteRuleRouteActionCorsPolicy { return v.CorsPolicy }).(computeURLMapPathMatcherRouteRuleRouteActionCorsPolicy.URLMapPathMatcherRouteRuleRouteActionCorsPolicyPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) FaultInjectionPolicy() computeURLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy { return v.FaultInjectionPolicy }).(computeURLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) RequestMirrorPolicy() computeURLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy { return v.RequestMirrorPolicy }).(computeURLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicyPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) RetryPolicy() computeURLMapPathMatcherRouteRuleRouteActionRetryPolicy.URLMapPathMatcherRouteRuleRouteActionRetryPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionRetryPolicy.URLMapPathMatcherRouteRuleRouteActionRetryPolicy { return v.RetryPolicy }).(computeURLMapPathMatcherRouteRuleRouteActionRetryPolicy.URLMapPathMatcherRouteRuleRouteActionRetryPolicyPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) Timeout() computeURLMapPathMatcherRouteRuleRouteActionTimeout.URLMapPathMatcherRouteRuleRouteActionTimeoutPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionTimeout.URLMapPathMatcherRouteRuleRouteActionTimeout { return v.Timeout }).(computeURLMapPathMatcherRouteRuleRouteActionTimeout.URLMapPathMatcherRouteRuleRouteActionTimeoutPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) UrlRewrite() computeURLMapPathMatcherRouteRuleRouteActionUrlRewrite.URLMapPathMatcherRouteRuleRouteActionUrlRewritePtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionUrlRewrite.URLMapPathMatcherRouteRuleRouteActionUrlRewrite { return v.UrlRewrite }).(computeURLMapPathMatcherRouteRuleRouteActionUrlRewrite.URLMapPathMatcherRouteRuleRouteActionUrlRewritePtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionOutput) WeightedBackendServices() computeURLMapPathMatcherRouteRuleRouteActionWeightedBackendService.URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceArrayOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) []computeURLMapPathMatcherRouteRuleRouteActionWeightedBackendService.URLMapPathMatcherRouteRuleRouteActionWeightedBackendService { return v.WeightedBackendServices }).(computeURLMapPathMatcherRouteRuleRouteActionWeightedBackendService.URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceArrayOutput)
}

type URLMapPathMatcherRouteRuleRouteActionPtrOutput struct { *pulumi.OutputState}

func (URLMapPathMatcherRouteRuleRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**URLMapPathMatcherRouteRuleRouteAction)(nil)).Elem()
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) ToURLMapPathMatcherRouteRuleRouteActionPtrOutput() URLMapPathMatcherRouteRuleRouteActionPtrOutput {
	return o
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) ToURLMapPathMatcherRouteRuleRouteActionPtrOutputWithContext(ctx context.Context) URLMapPathMatcherRouteRuleRouteActionPtrOutput {
	return o
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) Elem() URLMapPathMatcherRouteRuleRouteActionOutput {
	return o.ApplyT(func (v *URLMapPathMatcherRouteRuleRouteAction) URLMapPathMatcherRouteRuleRouteAction { return *v }).(URLMapPathMatcherRouteRuleRouteActionOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) CorsPolicy() computeURLMapPathMatcherRouteRuleRouteActionCorsPolicy.URLMapPathMatcherRouteRuleRouteActionCorsPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionCorsPolicy.URLMapPathMatcherRouteRuleRouteActionCorsPolicy { return v.CorsPolicy }).(computeURLMapPathMatcherRouteRuleRouteActionCorsPolicy.URLMapPathMatcherRouteRuleRouteActionCorsPolicyPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) FaultInjectionPolicy() computeURLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy { return v.FaultInjectionPolicy }).(computeURLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) RequestMirrorPolicy() computeURLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy { return v.RequestMirrorPolicy }).(computeURLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicyPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) RetryPolicy() computeURLMapPathMatcherRouteRuleRouteActionRetryPolicy.URLMapPathMatcherRouteRuleRouteActionRetryPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionRetryPolicy.URLMapPathMatcherRouteRuleRouteActionRetryPolicy { return v.RetryPolicy }).(computeURLMapPathMatcherRouteRuleRouteActionRetryPolicy.URLMapPathMatcherRouteRuleRouteActionRetryPolicyPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) Timeout() computeURLMapPathMatcherRouteRuleRouteActionTimeout.URLMapPathMatcherRouteRuleRouteActionTimeoutPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionTimeout.URLMapPathMatcherRouteRuleRouteActionTimeout { return v.Timeout }).(computeURLMapPathMatcherRouteRuleRouteActionTimeout.URLMapPathMatcherRouteRuleRouteActionTimeoutPtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) UrlRewrite() computeURLMapPathMatcherRouteRuleRouteActionUrlRewrite.URLMapPathMatcherRouteRuleRouteActionUrlRewritePtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) *computeURLMapPathMatcherRouteRuleRouteActionUrlRewrite.URLMapPathMatcherRouteRuleRouteActionUrlRewrite { return v.UrlRewrite }).(computeURLMapPathMatcherRouteRuleRouteActionUrlRewrite.URLMapPathMatcherRouteRuleRouteActionUrlRewritePtrOutput)
}

func (o URLMapPathMatcherRouteRuleRouteActionPtrOutput) WeightedBackendServices() computeURLMapPathMatcherRouteRuleRouteActionWeightedBackendService.URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceArrayOutput {
	return o.ApplyT(func (v URLMapPathMatcherRouteRuleRouteAction) []computeURLMapPathMatcherRouteRuleRouteActionWeightedBackendService.URLMapPathMatcherRouteRuleRouteActionWeightedBackendService { return v.WeightedBackendServices }).(computeURLMapPathMatcherRouteRuleRouteActionWeightedBackendService.URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(URLMapPathMatcherRouteRuleRouteActionOutput{})
	pulumi.RegisterOutputType(URLMapPathMatcherRouteRuleRouteActionPtrOutput{})
}
