// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getBackendServiceCircuitBreaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/getBackendServiceCircuitBreakerConnectTimeout"
)

type GetBackendServiceCircuitBreaker struct {
	ConnectTimeouts []computegetBackendServiceCircuitBreakerConnectTimeout.GetBackendServiceCircuitBreakerConnectTimeout `pulumi:"connectTimeouts"`
	MaxConnections int `pulumi:"maxConnections"`
	MaxPendingRequests int `pulumi:"maxPendingRequests"`
	MaxRequests int `pulumi:"maxRequests"`
	MaxRequestsPerConnection int `pulumi:"maxRequestsPerConnection"`
	MaxRetries int `pulumi:"maxRetries"`
}

type GetBackendServiceCircuitBreakerInput interface {
	pulumi.Input

	ToGetBackendServiceCircuitBreakerOutput() GetBackendServiceCircuitBreakerOutput
	ToGetBackendServiceCircuitBreakerOutputWithContext(context.Context) GetBackendServiceCircuitBreakerOutput
}

type GetBackendServiceCircuitBreakerArgs struct {
	ConnectTimeouts computegetBackendServiceCircuitBreakerConnectTimeout.GetBackendServiceCircuitBreakerConnectTimeoutArrayInput `pulumi:"connectTimeouts"`
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	MaxPendingRequests pulumi.IntInput `pulumi:"maxPendingRequests"`
	MaxRequests pulumi.IntInput `pulumi:"maxRequests"`
	MaxRequestsPerConnection pulumi.IntInput `pulumi:"maxRequestsPerConnection"`
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
}

func (GetBackendServiceCircuitBreakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendServiceCircuitBreaker)(nil)).Elem()
}

func (i GetBackendServiceCircuitBreakerArgs) ToGetBackendServiceCircuitBreakerOutput() GetBackendServiceCircuitBreakerOutput {
	return i.ToGetBackendServiceCircuitBreakerOutputWithContext(context.Background())
}

func (i GetBackendServiceCircuitBreakerArgs) ToGetBackendServiceCircuitBreakerOutputWithContext(ctx context.Context) GetBackendServiceCircuitBreakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendServiceCircuitBreakerOutput)
}

type GetBackendServiceCircuitBreakerArrayInput interface {
	pulumi.Input

	ToGetBackendServiceCircuitBreakerArrayOutput() GetBackendServiceCircuitBreakerArrayOutput
	ToGetBackendServiceCircuitBreakerArrayOutputWithContext(context.Context) GetBackendServiceCircuitBreakerArrayOutput
}

type GetBackendServiceCircuitBreakerArray []GetBackendServiceCircuitBreakerInput

func (GetBackendServiceCircuitBreakerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendServiceCircuitBreaker)(nil)).Elem()
}

func (i GetBackendServiceCircuitBreakerArray) ToGetBackendServiceCircuitBreakerArrayOutput() GetBackendServiceCircuitBreakerArrayOutput {
	return i.ToGetBackendServiceCircuitBreakerArrayOutputWithContext(context.Background())
}

func (i GetBackendServiceCircuitBreakerArray) ToGetBackendServiceCircuitBreakerArrayOutputWithContext(ctx context.Context) GetBackendServiceCircuitBreakerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackendServiceCircuitBreakerArrayOutput)
}

type GetBackendServiceCircuitBreakerOutput struct { *pulumi.OutputState }

func (GetBackendServiceCircuitBreakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackendServiceCircuitBreaker)(nil)).Elem()
}

func (o GetBackendServiceCircuitBreakerOutput) ToGetBackendServiceCircuitBreakerOutput() GetBackendServiceCircuitBreakerOutput {
	return o
}

func (o GetBackendServiceCircuitBreakerOutput) ToGetBackendServiceCircuitBreakerOutputWithContext(ctx context.Context) GetBackendServiceCircuitBreakerOutput {
	return o
}

func (o GetBackendServiceCircuitBreakerOutput) ConnectTimeouts() computegetBackendServiceCircuitBreakerConnectTimeout.GetBackendServiceCircuitBreakerConnectTimeoutArrayOutput {
	return o.ApplyT(func (v GetBackendServiceCircuitBreaker) []computegetBackendServiceCircuitBreakerConnectTimeout.GetBackendServiceCircuitBreakerConnectTimeout { return v.ConnectTimeouts }).(computegetBackendServiceCircuitBreakerConnectTimeout.GetBackendServiceCircuitBreakerConnectTimeoutArrayOutput)
}

func (o GetBackendServiceCircuitBreakerOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func (v GetBackendServiceCircuitBreaker) int { return v.MaxConnections }).(pulumi.IntOutput)
}

func (o GetBackendServiceCircuitBreakerOutput) MaxPendingRequests() pulumi.IntOutput {
	return o.ApplyT(func (v GetBackendServiceCircuitBreaker) int { return v.MaxPendingRequests }).(pulumi.IntOutput)
}

func (o GetBackendServiceCircuitBreakerOutput) MaxRequests() pulumi.IntOutput {
	return o.ApplyT(func (v GetBackendServiceCircuitBreaker) int { return v.MaxRequests }).(pulumi.IntOutput)
}

func (o GetBackendServiceCircuitBreakerOutput) MaxRequestsPerConnection() pulumi.IntOutput {
	return o.ApplyT(func (v GetBackendServiceCircuitBreaker) int { return v.MaxRequestsPerConnection }).(pulumi.IntOutput)
}

func (o GetBackendServiceCircuitBreakerOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func (v GetBackendServiceCircuitBreaker) int { return v.MaxRetries }).(pulumi.IntOutput)
}

type GetBackendServiceCircuitBreakerArrayOutput struct { *pulumi.OutputState}

func (GetBackendServiceCircuitBreakerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackendServiceCircuitBreaker)(nil)).Elem()
}

func (o GetBackendServiceCircuitBreakerArrayOutput) ToGetBackendServiceCircuitBreakerArrayOutput() GetBackendServiceCircuitBreakerArrayOutput {
	return o
}

func (o GetBackendServiceCircuitBreakerArrayOutput) ToGetBackendServiceCircuitBreakerArrayOutputWithContext(ctx context.Context) GetBackendServiceCircuitBreakerArrayOutput {
	return o
}

func (o GetBackendServiceCircuitBreakerArrayOutput) Index(i pulumi.IntInput) GetBackendServiceCircuitBreakerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetBackendServiceCircuitBreaker {
		return vs[0].([]GetBackendServiceCircuitBreaker)[vs[1].(int)]
	}).(GetBackendServiceCircuitBreakerOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBackendServiceCircuitBreakerOutput{})
	pulumi.RegisterOutputType(GetBackendServiceCircuitBreakerArrayOutput{})
}
