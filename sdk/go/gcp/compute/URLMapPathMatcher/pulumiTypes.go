// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package URLMapPathMatcher

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRule"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionCorsPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyAbort"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyDelayFixedDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionRetryPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionRetryPolicyPerTryTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionUrlRewrite"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendService"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleUrlRedirect"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRule"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRule"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleHeaderMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleMetadataFilter"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleMetadataFilterFilterLabel"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleMatchRuleQueryParameterMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionCorsPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyAbort"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyDelayFixedDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionRetryPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionRetryPolicyPerTryTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionUrlRewrite"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendService"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherRouteRuleUrlRedirect"
)

type URLMapPathMatcher struct {
	DefaultService *string `pulumi:"defaultService"`
	Description *string `pulumi:"description"`
	HeaderAction *computeURLMapPathMatcherHeaderAction.URLMapPathMatcherHeaderAction `pulumi:"headerAction"`
	Name string `pulumi:"name"`
	PathRules []computeURLMapPathMatcherPathRule.URLMapPathMatcherPathRule `pulumi:"pathRules"`
	RouteRules []computeURLMapPathMatcherRouteRule.URLMapPathMatcherRouteRule `pulumi:"routeRules"`
}

type URLMapPathMatcherInput interface {
	pulumi.Input

	ToURLMapPathMatcherOutput() URLMapPathMatcherOutput
	ToURLMapPathMatcherOutputWithContext(context.Context) URLMapPathMatcherOutput
}

type URLMapPathMatcherArgs struct {
	DefaultService pulumi.StringPtrInput `pulumi:"defaultService"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	HeaderAction computeURLMapPathMatcherHeaderAction.URLMapPathMatcherHeaderActionPtrInput `pulumi:"headerAction"`
	Name pulumi.StringInput `pulumi:"name"`
	PathRules computeURLMapPathMatcherPathRule.URLMapPathMatcherPathRuleArrayInput `pulumi:"pathRules"`
	RouteRules computeURLMapPathMatcherRouteRule.URLMapPathMatcherRouteRuleArrayInput `pulumi:"routeRules"`
}

func (URLMapPathMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapPathMatcher)(nil)).Elem()
}

func (i URLMapPathMatcherArgs) ToURLMapPathMatcherOutput() URLMapPathMatcherOutput {
	return i.ToURLMapPathMatcherOutputWithContext(context.Background())
}

func (i URLMapPathMatcherArgs) ToURLMapPathMatcherOutputWithContext(ctx context.Context) URLMapPathMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherOutput)
}

type URLMapPathMatcherArrayInput interface {
	pulumi.Input

	ToURLMapPathMatcherArrayOutput() URLMapPathMatcherArrayOutput
	ToURLMapPathMatcherArrayOutputWithContext(context.Context) URLMapPathMatcherArrayOutput
}

type URLMapPathMatcherArray []URLMapPathMatcherInput

func (URLMapPathMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]URLMapPathMatcher)(nil)).Elem()
}

func (i URLMapPathMatcherArray) ToURLMapPathMatcherArrayOutput() URLMapPathMatcherArrayOutput {
	return i.ToURLMapPathMatcherArrayOutputWithContext(context.Background())
}

func (i URLMapPathMatcherArray) ToURLMapPathMatcherArrayOutputWithContext(ctx context.Context) URLMapPathMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherArrayOutput)
}

type URLMapPathMatcherOutput struct { *pulumi.OutputState }

func (URLMapPathMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapPathMatcher)(nil)).Elem()
}

func (o URLMapPathMatcherOutput) ToURLMapPathMatcherOutput() URLMapPathMatcherOutput {
	return o
}

func (o URLMapPathMatcherOutput) ToURLMapPathMatcherOutputWithContext(ctx context.Context) URLMapPathMatcherOutput {
	return o
}

func (o URLMapPathMatcherOutput) DefaultService() pulumi.StringPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcher) *string { return v.DefaultService }).(pulumi.StringPtrOutput)
}

func (o URLMapPathMatcherOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcher) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o URLMapPathMatcherOutput) HeaderAction() computeURLMapPathMatcherHeaderAction.URLMapPathMatcherHeaderActionPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcher) *computeURLMapPathMatcherHeaderAction.URLMapPathMatcherHeaderAction { return v.HeaderAction }).(computeURLMapPathMatcherHeaderAction.URLMapPathMatcherHeaderActionPtrOutput)
}

func (o URLMapPathMatcherOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v URLMapPathMatcher) string { return v.Name }).(pulumi.StringOutput)
}

func (o URLMapPathMatcherOutput) PathRules() computeURLMapPathMatcherPathRule.URLMapPathMatcherPathRuleArrayOutput {
	return o.ApplyT(func (v URLMapPathMatcher) []computeURLMapPathMatcherPathRule.URLMapPathMatcherPathRule { return v.PathRules }).(computeURLMapPathMatcherPathRule.URLMapPathMatcherPathRuleArrayOutput)
}

func (o URLMapPathMatcherOutput) RouteRules() computeURLMapPathMatcherRouteRule.URLMapPathMatcherRouteRuleArrayOutput {
	return o.ApplyT(func (v URLMapPathMatcher) []computeURLMapPathMatcherRouteRule.URLMapPathMatcherRouteRule { return v.RouteRules }).(computeURLMapPathMatcherRouteRule.URLMapPathMatcherRouteRuleArrayOutput)
}

type URLMapPathMatcherArrayOutput struct { *pulumi.OutputState}

func (URLMapPathMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]URLMapPathMatcher)(nil)).Elem()
}

func (o URLMapPathMatcherArrayOutput) ToURLMapPathMatcherArrayOutput() URLMapPathMatcherArrayOutput {
	return o
}

func (o URLMapPathMatcherArrayOutput) ToURLMapPathMatcherArrayOutputWithContext(ctx context.Context) URLMapPathMatcherArrayOutput {
	return o
}

func (o URLMapPathMatcherArrayOutput) Index(i pulumi.IntInput) URLMapPathMatcherOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) URLMapPathMatcher {
		return vs[0].([]URLMapPathMatcher)[vs[1].(int)]
	}).(URLMapPathMatcherOutput)
}

func init() {
	pulumi.RegisterOutputType(URLMapPathMatcherOutput{})
	pulumi.RegisterOutputType(URLMapPathMatcherArrayOutput{})
}
