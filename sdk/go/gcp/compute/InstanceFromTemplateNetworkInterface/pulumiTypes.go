// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceFromTemplateNetworkInterface

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/InstanceFromTemplateNetworkInterfaceAccessConfig"
	"https:/github.com/pulumi/pulumi-gcp/compute/InstanceFromTemplateNetworkInterfaceAliasIpRange"
)

type InstanceFromTemplateNetworkInterface struct {
	AccessConfigs []computeInstanceFromTemplateNetworkInterfaceAccessConfig.InstanceFromTemplateNetworkInterfaceAccessConfig `pulumi:"accessConfigs"`
	AliasIpRanges []computeInstanceFromTemplateNetworkInterfaceAliasIpRange.InstanceFromTemplateNetworkInterfaceAliasIpRange `pulumi:"aliasIpRanges"`
	// A unique name for the resource, required by GCE.
	// Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	Network *string `pulumi:"network"`
	NetworkIp *string `pulumi:"networkIp"`
	Subnetwork *string `pulumi:"subnetwork"`
	SubnetworkProject *string `pulumi:"subnetworkProject"`
}

type InstanceFromTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToInstanceFromTemplateNetworkInterfaceOutput() InstanceFromTemplateNetworkInterfaceOutput
	ToInstanceFromTemplateNetworkInterfaceOutputWithContext(context.Context) InstanceFromTemplateNetworkInterfaceOutput
}

type InstanceFromTemplateNetworkInterfaceArgs struct {
	AccessConfigs computeInstanceFromTemplateNetworkInterfaceAccessConfig.InstanceFromTemplateNetworkInterfaceAccessConfigArrayInput `pulumi:"accessConfigs"`
	AliasIpRanges computeInstanceFromTemplateNetworkInterfaceAliasIpRange.InstanceFromTemplateNetworkInterfaceAliasIpRangeArrayInput `pulumi:"aliasIpRanges"`
	// A unique name for the resource, required by GCE.
	// Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
	Network pulumi.StringPtrInput `pulumi:"network"`
	NetworkIp pulumi.StringPtrInput `pulumi:"networkIp"`
	Subnetwork pulumi.StringPtrInput `pulumi:"subnetwork"`
	SubnetworkProject pulumi.StringPtrInput `pulumi:"subnetworkProject"`
}

func (InstanceFromTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFromTemplateNetworkInterface)(nil)).Elem()
}

func (i InstanceFromTemplateNetworkInterfaceArgs) ToInstanceFromTemplateNetworkInterfaceOutput() InstanceFromTemplateNetworkInterfaceOutput {
	return i.ToInstanceFromTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i InstanceFromTemplateNetworkInterfaceArgs) ToInstanceFromTemplateNetworkInterfaceOutputWithContext(ctx context.Context) InstanceFromTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFromTemplateNetworkInterfaceOutput)
}

type InstanceFromTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceFromTemplateNetworkInterfaceArrayOutput() InstanceFromTemplateNetworkInterfaceArrayOutput
	ToInstanceFromTemplateNetworkInterfaceArrayOutputWithContext(context.Context) InstanceFromTemplateNetworkInterfaceArrayOutput
}

type InstanceFromTemplateNetworkInterfaceArray []InstanceFromTemplateNetworkInterfaceInput

func (InstanceFromTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceFromTemplateNetworkInterface)(nil)).Elem()
}

func (i InstanceFromTemplateNetworkInterfaceArray) ToInstanceFromTemplateNetworkInterfaceArrayOutput() InstanceFromTemplateNetworkInterfaceArrayOutput {
	return i.ToInstanceFromTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceFromTemplateNetworkInterfaceArray) ToInstanceFromTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceFromTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFromTemplateNetworkInterfaceArrayOutput)
}

type InstanceFromTemplateNetworkInterfaceOutput struct { *pulumi.OutputState }

func (InstanceFromTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFromTemplateNetworkInterface)(nil)).Elem()
}

func (o InstanceFromTemplateNetworkInterfaceOutput) ToInstanceFromTemplateNetworkInterfaceOutput() InstanceFromTemplateNetworkInterfaceOutput {
	return o
}

func (o InstanceFromTemplateNetworkInterfaceOutput) ToInstanceFromTemplateNetworkInterfaceOutputWithContext(ctx context.Context) InstanceFromTemplateNetworkInterfaceOutput {
	return o
}

func (o InstanceFromTemplateNetworkInterfaceOutput) AccessConfigs() computeInstanceFromTemplateNetworkInterfaceAccessConfig.InstanceFromTemplateNetworkInterfaceAccessConfigArrayOutput {
	return o.ApplyT(func (v InstanceFromTemplateNetworkInterface) []computeInstanceFromTemplateNetworkInterfaceAccessConfig.InstanceFromTemplateNetworkInterfaceAccessConfig { return v.AccessConfigs }).(computeInstanceFromTemplateNetworkInterfaceAccessConfig.InstanceFromTemplateNetworkInterfaceAccessConfigArrayOutput)
}

func (o InstanceFromTemplateNetworkInterfaceOutput) AliasIpRanges() computeInstanceFromTemplateNetworkInterfaceAliasIpRange.InstanceFromTemplateNetworkInterfaceAliasIpRangeArrayOutput {
	return o.ApplyT(func (v InstanceFromTemplateNetworkInterface) []computeInstanceFromTemplateNetworkInterfaceAliasIpRange.InstanceFromTemplateNetworkInterfaceAliasIpRange { return v.AliasIpRanges }).(computeInstanceFromTemplateNetworkInterfaceAliasIpRange.InstanceFromTemplateNetworkInterfaceAliasIpRangeArrayOutput)
}

// A unique name for the resource, required by GCE.
// Changing this forces a new resource to be created.
func (o InstanceFromTemplateNetworkInterfaceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceFromTemplateNetworkInterface) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o InstanceFromTemplateNetworkInterfaceOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceFromTemplateNetworkInterface) *string { return v.Network }).(pulumi.StringPtrOutput)
}

func (o InstanceFromTemplateNetworkInterfaceOutput) NetworkIp() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceFromTemplateNetworkInterface) *string { return v.NetworkIp }).(pulumi.StringPtrOutput)
}

func (o InstanceFromTemplateNetworkInterfaceOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceFromTemplateNetworkInterface) *string { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

func (o InstanceFromTemplateNetworkInterfaceOutput) SubnetworkProject() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceFromTemplateNetworkInterface) *string { return v.SubnetworkProject }).(pulumi.StringPtrOutput)
}

type InstanceFromTemplateNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (InstanceFromTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceFromTemplateNetworkInterface)(nil)).Elem()
}

func (o InstanceFromTemplateNetworkInterfaceArrayOutput) ToInstanceFromTemplateNetworkInterfaceArrayOutput() InstanceFromTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceFromTemplateNetworkInterfaceArrayOutput) ToInstanceFromTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceFromTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceFromTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceFromTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceFromTemplateNetworkInterface {
		return vs[0].([]InstanceFromTemplateNetworkInterface)[vs[1].(int)]
	}).(InstanceFromTemplateNetworkInterfaceOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceFromTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceFromTemplateNetworkInterfaceArrayOutput{})
}
