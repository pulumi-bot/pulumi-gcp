// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package BackendServiceBackend

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type BackendServiceBackend struct {
	BalancingMode *string `pulumi:"balancingMode"`
	CapacityScaler *float64 `pulumi:"capacityScaler"`
	Description *string `pulumi:"description"`
	Group string `pulumi:"group"`
	MaxConnections *int `pulumi:"maxConnections"`
	MaxConnectionsPerEndpoint *int `pulumi:"maxConnectionsPerEndpoint"`
	MaxConnectionsPerInstance *int `pulumi:"maxConnectionsPerInstance"`
	MaxRate *int `pulumi:"maxRate"`
	MaxRatePerEndpoint *float64 `pulumi:"maxRatePerEndpoint"`
	MaxRatePerInstance *float64 `pulumi:"maxRatePerInstance"`
	MaxUtilization *float64 `pulumi:"maxUtilization"`
}

type BackendServiceBackendInput interface {
	pulumi.Input

	ToBackendServiceBackendOutput() BackendServiceBackendOutput
	ToBackendServiceBackendOutputWithContext(context.Context) BackendServiceBackendOutput
}

type BackendServiceBackendArgs struct {
	BalancingMode pulumi.StringPtrInput `pulumi:"balancingMode"`
	CapacityScaler pulumi.Float64PtrInput `pulumi:"capacityScaler"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	Group pulumi.StringInput `pulumi:"group"`
	MaxConnections pulumi.IntPtrInput `pulumi:"maxConnections"`
	MaxConnectionsPerEndpoint pulumi.IntPtrInput `pulumi:"maxConnectionsPerEndpoint"`
	MaxConnectionsPerInstance pulumi.IntPtrInput `pulumi:"maxConnectionsPerInstance"`
	MaxRate pulumi.IntPtrInput `pulumi:"maxRate"`
	MaxRatePerEndpoint pulumi.Float64PtrInput `pulumi:"maxRatePerEndpoint"`
	MaxRatePerInstance pulumi.Float64PtrInput `pulumi:"maxRatePerInstance"`
	MaxUtilization pulumi.Float64PtrInput `pulumi:"maxUtilization"`
}

func (BackendServiceBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceBackend)(nil)).Elem()
}

func (i BackendServiceBackendArgs) ToBackendServiceBackendOutput() BackendServiceBackendOutput {
	return i.ToBackendServiceBackendOutputWithContext(context.Background())
}

func (i BackendServiceBackendArgs) ToBackendServiceBackendOutputWithContext(ctx context.Context) BackendServiceBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceBackendOutput)
}

type BackendServiceBackendArrayInput interface {
	pulumi.Input

	ToBackendServiceBackendArrayOutput() BackendServiceBackendArrayOutput
	ToBackendServiceBackendArrayOutputWithContext(context.Context) BackendServiceBackendArrayOutput
}

type BackendServiceBackendArray []BackendServiceBackendInput

func (BackendServiceBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendServiceBackend)(nil)).Elem()
}

func (i BackendServiceBackendArray) ToBackendServiceBackendArrayOutput() BackendServiceBackendArrayOutput {
	return i.ToBackendServiceBackendArrayOutputWithContext(context.Background())
}

func (i BackendServiceBackendArray) ToBackendServiceBackendArrayOutputWithContext(ctx context.Context) BackendServiceBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceBackendArrayOutput)
}

type BackendServiceBackendOutput struct { *pulumi.OutputState }

func (BackendServiceBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceBackend)(nil)).Elem()
}

func (o BackendServiceBackendOutput) ToBackendServiceBackendOutput() BackendServiceBackendOutput {
	return o
}

func (o BackendServiceBackendOutput) ToBackendServiceBackendOutputWithContext(ctx context.Context) BackendServiceBackendOutput {
	return o
}

func (o BackendServiceBackendOutput) BalancingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *string { return v.BalancingMode }).(pulumi.StringPtrOutput)
}

func (o BackendServiceBackendOutput) CapacityScaler() pulumi.Float64PtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *float64 { return v.CapacityScaler }).(pulumi.Float64PtrOutput)
}

func (o BackendServiceBackendOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BackendServiceBackendOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func (v BackendServiceBackend) string { return v.Group }).(pulumi.StringOutput)
}

func (o BackendServiceBackendOutput) MaxConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *int { return v.MaxConnections }).(pulumi.IntPtrOutput)
}

func (o BackendServiceBackendOutput) MaxConnectionsPerEndpoint() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *int { return v.MaxConnectionsPerEndpoint }).(pulumi.IntPtrOutput)
}

func (o BackendServiceBackendOutput) MaxConnectionsPerInstance() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *int { return v.MaxConnectionsPerInstance }).(pulumi.IntPtrOutput)
}

func (o BackendServiceBackendOutput) MaxRate() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *int { return v.MaxRate }).(pulumi.IntPtrOutput)
}

func (o BackendServiceBackendOutput) MaxRatePerEndpoint() pulumi.Float64PtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *float64 { return v.MaxRatePerEndpoint }).(pulumi.Float64PtrOutput)
}

func (o BackendServiceBackendOutput) MaxRatePerInstance() pulumi.Float64PtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *float64 { return v.MaxRatePerInstance }).(pulumi.Float64PtrOutput)
}

func (o BackendServiceBackendOutput) MaxUtilization() pulumi.Float64PtrOutput {
	return o.ApplyT(func (v BackendServiceBackend) *float64 { return v.MaxUtilization }).(pulumi.Float64PtrOutput)
}

type BackendServiceBackendArrayOutput struct { *pulumi.OutputState}

func (BackendServiceBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendServiceBackend)(nil)).Elem()
}

func (o BackendServiceBackendArrayOutput) ToBackendServiceBackendArrayOutput() BackendServiceBackendArrayOutput {
	return o
}

func (o BackendServiceBackendArrayOutput) ToBackendServiceBackendArrayOutputWithContext(ctx context.Context) BackendServiceBackendArrayOutput {
	return o
}

func (o BackendServiceBackendArrayOutput) Index(i pulumi.IntInput) BackendServiceBackendOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BackendServiceBackend {
		return vs[0].([]BackendServiceBackend)[vs[1].(int)]
	}).(BackendServiceBackendOutput)
}

func init() {
	pulumi.RegisterOutputType(BackendServiceBackendOutput{})
	pulumi.RegisterOutputType(BackendServiceBackendArrayOutput{})
}
