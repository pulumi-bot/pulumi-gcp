// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RegionInstanceGroupManagerVersion

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionInstanceGroupManagerVersionTargetSize"
)

type RegionInstanceGroupManagerVersion struct {
	InstanceTemplate string `pulumi:"instanceTemplate"`
	// The name of the instance group manager. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name *string `pulumi:"name"`
	// The target number of running instances for this managed
	// instance group. This value should always be explicitly set unless this resource is attached to
	// an autoscaler, in which case it should never be set. Defaults to `0`.
	TargetSize *computeRegionInstanceGroupManagerVersionTargetSize.RegionInstanceGroupManagerVersionTargetSize `pulumi:"targetSize"`
}

type RegionInstanceGroupManagerVersionInput interface {
	pulumi.Input

	ToRegionInstanceGroupManagerVersionOutput() RegionInstanceGroupManagerVersionOutput
	ToRegionInstanceGroupManagerVersionOutputWithContext(context.Context) RegionInstanceGroupManagerVersionOutput
}

type RegionInstanceGroupManagerVersionArgs struct {
	InstanceTemplate pulumi.StringInput `pulumi:"instanceTemplate"`
	// The name of the instance group manager. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The target number of running instances for this managed
	// instance group. This value should always be explicitly set unless this resource is attached to
	// an autoscaler, in which case it should never be set. Defaults to `0`.
	TargetSize computeRegionInstanceGroupManagerVersionTargetSize.RegionInstanceGroupManagerVersionTargetSizePtrInput `pulumi:"targetSize"`
}

func (RegionInstanceGroupManagerVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionInstanceGroupManagerVersion)(nil)).Elem()
}

func (i RegionInstanceGroupManagerVersionArgs) ToRegionInstanceGroupManagerVersionOutput() RegionInstanceGroupManagerVersionOutput {
	return i.ToRegionInstanceGroupManagerVersionOutputWithContext(context.Background())
}

func (i RegionInstanceGroupManagerVersionArgs) ToRegionInstanceGroupManagerVersionOutputWithContext(ctx context.Context) RegionInstanceGroupManagerVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionInstanceGroupManagerVersionOutput)
}

type RegionInstanceGroupManagerVersionArrayInput interface {
	pulumi.Input

	ToRegionInstanceGroupManagerVersionArrayOutput() RegionInstanceGroupManagerVersionArrayOutput
	ToRegionInstanceGroupManagerVersionArrayOutputWithContext(context.Context) RegionInstanceGroupManagerVersionArrayOutput
}

type RegionInstanceGroupManagerVersionArray []RegionInstanceGroupManagerVersionInput

func (RegionInstanceGroupManagerVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionInstanceGroupManagerVersion)(nil)).Elem()
}

func (i RegionInstanceGroupManagerVersionArray) ToRegionInstanceGroupManagerVersionArrayOutput() RegionInstanceGroupManagerVersionArrayOutput {
	return i.ToRegionInstanceGroupManagerVersionArrayOutputWithContext(context.Background())
}

func (i RegionInstanceGroupManagerVersionArray) ToRegionInstanceGroupManagerVersionArrayOutputWithContext(ctx context.Context) RegionInstanceGroupManagerVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionInstanceGroupManagerVersionArrayOutput)
}

type RegionInstanceGroupManagerVersionOutput struct { *pulumi.OutputState }

func (RegionInstanceGroupManagerVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionInstanceGroupManagerVersion)(nil)).Elem()
}

func (o RegionInstanceGroupManagerVersionOutput) ToRegionInstanceGroupManagerVersionOutput() RegionInstanceGroupManagerVersionOutput {
	return o
}

func (o RegionInstanceGroupManagerVersionOutput) ToRegionInstanceGroupManagerVersionOutputWithContext(ctx context.Context) RegionInstanceGroupManagerVersionOutput {
	return o
}

func (o RegionInstanceGroupManagerVersionOutput) InstanceTemplate() pulumi.StringOutput {
	return o.ApplyT(func (v RegionInstanceGroupManagerVersion) string { return v.InstanceTemplate }).(pulumi.StringOutput)
}

// The name of the instance group manager. Must be 1-63
// characters long and comply with
// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
// include lowercase letters, numbers, and hyphens.
func (o RegionInstanceGroupManagerVersionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RegionInstanceGroupManagerVersion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The target number of running instances for this managed
// instance group. This value should always be explicitly set unless this resource is attached to
// an autoscaler, in which case it should never be set. Defaults to `0`.
func (o RegionInstanceGroupManagerVersionOutput) TargetSize() computeRegionInstanceGroupManagerVersionTargetSize.RegionInstanceGroupManagerVersionTargetSizePtrOutput {
	return o.ApplyT(func (v RegionInstanceGroupManagerVersion) *computeRegionInstanceGroupManagerVersionTargetSize.RegionInstanceGroupManagerVersionTargetSize { return v.TargetSize }).(computeRegionInstanceGroupManagerVersionTargetSize.RegionInstanceGroupManagerVersionTargetSizePtrOutput)
}

type RegionInstanceGroupManagerVersionArrayOutput struct { *pulumi.OutputState}

func (RegionInstanceGroupManagerVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionInstanceGroupManagerVersion)(nil)).Elem()
}

func (o RegionInstanceGroupManagerVersionArrayOutput) ToRegionInstanceGroupManagerVersionArrayOutput() RegionInstanceGroupManagerVersionArrayOutput {
	return o
}

func (o RegionInstanceGroupManagerVersionArrayOutput) ToRegionInstanceGroupManagerVersionArrayOutputWithContext(ctx context.Context) RegionInstanceGroupManagerVersionArrayOutput {
	return o
}

func (o RegionInstanceGroupManagerVersionArrayOutput) Index(i pulumi.IntInput) RegionInstanceGroupManagerVersionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RegionInstanceGroupManagerVersion {
		return vs[0].([]RegionInstanceGroupManagerVersion)[vs[1].(int)]
	}).(RegionInstanceGroupManagerVersionOutput)
}

func init() {
	pulumi.RegisterOutputType(RegionInstanceGroupManagerVersionOutput{})
	pulumi.RegisterOutputType(RegionInstanceGroupManagerVersionArrayOutput{})
}
