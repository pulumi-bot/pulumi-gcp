// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getInstanceNetworkInterfaceAliasIpRange

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetInstanceNetworkInterfaceAliasIpRange struct {
	// The IP CIDR range represented by this alias IP range.
	IpCidrRange string `pulumi:"ipCidrRange"`
	// The subnetwork secondary range name specifying
	// the secondary range from which to allocate the IP CIDR range for this alias IP
	// range.
	SubnetworkRangeName string `pulumi:"subnetworkRangeName"`
}

type GetInstanceNetworkInterfaceAliasIpRangeInput interface {
	pulumi.Input

	ToGetInstanceNetworkInterfaceAliasIpRangeOutput() GetInstanceNetworkInterfaceAliasIpRangeOutput
	ToGetInstanceNetworkInterfaceAliasIpRangeOutputWithContext(context.Context) GetInstanceNetworkInterfaceAliasIpRangeOutput
}

type GetInstanceNetworkInterfaceAliasIpRangeArgs struct {
	// The IP CIDR range represented by this alias IP range.
	IpCidrRange pulumi.StringInput `pulumi:"ipCidrRange"`
	// The subnetwork secondary range name specifying
	// the secondary range from which to allocate the IP CIDR range for this alias IP
	// range.
	SubnetworkRangeName pulumi.StringInput `pulumi:"subnetworkRangeName"`
}

func (GetInstanceNetworkInterfaceAliasIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkInterfaceAliasIpRange)(nil)).Elem()
}

func (i GetInstanceNetworkInterfaceAliasIpRangeArgs) ToGetInstanceNetworkInterfaceAliasIpRangeOutput() GetInstanceNetworkInterfaceAliasIpRangeOutput {
	return i.ToGetInstanceNetworkInterfaceAliasIpRangeOutputWithContext(context.Background())
}

func (i GetInstanceNetworkInterfaceAliasIpRangeArgs) ToGetInstanceNetworkInterfaceAliasIpRangeOutputWithContext(ctx context.Context) GetInstanceNetworkInterfaceAliasIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkInterfaceAliasIpRangeOutput)
}

type GetInstanceNetworkInterfaceAliasIpRangeArrayInput interface {
	pulumi.Input

	ToGetInstanceNetworkInterfaceAliasIpRangeArrayOutput() GetInstanceNetworkInterfaceAliasIpRangeArrayOutput
	ToGetInstanceNetworkInterfaceAliasIpRangeArrayOutputWithContext(context.Context) GetInstanceNetworkInterfaceAliasIpRangeArrayOutput
}

type GetInstanceNetworkInterfaceAliasIpRangeArray []GetInstanceNetworkInterfaceAliasIpRangeInput

func (GetInstanceNetworkInterfaceAliasIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkInterfaceAliasIpRange)(nil)).Elem()
}

func (i GetInstanceNetworkInterfaceAliasIpRangeArray) ToGetInstanceNetworkInterfaceAliasIpRangeArrayOutput() GetInstanceNetworkInterfaceAliasIpRangeArrayOutput {
	return i.ToGetInstanceNetworkInterfaceAliasIpRangeArrayOutputWithContext(context.Background())
}

func (i GetInstanceNetworkInterfaceAliasIpRangeArray) ToGetInstanceNetworkInterfaceAliasIpRangeArrayOutputWithContext(ctx context.Context) GetInstanceNetworkInterfaceAliasIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceNetworkInterfaceAliasIpRangeArrayOutput)
}

type GetInstanceNetworkInterfaceAliasIpRangeOutput struct { *pulumi.OutputState }

func (GetInstanceNetworkInterfaceAliasIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceNetworkInterfaceAliasIpRange)(nil)).Elem()
}

func (o GetInstanceNetworkInterfaceAliasIpRangeOutput) ToGetInstanceNetworkInterfaceAliasIpRangeOutput() GetInstanceNetworkInterfaceAliasIpRangeOutput {
	return o
}

func (o GetInstanceNetworkInterfaceAliasIpRangeOutput) ToGetInstanceNetworkInterfaceAliasIpRangeOutputWithContext(ctx context.Context) GetInstanceNetworkInterfaceAliasIpRangeOutput {
	return o
}

// The IP CIDR range represented by this alias IP range.
func (o GetInstanceNetworkInterfaceAliasIpRangeOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceNetworkInterfaceAliasIpRange) string { return v.IpCidrRange }).(pulumi.StringOutput)
}

// The subnetwork secondary range name specifying
// the secondary range from which to allocate the IP CIDR range for this alias IP
// range.
func (o GetInstanceNetworkInterfaceAliasIpRangeOutput) SubnetworkRangeName() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceNetworkInterfaceAliasIpRange) string { return v.SubnetworkRangeName }).(pulumi.StringOutput)
}

type GetInstanceNetworkInterfaceAliasIpRangeArrayOutput struct { *pulumi.OutputState}

func (GetInstanceNetworkInterfaceAliasIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceNetworkInterfaceAliasIpRange)(nil)).Elem()
}

func (o GetInstanceNetworkInterfaceAliasIpRangeArrayOutput) ToGetInstanceNetworkInterfaceAliasIpRangeArrayOutput() GetInstanceNetworkInterfaceAliasIpRangeArrayOutput {
	return o
}

func (o GetInstanceNetworkInterfaceAliasIpRangeArrayOutput) ToGetInstanceNetworkInterfaceAliasIpRangeArrayOutputWithContext(ctx context.Context) GetInstanceNetworkInterfaceAliasIpRangeArrayOutput {
	return o
}

func (o GetInstanceNetworkInterfaceAliasIpRangeArrayOutput) Index(i pulumi.IntInput) GetInstanceNetworkInterfaceAliasIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetInstanceNetworkInterfaceAliasIpRange {
		return vs[0].([]GetInstanceNetworkInterfaceAliasIpRange)[vs[1].(int)]
	}).(GetInstanceNetworkInterfaceAliasIpRangeOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceNetworkInterfaceAliasIpRangeOutput{})
	pulumi.RegisterOutputType(GetInstanceNetworkInterfaceAliasIpRangeArrayOutput{})
}
