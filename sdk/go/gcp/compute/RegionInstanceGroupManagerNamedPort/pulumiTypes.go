// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RegionInstanceGroupManagerNamedPort

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RegionInstanceGroupManagerNamedPort struct {
	// The name of the instance group manager. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name string `pulumi:"name"`
	Port int `pulumi:"port"`
}

type RegionInstanceGroupManagerNamedPortInput interface {
	pulumi.Input

	ToRegionInstanceGroupManagerNamedPortOutput() RegionInstanceGroupManagerNamedPortOutput
	ToRegionInstanceGroupManagerNamedPortOutputWithContext(context.Context) RegionInstanceGroupManagerNamedPortOutput
}

type RegionInstanceGroupManagerNamedPortArgs struct {
	// The name of the instance group manager. Must be 1-63
	// characters long and comply with
	// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
	// include lowercase letters, numbers, and hyphens.
	Name pulumi.StringInput `pulumi:"name"`
	Port pulumi.IntInput `pulumi:"port"`
}

func (RegionInstanceGroupManagerNamedPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionInstanceGroupManagerNamedPort)(nil)).Elem()
}

func (i RegionInstanceGroupManagerNamedPortArgs) ToRegionInstanceGroupManagerNamedPortOutput() RegionInstanceGroupManagerNamedPortOutput {
	return i.ToRegionInstanceGroupManagerNamedPortOutputWithContext(context.Background())
}

func (i RegionInstanceGroupManagerNamedPortArgs) ToRegionInstanceGroupManagerNamedPortOutputWithContext(ctx context.Context) RegionInstanceGroupManagerNamedPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionInstanceGroupManagerNamedPortOutput)
}

type RegionInstanceGroupManagerNamedPortArrayInput interface {
	pulumi.Input

	ToRegionInstanceGroupManagerNamedPortArrayOutput() RegionInstanceGroupManagerNamedPortArrayOutput
	ToRegionInstanceGroupManagerNamedPortArrayOutputWithContext(context.Context) RegionInstanceGroupManagerNamedPortArrayOutput
}

type RegionInstanceGroupManagerNamedPortArray []RegionInstanceGroupManagerNamedPortInput

func (RegionInstanceGroupManagerNamedPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionInstanceGroupManagerNamedPort)(nil)).Elem()
}

func (i RegionInstanceGroupManagerNamedPortArray) ToRegionInstanceGroupManagerNamedPortArrayOutput() RegionInstanceGroupManagerNamedPortArrayOutput {
	return i.ToRegionInstanceGroupManagerNamedPortArrayOutputWithContext(context.Background())
}

func (i RegionInstanceGroupManagerNamedPortArray) ToRegionInstanceGroupManagerNamedPortArrayOutputWithContext(ctx context.Context) RegionInstanceGroupManagerNamedPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionInstanceGroupManagerNamedPortArrayOutput)
}

type RegionInstanceGroupManagerNamedPortOutput struct { *pulumi.OutputState }

func (RegionInstanceGroupManagerNamedPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionInstanceGroupManagerNamedPort)(nil)).Elem()
}

func (o RegionInstanceGroupManagerNamedPortOutput) ToRegionInstanceGroupManagerNamedPortOutput() RegionInstanceGroupManagerNamedPortOutput {
	return o
}

func (o RegionInstanceGroupManagerNamedPortOutput) ToRegionInstanceGroupManagerNamedPortOutputWithContext(ctx context.Context) RegionInstanceGroupManagerNamedPortOutput {
	return o
}

// The name of the instance group manager. Must be 1-63
// characters long and comply with
// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Supported characters
// include lowercase letters, numbers, and hyphens.
func (o RegionInstanceGroupManagerNamedPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v RegionInstanceGroupManagerNamedPort) string { return v.Name }).(pulumi.StringOutput)
}

func (o RegionInstanceGroupManagerNamedPortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v RegionInstanceGroupManagerNamedPort) int { return v.Port }).(pulumi.IntOutput)
}

type RegionInstanceGroupManagerNamedPortArrayOutput struct { *pulumi.OutputState}

func (RegionInstanceGroupManagerNamedPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionInstanceGroupManagerNamedPort)(nil)).Elem()
}

func (o RegionInstanceGroupManagerNamedPortArrayOutput) ToRegionInstanceGroupManagerNamedPortArrayOutput() RegionInstanceGroupManagerNamedPortArrayOutput {
	return o
}

func (o RegionInstanceGroupManagerNamedPortArrayOutput) ToRegionInstanceGroupManagerNamedPortArrayOutputWithContext(ctx context.Context) RegionInstanceGroupManagerNamedPortArrayOutput {
	return o
}

func (o RegionInstanceGroupManagerNamedPortArrayOutput) Index(i pulumi.IntInput) RegionInstanceGroupManagerNamedPortOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RegionInstanceGroupManagerNamedPort {
		return vs[0].([]RegionInstanceGroupManagerNamedPort)[vs[1].(int)]
	}).(RegionInstanceGroupManagerNamedPortOutput)
}

func init() {
	pulumi.RegisterOutputType(RegionInstanceGroupManagerNamedPortOutput{})
	pulumi.RegisterOutputType(RegionInstanceGroupManagerNamedPortArrayOutput{})
}
