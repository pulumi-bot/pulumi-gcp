// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceSchedulingNodeAffinity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type InstanceSchedulingNodeAffinity struct {
	Key string `pulumi:"key"`
	Operator string `pulumi:"operator"`
	Values []string `pulumi:"values"`
}

type InstanceSchedulingNodeAffinityInput interface {
	pulumi.Input

	ToInstanceSchedulingNodeAffinityOutput() InstanceSchedulingNodeAffinityOutput
	ToInstanceSchedulingNodeAffinityOutputWithContext(context.Context) InstanceSchedulingNodeAffinityOutput
}

type InstanceSchedulingNodeAffinityArgs struct {
	Key pulumi.StringInput `pulumi:"key"`
	Operator pulumi.StringInput `pulumi:"operator"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (InstanceSchedulingNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSchedulingNodeAffinity)(nil)).Elem()
}

func (i InstanceSchedulingNodeAffinityArgs) ToInstanceSchedulingNodeAffinityOutput() InstanceSchedulingNodeAffinityOutput {
	return i.ToInstanceSchedulingNodeAffinityOutputWithContext(context.Background())
}

func (i InstanceSchedulingNodeAffinityArgs) ToInstanceSchedulingNodeAffinityOutputWithContext(ctx context.Context) InstanceSchedulingNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSchedulingNodeAffinityOutput)
}

type InstanceSchedulingNodeAffinityArrayInput interface {
	pulumi.Input

	ToInstanceSchedulingNodeAffinityArrayOutput() InstanceSchedulingNodeAffinityArrayOutput
	ToInstanceSchedulingNodeAffinityArrayOutputWithContext(context.Context) InstanceSchedulingNodeAffinityArrayOutput
}

type InstanceSchedulingNodeAffinityArray []InstanceSchedulingNodeAffinityInput

func (InstanceSchedulingNodeAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSchedulingNodeAffinity)(nil)).Elem()
}

func (i InstanceSchedulingNodeAffinityArray) ToInstanceSchedulingNodeAffinityArrayOutput() InstanceSchedulingNodeAffinityArrayOutput {
	return i.ToInstanceSchedulingNodeAffinityArrayOutputWithContext(context.Background())
}

func (i InstanceSchedulingNodeAffinityArray) ToInstanceSchedulingNodeAffinityArrayOutputWithContext(ctx context.Context) InstanceSchedulingNodeAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSchedulingNodeAffinityArrayOutput)
}

type InstanceSchedulingNodeAffinityOutput struct { *pulumi.OutputState }

func (InstanceSchedulingNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSchedulingNodeAffinity)(nil)).Elem()
}

func (o InstanceSchedulingNodeAffinityOutput) ToInstanceSchedulingNodeAffinityOutput() InstanceSchedulingNodeAffinityOutput {
	return o
}

func (o InstanceSchedulingNodeAffinityOutput) ToInstanceSchedulingNodeAffinityOutputWithContext(ctx context.Context) InstanceSchedulingNodeAffinityOutput {
	return o
}

func (o InstanceSchedulingNodeAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceSchedulingNodeAffinity) string { return v.Key }).(pulumi.StringOutput)
}

func (o InstanceSchedulingNodeAffinityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func (v InstanceSchedulingNodeAffinity) string { return v.Operator }).(pulumi.StringOutput)
}

func (o InstanceSchedulingNodeAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v InstanceSchedulingNodeAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type InstanceSchedulingNodeAffinityArrayOutput struct { *pulumi.OutputState}

func (InstanceSchedulingNodeAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSchedulingNodeAffinity)(nil)).Elem()
}

func (o InstanceSchedulingNodeAffinityArrayOutput) ToInstanceSchedulingNodeAffinityArrayOutput() InstanceSchedulingNodeAffinityArrayOutput {
	return o
}

func (o InstanceSchedulingNodeAffinityArrayOutput) ToInstanceSchedulingNodeAffinityArrayOutputWithContext(ctx context.Context) InstanceSchedulingNodeAffinityArrayOutput {
	return o
}

func (o InstanceSchedulingNodeAffinityArrayOutput) Index(i pulumi.IntInput) InstanceSchedulingNodeAffinityOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) InstanceSchedulingNodeAffinity {
		return vs[0].([]InstanceSchedulingNodeAffinity)[vs[1].(int)]
	}).(InstanceSchedulingNodeAffinityOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceSchedulingNodeAffinityOutput{})
	pulumi.RegisterOutputType(InstanceSchedulingNodeAffinityArrayOutput{})
}
