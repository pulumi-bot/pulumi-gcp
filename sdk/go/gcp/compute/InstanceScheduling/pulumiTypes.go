// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceScheduling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/InstanceSchedulingNodeAffinity"
)

type InstanceScheduling struct {
	AutomaticRestart *bool `pulumi:"automaticRestart"`
	NodeAffinities []computeInstanceSchedulingNodeAffinity.InstanceSchedulingNodeAffinity `pulumi:"nodeAffinities"`
	OnHostMaintenance *string `pulumi:"onHostMaintenance"`
	Preemptible *bool `pulumi:"preemptible"`
}

type InstanceSchedulingInput interface {
	pulumi.Input

	ToInstanceSchedulingOutput() InstanceSchedulingOutput
	ToInstanceSchedulingOutputWithContext(context.Context) InstanceSchedulingOutput
}

type InstanceSchedulingArgs struct {
	AutomaticRestart pulumi.BoolPtrInput `pulumi:"automaticRestart"`
	NodeAffinities computeInstanceSchedulingNodeAffinity.InstanceSchedulingNodeAffinityArrayInput `pulumi:"nodeAffinities"`
	OnHostMaintenance pulumi.StringPtrInput `pulumi:"onHostMaintenance"`
	Preemptible pulumi.BoolPtrInput `pulumi:"preemptible"`
}

func (InstanceSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceScheduling)(nil)).Elem()
}

func (i InstanceSchedulingArgs) ToInstanceSchedulingOutput() InstanceSchedulingOutput {
	return i.ToInstanceSchedulingOutputWithContext(context.Background())
}

func (i InstanceSchedulingArgs) ToInstanceSchedulingOutputWithContext(ctx context.Context) InstanceSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSchedulingOutput)
}

func (i InstanceSchedulingArgs) ToInstanceSchedulingPtrOutput() InstanceSchedulingPtrOutput {
	return i.ToInstanceSchedulingPtrOutputWithContext(context.Background())
}

func (i InstanceSchedulingArgs) ToInstanceSchedulingPtrOutputWithContext(ctx context.Context) InstanceSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSchedulingOutput).ToInstanceSchedulingPtrOutputWithContext(ctx)
}

type InstanceSchedulingPtrInput interface {
	pulumi.Input

	ToInstanceSchedulingPtrOutput() InstanceSchedulingPtrOutput
	ToInstanceSchedulingPtrOutputWithContext(context.Context) InstanceSchedulingPtrOutput
}

type instanceSchedulingPtrType InstanceSchedulingArgs

func InstanceSchedulingPtr(v *InstanceSchedulingArgs) InstanceSchedulingPtrInput {	return (*instanceSchedulingPtrType)(v)
}

func (*instanceSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceScheduling)(nil)).Elem()
}

func (i *instanceSchedulingPtrType) ToInstanceSchedulingPtrOutput() InstanceSchedulingPtrOutput {
	return i.ToInstanceSchedulingPtrOutputWithContext(context.Background())
}

func (i *instanceSchedulingPtrType) ToInstanceSchedulingPtrOutputWithContext(ctx context.Context) InstanceSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSchedulingPtrOutput)
}

type InstanceSchedulingOutput struct { *pulumi.OutputState }

func (InstanceSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceScheduling)(nil)).Elem()
}

func (o InstanceSchedulingOutput) ToInstanceSchedulingOutput() InstanceSchedulingOutput {
	return o
}

func (o InstanceSchedulingOutput) ToInstanceSchedulingOutputWithContext(ctx context.Context) InstanceSchedulingOutput {
	return o
}

func (o InstanceSchedulingOutput) ToInstanceSchedulingPtrOutput() InstanceSchedulingPtrOutput {
	return o.ToInstanceSchedulingPtrOutputWithContext(context.Background())
}

func (o InstanceSchedulingOutput) ToInstanceSchedulingPtrOutputWithContext(ctx context.Context) InstanceSchedulingPtrOutput {
	return o.ApplyT(func(v InstanceScheduling) *InstanceScheduling {
		return &v
	}).(InstanceSchedulingPtrOutput)
}
func (o InstanceSchedulingOutput) AutomaticRestart() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceScheduling) *bool { return v.AutomaticRestart }).(pulumi.BoolPtrOutput)
}

func (o InstanceSchedulingOutput) NodeAffinities() computeInstanceSchedulingNodeAffinity.InstanceSchedulingNodeAffinityArrayOutput {
	return o.ApplyT(func (v InstanceScheduling) []computeInstanceSchedulingNodeAffinity.InstanceSchedulingNodeAffinity { return v.NodeAffinities }).(computeInstanceSchedulingNodeAffinity.InstanceSchedulingNodeAffinityArrayOutput)
}

func (o InstanceSchedulingOutput) OnHostMaintenance() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceScheduling) *string { return v.OnHostMaintenance }).(pulumi.StringPtrOutput)
}

func (o InstanceSchedulingOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceScheduling) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

type InstanceSchedulingPtrOutput struct { *pulumi.OutputState}

func (InstanceSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceScheduling)(nil)).Elem()
}

func (o InstanceSchedulingPtrOutput) ToInstanceSchedulingPtrOutput() InstanceSchedulingPtrOutput {
	return o
}

func (o InstanceSchedulingPtrOutput) ToInstanceSchedulingPtrOutputWithContext(ctx context.Context) InstanceSchedulingPtrOutput {
	return o
}

func (o InstanceSchedulingPtrOutput) Elem() InstanceSchedulingOutput {
	return o.ApplyT(func (v *InstanceScheduling) InstanceScheduling { return *v }).(InstanceSchedulingOutput)
}

func (o InstanceSchedulingPtrOutput) AutomaticRestart() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceScheduling) *bool { return v.AutomaticRestart }).(pulumi.BoolPtrOutput)
}

func (o InstanceSchedulingPtrOutput) NodeAffinities() computeInstanceSchedulingNodeAffinity.InstanceSchedulingNodeAffinityArrayOutput {
	return o.ApplyT(func (v InstanceScheduling) []computeInstanceSchedulingNodeAffinity.InstanceSchedulingNodeAffinity { return v.NodeAffinities }).(computeInstanceSchedulingNodeAffinity.InstanceSchedulingNodeAffinityArrayOutput)
}

func (o InstanceSchedulingPtrOutput) OnHostMaintenance() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceScheduling) *string { return v.OnHostMaintenance }).(pulumi.StringPtrOutput)
}

func (o InstanceSchedulingPtrOutput) Preemptible() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceScheduling) *bool { return v.Preemptible }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceSchedulingOutput{})
	pulumi.RegisterOutputType(InstanceSchedulingPtrOutput{})
}
