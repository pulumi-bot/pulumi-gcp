// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get the IP address from a static address. For more information see
// the official [API](https://cloud.google.com/compute/docs/reference/latest/addresses/get) documentation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/compute"
// 	"github.com/pulumi/pulumi-gcp/sdk/v5/go/gcp/dns"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		myAddress, err := compute.LookupAddress(ctx, &compute.LookupAddressArgs{
// 			Name: "foobar",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		prod, err := dns.NewManagedZone(ctx, "prod", &dns.ManagedZoneArgs{
// 			DnsName: pulumi.String("prod.mydomain.com."),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = dns.NewRecordSet(ctx, "frontend", &dns.RecordSetArgs{
// 			Name: prod.DnsName.ApplyT(func(dnsName string) (string, error) {
// 				return fmt.Sprintf("%v%v", "frontend.", dnsName), nil
// 			}).(pulumi.StringOutput),
// 			Type:        pulumi.String("A"),
// 			Ttl:         pulumi.Int(300),
// 			ManagedZone: prod.Name,
// 			Rrdatas: pulumi.StringArray{
// 				pulumi.String(myAddress.Address),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupAddress(ctx *pulumi.Context, args *LookupAddressArgs, opts ...pulumi.InvokeOption) (*LookupAddressResult, error) {
	var rv LookupAddressResult
	err := ctx.Invoke("gcp:compute/getAddress:getAddress", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAddress.
type LookupAddressArgs struct {
	// A unique name for the resource, required by GCE.
	Name string `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The Region in which the created address reside.
	// If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getAddress.
type LookupAddressResult struct {
	// The IP of the created resource.
	Address string `pulumi:"address"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Name    string `pulumi:"name"`
	Project string `pulumi:"project"`
	Region  string `pulumi:"region"`
	// The URI of the created resource.
	SelfLink string `pulumi:"selfLink"`
	// Indicates if the address is used. Possible values are: RESERVED or IN_USE.
	Status string `pulumi:"status"`
}

func LookupAddressApply(ctx *pulumi.Context, args LookupAddressApplyInput, opts ...pulumi.InvokeOption) LookupAddressResultOutput {
	return args.ToLookupAddressApplyOutput().ApplyT(func(v LookupAddressArgs) (LookupAddressResult, error) {
		r, err := LookupAddress(ctx, &v, opts...)
		return *r, err

	}).(LookupAddressResultOutput)
}

// LookupAddressApplyInput is an input type that accepts LookupAddressApplyArgs and LookupAddressApplyOutput values.
// You can construct a concrete instance of `LookupAddressApplyInput` via:
//
//          LookupAddressApplyArgs{...}
type LookupAddressApplyInput interface {
	pulumi.Input

	ToLookupAddressApplyOutput() LookupAddressApplyOutput
	ToLookupAddressApplyOutputWithContext(context.Context) LookupAddressApplyOutput
}

// A collection of arguments for invoking getAddress.
type LookupAddressApplyArgs struct {
	// A unique name for the resource, required by GCE.
	Name pulumi.StringInput `pulumi:"name"`
	// The project in which the resource belongs. If it
	// is not provided, the provider project is used.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The Region in which the created address reside.
	// If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupAddressApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressArgs)(nil)).Elem()
}

func (i LookupAddressApplyArgs) ToLookupAddressApplyOutput() LookupAddressApplyOutput {
	return i.ToLookupAddressApplyOutputWithContext(context.Background())
}

func (i LookupAddressApplyArgs) ToLookupAddressApplyOutputWithContext(ctx context.Context) LookupAddressApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupAddressApplyOutput)
}

// A collection of arguments for invoking getAddress.
type LookupAddressApplyOutput struct{ *pulumi.OutputState }

func (LookupAddressApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressArgs)(nil)).Elem()
}

func (o LookupAddressApplyOutput) ToLookupAddressApplyOutput() LookupAddressApplyOutput {
	return o
}

func (o LookupAddressApplyOutput) ToLookupAddressApplyOutputWithContext(ctx context.Context) LookupAddressApplyOutput {
	return o
}

// A unique name for the resource, required by GCE.
func (o LookupAddressApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The project in which the resource belongs. If it
// is not provided, the provider project is used.
func (o LookupAddressApplyOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAddressArgs) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// The Region in which the created address reside.
// If it is not provided, the provider region is used.
func (o LookupAddressApplyOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAddressArgs) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// A collection of values returned by getAddress.
type LookupAddressResultOutput struct{ *pulumi.OutputState }

func (LookupAddressResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressResult)(nil)).Elem()
}

func (o LookupAddressResultOutput) ToLookupAddressResultOutput() LookupAddressResultOutput {
	return o
}

func (o LookupAddressResultOutput) ToLookupAddressResultOutputWithContext(ctx context.Context) LookupAddressResultOutput {
	return o
}

// The IP of the created resource.
func (o LookupAddressResultOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Address }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAddressResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAddressResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAddressResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupAddressResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Region }).(pulumi.StringOutput)
}

// The URI of the created resource.
func (o LookupAddressResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Indicates if the address is used. Possible values are: RESERVED or IN_USE.
func (o LookupAddressResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAddressApplyOutput{})
	pulumi.RegisterOutputType(LookupAddressResultOutput{})
}
