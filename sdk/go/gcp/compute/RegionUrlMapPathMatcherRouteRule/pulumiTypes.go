// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RegionUrlMapPathMatcherRouteRule

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRule"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleHeaderMatchRangeMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilter"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleMetadataFilterFilterLabel"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleMatchRuleQueryParameterMatch"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionCorsPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyAbort"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionFaultInjectionPolicyDelayFixedDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionRetryPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionRetryPolicyPerTryTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionUrlRewrite"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionWeightedBackendService"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleRouteActionWeightedBackendServiceHeaderActionResponseHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/RegionUrlMapPathMatcherRouteRuleUrlRedirect"
)

type RegionUrlMapPathMatcherRouteRule struct {
	HeaderAction *computeRegionUrlMapPathMatcherRouteRuleHeaderAction.RegionUrlMapPathMatcherRouteRuleHeaderAction `pulumi:"headerAction"`
	MatchRules []computeRegionUrlMapPathMatcherRouteRuleMatchRule.RegionUrlMapPathMatcherRouteRuleMatchRule `pulumi:"matchRules"`
	Priority int `pulumi:"priority"`
	RouteAction *computeRegionUrlMapPathMatcherRouteRuleRouteAction.RegionUrlMapPathMatcherRouteRuleRouteAction `pulumi:"routeAction"`
	Service *string `pulumi:"service"`
	UrlRedirect *computeRegionUrlMapPathMatcherRouteRuleUrlRedirect.RegionUrlMapPathMatcherRouteRuleUrlRedirect `pulumi:"urlRedirect"`
}

type RegionUrlMapPathMatcherRouteRuleInput interface {
	pulumi.Input

	ToRegionUrlMapPathMatcherRouteRuleOutput() RegionUrlMapPathMatcherRouteRuleOutput
	ToRegionUrlMapPathMatcherRouteRuleOutputWithContext(context.Context) RegionUrlMapPathMatcherRouteRuleOutput
}

type RegionUrlMapPathMatcherRouteRuleArgs struct {
	HeaderAction computeRegionUrlMapPathMatcherRouteRuleHeaderAction.RegionUrlMapPathMatcherRouteRuleHeaderActionPtrInput `pulumi:"headerAction"`
	MatchRules computeRegionUrlMapPathMatcherRouteRuleMatchRule.RegionUrlMapPathMatcherRouteRuleMatchRuleArrayInput `pulumi:"matchRules"`
	Priority pulumi.IntInput `pulumi:"priority"`
	RouteAction computeRegionUrlMapPathMatcherRouteRuleRouteAction.RegionUrlMapPathMatcherRouteRuleRouteActionPtrInput `pulumi:"routeAction"`
	Service pulumi.StringPtrInput `pulumi:"service"`
	UrlRedirect computeRegionUrlMapPathMatcherRouteRuleUrlRedirect.RegionUrlMapPathMatcherRouteRuleUrlRedirectPtrInput `pulumi:"urlRedirect"`
}

func (RegionUrlMapPathMatcherRouteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionUrlMapPathMatcherRouteRule)(nil)).Elem()
}

func (i RegionUrlMapPathMatcherRouteRuleArgs) ToRegionUrlMapPathMatcherRouteRuleOutput() RegionUrlMapPathMatcherRouteRuleOutput {
	return i.ToRegionUrlMapPathMatcherRouteRuleOutputWithContext(context.Background())
}

func (i RegionUrlMapPathMatcherRouteRuleArgs) ToRegionUrlMapPathMatcherRouteRuleOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionUrlMapPathMatcherRouteRuleOutput)
}

type RegionUrlMapPathMatcherRouteRuleArrayInput interface {
	pulumi.Input

	ToRegionUrlMapPathMatcherRouteRuleArrayOutput() RegionUrlMapPathMatcherRouteRuleArrayOutput
	ToRegionUrlMapPathMatcherRouteRuleArrayOutputWithContext(context.Context) RegionUrlMapPathMatcherRouteRuleArrayOutput
}

type RegionUrlMapPathMatcherRouteRuleArray []RegionUrlMapPathMatcherRouteRuleInput

func (RegionUrlMapPathMatcherRouteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionUrlMapPathMatcherRouteRule)(nil)).Elem()
}

func (i RegionUrlMapPathMatcherRouteRuleArray) ToRegionUrlMapPathMatcherRouteRuleArrayOutput() RegionUrlMapPathMatcherRouteRuleArrayOutput {
	return i.ToRegionUrlMapPathMatcherRouteRuleArrayOutputWithContext(context.Background())
}

func (i RegionUrlMapPathMatcherRouteRuleArray) ToRegionUrlMapPathMatcherRouteRuleArrayOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionUrlMapPathMatcherRouteRuleArrayOutput)
}

type RegionUrlMapPathMatcherRouteRuleOutput struct { *pulumi.OutputState }

func (RegionUrlMapPathMatcherRouteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionUrlMapPathMatcherRouteRule)(nil)).Elem()
}

func (o RegionUrlMapPathMatcherRouteRuleOutput) ToRegionUrlMapPathMatcherRouteRuleOutput() RegionUrlMapPathMatcherRouteRuleOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleOutput) ToRegionUrlMapPathMatcherRouteRuleOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleOutput) HeaderAction() computeRegionUrlMapPathMatcherRouteRuleHeaderAction.RegionUrlMapPathMatcherRouteRuleHeaderActionPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRule) *computeRegionUrlMapPathMatcherRouteRuleHeaderAction.RegionUrlMapPathMatcherRouteRuleHeaderAction { return v.HeaderAction }).(computeRegionUrlMapPathMatcherRouteRuleHeaderAction.RegionUrlMapPathMatcherRouteRuleHeaderActionPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleOutput) MatchRules() computeRegionUrlMapPathMatcherRouteRuleMatchRule.RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRule) []computeRegionUrlMapPathMatcherRouteRuleMatchRule.RegionUrlMapPathMatcherRouteRuleMatchRule { return v.MatchRules }).(computeRegionUrlMapPathMatcherRouteRuleMatchRule.RegionUrlMapPathMatcherRouteRuleMatchRuleArrayOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRule) int { return v.Priority }).(pulumi.IntOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleOutput) RouteAction() computeRegionUrlMapPathMatcherRouteRuleRouteAction.RegionUrlMapPathMatcherRouteRuleRouteActionPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRule) *computeRegionUrlMapPathMatcherRouteRuleRouteAction.RegionUrlMapPathMatcherRouteRuleRouteAction { return v.RouteAction }).(computeRegionUrlMapPathMatcherRouteRuleRouteAction.RegionUrlMapPathMatcherRouteRuleRouteActionPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRule) *string { return v.Service }).(pulumi.StringPtrOutput)
}

func (o RegionUrlMapPathMatcherRouteRuleOutput) UrlRedirect() computeRegionUrlMapPathMatcherRouteRuleUrlRedirect.RegionUrlMapPathMatcherRouteRuleUrlRedirectPtrOutput {
	return o.ApplyT(func (v RegionUrlMapPathMatcherRouteRule) *computeRegionUrlMapPathMatcherRouteRuleUrlRedirect.RegionUrlMapPathMatcherRouteRuleUrlRedirect { return v.UrlRedirect }).(computeRegionUrlMapPathMatcherRouteRuleUrlRedirect.RegionUrlMapPathMatcherRouteRuleUrlRedirectPtrOutput)
}

type RegionUrlMapPathMatcherRouteRuleArrayOutput struct { *pulumi.OutputState}

func (RegionUrlMapPathMatcherRouteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionUrlMapPathMatcherRouteRule)(nil)).Elem()
}

func (o RegionUrlMapPathMatcherRouteRuleArrayOutput) ToRegionUrlMapPathMatcherRouteRuleArrayOutput() RegionUrlMapPathMatcherRouteRuleArrayOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleArrayOutput) ToRegionUrlMapPathMatcherRouteRuleArrayOutputWithContext(ctx context.Context) RegionUrlMapPathMatcherRouteRuleArrayOutput {
	return o
}

func (o RegionUrlMapPathMatcherRouteRuleArrayOutput) Index(i pulumi.IntInput) RegionUrlMapPathMatcherRouteRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RegionUrlMapPathMatcherRouteRule {
		return vs[0].([]RegionUrlMapPathMatcherRouteRule)[vs[1].(int)]
	}).(RegionUrlMapPathMatcherRouteRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(RegionUrlMapPathMatcherRouteRuleOutput{})
	pulumi.RegisterOutputType(RegionUrlMapPathMatcherRouteRuleArrayOutput{})
}
