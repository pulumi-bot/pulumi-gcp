// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package URLMapTest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type URLMapTest struct {
	Description *string `pulumi:"description"`
	Host string `pulumi:"host"`
	Path string `pulumi:"path"`
	Service string `pulumi:"service"`
}

type URLMapTestInput interface {
	pulumi.Input

	ToURLMapTestOutput() URLMapTestOutput
	ToURLMapTestOutputWithContext(context.Context) URLMapTestOutput
}

type URLMapTestArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Host pulumi.StringInput `pulumi:"host"`
	Path pulumi.StringInput `pulumi:"path"`
	Service pulumi.StringInput `pulumi:"service"`
}

func (URLMapTestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapTest)(nil)).Elem()
}

func (i URLMapTestArgs) ToURLMapTestOutput() URLMapTestOutput {
	return i.ToURLMapTestOutputWithContext(context.Background())
}

func (i URLMapTestArgs) ToURLMapTestOutputWithContext(ctx context.Context) URLMapTestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapTestOutput)
}

type URLMapTestArrayInput interface {
	pulumi.Input

	ToURLMapTestArrayOutput() URLMapTestArrayOutput
	ToURLMapTestArrayOutputWithContext(context.Context) URLMapTestArrayOutput
}

type URLMapTestArray []URLMapTestInput

func (URLMapTestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]URLMapTest)(nil)).Elem()
}

func (i URLMapTestArray) ToURLMapTestArrayOutput() URLMapTestArrayOutput {
	return i.ToURLMapTestArrayOutputWithContext(context.Background())
}

func (i URLMapTestArray) ToURLMapTestArrayOutputWithContext(ctx context.Context) URLMapTestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapTestArrayOutput)
}

type URLMapTestOutput struct { *pulumi.OutputState }

func (URLMapTestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapTest)(nil)).Elem()
}

func (o URLMapTestOutput) ToURLMapTestOutput() URLMapTestOutput {
	return o
}

func (o URLMapTestOutput) ToURLMapTestOutputWithContext(ctx context.Context) URLMapTestOutput {
	return o
}

func (o URLMapTestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v URLMapTest) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o URLMapTestOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func (v URLMapTest) string { return v.Host }).(pulumi.StringOutput)
}

func (o URLMapTestOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v URLMapTest) string { return v.Path }).(pulumi.StringOutput)
}

func (o URLMapTestOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func (v URLMapTest) string { return v.Service }).(pulumi.StringOutput)
}

type URLMapTestArrayOutput struct { *pulumi.OutputState}

func (URLMapTestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]URLMapTest)(nil)).Elem()
}

func (o URLMapTestArrayOutput) ToURLMapTestArrayOutput() URLMapTestArrayOutput {
	return o
}

func (o URLMapTestArrayOutput) ToURLMapTestArrayOutputWithContext(ctx context.Context) URLMapTestArrayOutput {
	return o
}

func (o URLMapTestArrayOutput) Index(i pulumi.IntInput) URLMapTestOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) URLMapTest {
		return vs[0].([]URLMapTest)[vs[1].(int)]
	}).(URLMapTestOutput)
}

func init() {
	pulumi.RegisterOutputType(URLMapTestOutput{})
	pulumi.RegisterOutputType(URLMapTestArrayOutput{})
}
