// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package URLMapPathMatcherPathRuleRouteAction

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionCorsPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyAbort"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyDelayFixedDelay"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionRetryPolicy"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionRetryPolicyPerTryTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionTimeout"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionUrlRewrite"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendService"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderAction"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionRequestHeadersToAdd"
	"https:/github.com/pulumi/pulumi-gcp/compute/URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceHeaderActionResponseHeadersToAdd"
)

type URLMapPathMatcherPathRuleRouteAction struct {
	CorsPolicy *computeURLMapPathMatcherPathRuleRouteActionCorsPolicy.URLMapPathMatcherPathRuleRouteActionCorsPolicy `pulumi:"corsPolicy"`
	FaultInjectionPolicy *computeURLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy `pulumi:"faultInjectionPolicy"`
	RequestMirrorPolicy *computeURLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy `pulumi:"requestMirrorPolicy"`
	RetryPolicy *computeURLMapPathMatcherPathRuleRouteActionRetryPolicy.URLMapPathMatcherPathRuleRouteActionRetryPolicy `pulumi:"retryPolicy"`
	Timeout *computeURLMapPathMatcherPathRuleRouteActionTimeout.URLMapPathMatcherPathRuleRouteActionTimeout `pulumi:"timeout"`
	UrlRewrite *computeURLMapPathMatcherPathRuleRouteActionUrlRewrite.URLMapPathMatcherPathRuleRouteActionUrlRewrite `pulumi:"urlRewrite"`
	WeightedBackendServices []computeURLMapPathMatcherPathRuleRouteActionWeightedBackendService.URLMapPathMatcherPathRuleRouteActionWeightedBackendService `pulumi:"weightedBackendServices"`
}

type URLMapPathMatcherPathRuleRouteActionInput interface {
	pulumi.Input

	ToURLMapPathMatcherPathRuleRouteActionOutput() URLMapPathMatcherPathRuleRouteActionOutput
	ToURLMapPathMatcherPathRuleRouteActionOutputWithContext(context.Context) URLMapPathMatcherPathRuleRouteActionOutput
}

type URLMapPathMatcherPathRuleRouteActionArgs struct {
	CorsPolicy computeURLMapPathMatcherPathRuleRouteActionCorsPolicy.URLMapPathMatcherPathRuleRouteActionCorsPolicyPtrInput `pulumi:"corsPolicy"`
	FaultInjectionPolicy computeURLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyPtrInput `pulumi:"faultInjectionPolicy"`
	RequestMirrorPolicy computeURLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyPtrInput `pulumi:"requestMirrorPolicy"`
	RetryPolicy computeURLMapPathMatcherPathRuleRouteActionRetryPolicy.URLMapPathMatcherPathRuleRouteActionRetryPolicyPtrInput `pulumi:"retryPolicy"`
	Timeout computeURLMapPathMatcherPathRuleRouteActionTimeout.URLMapPathMatcherPathRuleRouteActionTimeoutPtrInput `pulumi:"timeout"`
	UrlRewrite computeURLMapPathMatcherPathRuleRouteActionUrlRewrite.URLMapPathMatcherPathRuleRouteActionUrlRewritePtrInput `pulumi:"urlRewrite"`
	WeightedBackendServices computeURLMapPathMatcherPathRuleRouteActionWeightedBackendService.URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceArrayInput `pulumi:"weightedBackendServices"`
}

func (URLMapPathMatcherPathRuleRouteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapPathMatcherPathRuleRouteAction)(nil)).Elem()
}

func (i URLMapPathMatcherPathRuleRouteActionArgs) ToURLMapPathMatcherPathRuleRouteActionOutput() URLMapPathMatcherPathRuleRouteActionOutput {
	return i.ToURLMapPathMatcherPathRuleRouteActionOutputWithContext(context.Background())
}

func (i URLMapPathMatcherPathRuleRouteActionArgs) ToURLMapPathMatcherPathRuleRouteActionOutputWithContext(ctx context.Context) URLMapPathMatcherPathRuleRouteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherPathRuleRouteActionOutput)
}

func (i URLMapPathMatcherPathRuleRouteActionArgs) ToURLMapPathMatcherPathRuleRouteActionPtrOutput() URLMapPathMatcherPathRuleRouteActionPtrOutput {
	return i.ToURLMapPathMatcherPathRuleRouteActionPtrOutputWithContext(context.Background())
}

func (i URLMapPathMatcherPathRuleRouteActionArgs) ToURLMapPathMatcherPathRuleRouteActionPtrOutputWithContext(ctx context.Context) URLMapPathMatcherPathRuleRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherPathRuleRouteActionOutput).ToURLMapPathMatcherPathRuleRouteActionPtrOutputWithContext(ctx)
}

type URLMapPathMatcherPathRuleRouteActionPtrInput interface {
	pulumi.Input

	ToURLMapPathMatcherPathRuleRouteActionPtrOutput() URLMapPathMatcherPathRuleRouteActionPtrOutput
	ToURLMapPathMatcherPathRuleRouteActionPtrOutputWithContext(context.Context) URLMapPathMatcherPathRuleRouteActionPtrOutput
}

type urlmapPathMatcherPathRuleRouteActionPtrType URLMapPathMatcherPathRuleRouteActionArgs

func URLMapPathMatcherPathRuleRouteActionPtr(v *URLMapPathMatcherPathRuleRouteActionArgs) URLMapPathMatcherPathRuleRouteActionPtrInput {	return (*urlmapPathMatcherPathRuleRouteActionPtrType)(v)
}

func (*urlmapPathMatcherPathRuleRouteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**URLMapPathMatcherPathRuleRouteAction)(nil)).Elem()
}

func (i *urlmapPathMatcherPathRuleRouteActionPtrType) ToURLMapPathMatcherPathRuleRouteActionPtrOutput() URLMapPathMatcherPathRuleRouteActionPtrOutput {
	return i.ToURLMapPathMatcherPathRuleRouteActionPtrOutputWithContext(context.Background())
}

func (i *urlmapPathMatcherPathRuleRouteActionPtrType) ToURLMapPathMatcherPathRuleRouteActionPtrOutputWithContext(ctx context.Context) URLMapPathMatcherPathRuleRouteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(URLMapPathMatcherPathRuleRouteActionPtrOutput)
}

type URLMapPathMatcherPathRuleRouteActionOutput struct { *pulumi.OutputState }

func (URLMapPathMatcherPathRuleRouteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URLMapPathMatcherPathRuleRouteAction)(nil)).Elem()
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) ToURLMapPathMatcherPathRuleRouteActionOutput() URLMapPathMatcherPathRuleRouteActionOutput {
	return o
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) ToURLMapPathMatcherPathRuleRouteActionOutputWithContext(ctx context.Context) URLMapPathMatcherPathRuleRouteActionOutput {
	return o
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) ToURLMapPathMatcherPathRuleRouteActionPtrOutput() URLMapPathMatcherPathRuleRouteActionPtrOutput {
	return o.ToURLMapPathMatcherPathRuleRouteActionPtrOutputWithContext(context.Background())
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) ToURLMapPathMatcherPathRuleRouteActionPtrOutputWithContext(ctx context.Context) URLMapPathMatcherPathRuleRouteActionPtrOutput {
	return o.ApplyT(func(v URLMapPathMatcherPathRuleRouteAction) *URLMapPathMatcherPathRuleRouteAction {
		return &v
	}).(URLMapPathMatcherPathRuleRouteActionPtrOutput)
}
func (o URLMapPathMatcherPathRuleRouteActionOutput) CorsPolicy() computeURLMapPathMatcherPathRuleRouteActionCorsPolicy.URLMapPathMatcherPathRuleRouteActionCorsPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionCorsPolicy.URLMapPathMatcherPathRuleRouteActionCorsPolicy { return v.CorsPolicy }).(computeURLMapPathMatcherPathRuleRouteActionCorsPolicy.URLMapPathMatcherPathRuleRouteActionCorsPolicyPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) FaultInjectionPolicy() computeURLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy { return v.FaultInjectionPolicy }).(computeURLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) RequestMirrorPolicy() computeURLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy { return v.RequestMirrorPolicy }).(computeURLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) RetryPolicy() computeURLMapPathMatcherPathRuleRouteActionRetryPolicy.URLMapPathMatcherPathRuleRouteActionRetryPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionRetryPolicy.URLMapPathMatcherPathRuleRouteActionRetryPolicy { return v.RetryPolicy }).(computeURLMapPathMatcherPathRuleRouteActionRetryPolicy.URLMapPathMatcherPathRuleRouteActionRetryPolicyPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) Timeout() computeURLMapPathMatcherPathRuleRouteActionTimeout.URLMapPathMatcherPathRuleRouteActionTimeoutPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionTimeout.URLMapPathMatcherPathRuleRouteActionTimeout { return v.Timeout }).(computeURLMapPathMatcherPathRuleRouteActionTimeout.URLMapPathMatcherPathRuleRouteActionTimeoutPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) UrlRewrite() computeURLMapPathMatcherPathRuleRouteActionUrlRewrite.URLMapPathMatcherPathRuleRouteActionUrlRewritePtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionUrlRewrite.URLMapPathMatcherPathRuleRouteActionUrlRewrite { return v.UrlRewrite }).(computeURLMapPathMatcherPathRuleRouteActionUrlRewrite.URLMapPathMatcherPathRuleRouteActionUrlRewritePtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionOutput) WeightedBackendServices() computeURLMapPathMatcherPathRuleRouteActionWeightedBackendService.URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceArrayOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) []computeURLMapPathMatcherPathRuleRouteActionWeightedBackendService.URLMapPathMatcherPathRuleRouteActionWeightedBackendService { return v.WeightedBackendServices }).(computeURLMapPathMatcherPathRuleRouteActionWeightedBackendService.URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceArrayOutput)
}

type URLMapPathMatcherPathRuleRouteActionPtrOutput struct { *pulumi.OutputState}

func (URLMapPathMatcherPathRuleRouteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**URLMapPathMatcherPathRuleRouteAction)(nil)).Elem()
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) ToURLMapPathMatcherPathRuleRouteActionPtrOutput() URLMapPathMatcherPathRuleRouteActionPtrOutput {
	return o
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) ToURLMapPathMatcherPathRuleRouteActionPtrOutputWithContext(ctx context.Context) URLMapPathMatcherPathRuleRouteActionPtrOutput {
	return o
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) Elem() URLMapPathMatcherPathRuleRouteActionOutput {
	return o.ApplyT(func (v *URLMapPathMatcherPathRuleRouteAction) URLMapPathMatcherPathRuleRouteAction { return *v }).(URLMapPathMatcherPathRuleRouteActionOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) CorsPolicy() computeURLMapPathMatcherPathRuleRouteActionCorsPolicy.URLMapPathMatcherPathRuleRouteActionCorsPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionCorsPolicy.URLMapPathMatcherPathRuleRouteActionCorsPolicy { return v.CorsPolicy }).(computeURLMapPathMatcherPathRuleRouteActionCorsPolicy.URLMapPathMatcherPathRuleRouteActionCorsPolicyPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) FaultInjectionPolicy() computeURLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy { return v.FaultInjectionPolicy }).(computeURLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicyPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) RequestMirrorPolicy() computeURLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy { return v.RequestMirrorPolicy }).(computeURLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) RetryPolicy() computeURLMapPathMatcherPathRuleRouteActionRetryPolicy.URLMapPathMatcherPathRuleRouteActionRetryPolicyPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionRetryPolicy.URLMapPathMatcherPathRuleRouteActionRetryPolicy { return v.RetryPolicy }).(computeURLMapPathMatcherPathRuleRouteActionRetryPolicy.URLMapPathMatcherPathRuleRouteActionRetryPolicyPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) Timeout() computeURLMapPathMatcherPathRuleRouteActionTimeout.URLMapPathMatcherPathRuleRouteActionTimeoutPtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionTimeout.URLMapPathMatcherPathRuleRouteActionTimeout { return v.Timeout }).(computeURLMapPathMatcherPathRuleRouteActionTimeout.URLMapPathMatcherPathRuleRouteActionTimeoutPtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) UrlRewrite() computeURLMapPathMatcherPathRuleRouteActionUrlRewrite.URLMapPathMatcherPathRuleRouteActionUrlRewritePtrOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) *computeURLMapPathMatcherPathRuleRouteActionUrlRewrite.URLMapPathMatcherPathRuleRouteActionUrlRewrite { return v.UrlRewrite }).(computeURLMapPathMatcherPathRuleRouteActionUrlRewrite.URLMapPathMatcherPathRuleRouteActionUrlRewritePtrOutput)
}

func (o URLMapPathMatcherPathRuleRouteActionPtrOutput) WeightedBackendServices() computeURLMapPathMatcherPathRuleRouteActionWeightedBackendService.URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceArrayOutput {
	return o.ApplyT(func (v URLMapPathMatcherPathRuleRouteAction) []computeURLMapPathMatcherPathRuleRouteActionWeightedBackendService.URLMapPathMatcherPathRuleRouteActionWeightedBackendService { return v.WeightedBackendServices }).(computeURLMapPathMatcherPathRuleRouteActionWeightedBackendService.URLMapPathMatcherPathRuleRouteActionWeightedBackendServiceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(URLMapPathMatcherPathRuleRouteActionOutput{})
	pulumi.RegisterOutputType(URLMapPathMatcherPathRuleRouteActionPtrOutput{})
}
