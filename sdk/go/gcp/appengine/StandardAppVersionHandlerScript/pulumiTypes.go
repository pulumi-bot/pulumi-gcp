// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package StandardAppVersionHandlerScript

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type StandardAppVersionHandlerScript struct {
	ScriptPath string `pulumi:"scriptPath"`
}

type StandardAppVersionHandlerScriptInput interface {
	pulumi.Input

	ToStandardAppVersionHandlerScriptOutput() StandardAppVersionHandlerScriptOutput
	ToStandardAppVersionHandlerScriptOutputWithContext(context.Context) StandardAppVersionHandlerScriptOutput
}

type StandardAppVersionHandlerScriptArgs struct {
	ScriptPath pulumi.StringInput `pulumi:"scriptPath"`
}

func (StandardAppVersionHandlerScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardAppVersionHandlerScript)(nil)).Elem()
}

func (i StandardAppVersionHandlerScriptArgs) ToStandardAppVersionHandlerScriptOutput() StandardAppVersionHandlerScriptOutput {
	return i.ToStandardAppVersionHandlerScriptOutputWithContext(context.Background())
}

func (i StandardAppVersionHandlerScriptArgs) ToStandardAppVersionHandlerScriptOutputWithContext(ctx context.Context) StandardAppVersionHandlerScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardAppVersionHandlerScriptOutput)
}

func (i StandardAppVersionHandlerScriptArgs) ToStandardAppVersionHandlerScriptPtrOutput() StandardAppVersionHandlerScriptPtrOutput {
	return i.ToStandardAppVersionHandlerScriptPtrOutputWithContext(context.Background())
}

func (i StandardAppVersionHandlerScriptArgs) ToStandardAppVersionHandlerScriptPtrOutputWithContext(ctx context.Context) StandardAppVersionHandlerScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardAppVersionHandlerScriptOutput).ToStandardAppVersionHandlerScriptPtrOutputWithContext(ctx)
}

type StandardAppVersionHandlerScriptPtrInput interface {
	pulumi.Input

	ToStandardAppVersionHandlerScriptPtrOutput() StandardAppVersionHandlerScriptPtrOutput
	ToStandardAppVersionHandlerScriptPtrOutputWithContext(context.Context) StandardAppVersionHandlerScriptPtrOutput
}

type standardAppVersionHandlerScriptPtrType StandardAppVersionHandlerScriptArgs

func StandardAppVersionHandlerScriptPtr(v *StandardAppVersionHandlerScriptArgs) StandardAppVersionHandlerScriptPtrInput {	return (*standardAppVersionHandlerScriptPtrType)(v)
}

func (*standardAppVersionHandlerScriptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardAppVersionHandlerScript)(nil)).Elem()
}

func (i *standardAppVersionHandlerScriptPtrType) ToStandardAppVersionHandlerScriptPtrOutput() StandardAppVersionHandlerScriptPtrOutput {
	return i.ToStandardAppVersionHandlerScriptPtrOutputWithContext(context.Background())
}

func (i *standardAppVersionHandlerScriptPtrType) ToStandardAppVersionHandlerScriptPtrOutputWithContext(ctx context.Context) StandardAppVersionHandlerScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardAppVersionHandlerScriptPtrOutput)
}

type StandardAppVersionHandlerScriptOutput struct { *pulumi.OutputState }

func (StandardAppVersionHandlerScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardAppVersionHandlerScript)(nil)).Elem()
}

func (o StandardAppVersionHandlerScriptOutput) ToStandardAppVersionHandlerScriptOutput() StandardAppVersionHandlerScriptOutput {
	return o
}

func (o StandardAppVersionHandlerScriptOutput) ToStandardAppVersionHandlerScriptOutputWithContext(ctx context.Context) StandardAppVersionHandlerScriptOutput {
	return o
}

func (o StandardAppVersionHandlerScriptOutput) ToStandardAppVersionHandlerScriptPtrOutput() StandardAppVersionHandlerScriptPtrOutput {
	return o.ToStandardAppVersionHandlerScriptPtrOutputWithContext(context.Background())
}

func (o StandardAppVersionHandlerScriptOutput) ToStandardAppVersionHandlerScriptPtrOutputWithContext(ctx context.Context) StandardAppVersionHandlerScriptPtrOutput {
	return o.ApplyT(func(v StandardAppVersionHandlerScript) *StandardAppVersionHandlerScript {
		return &v
	}).(StandardAppVersionHandlerScriptPtrOutput)
}
func (o StandardAppVersionHandlerScriptOutput) ScriptPath() pulumi.StringOutput {
	return o.ApplyT(func (v StandardAppVersionHandlerScript) string { return v.ScriptPath }).(pulumi.StringOutput)
}

type StandardAppVersionHandlerScriptPtrOutput struct { *pulumi.OutputState}

func (StandardAppVersionHandlerScriptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardAppVersionHandlerScript)(nil)).Elem()
}

func (o StandardAppVersionHandlerScriptPtrOutput) ToStandardAppVersionHandlerScriptPtrOutput() StandardAppVersionHandlerScriptPtrOutput {
	return o
}

func (o StandardAppVersionHandlerScriptPtrOutput) ToStandardAppVersionHandlerScriptPtrOutputWithContext(ctx context.Context) StandardAppVersionHandlerScriptPtrOutput {
	return o
}

func (o StandardAppVersionHandlerScriptPtrOutput) Elem() StandardAppVersionHandlerScriptOutput {
	return o.ApplyT(func (v *StandardAppVersionHandlerScript) StandardAppVersionHandlerScript { return *v }).(StandardAppVersionHandlerScriptOutput)
}

func (o StandardAppVersionHandlerScriptPtrOutput) ScriptPath() pulumi.StringOutput {
	return o.ApplyT(func (v StandardAppVersionHandlerScript) string { return v.ScriptPath }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(StandardAppVersionHandlerScriptOutput{})
	pulumi.RegisterOutputType(StandardAppVersionHandlerScriptPtrOutput{})
}
