// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class TargetPool extends pulumi.CustomResource {
    /**
     * Get an existing TargetPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TargetPoolState, opts?: pulumi.CustomResourceOptions): TargetPool {
        return new TargetPool(name, <any>state, { ...opts, id: id });
    }

    public readonly backupPool: pulumi.Output<string | undefined>;
    public readonly description: pulumi.Output<string | undefined>;
    public readonly failoverRatio: pulumi.Output<number | undefined>;
    public readonly healthChecks: pulumi.Output<string | undefined>;
    public readonly instances: pulumi.Output<string[]>;
    public readonly name: pulumi.Output<string>;
    public readonly project: pulumi.Output<string>;
    public readonly region: pulumi.Output<string>;
    public /*out*/ readonly selfLink: pulumi.Output<string>;
    public readonly sessionAffinity: pulumi.Output<string | undefined>;

    /**
     * Create a TargetPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TargetPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TargetPoolArgs | TargetPoolState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: TargetPoolState = argsOrState as TargetPoolState | undefined;
            inputs["backupPool"] = state ? state.backupPool : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["failoverRatio"] = state ? state.failoverRatio : undefined;
            inputs["healthChecks"] = state ? state.healthChecks : undefined;
            inputs["instances"] = state ? state.instances : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
            inputs["sessionAffinity"] = state ? state.sessionAffinity : undefined;
        } else {
            const args = argsOrState as TargetPoolArgs | undefined;
            inputs["backupPool"] = args ? args.backupPool : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["failoverRatio"] = args ? args.failoverRatio : undefined;
            inputs["healthChecks"] = args ? args.healthChecks : undefined;
            inputs["instances"] = args ? args.instances : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["sessionAffinity"] = args ? args.sessionAffinity : undefined;
            inputs["selfLink"] = undefined /*out*/;
        }
        super("gcp:compute/targetPool:TargetPool", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TargetPool resources.
 */
export interface TargetPoolState {
    readonly backupPool?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly failoverRatio?: pulumi.Input<number>;
    readonly healthChecks?: pulumi.Input<string>;
    readonly instances?: pulumi.Input<pulumi.Input<string>[]>;
    readonly name?: pulumi.Input<string>;
    readonly project?: pulumi.Input<string>;
    readonly region?: pulumi.Input<string>;
    readonly selfLink?: pulumi.Input<string>;
    readonly sessionAffinity?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TargetPool resource.
 */
export interface TargetPoolArgs {
    readonly backupPool?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly failoverRatio?: pulumi.Input<number>;
    readonly healthChecks?: pulumi.Input<string>;
    readonly instances?: pulumi.Input<pulumi.Input<string>[]>;
    readonly name?: pulumi.Input<string>;
    readonly project?: pulumi.Input<string>;
    readonly region?: pulumi.Input<string>;
    readonly sessionAffinity?: pulumi.Input<string>;
}
