// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface InstanceTemplateDisk {
    autoDelete?: pulumi.Input<boolean>;
    boot?: pulumi.Input<boolean>;
    deviceName?: pulumi.Input<string>;
    diskEncryptionKey?: pulumi.Input<inputApi.compute.InstanceTemplateDiskDiskEncryptionKey>;
    diskName?: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    diskType?: pulumi.Input<string>;
    interface?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to instances
     * created from this template,
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    mode?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    sourceImage?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface InstanceTemplateDiskDiskEncryptionKey {
    kmsKeySelfLink?: pulumi.Input<string>;
}

export interface InstanceTemplateGuestAccelerator {
    count: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface InstanceTemplateNetworkInterface {
    accessConfigs?: pulumi.Input<pulumi.Input<inputApi.compute.InstanceTemplateNetworkInterfaceAccessConfig>[]>;
    aliasIpRanges?: pulumi.Input<pulumi.Input<inputApi.compute.InstanceTemplateNetworkInterfaceAliasIpRange>[]>;
    network?: pulumi.Input<string>;
    networkIp?: pulumi.Input<string>;
    subnetwork?: pulumi.Input<string>;
    subnetworkProject?: pulumi.Input<string>;
}

export interface InstanceTemplateNetworkInterfaceAccessConfig {
    natIp?: pulumi.Input<string>;
    networkTier?: pulumi.Input<string>;
}

export interface InstanceTemplateNetworkInterfaceAliasIpRange {
    ipCidrRange: pulumi.Input<string>;
    subnetworkRangeName?: pulumi.Input<string>;
}

export interface InstanceTemplateScheduling {
    automaticRestart?: pulumi.Input<boolean>;
    nodeAffinities?: pulumi.Input<pulumi.Input<inputApi.compute.InstanceTemplateSchedulingNodeAffinity>[]>;
    onHostMaintenance?: pulumi.Input<string>;
    preemptible?: pulumi.Input<boolean>;
}

export interface InstanceTemplateSchedulingNodeAffinity {
    key: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface InstanceTemplateServiceAccount {
    email?: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface InstanceTemplateShieldedInstanceConfig {
    enableIntegrityMonitoring?: pulumi.Input<boolean>;
    enableSecureBoot?: pulumi.Input<boolean>;
    enableVtpm?: pulumi.Input<boolean>;
}
