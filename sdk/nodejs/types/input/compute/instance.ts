// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface InstanceAttachedDisk {
    deviceName?: pulumi.Input<string>;
    diskEncryptionKeyRaw?: pulumi.Input<string>;
    diskEncryptionKeySha256?: pulumi.Input<string>;
    kmsKeySelfLink?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    source: pulumi.Input<string>;
}

export interface InstanceBootDisk {
    autoDelete?: pulumi.Input<boolean>;
    deviceName?: pulumi.Input<string>;
    diskEncryptionKeyRaw?: pulumi.Input<string>;
    diskEncryptionKeySha256?: pulumi.Input<string>;
    initializeParams?: pulumi.Input<inputApi.compute.InstanceBootDiskInitializeParams>;
    kmsKeySelfLink?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
}

export interface InstanceBootDiskInitializeParams {
    image?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the instance.
     */
    labels?: pulumi.Input<{[key: string]: any}>;
    size?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface InstanceGuestAccelerator {
    count: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface InstanceNetworkInterface {
    accessConfigs?: pulumi.Input<pulumi.Input<inputApi.compute.InstanceNetworkInterfaceAccessConfig>[]>;
    aliasIpRanges?: pulumi.Input<pulumi.Input<inputApi.compute.InstanceNetworkInterfaceAliasIpRange>[]>;
    /**
     * A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    network?: pulumi.Input<string>;
    networkIp?: pulumi.Input<string>;
    subnetwork?: pulumi.Input<string>;
    subnetworkProject?: pulumi.Input<string>;
}

export interface InstanceNetworkInterfaceAccessConfig {
    natIp?: pulumi.Input<string>;
    networkTier?: pulumi.Input<string>;
    publicPtrDomainName?: pulumi.Input<string>;
}

export interface InstanceNetworkInterfaceAliasIpRange {
    ipCidrRange: pulumi.Input<string>;
    subnetworkRangeName?: pulumi.Input<string>;
}

export interface InstanceScheduling {
    automaticRestart?: pulumi.Input<boolean>;
    nodeAffinities?: pulumi.Input<pulumi.Input<inputApi.compute.InstanceSchedulingNodeAffinity>[]>;
    onHostMaintenance?: pulumi.Input<string>;
    preemptible?: pulumi.Input<boolean>;
}

export interface InstanceSchedulingNodeAffinity {
    key: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface InstanceScratchDisk {
    interface?: pulumi.Input<string>;
}

export interface InstanceServiceAccount {
    email?: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface InstanceShieldedInstanceConfig {
    enableIntegrityMonitoring?: pulumi.Input<boolean>;
    enableSecureBoot?: pulumi.Input<boolean>;
    enableVtpm?: pulumi.Input<boolean>;
}
