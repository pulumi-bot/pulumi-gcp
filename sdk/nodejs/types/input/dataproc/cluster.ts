// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface ClusterClusterConfig {
    bucket?: pulumi.Input<string>;
    encryptionConfig?: pulumi.Input<inputApi.dataproc.ClusterClusterConfigEncryptionConfig>;
    gceClusterConfig?: pulumi.Input<inputApi.dataproc.ClusterClusterConfigGceClusterConfig>;
    initializationActions?: pulumi.Input<pulumi.Input<inputApi.dataproc.ClusterClusterConfigInitializationAction>[]>;
    masterConfig?: pulumi.Input<inputApi.dataproc.ClusterClusterConfigMasterConfig>;
    preemptibleWorkerConfig?: pulumi.Input<inputApi.dataproc.ClusterClusterConfigPreemptibleWorkerConfig>;
    softwareConfig?: pulumi.Input<inputApi.dataproc.ClusterClusterConfigSoftwareConfig>;
    stagingBucket?: pulumi.Input<string>;
    workerConfig?: pulumi.Input<inputApi.dataproc.ClusterClusterConfigWorkerConfig>;
}

export interface ClusterClusterConfigEncryptionConfig {
    kmsKeyName: pulumi.Input<string>;
}

export interface ClusterClusterConfigGceClusterConfig {
    internalIpOnly?: pulumi.Input<boolean>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    network?: pulumi.Input<string>;
    serviceAccount?: pulumi.Input<string>;
    serviceAccountScopes?: pulumi.Input<pulumi.Input<string>[]>;
    subnetwork?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    zone?: pulumi.Input<string>;
}

export interface ClusterClusterConfigInitializationAction {
    script: pulumi.Input<string>;
    timeoutSec?: pulumi.Input<number>;
}

export interface ClusterClusterConfigMasterConfig {
    accelerators?: pulumi.Input<pulumi.Input<inputApi.dataproc.ClusterClusterConfigMasterConfigAccelerator>[]>;
    diskConfig?: pulumi.Input<inputApi.dataproc.ClusterClusterConfigMasterConfigDiskConfig>;
    imageUri?: pulumi.Input<string>;
    instanceNames?: pulumi.Input<pulumi.Input<string>[]>;
    machineType?: pulumi.Input<string>;
    minCpuPlatform?: pulumi.Input<string>;
    numInstances?: pulumi.Input<number>;
}

export interface ClusterClusterConfigMasterConfigAccelerator {
    acceleratorCount: pulumi.Input<number>;
    acceleratorType: pulumi.Input<string>;
}

export interface ClusterClusterConfigMasterConfigDiskConfig {
    bootDiskSizeGb?: pulumi.Input<number>;
    bootDiskType?: pulumi.Input<string>;
    numLocalSsds?: pulumi.Input<number>;
}

export interface ClusterClusterConfigPreemptibleWorkerConfig {
    diskConfig?: pulumi.Input<inputApi.dataproc.ClusterClusterConfigPreemptibleWorkerConfigDiskConfig>;
    instanceNames?: pulumi.Input<pulumi.Input<string>[]>;
    numInstances?: pulumi.Input<number>;
}

export interface ClusterClusterConfigPreemptibleWorkerConfigDiskConfig {
    bootDiskSizeGb?: pulumi.Input<number>;
    bootDiskType?: pulumi.Input<string>;
    numLocalSsds?: pulumi.Input<number>;
}

export interface ClusterClusterConfigSoftwareConfig {
    imageVersion?: pulumi.Input<string>;
    optionalComponents?: pulumi.Input<pulumi.Input<string>[]>;
    overrideProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    properties?: pulumi.Input<{[key: string]: any}>;
}

export interface ClusterClusterConfigWorkerConfig {
    accelerators?: pulumi.Input<pulumi.Input<inputApi.dataproc.ClusterClusterConfigWorkerConfigAccelerator>[]>;
    diskConfig?: pulumi.Input<inputApi.dataproc.ClusterClusterConfigWorkerConfigDiskConfig>;
    imageUri?: pulumi.Input<string>;
    instanceNames?: pulumi.Input<pulumi.Input<string>[]>;
    machineType?: pulumi.Input<string>;
    minCpuPlatform?: pulumi.Input<string>;
    numInstances?: pulumi.Input<number>;
}

export interface ClusterClusterConfigWorkerConfigAccelerator {
    acceleratorCount: pulumi.Input<number>;
    acceleratorType: pulumi.Input<string>;
}

export interface ClusterClusterConfigWorkerConfigDiskConfig {
    bootDiskSizeGb?: pulumi.Input<number>;
    bootDiskType?: pulumi.Input<string>;
    numLocalSsds?: pulumi.Input<number>;
}
