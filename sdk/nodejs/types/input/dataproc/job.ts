// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface JobHadoopConfig {
    archiveUris?: pulumi.Input<pulumi.Input<string>[]>;
    args?: pulumi.Input<pulumi.Input<string>[]>;
    fileUris?: pulumi.Input<pulumi.Input<string>[]>;
    jarFileUris?: pulumi.Input<pulumi.Input<string>[]>;
    loggingConfig?: pulumi.Input<inputApi.dataproc.JobHadoopConfigLoggingConfig>;
    mainClass?: pulumi.Input<string>;
    mainJarFileUri?: pulumi.Input<string>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobHadoopConfigLoggingConfig {
    driverLogLevels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobHiveConfig {
    continueOnFailure?: pulumi.Input<boolean>;
    jarFileUris?: pulumi.Input<pulumi.Input<string>[]>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    queryFileUri?: pulumi.Input<string>;
    queryLists?: pulumi.Input<pulumi.Input<string>[]>;
    scriptVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobPigConfig {
    continueOnFailure?: pulumi.Input<boolean>;
    jarFileUris?: pulumi.Input<pulumi.Input<string>[]>;
    loggingConfig?: pulumi.Input<inputApi.dataproc.JobPigConfigLoggingConfig>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    queryFileUri?: pulumi.Input<string>;
    queryLists?: pulumi.Input<pulumi.Input<string>[]>;
    scriptVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobPigConfigLoggingConfig {
    driverLogLevels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobPlacement {
    clusterName: pulumi.Input<string>;
    clusterUuid?: pulumi.Input<string>;
}

export interface JobPysparkConfig {
    archiveUris?: pulumi.Input<pulumi.Input<string>[]>;
    args?: pulumi.Input<pulumi.Input<string>[]>;
    fileUris?: pulumi.Input<pulumi.Input<string>[]>;
    jarFileUris?: pulumi.Input<pulumi.Input<string>[]>;
    loggingConfig?: pulumi.Input<inputApi.dataproc.JobPysparkConfigLoggingConfig>;
    mainPythonFileUri: pulumi.Input<string>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    pythonFileUris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface JobPysparkConfigLoggingConfig {
    driverLogLevels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobReference {
    jobId?: pulumi.Input<string>;
}

export interface JobScheduling {
    maxFailuresPerHour?: pulumi.Input<number>;
}

export interface JobSparkConfig {
    archiveUris?: pulumi.Input<pulumi.Input<string>[]>;
    args?: pulumi.Input<pulumi.Input<string>[]>;
    fileUris?: pulumi.Input<pulumi.Input<string>[]>;
    jarFileUris?: pulumi.Input<pulumi.Input<string>[]>;
    loggingConfig?: pulumi.Input<inputApi.dataproc.JobSparkConfigLoggingConfig>;
    mainClass?: pulumi.Input<string>;
    mainJarFileUri?: pulumi.Input<string>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobSparkConfigLoggingConfig {
    driverLogLevels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobSparksqlConfig {
    jarFileUris?: pulumi.Input<pulumi.Input<string>[]>;
    loggingConfig?: pulumi.Input<inputApi.dataproc.JobSparksqlConfigLoggingConfig>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    queryFileUri?: pulumi.Input<string>;
    queryLists?: pulumi.Input<pulumi.Input<string>[]>;
    scriptVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobSparksqlConfigLoggingConfig {
    driverLogLevels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface JobStatus {
    details?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    stateStartTime?: pulumi.Input<string>;
    substate?: pulumi.Input<string>;
}
