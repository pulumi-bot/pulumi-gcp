// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface InstanceAttachedDisk {
    deviceName: string;
    diskEncryptionKeyRaw?: string;
    diskEncryptionKeySha256: string;
    kmsKeySelfLink: string;
    mode?: string;
    source: string;
}

export interface InstanceBootDisk {
    autoDelete?: boolean;
    deviceName: string;
    diskEncryptionKeyRaw?: string;
    diskEncryptionKeySha256: string;
    initializeParams: outputApi.compute.InstanceBootDiskInitializeParams;
    kmsKeySelfLink: string;
    source: string;
}

export interface InstanceBootDiskInitializeParams {
    image: string;
    /**
     * A set of key/value label pairs to assign to the instance.
     */
    labels: {[key: string]: any};
    size: number;
    type: string;
}

export interface InstanceGuestAccelerator {
    count: number;
    type: string;
}

export interface InstanceNetworkInterface {
    accessConfigs?: outputApi.compute.InstanceNetworkInterfaceAccessConfig[];
    aliasIpRanges?: outputApi.compute.InstanceNetworkInterfaceAliasIpRange[];
    /**
     * A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     */
    name: string;
    network: string;
    networkIp: string;
    subnetwork: string;
    subnetworkProject: string;
}

export interface InstanceNetworkInterfaceAccessConfig {
    natIp: string;
    networkTier: string;
    publicPtrDomainName?: string;
}

export interface InstanceNetworkInterfaceAliasIpRange {
    ipCidrRange: string;
    subnetworkRangeName?: string;
}

export interface InstanceScheduling {
    automaticRestart?: boolean;
    nodeAffinities?: outputApi.compute.InstanceSchedulingNodeAffinity[];
    onHostMaintenance: string;
    preemptible?: boolean;
}

export interface InstanceSchedulingNodeAffinity {
    key: string;
    operator: string;
    values: string[];
}

export interface InstanceScratchDisk {
    interface?: string;
}

export interface InstanceServiceAccount {
    email: string;
    scopes: string[];
}

export interface InstanceShieldedInstanceConfig {
    enableIntegrityMonitoring?: boolean;
    enableSecureBoot?: boolean;
    enableVtpm?: boolean;
}
