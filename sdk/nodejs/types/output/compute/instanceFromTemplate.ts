// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface InstanceFromTemplateAttachedDisk {
    deviceName: string;
    diskEncryptionKeyRaw: string;
    diskEncryptionKeySha256: string;
    kmsKeySelfLink: string;
    mode: string;
    source: string;
}

export interface InstanceFromTemplateBootDisk {
    autoDelete: boolean;
    deviceName: string;
    diskEncryptionKeyRaw: string;
    diskEncryptionKeySha256: string;
    initializeParams: outputApi.compute.InstanceFromTemplateBootDiskInitializeParams;
    kmsKeySelfLink: string;
    source: string;
}

export interface InstanceFromTemplateBootDiskInitializeParams {
    image: string;
    labels: {[key: string]: any};
    size: number;
    type: string;
}

export interface InstanceFromTemplateGuestAccelerator {
    count: number;
    type: string;
}

export interface InstanceFromTemplateNetworkInterface {
    accessConfigs: outputApi.compute.InstanceFromTemplateNetworkInterfaceAccessConfig[];
    aliasIpRanges: outputApi.compute.InstanceFromTemplateNetworkInterfaceAliasIpRange[];
    /**
     * A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     */
    name: string;
    network: string;
    networkIp: string;
    subnetwork: string;
    subnetworkProject: string;
}

export interface InstanceFromTemplateNetworkInterfaceAccessConfig {
    natIp: string;
    networkTier: string;
    publicPtrDomainName: string;
}

export interface InstanceFromTemplateNetworkInterfaceAliasIpRange {
    ipCidrRange: string;
    subnetworkRangeName: string;
}

export interface InstanceFromTemplateScheduling {
    automaticRestart: boolean;
    nodeAffinities: outputApi.compute.InstanceFromTemplateSchedulingNodeAffinity[];
    onHostMaintenance: string;
    preemptible: boolean;
}

export interface InstanceFromTemplateSchedulingNodeAffinity {
    key: string;
    operator: string;
    values: string[];
}

export interface InstanceFromTemplateScratchDisk {
    interface: string;
}

export interface InstanceFromTemplateServiceAccount {
    email: string;
    scopes: string[];
}

export interface InstanceFromTemplateShieldedInstanceConfig {
    enableIntegrityMonitoring: boolean;
    enableSecureBoot: boolean;
    enableVtpm: boolean;
}
