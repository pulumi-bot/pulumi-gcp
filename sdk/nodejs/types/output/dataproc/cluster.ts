// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface ClusterClusterConfig {
    bucket: string;
    encryptionConfig?: outputApi.dataproc.ClusterClusterConfigEncryptionConfig;
    gceClusterConfig: outputApi.dataproc.ClusterClusterConfigGceClusterConfig;
    initializationActions?: outputApi.dataproc.ClusterClusterConfigInitializationAction[];
    masterConfig: outputApi.dataproc.ClusterClusterConfigMasterConfig;
    preemptibleWorkerConfig: outputApi.dataproc.ClusterClusterConfigPreemptibleWorkerConfig;
    softwareConfig: outputApi.dataproc.ClusterClusterConfigSoftwareConfig;
    stagingBucket?: string;
    workerConfig: outputApi.dataproc.ClusterClusterConfigWorkerConfig;
}

export interface ClusterClusterConfigEncryptionConfig {
    kmsKeyName: string;
}

export interface ClusterClusterConfigGceClusterConfig {
    internalIpOnly?: boolean;
    metadata?: {[key: string]: string};
    network: string;
    serviceAccount?: string;
    serviceAccountScopes: string[];
    subnetwork?: string;
    tags?: string[];
    zone: string;
}

export interface ClusterClusterConfigInitializationAction {
    script: string;
    timeoutSec?: number;
}

export interface ClusterClusterConfigMasterConfig {
    accelerators?: outputApi.dataproc.ClusterClusterConfigMasterConfigAccelerator[];
    diskConfig: outputApi.dataproc.ClusterClusterConfigMasterConfigDiskConfig;
    imageUri: string;
    instanceNames: string[];
    machineType: string;
    minCpuPlatform: string;
    numInstances: number;
}

export interface ClusterClusterConfigMasterConfigAccelerator {
    acceleratorCount: number;
    acceleratorType: string;
}

export interface ClusterClusterConfigMasterConfigDiskConfig {
    bootDiskSizeGb: number;
    bootDiskType?: string;
    numLocalSsds: number;
}

export interface ClusterClusterConfigPreemptibleWorkerConfig {
    diskConfig: outputApi.dataproc.ClusterClusterConfigPreemptibleWorkerConfigDiskConfig;
    instanceNames: string[];
    numInstances: number;
}

export interface ClusterClusterConfigPreemptibleWorkerConfigDiskConfig {
    bootDiskSizeGb: number;
    bootDiskType?: string;
    numLocalSsds: number;
}

export interface ClusterClusterConfigSoftwareConfig {
    imageVersion: string;
    optionalComponents?: string[];
    overrideProperties?: {[key: string]: string};
    properties: {[key: string]: any};
}

export interface ClusterClusterConfigWorkerConfig {
    accelerators?: outputApi.dataproc.ClusterClusterConfigWorkerConfigAccelerator[];
    diskConfig: outputApi.dataproc.ClusterClusterConfigWorkerConfigDiskConfig;
    imageUri: string;
    instanceNames: string[];
    machineType: string;
    minCpuPlatform: string;
    numInstances: number;
}

export interface ClusterClusterConfigWorkerConfigAccelerator {
    acceleratorCount: number;
    acceleratorType: string;
}

export interface ClusterClusterConfigWorkerConfigDiskConfig {
    bootDiskSizeGb: number;
    bootDiskType?: string;
    numLocalSsds: number;
}
