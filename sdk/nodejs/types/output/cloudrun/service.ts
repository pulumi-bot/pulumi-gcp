// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface ServiceMetadata {
    annotations: {[key: string]: string};
    generation: number;
    labels: {[key: string]: string};
    namespace: string;
    resourceVersion: string;
    selfLink: string;
    uid: string;
}

export interface ServiceSpec {
    containerConcurrency?: number;
    containers: outputApi.cloudrun.ServiceSpecContainer[];
    servingState: string;
}

export interface ServiceSpecContainer {
    args?: string[];
    commands?: string[];
    envs?: outputApi.cloudrun.ServiceSpecContainerEnv[];
    envFroms?: outputApi.cloudrun.ServiceSpecContainerEnvFrom[];
    image: string;
    resources?: outputApi.cloudrun.ServiceSpecContainerResources;
    workingDir?: string;
}

export interface ServiceSpecContainerEnv {
    name?: string;
    value?: string;
}

export interface ServiceSpecContainerEnvFrom {
    configMapRef?: outputApi.cloudrun.ServiceSpecContainerEnvFromConfigMapRef;
    prefix?: string;
    secretRef?: outputApi.cloudrun.ServiceSpecContainerEnvFromSecretRef;
}

export interface ServiceSpecContainerEnvFromConfigMapRef {
    localObjectReference?: outputApi.cloudrun.ServiceSpecContainerEnvFromConfigMapRefLocalObjectReference;
    optional?: boolean;
}

export interface ServiceSpecContainerEnvFromConfigMapRefLocalObjectReference {
    name?: string;
}

export interface ServiceSpecContainerEnvFromSecretRef {
    localObjectReference?: outputApi.cloudrun.ServiceSpecContainerEnvFromSecretRefLocalObjectReference;
    optional?: boolean;
}

export interface ServiceSpecContainerEnvFromSecretRefLocalObjectReference {
    name?: string;
}

export interface ServiceSpecContainerResources {
    limits?: {[key: string]: string};
    requests?: {[key: string]: string};
}

export interface ServiceStatus {
    conditions: outputApi.cloudrun.ServiceStatusCondition[];
}

export interface ServiceStatusCondition {
    message: string;
    reason: string;
    status: string;
    type: string;
}
