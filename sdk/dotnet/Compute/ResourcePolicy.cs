// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// A policy that can be attached to a resource to specify or schedule actions on that resource.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_resource_policy.html.markdown.
    /// </summary>
    public partial class ResourcePolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// -
        /// (Required)
        /// The name of the resource, provided by the client when initially creating
        /// the resource. The resource name must be 1-63 characters long, and comply
        /// with RFC1035. Specifically, the name must be 1-63 characters long and
        /// match the regular expression `a-z`? which means the
        /// first character must be a lowercase letter, and all following characters
        /// must be a dash, lowercase letter, or digit, except the last character,
        /// which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Region where resource policy resides.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Policy for creating snapshots of persistent disks.  Structure is documented below.
        /// </summary>
        [Output("snapshotSchedulePolicy")]
        public Output<Outputs.ResourcePolicySnapshotSchedulePolicy?> SnapshotSchedulePolicy { get; private set; } = null!;


        /// <summary>
        /// Create a ResourcePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourcePolicy(string name, ResourcePolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:compute/resourcePolicy:ResourcePolicy", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private ResourcePolicy(string name, Input<string> id, ResourcePolicyState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/resourcePolicy:ResourcePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourcePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourcePolicy Get(string name, Input<string> id, ResourcePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ResourcePolicy(name, id, state, options);
        }
    }

    public sealed class ResourcePolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The name of the resource, provided by the client when initially creating
        /// the resource. The resource name must be 1-63 characters long, and comply
        /// with RFC1035. Specifically, the name must be 1-63 characters long and
        /// match the regular expression `a-z`? which means the
        /// first character must be a lowercase letter, and all following characters
        /// must be a dash, lowercase letter, or digit, except the last character,
        /// which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Region where resource policy resides.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Policy for creating snapshots of persistent disks.  Structure is documented below.
        /// </summary>
        [Input("snapshotSchedulePolicy")]
        public Input<Inputs.ResourcePolicySnapshotSchedulePolicyArgs>? SnapshotSchedulePolicy { get; set; }

        public ResourcePolicyArgs()
        {
        }
    }

    public sealed class ResourcePolicyState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The name of the resource, provided by the client when initially creating
        /// the resource. The resource name must be 1-63 characters long, and comply
        /// with RFC1035. Specifically, the name must be 1-63 characters long and
        /// match the regular expression `a-z`? which means the
        /// first character must be a lowercase letter, and all following characters
        /// must be a dash, lowercase letter, or digit, except the last character,
        /// which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Region where resource policy resides.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Policy for creating snapshots of persistent disks.  Structure is documented below.
        /// </summary>
        [Input("snapshotSchedulePolicy")]
        public Input<Inputs.ResourcePolicySnapshotSchedulePolicyGetArgs>? SnapshotSchedulePolicy { get; set; }

        public ResourcePolicyState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ResourcePolicySnapshotSchedulePolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Retention policy applied to snapshots created by this resource policy.  Structure is documented below.
        /// </summary>
        [Input("retentionPolicy")]
        public Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs>? RetentionPolicy { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Contains one of an `hourlySchedule`, `dailySchedule`, or `weeklySchedule`.  Structure is documented below.
        /// </summary>
        [Input("schedule", required: true)]
        public Input<ResourcePolicySnapshotSchedulePolicyScheduleArgs> Schedule { get; set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Properties with which the snapshots are created, such as labels.  Structure is documented below.
        /// </summary>
        [Input("snapshotProperties")]
        public Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs>? SnapshotProperties { get; set; }

        public ResourcePolicySnapshotSchedulePolicyArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Retention policy applied to snapshots created by this resource policy.  Structure is documented below.
        /// </summary>
        [Input("retentionPolicy")]
        public Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs>? RetentionPolicy { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Contains one of an `hourlySchedule`, `dailySchedule`, or `weeklySchedule`.  Structure is documented below.
        /// </summary>
        [Input("schedule", required: true)]
        public Input<ResourcePolicySnapshotSchedulePolicyScheduleGetArgs> Schedule { get; set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Properties with which the snapshots are created, such as labels.  Structure is documented below.
        /// </summary>
        [Input("snapshotProperties")]
        public Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs>? SnapshotProperties { get; set; }

        public ResourcePolicySnapshotSchedulePolicyGetArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// Maximum age of the snapshot that is allowed to be kept.
        /// </summary>
        [Input("maxRetentionDays", required: true)]
        public Input<int> MaxRetentionDays { get; set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Specifies the behavior to apply to scheduled snapshots when
        /// the source disk is deleted.
        /// Valid options are KEEP_AUTO_SNAPSHOTS and APPLY_RETENTION_POLICY
        /// </summary>
        [Input("onSourceDiskDelete")]
        public Input<string>? OnSourceDiskDelete { get; set; }

        public ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// Maximum age of the snapshot that is allowed to be kept.
        /// </summary>
        [Input("maxRetentionDays", required: true)]
        public Input<int> MaxRetentionDays { get; set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Specifies the behavior to apply to scheduled snapshots when
        /// the source disk is deleted.
        /// Valid options are KEEP_AUTO_SNAPSHOTS and APPLY_RETENTION_POLICY
        /// </summary>
        [Input("onSourceDiskDelete")]
        public Input<string>? OnSourceDiskDelete { get; set; }

        public ResourcePolicySnapshotSchedulePolicyRetentionPolicyGetArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// The policy will execute every nth day at the specified time.  Structure is documented below.
        /// </summary>
        [Input("dailySchedule")]
        public Input<ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs>? DailySchedule { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The policy will execute every nth hour starting at the specified time.  Structure is documented below.
        /// </summary>
        [Input("hourlySchedule")]
        public Input<ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs>? HourlySchedule { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Allows specifying a snapshot time for each day of the week.  Structure is documented below.
        /// </summary>
        [Input("weeklySchedule")]
        public Input<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleArgs>? WeeklySchedule { get; set; }

        public ResourcePolicySnapshotSchedulePolicyScheduleArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The number of days between snapshots.
        /// </summary>
        [Input("daysInCycle", required: true)]
        public Input<int> DaysInCycle { get; set; } = null!;

        /// <summary>
        /// -
        /// (Required)
        /// Time within the window to start the operations.
        /// It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The number of days between snapshots.
        /// </summary>
        [Input("daysInCycle", required: true)]
        public Input<int> DaysInCycle { get; set; } = null!;

        /// <summary>
        /// -
        /// (Required)
        /// Time within the window to start the operations.
        /// It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleGetArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// The policy will execute every nth day at the specified time.  Structure is documented below.
        /// </summary>
        [Input("dailySchedule")]
        public Input<ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleGetArgs>? DailySchedule { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The policy will execute every nth hour starting at the specified time.  Structure is documented below.
        /// </summary>
        [Input("hourlySchedule")]
        public Input<ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleGetArgs>? HourlySchedule { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Allows specifying a snapshot time for each day of the week.  Structure is documented below.
        /// </summary>
        [Input("weeklySchedule")]
        public Input<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleGetArgs>? WeeklySchedule { get; set; }

        public ResourcePolicySnapshotSchedulePolicyScheduleGetArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The number of hours between snapshots.
        /// </summary>
        [Input("hoursInCycle", required: true)]
        public Input<int> HoursInCycle { get; set; } = null!;

        /// <summary>
        /// -
        /// (Required)
        /// Time within the window to start the operations.
        /// It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The number of hours between snapshots.
        /// </summary>
        [Input("hoursInCycle", required: true)]
        public Input<int> HoursInCycle { get; set; } = null!;

        /// <summary>
        /// -
        /// (Required)
        /// Time within the window to start the operations.
        /// It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public ResourcePolicySnapshotSchedulePolicyScheduleHourlyScheduleGetArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleArgs : Pulumi.ResourceArgs
    {
        [Input("dayOfWeeks", required: true)]
        private InputList<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksArgs>? _dayOfWeeks;

        /// <summary>
        /// -
        /// (Required)
        /// May contain up to seven (one for each day of the week) snapshot times.  Structure is documented below.
        /// </summary>
        public InputList<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksArgs> DayOfWeeks
        {
            get => _dayOfWeeks ?? (_dayOfWeeks = new InputList<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksArgs>());
            set => _dayOfWeeks = value;
        }

        public ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The day of the week to create the snapshot. e.g. MONDAY
        /// </summary>
        [Input("day", required: true)]
        public Input<string> Day { get; set; } = null!;

        /// <summary>
        /// -
        /// (Required)
        /// Time within the window to start the operations.
        /// It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The day of the week to create the snapshot. e.g. MONDAY
        /// </summary>
        [Input("day", required: true)]
        public Input<string> Day { get; set; } = null!;

        /// <summary>
        /// -
        /// (Required)
        /// Time within the window to start the operations.
        /// It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksGetArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleGetArgs : Pulumi.ResourceArgs
    {
        [Input("dayOfWeeks", required: true)]
        private InputList<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksGetArgs>? _dayOfWeeks;

        /// <summary>
        /// -
        /// (Required)
        /// May contain up to seven (one for each day of the week) snapshot times.  Structure is documented below.
        /// </summary>
        public InputList<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksGetArgs> DayOfWeeks
        {
            get => _dayOfWeeks ?? (_dayOfWeeks = new InputList<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksGetArgs>());
            set => _dayOfWeeks = value;
        }

        public ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleGetArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Whether to perform a 'guest aware' snapshot.
        /// </summary>
        [Input("guestFlush")]
        public Input<bool>? GuestFlush { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// -
        /// (Optional)
        /// A set of key-value pairs.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Cloud Storage bucket location to store the auto snapshot
        /// (regional or multi-regional)
        /// </summary>
        [Input("storageLocations")]
        public Input<string>? StorageLocations { get; set; }

        public ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs()
        {
        }
    }

    public sealed class ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Whether to perform a 'guest aware' snapshot.
        /// </summary>
        [Input("guestFlush")]
        public Input<bool>? GuestFlush { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// -
        /// (Optional)
        /// A set of key-value pairs.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Cloud Storage bucket location to store the auto snapshot
        /// (regional or multi-regional)
        /// </summary>
        [Input("storageLocations")]
        public Input<string>? StorageLocations { get; set; }

        public ResourcePolicySnapshotSchedulePolicySnapshotPropertiesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ResourcePolicySnapshotSchedulePolicy
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Retention policy applied to snapshots created by this resource policy.  Structure is documented below.
        /// </summary>
        public readonly ResourcePolicySnapshotSchedulePolicyRetentionPolicy? RetentionPolicy;
        /// <summary>
        /// -
        /// (Required)
        /// Contains one of an `hourlySchedule`, `dailySchedule`, or `weeklySchedule`.  Structure is documented below.
        /// </summary>
        public readonly ResourcePolicySnapshotSchedulePolicySchedule Schedule;
        /// <summary>
        /// -
        /// (Optional)
        /// Properties with which the snapshots are created, such as labels.  Structure is documented below.
        /// </summary>
        public readonly ResourcePolicySnapshotSchedulePolicySnapshotProperties? SnapshotProperties;

        [OutputConstructor]
        private ResourcePolicySnapshotSchedulePolicy(
            ResourcePolicySnapshotSchedulePolicyRetentionPolicy? retentionPolicy,
            ResourcePolicySnapshotSchedulePolicySchedule schedule,
            ResourcePolicySnapshotSchedulePolicySnapshotProperties? snapshotProperties)
        {
            RetentionPolicy = retentionPolicy;
            Schedule = schedule;
            SnapshotProperties = snapshotProperties;
        }
    }

    [OutputType]
    public sealed class ResourcePolicySnapshotSchedulePolicyRetentionPolicy
    {
        /// <summary>
        /// -
        /// (Required)
        /// Maximum age of the snapshot that is allowed to be kept.
        /// </summary>
        public readonly int MaxRetentionDays;
        /// <summary>
        /// -
        /// (Optional)
        /// Specifies the behavior to apply to scheduled snapshots when
        /// the source disk is deleted.
        /// Valid options are KEEP_AUTO_SNAPSHOTS and APPLY_RETENTION_POLICY
        /// </summary>
        public readonly string? OnSourceDiskDelete;

        [OutputConstructor]
        private ResourcePolicySnapshotSchedulePolicyRetentionPolicy(
            int maxRetentionDays,
            string? onSourceDiskDelete)
        {
            MaxRetentionDays = maxRetentionDays;
            OnSourceDiskDelete = onSourceDiskDelete;
        }
    }

    [OutputType]
    public sealed class ResourcePolicySnapshotSchedulePolicySchedule
    {
        /// <summary>
        /// -
        /// (Optional)
        /// The policy will execute every nth day at the specified time.  Structure is documented below.
        /// </summary>
        public readonly ResourcePolicySnapshotSchedulePolicyScheduleDailySchedule? DailySchedule;
        /// <summary>
        /// -
        /// (Optional)
        /// The policy will execute every nth hour starting at the specified time.  Structure is documented below.
        /// </summary>
        public readonly ResourcePolicySnapshotSchedulePolicyScheduleHourlySchedule? HourlySchedule;
        /// <summary>
        /// -
        /// (Optional)
        /// Allows specifying a snapshot time for each day of the week.  Structure is documented below.
        /// </summary>
        public readonly ResourcePolicySnapshotSchedulePolicyScheduleWeeklySchedule? WeeklySchedule;

        [OutputConstructor]
        private ResourcePolicySnapshotSchedulePolicySchedule(
            ResourcePolicySnapshotSchedulePolicyScheduleDailySchedule? dailySchedule,
            ResourcePolicySnapshotSchedulePolicyScheduleHourlySchedule? hourlySchedule,
            ResourcePolicySnapshotSchedulePolicyScheduleWeeklySchedule? weeklySchedule)
        {
            DailySchedule = dailySchedule;
            HourlySchedule = hourlySchedule;
            WeeklySchedule = weeklySchedule;
        }
    }

    [OutputType]
    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleDailySchedule
    {
        /// <summary>
        /// -
        /// (Required)
        /// The number of days between snapshots.
        /// </summary>
        public readonly int DaysInCycle;
        /// <summary>
        /// -
        /// (Required)
        /// Time within the window to start the operations.
        /// It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private ResourcePolicySnapshotSchedulePolicyScheduleDailySchedule(
            int daysInCycle,
            string startTime)
        {
            DaysInCycle = daysInCycle;
            StartTime = startTime;
        }
    }

    [OutputType]
    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleHourlySchedule
    {
        /// <summary>
        /// -
        /// (Required)
        /// The number of hours between snapshots.
        /// </summary>
        public readonly int HoursInCycle;
        /// <summary>
        /// -
        /// (Required)
        /// Time within the window to start the operations.
        /// It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private ResourcePolicySnapshotSchedulePolicyScheduleHourlySchedule(
            int hoursInCycle,
            string startTime)
        {
            HoursInCycle = hoursInCycle;
            StartTime = startTime;
        }
    }

    [OutputType]
    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleWeeklySchedule
    {
        /// <summary>
        /// -
        /// (Required)
        /// May contain up to seven (one for each day of the week) snapshot times.  Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeks> DayOfWeeks;

        [OutputConstructor]
        private ResourcePolicySnapshotSchedulePolicyScheduleWeeklySchedule(ImmutableArray<ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeks> dayOfWeeks)
        {
            DayOfWeeks = dayOfWeeks;
        }
    }

    [OutputType]
    public sealed class ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeks
    {
        /// <summary>
        /// -
        /// (Required)
        /// The day of the week to create the snapshot. e.g. MONDAY
        /// </summary>
        public readonly string Day;
        /// <summary>
        /// -
        /// (Required)
        /// Time within the window to start the operations.
        /// It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
        /// </summary>
        public readonly string StartTime;

        [OutputConstructor]
        private ResourcePolicySnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeks(
            string day,
            string startTime)
        {
            Day = day;
            StartTime = startTime;
        }
    }

    [OutputType]
    public sealed class ResourcePolicySnapshotSchedulePolicySnapshotProperties
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Whether to perform a 'guest aware' snapshot.
        /// </summary>
        public readonly bool? GuestFlush;
        /// <summary>
        /// -
        /// (Optional)
        /// A set of key-value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Labels;
        /// <summary>
        /// -
        /// (Optional)
        /// Cloud Storage bucket location to store the auto snapshot
        /// (regional or multi-regional)
        /// </summary>
        public readonly string? StorageLocations;

        [OutputConstructor]
        private ResourcePolicySnapshotSchedulePolicySnapshotProperties(
            bool? guestFlush,
            ImmutableDictionary<string, string>? labels,
            string? storageLocations)
        {
            GuestFlush = guestFlush;
            Labels = labels;
            StorageLocations = storageLocations;
        }
    }
    }
}
