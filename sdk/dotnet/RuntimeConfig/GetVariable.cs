// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.RuntimeConfig
{
    public static class GetVariable
    {
        /// <summary>
        /// To get more information about RuntimeConfigs, see:
        /// 
        /// * [API documentation](https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs)
        /// * How-to Guides
        ///     * [Runtime Configurator Fundamentals](https://cloud.google.com/deployment-manager/runtime-configurator/)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var run_service = Output.Create(Gcp.RuntimeConfig.GetVariable.InvokeAsync(new Gcp.RuntimeConfig.GetVariableArgs
        ///         {
        ///             Name = "prod-variables/hostname",
        ///             Parent = "my-service",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVariableResult> InvokeAsync(GetVariableArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVariableResult>("gcp:runtimeconfig/getVariable:getVariable", args ?? new GetVariableArgs(), options.WithVersion());

        public static Output<GetVariableResult> Apply(GetVariableApplyArgs args, InvokeOptions? options = null)
        {
            return Pulumi.Output.All(
                args.Name.Box(),
                args.Parent.Box(),
                args.Project.Box()
            ).Apply(a => {
                    var args = new GetVariableArgs();
                    a[0].Set(args, nameof(args.Name));
                    a[1].Set(args, nameof(args.Parent));
                    a[2].Set(args, nameof(args.Project));
                    return InvokeAsync(args, options);
            });
        }
    }


    public sealed class GetVariableArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Runtime Configurator configuration.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The name of the RuntimeConfig resource containing this variable.
        /// </summary>
        [Input("parent", required: true)]
        public string Parent { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetVariableArgs()
        {
        }
    }

    public sealed class GetVariableApplyArgs
    {
        /// <summary>
        /// The name of the Runtime Configurator configuration.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The name of the RuntimeConfig resource containing this variable.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetVariableApplyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVariableResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Parent;
        public readonly string? Project;
        public readonly string Text;
        public readonly string UpdateTime;
        public readonly string Value;

        [OutputConstructor]
        private GetVariableResult(
            string id,

            string name,

            string parent,

            string? project,

            string text,

            string updateTime,

            string value)
        {
            Id = id;
            Name = name;
            Parent = parent;
            Project = project;
            Text = text;
            UpdateTime = updateTime;
            Value = value;
        }
    }
}
