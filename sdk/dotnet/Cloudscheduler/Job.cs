// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudScheduler
{
    /// <summary>
    /// A scheduled job that can publish a pubsub message or a http request
    /// every X interval of time, using crontab format string.
    /// 
    /// To use Cloud Scheduler your project must contain an App Engine app
    /// that is located in one of the supported regions. If your project
    /// does not have an App Engine app, you must create one.
    /// 
    /// 
    /// To get more information about Job, see:
    /// 
    /// * [API documentation](https://cloud.google.com/scheduler/docs/reference/rest/)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/scheduler/)
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/cloud_scheduler_job.html.markdown.
    /// </summary>
    public partial class Job : Pulumi.CustomResource
    {
        /// <summary>
        /// -
        /// (Optional)
        /// App Engine HTTP target.
        /// If the job providers a App Engine HTTP target the cron will
        /// send a request to the service instance  Structure is documented below.
        /// </summary>
        [Output("appEngineHttpTarget")]
        public Output<Outputs.JobAppEngineHttpTarget?> AppEngineHttpTarget { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// The deadline for job attempts. If the request handler does not respond by this deadline then the request is
        /// cancelled and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in
        /// execution logs. Cloud Scheduler will retry the job according to the RetryConfig.
        /// The allowed duration for this deadline is:
        /// * For HTTP targets, between 15 seconds and 30 minutes.
        /// * For App Engine HTTP targets, between 15 seconds and 24 hours.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s"
        /// </summary>
        [Output("attemptDeadline")]
        public Output<string?> AttemptDeadline { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// A human-readable description for the job.
        /// This string must not contain more than 500 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// HTTP target.
        /// If the job providers a http_target the cron will
        /// send a request to the targeted url  Structure is documented below.
        /// </summary>
        [Output("httpTarget")]
        public Output<Outputs.JobHttpTarget?> HttpTarget { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Required)
        /// The name of the job.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Pub/Sub target
        /// If the job providers a Pub/Sub target the cron will publish
        /// a message to the provided topic  Structure is documented below.
        /// </summary>
        [Output("pubsubTarget")]
        public Output<Outputs.JobPubsubTarget?> PubsubTarget { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Required)
        /// Region where the scheduler job resides
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// By default, if a job does not complete successfully,
        /// meaning that an acknowledgement is not received from the handler,
        /// then it will be retried with exponential backoff according to the settings  Structure is documented below.
        /// </summary>
        [Output("retryConfig")]
        public Output<Outputs.JobRetryConfig?> RetryConfig { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Describes the schedule on which the job will be executed.
        /// </summary>
        [Output("schedule")]
        public Output<string?> Schedule { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Specifies the time zone to be used in interpreting schedule.
        /// The value of this field must be a time zone name from the tz database.
        /// </summary>
        [Output("timeZone")]
        public Output<string?> TimeZone { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:cloudscheduler/job:Job", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
            : base("gcp:cloudscheduler/job:Job", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
        {
            return new Job(name, id, state, options);
        }
    }

    public sealed class JobArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// App Engine HTTP target.
        /// If the job providers a App Engine HTTP target the cron will
        /// send a request to the service instance  Structure is documented below.
        /// </summary>
        [Input("appEngineHttpTarget")]
        public Input<Inputs.JobAppEngineHttpTargetArgs>? AppEngineHttpTarget { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The deadline for job attempts. If the request handler does not respond by this deadline then the request is
        /// cancelled and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in
        /// execution logs. Cloud Scheduler will retry the job according to the RetryConfig.
        /// The allowed duration for this deadline is:
        /// * For HTTP targets, between 15 seconds and 30 minutes.
        /// * For App Engine HTTP targets, between 15 seconds and 24 hours.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s"
        /// </summary>
        [Input("attemptDeadline")]
        public Input<string>? AttemptDeadline { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// A human-readable description for the job.
        /// This string must not contain more than 500 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// HTTP target.
        /// If the job providers a http_target the cron will
        /// send a request to the targeted url  Structure is documented below.
        /// </summary>
        [Input("httpTarget")]
        public Input<Inputs.JobHttpTargetArgs>? HttpTarget { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// The name of the job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Pub/Sub target
        /// If the job providers a Pub/Sub target the cron will publish
        /// a message to the provided topic  Structure is documented below.
        /// </summary>
        [Input("pubsubTarget")]
        public Input<Inputs.JobPubsubTargetArgs>? PubsubTarget { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Region where the scheduler job resides
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// By default, if a job does not complete successfully,
        /// meaning that an acknowledgement is not received from the handler,
        /// then it will be retried with exponential backoff according to the settings  Structure is documented below.
        /// </summary>
        [Input("retryConfig")]
        public Input<Inputs.JobRetryConfigArgs>? RetryConfig { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Describes the schedule on which the job will be executed.
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Specifies the time zone to be used in interpreting schedule.
        /// The value of this field must be a time zone name from the tz database.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public JobArgs()
        {
        }
    }

    public sealed class JobState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// App Engine HTTP target.
        /// If the job providers a App Engine HTTP target the cron will
        /// send a request to the service instance  Structure is documented below.
        /// </summary>
        [Input("appEngineHttpTarget")]
        public Input<Inputs.JobAppEngineHttpTargetGetArgs>? AppEngineHttpTarget { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The deadline for job attempts. If the request handler does not respond by this deadline then the request is
        /// cancelled and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in
        /// execution logs. Cloud Scheduler will retry the job according to the RetryConfig.
        /// The allowed duration for this deadline is:
        /// * For HTTP targets, between 15 seconds and 30 minutes.
        /// * For App Engine HTTP targets, between 15 seconds and 24 hours.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s"
        /// </summary>
        [Input("attemptDeadline")]
        public Input<string>? AttemptDeadline { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// A human-readable description for the job.
        /// This string must not contain more than 500 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// HTTP target.
        /// If the job providers a http_target the cron will
        /// send a request to the targeted url  Structure is documented below.
        /// </summary>
        [Input("httpTarget")]
        public Input<Inputs.JobHttpTargetGetArgs>? HttpTarget { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// The name of the job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Pub/Sub target
        /// If the job providers a Pub/Sub target the cron will publish
        /// a message to the provided topic  Structure is documented below.
        /// </summary>
        [Input("pubsubTarget")]
        public Input<Inputs.JobPubsubTargetGetArgs>? PubsubTarget { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Region where the scheduler job resides
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// By default, if a job does not complete successfully,
        /// meaning that an acknowledgement is not received from the handler,
        /// then it will be retried with exponential backoff according to the settings  Structure is documented below.
        /// </summary>
        [Input("retryConfig")]
        public Input<Inputs.JobRetryConfigGetArgs>? RetryConfig { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Describes the schedule on which the job will be executed.
        /// </summary>
        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Specifies the time zone to be used in interpreting schedule.
        /// The value of this field must be a time zone name from the tz database.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public JobState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class JobAppEngineHttpTargetAppEngineRoutingArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// App instance.
        /// By default, the job is sent to an instance which is available when the job is attempted.
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// App service.
        /// By default, the job is sent to the service which is the default service when the job is attempted.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// App version.
        /// By default, the job is sent to the version which is the default version when the job is attempted.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public JobAppEngineHttpTargetAppEngineRoutingArgs()
        {
        }
    }

    public sealed class JobAppEngineHttpTargetAppEngineRoutingGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// App instance.
        /// By default, the job is sent to an instance which is available when the job is attempted.
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// App service.
        /// By default, the job is sent to the service which is the default service when the job is attempted.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// App version.
        /// By default, the job is sent to the version which is the default version when the job is attempted.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public JobAppEngineHttpTargetAppEngineRoutingGetArgs()
        {
        }
    }

    public sealed class JobAppEngineHttpTargetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// App Engine Routing setting for the job.  Structure is documented below.
        /// </summary>
        [Input("appEngineRouting")]
        public Input<JobAppEngineHttpTargetAppEngineRoutingArgs>? AppEngineRouting { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// HTTP request body.
        /// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
        /// It is an error to set body on a job with an incompatible HttpMethod.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;

        /// <summary>
        /// -
        /// (Optional)
        /// This map contains the header field names and values.
        /// Repeated headers are not supported, but a header value can contain commas.
        /// </summary>
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Which HTTP method to use for the request.
        /// </summary>
        [Input("httpMethod")]
        public Input<string>? HttpMethod { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// The relative URI.
        /// The relative URL must begin with "/" and must be a valid HTTP relative URL.
        /// It can contain a path, query string arguments, and \# fragments.
        /// If the relative URL is empty, then the root path "/" will be used.
        /// No spaces are allowed, and the maximum length allowed is 2083 characters
        /// </summary>
        [Input("relativeUri", required: true)]
        public Input<string> RelativeUri { get; set; } = null!;

        public JobAppEngineHttpTargetArgs()
        {
        }
    }

    public sealed class JobAppEngineHttpTargetGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// App Engine Routing setting for the job.  Structure is documented below.
        /// </summary>
        [Input("appEngineRouting")]
        public Input<JobAppEngineHttpTargetAppEngineRoutingGetArgs>? AppEngineRouting { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// HTTP request body.
        /// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
        /// It is an error to set body on a job with an incompatible HttpMethod.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;

        /// <summary>
        /// -
        /// (Optional)
        /// This map contains the header field names and values.
        /// Repeated headers are not supported, but a header value can contain commas.
        /// </summary>
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Which HTTP method to use for the request.
        /// </summary>
        [Input("httpMethod")]
        public Input<string>? HttpMethod { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// The relative URI.
        /// The relative URL must begin with "/" and must be a valid HTTP relative URL.
        /// It can contain a path, query string arguments, and \# fragments.
        /// If the relative URL is empty, then the root path "/" will be used.
        /// No spaces are allowed, and the maximum length allowed is 2083 characters
        /// </summary>
        [Input("relativeUri", required: true)]
        public Input<string> RelativeUri { get; set; } = null!;

        public JobAppEngineHttpTargetGetArgs()
        {
        }
    }

    public sealed class JobHttpTargetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// HTTP request body.
        /// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
        /// It is an error to set body on a job with an incompatible HttpMethod.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;

        /// <summary>
        /// -
        /// (Optional)
        /// This map contains the header field names and values.
        /// Repeated headers are not supported, but a header value can contain commas.
        /// </summary>
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Which HTTP method to use for the request.
        /// </summary>
        [Input("httpMethod")]
        public Input<string>? HttpMethod { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Contains information needed for generating an OAuth token.
        /// This type of authorization should be used when sending requests to a GCP endpoint.  Structure is documented below.
        /// </summary>
        [Input("oauthToken")]
        public Input<JobHttpTargetOauthTokenArgs>? OauthToken { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Contains information needed for generating an OpenID Connect token.
        /// This type of authorization should be used when sending requests to third party endpoints or Cloud Run.  Structure is documented below.
        /// </summary>
        [Input("oidcToken")]
        public Input<JobHttpTargetOidcTokenArgs>? OidcToken { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// The full URI path that the request will be sent to.
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        public JobHttpTargetArgs()
        {
        }
    }

    public sealed class JobHttpTargetGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// HTTP request body.
        /// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
        /// It is an error to set body on a job with an incompatible HttpMethod.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;

        /// <summary>
        /// -
        /// (Optional)
        /// This map contains the header field names and values.
        /// Repeated headers are not supported, but a header value can contain commas.
        /// </summary>
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Which HTTP method to use for the request.
        /// </summary>
        [Input("httpMethod")]
        public Input<string>? HttpMethod { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Contains information needed for generating an OAuth token.
        /// This type of authorization should be used when sending requests to a GCP endpoint.  Structure is documented below.
        /// </summary>
        [Input("oauthToken")]
        public Input<JobHttpTargetOauthTokenGetArgs>? OauthToken { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Contains information needed for generating an OpenID Connect token.
        /// This type of authorization should be used when sending requests to third party endpoints or Cloud Run.  Structure is documented below.
        /// </summary>
        [Input("oidcToken")]
        public Input<JobHttpTargetOidcTokenGetArgs>? OidcToken { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// The full URI path that the request will be sent to.
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        public JobHttpTargetGetArgs()
        {
        }
    }

    public sealed class JobHttpTargetOauthTokenArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// OAuth scope to be used for generating OAuth access token. If not specified,
        /// "https://www.googleapis.com/auth/cloud-platform" will be used.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Service account email to be used for generating OAuth token.
        /// The service account must be within the same project as the job.
        /// </summary>
        [Input("serviceAccountEmail", required: true)]
        public Input<string> ServiceAccountEmail { get; set; } = null!;

        public JobHttpTargetOauthTokenArgs()
        {
        }
    }

    public sealed class JobHttpTargetOauthTokenGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// OAuth scope to be used for generating OAuth access token. If not specified,
        /// "https://www.googleapis.com/auth/cloud-platform" will be used.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Service account email to be used for generating OAuth token.
        /// The service account must be within the same project as the job.
        /// </summary>
        [Input("serviceAccountEmail", required: true)]
        public Input<string> ServiceAccountEmail { get; set; } = null!;

        public JobHttpTargetOauthTokenGetArgs()
        {
        }
    }

    public sealed class JobHttpTargetOidcTokenArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Audience to be used when generating OIDC token. If not specified,
        /// the URI specified in target will be used.
        /// </summary>
        [Input("audience")]
        public Input<string>? Audience { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Service account email to be used for generating OAuth token.
        /// The service account must be within the same project as the job.
        /// </summary>
        [Input("serviceAccountEmail", required: true)]
        public Input<string> ServiceAccountEmail { get; set; } = null!;

        public JobHttpTargetOidcTokenArgs()
        {
        }
    }

    public sealed class JobHttpTargetOidcTokenGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Audience to be used when generating OIDC token. If not specified,
        /// the URI specified in target will be used.
        /// </summary>
        [Input("audience")]
        public Input<string>? Audience { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Service account email to be used for generating OAuth token.
        /// The service account must be within the same project as the job.
        /// </summary>
        [Input("serviceAccountEmail", required: true)]
        public Input<string> ServiceAccountEmail { get; set; } = null!;

        public JobHttpTargetOidcTokenGetArgs()
        {
        }
    }

    public sealed class JobPubsubTargetArgs : Pulumi.ResourceArgs
    {
        [Input("attributes")]
        private InputMap<string>? _attributes;

        /// <summary>
        /// -
        /// (Optional)
        /// Attributes for PubsubMessage.
        /// Pubsub message must contain either non-empty data, or at least one attribute.
        /// </summary>
        public InputMap<string> Attributes
        {
            get => _attributes ?? (_attributes = new InputMap<string>());
            set => _attributes = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// The message payload for PubsubMessage.
        /// Pubsub message must contain either non-empty data, or at least one attribute.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// The full resource name for the Cloud Pub/Sub topic to which
        /// messages will be published when a job is delivered. ~&gt;**NOTE**:
        /// The topic name must be in the same format as required by PubSub's
        /// PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public JobPubsubTargetArgs()
        {
        }
    }

    public sealed class JobPubsubTargetGetArgs : Pulumi.ResourceArgs
    {
        [Input("attributes")]
        private InputMap<string>? _attributes;

        /// <summary>
        /// -
        /// (Optional)
        /// Attributes for PubsubMessage.
        /// Pubsub message must contain either non-empty data, or at least one attribute.
        /// </summary>
        public InputMap<string> Attributes
        {
            get => _attributes ?? (_attributes = new InputMap<string>());
            set => _attributes = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// The message payload for PubsubMessage.
        /// Pubsub message must contain either non-empty data, or at least one attribute.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// The full resource name for the Cloud Pub/Sub topic to which
        /// messages will be published when a job is delivered. ~&gt;**NOTE**:
        /// The topic name must be in the same format as required by PubSub's
        /// PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public JobPubsubTargetGetArgs()
        {
        }
    }

    public sealed class JobRetryConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// The maximum amount of time to wait before retrying a job after it fails.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'.
        /// </summary>
        [Input("maxBackoffDuration")]
        public Input<string>? MaxBackoffDuration { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The time between retries will double maxDoublings times.
        /// A job's retry interval starts at minBackoffDuration,
        /// then doubles maxDoublings times, then increases linearly,
        /// and finally retries retries at intervals of maxBackoffDuration up to retryCount times.
        /// </summary>
        [Input("maxDoublings")]
        public Input<int>? MaxDoublings { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The time limit for retrying a failed job, measured from time when an execution was first attempted.
        /// If specified with retryCount, the job will be retried until both limits are reached.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'.
        /// </summary>
        [Input("maxRetryDuration")]
        public Input<string>? MaxRetryDuration { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The minimum amount of time to wait before retrying a job after it fails.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'.
        /// </summary>
        [Input("minBackoffDuration")]
        public Input<string>? MinBackoffDuration { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The number of attempts that the system will make to run a
        /// job using the exponential backoff procedure described by maxDoublings.
        /// Values greater than 5 and negative values are not allowed.
        /// </summary>
        [Input("retryCount")]
        public Input<int>? RetryCount { get; set; }

        public JobRetryConfigArgs()
        {
        }
    }

    public sealed class JobRetryConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// The maximum amount of time to wait before retrying a job after it fails.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'.
        /// </summary>
        [Input("maxBackoffDuration")]
        public Input<string>? MaxBackoffDuration { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The time between retries will double maxDoublings times.
        /// A job's retry interval starts at minBackoffDuration,
        /// then doubles maxDoublings times, then increases linearly,
        /// and finally retries retries at intervals of maxBackoffDuration up to retryCount times.
        /// </summary>
        [Input("maxDoublings")]
        public Input<int>? MaxDoublings { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The time limit for retrying a failed job, measured from time when an execution was first attempted.
        /// If specified with retryCount, the job will be retried until both limits are reached.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'.
        /// </summary>
        [Input("maxRetryDuration")]
        public Input<string>? MaxRetryDuration { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The minimum amount of time to wait before retrying a job after it fails.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'.
        /// </summary>
        [Input("minBackoffDuration")]
        public Input<string>? MinBackoffDuration { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The number of attempts that the system will make to run a
        /// job using the exponential backoff procedure described by maxDoublings.
        /// Values greater than 5 and negative values are not allowed.
        /// </summary>
        [Input("retryCount")]
        public Input<int>? RetryCount { get; set; }

        public JobRetryConfigGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class JobAppEngineHttpTarget
    {
        /// <summary>
        /// -
        /// (Optional)
        /// App Engine Routing setting for the job.  Structure is documented below.
        /// </summary>
        public readonly JobAppEngineHttpTargetAppEngineRouting? AppEngineRouting;
        /// <summary>
        /// -
        /// (Optional)
        /// HTTP request body.
        /// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
        /// It is an error to set body on a job with an incompatible HttpMethod.
        /// </summary>
        public readonly string? Body;
        /// <summary>
        /// -
        /// (Optional)
        /// This map contains the header field names and values.
        /// Repeated headers are not supported, but a header value can contain commas.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Headers;
        /// <summary>
        /// -
        /// (Optional)
        /// Which HTTP method to use for the request.
        /// </summary>
        public readonly string? HttpMethod;
        /// <summary>
        /// -
        /// (Required)
        /// The relative URI.
        /// The relative URL must begin with "/" and must be a valid HTTP relative URL.
        /// It can contain a path, query string arguments, and \# fragments.
        /// If the relative URL is empty, then the root path "/" will be used.
        /// No spaces are allowed, and the maximum length allowed is 2083 characters
        /// </summary>
        public readonly string RelativeUri;

        [OutputConstructor]
        private JobAppEngineHttpTarget(
            JobAppEngineHttpTargetAppEngineRouting? appEngineRouting,
            string? body,
            ImmutableDictionary<string, string>? headers,
            string? httpMethod,
            string relativeUri)
        {
            AppEngineRouting = appEngineRouting;
            Body = body;
            Headers = headers;
            HttpMethod = httpMethod;
            RelativeUri = relativeUri;
        }
    }

    [OutputType]
    public sealed class JobAppEngineHttpTargetAppEngineRouting
    {
        /// <summary>
        /// -
        /// (Optional)
        /// App instance.
        /// By default, the job is sent to an instance which is available when the job is attempted.
        /// </summary>
        public readonly string? Instance;
        /// <summary>
        /// -
        /// (Optional)
        /// App service.
        /// By default, the job is sent to the service which is the default service when the job is attempted.
        /// </summary>
        public readonly string? Service;
        /// <summary>
        /// -
        /// (Optional)
        /// App version.
        /// By default, the job is sent to the version which is the default version when the job is attempted.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private JobAppEngineHttpTargetAppEngineRouting(
            string? instance,
            string? service,
            string? version)
        {
            Instance = instance;
            Service = service;
            Version = version;
        }
    }

    [OutputType]
    public sealed class JobHttpTarget
    {
        /// <summary>
        /// -
        /// (Optional)
        /// HTTP request body.
        /// A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
        /// It is an error to set body on a job with an incompatible HttpMethod.
        /// </summary>
        public readonly string? Body;
        /// <summary>
        /// -
        /// (Optional)
        /// This map contains the header field names and values.
        /// Repeated headers are not supported, but a header value can contain commas.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Headers;
        /// <summary>
        /// -
        /// (Optional)
        /// Which HTTP method to use for the request.
        /// </summary>
        public readonly string? HttpMethod;
        /// <summary>
        /// -
        /// (Optional)
        /// Contains information needed for generating an OAuth token.
        /// This type of authorization should be used when sending requests to a GCP endpoint.  Structure is documented below.
        /// </summary>
        public readonly JobHttpTargetOauthToken? OauthToken;
        /// <summary>
        /// -
        /// (Optional)
        /// Contains information needed for generating an OpenID Connect token.
        /// This type of authorization should be used when sending requests to third party endpoints or Cloud Run.  Structure is documented below.
        /// </summary>
        public readonly JobHttpTargetOidcToken? OidcToken;
        /// <summary>
        /// -
        /// (Required)
        /// The full URI path that the request will be sent to.
        /// </summary>
        public readonly string Uri;

        [OutputConstructor]
        private JobHttpTarget(
            string? body,
            ImmutableDictionary<string, string>? headers,
            string? httpMethod,
            JobHttpTargetOauthToken? oauthToken,
            JobHttpTargetOidcToken? oidcToken,
            string uri)
        {
            Body = body;
            Headers = headers;
            HttpMethod = httpMethod;
            OauthToken = oauthToken;
            OidcToken = oidcToken;
            Uri = uri;
        }
    }

    [OutputType]
    public sealed class JobHttpTargetOauthToken
    {
        /// <summary>
        /// -
        /// (Optional)
        /// OAuth scope to be used for generating OAuth access token. If not specified,
        /// "https://www.googleapis.com/auth/cloud-platform" will be used.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// -
        /// (Required)
        /// Service account email to be used for generating OAuth token.
        /// The service account must be within the same project as the job.
        /// </summary>
        public readonly string ServiceAccountEmail;

        [OutputConstructor]
        private JobHttpTargetOauthToken(
            string? scope,
            string serviceAccountEmail)
        {
            Scope = scope;
            ServiceAccountEmail = serviceAccountEmail;
        }
    }

    [OutputType]
    public sealed class JobHttpTargetOidcToken
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Audience to be used when generating OIDC token. If not specified,
        /// the URI specified in target will be used.
        /// </summary>
        public readonly string? Audience;
        /// <summary>
        /// -
        /// (Required)
        /// Service account email to be used for generating OAuth token.
        /// The service account must be within the same project as the job.
        /// </summary>
        public readonly string ServiceAccountEmail;

        [OutputConstructor]
        private JobHttpTargetOidcToken(
            string? audience,
            string serviceAccountEmail)
        {
            Audience = audience;
            ServiceAccountEmail = serviceAccountEmail;
        }
    }

    [OutputType]
    public sealed class JobPubsubTarget
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Attributes for PubsubMessage.
        /// Pubsub message must contain either non-empty data, or at least one attribute.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Attributes;
        /// <summary>
        /// -
        /// (Optional)
        /// The message payload for PubsubMessage.
        /// Pubsub message must contain either non-empty data, or at least one attribute.
        /// </summary>
        public readonly string? Data;
        /// <summary>
        /// -
        /// (Required)
        /// The full resource name for the Cloud Pub/Sub topic to which
        /// messages will be published when a job is delivered. ~&gt;**NOTE**:
        /// The topic name must be in the same format as required by PubSub's
        /// PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.
        /// </summary>
        public readonly string TopicName;

        [OutputConstructor]
        private JobPubsubTarget(
            ImmutableDictionary<string, string>? attributes,
            string? data,
            string topicName)
        {
            Attributes = attributes;
            Data = data;
            TopicName = topicName;
        }
    }

    [OutputType]
    public sealed class JobRetryConfig
    {
        /// <summary>
        /// -
        /// (Optional)
        /// The maximum amount of time to wait before retrying a job after it fails.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'.
        /// </summary>
        public readonly string? MaxBackoffDuration;
        /// <summary>
        /// -
        /// (Optional)
        /// The time between retries will double maxDoublings times.
        /// A job's retry interval starts at minBackoffDuration,
        /// then doubles maxDoublings times, then increases linearly,
        /// and finally retries retries at intervals of maxBackoffDuration up to retryCount times.
        /// </summary>
        public readonly int? MaxDoublings;
        /// <summary>
        /// -
        /// (Optional)
        /// The time limit for retrying a failed job, measured from time when an execution was first attempted.
        /// If specified with retryCount, the job will be retried until both limits are reached.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'.
        /// </summary>
        public readonly string? MaxRetryDuration;
        /// <summary>
        /// -
        /// (Optional)
        /// The minimum amount of time to wait before retrying a job after it fails.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'.
        /// </summary>
        public readonly string? MinBackoffDuration;
        /// <summary>
        /// -
        /// (Optional)
        /// The number of attempts that the system will make to run a
        /// job using the exponential backoff procedure described by maxDoublings.
        /// Values greater than 5 and negative values are not allowed.
        /// </summary>
        public readonly int? RetryCount;

        [OutputConstructor]
        private JobRetryConfig(
            string? maxBackoffDuration,
            int? maxDoublings,
            string? maxRetryDuration,
            string? minBackoffDuration,
            int? retryCount)
        {
            MaxBackoffDuration = maxBackoffDuration;
            MaxDoublings = maxDoublings;
            MaxRetryDuration = maxRetryDuration;
            MinBackoffDuration = minBackoffDuration;
            RetryCount = retryCount;
        }
    }
    }
}
