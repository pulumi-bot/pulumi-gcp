// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Sql
{
    public static partial class Invokes
    {
        public static Task<GetCaCertsResult> GetCaCerts(GetCaCertsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCaCertsResult>("gcp:sql/getCaCerts:getCaCerts", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetCaCertsArgs : Pulumi.InvokeArgs
    {
        [Input("instance", required: true)]
        public string Instance { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetCaCertsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetCaCertsResult
    {
        public readonly string ActiveVersion;
        public readonly ImmutableArray<Outputs.GetCaCertsCertsResult> Certs;
        public readonly string Instance;
        public readonly string Project;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetCaCertsResult(
            string activeVersion,
            ImmutableArray<Outputs.GetCaCertsCertsResult> certs,
            string instance,
            string project,
            string id)
        {
            ActiveVersion = activeVersion;
            Certs = certs;
            Instance = instance;
            Project = project;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetCaCertsCertsResult
    {
        public readonly string Cert;
        public readonly string CommonName;
        public readonly string CreateTime;
        public readonly string ExpirationTime;
        public readonly string Sha1Fingerprint;

        [OutputConstructor]
        private GetCaCertsCertsResult(
            string cert,
            string commonName,
            string createTime,
            string expirationTime,
            string sha1Fingerprint)
        {
            Cert = cert;
            CommonName = commonName;
            CreateTime = createTime;
            ExpirationTime = expirationTime;
            Sha1Fingerprint = sha1Fingerprint;
        }
    }
    }
}
