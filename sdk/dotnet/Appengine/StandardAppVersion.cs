// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.AppEngine
{
    /// <summary>
    /// Standard App Version resource to create a new version of standard GAE Application.
    /// Currently supporting Zip and File Containers.
    /// Currently does not support async operation checking.
    /// 
    /// 
    /// To get more information about StandardAppVersion, see:
    /// 
    /// * [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/appengine/docs/standard)
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/app_engine_standard_app_version.html.markdown.
    /// </summary>
    public partial class StandardAppVersion : Pulumi.CustomResource
    {
        /// <summary>
        /// If set to `true`, the service will be deleted if it is the last version.    
        /// </summary>
        [Output("deleteServiceOnDestroy")]
        public Output<bool?> DeleteServiceOnDestroy { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Code and application artifacts that make up this version.  Structure is documented below.
        /// </summary>
        [Output("deployment")]
        public Output<Outputs.StandardAppVersionDeployment?> Deployment { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// The entrypoint for the application.  Structure is documented below.
        /// </summary>
        [Output("entrypoint")]
        public Output<Outputs.StandardAppVersionEntrypoint?> Entrypoint { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Environment variables available to the application.
        /// </summary>
        [Output("envVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvVariables { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// An ordered list of URL-matching patterns that should be applied to incoming requests.
        /// The first matching URL handles the request and other request handlers are not attempted.  Structure is documented below.
        /// </summary>
        [Output("handlers")]
        public Output<ImmutableArray<Outputs.StandardAppVersionHandlers>> Handlers { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Instance class that is used to run this version. Valid values are
        /// AutomaticScaling F1, F2, F4, F4_1G
        /// (Only AutomaticScaling is supported at the moment)
        /// </summary>
        [Output("instanceClass")]
        public Output<string?> InstanceClass { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Configuration for third-party Python runtime libraries that are required by the application.  Structure is documented below.
        /// </summary>
        [Output("libraries")]
        public Output<ImmutableArray<Outputs.StandardAppVersionLibraries>> Libraries { get; private set; } = null!;

        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// If set to `true`, the application version will not be deleted.
        /// </summary>
        [Output("noopOnDestroy")]
        public Output<bool?> NoopOnDestroy { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Required)
        /// Desired runtime. Example python27.
        /// </summary>
        [Output("runtime")]
        public Output<string> Runtime { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// The version of the API in the given runtime environment.
        /// Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        /// </summary>
        [Output("runtimeApiVersion")]
        public Output<string?> RuntimeApiVersion { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// AppEngine service resource
        /// </summary>
        [Output("service")]
        public Output<string?> Service { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Whether multiple requests can be dispatched to this version at once.
        /// </summary>
        [Output("threadsafe")]
        public Output<bool?> Threadsafe { get; private set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
        /// </summary>
        [Output("versionId")]
        public Output<string?> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a StandardAppVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StandardAppVersion(string name, StandardAppVersionArgs args, CustomResourceOptions? options = null)
            : base("gcp:appengine/standardAppVersion:StandardAppVersion", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private StandardAppVersion(string name, Input<string> id, StandardAppVersionState? state = null, CustomResourceOptions? options = null)
            : base("gcp:appengine/standardAppVersion:StandardAppVersion", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StandardAppVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StandardAppVersion Get(string name, Input<string> id, StandardAppVersionState? state = null, CustomResourceOptions? options = null)
        {
            return new StandardAppVersion(name, id, state, options);
        }
    }

    public sealed class StandardAppVersionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set to `true`, the service will be deleted if it is the last version.    
        /// </summary>
        [Input("deleteServiceOnDestroy")]
        public Input<bool>? DeleteServiceOnDestroy { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Code and application artifacts that make up this version.  Structure is documented below.
        /// </summary>
        [Input("deployment")]
        public Input<Inputs.StandardAppVersionDeploymentArgs>? Deployment { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The entrypoint for the application.  Structure is documented below.
        /// </summary>
        [Input("entrypoint")]
        public Input<Inputs.StandardAppVersionEntrypointArgs>? Entrypoint { get; set; }

        [Input("envVariables")]
        private InputMap<string>? _envVariables;

        /// <summary>
        /// -
        /// (Optional)
        /// Environment variables available to the application.
        /// </summary>
        public InputMap<string> EnvVariables
        {
            get => _envVariables ?? (_envVariables = new InputMap<string>());
            set => _envVariables = value;
        }

        [Input("handlers")]
        private InputList<Inputs.StandardAppVersionHandlersArgs>? _handlers;

        /// <summary>
        /// -
        /// (Optional)
        /// An ordered list of URL-matching patterns that should be applied to incoming requests.
        /// The first matching URL handles the request and other request handlers are not attempted.  Structure is documented below.
        /// </summary>
        public InputList<Inputs.StandardAppVersionHandlersArgs> Handlers
        {
            get => _handlers ?? (_handlers = new InputList<Inputs.StandardAppVersionHandlersArgs>());
            set => _handlers = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Instance class that is used to run this version. Valid values are
        /// AutomaticScaling F1, F2, F4, F4_1G
        /// (Only AutomaticScaling is supported at the moment)
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        [Input("libraries")]
        private InputList<Inputs.StandardAppVersionLibrariesArgs>? _libraries;

        /// <summary>
        /// -
        /// (Optional)
        /// Configuration for third-party Python runtime libraries that are required by the application.  Structure is documented below.
        /// </summary>
        public InputList<Inputs.StandardAppVersionLibrariesArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.StandardAppVersionLibrariesArgs>());
            set => _libraries = value;
        }

        /// <summary>
        /// If set to `true`, the application version will not be deleted.
        /// </summary>
        [Input("noopOnDestroy")]
        public Input<bool>? NoopOnDestroy { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Desired runtime. Example python27.
        /// </summary>
        [Input("runtime", required: true)]
        public Input<string> Runtime { get; set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// The version of the API in the given runtime environment.
        /// Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        /// </summary>
        [Input("runtimeApiVersion")]
        public Input<string>? RuntimeApiVersion { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// AppEngine service resource
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Whether multiple requests can be dispatched to this version at once.
        /// </summary>
        [Input("threadsafe")]
        public Input<bool>? Threadsafe { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public StandardAppVersionArgs()
        {
        }
    }

    public sealed class StandardAppVersionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set to `true`, the service will be deleted if it is the last version.    
        /// </summary>
        [Input("deleteServiceOnDestroy")]
        public Input<bool>? DeleteServiceOnDestroy { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Code and application artifacts that make up this version.  Structure is documented below.
        /// </summary>
        [Input("deployment")]
        public Input<Inputs.StandardAppVersionDeploymentGetArgs>? Deployment { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The entrypoint for the application.  Structure is documented below.
        /// </summary>
        [Input("entrypoint")]
        public Input<Inputs.StandardAppVersionEntrypointGetArgs>? Entrypoint { get; set; }

        [Input("envVariables")]
        private InputMap<string>? _envVariables;

        /// <summary>
        /// -
        /// (Optional)
        /// Environment variables available to the application.
        /// </summary>
        public InputMap<string> EnvVariables
        {
            get => _envVariables ?? (_envVariables = new InputMap<string>());
            set => _envVariables = value;
        }

        [Input("handlers")]
        private InputList<Inputs.StandardAppVersionHandlersGetArgs>? _handlers;

        /// <summary>
        /// -
        /// (Optional)
        /// An ordered list of URL-matching patterns that should be applied to incoming requests.
        /// The first matching URL handles the request and other request handlers are not attempted.  Structure is documented below.
        /// </summary>
        public InputList<Inputs.StandardAppVersionHandlersGetArgs> Handlers
        {
            get => _handlers ?? (_handlers = new InputList<Inputs.StandardAppVersionHandlersGetArgs>());
            set => _handlers = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Instance class that is used to run this version. Valid values are
        /// AutomaticScaling F1, F2, F4, F4_1G
        /// (Only AutomaticScaling is supported at the moment)
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        [Input("libraries")]
        private InputList<Inputs.StandardAppVersionLibrariesGetArgs>? _libraries;

        /// <summary>
        /// -
        /// (Optional)
        /// Configuration for third-party Python runtime libraries that are required by the application.  Structure is documented below.
        /// </summary>
        public InputList<Inputs.StandardAppVersionLibrariesGetArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.StandardAppVersionLibrariesGetArgs>());
            set => _libraries = value;
        }

        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If set to `true`, the application version will not be deleted.
        /// </summary>
        [Input("noopOnDestroy")]
        public Input<bool>? NoopOnDestroy { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Desired runtime. Example python27.
        /// </summary>
        [Input("runtime")]
        public Input<string>? Runtime { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// The version of the API in the given runtime environment.
        /// Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        /// </summary>
        [Input("runtimeApiVersion")]
        public Input<string>? RuntimeApiVersion { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// AppEngine service resource
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Whether multiple requests can be dispatched to this version at once.
        /// </summary>
        [Input("threadsafe")]
        public Input<bool>? Threadsafe { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public StandardAppVersionState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class StandardAppVersionDeploymentArgs : Pulumi.ResourceArgs
    {
        [Input("files")]
        private InputList<StandardAppVersionDeploymentFilesArgs>? _files;

        /// <summary>
        /// -
        /// (Optional)
        /// Manifest of the files stored in Google Cloud Storage that are included as part of this version.
        /// All files must be readable using the credentials supplied with this call.  Structure is documented below.
        /// </summary>
        public InputList<StandardAppVersionDeploymentFilesArgs> Files
        {
            get => _files ?? (_files = new InputList<StandardAppVersionDeploymentFilesArgs>());
            set => _files = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Zip File  Structure is documented below.
        /// </summary>
        [Input("zip")]
        public Input<StandardAppVersionDeploymentZipArgs>? Zip { get; set; }

        public StandardAppVersionDeploymentArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentFilesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// SHA1 checksum of the file
        /// </summary>
        [Input("sha1Sum")]
        public Input<string>? Sha1Sum { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Source URL
        /// </summary>
        [Input("sourceUrl", required: true)]
        public Input<string> SourceUrl { get; set; } = null!;

        public StandardAppVersionDeploymentFilesArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentFilesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// -
        /// (Optional)
        /// SHA1 checksum of the file
        /// </summary>
        [Input("sha1Sum")]
        public Input<string>? Sha1Sum { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Source URL
        /// </summary>
        [Input("sourceUrl", required: true)]
        public Input<string> SourceUrl { get; set; } = null!;

        public StandardAppVersionDeploymentFilesGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentGetArgs : Pulumi.ResourceArgs
    {
        [Input("files")]
        private InputList<StandardAppVersionDeploymentFilesGetArgs>? _files;

        /// <summary>
        /// -
        /// (Optional)
        /// Manifest of the files stored in Google Cloud Storage that are included as part of this version.
        /// All files must be readable using the credentials supplied with this call.  Structure is documented below.
        /// </summary>
        public InputList<StandardAppVersionDeploymentFilesGetArgs> Files
        {
            get => _files ?? (_files = new InputList<StandardAppVersionDeploymentFilesGetArgs>());
            set => _files = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// Zip File  Structure is documented below.
        /// </summary>
        [Input("zip")]
        public Input<StandardAppVersionDeploymentZipGetArgs>? Zip { get; set; }

        public StandardAppVersionDeploymentGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentZipArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// files count
        /// </summary>
        [Input("filesCount")]
        public Input<int>? FilesCount { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Source URL
        /// </summary>
        [Input("sourceUrl", required: true)]
        public Input<string> SourceUrl { get; set; } = null!;

        public StandardAppVersionDeploymentZipArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentZipGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// files count
        /// </summary>
        [Input("filesCount")]
        public Input<int>? FilesCount { get; set; }

        /// <summary>
        /// -
        /// (Required)
        /// Source URL
        /// </summary>
        [Input("sourceUrl", required: true)]
        public Input<string> SourceUrl { get; set; } = null!;

        public StandardAppVersionDeploymentZipGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionEntrypointArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The format should be a shell command that can be fed to bash -c.
        /// </summary>
        [Input("shell", required: true)]
        public Input<string> Shell { get; set; } = null!;

        public StandardAppVersionEntrypointArgs()
        {
        }
    }

    public sealed class StandardAppVersionEntrypointGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// The format should be a shell command that can be fed to bash -c.
        /// </summary>
        [Input("shell", required: true)]
        public Input<string> Shell { get; set; } = null!;

        public StandardAppVersionEntrypointGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Actions to take when the user is not logged in.
        /// </summary>
        [Input("authFailAction")]
        public Input<string>? AuthFailAction { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Methods to restrict access to a URL based on login status.
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// 30x code to use when performing redirects for the secure field.
        /// </summary>
        [Input("redirectHttpResponseCode")]
        public Input<string>? RedirectHttpResponseCode { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Executes a script to handle the requests that match this URL pattern.
        /// Only the auto value is supported for Node.js in the App Engine standard environment, for example "script:" "auto".  Structure is documented below.
        /// </summary>
        [Input("script")]
        public Input<StandardAppVersionHandlersScriptArgs>? Script { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Security (HTTPS) enforcement for this URL.
        /// </summary>
        [Input("securityLevel")]
        public Input<string>? SecurityLevel { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them.  Structure is documented below.
        /// </summary>
        [Input("staticFiles")]
        public Input<StandardAppVersionHandlersStaticFilesArgs>? StaticFiles { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
        /// All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
        /// </summary>
        [Input("urlRegex")]
        public Input<string>? UrlRegex { get; set; }

        public StandardAppVersionHandlersArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Actions to take when the user is not logged in.
        /// </summary>
        [Input("authFailAction")]
        public Input<string>? AuthFailAction { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Methods to restrict access to a URL based on login status.
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// 30x code to use when performing redirects for the secure field.
        /// </summary>
        [Input("redirectHttpResponseCode")]
        public Input<string>? RedirectHttpResponseCode { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Executes a script to handle the requests that match this URL pattern.
        /// Only the auto value is supported for Node.js in the App Engine standard environment, for example "script:" "auto".  Structure is documented below.
        /// </summary>
        [Input("script")]
        public Input<StandardAppVersionHandlersScriptGetArgs>? Script { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Security (HTTPS) enforcement for this URL.
        /// </summary>
        [Input("securityLevel")]
        public Input<string>? SecurityLevel { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them.  Structure is documented below.
        /// </summary>
        [Input("staticFiles")]
        public Input<StandardAppVersionHandlersStaticFilesGetArgs>? StaticFiles { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
        /// All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
        /// </summary>
        [Input("urlRegex")]
        public Input<string>? UrlRegex { get; set; }

        public StandardAppVersionHandlersGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersScriptArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// Path to the script from the application root directory.
        /// </summary>
        [Input("scriptPath", required: true)]
        public Input<string> ScriptPath { get; set; } = null!;

        public StandardAppVersionHandlersScriptArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersScriptGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Required)
        /// Path to the script from the application root directory.
        /// </summary>
        [Input("scriptPath", required: true)]
        public Input<string> ScriptPath { get; set; } = null!;

        public StandardAppVersionHandlersScriptGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersStaticFilesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Whether files should also be uploaded as code data. By default, files declared in static file handlers are uploaded as static data and are only served to end users; they cannot be read by the application. If enabled, uploads are charged against both your code and static data storage resource quotas.
        /// </summary>
        [Input("applicationReadable")]
        public Input<bool>? ApplicationReadable { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Time a static file served by this handler should be cached by web proxies and browsers.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
        /// </summary>
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("httpHeaders")]
        private InputMap<string>? _httpHeaders;

        /// <summary>
        /// -
        /// (Optional)
        /// HTTP headers to use for all responses from these URLs.
        /// An object containing a list of "key:value" value pairs.".
        /// </summary>
        public InputMap<string> HttpHeaders
        {
            get => _httpHeaders ?? (_httpHeaders = new InputMap<string>());
            set => _httpHeaders = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// MIME type used to serve all files served by this handler.
        /// Defaults to file-specific MIME types, which are derived from each file's filename extension.
        /// </summary>
        [Input("mimeType")]
        public Input<string>? MimeType { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Path to the static files matched by the URL pattern, from the application root directory. The path can refer to text matched in groupings in the URL pattern.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Whether this handler should match the request if the file referenced by the handler does not exist.
        /// </summary>
        [Input("requireMatchingFile")]
        public Input<bool>? RequireMatchingFile { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Regular expression that matches the file paths for all files that should be referenced by this handler.
        /// </summary>
        [Input("uploadPathRegex")]
        public Input<string>? UploadPathRegex { get; set; }

        public StandardAppVersionHandlersStaticFilesArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersStaticFilesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Whether files should also be uploaded as code data. By default, files declared in static file handlers are uploaded as static data and are only served to end users; they cannot be read by the application. If enabled, uploads are charged against both your code and static data storage resource quotas.
        /// </summary>
        [Input("applicationReadable")]
        public Input<bool>? ApplicationReadable { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Time a static file served by this handler should be cached by web proxies and browsers.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
        /// </summary>
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("httpHeaders")]
        private InputMap<string>? _httpHeaders;

        /// <summary>
        /// -
        /// (Optional)
        /// HTTP headers to use for all responses from these URLs.
        /// An object containing a list of "key:value" value pairs.".
        /// </summary>
        public InputMap<string> HttpHeaders
        {
            get => _httpHeaders ?? (_httpHeaders = new InputMap<string>());
            set => _httpHeaders = value;
        }

        /// <summary>
        /// -
        /// (Optional)
        /// MIME type used to serve all files served by this handler.
        /// Defaults to file-specific MIME types, which are derived from each file's filename extension.
        /// </summary>
        [Input("mimeType")]
        public Input<string>? MimeType { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Path to the static files matched by the URL pattern, from the application root directory. The path can refer to text matched in groupings in the URL pattern.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Whether this handler should match the request if the file referenced by the handler does not exist.
        /// </summary>
        [Input("requireMatchingFile")]
        public Input<bool>? RequireMatchingFile { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Regular expression that matches the file paths for all files that should be referenced by this handler.
        /// </summary>
        [Input("uploadPathRegex")]
        public Input<string>? UploadPathRegex { get; set; }

        public StandardAppVersionHandlersStaticFilesGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionLibrariesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Version of the library to select, or "latest".
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public StandardAppVersionLibrariesArgs()
        {
        }
    }

    public sealed class StandardAppVersionLibrariesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// -
        /// (Optional)
        /// Version of the library to select, or "latest".
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public StandardAppVersionLibrariesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class StandardAppVersionDeployment
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Manifest of the files stored in Google Cloud Storage that are included as part of this version.
        /// All files must be readable using the credentials supplied with this call.  Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<StandardAppVersionDeploymentFiles> Files;
        /// <summary>
        /// -
        /// (Optional)
        /// Zip File  Structure is documented below.
        /// </summary>
        public readonly StandardAppVersionDeploymentZip? Zip;

        [OutputConstructor]
        private StandardAppVersionDeployment(
            ImmutableArray<StandardAppVersionDeploymentFiles> files,
            StandardAppVersionDeploymentZip? zip)
        {
            Files = files;
            Zip = zip;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionDeploymentFiles
    {
        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// -
        /// (Optional)
        /// SHA1 checksum of the file
        /// </summary>
        public readonly string? Sha1Sum;
        /// <summary>
        /// -
        /// (Required)
        /// Source URL
        /// </summary>
        public readonly string SourceUrl;

        [OutputConstructor]
        private StandardAppVersionDeploymentFiles(
            string name,
            string? sha1Sum,
            string sourceUrl)
        {
            Name = name;
            Sha1Sum = sha1Sum;
            SourceUrl = sourceUrl;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionDeploymentZip
    {
        /// <summary>
        /// -
        /// (Optional)
        /// files count
        /// </summary>
        public readonly int? FilesCount;
        /// <summary>
        /// -
        /// (Required)
        /// Source URL
        /// </summary>
        public readonly string SourceUrl;

        [OutputConstructor]
        private StandardAppVersionDeploymentZip(
            int? filesCount,
            string sourceUrl)
        {
            FilesCount = filesCount;
            SourceUrl = sourceUrl;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionEntrypoint
    {
        /// <summary>
        /// -
        /// (Required)
        /// The format should be a shell command that can be fed to bash -c.
        /// </summary>
        public readonly string Shell;

        [OutputConstructor]
        private StandardAppVersionEntrypoint(string shell)
        {
            Shell = shell;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionHandlers
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Actions to take when the user is not logged in.
        /// </summary>
        public readonly string? AuthFailAction;
        /// <summary>
        /// -
        /// (Optional)
        /// Methods to restrict access to a URL based on login status.
        /// </summary>
        public readonly string? Login;
        /// <summary>
        /// -
        /// (Optional)
        /// 30x code to use when performing redirects for the secure field.
        /// </summary>
        public readonly string? RedirectHttpResponseCode;
        /// <summary>
        /// -
        /// (Optional)
        /// Executes a script to handle the requests that match this URL pattern.
        /// Only the auto value is supported for Node.js in the App Engine standard environment, for example "script:" "auto".  Structure is documented below.
        /// </summary>
        public readonly StandardAppVersionHandlersScript? Script;
        /// <summary>
        /// -
        /// (Optional)
        /// Security (HTTPS) enforcement for this URL.
        /// </summary>
        public readonly string? SecurityLevel;
        /// <summary>
        /// -
        /// (Optional)
        /// Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them.  Structure is documented below.
        /// </summary>
        public readonly StandardAppVersionHandlersStaticFiles? StaticFiles;
        /// <summary>
        /// -
        /// (Optional)
        /// URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
        /// All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
        /// </summary>
        public readonly string? UrlRegex;

        [OutputConstructor]
        private StandardAppVersionHandlers(
            string? authFailAction,
            string? login,
            string? redirectHttpResponseCode,
            StandardAppVersionHandlersScript? script,
            string? securityLevel,
            StandardAppVersionHandlersStaticFiles? staticFiles,
            string? urlRegex)
        {
            AuthFailAction = authFailAction;
            Login = login;
            RedirectHttpResponseCode = redirectHttpResponseCode;
            Script = script;
            SecurityLevel = securityLevel;
            StaticFiles = staticFiles;
            UrlRegex = urlRegex;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionHandlersScript
    {
        /// <summary>
        /// -
        /// (Required)
        /// Path to the script from the application root directory.
        /// </summary>
        public readonly string ScriptPath;

        [OutputConstructor]
        private StandardAppVersionHandlersScript(string scriptPath)
        {
            ScriptPath = scriptPath;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionHandlersStaticFiles
    {
        /// <summary>
        /// -
        /// (Optional)
        /// Whether files should also be uploaded as code data. By default, files declared in static file handlers are uploaded as static data and are only served to end users; they cannot be read by the application. If enabled, uploads are charged against both your code and static data storage resource quotas.
        /// </summary>
        public readonly bool? ApplicationReadable;
        /// <summary>
        /// -
        /// (Optional)
        /// Time a static file served by this handler should be cached by web proxies and browsers.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
        /// </summary>
        public readonly string? Expiration;
        /// <summary>
        /// -
        /// (Optional)
        /// HTTP headers to use for all responses from these URLs.
        /// An object containing a list of "key:value" value pairs.".
        /// </summary>
        public readonly ImmutableDictionary<string, string>? HttpHeaders;
        /// <summary>
        /// -
        /// (Optional)
        /// MIME type used to serve all files served by this handler.
        /// Defaults to file-specific MIME types, which are derived from each file's filename extension.
        /// </summary>
        public readonly string? MimeType;
        /// <summary>
        /// -
        /// (Optional)
        /// Path to the static files matched by the URL pattern, from the application root directory. The path can refer to text matched in groupings in the URL pattern.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// -
        /// (Optional)
        /// Whether this handler should match the request if the file referenced by the handler does not exist.
        /// </summary>
        public readonly bool? RequireMatchingFile;
        /// <summary>
        /// -
        /// (Optional)
        /// Regular expression that matches the file paths for all files that should be referenced by this handler.
        /// </summary>
        public readonly string? UploadPathRegex;

        [OutputConstructor]
        private StandardAppVersionHandlersStaticFiles(
            bool? applicationReadable,
            string? expiration,
            ImmutableDictionary<string, string>? httpHeaders,
            string? mimeType,
            string? path,
            bool? requireMatchingFile,
            string? uploadPathRegex)
        {
            ApplicationReadable = applicationReadable;
            Expiration = expiration;
            HttpHeaders = httpHeaders;
            MimeType = mimeType;
            Path = path;
            RequireMatchingFile = requireMatchingFile;
            UploadPathRegex = uploadPathRegex;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionLibraries
    {
        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// -
        /// (Optional)
        /// Version of the library to select, or "latest".
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private StandardAppVersionLibraries(
            string? name,
            string? version)
        {
            Name = name;
            Version = version;
        }
    }
    }
}
