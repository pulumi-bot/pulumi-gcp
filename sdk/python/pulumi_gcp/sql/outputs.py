# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.output_type
class DatabaseInstanceIpAddress(dict):
    ip_address: Optional[str] = pulumi.output_property("ipAddress")
    time_to_retire: Optional[str] = pulumi.output_property("timeToRetire")
    type: Optional[str] = pulumi.output_property("type")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseInstanceReplicaConfiguration(dict):
    ca_certificate: Optional[str] = pulumi.output_property("caCertificate")
    """
    PEM representation of the trusted CA's x509
    certificate.
    """
    client_certificate: Optional[str] = pulumi.output_property("clientCertificate")
    """
    PEM representation of the slave's x509
    certificate.
    """
    client_key: Optional[str] = pulumi.output_property("clientKey")
    """
    PEM representation of the slave's private key. The
    corresponding public key in encoded in the `client_certificate`.
    """
    connect_retry_interval: Optional[float] = pulumi.output_property("connectRetryInterval")
    """
    The number of seconds
    between connect retries.
    """
    dump_file_path: Optional[str] = pulumi.output_property("dumpFilePath")
    """
    Path to a SQL file in GCS from which slave
    instances are created. Format is `gs://bucket/filename`.
    """
    failover_target: Optional[bool] = pulumi.output_property("failoverTarget")
    """
    Specifies if the replica is the failover target.
    If the field is set to true the replica will be designated as a failover replica.
    If the master instance fails, the replica instance will be promoted as
    the new master instance.
    """
    master_heartbeat_period: Optional[float] = pulumi.output_property("masterHeartbeatPeriod")
    """
    Time in ms between replication
    heartbeats.
    """
    password: Optional[str] = pulumi.output_property("password")
    """
    Password for the replication connection.
    """
    ssl_cipher: Optional[str] = pulumi.output_property("sslCipher")
    username: Optional[str] = pulumi.output_property("username")
    """
    Username for replication connection.
    """
    verify_server_certificate: Optional[bool] = pulumi.output_property("verifyServerCertificate")
    """
    True if the master's common name
    value is checked during the SSL handshake.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseInstanceServerCaCert(dict):
    cert: Optional[str] = pulumi.output_property("cert")
    common_name: Optional[str] = pulumi.output_property("commonName")
    create_time: Optional[str] = pulumi.output_property("createTime")
    expiration_time: Optional[str] = pulumi.output_property("expirationTime")
    """
    The [RFC 3339](https://tools.ietf.org/html/rfc3339)
    formatted date time string indicating when this whitelist expires.
    """
    sha1_fingerprint: Optional[str] = pulumi.output_property("sha1Fingerprint")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseInstanceSettings(dict):
    activation_policy: Optional[str] = pulumi.output_property("activationPolicy")
    """
    This specifies when the instance should be
    active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
    """
    authorized_gae_applications: Optional[List[str]] = pulumi.output_property("authorizedGaeApplications")
    """
    This property is only applicable to First Generation instances.
    First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
    for information on how to upgrade to Second Generation instances.
    A list of Google App Engine (GAE) project names that are allowed to access this instance.
    """
    availability_type: Optional[str] = pulumi.output_property("availabilityType")
    """
    The availability type of the Cloud SQL
    instance, high availability (`REGIONAL`) or single zone (`ZONAL`).' For MySQL
    instances, ensure that `settings.backup_configuration.enabled` and
    `settings.backup_configuration.binary_log_enabled` are both set to `true`.
    """
    backup_configuration: Optional['outputs.DatabaseInstanceSettingsBackupConfiguration'] = pulumi.output_property("backupConfiguration")
    crash_safe_replication: Optional[bool] = pulumi.output_property("crashSafeReplication")
    """
    This property is only applicable to First Generation instances.
    First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
    for information on how to upgrade to Second Generation instances.
    Specific to read instances, indicates
    when crash-safe replication flags are enabled.
    """
    database_flags: Optional[List['outputs.DatabaseInstanceSettingsDatabaseFlag']] = pulumi.output_property("databaseFlags")
    disk_autoresize: Optional[bool] = pulumi.output_property("diskAutoresize")
    """
    Configuration to increase storage size automatically.  Note that future `pulumi apply` calls will attempt to resize the disk to the value specified in `disk_size` - if this is set, do not set `disk_size`.
    """
    disk_size: Optional[float] = pulumi.output_property("diskSize")
    """
    The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.
    """
    disk_type: Optional[str] = pulumi.output_property("diskType")
    """
    The type of data disk: PD_SSD or PD_HDD.
    """
    ip_configuration: Optional['outputs.DatabaseInstanceSettingsIpConfiguration'] = pulumi.output_property("ipConfiguration")
    location_preference: Optional['outputs.DatabaseInstanceSettingsLocationPreference'] = pulumi.output_property("locationPreference")
    maintenance_window: Optional['outputs.DatabaseInstanceSettingsMaintenanceWindow'] = pulumi.output_property("maintenanceWindow")
    pricing_plan: Optional[str] = pulumi.output_property("pricingPlan")
    """
    Pricing plan for this instance, can only be `PER_USE`.
    """
    replication_type: Optional[str] = pulumi.output_property("replicationType")
    """
    This property is only applicable to First Generation instances.
    First Generation instances are now deprecated, see [here](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
    for information on how to upgrade to Second Generation instances.
    Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.
    """
    tier: str = pulumi.output_property("tier")
    """
    The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
    for more details and supported versions. Postgres supports only shared-core machine types such as `db-f1-micro`,
    and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
    """
    user_labels: Optional[Dict[str, str]] = pulumi.output_property("userLabels")
    """
    A set of key/value user label pairs to assign to the instance.
    """
    version: Optional[float] = pulumi.output_property("version")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseInstanceSettingsBackupConfiguration(dict):
    binary_log_enabled: Optional[bool] = pulumi.output_property("binaryLogEnabled")
    """
    True if binary logging is enabled. If
    `settings.backup_configuration.enabled` is false, this must be as well.
    Cannot be used with Postgres.
    """
    enabled: Optional[bool] = pulumi.output_property("enabled")
    """
    True if backup configuration is enabled.
    """
    location: Optional[str] = pulumi.output_property("location")
    start_time: Optional[str] = pulumi.output_property("startTime")
    """
    `HH:MM` format time indicating when backup
    configuration starts.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseInstanceSettingsDatabaseFlag(dict):
    name: str = pulumi.output_property("name")
    """
    A name for this whitelist entry.
    """
    value: str = pulumi.output_property("value")
    """
    A CIDR notation IPv4 or IPv6 address that is allowed to
    access this instance. Must be set even if other two attributes are not for
    the whitelist to become active.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseInstanceSettingsIpConfiguration(dict):
    authorized_networks: Optional[List['outputs.DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork']] = pulumi.output_property("authorizedNetworks")
    ipv4_enabled: Optional[bool] = pulumi.output_property("ipv4Enabled")
    """
    Whether this Cloud SQL instance should be assigned
    a public IPV4 address. Either `ipv4_enabled` must be enabled or a
    `private_network` must be configured.
    """
    private_network: Optional[str] = pulumi.output_property("privateNetwork")
    """
    The VPC network from which the Cloud SQL
    instance is accessible for private IP. For example,Â projects/myProject/global/networks/default.
    Specifying a network enables private IP.
    Either `ipv4_enabled` must be enabled or a `private_network` must be configured.
    This setting can be updated, but it cannot be removed after it is set.
    """
    require_ssl: Optional[bool] = pulumi.output_property("requireSsl")
    """
    True if mysqld should default to `REQUIRE X509`
    for users connecting over IP.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseInstanceSettingsIpConfigurationAuthorizedNetwork(dict):
    expiration_time: Optional[str] = pulumi.output_property("expirationTime")
    """
    The [RFC 3339](https://tools.ietf.org/html/rfc3339)
    formatted date time string indicating when this whitelist expires.
    """
    name: Optional[str] = pulumi.output_property("name")
    """
    A name for this whitelist entry.
    """
    value: str = pulumi.output_property("value")
    """
    A CIDR notation IPv4 or IPv6 address that is allowed to
    access this instance. Must be set even if other two attributes are not for
    the whitelist to become active.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseInstanceSettingsLocationPreference(dict):
    follow_gae_application: Optional[str] = pulumi.output_property("followGaeApplication")
    """
    A GAE application whose zone to remain
    in. Must be in the same region as this instance.
    """
    zone: Optional[str] = pulumi.output_property("zone")
    """
    The preferred compute engine
    [zone](https://cloud.google.com/compute/docs/zones?hl=en).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DatabaseInstanceSettingsMaintenanceWindow(dict):
    day: Optional[float] = pulumi.output_property("day")
    """
    Day of week (`1-7`), starting on Monday
    """
    hour: Optional[float] = pulumi.output_property("hour")
    """
    Hour of day (`0-23`), ignored if `day` not set
    """
    update_track: Optional[str] = pulumi.output_property("updateTrack")
    """
    Receive updates earlier (`canary`) or later
    (`stable`)
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetCaCertsCert(dict):
    cert: str = pulumi.output_property("cert")
    """
    The CA certificate used to connect to the SQL instance via SSL.
    """
    common_name: str = pulumi.output_property("commonName")
    """
    The CN valid for the CA cert.
    """
    create_time: str = pulumi.output_property("createTime")
    """
    Creation time of the CA cert.
    """
    expiration_time: str = pulumi.output_property("expirationTime")
    """
    Expiration time of the CA cert.
    """
    sha1_fingerprint: str = pulumi.output_property("sha1Fingerprint")
    """
    SHA1 fingerprint of the CA cert.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


