# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'EntryBigqueryDateShardedSpec',
    'EntryBigqueryTableSpec',
    'EntryBigqueryTableSpecTableSpec',
    'EntryBigqueryTableSpecViewSpec',
    'EntryGcsFilesetSpec',
    'EntryGcsFilesetSpecSampleGcsFileSpec',
    'EntryGroupIamBindingCondition',
    'EntryGroupIamMemberCondition',
    'TagField',
    'TagTemplateField',
    'TagTemplateFieldType',
    'TagTemplateFieldTypeEnumType',
    'TagTemplateFieldTypeEnumTypeAllowedValue',
]

@pulumi.output_type
class EntryBigqueryDateShardedSpec(dict):
    dataset: Optional[str] = pulumi.output_property("dataset")
    shard_count: Optional[float] = pulumi.output_property("shardCount")
    table_prefix: Optional[str] = pulumi.output_property("tablePrefix")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EntryBigqueryTableSpec(dict):
    table_source_type: Optional[str] = pulumi.output_property("tableSourceType")
    table_spec: Optional['outputs.EntryBigqueryTableSpecTableSpec'] = pulumi.output_property("tableSpec")
    view_spec: Optional['outputs.EntryBigqueryTableSpecViewSpec'] = pulumi.output_property("viewSpec")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EntryBigqueryTableSpecTableSpec(dict):
    grouped_entry: Optional[str] = pulumi.output_property("groupedEntry")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EntryBigqueryTableSpecViewSpec(dict):
    view_query: Optional[str] = pulumi.output_property("viewQuery")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EntryGcsFilesetSpec(dict):
    file_patterns: List[str] = pulumi.output_property("filePatterns")
    """
    Patterns to identify a set of files in Google Cloud Storage.
    See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
    for more information. Note that bucket wildcards are currently not supported. Examples of valid filePatterns:
    * gs://bucket_name/dir/*: matches all files within bucket_name/dir directory.
    * gs://bucket_name/dir/**: matches all files in bucket_name/dir spanning all subdirectories.
    * gs://bucket_name/file*: matches files prefixed by file in bucket_name
    * gs://bucket_name/??.txt: matches files with two characters followed by .txt in bucket_name
    * gs://bucket_name/[aeiou].txt: matches files that contain a single vowel character followed by .txt in bucket_name
    * gs://bucket_name/[a-m].txt: matches files that contain a, b, ... or m followed by .txt in bucket_name
    * gs://bucket_name/a/*/b: matches all files in bucket_name that match a/*/b pattern, such as a/c/b, a/d/b
    * gs://another_bucket/a.txt: matches gs://another_bucket/a.txt
    """
    sample_gcs_file_specs: Optional[List['outputs.EntryGcsFilesetSpecSampleGcsFileSpec']] = pulumi.output_property("sampleGcsFileSpecs")
    """
    -
    Sample files contained in this fileset, not all files contained in this fileset are represented here.  Structure is documented below.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EntryGcsFilesetSpecSampleGcsFileSpec(dict):
    file_path: Optional[str] = pulumi.output_property("filePath")
    """
    -
    The full file path
    """
    size_bytes: Optional[float] = pulumi.output_property("sizeBytes")
    """
    -
    The size of the file, in bytes.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EntryGroupIamBindingCondition(dict):
    description: Optional[str] = pulumi.output_property("description")
    expression: str = pulumi.output_property("expression")
    title: str = pulumi.output_property("title")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EntryGroupIamMemberCondition(dict):
    description: Optional[str] = pulumi.output_property("description")
    expression: str = pulumi.output_property("expression")
    title: str = pulumi.output_property("title")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TagField(dict):
    bool_value: Optional[bool] = pulumi.output_property("boolValue")
    """
    Holds the value for a tag field with boolean type.
    """
    display_name: Optional[str] = pulumi.output_property("displayName")
    """
    -
    The display name of this field
    """
    double_value: Optional[float] = pulumi.output_property("doubleValue")
    """
    Holds the value for a tag field with double type.
    """
    enum_value: Optional[str] = pulumi.output_property("enumValue")
    """
    Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.  Structure is documented below.
    """
    field_name: str = pulumi.output_property("fieldName")
    """
    The identifier for this object. Format specified above.
    """
    order: Optional[float] = pulumi.output_property("order")
    """
    -
    The order of this field with respect to other fields in this tag. For example, a higher value can indicate
    a more important field. The value can be negative. Multiple fields can have the same order, and field orders
    within a tag do not have to be sequential.
    """
    string_value: Optional[str] = pulumi.output_property("stringValue")
    """
    Holds the value for a tag field with string type.
    """
    timestamp_value: Optional[str] = pulumi.output_property("timestampValue")
    """
    Holds the value for a tag field with timestamp type.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TagTemplateField(dict):
    display_name: Optional[str] = pulumi.output_property("displayName")
    """
    The display name for this template.
    """
    field_id: str = pulumi.output_property("fieldId")
    """
    The identifier for this object. Format specified above.
    """
    is_required: Optional[bool] = pulumi.output_property("isRequired")
    """
    Whether this is a required field. Defaults to false.
    """
    name: Optional[str] = pulumi.output_property("name")
    """
    -
    The resource name of the tag template field in URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}
    """
    order: Optional[float] = pulumi.output_property("order")
    """
    The order of this field with respect to other fields in this tag template.
    A higher value indicates a more important field. The value can be negative.
    Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
    """
    type: 'outputs.TagTemplateFieldType' = pulumi.output_property("type")
    """
    The type of value this tag field can contain.  Structure is documented below.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TagTemplateFieldType(dict):
    enum_type: Optional['outputs.TagTemplateFieldTypeEnumType'] = pulumi.output_property("enumType")
    """
    Represents an enum type.
    Exactly one of `primitive_type` or `enum_type` must be set  Structure is documented below.
    """
    primitive_type: Optional[str] = pulumi.output_property("primitiveType")
    """
    Represents primitive types - string, bool etc.
    Exactly one of `primitive_type` or `enum_type` must be set
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TagTemplateFieldTypeEnumType(dict):
    allowed_values: List['outputs.TagTemplateFieldTypeEnumTypeAllowedValue'] = pulumi.output_property("allowedValues")
    """
    The set of allowed values for this enum. The display names of the
    values must be case-insensitively unique within this set. Currently,
    enum values can only be added to the list of allowed values. Deletion
    and renaming of enum values are not supported.
    Can have up to 500 allowed values.  Structure is documented below.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TagTemplateFieldTypeEnumTypeAllowedValue(dict):
    display_name: str = pulumi.output_property("displayName")
    """
    The display name for this template.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


