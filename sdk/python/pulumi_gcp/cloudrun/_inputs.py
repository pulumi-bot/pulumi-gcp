# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables
from ._inputs import *
from . import outputs

@pulumi.input_type
class DomainMappingMetadataArgs:
    namespace: pulumi.Input[str] = pulumi.input_property("namespace")
    """
    In Cloud Run the namespace must be equal to either the
    project ID or project number.
    """
    annotations: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("annotations")
    """
    Annotations is a key value map stored with a resource that
    may be set by external tools to store and retrieve arbitrary metadata. More
    info: http://kubernetes.io/docs/user-guide/annotations
    """
    generation: Optional[pulumi.Input[float]] = pulumi.input_property("generation")
    """
    -
    A sequence number representing a specific generation of the desired state.
    """
    labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("labels")
    """
    Map of string keys and values that can be used to organize and categorize
    (scope and select) objects. May match selectors of replication controllers
    and routes.
    More info: http://kubernetes.io/docs/user-guide/labels
    """
    resource_version: Optional[pulumi.Input[str]] = pulumi.input_property("resourceVersion")
    """
    -
    An opaque value that represents the internal version of this object that
    can be used by clients to determine when objects have changed. May be used
    for optimistic concurrency, change detection, and the watch operation on a
    resource or set of resources. They may only be valid for a
    particular resource or set of resources.
    More info:
    https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    """
    self_link: Optional[pulumi.Input[str]] = pulumi.input_property("selfLink")
    """
    -
    SelfLink is a URL representing this object.
    """
    uid: Optional[pulumi.Input[str]] = pulumi.input_property("uid")
    """
    -
    UID is a unique id generated by the server on successful creation of a resource and is not
    allowed to change on PUT operations.
    More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, namespace: pulumi.Input[str], annotations: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, generation: Optional[pulumi.Input[float]] = None, labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, resource_version: Optional[pulumi.Input[str]] = None, self_link: Optional[pulumi.Input[str]] = None, uid: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] namespace: In Cloud Run the namespace must be equal to either the
               project ID or project number.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] annotations: Annotations is a key value map stored with a resource that
               may be set by external tools to store and retrieve arbitrary metadata. More
               info: http://kubernetes.io/docs/user-guide/annotations
        :param pulumi.Input[float] generation: -
               A sequence number representing a specific generation of the desired state.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] labels: Map of string keys and values that can be used to organize and categorize
               (scope and select) objects. May match selectors of replication controllers
               and routes.
               More info: http://kubernetes.io/docs/user-guide/labels
        :param pulumi.Input[str] resource_version: -
               An opaque value that represents the internal version of this object that
               can be used by clients to determine when objects have changed. May be used
               for optimistic concurrency, change detection, and the watch operation on a
               resource or set of resources. They may only be valid for a
               particular resource or set of resources.
               More info:
               https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
        :param pulumi.Input[str] self_link: -
               SelfLink is a URL representing this object.
        :param pulumi.Input[str] uid: -
               UID is a unique id generated by the server on successful creation of a resource and is not
               allowed to change on PUT operations.
               More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        """
        __self__.namespace = namespace
        __self__.annotations = annotations
        __self__.generation = generation
        __self__.labels = labels
        __self__.resource_version = resource_version
        __self__.self_link = self_link
        __self__.uid = uid

@pulumi.input_type
class DomainMappingSpecArgs:
    route_name: pulumi.Input[str] = pulumi.input_property("routeName")
    """
    The name of the Cloud Run Service that this DomainMapping applies to.
    The route must exist.
    """
    certificate_mode: Optional[pulumi.Input[str]] = pulumi.input_property("certificateMode")
    """
    The mode of the certificate.
    """
    force_override: Optional[pulumi.Input[bool]] = pulumi.input_property("forceOverride")
    """
    If set, the mapping will override any mapping set before this spec was set.
    It is recommended that the user leaves this empty to receive an error
    warning about a potential conflict and only set it once the respective UI
    has given such a warning.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, route_name: pulumi.Input[str], certificate_mode: Optional[pulumi.Input[str]] = None, force_override: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] route_name: The name of the Cloud Run Service that this DomainMapping applies to.
               The route must exist.
        :param pulumi.Input[str] certificate_mode: The mode of the certificate.
        :param pulumi.Input[bool] force_override: If set, the mapping will override any mapping set before this spec was set.
               It is recommended that the user leaves this empty to receive an error
               warning about a potential conflict and only set it once the respective UI
               has given such a warning.
        """
        __self__.route_name = route_name
        __self__.certificate_mode = certificate_mode
        __self__.force_override = force_override

@pulumi.input_type
class DomainMappingStatusArgs:
    conditions: Optional[pulumi.Input[List[pulumi.Input['DomainMappingStatusConditionArgs']]]] = pulumi.input_property("conditions")
    mapped_route_name: Optional[pulumi.Input[str]] = pulumi.input_property("mappedRouteName")
    observed_generation: Optional[pulumi.Input[float]] = pulumi.input_property("observedGeneration")
    resource_records: Optional[pulumi.Input[List[pulumi.Input['DomainMappingStatusResourceRecordArgs']]]] = pulumi.input_property("resourceRecords")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, conditions: Optional[pulumi.Input[List[pulumi.Input['DomainMappingStatusConditionArgs']]]] = None, mapped_route_name: Optional[pulumi.Input[str]] = None, observed_generation: Optional[pulumi.Input[float]] = None, resource_records: Optional[pulumi.Input[List[pulumi.Input['DomainMappingStatusResourceRecordArgs']]]] = None) -> None:
        __self__.conditions = conditions
        __self__.mapped_route_name = mapped_route_name
        __self__.observed_generation = observed_generation
        __self__.resource_records = resource_records

@pulumi.input_type
class DomainMappingStatusConditionArgs:
    message: Optional[pulumi.Input[str]] = pulumi.input_property("message")
    reason: Optional[pulumi.Input[str]] = pulumi.input_property("reason")
    status: Optional[pulumi.Input[str]] = pulumi.input_property("status")
    type: Optional[pulumi.Input[str]] = pulumi.input_property("type")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, message: Optional[pulumi.Input[str]] = None, reason: Optional[pulumi.Input[str]] = None, status: Optional[pulumi.Input[str]] = None, type: Optional[pulumi.Input[str]] = None) -> None:
        __self__.message = message
        __self__.reason = reason
        __self__.status = status
        __self__.type = type

@pulumi.input_type
class DomainMappingStatusResourceRecordArgs:
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Name should be a verified domain
    """
    rrdata: Optional[pulumi.Input[str]] = pulumi.input_property("rrdata")
    type: Optional[pulumi.Input[str]] = pulumi.input_property("type")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: Optional[pulumi.Input[str]] = None, rrdata: Optional[pulumi.Input[str]] = None, type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Name should be a verified domain
        """
        __self__.name = name
        __self__.rrdata = rrdata
        __self__.type = type

@pulumi.input_type
class IamBindingConditionArgs:
    expression: pulumi.Input[str] = pulumi.input_property("expression")
    title: pulumi.Input[str] = pulumi.input_property("title")
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, expression: pulumi.Input[str], title: pulumi.Input[str], description: Optional[pulumi.Input[str]] = None) -> None:
        __self__.expression = expression
        __self__.title = title
        __self__.description = description

@pulumi.input_type
class IamMemberConditionArgs:
    expression: pulumi.Input[str] = pulumi.input_property("expression")
    title: pulumi.Input[str] = pulumi.input_property("title")
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, expression: pulumi.Input[str], title: pulumi.Input[str], description: Optional[pulumi.Input[str]] = None) -> None:
        __self__.expression = expression
        __self__.title = title
        __self__.description = description

@pulumi.input_type
class ServiceMetadataArgs:
    annotations: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("annotations")
    """
    Annotations is a key value map stored with a resource that
    may be set by external tools to store and retrieve arbitrary metadata. More
    info: http://kubernetes.io/docs/user-guide/annotations
    """
    generation: Optional[pulumi.Input[float]] = pulumi.input_property("generation")
    """
    -
    A sequence number representing a specific generation of the desired state.
    """
    labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("labels")
    """
    Map of string keys and values that can be used to organize and categorize
    (scope and select) objects. May match selectors of replication controllers
    and routes.
    More info: http://kubernetes.io/docs/user-guide/labels
    """
    namespace: Optional[pulumi.Input[str]] = pulumi.input_property("namespace")
    """
    In Cloud Run the namespace must be equal to either the
    project ID or project number.
    """
    resource_version: Optional[pulumi.Input[str]] = pulumi.input_property("resourceVersion")
    """
    -
    An opaque value that represents the internal version of this object that
    can be used by clients to determine when objects have changed. May be used
    for optimistic concurrency, change detection, and the watch operation on a
    resource or set of resources. They may only be valid for a
    particular resource or set of resources.
    More info:
    https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    """
    self_link: Optional[pulumi.Input[str]] = pulumi.input_property("selfLink")
    """
    -
    SelfLink is a URL representing this object.
    """
    uid: Optional[pulumi.Input[str]] = pulumi.input_property("uid")
    """
    -
    UID is a unique id generated by the server on successful creation of a resource and is not
    allowed to change on PUT operations.
    More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, annotations: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, generation: Optional[pulumi.Input[float]] = None, labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, namespace: Optional[pulumi.Input[str]] = None, resource_version: Optional[pulumi.Input[str]] = None, self_link: Optional[pulumi.Input[str]] = None, uid: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] annotations: Annotations is a key value map stored with a resource that
               may be set by external tools to store and retrieve arbitrary metadata. More
               info: http://kubernetes.io/docs/user-guide/annotations
        :param pulumi.Input[float] generation: -
               A sequence number representing a specific generation of the desired state.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] labels: Map of string keys and values that can be used to organize and categorize
               (scope and select) objects. May match selectors of replication controllers
               and routes.
               More info: http://kubernetes.io/docs/user-guide/labels
        :param pulumi.Input[str] namespace: In Cloud Run the namespace must be equal to either the
               project ID or project number.
        :param pulumi.Input[str] resource_version: -
               An opaque value that represents the internal version of this object that
               can be used by clients to determine when objects have changed. May be used
               for optimistic concurrency, change detection, and the watch operation on a
               resource or set of resources. They may only be valid for a
               particular resource or set of resources.
               More info:
               https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
        :param pulumi.Input[str] self_link: -
               SelfLink is a URL representing this object.
        :param pulumi.Input[str] uid: -
               UID is a unique id generated by the server on successful creation of a resource and is not
               allowed to change on PUT operations.
               More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        """
        __self__.annotations = annotations
        __self__.generation = generation
        __self__.labels = labels
        __self__.namespace = namespace
        __self__.resource_version = resource_version
        __self__.self_link = self_link
        __self__.uid = uid

@pulumi.input_type
class ServiceStatusArgs:
    conditions: Optional[pulumi.Input[List[pulumi.Input['ServiceStatusConditionArgs']]]] = pulumi.input_property("conditions")
    latest_created_revision_name: Optional[pulumi.Input[str]] = pulumi.input_property("latestCreatedRevisionName")
    latest_ready_revision_name: Optional[pulumi.Input[str]] = pulumi.input_property("latestReadyRevisionName")
    observed_generation: Optional[pulumi.Input[float]] = pulumi.input_property("observedGeneration")
    url: Optional[pulumi.Input[str]] = pulumi.input_property("url")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, conditions: Optional[pulumi.Input[List[pulumi.Input['ServiceStatusConditionArgs']]]] = None, latest_created_revision_name: Optional[pulumi.Input[str]] = None, latest_ready_revision_name: Optional[pulumi.Input[str]] = None, observed_generation: Optional[pulumi.Input[float]] = None, url: Optional[pulumi.Input[str]] = None) -> None:
        __self__.conditions = conditions
        __self__.latest_created_revision_name = latest_created_revision_name
        __self__.latest_ready_revision_name = latest_ready_revision_name
        __self__.observed_generation = observed_generation
        __self__.url = url

@pulumi.input_type
class ServiceStatusConditionArgs:
    message: Optional[pulumi.Input[str]] = pulumi.input_property("message")
    reason: Optional[pulumi.Input[str]] = pulumi.input_property("reason")
    status: Optional[pulumi.Input[str]] = pulumi.input_property("status")
    type: Optional[pulumi.Input[str]] = pulumi.input_property("type")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, message: Optional[pulumi.Input[str]] = None, reason: Optional[pulumi.Input[str]] = None, status: Optional[pulumi.Input[str]] = None, type: Optional[pulumi.Input[str]] = None) -> None:
        __self__.message = message
        __self__.reason = reason
        __self__.status = status
        __self__.type = type

@pulumi.input_type
class ServiceTemplateArgs:
    metadata: Optional[pulumi.Input['ServiceTemplateMetadataArgs']] = pulumi.input_property("metadata")
    """
    Metadata associated with this Service, including name, namespace, labels,
    and annotations.  Structure is documented below.
    """
    spec: Optional[pulumi.Input['ServiceTemplateSpecArgs']] = pulumi.input_property("spec")
    """
    RevisionSpec holds the desired state of the Revision (from the client).  Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, metadata: Optional[pulumi.Input['ServiceTemplateMetadataArgs']] = None, spec: Optional[pulumi.Input['ServiceTemplateSpecArgs']] = None) -> None:
        """
        :param pulumi.Input['ServiceTemplateMetadataArgs'] metadata: Metadata associated with this Service, including name, namespace, labels,
               and annotations.  Structure is documented below.
        :param pulumi.Input['ServiceTemplateSpecArgs'] spec: RevisionSpec holds the desired state of the Revision (from the client).  Structure is documented below.
        """
        __self__.metadata = metadata
        __self__.spec = spec

@pulumi.input_type
class ServiceTemplateMetadataArgs:
    annotations: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("annotations")
    """
    Annotations is a key value map stored with a resource that
    may be set by external tools to store and retrieve arbitrary metadata. More
    info: http://kubernetes.io/docs/user-guide/annotations
    """
    generation: Optional[pulumi.Input[float]] = pulumi.input_property("generation")
    """
    -
    A sequence number representing a specific generation of the desired state.
    """
    labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("labels")
    """
    Map of string keys and values that can be used to organize and categorize
    (scope and select) objects. May match selectors of replication controllers
    and routes.
    More info: http://kubernetes.io/docs/user-guide/labels
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Name of the environment variable.
    """
    namespace: Optional[pulumi.Input[str]] = pulumi.input_property("namespace")
    """
    In Cloud Run the namespace must be equal to either the
    project ID or project number.
    """
    resource_version: Optional[pulumi.Input[str]] = pulumi.input_property("resourceVersion")
    """
    -
    An opaque value that represents the internal version of this object that
    can be used by clients to determine when objects have changed. May be used
    for optimistic concurrency, change detection, and the watch operation on a
    resource or set of resources. They may only be valid for a
    particular resource or set of resources.
    More info:
    https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    """
    self_link: Optional[pulumi.Input[str]] = pulumi.input_property("selfLink")
    """
    -
    SelfLink is a URL representing this object.
    """
    uid: Optional[pulumi.Input[str]] = pulumi.input_property("uid")
    """
    -
    UID is a unique id generated by the server on successful creation of a resource and is not
    allowed to change on PUT operations.
    More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, annotations: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, generation: Optional[pulumi.Input[float]] = None, labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, name: Optional[pulumi.Input[str]] = None, namespace: Optional[pulumi.Input[str]] = None, resource_version: Optional[pulumi.Input[str]] = None, self_link: Optional[pulumi.Input[str]] = None, uid: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] annotations: Annotations is a key value map stored with a resource that
               may be set by external tools to store and retrieve arbitrary metadata. More
               info: http://kubernetes.io/docs/user-guide/annotations
        :param pulumi.Input[float] generation: -
               A sequence number representing a specific generation of the desired state.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] labels: Map of string keys and values that can be used to organize and categorize
               (scope and select) objects. May match selectors of replication controllers
               and routes.
               More info: http://kubernetes.io/docs/user-guide/labels
        :param pulumi.Input[str] name: Name of the environment variable.
        :param pulumi.Input[str] namespace: In Cloud Run the namespace must be equal to either the
               project ID or project number.
        :param pulumi.Input[str] resource_version: -
               An opaque value that represents the internal version of this object that
               can be used by clients to determine when objects have changed. May be used
               for optimistic concurrency, change detection, and the watch operation on a
               resource or set of resources. They may only be valid for a
               particular resource or set of resources.
               More info:
               https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
        :param pulumi.Input[str] self_link: -
               SelfLink is a URL representing this object.
        :param pulumi.Input[str] uid: -
               UID is a unique id generated by the server on successful creation of a resource and is not
               allowed to change on PUT operations.
               More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        """
        __self__.annotations = annotations
        __self__.generation = generation
        __self__.labels = labels
        __self__.name = name
        __self__.namespace = namespace
        __self__.resource_version = resource_version
        __self__.self_link = self_link
        __self__.uid = uid

@pulumi.input_type
class ServiceTemplateSpecArgs:
    container_concurrency: Optional[pulumi.Input[float]] = pulumi.input_property("containerConcurrency")
    """
    ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
    requests per container of the Revision. Values are:
    - `0` thread-safe, the system should manage the max concurrency. This is
    the default value.
    - `1` not-thread-safe. Single concurrency
    - `2-N` thread-safe, max concurrency of N
    """
    containers: Optional[pulumi.Input[List[pulumi.Input['ServiceTemplateSpecContainerArgs']]]] = pulumi.input_property("containers")
    """
    Container defines the unit of execution for this Revision.
    In the context of a Revision, we disallow a number of the fields of
    this Container, including: name, ports, and volumeMounts.
    The runtime contract is documented here:
    https://github.com/knative/serving/blob/master/docs/runtime-contract.md  Structure is documented below.
    """
    service_account_name: Optional[pulumi.Input[str]] = pulumi.input_property("serviceAccountName")
    """
    Email address of the IAM service account associated with the revision of the
    service. The service account represents the identity of the running revision,
    and determines what permissions the revision has. If not provided, the revision
    will use the project's default service account.
    """
    serving_state: Optional[pulumi.Input[str]] = pulumi.input_property("servingState")
    """
    -
    ServingState holds a value describing the state the resources
    are in for this Revision.
    It is expected
    that the system will manipulate this based on routability and load.
    """
    timeout_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("timeoutSeconds")
    """
    TimeoutSeconds holds the max duration the instance is allowed for responding to a request.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, container_concurrency: Optional[pulumi.Input[float]] = None, containers: Optional[pulumi.Input[List[pulumi.Input['ServiceTemplateSpecContainerArgs']]]] = None, service_account_name: Optional[pulumi.Input[str]] = None, serving_state: Optional[pulumi.Input[str]] = None, timeout_seconds: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] container_concurrency: ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
               requests per container of the Revision. Values are:
               - `0` thread-safe, the system should manage the max concurrency. This is
               the default value.
               - `1` not-thread-safe. Single concurrency
               - `2-N` thread-safe, max concurrency of N
        :param pulumi.Input[List[pulumi.Input['ServiceTemplateSpecContainerArgs']]] containers: Container defines the unit of execution for this Revision.
               In the context of a Revision, we disallow a number of the fields of
               this Container, including: name, ports, and volumeMounts.
               The runtime contract is documented here:
               https://github.com/knative/serving/blob/master/docs/runtime-contract.md  Structure is documented below.
        :param pulumi.Input[str] service_account_name: Email address of the IAM service account associated with the revision of the
               service. The service account represents the identity of the running revision,
               and determines what permissions the revision has. If not provided, the revision
               will use the project's default service account.
        :param pulumi.Input[str] serving_state: -
               ServingState holds a value describing the state the resources
               are in for this Revision.
               It is expected
               that the system will manipulate this based on routability and load.
        :param pulumi.Input[float] timeout_seconds: TimeoutSeconds holds the max duration the instance is allowed for responding to a request.
        """
        __self__.container_concurrency = container_concurrency
        __self__.containers = containers
        __self__.service_account_name = service_account_name
        if serving_state is not None:
            warnings.warn("Not supported by Cloud Run fully managed", DeprecationWarning)
            pulumi.log.warn("serving_state is deprecated: Not supported by Cloud Run fully managed")
        __self__.serving_state = serving_state
        __self__.timeout_seconds = timeout_seconds

@pulumi.input_type
class ServiceTemplateSpecContainerArgs:
    image: pulumi.Input[str] = pulumi.input_property("image")
    """
    Docker image name. This is most often a reference to a container located
    in the container registry, such as gcr.io/cloudrun/hello
    More info: https://kubernetes.io/docs/concepts/containers/images
    """
    args: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("args")
    """
    Arguments to the entrypoint.
    The docker image's CMD is used if this is not provided.
    Variable references $(VAR_NAME) are expanded using the container's
    environment. If a variable cannot be resolved, the reference in the input
    string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
    double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
    regardless of whether the variable exists or not.
    More info:
    https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    """
    commands: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("commands")
    """
    Entrypoint array. Not executed within a shell.
    The docker image's ENTRYPOINT is used if this is not provided.
    Variable references $(VAR_NAME) are expanded using the container's
    environment. If a variable cannot be resolved, the reference in the input
    string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
    double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
    regardless of whether the variable exists or not.
    More info:
    https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    """
    env_froms: Optional[pulumi.Input[List[pulumi.Input['ServiceTemplateSpecContainerEnvFromArgs']]]] = pulumi.input_property("envFroms")
    """
    -
    (Optional, Deprecated)
    List of sources to populate environment variables in the container.
    All invalid keys will be reported as an event when the container is starting.
    When a key exists in multiple sources, the value associated with the last source will
    take precedence. Values defined by an Env with a duplicate key will take
    precedence.  Structure is documented below.
    """
    envs: Optional[pulumi.Input[List[pulumi.Input['ServiceTemplateSpecContainerEnvArgs']]]] = pulumi.input_property("envs")
    """
    List of environment variables to set in the container.  Structure is documented below.
    """
    resources: Optional[pulumi.Input['ServiceTemplateSpecContainerResourcesArgs']] = pulumi.input_property("resources")
    """
    Compute Resources required by this container. Used to set values such as max memory
    More info:
    https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources  Structure is documented below.
    """
    working_dir: Optional[pulumi.Input[str]] = pulumi.input_property("workingDir")
    """
    -
    (Optional, Deprecated)
    Container's working directory.
    If not specified, the container runtime's default will be used, which
    might be configured in the container image.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, image: pulumi.Input[str], args: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, commands: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, env_froms: Optional[pulumi.Input[List[pulumi.Input['ServiceTemplateSpecContainerEnvFromArgs']]]] = None, envs: Optional[pulumi.Input[List[pulumi.Input['ServiceTemplateSpecContainerEnvArgs']]]] = None, resources: Optional[pulumi.Input['ServiceTemplateSpecContainerResourcesArgs']] = None, working_dir: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] image: Docker image name. This is most often a reference to a container located
               in the container registry, such as gcr.io/cloudrun/hello
               More info: https://kubernetes.io/docs/concepts/containers/images
        :param pulumi.Input[List[pulumi.Input[str]]] args: Arguments to the entrypoint.
               The docker image's CMD is used if this is not provided.
               Variable references $(VAR_NAME) are expanded using the container's
               environment. If a variable cannot be resolved, the reference in the input
               string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
               double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
               regardless of whether the variable exists or not.
               More info:
               https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
        :param pulumi.Input[List[pulumi.Input[str]]] commands: Entrypoint array. Not executed within a shell.
               The docker image's ENTRYPOINT is used if this is not provided.
               Variable references $(VAR_NAME) are expanded using the container's
               environment. If a variable cannot be resolved, the reference in the input
               string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
               double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
               regardless of whether the variable exists or not.
               More info:
               https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
        :param pulumi.Input[List[pulumi.Input['ServiceTemplateSpecContainerEnvFromArgs']]] env_froms: -
               (Optional, Deprecated)
               List of sources to populate environment variables in the container.
               All invalid keys will be reported as an event when the container is starting.
               When a key exists in multiple sources, the value associated with the last source will
               take precedence. Values defined by an Env with a duplicate key will take
               precedence.  Structure is documented below.
        :param pulumi.Input[List[pulumi.Input['ServiceTemplateSpecContainerEnvArgs']]] envs: List of environment variables to set in the container.  Structure is documented below.
        :param pulumi.Input['ServiceTemplateSpecContainerResourcesArgs'] resources: Compute Resources required by this container. Used to set values such as max memory
               More info:
               https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources  Structure is documented below.
        :param pulumi.Input[str] working_dir: -
               (Optional, Deprecated)
               Container's working directory.
               If not specified, the container runtime's default will be used, which
               might be configured in the container image.
        """
        __self__.image = image
        __self__.args = args
        __self__.commands = commands
        if env_froms is not None:
            warnings.warn("Not supported by Cloud Run fully managed", DeprecationWarning)
            pulumi.log.warn("env_froms is deprecated: Not supported by Cloud Run fully managed")
        __self__.env_froms = env_froms
        __self__.envs = envs
        __self__.resources = resources
        if working_dir is not None:
            warnings.warn("Not supported by Cloud Run fully managed", DeprecationWarning)
            pulumi.log.warn("working_dir is deprecated: Not supported by Cloud Run fully managed")
        __self__.working_dir = working_dir

@pulumi.input_type
class ServiceTemplateSpecContainerEnvArgs:
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Name of the environment variable.
    """
    value: Optional[pulumi.Input[str]] = pulumi.input_property("value")
    """
    Variable references $(VAR_NAME) are expanded
    using the previous defined environment variables in the container and
    any route environment variables. If a variable cannot be resolved,
    the reference in the input string will be unchanged. The $(VAR_NAME)
    syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
    references will never be expanded, regardless of whether the variable
    exists or not.
    Defaults to "".
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: Optional[pulumi.Input[str]] = None, value: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Name of the environment variable.
        :param pulumi.Input[str] value: Variable references $(VAR_NAME) are expanded
               using the previous defined environment variables in the container and
               any route environment variables. If a variable cannot be resolved,
               the reference in the input string will be unchanged. The $(VAR_NAME)
               syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
               references will never be expanded, regardless of whether the variable
               exists or not.
               Defaults to "".
        """
        __self__.name = name
        __self__.value = value

@pulumi.input_type
class ServiceTemplateSpecContainerEnvFromArgs:
    config_map_ref: Optional[pulumi.Input['ServiceTemplateSpecContainerEnvFromConfigMapRefArgs']] = pulumi.input_property("configMapRef")
    """
    The ConfigMap to select from.  Structure is documented below.
    """
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    An optional identifier to prepend to each key in the ConfigMap.
    """
    secret_ref: Optional[pulumi.Input['ServiceTemplateSpecContainerEnvFromSecretRefArgs']] = pulumi.input_property("secretRef")
    """
    The Secret to select from.  Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, config_map_ref: Optional[pulumi.Input['ServiceTemplateSpecContainerEnvFromConfigMapRefArgs']] = None, prefix: Optional[pulumi.Input[str]] = None, secret_ref: Optional[pulumi.Input['ServiceTemplateSpecContainerEnvFromSecretRefArgs']] = None) -> None:
        """
        :param pulumi.Input['ServiceTemplateSpecContainerEnvFromConfigMapRefArgs'] config_map_ref: The ConfigMap to select from.  Structure is documented below.
        :param pulumi.Input[str] prefix: An optional identifier to prepend to each key in the ConfigMap.
        :param pulumi.Input['ServiceTemplateSpecContainerEnvFromSecretRefArgs'] secret_ref: The Secret to select from.  Structure is documented below.
        """
        __self__.config_map_ref = config_map_ref
        __self__.prefix = prefix
        __self__.secret_ref = secret_ref

@pulumi.input_type
class ServiceTemplateSpecContainerEnvFromConfigMapRefArgs:
    local_object_reference: Optional[pulumi.Input['ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs']] = pulumi.input_property("localObjectReference")
    """
    The Secret to select from.  Structure is documented below.
    """
    optional: Optional[pulumi.Input[bool]] = pulumi.input_property("optional")
    """
    Specify whether the Secret must be defined
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, local_object_reference: Optional[pulumi.Input['ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs']] = None, optional: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input['ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs'] local_object_reference: The Secret to select from.  Structure is documented below.
        :param pulumi.Input[bool] optional: Specify whether the Secret must be defined
        """
        __self__.local_object_reference = local_object_reference
        __self__.optional = optional

@pulumi.input_type
class ServiceTemplateSpecContainerEnvFromConfigMapRefLocalObjectReferenceArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Name of the environment variable.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: Name of the environment variable.
        """
        __self__.name = name

@pulumi.input_type
class ServiceTemplateSpecContainerEnvFromSecretRefArgs:
    local_object_reference: Optional[pulumi.Input['ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs']] = pulumi.input_property("localObjectReference")
    """
    The Secret to select from.  Structure is documented below.
    """
    optional: Optional[pulumi.Input[bool]] = pulumi.input_property("optional")
    """
    Specify whether the Secret must be defined
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, local_object_reference: Optional[pulumi.Input['ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs']] = None, optional: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input['ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs'] local_object_reference: The Secret to select from.  Structure is documented below.
        :param pulumi.Input[bool] optional: Specify whether the Secret must be defined
        """
        __self__.local_object_reference = local_object_reference
        __self__.optional = optional

@pulumi.input_type
class ServiceTemplateSpecContainerEnvFromSecretRefLocalObjectReferenceArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Name of the environment variable.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: Name of the environment variable.
        """
        __self__.name = name

@pulumi.input_type
class ServiceTemplateSpecContainerResourcesArgs:
    limits: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("limits")
    """
    Limits describes the maximum amount of compute resources allowed.
    The values of the map is string form of the 'quantity' k8s type:
    https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
    """
    requests: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("requests")
    """
    Requests describes the minimum amount of compute resources required.
    If Requests is omitted for a container, it defaults to Limits if that is
    explicitly specified, otherwise to an implementation-defined value.
    The values of the map is string form of the 'quantity' k8s type:
    https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, limits: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, requests: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] limits: Limits describes the maximum amount of compute resources allowed.
               The values of the map is string form of the 'quantity' k8s type:
               https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] requests: Requests describes the minimum amount of compute resources required.
               If Requests is omitted for a container, it defaults to Limits if that is
               explicitly specified, otherwise to an implementation-defined value.
               The values of the map is string form of the 'quantity' k8s type:
               https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
        """
        __self__.limits = limits
        __self__.requests = requests

@pulumi.input_type
class ServiceTrafficArgs:
    percent: pulumi.Input[float] = pulumi.input_property("percent")
    """
    Percent specifies percent of the traffic to this Revision or Configuration.
    """
    latest_revision: Optional[pulumi.Input[bool]] = pulumi.input_property("latestRevision")
    """
    LatestRevision may be optionally provided to indicate that the latest ready
    Revision of the Configuration should be used for this traffic target. When
    provided LatestRevision must be true if RevisionName is empty; it must be
    false when RevisionName is non-empty.
    """
    revision_name: Optional[pulumi.Input[str]] = pulumi.input_property("revisionName")
    """
    RevisionName of a specific revision to which to send this portion of traffic.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, percent: pulumi.Input[float], latest_revision: Optional[pulumi.Input[bool]] = None, revision_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] percent: Percent specifies percent of the traffic to this Revision or Configuration.
        :param pulumi.Input[bool] latest_revision: LatestRevision may be optionally provided to indicate that the latest ready
               Revision of the Configuration should be used for this traffic target. When
               provided LatestRevision must be true if RevisionName is empty; it must be
               false when RevisionName is non-empty.
        :param pulumi.Input[str] revision_name: RevisionName of a specific revision to which to send this portion of traffic.
        """
        __self__.percent = percent
        __self__.latest_revision = latest_revision
        __self__.revision_name = revision_name

