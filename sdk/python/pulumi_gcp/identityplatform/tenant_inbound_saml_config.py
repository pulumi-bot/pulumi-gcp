# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class TenantInboundSamlConfig(pulumi.CustomResource):
    display_name: pulumi.Output[str]
    """
    -
    (Required)
    Human friendly display name.
    """
    enabled: pulumi.Output[bool]
    """
    -
    (Optional)
    If this config allows users to sign in with the provider.
    """
    idp_config: pulumi.Output[dict]
    """
    -
    (Required)
    SAML IdP configuration when the project acts as the relying party  Structure is documented below.

      * `idpCertificates` (`list`) - -
        (Required)
        The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
        * `x509Certificate` (`str`) - -
          (Optional)
          The x509 certificate

      * `idpEntityId` (`str`) - -
        (Required)
        Unique identifier for all SAML entities
      * `signRequest` (`bool`) - -
        (Optional)
        Indicates if outbounding SAMLRequest should be signed.
      * `ssoUrl` (`str`) - -
        (Required)
        URL to send Authentication request to.
    """
    name: pulumi.Output[str]
    """
    -
    (Required)
    The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,
    hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an
    alphanumeric character, and have at least 2 characters.
    """
    project: pulumi.Output[str]
    """
    The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.
    """
    sp_config: pulumi.Output[dict]
    """
    -
    (Required)
    SAML SP (Service Provider) configuration when the project acts as the relying party to receive
    and accept an authentication assertion issued by a SAML identity provider.  Structure is documented below.

      * `callbackUri` (`str`) - -
        (Required)
        Callback URI where responses from IDP are handled. Must start with `https://`.
      * `spCertificates` (`list`) - -
        The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
        * `x509Certificate` (`str`) - -
          (Optional)
          The x509 certificate

      * `spEntityId` (`str`) - -
        (Required)
        Unique identifier for all SAML entities.
    """
    tenant: pulumi.Output[str]
    """
    -
    (Required)
    The name of the tenant where this inbound SAML config resource exists
    """
    def __init__(__self__, resource_name, opts=None, display_name=None, enabled=None, idp_config=None, name=None, project=None, sp_config=None, tenant=None, __props__=None, __name__=None, __opts__=None):
        """
        Inbound SAML configuration for a Identity Toolkit tenant.

        You must enable the
        [Google Identity Platform](https://console.cloud.google.com/marketplace/details/google-cloud-platform/customer-identity) in
        the marketplace prior to using this resource.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] display_name: -
               (Required)
               Human friendly display name.
        :param pulumi.Input[bool] enabled: -
               (Optional)
               If this config allows users to sign in with the provider.
        :param pulumi.Input[dict] idp_config: -
               (Required)
               SAML IdP configuration when the project acts as the relying party  Structure is documented below.
        :param pulumi.Input[str] name: -
               (Required)
               The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,
               hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an
               alphanumeric character, and have at least 2 characters.
        :param pulumi.Input[str] project: The ID of the project in which the resource belongs.
               If it is not provided, the provider project is used.
        :param pulumi.Input[dict] sp_config: -
               (Required)
               SAML SP (Service Provider) configuration when the project acts as the relying party to receive
               and accept an authentication assertion issued by a SAML identity provider.  Structure is documented below.
        :param pulumi.Input[str] tenant: -
               (Required)
               The name of the tenant where this inbound SAML config resource exists

        The **idp_config** object supports the following:

          * `idpCertificates` (`pulumi.Input[list]`) - -
            (Required)
            The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
            * `x509Certificate` (`pulumi.Input[str]`) - -
              (Optional)
              The x509 certificate

          * `idpEntityId` (`pulumi.Input[str]`) - -
            (Required)
            Unique identifier for all SAML entities
          * `signRequest` (`pulumi.Input[bool]`) - -
            (Optional)
            Indicates if outbounding SAMLRequest should be signed.
          * `ssoUrl` (`pulumi.Input[str]`) - -
            (Required)
            URL to send Authentication request to.

        The **sp_config** object supports the following:

          * `callbackUri` (`pulumi.Input[str]`) - -
            (Required)
            Callback URI where responses from IDP are handled. Must start with `https://`.
          * `spCertificates` (`pulumi.Input[list]`) - -
            The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
            * `x509Certificate` (`pulumi.Input[str]`) - -
              (Optional)
              The x509 certificate

          * `spEntityId` (`pulumi.Input[str]`) - -
            (Required)
            Unique identifier for all SAML entities.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if display_name is None:
                raise TypeError("Missing required property 'display_name'")
            __props__['display_name'] = display_name
            __props__['enabled'] = enabled
            if idp_config is None:
                raise TypeError("Missing required property 'idp_config'")
            __props__['idp_config'] = idp_config
            __props__['name'] = name
            __props__['project'] = project
            if sp_config is None:
                raise TypeError("Missing required property 'sp_config'")
            __props__['sp_config'] = sp_config
            if tenant is None:
                raise TypeError("Missing required property 'tenant'")
            __props__['tenant'] = tenant
        super(TenantInboundSamlConfig, __self__).__init__(
            'gcp:identityplatform/tenantInboundSamlConfig:TenantInboundSamlConfig',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, display_name=None, enabled=None, idp_config=None, name=None, project=None, sp_config=None, tenant=None):
        """
        Get an existing TenantInboundSamlConfig resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] display_name: -
               (Required)
               Human friendly display name.
        :param pulumi.Input[bool] enabled: -
               (Optional)
               If this config allows users to sign in with the provider.
        :param pulumi.Input[dict] idp_config: -
               (Required)
               SAML IdP configuration when the project acts as the relying party  Structure is documented below.
        :param pulumi.Input[str] name: -
               (Required)
               The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,
               hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an
               alphanumeric character, and have at least 2 characters.
        :param pulumi.Input[str] project: The ID of the project in which the resource belongs.
               If it is not provided, the provider project is used.
        :param pulumi.Input[dict] sp_config: -
               (Required)
               SAML SP (Service Provider) configuration when the project acts as the relying party to receive
               and accept an authentication assertion issued by a SAML identity provider.  Structure is documented below.
        :param pulumi.Input[str] tenant: -
               (Required)
               The name of the tenant where this inbound SAML config resource exists

        The **idp_config** object supports the following:

          * `idpCertificates` (`pulumi.Input[list]`) - -
            (Required)
            The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
            * `x509Certificate` (`pulumi.Input[str]`) - -
              (Optional)
              The x509 certificate

          * `idpEntityId` (`pulumi.Input[str]`) - -
            (Required)
            Unique identifier for all SAML entities
          * `signRequest` (`pulumi.Input[bool]`) - -
            (Optional)
            Indicates if outbounding SAMLRequest should be signed.
          * `ssoUrl` (`pulumi.Input[str]`) - -
            (Required)
            URL to send Authentication request to.

        The **sp_config** object supports the following:

          * `callbackUri` (`pulumi.Input[str]`) - -
            (Required)
            Callback URI where responses from IDP are handled. Must start with `https://`.
          * `spCertificates` (`pulumi.Input[list]`) - -
            The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
            * `x509Certificate` (`pulumi.Input[str]`) - -
              (Optional)
              The x509 certificate

          * `spEntityId` (`pulumi.Input[str]`) - -
            (Required)
            Unique identifier for all SAML entities.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["display_name"] = display_name
        __props__["enabled"] = enabled
        __props__["idp_config"] = idp_config
        __props__["name"] = name
        __props__["project"] = project
        __props__["sp_config"] = sp_config
        __props__["tenant"] = tenant
        return TenantInboundSamlConfig(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

