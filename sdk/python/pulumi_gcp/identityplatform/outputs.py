# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'InboundSamlConfigIdpConfig',
    'InboundSamlConfigIdpConfigIdpCertificate',
    'InboundSamlConfigSpConfig',
    'InboundSamlConfigSpConfigSpCertificate',
    'TenantInboundSamlConfigIdpConfig',
    'TenantInboundSamlConfigIdpConfigIdpCertificate',
    'TenantInboundSamlConfigSpConfig',
    'TenantInboundSamlConfigSpConfigSpCertificate',
]

@pulumi.output_type
class InboundSamlConfigIdpConfig(dict):
    @property
    @pulumi.getter(name="idpCertificates")
    def idp_certificates(self) -> List['outputs.InboundSamlConfigIdpConfigIdpCertificate']:
        """
        The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
        Structure is documented below.
        """
        ...

    @property
    @pulumi.getter(name="idpEntityId")
    def idp_entity_id(self) -> str:
        """
        Unique identifier for all SAML entities
        """
        ...

    @property
    @pulumi.getter(name="signRequest")
    def sign_request(self) -> Optional[bool]:
        """
        Indicates if outbounding SAMLRequest should be signed.
        """
        ...

    @property
    @pulumi.getter(name="ssoUrl")
    def sso_url(self) -> str:
        """
        URL to send Authentication request to.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class InboundSamlConfigIdpConfigIdpCertificate(dict):
    @property
    @pulumi.getter(name="x509Certificate")
    def x509_certificate(self) -> Optional[str]:
        """
        -
        The x509 certificate
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class InboundSamlConfigSpConfig(dict):
    @property
    @pulumi.getter(name="callbackUri")
    def callback_uri(self) -> Optional[str]:
        """
        Callback URI where responses from IDP are handled. Must start with `https://`.
        """
        ...

    @property
    @pulumi.getter(name="spCertificates")
    def sp_certificates(self) -> Optional[List['outputs.InboundSamlConfigSpConfigSpCertificate']]:
        """
        -
        The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
        Structure is documented below.
        """
        ...

    @property
    @pulumi.getter(name="spEntityId")
    def sp_entity_id(self) -> Optional[str]:
        """
        Unique identifier for all SAML entities.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class InboundSamlConfigSpConfigSpCertificate(dict):
    @property
    @pulumi.getter(name="x509Certificate")
    def x509_certificate(self) -> Optional[str]:
        """
        -
        The x509 certificate
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TenantInboundSamlConfigIdpConfig(dict):
    @property
    @pulumi.getter(name="idpCertificates")
    def idp_certificates(self) -> List['outputs.TenantInboundSamlConfigIdpConfigIdpCertificate']:
        """
        The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
        Structure is documented below.
        """
        ...

    @property
    @pulumi.getter(name="idpEntityId")
    def idp_entity_id(self) -> str:
        """
        Unique identifier for all SAML entities
        """
        ...

    @property
    @pulumi.getter(name="signRequest")
    def sign_request(self) -> Optional[bool]:
        """
        Indicates if outbounding SAMLRequest should be signed.
        """
        ...

    @property
    @pulumi.getter(name="ssoUrl")
    def sso_url(self) -> str:
        """
        URL to send Authentication request to.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TenantInboundSamlConfigIdpConfigIdpCertificate(dict):
    @property
    @pulumi.getter(name="x509Certificate")
    def x509_certificate(self) -> Optional[str]:
        """
        -
        The x509 certificate
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TenantInboundSamlConfigSpConfig(dict):
    @property
    @pulumi.getter(name="callbackUri")
    def callback_uri(self) -> str:
        """
        Callback URI where responses from IDP are handled. Must start with `https://`.
        """
        ...

    @property
    @pulumi.getter(name="spCertificates")
    def sp_certificates(self) -> Optional[List['outputs.TenantInboundSamlConfigSpConfigSpCertificate']]:
        """
        -
        The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
        Structure is documented below.
        """
        ...

    @property
    @pulumi.getter(name="spEntityId")
    def sp_entity_id(self) -> str:
        """
        Unique identifier for all SAML entities.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TenantInboundSamlConfigSpConfigSpCertificate(dict):
    @property
    @pulumi.getter(name="x509Certificate")
    def x509_certificate(self) -> Optional[str]:
        """
        -
        The x509 certificate
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


