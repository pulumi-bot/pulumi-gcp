# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class InboundSamlConfigIdpConfigArgs:
    idp_certificates: pulumi.Input[List[pulumi.Input['InboundSamlConfigIdpConfigIdpCertificateArgs']]] = pulumi.input_property("idpCertificates")
    """
    The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
    """
    idp_entity_id: pulumi.Input[str] = pulumi.input_property("idpEntityId")
    """
    Unique identifier for all SAML entities
    """
    sso_url: pulumi.Input[str] = pulumi.input_property("ssoUrl")
    """
    URL to send Authentication request to.
    """
    sign_request: Optional[pulumi.Input[bool]] = pulumi.input_property("signRequest")
    """
    Indicates if outbounding SAMLRequest should be signed.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, idp_certificates: pulumi.Input[List[pulumi.Input['InboundSamlConfigIdpConfigIdpCertificateArgs']]], idp_entity_id: pulumi.Input[str], sso_url: pulumi.Input[str], sign_request: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['InboundSamlConfigIdpConfigIdpCertificateArgs']]] idp_certificates: The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
        :param pulumi.Input[str] idp_entity_id: Unique identifier for all SAML entities
        :param pulumi.Input[str] sso_url: URL to send Authentication request to.
        :param pulumi.Input[bool] sign_request: Indicates if outbounding SAMLRequest should be signed.
        """
        __self__.idp_certificates = idp_certificates
        __self__.idp_entity_id = idp_entity_id
        __self__.sso_url = sso_url
        __self__.sign_request = sign_request

@pulumi.input_type
class InboundSamlConfigIdpConfigIdpCertificateArgs:
    x509_certificate: Optional[pulumi.Input[str]] = pulumi.input_property("x509Certificate")
    """
    -
    The x509 certificate
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, x509_certificate: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] x509_certificate: -
               The x509 certificate
        """
        __self__.x509_certificate = x509_certificate

@pulumi.input_type
class InboundSamlConfigSpConfigArgs:
    callback_uri: Optional[pulumi.Input[str]] = pulumi.input_property("callbackUri")
    """
    Callback URI where responses from IDP are handled. Must start with `https://`.
    """
    sp_certificates: Optional[pulumi.Input[List[pulumi.Input['InboundSamlConfigSpConfigSpCertificateArgs']]]] = pulumi.input_property("spCertificates")
    """
    -
    The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
    """
    sp_entity_id: Optional[pulumi.Input[str]] = pulumi.input_property("spEntityId")
    """
    Unique identifier for all SAML entities.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, callback_uri: Optional[pulumi.Input[str]] = None, sp_certificates: Optional[pulumi.Input[List[pulumi.Input['InboundSamlConfigSpConfigSpCertificateArgs']]]] = None, sp_entity_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] callback_uri: Callback URI where responses from IDP are handled. Must start with `https://`.
        :param pulumi.Input[List[pulumi.Input['InboundSamlConfigSpConfigSpCertificateArgs']]] sp_certificates: -
               The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
        :param pulumi.Input[str] sp_entity_id: Unique identifier for all SAML entities.
        """
        __self__.callback_uri = callback_uri
        __self__.sp_certificates = sp_certificates
        __self__.sp_entity_id = sp_entity_id

@pulumi.input_type
class InboundSamlConfigSpConfigSpCertificateArgs:
    x509_certificate: Optional[pulumi.Input[str]] = pulumi.input_property("x509Certificate")
    """
    -
    The x509 certificate
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, x509_certificate: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] x509_certificate: -
               The x509 certificate
        """
        __self__.x509_certificate = x509_certificate

@pulumi.input_type
class TenantInboundSamlConfigIdpConfigArgs:
    idp_certificates: pulumi.Input[List[pulumi.Input['TenantInboundSamlConfigIdpConfigIdpCertificateArgs']]] = pulumi.input_property("idpCertificates")
    """
    The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
    """
    idp_entity_id: pulumi.Input[str] = pulumi.input_property("idpEntityId")
    """
    Unique identifier for all SAML entities
    """
    sso_url: pulumi.Input[str] = pulumi.input_property("ssoUrl")
    """
    URL to send Authentication request to.
    """
    sign_request: Optional[pulumi.Input[bool]] = pulumi.input_property("signRequest")
    """
    Indicates if outbounding SAMLRequest should be signed.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, idp_certificates: pulumi.Input[List[pulumi.Input['TenantInboundSamlConfigIdpConfigIdpCertificateArgs']]], idp_entity_id: pulumi.Input[str], sso_url: pulumi.Input[str], sign_request: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['TenantInboundSamlConfigIdpConfigIdpCertificateArgs']]] idp_certificates: The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
        :param pulumi.Input[str] idp_entity_id: Unique identifier for all SAML entities
        :param pulumi.Input[str] sso_url: URL to send Authentication request to.
        :param pulumi.Input[bool] sign_request: Indicates if outbounding SAMLRequest should be signed.
        """
        __self__.idp_certificates = idp_certificates
        __self__.idp_entity_id = idp_entity_id
        __self__.sso_url = sso_url
        __self__.sign_request = sign_request

@pulumi.input_type
class TenantInboundSamlConfigIdpConfigIdpCertificateArgs:
    x509_certificate: Optional[pulumi.Input[str]] = pulumi.input_property("x509Certificate")
    """
    -
    The x509 certificate
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, x509_certificate: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] x509_certificate: -
               The x509 certificate
        """
        __self__.x509_certificate = x509_certificate

@pulumi.input_type
class TenantInboundSamlConfigSpConfigArgs:
    callback_uri: pulumi.Input[str] = pulumi.input_property("callbackUri")
    """
    Callback URI where responses from IDP are handled. Must start with `https://`.
    """
    sp_entity_id: pulumi.Input[str] = pulumi.input_property("spEntityId")
    """
    Unique identifier for all SAML entities.
    """
    sp_certificates: Optional[pulumi.Input[List[pulumi.Input['TenantInboundSamlConfigSpConfigSpCertificateArgs']]]] = pulumi.input_property("spCertificates")
    """
    -
    The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, callback_uri: pulumi.Input[str], sp_entity_id: pulumi.Input[str], sp_certificates: Optional[pulumi.Input[List[pulumi.Input['TenantInboundSamlConfigSpConfigSpCertificateArgs']]]] = None) -> None:
        """
        :param pulumi.Input[str] callback_uri: Callback URI where responses from IDP are handled. Must start with `https://`.
        :param pulumi.Input[str] sp_entity_id: Unique identifier for all SAML entities.
        :param pulumi.Input[List[pulumi.Input['TenantInboundSamlConfigSpConfigSpCertificateArgs']]] sp_certificates: -
               The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.  Structure is documented below.
        """
        __self__.callback_uri = callback_uri
        __self__.sp_entity_id = sp_entity_id
        __self__.sp_certificates = sp_certificates

@pulumi.input_type
class TenantInboundSamlConfigSpConfigSpCertificateArgs:
    x509_certificate: Optional[pulumi.Input[str]] = pulumi.input_property("x509Certificate")
    """
    -
    The x509 certificate
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, x509_certificate: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] x509_certificate: -
               The x509 certificate
        """
        __self__.x509_certificate = x509_certificate

