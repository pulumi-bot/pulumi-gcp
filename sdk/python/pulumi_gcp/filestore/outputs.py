# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'InstanceFileShares',
    'InstanceFileSharesNfsExportOption',
    'InstanceNetwork',
]

@pulumi.output_type
class InstanceFileShares(dict):
    capacity_gb: float = pulumi.output_property("capacityGb")
    """
    File share capacity in GiB. This must be at least 1024 GiB
    for the standard tier, or 2560 GiB for the premium tier.
    """
    name: str = pulumi.output_property("name")
    """
    The name of the fileshare (16 characters or less)
    """
    nfs_export_options: Optional[List['outputs.InstanceFileSharesNfsExportOption']] = pulumi.output_property("nfsExportOptions")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class InstanceFileSharesNfsExportOption(dict):
    access_mode: Optional[str] = pulumi.output_property("accessMode")
    """
    Either READ_ONLY, for allowing only read requests on the exported directory,
    or READ_WRITE, for allowing both read and write requests. The default is READ_WRITE.
    """
    anon_gid: Optional[float] = pulumi.output_property("anonGid")
    """
    An integer representing the anonymous group id with a default value of 65534.
    Anon_gid may only be set with squashMode of ROOT_SQUASH. An error will be returned
    if this field is specified for other squashMode settings.
    """
    anon_uid: Optional[float] = pulumi.output_property("anonUid")
    """
    An integer representing the anonymous user id with a default value of 65534.
    Anon_uid may only be set with squashMode of ROOT_SQUASH. An error will be returned
    if this field is specified for other squashMode settings.
    """
    ip_ranges: Optional[List[str]] = pulumi.output_property("ipRanges")
    """
    List of either IPv4 addresses, or ranges in CIDR notation which may mount the file share.
    Overlapping IP ranges are not allowed, both within and across NfsExportOptions. An error will be returned.
    The limit is 64 IP ranges/addresses for each FileShareConfig among all NfsExportOptions.
    """
    squash_mode: Optional[str] = pulumi.output_property("squashMode")
    """
    Either NO_ROOT_SQUASH, for allowing root access on the exported directory, or ROOT_SQUASH,
    for not allowing root access. The default is NO_ROOT_SQUASH.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class InstanceNetwork(dict):
    ip_addresses: Optional[List[str]] = pulumi.output_property("ipAddresses")
    """
    -
    A list of IPv4 or IPv6 addresses.
    """
    modes: List[str] = pulumi.output_property("modes")
    """
    IP versions for which the instance has
    IP addresses assigned.
    """
    network: str = pulumi.output_property("network")
    """
    The name of the GCE VPC network to which the
    instance is connected.
    """
    reserved_ip_range: Optional[str] = pulumi.output_property("reservedIpRange")
    """
    A /29 CIDR block that identifies the range of IP
    addresses reserved for this instance.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


