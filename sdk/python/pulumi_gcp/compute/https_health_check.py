# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = ['HttpsHealthCheck']


class HttpsHealthCheck(pulumi.CustomResource):
    check_interval_sec: pulumi.Output[Optional[float]] = pulumi.output_property("checkIntervalSec")
    """
    How often (in seconds) to send a health check. The default value is 5
    seconds.
    """
    creation_timestamp: pulumi.Output[str] = pulumi.output_property("creationTimestamp")
    """
    Creation timestamp in RFC3339 text format.
    """
    description: pulumi.Output[Optional[str]] = pulumi.output_property("description")
    """
    An optional description of this resource. Provide this property when
    you create the resource.
    """
    healthy_threshold: pulumi.Output[Optional[float]] = pulumi.output_property("healthyThreshold")
    """
    A so-far unhealthy instance will be marked healthy after this many
    consecutive successes. The default value is 2.
    """
    host: pulumi.Output[Optional[str]] = pulumi.output_property("host")
    """
    The value of the host header in the HTTPS health check request. If
    left empty (default value), the public IP on behalf of which this
    health check is performed will be used.
    """
    name: pulumi.Output[str] = pulumi.output_property("name")
    """
    Name of the resource. Provided by the client when the resource is
    created. The name must be 1-63 characters long, and comply with
    RFC1035.  Specifically, the name must be 1-63 characters long and
    match the regular expression `a-z?` which means
    the first character must be a lowercase letter, and all following
    characters must be a dash, lowercase letter, or digit, except the
    last character, which cannot be a dash.
    """
    port: pulumi.Output[Optional[float]] = pulumi.output_property("port")
    """
    The TCP port number for the HTTPS health check request.
    The default value is 80.
    """
    project: pulumi.Output[str] = pulumi.output_property("project")
    """
    The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.
    """
    request_path: pulumi.Output[Optional[str]] = pulumi.output_property("requestPath")
    """
    The request path of the HTTPS health check request.
    The default value is /.
    """
    self_link: pulumi.Output[str] = pulumi.output_property("selfLink")
    """
    The URI of the created resource.
    """
    timeout_sec: pulumi.Output[Optional[float]] = pulumi.output_property("timeoutSec")
    """
    How long (in seconds) to wait before claiming failure.
    The default value is 5 seconds.  It is invalid for timeoutSec to have
    greater value than checkIntervalSec.
    """
    unhealthy_threshold: pulumi.Output[Optional[float]] = pulumi.output_property("unhealthyThreshold")
    """
    A so-far healthy instance will be marked unhealthy after this many
    consecutive failures. The default value is 2.
    """
    # pylint: disable=no-self-argument
    def __init__(__self__, resource_name, opts: Optional[pulumi.ResourceOptions] = None, check_interval_sec: Optional[pulumi.Input[float]] = None, description: Optional[pulumi.Input[str]] = None, healthy_threshold: Optional[pulumi.Input[float]] = None, host: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, port: Optional[pulumi.Input[float]] = None, project: Optional[pulumi.Input[str]] = None, request_path: Optional[pulumi.Input[str]] = None, timeout_sec: Optional[pulumi.Input[float]] = None, unhealthy_threshold: Optional[pulumi.Input[float]] = None, __props__=None, __name__=None, __opts__=None) -> None:
        """
        An HttpsHealthCheck resource. This resource defines a template for how
        individual VMs should be checked for health, via HTTPS.

        > **Note:** compute.HttpsHealthCheck is a legacy health check.
        The newer [compute.HealthCheck](https://www.terraform.io/docs/providers/google/r/compute_health_check.html)
        should be preferred for all uses except
        [Network Load Balancers](https://cloud.google.com/compute/docs/load-balancing/network/)
        which still require the legacy version.

        To get more information about HttpsHealthCheck, see:

        * [API documentation](https://cloud.google.com/compute/docs/reference/v1/httpsHealthChecks)
        * How-to Guides
            * [Adding Health Checks](https://cloud.google.com/compute/docs/load-balancing/health-checks#legacy_health_checks)

        ## Example Usage
        ### Https Health Check Basic

        ```python
        import pulumi
        import pulumi_gcp as gcp

        default = gcp.compute.HttpsHealthCheck("default",
            check_interval_sec=1,
            request_path="/health_check",
            timeout_sec=1)
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] check_interval_sec: How often (in seconds) to send a health check. The default value is 5
               seconds.
        :param pulumi.Input[str] description: An optional description of this resource. Provide this property when
               you create the resource.
        :param pulumi.Input[float] healthy_threshold: A so-far unhealthy instance will be marked healthy after this many
               consecutive successes. The default value is 2.
        :param pulumi.Input[str] host: The value of the host header in the HTTPS health check request. If
               left empty (default value), the public IP on behalf of which this
               health check is performed will be used.
        :param pulumi.Input[str] name: Name of the resource. Provided by the client when the resource is
               created. The name must be 1-63 characters long, and comply with
               RFC1035.  Specifically, the name must be 1-63 characters long and
               match the regular expression `a-z?` which means
               the first character must be a lowercase letter, and all following
               characters must be a dash, lowercase letter, or digit, except the
               last character, which cannot be a dash.
        :param pulumi.Input[float] port: The TCP port number for the HTTPS health check request.
               The default value is 80.
        :param pulumi.Input[str] project: The ID of the project in which the resource belongs.
               If it is not provided, the provider project is used.
        :param pulumi.Input[str] request_path: The request path of the HTTPS health check request.
               The default value is /.
        :param pulumi.Input[float] timeout_sec: How long (in seconds) to wait before claiming failure.
               The default value is 5 seconds.  It is invalid for timeoutSec to have
               greater value than checkIntervalSec.
        :param pulumi.Input[float] unhealthy_threshold: A so-far healthy instance will be marked unhealthy after this many
               consecutive failures. The default value is 2.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['check_interval_sec'] = check_interval_sec
            __props__['description'] = description
            __props__['healthy_threshold'] = healthy_threshold
            __props__['host'] = host
            __props__['name'] = name
            __props__['port'] = port
            __props__['project'] = project
            __props__['request_path'] = request_path
            __props__['timeout_sec'] = timeout_sec
            __props__['unhealthy_threshold'] = unhealthy_threshold
            __props__['creation_timestamp'] = None
            __props__['self_link'] = None
        super(HttpsHealthCheck, __self__).__init__(
            'gcp:compute/httpsHealthCheck:HttpsHealthCheck',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str, id: str, opts: Optional[pulumi.ResourceOptions] = None, check_interval_sec: Optional[pulumi.Input[float]] = None, creation_timestamp: Optional[pulumi.Input[str]] = None, description: Optional[pulumi.Input[str]] = None, healthy_threshold: Optional[pulumi.Input[float]] = None, host: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, port: Optional[pulumi.Input[float]] = None, project: Optional[pulumi.Input[str]] = None, request_path: Optional[pulumi.Input[str]] = None, self_link: Optional[pulumi.Input[str]] = None, timeout_sec: Optional[pulumi.Input[float]] = None, unhealthy_threshold: Optional[pulumi.Input[float]] = None) -> 'HttpsHealthCheck':
        """
        Get an existing HttpsHealthCheck resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] check_interval_sec: How often (in seconds) to send a health check. The default value is 5
               seconds.
        :param pulumi.Input[str] creation_timestamp: Creation timestamp in RFC3339 text format.
        :param pulumi.Input[str] description: An optional description of this resource. Provide this property when
               you create the resource.
        :param pulumi.Input[float] healthy_threshold: A so-far unhealthy instance will be marked healthy after this many
               consecutive successes. The default value is 2.
        :param pulumi.Input[str] host: The value of the host header in the HTTPS health check request. If
               left empty (default value), the public IP on behalf of which this
               health check is performed will be used.
        :param pulumi.Input[str] name: Name of the resource. Provided by the client when the resource is
               created. The name must be 1-63 characters long, and comply with
               RFC1035.  Specifically, the name must be 1-63 characters long and
               match the regular expression `a-z?` which means
               the first character must be a lowercase letter, and all following
               characters must be a dash, lowercase letter, or digit, except the
               last character, which cannot be a dash.
        :param pulumi.Input[float] port: The TCP port number for the HTTPS health check request.
               The default value is 80.
        :param pulumi.Input[str] project: The ID of the project in which the resource belongs.
               If it is not provided, the provider project is used.
        :param pulumi.Input[str] request_path: The request path of the HTTPS health check request.
               The default value is /.
        :param pulumi.Input[str] self_link: The URI of the created resource.
        :param pulumi.Input[float] timeout_sec: How long (in seconds) to wait before claiming failure.
               The default value is 5 seconds.  It is invalid for timeoutSec to have
               greater value than checkIntervalSec.
        :param pulumi.Input[float] unhealthy_threshold: A so-far healthy instance will be marked unhealthy after this many
               consecutive failures. The default value is 2.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["check_interval_sec"] = check_interval_sec
        __props__["creation_timestamp"] = creation_timestamp
        __props__["description"] = description
        __props__["healthy_threshold"] = healthy_threshold
        __props__["host"] = host
        __props__["name"] = name
        __props__["port"] = port
        __props__["project"] = project
        __props__["request_path"] = request_path
        __props__["self_link"] = self_link
        __props__["timeout_sec"] = timeout_sec
        __props__["unhealthy_threshold"] = unhealthy_threshold
        return HttpsHealthCheck(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

