# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class ApplicationFeatureSettingsArgs:
    split_health_checks: pulumi.Input[bool] = pulumi.input_property("splitHealthChecks")
    """
    Set to false to use the legacy health check instead of the readiness
    and liveness checks.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, split_health_checks: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] split_health_checks: Set to false to use the legacy health check instead of the readiness
               and liveness checks.
        """
        __self__.split_health_checks = split_health_checks

@pulumi.input_type
class ApplicationIapArgs:
    oauth2_client_id: pulumi.Input[str] = pulumi.input_property("oauth2ClientId")
    """
    OAuth2 client ID to use for the authentication flow.
    """
    oauth2_client_secret: pulumi.Input[str] = pulumi.input_property("oauth2ClientSecret")
    """
    OAuth2 client secret to use for the authentication flow.
    The SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field.
    """
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    oauth2_client_secret_sha256: Optional[pulumi.Input[str]] = pulumi.input_property("oauth2ClientSecretSha256")
    """
    Hex-encoded SHA-256 hash of the client secret.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, oauth2_client_id: pulumi.Input[str], oauth2_client_secret: pulumi.Input[str], enabled: Optional[pulumi.Input[bool]] = None, oauth2_client_secret_sha256: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] oauth2_client_id: OAuth2 client ID to use for the authentication flow.
        :param pulumi.Input[str] oauth2_client_secret: OAuth2 client secret to use for the authentication flow.
               The SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field.
        :param pulumi.Input[str] oauth2_client_secret_sha256: Hex-encoded SHA-256 hash of the client secret.
        """
        __self__.oauth2_client_id = oauth2_client_id
        __self__.oauth2_client_secret = oauth2_client_secret
        __self__.enabled = enabled
        __self__.oauth2_client_secret_sha256 = oauth2_client_secret_sha256

@pulumi.input_type
class ApplicationUrlDispatchRuleArgs:
    domain: Optional[pulumi.Input[str]] = pulumi.input_property("domain")
    path: Optional[pulumi.Input[str]] = pulumi.input_property("path")
    service: Optional[pulumi.Input[str]] = pulumi.input_property("service")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, domain: Optional[pulumi.Input[str]] = None, path: Optional[pulumi.Input[str]] = None, service: Optional[pulumi.Input[str]] = None) -> None:
        __self__.domain = domain
        __self__.path = path
        __self__.service = service

@pulumi.input_type
class ApplicationUrlDispatchRulesDispatchRuleArgs:
    path: pulumi.Input[str] = pulumi.input_property("path")
    """
    Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
    The sum of the lengths of the domain and path may not exceed 100 characters.
    """
    service: pulumi.Input[str] = pulumi.input_property("service")
    """
    Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
    The sum of the lengths of the domain and path may not exceed 100 characters.
    """
    domain: Optional[pulumi.Input[str]] = pulumi.input_property("domain")
    """
    Domain name to match against. The wildcard "*" is supported if specified before a period: "*.".
    Defaults to matching all domains: "*".
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, path: pulumi.Input[str], service: pulumi.Input[str], domain: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] path: Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
               The sum of the lengths of the domain and path may not exceed 100 characters.
        :param pulumi.Input[str] service: Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
               The sum of the lengths of the domain and path may not exceed 100 characters.
        :param pulumi.Input[str] domain: Domain name to match against. The wildcard "*" is supported if specified before a period: "*.".
               Defaults to matching all domains: "*".
        """
        __self__.path = path
        __self__.service = service
        __self__.domain = domain

@pulumi.input_type
class DomainMappingResourceRecordArgs:
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    rrdata: Optional[pulumi.Input[str]] = pulumi.input_property("rrdata")
    type: Optional[pulumi.Input[str]] = pulumi.input_property("type")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: Optional[pulumi.Input[str]] = None, rrdata: Optional[pulumi.Input[str]] = None, type: Optional[pulumi.Input[str]] = None) -> None:
        __self__.name = name
        __self__.rrdata = rrdata
        __self__.type = type

@pulumi.input_type
class DomainMappingSslSettingsArgs:
    ssl_management_type: pulumi.Input[str] = pulumi.input_property("sslManagementType")
    """
    SSL management type for this domain. If `AUTOMATIC`, a managed certificate is automatically provisioned.
    If `MANUAL`, `certificateId` must be manually specified in order to configure SSL for this domain.
    """
    certificate_id: Optional[pulumi.Input[str]] = pulumi.input_property("certificateId")
    """
    ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will
    remove SSL support.
    By default, a managed certificate is automatically created for every domain mapping. To omit SSL support
    or to configure SSL manually, specify `SslManagementType.MANUAL` on a `CREATE` or `UPDATE` request. You must be
    authorized to administer the `AuthorizedCertificate` resource to manually map it to a DomainMapping resource.
    Example: 12345.
    """
    pending_managed_certificate_id: Optional[pulumi.Input[str]] = pulumi.input_property("pendingManagedCertificateId")
    """
    -
    ID of the managed `AuthorizedCertificate` resource currently being provisioned, if applicable. Until the new
    managed certificate has been successfully provisioned, the previous SSL state will be preserved. Once the
    provisioning process completes, the `certificateId` field will reflect the new managed certificate and this
    field will be left empty. To remove SSL support while there is still a pending managed certificate, clear the
    `certificateId` field with an update request.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ssl_management_type: pulumi.Input[str], certificate_id: Optional[pulumi.Input[str]] = None, pending_managed_certificate_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] ssl_management_type: SSL management type for this domain. If `AUTOMATIC`, a managed certificate is automatically provisioned.
               If `MANUAL`, `certificateId` must be manually specified in order to configure SSL for this domain.
        :param pulumi.Input[str] certificate_id: ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will
               remove SSL support.
               By default, a managed certificate is automatically created for every domain mapping. To omit SSL support
               or to configure SSL manually, specify `SslManagementType.MANUAL` on a `CREATE` or `UPDATE` request. You must be
               authorized to administer the `AuthorizedCertificate` resource to manually map it to a DomainMapping resource.
               Example: 12345.
        :param pulumi.Input[str] pending_managed_certificate_id: -
               ID of the managed `AuthorizedCertificate` resource currently being provisioned, if applicable. Until the new
               managed certificate has been successfully provisioned, the previous SSL state will be preserved. Once the
               provisioning process completes, the `certificateId` field will reflect the new managed certificate and this
               field will be left empty. To remove SSL support while there is still a pending managed certificate, clear the
               `certificateId` field with an update request.
        """
        __self__.ssl_management_type = ssl_management_type
        __self__.certificate_id = certificate_id
        __self__.pending_managed_certificate_id = pending_managed_certificate_id

@pulumi.input_type
class EngineSplitTrafficSplitArgs:
    allocations: pulumi.Input[Dict[str, pulumi.Input[str]]] = pulumi.input_property("allocations")
    """
    Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.
    """
    shard_by: Optional[pulumi.Input[str]] = pulumi.input_property("shardBy")
    """
    Mechanism used to determine which version a request is sent to. The traffic selection algorithm will be stable for either type until allocations are changed.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allocations: pulumi.Input[Dict[str, pulumi.Input[str]]], shard_by: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] allocations: Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.
        :param pulumi.Input[str] shard_by: Mechanism used to determine which version a request is sent to. The traffic selection algorithm will be stable for either type until allocations are changed.
        """
        __self__.allocations = allocations
        __self__.shard_by = shard_by

@pulumi.input_type
class FlexibleAppVersionApiConfigArgs:
    script: pulumi.Input[str] = pulumi.input_property("script")
    """
    Path to the script from the application root directory.
    """
    auth_fail_action: Optional[pulumi.Input[str]] = pulumi.input_property("authFailAction")
    """
    Action to take when users access resources that require authentication.
    """
    login: Optional[pulumi.Input[str]] = pulumi.input_property("login")
    """
    Level of login required to access this resource.
    """
    security_level: Optional[pulumi.Input[str]] = pulumi.input_property("securityLevel")
    """
    Security (HTTPS) enforcement for this URL.
    """
    url: Optional[pulumi.Input[str]] = pulumi.input_property("url")
    """
    URL to serve the endpoint at.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, script: pulumi.Input[str], auth_fail_action: Optional[pulumi.Input[str]] = None, login: Optional[pulumi.Input[str]] = None, security_level: Optional[pulumi.Input[str]] = None, url: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] script: Path to the script from the application root directory.
        :param pulumi.Input[str] auth_fail_action: Action to take when users access resources that require authentication.
        :param pulumi.Input[str] login: Level of login required to access this resource.
        :param pulumi.Input[str] security_level: Security (HTTPS) enforcement for this URL.
        :param pulumi.Input[str] url: URL to serve the endpoint at.
        """
        __self__.script = script
        __self__.auth_fail_action = auth_fail_action
        __self__.login = login
        __self__.security_level = security_level
        __self__.url = url

@pulumi.input_type
class FlexibleAppVersionAutomaticScalingArgs:
    cpu_utilization: pulumi.Input['FlexibleAppVersionAutomaticScalingCpuUtilizationArgs'] = pulumi.input_property("cpuUtilization")
    """
    Target scaling by CPU usage.  Structure is documented below.
    """
    cool_down_period: Optional[pulumi.Input[str]] = pulumi.input_property("coolDownPeriod")
    """
    The time period that the Autoscaler should wait before it starts collecting information from a new instance.
    This prevents the autoscaler from collecting information when the instance is initializing,
    during which the collected usage would not be reliable. Default: 120s
    """
    disk_utilization: Optional[pulumi.Input['FlexibleAppVersionAutomaticScalingDiskUtilizationArgs']] = pulumi.input_property("diskUtilization")
    """
    Target scaling by disk usage.  Structure is documented below.
    """
    max_concurrent_requests: Optional[pulumi.Input[float]] = pulumi.input_property("maxConcurrentRequests")
    """
    Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.
    Defaults to a runtime-specific value.
    """
    max_idle_instances: Optional[pulumi.Input[float]] = pulumi.input_property("maxIdleInstances")
    """
    Maximum number of idle instances that should be maintained for this version.
    """
    max_pending_latency: Optional[pulumi.Input[str]] = pulumi.input_property("maxPendingLatency")
    """
    Maximum amount of time that a request should wait in the pending queue before starting a new instance to handle it.
    """
    max_total_instances: Optional[pulumi.Input[float]] = pulumi.input_property("maxTotalInstances")
    """
    Maximum number of instances that should be started to handle requests for this version. Default: 20
    """
    min_idle_instances: Optional[pulumi.Input[float]] = pulumi.input_property("minIdleInstances")
    """
    Minimum number of idle instances that should be maintained for this version. Only applicable for the default version of a service.
    """
    min_pending_latency: Optional[pulumi.Input[str]] = pulumi.input_property("minPendingLatency")
    """
    Minimum amount of time a request should wait in the pending queue before starting a new instance to handle it.
    """
    min_total_instances: Optional[pulumi.Input[float]] = pulumi.input_property("minTotalInstances")
    """
    Minimum number of running instances that should be maintained for this version. Default: 2
    """
    network_utilization: Optional[pulumi.Input['FlexibleAppVersionAutomaticScalingNetworkUtilizationArgs']] = pulumi.input_property("networkUtilization")
    """
    Target scaling by network usage.  Structure is documented below.
    """
    request_utilization: Optional[pulumi.Input['FlexibleAppVersionAutomaticScalingRequestUtilizationArgs']] = pulumi.input_property("requestUtilization")
    """
    Target scaling by request utilization.  Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cpu_utilization: pulumi.Input['FlexibleAppVersionAutomaticScalingCpuUtilizationArgs'], cool_down_period: Optional[pulumi.Input[str]] = None, disk_utilization: Optional[pulumi.Input['FlexibleAppVersionAutomaticScalingDiskUtilizationArgs']] = None, max_concurrent_requests: Optional[pulumi.Input[float]] = None, max_idle_instances: Optional[pulumi.Input[float]] = None, max_pending_latency: Optional[pulumi.Input[str]] = None, max_total_instances: Optional[pulumi.Input[float]] = None, min_idle_instances: Optional[pulumi.Input[float]] = None, min_pending_latency: Optional[pulumi.Input[str]] = None, min_total_instances: Optional[pulumi.Input[float]] = None, network_utilization: Optional[pulumi.Input['FlexibleAppVersionAutomaticScalingNetworkUtilizationArgs']] = None, request_utilization: Optional[pulumi.Input['FlexibleAppVersionAutomaticScalingRequestUtilizationArgs']] = None) -> None:
        """
        :param pulumi.Input['FlexibleAppVersionAutomaticScalingCpuUtilizationArgs'] cpu_utilization: Target scaling by CPU usage.  Structure is documented below.
        :param pulumi.Input[str] cool_down_period: The time period that the Autoscaler should wait before it starts collecting information from a new instance.
               This prevents the autoscaler from collecting information when the instance is initializing,
               during which the collected usage would not be reliable. Default: 120s
        :param pulumi.Input['FlexibleAppVersionAutomaticScalingDiskUtilizationArgs'] disk_utilization: Target scaling by disk usage.  Structure is documented below.
        :param pulumi.Input[float] max_concurrent_requests: Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.
               Defaults to a runtime-specific value.
        :param pulumi.Input[float] max_idle_instances: Maximum number of idle instances that should be maintained for this version.
        :param pulumi.Input[str] max_pending_latency: Maximum amount of time that a request should wait in the pending queue before starting a new instance to handle it.
        :param pulumi.Input[float] max_total_instances: Maximum number of instances that should be started to handle requests for this version. Default: 20
        :param pulumi.Input[float] min_idle_instances: Minimum number of idle instances that should be maintained for this version. Only applicable for the default version of a service.
        :param pulumi.Input[str] min_pending_latency: Minimum amount of time a request should wait in the pending queue before starting a new instance to handle it.
        :param pulumi.Input[float] min_total_instances: Minimum number of running instances that should be maintained for this version. Default: 2
        :param pulumi.Input['FlexibleAppVersionAutomaticScalingNetworkUtilizationArgs'] network_utilization: Target scaling by network usage.  Structure is documented below.
        :param pulumi.Input['FlexibleAppVersionAutomaticScalingRequestUtilizationArgs'] request_utilization: Target scaling by request utilization.  Structure is documented below.
        """
        __self__.cpu_utilization = cpu_utilization
        __self__.cool_down_period = cool_down_period
        __self__.disk_utilization = disk_utilization
        __self__.max_concurrent_requests = max_concurrent_requests
        __self__.max_idle_instances = max_idle_instances
        __self__.max_pending_latency = max_pending_latency
        __self__.max_total_instances = max_total_instances
        __self__.min_idle_instances = min_idle_instances
        __self__.min_pending_latency = min_pending_latency
        __self__.min_total_instances = min_total_instances
        __self__.network_utilization = network_utilization
        __self__.request_utilization = request_utilization

@pulumi.input_type
class FlexibleAppVersionAutomaticScalingCpuUtilizationArgs:
    target_utilization: pulumi.Input[float] = pulumi.input_property("targetUtilization")
    """
    Target CPU utilization ratio to maintain when scaling. Must be between 0 and 1.
    """
    aggregation_window_length: Optional[pulumi.Input[str]] = pulumi.input_property("aggregationWindowLength")
    """
    Period of time over which CPU utilization is calculated.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, target_utilization: pulumi.Input[float], aggregation_window_length: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] target_utilization: Target CPU utilization ratio to maintain when scaling. Must be between 0 and 1.
        :param pulumi.Input[str] aggregation_window_length: Period of time over which CPU utilization is calculated.
        """
        __self__.target_utilization = target_utilization
        __self__.aggregation_window_length = aggregation_window_length

@pulumi.input_type
class FlexibleAppVersionAutomaticScalingDiskUtilizationArgs:
    target_read_bytes_per_second: Optional[pulumi.Input[float]] = pulumi.input_property("targetReadBytesPerSecond")
    """
    Target bytes read per second.
    """
    target_read_ops_per_second: Optional[pulumi.Input[float]] = pulumi.input_property("targetReadOpsPerSecond")
    """
    Target ops read per seconds.
    """
    target_write_bytes_per_second: Optional[pulumi.Input[float]] = pulumi.input_property("targetWriteBytesPerSecond")
    """
    Target bytes written per second.
    """
    target_write_ops_per_second: Optional[pulumi.Input[float]] = pulumi.input_property("targetWriteOpsPerSecond")
    """
    Target ops written per second.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, target_read_bytes_per_second: Optional[pulumi.Input[float]] = None, target_read_ops_per_second: Optional[pulumi.Input[float]] = None, target_write_bytes_per_second: Optional[pulumi.Input[float]] = None, target_write_ops_per_second: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] target_read_bytes_per_second: Target bytes read per second.
        :param pulumi.Input[float] target_read_ops_per_second: Target ops read per seconds.
        :param pulumi.Input[float] target_write_bytes_per_second: Target bytes written per second.
        :param pulumi.Input[float] target_write_ops_per_second: Target ops written per second.
        """
        __self__.target_read_bytes_per_second = target_read_bytes_per_second
        __self__.target_read_ops_per_second = target_read_ops_per_second
        __self__.target_write_bytes_per_second = target_write_bytes_per_second
        __self__.target_write_ops_per_second = target_write_ops_per_second

@pulumi.input_type
class FlexibleAppVersionAutomaticScalingNetworkUtilizationArgs:
    target_received_bytes_per_second: Optional[pulumi.Input[float]] = pulumi.input_property("targetReceivedBytesPerSecond")
    """
    Target bytes received per second.
    """
    target_received_packets_per_second: Optional[pulumi.Input[float]] = pulumi.input_property("targetReceivedPacketsPerSecond")
    """
    Target packets received per second.
    """
    target_sent_bytes_per_second: Optional[pulumi.Input[float]] = pulumi.input_property("targetSentBytesPerSecond")
    """
    Target bytes sent per second.
    """
    target_sent_packets_per_second: Optional[pulumi.Input[float]] = pulumi.input_property("targetSentPacketsPerSecond")
    """
    Target packets sent per second.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, target_received_bytes_per_second: Optional[pulumi.Input[float]] = None, target_received_packets_per_second: Optional[pulumi.Input[float]] = None, target_sent_bytes_per_second: Optional[pulumi.Input[float]] = None, target_sent_packets_per_second: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] target_received_bytes_per_second: Target bytes received per second.
        :param pulumi.Input[float] target_received_packets_per_second: Target packets received per second.
        :param pulumi.Input[float] target_sent_bytes_per_second: Target bytes sent per second.
        :param pulumi.Input[float] target_sent_packets_per_second: Target packets sent per second.
        """
        __self__.target_received_bytes_per_second = target_received_bytes_per_second
        __self__.target_received_packets_per_second = target_received_packets_per_second
        __self__.target_sent_bytes_per_second = target_sent_bytes_per_second
        __self__.target_sent_packets_per_second = target_sent_packets_per_second

@pulumi.input_type
class FlexibleAppVersionAutomaticScalingRequestUtilizationArgs:
    target_concurrent_requests: Optional[pulumi.Input[float]] = pulumi.input_property("targetConcurrentRequests")
    """
    Target number of concurrent requests.
    """
    target_request_count_per_second: Optional[pulumi.Input[str]] = pulumi.input_property("targetRequestCountPerSecond")
    """
    Target requests per second.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, target_concurrent_requests: Optional[pulumi.Input[float]] = None, target_request_count_per_second: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] target_concurrent_requests: Target number of concurrent requests.
        :param pulumi.Input[str] target_request_count_per_second: Target requests per second.
        """
        __self__.target_concurrent_requests = target_concurrent_requests
        __self__.target_request_count_per_second = target_request_count_per_second

@pulumi.input_type
class FlexibleAppVersionDeploymentArgs:
    cloud_build_options: Optional[pulumi.Input['FlexibleAppVersionDeploymentCloudBuildOptionsArgs']] = pulumi.input_property("cloudBuildOptions")
    """
    Options for the build operations performed as a part of the version deployment. Only applicable when creating a version using source code directly.  Structure is documented below.
    """
    container: Optional[pulumi.Input['FlexibleAppVersionDeploymentContainerArgs']] = pulumi.input_property("container")
    """
    The Docker image for the container that runs the version.  Structure is documented below.
    """
    files: Optional[pulumi.Input[List[pulumi.Input['FlexibleAppVersionDeploymentFileArgs']]]] = pulumi.input_property("files")
    """
    Manifest of the files stored in Google Cloud Storage that are included as part of this version.
    All files must be readable using the credentials supplied with this call.  Structure is documented below.
    """
    zip: Optional[pulumi.Input['FlexibleAppVersionDeploymentZipArgs']] = pulumi.input_property("zip")
    """
    Zip File  Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cloud_build_options: Optional[pulumi.Input['FlexibleAppVersionDeploymentCloudBuildOptionsArgs']] = None, container: Optional[pulumi.Input['FlexibleAppVersionDeploymentContainerArgs']] = None, files: Optional[pulumi.Input[List[pulumi.Input['FlexibleAppVersionDeploymentFileArgs']]]] = None, zip: Optional[pulumi.Input['FlexibleAppVersionDeploymentZipArgs']] = None) -> None:
        """
        :param pulumi.Input['FlexibleAppVersionDeploymentCloudBuildOptionsArgs'] cloud_build_options: Options for the build operations performed as a part of the version deployment. Only applicable when creating a version using source code directly.  Structure is documented below.
        :param pulumi.Input['FlexibleAppVersionDeploymentContainerArgs'] container: The Docker image for the container that runs the version.  Structure is documented below.
        :param pulumi.Input[List[pulumi.Input['FlexibleAppVersionDeploymentFileArgs']]] files: Manifest of the files stored in Google Cloud Storage that are included as part of this version.
               All files must be readable using the credentials supplied with this call.  Structure is documented below.
        :param pulumi.Input['FlexibleAppVersionDeploymentZipArgs'] zip: Zip File  Structure is documented below.
        """
        __self__.cloud_build_options = cloud_build_options
        __self__.container = container
        __self__.files = files
        __self__.zip = zip

@pulumi.input_type
class FlexibleAppVersionDeploymentCloudBuildOptionsArgs:
    app_yaml_path: pulumi.Input[str] = pulumi.input_property("appYamlPath")
    """
    Path to the yaml file used in deployment, used to determine runtime configuration details.
    """
    cloud_build_timeout: Optional[pulumi.Input[str]] = pulumi.input_property("cloudBuildTimeout")
    """
    The Cloud Build timeout used as part of any dependent builds performed by version creation. Defaults to 10 minutes.
    A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, app_yaml_path: pulumi.Input[str], cloud_build_timeout: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] app_yaml_path: Path to the yaml file used in deployment, used to determine runtime configuration details.
        :param pulumi.Input[str] cloud_build_timeout: The Cloud Build timeout used as part of any dependent builds performed by version creation. Defaults to 10 minutes.
               A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        """
        __self__.app_yaml_path = app_yaml_path
        __self__.cloud_build_timeout = cloud_build_timeout

@pulumi.input_type
class FlexibleAppVersionDeploymentContainerArgs:
    image: pulumi.Input[str] = pulumi.input_property("image")
    """
    URI to the hosted container image in Google Container Registry. The URI must be fully qualified and include a tag or digest.
    Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest"
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, image: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] image: URI to the hosted container image in Google Container Registry. The URI must be fully qualified and include a tag or digest.
               Examples: "gcr.io/my-project/image:tag" or "gcr.io/my-project/image@digest"
        """
        __self__.image = image

@pulumi.input_type
class FlexibleAppVersionDeploymentFileArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
    """
    source_url: pulumi.Input[str] = pulumi.input_property("sourceUrl")
    """
    Source URL
    """
    sha1_sum: Optional[pulumi.Input[str]] = pulumi.input_property("sha1Sum")
    """
    SHA1 checksum of the file
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], source_url: pulumi.Input[str], sha1_sum: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
        :param pulumi.Input[str] source_url: Source URL
        :param pulumi.Input[str] sha1_sum: SHA1 checksum of the file
        """
        __self__.name = name
        __self__.source_url = source_url
        __self__.sha1_sum = sha1_sum

@pulumi.input_type
class FlexibleAppVersionDeploymentZipArgs:
    source_url: pulumi.Input[str] = pulumi.input_property("sourceUrl")
    """
    Source URL
    """
    files_count: Optional[pulumi.Input[float]] = pulumi.input_property("filesCount")
    """
    files count
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, source_url: pulumi.Input[str], files_count: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] source_url: Source URL
        :param pulumi.Input[float] files_count: files count
        """
        __self__.source_url = source_url
        __self__.files_count = files_count

@pulumi.input_type
class FlexibleAppVersionEndpointsApiServiceArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
    """
    config_id: Optional[pulumi.Input[str]] = pulumi.input_property("configId")
    """
    Endpoints service configuration ID as specified by the Service Management API. For example "2016-09-19r1".
    By default, the rollout strategy for Endpoints is "FIXED". This means that Endpoints starts up with a particular configuration ID.
    When a new configuration is rolled out, Endpoints must be given the new configuration ID. The configId field is used to give the configuration ID
    and is required in this case.
    Endpoints also has a rollout strategy called "MANAGED". When using this, Endpoints fetches the latest configuration and does not need
    the configuration ID. In this case, configId must be omitted.
    """
    disable_trace_sampling: Optional[pulumi.Input[bool]] = pulumi.input_property("disableTraceSampling")
    """
    Enable or disable trace sampling. By default, this is set to false for enabled.
    """
    rollout_strategy: Optional[pulumi.Input[str]] = pulumi.input_property("rolloutStrategy")
    """
    Endpoints rollout strategy. If FIXED, configId must be specified. If MANAGED, configId must be omitted.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], config_id: Optional[pulumi.Input[str]] = None, disable_trace_sampling: Optional[pulumi.Input[bool]] = None, rollout_strategy: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
        :param pulumi.Input[str] config_id: Endpoints service configuration ID as specified by the Service Management API. For example "2016-09-19r1".
               By default, the rollout strategy for Endpoints is "FIXED". This means that Endpoints starts up with a particular configuration ID.
               When a new configuration is rolled out, Endpoints must be given the new configuration ID. The configId field is used to give the configuration ID
               and is required in this case.
               Endpoints also has a rollout strategy called "MANAGED". When using this, Endpoints fetches the latest configuration and does not need
               the configuration ID. In this case, configId must be omitted.
        :param pulumi.Input[bool] disable_trace_sampling: Enable or disable trace sampling. By default, this is set to false for enabled.
        :param pulumi.Input[str] rollout_strategy: Endpoints rollout strategy. If FIXED, configId must be specified. If MANAGED, configId must be omitted.
        """
        __self__.name = name
        __self__.config_id = config_id
        __self__.disable_trace_sampling = disable_trace_sampling
        __self__.rollout_strategy = rollout_strategy

@pulumi.input_type
class FlexibleAppVersionEntrypointArgs:
    shell: pulumi.Input[str] = pulumi.input_property("shell")
    """
    The format should be a shell command that can be fed to bash -c.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, shell: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] shell: The format should be a shell command that can be fed to bash -c.
        """
        __self__.shell = shell

@pulumi.input_type
class FlexibleAppVersionHandlerArgs:
    auth_fail_action: Optional[pulumi.Input[str]] = pulumi.input_property("authFailAction")
    """
    Action to take when users access resources that require authentication.
    """
    login: Optional[pulumi.Input[str]] = pulumi.input_property("login")
    """
    Level of login required to access this resource.
    """
    redirect_http_response_code: Optional[pulumi.Input[str]] = pulumi.input_property("redirectHttpResponseCode")
    """
    30x code to use when performing redirects for the secure field.
    """
    script: Optional[pulumi.Input['FlexibleAppVersionHandlerScriptArgs']] = pulumi.input_property("script")
    """
    Path to the script from the application root directory.
    """
    security_level: Optional[pulumi.Input[str]] = pulumi.input_property("securityLevel")
    """
    Security (HTTPS) enforcement for this URL.
    """
    static_files: Optional[pulumi.Input['FlexibleAppVersionHandlerStaticFilesArgs']] = pulumi.input_property("staticFiles")
    """
    Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files.
    Static file handlers describe which files in the application directory are static files, and which URLs serve them.  Structure is documented below.
    """
    url_regex: Optional[pulumi.Input[str]] = pulumi.input_property("urlRegex")
    """
    URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
    All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, auth_fail_action: Optional[pulumi.Input[str]] = None, login: Optional[pulumi.Input[str]] = None, redirect_http_response_code: Optional[pulumi.Input[str]] = None, script: Optional[pulumi.Input['FlexibleAppVersionHandlerScriptArgs']] = None, security_level: Optional[pulumi.Input[str]] = None, static_files: Optional[pulumi.Input['FlexibleAppVersionHandlerStaticFilesArgs']] = None, url_regex: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] auth_fail_action: Action to take when users access resources that require authentication.
        :param pulumi.Input[str] login: Level of login required to access this resource.
        :param pulumi.Input[str] redirect_http_response_code: 30x code to use when performing redirects for the secure field.
        :param pulumi.Input['FlexibleAppVersionHandlerScriptArgs'] script: Path to the script from the application root directory.
        :param pulumi.Input[str] security_level: Security (HTTPS) enforcement for this URL.
        :param pulumi.Input['FlexibleAppVersionHandlerStaticFilesArgs'] static_files: Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files.
               Static file handlers describe which files in the application directory are static files, and which URLs serve them.  Structure is documented below.
        :param pulumi.Input[str] url_regex: URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
               All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
        """
        __self__.auth_fail_action = auth_fail_action
        __self__.login = login
        __self__.redirect_http_response_code = redirect_http_response_code
        __self__.script = script
        __self__.security_level = security_level
        __self__.static_files = static_files
        __self__.url_regex = url_regex

@pulumi.input_type
class FlexibleAppVersionHandlerScriptArgs:
    script_path: pulumi.Input[str] = pulumi.input_property("scriptPath")
    """
    Path to the script from the application root directory.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, script_path: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] script_path: Path to the script from the application root directory.
        """
        __self__.script_path = script_path

@pulumi.input_type
class FlexibleAppVersionHandlerStaticFilesArgs:
    application_readable: Optional[pulumi.Input[bool]] = pulumi.input_property("applicationReadable")
    """
    Whether files should also be uploaded as code data. By default, files declared in static file handlers are
    uploaded as static data and are only served to end users; they cannot be read by the application. If enabled,
    uploads are charged against both your code and static data storage resource quotas.
    """
    expiration: Optional[pulumi.Input[str]] = pulumi.input_property("expiration")
    """
    Time a static file served by this handler should be cached by web proxies and browsers.
    A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
    Default is '0s'
    """
    http_headers: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("httpHeaders")
    """
    HTTP headers to use for all responses from these URLs.
    An object containing a list of "key:value" value pairs.".
    """
    mime_type: Optional[pulumi.Input[str]] = pulumi.input_property("mimeType")
    """
    MIME type used to serve all files served by this handler.
    Defaults to file-specific MIME types, which are derived from each file's filename extension.
    """
    path: Optional[pulumi.Input[str]] = pulumi.input_property("path")
    """
    Path to the static files matched by the URL pattern, from the application root directory.
    The path can refer to text matched in groupings in the URL pattern.
    """
    require_matching_file: Optional[pulumi.Input[bool]] = pulumi.input_property("requireMatchingFile")
    """
    Whether this handler should match the request if the file referenced by the handler does not exist.
    """
    upload_path_regex: Optional[pulumi.Input[str]] = pulumi.input_property("uploadPathRegex")
    """
    Regular expression that matches the file paths for all files that should be referenced by this handler.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, application_readable: Optional[pulumi.Input[bool]] = None, expiration: Optional[pulumi.Input[str]] = None, http_headers: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, mime_type: Optional[pulumi.Input[str]] = None, path: Optional[pulumi.Input[str]] = None, require_matching_file: Optional[pulumi.Input[bool]] = None, upload_path_regex: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] application_readable: Whether files should also be uploaded as code data. By default, files declared in static file handlers are
               uploaded as static data and are only served to end users; they cannot be read by the application. If enabled,
               uploads are charged against both your code and static data storage resource quotas.
        :param pulumi.Input[str] expiration: Time a static file served by this handler should be cached by web proxies and browsers.
               A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
               Default is '0s'
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] http_headers: HTTP headers to use for all responses from these URLs.
               An object containing a list of "key:value" value pairs.".
        :param pulumi.Input[str] mime_type: MIME type used to serve all files served by this handler.
               Defaults to file-specific MIME types, which are derived from each file's filename extension.
        :param pulumi.Input[str] path: Path to the static files matched by the URL pattern, from the application root directory.
               The path can refer to text matched in groupings in the URL pattern.
        :param pulumi.Input[bool] require_matching_file: Whether this handler should match the request if the file referenced by the handler does not exist.
        :param pulumi.Input[str] upload_path_regex: Regular expression that matches the file paths for all files that should be referenced by this handler.
        """
        __self__.application_readable = application_readable
        __self__.expiration = expiration
        __self__.http_headers = http_headers
        __self__.mime_type = mime_type
        __self__.path = path
        __self__.require_matching_file = require_matching_file
        __self__.upload_path_regex = upload_path_regex

@pulumi.input_type
class FlexibleAppVersionLivenessCheckArgs:
    path: pulumi.Input[str] = pulumi.input_property("path")
    """
    Path to the static files matched by the URL pattern, from the application root directory.
    The path can refer to text matched in groupings in the URL pattern.
    """
    check_interval: Optional[pulumi.Input[str]] = pulumi.input_property("checkInterval")
    """
    Interval between health checks.
    """
    failure_threshold: Optional[pulumi.Input[float]] = pulumi.input_property("failureThreshold")
    """
    Number of consecutive failed checks required before considering the VM unhealthy. Default: 4.
    """
    host: Optional[pulumi.Input[str]] = pulumi.input_property("host")
    """
    Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com"
    """
    initial_delay: Optional[pulumi.Input[str]] = pulumi.input_property("initialDelay")
    """
    The initial delay before starting to execute the checks. Default: "300s"
    """
    success_threshold: Optional[pulumi.Input[float]] = pulumi.input_property("successThreshold")
    """
    Number of consecutive successful checks required before considering the VM healthy. Default: 2.
    """
    timeout: Optional[pulumi.Input[str]] = pulumi.input_property("timeout")
    """
    Time before the check is considered failed. Default: "4s"
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, path: pulumi.Input[str], check_interval: Optional[pulumi.Input[str]] = None, failure_threshold: Optional[pulumi.Input[float]] = None, host: Optional[pulumi.Input[str]] = None, initial_delay: Optional[pulumi.Input[str]] = None, success_threshold: Optional[pulumi.Input[float]] = None, timeout: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] path: Path to the static files matched by the URL pattern, from the application root directory.
               The path can refer to text matched in groupings in the URL pattern.
        :param pulumi.Input[str] check_interval: Interval between health checks.
        :param pulumi.Input[float] failure_threshold: Number of consecutive failed checks required before considering the VM unhealthy. Default: 4.
        :param pulumi.Input[str] host: Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com"
        :param pulumi.Input[str] initial_delay: The initial delay before starting to execute the checks. Default: "300s"
        :param pulumi.Input[float] success_threshold: Number of consecutive successful checks required before considering the VM healthy. Default: 2.
        :param pulumi.Input[str] timeout: Time before the check is considered failed. Default: "4s"
        """
        __self__.path = path
        __self__.check_interval = check_interval
        __self__.failure_threshold = failure_threshold
        __self__.host = host
        __self__.initial_delay = initial_delay
        __self__.success_threshold = success_threshold
        __self__.timeout = timeout

@pulumi.input_type
class FlexibleAppVersionManualScalingArgs:
    instances: pulumi.Input[float] = pulumi.input_property("instances")
    """
    Number of instances to assign to the service at the start.
    **Note:** When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
    Modules API set_num_instances() you must use `lifecycle.ignore_changes = ["manual_scaling"[0].instances]` to prevent drift detection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, instances: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] instances: Number of instances to assign to the service at the start.
               **Note:** When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
               Modules API set_num_instances() you must use `lifecycle.ignore_changes = ["manual_scaling"[0].instances]` to prevent drift detection.
        """
        __self__.instances = instances

@pulumi.input_type
class FlexibleAppVersionNetworkArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
    """
    forwarded_ports: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("forwardedPorts")
    """
    List of ports, or port pairs, to forward from the virtual machine to the application container.
    """
    instance_tag: Optional[pulumi.Input[str]] = pulumi.input_property("instanceTag")
    """
    Tag to apply to the instance during creation.
    """
    session_affinity: Optional[pulumi.Input[bool]] = pulumi.input_property("sessionAffinity")
    """
    Enable session affinity.
    """
    subnetwork: Optional[pulumi.Input[str]] = pulumi.input_property("subnetwork")
    """
    Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
    If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
    If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
    If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
    If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], forwarded_ports: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, instance_tag: Optional[pulumi.Input[str]] = None, session_affinity: Optional[pulumi.Input[bool]] = None, subnetwork: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
        :param pulumi.Input[List[pulumi.Input[str]]] forwarded_ports: List of ports, or port pairs, to forward from the virtual machine to the application container.
        :param pulumi.Input[str] instance_tag: Tag to apply to the instance during creation.
        :param pulumi.Input[bool] session_affinity: Enable session affinity.
        :param pulumi.Input[str] subnetwork: Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
               If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
               If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
               If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
               If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
        """
        __self__.name = name
        __self__.forwarded_ports = forwarded_ports
        __self__.instance_tag = instance_tag
        __self__.session_affinity = session_affinity
        __self__.subnetwork = subnetwork

@pulumi.input_type
class FlexibleAppVersionReadinessCheckArgs:
    path: pulumi.Input[str] = pulumi.input_property("path")
    """
    Path to the static files matched by the URL pattern, from the application root directory.
    The path can refer to text matched in groupings in the URL pattern.
    """
    app_start_timeout: Optional[pulumi.Input[str]] = pulumi.input_property("appStartTimeout")
    """
    A maximum time limit on application initialization, measured from moment the application successfully
    replies to a healthcheck until it is ready to serve traffic. Default: "300s"
    """
    check_interval: Optional[pulumi.Input[str]] = pulumi.input_property("checkInterval")
    """
    Interval between health checks.
    """
    failure_threshold: Optional[pulumi.Input[float]] = pulumi.input_property("failureThreshold")
    """
    Number of consecutive failed checks required before considering the VM unhealthy. Default: 4.
    """
    host: Optional[pulumi.Input[str]] = pulumi.input_property("host")
    """
    Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com"
    """
    success_threshold: Optional[pulumi.Input[float]] = pulumi.input_property("successThreshold")
    """
    Number of consecutive successful checks required before considering the VM healthy. Default: 2.
    """
    timeout: Optional[pulumi.Input[str]] = pulumi.input_property("timeout")
    """
    Time before the check is considered failed. Default: "4s"
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, path: pulumi.Input[str], app_start_timeout: Optional[pulumi.Input[str]] = None, check_interval: Optional[pulumi.Input[str]] = None, failure_threshold: Optional[pulumi.Input[float]] = None, host: Optional[pulumi.Input[str]] = None, success_threshold: Optional[pulumi.Input[float]] = None, timeout: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] path: Path to the static files matched by the URL pattern, from the application root directory.
               The path can refer to text matched in groupings in the URL pattern.
        :param pulumi.Input[str] app_start_timeout: A maximum time limit on application initialization, measured from moment the application successfully
               replies to a healthcheck until it is ready to serve traffic. Default: "300s"
        :param pulumi.Input[str] check_interval: Interval between health checks.
        :param pulumi.Input[float] failure_threshold: Number of consecutive failed checks required before considering the VM unhealthy. Default: 4.
        :param pulumi.Input[str] host: Host header to send when performing a HTTP Readiness check. Example: "myapp.appspot.com"
        :param pulumi.Input[float] success_threshold: Number of consecutive successful checks required before considering the VM healthy. Default: 2.
        :param pulumi.Input[str] timeout: Time before the check is considered failed. Default: "4s"
        """
        __self__.path = path
        __self__.app_start_timeout = app_start_timeout
        __self__.check_interval = check_interval
        __self__.failure_threshold = failure_threshold
        __self__.host = host
        __self__.success_threshold = success_threshold
        __self__.timeout = timeout

@pulumi.input_type
class FlexibleAppVersionResourcesArgs:
    cpu: Optional[pulumi.Input[float]] = pulumi.input_property("cpu")
    """
    Number of CPU cores needed.
    """
    disk_gb: Optional[pulumi.Input[float]] = pulumi.input_property("diskGb")
    """
    Disk size (GB) needed.
    """
    memory_gb: Optional[pulumi.Input[float]] = pulumi.input_property("memoryGb")
    """
    Memory (GB) needed.
    """
    volumes: Optional[pulumi.Input[List[pulumi.Input['FlexibleAppVersionResourcesVolumeArgs']]]] = pulumi.input_property("volumes")
    """
    List of ports, or port pairs, to forward from the virtual machine to the application container.  Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cpu: Optional[pulumi.Input[float]] = None, disk_gb: Optional[pulumi.Input[float]] = None, memory_gb: Optional[pulumi.Input[float]] = None, volumes: Optional[pulumi.Input[List[pulumi.Input['FlexibleAppVersionResourcesVolumeArgs']]]] = None) -> None:
        """
        :param pulumi.Input[float] cpu: Number of CPU cores needed.
        :param pulumi.Input[float] disk_gb: Disk size (GB) needed.
        :param pulumi.Input[float] memory_gb: Memory (GB) needed.
        :param pulumi.Input[List[pulumi.Input['FlexibleAppVersionResourcesVolumeArgs']]] volumes: List of ports, or port pairs, to forward from the virtual machine to the application container.  Structure is documented below.
        """
        __self__.cpu = cpu
        __self__.disk_gb = disk_gb
        __self__.memory_gb = memory_gb
        __self__.volumes = volumes

@pulumi.input_type
class FlexibleAppVersionResourcesVolumeArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
    """
    size_gb: pulumi.Input[float] = pulumi.input_property("sizeGb")
    """
    Volume size in gigabytes.
    """
    volume_type: pulumi.Input[str] = pulumi.input_property("volumeType")
    """
    Underlying volume type, e.g. 'tmpfs'.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], size_gb: pulumi.Input[float], volume_type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
        :param pulumi.Input[float] size_gb: Volume size in gigabytes.
        :param pulumi.Input[str] volume_type: Underlying volume type, e.g. 'tmpfs'.
        """
        __self__.name = name
        __self__.size_gb = size_gb
        __self__.volume_type = volume_type

@pulumi.input_type
class FlexibleAppVersionVpcAccessConnectorArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
        """
        __self__.name = name

@pulumi.input_type
class StandardAppVersionAutomaticScalingArgs:
    max_concurrent_requests: Optional[pulumi.Input[float]] = pulumi.input_property("maxConcurrentRequests")
    """
    Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.
    Defaults to a runtime-specific value.
    """
    max_idle_instances: Optional[pulumi.Input[float]] = pulumi.input_property("maxIdleInstances")
    """
    Maximum number of idle instances that should be maintained for this version.
    """
    max_pending_latency: Optional[pulumi.Input[str]] = pulumi.input_property("maxPendingLatency")
    """
    Maximum amount of time that a request should wait in the pending queue before starting a new instance to handle it.
    A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    """
    min_idle_instances: Optional[pulumi.Input[float]] = pulumi.input_property("minIdleInstances")
    """
    Minimum number of idle instances that should be maintained for this version. Only applicable for the default version of a service.
    """
    min_pending_latency: Optional[pulumi.Input[str]] = pulumi.input_property("minPendingLatency")
    """
    Minimum amount of time a request should wait in the pending queue before starting a new instance to handle it.
    A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    """
    standard_scheduler_settings: Optional[pulumi.Input['StandardAppVersionAutomaticScalingStandardSchedulerSettingsArgs']] = pulumi.input_property("standardSchedulerSettings")
    """
    Scheduler settings for standard environment.  Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, max_concurrent_requests: Optional[pulumi.Input[float]] = None, max_idle_instances: Optional[pulumi.Input[float]] = None, max_pending_latency: Optional[pulumi.Input[str]] = None, min_idle_instances: Optional[pulumi.Input[float]] = None, min_pending_latency: Optional[pulumi.Input[str]] = None, standard_scheduler_settings: Optional[pulumi.Input['StandardAppVersionAutomaticScalingStandardSchedulerSettingsArgs']] = None) -> None:
        """
        :param pulumi.Input[float] max_concurrent_requests: Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance.
               Defaults to a runtime-specific value.
        :param pulumi.Input[float] max_idle_instances: Maximum number of idle instances that should be maintained for this version.
        :param pulumi.Input[str] max_pending_latency: Maximum amount of time that a request should wait in the pending queue before starting a new instance to handle it.
               A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        :param pulumi.Input[float] min_idle_instances: Minimum number of idle instances that should be maintained for this version. Only applicable for the default version of a service.
        :param pulumi.Input[str] min_pending_latency: Minimum amount of time a request should wait in the pending queue before starting a new instance to handle it.
               A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        :param pulumi.Input['StandardAppVersionAutomaticScalingStandardSchedulerSettingsArgs'] standard_scheduler_settings: Scheduler settings for standard environment.  Structure is documented below.
        """
        __self__.max_concurrent_requests = max_concurrent_requests
        __self__.max_idle_instances = max_idle_instances
        __self__.max_pending_latency = max_pending_latency
        __self__.min_idle_instances = min_idle_instances
        __self__.min_pending_latency = min_pending_latency
        __self__.standard_scheduler_settings = standard_scheduler_settings

@pulumi.input_type
class StandardAppVersionAutomaticScalingStandardSchedulerSettingsArgs:
    max_instances: Optional[pulumi.Input[float]] = pulumi.input_property("maxInstances")
    """
    Maximum number of instances to create for this version. Must be in the range [1.0, 200.0].
    """
    min_instances: Optional[pulumi.Input[float]] = pulumi.input_property("minInstances")
    """
    Minimum number of instances to run for this version. Set to zero to disable minInstances configuration.
    """
    target_cpu_utilization: Optional[pulumi.Input[float]] = pulumi.input_property("targetCpuUtilization")
    """
    Target CPU utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
    """
    target_throughput_utilization: Optional[pulumi.Input[float]] = pulumi.input_property("targetThroughputUtilization")
    """
    Target throughput utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, max_instances: Optional[pulumi.Input[float]] = None, min_instances: Optional[pulumi.Input[float]] = None, target_cpu_utilization: Optional[pulumi.Input[float]] = None, target_throughput_utilization: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] max_instances: Maximum number of instances to create for this version. Must be in the range [1.0, 200.0].
        :param pulumi.Input[float] min_instances: Minimum number of instances to run for this version. Set to zero to disable minInstances configuration.
        :param pulumi.Input[float] target_cpu_utilization: Target CPU utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
        :param pulumi.Input[float] target_throughput_utilization: Target throughput utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
        """
        __self__.max_instances = max_instances
        __self__.min_instances = min_instances
        __self__.target_cpu_utilization = target_cpu_utilization
        __self__.target_throughput_utilization = target_throughput_utilization

@pulumi.input_type
class StandardAppVersionBasicScalingArgs:
    max_instances: pulumi.Input[float] = pulumi.input_property("maxInstances")
    """
    Maximum number of instances to create for this version. Must be in the range [1.0, 200.0].
    """
    idle_timeout: Optional[pulumi.Input[str]] = pulumi.input_property("idleTimeout")
    """
    Duration of time after the last request that an instance must wait before the instance is shut down.
    A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s". Defaults to 900s.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, max_instances: pulumi.Input[float], idle_timeout: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] max_instances: Maximum number of instances to create for this version. Must be in the range [1.0, 200.0].
        :param pulumi.Input[str] idle_timeout: Duration of time after the last request that an instance must wait before the instance is shut down.
               A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s". Defaults to 900s.
        """
        __self__.max_instances = max_instances
        __self__.idle_timeout = idle_timeout

@pulumi.input_type
class StandardAppVersionDeploymentArgs:
    files: Optional[pulumi.Input[List[pulumi.Input['StandardAppVersionDeploymentFileArgs']]]] = pulumi.input_property("files")
    """
    Manifest of the files stored in Google Cloud Storage that are included as part of this version.
    All files must be readable using the credentials supplied with this call.  Structure is documented below.
    """
    zip: Optional[pulumi.Input['StandardAppVersionDeploymentZipArgs']] = pulumi.input_property("zip")
    """
    Zip File  Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, files: Optional[pulumi.Input[List[pulumi.Input['StandardAppVersionDeploymentFileArgs']]]] = None, zip: Optional[pulumi.Input['StandardAppVersionDeploymentZipArgs']] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['StandardAppVersionDeploymentFileArgs']]] files: Manifest of the files stored in Google Cloud Storage that are included as part of this version.
               All files must be readable using the credentials supplied with this call.  Structure is documented below.
        :param pulumi.Input['StandardAppVersionDeploymentZipArgs'] zip: Zip File  Structure is documented below.
        """
        __self__.files = files
        __self__.zip = zip

@pulumi.input_type
class StandardAppVersionDeploymentFileArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    Name of the library. Example "django".
    """
    source_url: pulumi.Input[str] = pulumi.input_property("sourceUrl")
    """
    Source URL
    """
    sha1_sum: Optional[pulumi.Input[str]] = pulumi.input_property("sha1Sum")
    """
    SHA1 checksum of the file
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], source_url: pulumi.Input[str], sha1_sum: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Name of the library. Example "django".
        :param pulumi.Input[str] source_url: Source URL
        :param pulumi.Input[str] sha1_sum: SHA1 checksum of the file
        """
        __self__.name = name
        __self__.source_url = source_url
        __self__.sha1_sum = sha1_sum

@pulumi.input_type
class StandardAppVersionDeploymentZipArgs:
    source_url: pulumi.Input[str] = pulumi.input_property("sourceUrl")
    """
    Source URL
    """
    files_count: Optional[pulumi.Input[float]] = pulumi.input_property("filesCount")
    """
    files count
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, source_url: pulumi.Input[str], files_count: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] source_url: Source URL
        :param pulumi.Input[float] files_count: files count
        """
        __self__.source_url = source_url
        __self__.files_count = files_count

@pulumi.input_type
class StandardAppVersionEntrypointArgs:
    shell: pulumi.Input[str] = pulumi.input_property("shell")
    """
    The format should be a shell command that can be fed to bash -c.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, shell: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] shell: The format should be a shell command that can be fed to bash -c.
        """
        __self__.shell = shell

@pulumi.input_type
class StandardAppVersionHandlerArgs:
    auth_fail_action: Optional[pulumi.Input[str]] = pulumi.input_property("authFailAction")
    """
    Actions to take when the user is not logged in.
    """
    login: Optional[pulumi.Input[str]] = pulumi.input_property("login")
    """
    Methods to restrict access to a URL based on login status.
    """
    redirect_http_response_code: Optional[pulumi.Input[str]] = pulumi.input_property("redirectHttpResponseCode")
    """
    30x code to use when performing redirects for the secure field.
    """
    script: Optional[pulumi.Input['StandardAppVersionHandlerScriptArgs']] = pulumi.input_property("script")
    """
    Executes a script to handle the requests that match this URL pattern.
    Only the auto value is supported for Node.js in the App Engine standard environment, for example "script:" "auto".  Structure is documented below.
    """
    security_level: Optional[pulumi.Input[str]] = pulumi.input_property("securityLevel")
    """
    Security (HTTPS) enforcement for this URL.
    """
    static_files: Optional[pulumi.Input['StandardAppVersionHandlerStaticFilesArgs']] = pulumi.input_property("staticFiles")
    """
    Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them.  Structure is documented below.
    """
    url_regex: Optional[pulumi.Input[str]] = pulumi.input_property("urlRegex")
    """
    URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
    All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, auth_fail_action: Optional[pulumi.Input[str]] = None, login: Optional[pulumi.Input[str]] = None, redirect_http_response_code: Optional[pulumi.Input[str]] = None, script: Optional[pulumi.Input['StandardAppVersionHandlerScriptArgs']] = None, security_level: Optional[pulumi.Input[str]] = None, static_files: Optional[pulumi.Input['StandardAppVersionHandlerStaticFilesArgs']] = None, url_regex: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] auth_fail_action: Actions to take when the user is not logged in.
        :param pulumi.Input[str] login: Methods to restrict access to a URL based on login status.
        :param pulumi.Input[str] redirect_http_response_code: 30x code to use when performing redirects for the secure field.
        :param pulumi.Input['StandardAppVersionHandlerScriptArgs'] script: Executes a script to handle the requests that match this URL pattern.
               Only the auto value is supported for Node.js in the App Engine standard environment, for example "script:" "auto".  Structure is documented below.
        :param pulumi.Input[str] security_level: Security (HTTPS) enforcement for this URL.
        :param pulumi.Input['StandardAppVersionHandlerStaticFilesArgs'] static_files: Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them.  Structure is documented below.
        :param pulumi.Input[str] url_regex: URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings.
               All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
        """
        __self__.auth_fail_action = auth_fail_action
        __self__.login = login
        __self__.redirect_http_response_code = redirect_http_response_code
        __self__.script = script
        __self__.security_level = security_level
        __self__.static_files = static_files
        __self__.url_regex = url_regex

@pulumi.input_type
class StandardAppVersionHandlerScriptArgs:
    script_path: pulumi.Input[str] = pulumi.input_property("scriptPath")
    """
    Path to the script from the application root directory.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, script_path: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] script_path: Path to the script from the application root directory.
        """
        __self__.script_path = script_path

@pulumi.input_type
class StandardAppVersionHandlerStaticFilesArgs:
    application_readable: Optional[pulumi.Input[bool]] = pulumi.input_property("applicationReadable")
    """
    Whether files should also be uploaded as code data. By default, files declared in static file handlers are uploaded as
    static data and are only served to end users; they cannot be read by the application. If enabled, uploads are charged
    against both your code and static data storage resource quotas.
    """
    expiration: Optional[pulumi.Input[str]] = pulumi.input_property("expiration")
    """
    Time a static file served by this handler should be cached by web proxies and browsers.
    A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
    """
    http_headers: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("httpHeaders")
    """
    HTTP headers to use for all responses from these URLs.
    An object containing a list of "key:value" value pairs.".
    """
    mime_type: Optional[pulumi.Input[str]] = pulumi.input_property("mimeType")
    """
    MIME type used to serve all files served by this handler.
    Defaults to file-specific MIME types, which are derived from each file's filename extension.
    """
    path: Optional[pulumi.Input[str]] = pulumi.input_property("path")
    """
    Path to the static files matched by the URL pattern, from the application root directory. The path can refer to text matched in groupings in the URL pattern.
    """
    require_matching_file: Optional[pulumi.Input[bool]] = pulumi.input_property("requireMatchingFile")
    """
    Whether this handler should match the request if the file referenced by the handler does not exist.
    """
    upload_path_regex: Optional[pulumi.Input[str]] = pulumi.input_property("uploadPathRegex")
    """
    Regular expression that matches the file paths for all files that should be referenced by this handler.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, application_readable: Optional[pulumi.Input[bool]] = None, expiration: Optional[pulumi.Input[str]] = None, http_headers: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, mime_type: Optional[pulumi.Input[str]] = None, path: Optional[pulumi.Input[str]] = None, require_matching_file: Optional[pulumi.Input[bool]] = None, upload_path_regex: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] application_readable: Whether files should also be uploaded as code data. By default, files declared in static file handlers are uploaded as
               static data and are only served to end users; they cannot be read by the application. If enabled, uploads are charged
               against both your code and static data storage resource quotas.
        :param pulumi.Input[str] expiration: Time a static file served by this handler should be cached by web proxies and browsers.
               A duration in seconds with up to nine fractional digits, terminated by 's'. Example "3.5s".
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] http_headers: HTTP headers to use for all responses from these URLs.
               An object containing a list of "key:value" value pairs.".
        :param pulumi.Input[str] mime_type: MIME type used to serve all files served by this handler.
               Defaults to file-specific MIME types, which are derived from each file's filename extension.
        :param pulumi.Input[str] path: Path to the static files matched by the URL pattern, from the application root directory. The path can refer to text matched in groupings in the URL pattern.
        :param pulumi.Input[bool] require_matching_file: Whether this handler should match the request if the file referenced by the handler does not exist.
        :param pulumi.Input[str] upload_path_regex: Regular expression that matches the file paths for all files that should be referenced by this handler.
        """
        __self__.application_readable = application_readable
        __self__.expiration = expiration
        __self__.http_headers = http_headers
        __self__.mime_type = mime_type
        __self__.path = path
        __self__.require_matching_file = require_matching_file
        __self__.upload_path_regex = upload_path_regex

@pulumi.input_type
class StandardAppVersionLibraryArgs:
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Name of the library. Example "django".
    """
    version: Optional[pulumi.Input[str]] = pulumi.input_property("version")
    """
    Version of the library to select, or "latest".
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: Optional[pulumi.Input[str]] = None, version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Name of the library. Example "django".
        :param pulumi.Input[str] version: Version of the library to select, or "latest".
        """
        __self__.name = name
        __self__.version = version

@pulumi.input_type
class StandardAppVersionManualScalingArgs:
    instances: pulumi.Input[float] = pulumi.input_property("instances")
    """
    Number of instances to assign to the service at the start.
    **Note:** When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
    Modules API set_num_instances() you must use `lifecycle.ignore_changes = ["manual_scaling"[0].instances]` to prevent drift detection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, instances: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] instances: Number of instances to assign to the service at the start.
               **Note:** When managing the number of instances at runtime through the App Engine Admin API or the (now deprecated) Python 2
               Modules API set_num_instances() you must use `lifecycle.ignore_changes = ["manual_scaling"[0].instances]` to prevent drift detection.
        """
        __self__.instances = instances

