# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class GroupGroupKeyArgs:
    id: pulumi.Input[str] = pulumi.input_property("id")
    """
    The ID of the entity.
    For Google-managed entities, the id must be the email address of an existing
    group or user.
    For external-identity-mapped entities, the id must be a string conforming
    to the Identity Source's requirements.
    Must be unique within a namespace.
    """
    namespace: Optional[pulumi.Input[str]] = pulumi.input_property("namespace")
    """
    The namespace in which the entity exists.
    If not specified, the EntityKey represents a Google-managed entity
    such as a Google user or a Google Group.
    If specified, the EntityKey represents an external-identity-mapped group.
    The namespace must correspond to an identity source created in Admin Console
    and must be in the form of `identitysources/{identity_source_id}`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, id: pulumi.Input[str], namespace: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] id: The ID of the entity.
               For Google-managed entities, the id must be the email address of an existing
               group or user.
               For external-identity-mapped entities, the id must be a string conforming
               to the Identity Source's requirements.
               Must be unique within a namespace.
        :param pulumi.Input[str] namespace: The namespace in which the entity exists.
               If not specified, the EntityKey represents a Google-managed entity
               such as a Google user or a Google Group.
               If specified, the EntityKey represents an external-identity-mapped group.
               The namespace must correspond to an identity source created in Admin Console
               and must be in the form of `identitysources/{identity_source_id}`.
        """
        __self__.id = id
        __self__.namespace = namespace

@pulumi.input_type
class GroupMembershipMemberKeyArgs:
    id: pulumi.Input[str] = pulumi.input_property("id")
    """
    The ID of the entity.
    For Google-managed entities, the id must be the email address of an existing
    group or user.
    For external-identity-mapped entities, the id must be a string conforming
    to the Identity Source's requirements.
    Must be unique within a namespace.
    """
    namespace: Optional[pulumi.Input[str]] = pulumi.input_property("namespace")
    """
    The namespace in which the entity exists.
    If not specified, the EntityKey represents a Google-managed entity
    such as a Google user or a Google Group.
    If specified, the EntityKey represents an external-identity-mapped group.
    The namespace must correspond to an identity source created in Admin Console
    and must be in the form of `identitysources/{identity_source_id}`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, id: pulumi.Input[str], namespace: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] id: The ID of the entity.
               For Google-managed entities, the id must be the email address of an existing
               group or user.
               For external-identity-mapped entities, the id must be a string conforming
               to the Identity Source's requirements.
               Must be unique within a namespace.
        :param pulumi.Input[str] namespace: The namespace in which the entity exists.
               If not specified, the EntityKey represents a Google-managed entity
               such as a Google user or a Google Group.
               If specified, the EntityKey represents an external-identity-mapped group.
               The namespace must correspond to an identity source created in Admin Console
               and must be in the form of `identitysources/{identity_source_id}`.
        """
        __self__.id = id
        __self__.namespace = namespace

@pulumi.input_type
class GroupMembershipPreferredMemberKeyArgs:
    id: pulumi.Input[str] = pulumi.input_property("id")
    """
    The ID of the entity.
    For Google-managed entities, the id must be the email address of an existing
    group or user.
    For external-identity-mapped entities, the id must be a string conforming
    to the Identity Source's requirements.
    Must be unique within a namespace.
    """
    namespace: Optional[pulumi.Input[str]] = pulumi.input_property("namespace")
    """
    The namespace in which the entity exists.
    If not specified, the EntityKey represents a Google-managed entity
    such as a Google user or a Google Group.
    If specified, the EntityKey represents an external-identity-mapped group.
    The namespace must correspond to an identity source created in Admin Console
    and must be in the form of `identitysources/{identity_source_id}`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, id: pulumi.Input[str], namespace: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] id: The ID of the entity.
               For Google-managed entities, the id must be the email address of an existing
               group or user.
               For external-identity-mapped entities, the id must be a string conforming
               to the Identity Source's requirements.
               Must be unique within a namespace.
        :param pulumi.Input[str] namespace: The namespace in which the entity exists.
               If not specified, the EntityKey represents a Google-managed entity
               such as a Google user or a Google Group.
               If specified, the EntityKey represents an external-identity-mapped group.
               The namespace must correspond to an identity source created in Admin Console
               and must be in the form of `identitysources/{identity_source_id}`.
        """
        __self__.id = id
        __self__.namespace = namespace

@pulumi.input_type
class GroupMembershipRoleArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the MembershipRole. Must be one of OWNER, MANAGER, MEMBER.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the MembershipRole. Must be one of OWNER, MANAGER, MEMBER.
        """
        __self__.name = name

