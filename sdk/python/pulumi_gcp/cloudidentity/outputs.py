# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables
from ._inputs import *
from . import outputs

@pulumi.output_type
class GroupGroupKey(dict):
    id: str = pulumi.output_property("id")
    """
    The ID of the entity.
    For Google-managed entities, the id must be the email address of an existing
    group or user.
    For external-identity-mapped entities, the id must be a string conforming
    to the Identity Source's requirements.
    Must be unique within a namespace.
    """
    namespace: Optional[str] = pulumi.output_property("namespace")
    """
    The namespace in which the entity exists.
    If not specified, the EntityKey represents a Google-managed entity
    such as a Google user or a Google Group.
    If specified, the EntityKey represents an external-identity-mapped group.
    The namespace must correspond to an identity source created in Admin Console
    and must be in the form of `identitysources/{identity_source_id}`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GroupMembershipMemberKey(dict):
    id: str = pulumi.output_property("id")
    """
    The ID of the entity.
    For Google-managed entities, the id must be the email address of an existing
    group or user.
    For external-identity-mapped entities, the id must be a string conforming
    to the Identity Source's requirements.
    Must be unique within a namespace.
    """
    namespace: Optional[str] = pulumi.output_property("namespace")
    """
    The namespace in which the entity exists.
    If not specified, the EntityKey represents a Google-managed entity
    such as a Google user or a Google Group.
    If specified, the EntityKey represents an external-identity-mapped group.
    The namespace must correspond to an identity source created in Admin Console
    and must be in the form of `identitysources/{identity_source_id}`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GroupMembershipPreferredMemberKey(dict):
    id: str = pulumi.output_property("id")
    """
    The ID of the entity.
    For Google-managed entities, the id must be the email address of an existing
    group or user.
    For external-identity-mapped entities, the id must be a string conforming
    to the Identity Source's requirements.
    Must be unique within a namespace.
    """
    namespace: Optional[str] = pulumi.output_property("namespace")
    """
    The namespace in which the entity exists.
    If not specified, the EntityKey represents a Google-managed entity
    such as a Google user or a Google Group.
    If specified, the EntityKey represents an external-identity-mapped group.
    The namespace must correspond to an identity source created in Admin Console
    and must be in the form of `identitysources/{identity_source_id}`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GroupMembershipRole(dict):
    name: str = pulumi.output_property("name")
    """
    The name of the MembershipRole. Must be one of OWNER, MANAGER, MEMBER.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetGroupMembershipsMembership(dict):
    create_time: str = pulumi.output_property("createTime")
    group: str = pulumi.output_property("group")
    """
    The parent Group resource under which to lookup the Membership names. Must be of the form groups/{group_id}.
    """
    member_keys: List['outputs.GetGroupMembershipsMembershipMemberKey'] = pulumi.output_property("memberKeys")
    name: str = pulumi.output_property("name")
    """
    The name of the MembershipRole. One of OWNER, MANAGER, MEMBER.
    """
    preferred_member_keys: List['outputs.GetGroupMembershipsMembershipPreferredMemberKey'] = pulumi.output_property("preferredMemberKeys")
    roles: List['outputs.GetGroupMembershipsMembershipRole'] = pulumi.output_property("roles")
    """
    The MembershipRoles that apply to the Membership. Structure is documented below.
    """
    type: str = pulumi.output_property("type")
    update_time: str = pulumi.output_property("updateTime")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetGroupMembershipsMembershipMemberKey(dict):
    id: str = pulumi.output_property("id")
    """
    The ID of the entity. For Google-managed entities, the id is the email address of an existing
    group or user. For external-identity-mapped entities, the id is a string conforming
    to the Identity Source's requirements.
    """
    namespace: str = pulumi.output_property("namespace")
    """
    The namespace in which the entity exists.
    If not populated, the EntityKey represents a Google-managed entity
    such as a Google user or a Google Group.
    If populated, the EntityKey represents an external-identity-mapped group.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetGroupMembershipsMembershipPreferredMemberKey(dict):
    id: str = pulumi.output_property("id")
    """
    The ID of the entity. For Google-managed entities, the id is the email address of an existing
    group or user. For external-identity-mapped entities, the id is a string conforming
    to the Identity Source's requirements.
    """
    namespace: str = pulumi.output_property("namespace")
    """
    The namespace in which the entity exists.
    If not populated, the EntityKey represents a Google-managed entity
    such as a Google user or a Google Group.
    If populated, the EntityKey represents an external-identity-mapped group.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetGroupMembershipsMembershipRole(dict):
    name: str = pulumi.output_property("name")
    """
    The name of the MembershipRole. One of OWNER, MANAGER, MEMBER.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetGroupsGroup(dict):
    create_time: str = pulumi.output_property("createTime")
    description: str = pulumi.output_property("description")
    display_name: str = pulumi.output_property("displayName")
    group_keys: List['outputs.GetGroupsGroupGroupKey'] = pulumi.output_property("groupKeys")
    labels: Dict[str, str] = pulumi.output_property("labels")
    name: str = pulumi.output_property("name")
    parent: str = pulumi.output_property("parent")
    """
    The parent resource under which to list all Groups. Must be of the form identitysources/{identity_source_id} for external- identity-mapped groups or customers/{customer_id} for Google Groups.
    """
    update_time: str = pulumi.output_property("updateTime")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetGroupsGroupGroupKey(dict):
    id: str = pulumi.output_property("id")
    namespace: str = pulumi.output_property("namespace")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


