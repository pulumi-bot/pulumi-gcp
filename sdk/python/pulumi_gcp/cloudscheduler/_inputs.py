# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'JobAppEngineHttpTargetArgs',
    'JobAppEngineHttpTargetAppEngineRoutingArgs',
    'JobHttpTargetArgs',
    'JobHttpTargetOauthTokenArgs',
    'JobHttpTargetOidcTokenArgs',
    'JobPubsubTargetArgs',
    'JobRetryConfigArgs',
]

@pulumi.input_type
class JobAppEngineHttpTargetArgs:
    relative_uri: pulumi.Input[str] = pulumi.input_property("relativeUri")
    """
    The relative URI.
    The relative URL must begin with "/" and must be a valid HTTP relative URL.
    It can contain a path, query string arguments, and \# fragments.
    If the relative URL is empty, then the root path "/" will be used.
    No spaces are allowed, and the maximum length allowed is 2083 characters
    """
    app_engine_routing: Optional[pulumi.Input['JobAppEngineHttpTargetAppEngineRoutingArgs']] = pulumi.input_property("appEngineRouting")
    """
    App Engine Routing setting for the job.  Structure is documented below.
    """
    body: Optional[pulumi.Input[str]] = pulumi.input_property("body")
    """
    HTTP request body.
    A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
    It is an error to set body on a job with an incompatible HttpMethod.
    """
    headers: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("headers")
    """
    This map contains the header field names and values.
    Repeated headers are not supported, but a header value can contain commas.
    """
    http_method: Optional[pulumi.Input[str]] = pulumi.input_property("httpMethod")
    """
    Which HTTP method to use for the request.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, relative_uri: pulumi.Input[str], app_engine_routing: Optional[pulumi.Input['JobAppEngineHttpTargetAppEngineRoutingArgs']] = None, body: Optional[pulumi.Input[str]] = None, headers: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, http_method: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] relative_uri: The relative URI.
               The relative URL must begin with "/" and must be a valid HTTP relative URL.
               It can contain a path, query string arguments, and \# fragments.
               If the relative URL is empty, then the root path "/" will be used.
               No spaces are allowed, and the maximum length allowed is 2083 characters
        :param pulumi.Input['JobAppEngineHttpTargetAppEngineRoutingArgs'] app_engine_routing: App Engine Routing setting for the job.  Structure is documented below.
        :param pulumi.Input[str] body: HTTP request body.
               A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
               It is an error to set body on a job with an incompatible HttpMethod.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] headers: This map contains the header field names and values.
               Repeated headers are not supported, but a header value can contain commas.
        :param pulumi.Input[str] http_method: Which HTTP method to use for the request.
        """
        __self__.relative_uri = relative_uri
        __self__.app_engine_routing = app_engine_routing
        __self__.body = body
        __self__.headers = headers
        __self__.http_method = http_method

@pulumi.input_type
class JobAppEngineHttpTargetAppEngineRoutingArgs:
    instance: Optional[pulumi.Input[str]] = pulumi.input_property("instance")
    """
    App instance.
    By default, the job is sent to an instance which is available when the job is attempted.
    """
    service: Optional[pulumi.Input[str]] = pulumi.input_property("service")
    """
    App service.
    By default, the job is sent to the service which is the default service when the job is attempted.
    """
    version: Optional[pulumi.Input[str]] = pulumi.input_property("version")
    """
    App version.
    By default, the job is sent to the version which is the default version when the job is attempted.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, instance: Optional[pulumi.Input[str]] = None, service: Optional[pulumi.Input[str]] = None, version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] instance: App instance.
               By default, the job is sent to an instance which is available when the job is attempted.
        :param pulumi.Input[str] service: App service.
               By default, the job is sent to the service which is the default service when the job is attempted.
        :param pulumi.Input[str] version: App version.
               By default, the job is sent to the version which is the default version when the job is attempted.
        """
        __self__.instance = instance
        __self__.service = service
        __self__.version = version

@pulumi.input_type
class JobHttpTargetArgs:
    uri: pulumi.Input[str] = pulumi.input_property("uri")
    """
    The full URI path that the request will be sent to.
    """
    body: Optional[pulumi.Input[str]] = pulumi.input_property("body")
    """
    HTTP request body.
    A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
    It is an error to set body on a job with an incompatible HttpMethod.
    """
    headers: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("headers")
    """
    This map contains the header field names and values.
    Repeated headers are not supported, but a header value can contain commas.
    """
    http_method: Optional[pulumi.Input[str]] = pulumi.input_property("httpMethod")
    """
    Which HTTP method to use for the request.
    """
    oauth_token: Optional[pulumi.Input['JobHttpTargetOauthTokenArgs']] = pulumi.input_property("oauthToken")
    """
    Contains information needed for generating an OAuth token.
    This type of authorization should be used when sending requests to a GCP endpoint.  Structure is documented below.
    """
    oidc_token: Optional[pulumi.Input['JobHttpTargetOidcTokenArgs']] = pulumi.input_property("oidcToken")
    """
    Contains information needed for generating an OpenID Connect token.
    This type of authorization should be used when sending requests to third party endpoints or Cloud Run.  Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, uri: pulumi.Input[str], body: Optional[pulumi.Input[str]] = None, headers: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, http_method: Optional[pulumi.Input[str]] = None, oauth_token: Optional[pulumi.Input['JobHttpTargetOauthTokenArgs']] = None, oidc_token: Optional[pulumi.Input['JobHttpTargetOidcTokenArgs']] = None) -> None:
        """
        :param pulumi.Input[str] uri: The full URI path that the request will be sent to.
        :param pulumi.Input[str] body: HTTP request body.
               A request body is allowed only if the HTTP method is POST, PUT, or PATCH.
               It is an error to set body on a job with an incompatible HttpMethod.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] headers: This map contains the header field names and values.
               Repeated headers are not supported, but a header value can contain commas.
        :param pulumi.Input[str] http_method: Which HTTP method to use for the request.
        :param pulumi.Input['JobHttpTargetOauthTokenArgs'] oauth_token: Contains information needed for generating an OAuth token.
               This type of authorization should be used when sending requests to a GCP endpoint.  Structure is documented below.
        :param pulumi.Input['JobHttpTargetOidcTokenArgs'] oidc_token: Contains information needed for generating an OpenID Connect token.
               This type of authorization should be used when sending requests to third party endpoints or Cloud Run.  Structure is documented below.
        """
        __self__.uri = uri
        __self__.body = body
        __self__.headers = headers
        __self__.http_method = http_method
        __self__.oauth_token = oauth_token
        __self__.oidc_token = oidc_token

@pulumi.input_type
class JobHttpTargetOauthTokenArgs:
    service_account_email: pulumi.Input[str] = pulumi.input_property("serviceAccountEmail")
    """
    Service account email to be used for generating OAuth token.
    The service account must be within the same project as the job.
    """
    scope: Optional[pulumi.Input[str]] = pulumi.input_property("scope")
    """
    OAuth scope to be used for generating OAuth access token. If not specified,
    "https://www.googleapis.com/auth/cloud-platform" will be used.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, service_account_email: pulumi.Input[str], scope: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] service_account_email: Service account email to be used for generating OAuth token.
               The service account must be within the same project as the job.
        :param pulumi.Input[str] scope: OAuth scope to be used for generating OAuth access token. If not specified,
               "https://www.googleapis.com/auth/cloud-platform" will be used.
        """
        __self__.service_account_email = service_account_email
        __self__.scope = scope

@pulumi.input_type
class JobHttpTargetOidcTokenArgs:
    service_account_email: pulumi.Input[str] = pulumi.input_property("serviceAccountEmail")
    """
    Service account email to be used for generating OAuth token.
    The service account must be within the same project as the job.
    """
    audience: Optional[pulumi.Input[str]] = pulumi.input_property("audience")
    """
    Audience to be used when generating OIDC token. If not specified,
    the URI specified in target will be used.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, service_account_email: pulumi.Input[str], audience: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] service_account_email: Service account email to be used for generating OAuth token.
               The service account must be within the same project as the job.
        :param pulumi.Input[str] audience: Audience to be used when generating OIDC token. If not specified,
               the URI specified in target will be used.
        """
        __self__.service_account_email = service_account_email
        __self__.audience = audience

@pulumi.input_type
class JobPubsubTargetArgs:
    topic_name: pulumi.Input[str] = pulumi.input_property("topicName")
    """
    The full resource name for the Cloud Pub/Sub topic to which
    messages will be published when a job is delivered. ~>**NOTE**:
    The topic name must be in the same format as required by PubSub's
    PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.
    """
    attributes: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("attributes")
    """
    Attributes for PubsubMessage.
    Pubsub message must contain either non-empty data, or at least one attribute.
    """
    data: Optional[pulumi.Input[str]] = pulumi.input_property("data")
    """
    The message payload for PubsubMessage.
    Pubsub message must contain either non-empty data, or at least one attribute.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, topic_name: pulumi.Input[str], attributes: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] topic_name: The full resource name for the Cloud Pub/Sub topic to which
               messages will be published when a job is delivered. ~>**NOTE**:
               The topic name must be in the same format as required by PubSub's
               PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] attributes: Attributes for PubsubMessage.
               Pubsub message must contain either non-empty data, or at least one attribute.
        :param pulumi.Input[str] data: The message payload for PubsubMessage.
               Pubsub message must contain either non-empty data, or at least one attribute.
        """
        __self__.topic_name = topic_name
        __self__.attributes = attributes
        __self__.data = data

@pulumi.input_type
class JobRetryConfigArgs:
    max_backoff_duration: Optional[pulumi.Input[str]] = pulumi.input_property("maxBackoffDuration")
    """
    The maximum amount of time to wait before retrying a job after it fails.
    A duration in seconds with up to nine fractional digits, terminated by 's'.
    """
    max_doublings: Optional[pulumi.Input[float]] = pulumi.input_property("maxDoublings")
    """
    The time between retries will double maxDoublings times.
    A job's retry interval starts at minBackoffDuration,
    then doubles maxDoublings times, then increases linearly,
    and finally retries retries at intervals of maxBackoffDuration up to retryCount times.
    """
    max_retry_duration: Optional[pulumi.Input[str]] = pulumi.input_property("maxRetryDuration")
    """
    The time limit for retrying a failed job, measured from time when an execution was first attempted.
    If specified with retryCount, the job will be retried until both limits are reached.
    A duration in seconds with up to nine fractional digits, terminated by 's'.
    """
    min_backoff_duration: Optional[pulumi.Input[str]] = pulumi.input_property("minBackoffDuration")
    """
    The minimum amount of time to wait before retrying a job after it fails.
    A duration in seconds with up to nine fractional digits, terminated by 's'.
    """
    retry_count: Optional[pulumi.Input[float]] = pulumi.input_property("retryCount")
    """
    The number of attempts that the system will make to run a
    job using the exponential backoff procedure described by maxDoublings.
    Values greater than 5 and negative values are not allowed.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, max_backoff_duration: Optional[pulumi.Input[str]] = None, max_doublings: Optional[pulumi.Input[float]] = None, max_retry_duration: Optional[pulumi.Input[str]] = None, min_backoff_duration: Optional[pulumi.Input[str]] = None, retry_count: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] max_backoff_duration: The maximum amount of time to wait before retrying a job after it fails.
               A duration in seconds with up to nine fractional digits, terminated by 's'.
        :param pulumi.Input[float] max_doublings: The time between retries will double maxDoublings times.
               A job's retry interval starts at minBackoffDuration,
               then doubles maxDoublings times, then increases linearly,
               and finally retries retries at intervals of maxBackoffDuration up to retryCount times.
        :param pulumi.Input[str] max_retry_duration: The time limit for retrying a failed job, measured from time when an execution was first attempted.
               If specified with retryCount, the job will be retried until both limits are reached.
               A duration in seconds with up to nine fractional digits, terminated by 's'.
        :param pulumi.Input[str] min_backoff_duration: The minimum amount of time to wait before retrying a job after it fails.
               A duration in seconds with up to nine fractional digits, terminated by 's'.
        :param pulumi.Input[float] retry_count: The number of attempts that the system will make to run a
               job using the exponential backoff procedure described by maxDoublings.
               Values greater than 5 and negative values are not allowed.
        """
        __self__.max_backoff_duration = max_backoff_duration
        __self__.max_doublings = max_doublings
        __self__.max_retry_duration = max_retry_duration
        __self__.min_backoff_duration = min_backoff_duration
        __self__.retry_count = retry_count

