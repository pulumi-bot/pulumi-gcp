# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class BucketCorArgs:
    max_age_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("maxAgeSeconds")
    """
    The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
    """
    methods: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("methods")
    """
    The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
    """
    origins: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("origins")
    """
    The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
    """
    response_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("responseHeaders")
    """
    The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, max_age_seconds: Optional[pulumi.Input[float]] = None, methods: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, origins: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, response_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[float] max_age_seconds: The value, in seconds, to return in the [Access-Control-Max-Age header](https://www.w3.org/TR/cors/#access-control-max-age-response-header) used in preflight responses.
        :param pulumi.Input[List[pulumi.Input[str]]] methods: The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
        :param pulumi.Input[List[pulumi.Input[str]]] origins: The list of [Origins](https://tools.ietf.org/html/rfc6454) eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
        :param pulumi.Input[List[pulumi.Input[str]]] response_headers: The list of HTTP headers other than the [simple response headers](https://www.w3.org/TR/cors/#simple-response-header) to give permission for the user-agent to share across domains.
        """
        __self__.max_age_seconds = max_age_seconds
        __self__.methods = methods
        __self__.origins = origins
        __self__.response_headers = response_headers

@pulumi.input_type
class BucketEncryptionArgs:
    default_kms_key_name: pulumi.Input[str] = pulumi.input_property("defaultKmsKeyName")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, default_kms_key_name: pulumi.Input[str]) -> None:
        __self__.default_kms_key_name = default_kms_key_name

@pulumi.input_type
class BucketIAMBindingConditionArgs:
    expression: pulumi.Input[str] = pulumi.input_property("expression")
    """
    Textual representation of an expression in Common Expression Language syntax.
    """
    title: pulumi.Input[str] = pulumi.input_property("title")
    """
    A title for the expression, i.e. a short string describing its purpose.
    """
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, expression: pulumi.Input[str], title: pulumi.Input[str], description: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] expression: Textual representation of an expression in Common Expression Language syntax.
        :param pulumi.Input[str] title: A title for the expression, i.e. a short string describing its purpose.
        :param pulumi.Input[str] description: An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        """
        __self__.expression = expression
        __self__.title = title
        __self__.description = description

@pulumi.input_type
class BucketIAMMemberConditionArgs:
    expression: pulumi.Input[str] = pulumi.input_property("expression")
    """
    Textual representation of an expression in Common Expression Language syntax.
    """
    title: pulumi.Input[str] = pulumi.input_property("title")
    """
    A title for the expression, i.e. a short string describing its purpose.
    """
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, expression: pulumi.Input[str], title: pulumi.Input[str], description: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] expression: Textual representation of an expression in Common Expression Language syntax.
        :param pulumi.Input[str] title: A title for the expression, i.e. a short string describing its purpose.
        :param pulumi.Input[str] description: An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        """
        __self__.expression = expression
        __self__.title = title
        __self__.description = description

@pulumi.input_type
class BucketLifecycleRuleArgs:
    action: pulumi.Input['BucketLifecycleRuleActionArgs'] = pulumi.input_property("action")
    """
    The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
    """
    condition: pulumi.Input['BucketLifecycleRuleConditionArgs'] = pulumi.input_property("condition")
    """
    The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input['BucketLifecycleRuleActionArgs'], condition: pulumi.Input['BucketLifecycleRuleConditionArgs']) -> None:
        """
        :param pulumi.Input['BucketLifecycleRuleActionArgs'] action: The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
        :param pulumi.Input['BucketLifecycleRuleConditionArgs'] condition: The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
        """
        __self__.action = action
        __self__.condition = condition

@pulumi.input_type
class BucketLifecycleRuleActionArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
    """
    storage_class: Optional[pulumi.Input[str]] = pulumi.input_property("storageClass")
    """
    The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], storage_class: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The type of the action of this Lifecycle Rule. Supported values include: `Delete` and `SetStorageClass`.
        :param pulumi.Input[str] storage_class: The target [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects affected by this Lifecycle Rule. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`.
        """
        __self__.type = type
        __self__.storage_class = storage_class

@pulumi.input_type
class BucketLifecycleRuleConditionArgs:
    age: Optional[pulumi.Input[float]] = pulumi.input_property("age")
    """
    Minimum age of an object in days to satisfy this condition.
    """
    created_before: Optional[pulumi.Input[str]] = pulumi.input_property("createdBefore")
    """
    Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
    """
    matches_storage_classes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("matchesStorageClasses")
    """
    [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
    """
    num_newer_versions: Optional[pulumi.Input[float]] = pulumi.input_property("numNewerVersions")
    """
    Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
    """
    with_state: Optional[pulumi.Input[str]] = pulumi.input_property("withState")
    """
    Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, age: Optional[pulumi.Input[float]] = None, created_before: Optional[pulumi.Input[str]] = None, matches_storage_classes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, num_newer_versions: Optional[pulumi.Input[float]] = None, with_state: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] age: Minimum age of an object in days to satisfy this condition.
        :param pulumi.Input[str] created_before: Creation date of an object in RFC 3339 (e.g. `2017-06-13`) to satisfy this condition.
        :param pulumi.Input[List[pulumi.Input[str]]] matches_storage_classes: [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `STANDARD`, `DURABLE_REDUCED_AVAILABILITY`.
        :param pulumi.Input[float] num_newer_versions: Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
        :param pulumi.Input[str] with_state: Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
        """
        __self__.age = age
        __self__.created_before = created_before
        __self__.matches_storage_classes = matches_storage_classes
        __self__.num_newer_versions = num_newer_versions
        __self__.with_state = with_state

@pulumi.input_type
class BucketLoggingArgs:
    log_bucket: pulumi.Input[str] = pulumi.input_property("logBucket")
    """
    The bucket that will receive log objects.
    """
    log_object_prefix: Optional[pulumi.Input[str]] = pulumi.input_property("logObjectPrefix")
    """
    The object prefix for log objects. If it's not provided,
    by default GCS sets this to this bucket's name.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, log_bucket: pulumi.Input[str], log_object_prefix: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] log_bucket: The bucket that will receive log objects.
        :param pulumi.Input[str] log_object_prefix: The object prefix for log objects. If it's not provided,
               by default GCS sets this to this bucket's name.
        """
        __self__.log_bucket = log_bucket
        __self__.log_object_prefix = log_object_prefix

@pulumi.input_type
class BucketRetentionPolicyArgs:
    retention_period: pulumi.Input[float] = pulumi.input_property("retentionPeriod")
    """
    The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
    """
    is_locked: Optional[pulumi.Input[bool]] = pulumi.input_property("isLocked")
    """
    If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, retention_period: pulumi.Input[float], is_locked: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[float] retention_period: The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
        :param pulumi.Input[bool] is_locked: If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
        """
        __self__.retention_period = retention_period
        __self__.is_locked = is_locked

@pulumi.input_type
class BucketVersioningArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    While set to `true`, versioning is fully enabled for this bucket.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] enabled: While set to `true`, versioning is fully enabled for this bucket.
        """
        __self__.enabled = enabled

@pulumi.input_type
class BucketWebsiteArgs:
    main_page_suffix: Optional[pulumi.Input[str]] = pulumi.input_property("mainPageSuffix")
    """
    Behaves as the bucket's directory index where
    missing objects are treated as potential directories.
    """
    not_found_page: Optional[pulumi.Input[str]] = pulumi.input_property("notFoundPage")
    """
    The custom object to return when a requested
    resource is not found.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, main_page_suffix: Optional[pulumi.Input[str]] = None, not_found_page: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] main_page_suffix: Behaves as the bucket's directory index where
               missing objects are treated as potential directories.
        :param pulumi.Input[str] not_found_page: The custom object to return when a requested
               resource is not found.
        """
        __self__.main_page_suffix = main_page_suffix
        __self__.not_found_page = not_found_page

@pulumi.input_type
class DefaultObjectAccessControlProjectTeamArgs:
    project_number: Optional[pulumi.Input[str]] = pulumi.input_property("projectNumber")
    team: Optional[pulumi.Input[str]] = pulumi.input_property("team")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, project_number: Optional[pulumi.Input[str]] = None, team: Optional[pulumi.Input[str]] = None) -> None:
        __self__.project_number = project_number
        __self__.team = team

@pulumi.input_type
class ObjectAccessControlProjectTeamArgs:
    project_number: Optional[pulumi.Input[str]] = pulumi.input_property("projectNumber")
    team: Optional[pulumi.Input[str]] = pulumi.input_property("team")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, project_number: Optional[pulumi.Input[str]] = None, team: Optional[pulumi.Input[str]] = None) -> None:
        __self__.project_number = project_number
        __self__.team = team

@pulumi.input_type
class TransferJobScheduleArgs:
    schedule_start_date: pulumi.Input['TransferJobScheduleScheduleStartDateArgs'] = pulumi.input_property("scheduleStartDate")
    """
    The first day the recurring transfer is scheduled to run. If `schedule_start_date` is in the past, the transfer will run for the first time on the following day. Structure documented below.
    """
    schedule_end_date: Optional[pulumi.Input['TransferJobScheduleScheduleEndDateArgs']] = pulumi.input_property("scheduleEndDate")
    """
    The last day the recurring transfer will be run. If `schedule_end_date` is the same as `schedule_start_date`, the transfer will be executed only once. Structure documented below.
    """
    start_time_of_day: Optional[pulumi.Input['TransferJobScheduleStartTimeOfDayArgs']] = pulumi.input_property("startTimeOfDay")
    """
    The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, schedule_start_date: pulumi.Input['TransferJobScheduleScheduleStartDateArgs'], schedule_end_date: Optional[pulumi.Input['TransferJobScheduleScheduleEndDateArgs']] = None, start_time_of_day: Optional[pulumi.Input['TransferJobScheduleStartTimeOfDayArgs']] = None) -> None:
        """
        :param pulumi.Input['TransferJobScheduleScheduleStartDateArgs'] schedule_start_date: The first day the recurring transfer is scheduled to run. If `schedule_start_date` is in the past, the transfer will run for the first time on the following day. Structure documented below.
        :param pulumi.Input['TransferJobScheduleScheduleEndDateArgs'] schedule_end_date: The last day the recurring transfer will be run. If `schedule_end_date` is the same as `schedule_start_date`, the transfer will be executed only once. Structure documented below.
        :param pulumi.Input['TransferJobScheduleStartTimeOfDayArgs'] start_time_of_day: The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
        """
        __self__.schedule_start_date = schedule_start_date
        __self__.schedule_end_date = schedule_end_date
        __self__.start_time_of_day = start_time_of_day

@pulumi.input_type
class TransferJobScheduleScheduleEndDateArgs:
    day: pulumi.Input[float] = pulumi.input_property("day")
    """
    Day of month. Must be from 1 to 31 and valid for the year and month.
    """
    month: pulumi.Input[float] = pulumi.input_property("month")
    """
    Month of year. Must be from 1 to 12.
    """
    year: pulumi.Input[float] = pulumi.input_property("year")
    """
    Year of date. Must be from 1 to 9999.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, day: pulumi.Input[float], month: pulumi.Input[float], year: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] day: Day of month. Must be from 1 to 31 and valid for the year and month.
        :param pulumi.Input[float] month: Month of year. Must be from 1 to 12.
        :param pulumi.Input[float] year: Year of date. Must be from 1 to 9999.
        """
        __self__.day = day
        __self__.month = month
        __self__.year = year

@pulumi.input_type
class TransferJobScheduleScheduleStartDateArgs:
    day: pulumi.Input[float] = pulumi.input_property("day")
    """
    Day of month. Must be from 1 to 31 and valid for the year and month.
    """
    month: pulumi.Input[float] = pulumi.input_property("month")
    """
    Month of year. Must be from 1 to 12.
    """
    year: pulumi.Input[float] = pulumi.input_property("year")
    """
    Year of date. Must be from 1 to 9999.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, day: pulumi.Input[float], month: pulumi.Input[float], year: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] day: Day of month. Must be from 1 to 31 and valid for the year and month.
        :param pulumi.Input[float] month: Month of year. Must be from 1 to 12.
        :param pulumi.Input[float] year: Year of date. Must be from 1 to 9999.
        """
        __self__.day = day
        __self__.month = month
        __self__.year = year

@pulumi.input_type
class TransferJobScheduleStartTimeOfDayArgs:
    hours: pulumi.Input[float] = pulumi.input_property("hours")
    """
    Hours of day in 24 hour format. Should be from 0 to 23
    """
    minutes: pulumi.Input[float] = pulumi.input_property("minutes")
    """
    Minutes of hour of day. Must be from 0 to 59.
    """
    nanos: pulumi.Input[float] = pulumi.input_property("nanos")
    """
    Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
    """
    seconds: pulumi.Input[float] = pulumi.input_property("seconds")
    """
    Seconds of minutes of the time. Must normally be from 0 to 59.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, hours: pulumi.Input[float], minutes: pulumi.Input[float], nanos: pulumi.Input[float], seconds: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] hours: Hours of day in 24 hour format. Should be from 0 to 23
        :param pulumi.Input[float] minutes: Minutes of hour of day. Must be from 0 to 59.
        :param pulumi.Input[float] nanos: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
        :param pulumi.Input[float] seconds: Seconds of minutes of the time. Must normally be from 0 to 59.
        """
        __self__.hours = hours
        __self__.minutes = minutes
        __self__.nanos = nanos
        __self__.seconds = seconds

@pulumi.input_type
class TransferJobTransferSpecArgs:
    aws_s3_data_source: Optional[pulumi.Input['TransferJobTransferSpecAwsS3DataSourceArgs']] = pulumi.input_property("awsS3DataSource")
    """
    An AWS S3 data source. Structure documented below.
    """
    gcs_data_sink: Optional[pulumi.Input['TransferJobTransferSpecGcsDataSinkArgs']] = pulumi.input_property("gcsDataSink")
    """
    A Google Cloud Storage data sink. Structure documented below.
    """
    gcs_data_source: Optional[pulumi.Input['TransferJobTransferSpecGcsDataSourceArgs']] = pulumi.input_property("gcsDataSource")
    """
    A Google Cloud Storage data source. Structure documented below.
    """
    http_data_source: Optional[pulumi.Input['TransferJobTransferSpecHttpDataSourceArgs']] = pulumi.input_property("httpDataSource")
    """
    An HTTP URL data source. Structure documented below.
    """
    object_conditions: Optional[pulumi.Input['TransferJobTransferSpecObjectConditionsArgs']] = pulumi.input_property("objectConditions")
    """
    Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `last_modification_time` do not exclude objects in a data sink. Structure documented below.
    """
    transfer_options: Optional[pulumi.Input['TransferJobTransferSpecTransferOptionsArgs']] = pulumi.input_property("transferOptions")
    """
    Characteristics of how to treat files from datasource and sink during job. If the option `delete_objects_unique_in_sink` is true, object conditions based on objects' `last_modification_time` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, aws_s3_data_source: Optional[pulumi.Input['TransferJobTransferSpecAwsS3DataSourceArgs']] = None, gcs_data_sink: Optional[pulumi.Input['TransferJobTransferSpecGcsDataSinkArgs']] = None, gcs_data_source: Optional[pulumi.Input['TransferJobTransferSpecGcsDataSourceArgs']] = None, http_data_source: Optional[pulumi.Input['TransferJobTransferSpecHttpDataSourceArgs']] = None, object_conditions: Optional[pulumi.Input['TransferJobTransferSpecObjectConditionsArgs']] = None, transfer_options: Optional[pulumi.Input['TransferJobTransferSpecTransferOptionsArgs']] = None) -> None:
        """
        :param pulumi.Input['TransferJobTransferSpecAwsS3DataSourceArgs'] aws_s3_data_source: An AWS S3 data source. Structure documented below.
        :param pulumi.Input['TransferJobTransferSpecGcsDataSinkArgs'] gcs_data_sink: A Google Cloud Storage data sink. Structure documented below.
        :param pulumi.Input['TransferJobTransferSpecGcsDataSourceArgs'] gcs_data_source: A Google Cloud Storage data source. Structure documented below.
        :param pulumi.Input['TransferJobTransferSpecHttpDataSourceArgs'] http_data_source: An HTTP URL data source. Structure documented below.
        :param pulumi.Input['TransferJobTransferSpecObjectConditionsArgs'] object_conditions: Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `last_modification_time` do not exclude objects in a data sink. Structure documented below.
        :param pulumi.Input['TransferJobTransferSpecTransferOptionsArgs'] transfer_options: Characteristics of how to treat files from datasource and sink during job. If the option `delete_objects_unique_in_sink` is true, object conditions based on objects' `last_modification_time` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
        """
        __self__.aws_s3_data_source = aws_s3_data_source
        __self__.gcs_data_sink = gcs_data_sink
        __self__.gcs_data_source = gcs_data_source
        __self__.http_data_source = http_data_source
        __self__.object_conditions = object_conditions
        __self__.transfer_options = transfer_options

@pulumi.input_type
class TransferJobTransferSpecAwsS3DataSourceArgs:
    aws_access_key: pulumi.Input['TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs'] = pulumi.input_property("awsAccessKey")
    """
    AWS credentials block.
    """
    bucket_name: pulumi.Input[str] = pulumi.input_property("bucketName")
    """
    S3 Bucket name.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, aws_access_key: pulumi.Input['TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs'], bucket_name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input['TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs'] aws_access_key: AWS credentials block.
        :param pulumi.Input[str] bucket_name: S3 Bucket name.
        """
        __self__.aws_access_key = aws_access_key
        __self__.bucket_name = bucket_name

@pulumi.input_type
class TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs:
    access_key_id: pulumi.Input[str] = pulumi.input_property("accessKeyId")
    """
    AWS Key ID.
    """
    secret_access_key: pulumi.Input[str] = pulumi.input_property("secretAccessKey")
    """
    AWS Secret Access Key.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, access_key_id: pulumi.Input[str], secret_access_key: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] access_key_id: AWS Key ID.
        :param pulumi.Input[str] secret_access_key: AWS Secret Access Key.
        """
        __self__.access_key_id = access_key_id
        __self__.secret_access_key = secret_access_key

@pulumi.input_type
class TransferJobTransferSpecGcsDataSinkArgs:
    bucket_name: pulumi.Input[str] = pulumi.input_property("bucketName")
    """
    S3 Bucket name.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bucket_name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] bucket_name: S3 Bucket name.
        """
        __self__.bucket_name = bucket_name

@pulumi.input_type
class TransferJobTransferSpecGcsDataSourceArgs:
    bucket_name: pulumi.Input[str] = pulumi.input_property("bucketName")
    """
    S3 Bucket name.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bucket_name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] bucket_name: S3 Bucket name.
        """
        __self__.bucket_name = bucket_name

@pulumi.input_type
class TransferJobTransferSpecHttpDataSourceArgs:
    list_url: pulumi.Input[str] = pulumi.input_property("listUrl")
    """
    The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, list_url: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] list_url: The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
        """
        __self__.list_url = list_url

@pulumi.input_type
class TransferJobTransferSpecObjectConditionsArgs:
    exclude_prefixes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("excludePrefixes")
    """
    `exclude_prefixes` must follow the requirements described for `include_prefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
    """
    include_prefixes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("includePrefixes")
    """
    If `include_refixes` is specified, objects that satisfy the object conditions must have names that start with one of the `include_prefixes` and that do not start with any of the `exclude_prefixes`. If `include_prefixes` is not specified, all objects except those that have names starting with one of the `exclude_prefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
    """
    max_time_elapsed_since_last_modification: Optional[pulumi.Input[str]] = pulumi.input_property("maxTimeElapsedSinceLastModification")
    """
    A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    """
    min_time_elapsed_since_last_modification: Optional[pulumi.Input[str]] = pulumi.input_property("minTimeElapsedSinceLastModification")
    """
    A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, exclude_prefixes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, include_prefixes: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, max_time_elapsed_since_last_modification: Optional[pulumi.Input[str]] = None, min_time_elapsed_since_last_modification: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] exclude_prefixes: `exclude_prefixes` must follow the requirements described for `include_prefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
        :param pulumi.Input[List[pulumi.Input[str]]] include_prefixes: If `include_refixes` is specified, objects that satisfy the object conditions must have names that start with one of the `include_prefixes` and that do not start with any of the `exclude_prefixes`. If `include_prefixes` is not specified, all objects except those that have names starting with one of the `exclude_prefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
        :param pulumi.Input[str] max_time_elapsed_since_last_modification: A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        :param pulumi.Input[str] min_time_elapsed_since_last_modification: A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        """
        __self__.exclude_prefixes = exclude_prefixes
        __self__.include_prefixes = include_prefixes
        __self__.max_time_elapsed_since_last_modification = max_time_elapsed_since_last_modification
        __self__.min_time_elapsed_since_last_modification = min_time_elapsed_since_last_modification

@pulumi.input_type
class TransferJobTransferSpecTransferOptionsArgs:
    delete_objects_from_source_after_transfer: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteObjectsFromSourceAfterTransfer")
    """
    Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `delete_objects_unique_in_sink` are mutually exclusive.
    """
    delete_objects_unique_in_sink: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteObjectsUniqueInSink")
    """
    Whether objects that exist only in the sink should be deleted. Note that this option and
    `delete_objects_from_source_after_transfer` are mutually exclusive.
    """
    overwrite_objects_already_existing_in_sink: Optional[pulumi.Input[bool]] = pulumi.input_property("overwriteObjectsAlreadyExistingInSink")
    """
    Whether overwriting objects that already exist in the sink is allowed.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_objects_from_source_after_transfer: Optional[pulumi.Input[bool]] = None, delete_objects_unique_in_sink: Optional[pulumi.Input[bool]] = None, overwrite_objects_already_existing_in_sink: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] delete_objects_from_source_after_transfer: Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `delete_objects_unique_in_sink` are mutually exclusive.
        :param pulumi.Input[bool] delete_objects_unique_in_sink: Whether objects that exist only in the sink should be deleted. Note that this option and
               `delete_objects_from_source_after_transfer` are mutually exclusive.
        :param pulumi.Input[bool] overwrite_objects_already_existing_in_sink: Whether overwriting objects that already exist in the sink is allowed.
        """
        __self__.delete_objects_from_source_after_transfer = delete_objects_from_source_after_transfer
        __self__.delete_objects_unique_in_sink = delete_objects_unique_in_sink
        __self__.overwrite_objects_already_existing_in_sink = overwrite_objects_already_existing_in_sink

