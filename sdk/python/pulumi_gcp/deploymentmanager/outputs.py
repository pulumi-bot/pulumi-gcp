# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'DeploymentLabel',
    'DeploymentTarget',
    'DeploymentTargetConfig',
    'DeploymentTargetImport',
]

@pulumi.output_type
class DeploymentLabel(dict):
    @property
    @pulumi.getter
    def key(self) -> Optional[str]:
        """
        Key for label.
        """
        ...

    @property
    @pulumi.getter
    def value(self) -> Optional[str]:
        """
        Value of label.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DeploymentTarget(dict):
    @property
    @pulumi.getter
    def config(self) -> 'outputs.DeploymentTargetConfig':
        """
        The root configuration file to use for this deployment.  Structure is documented below.
        """
        ...

    @property
    @pulumi.getter
    def imports(self) -> Optional[List['outputs.DeploymentTargetImport']]:
        """
        Specifies import files for this configuration. This can be
        used to import templates or other files. For example, you might
        import a text file in order to use the file in a template.  Structure is documented below.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DeploymentTargetConfig(dict):
    @property
    @pulumi.getter
    def content(self) -> str:
        """
        The full contents of the template that you want to import.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DeploymentTargetImport(dict):
    @property
    @pulumi.getter
    def content(self) -> Optional[str]:
        """
        The full contents of the template that you want to import.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        The name of the template to import, as declared in the YAML
        configuration.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


