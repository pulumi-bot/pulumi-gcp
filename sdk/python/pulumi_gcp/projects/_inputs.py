# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class IAMAuditConfigAuditLogConfigArgs:
    log_type: pulumi.Input[str] = pulumi.input_property("logType")
    """
    Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
    """
    exempted_members: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("exemptedMembers")
    """
    Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, log_type: pulumi.Input[str], exempted_members: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] log_type: Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
        :param pulumi.Input[List[pulumi.Input[str]]] exempted_members: Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
        """
        __self__.log_type = log_type
        __self__.exempted_members = exempted_members

@pulumi.input_type
class IAMBindingConditionArgs:
    expression: pulumi.Input[str] = pulumi.input_property("expression")
    """
    Textual representation of an expression in Common Expression Language syntax.
    """
    title: pulumi.Input[str] = pulumi.input_property("title")
    """
    A title for the expression, i.e. a short string describing its purpose.
    """
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, expression: pulumi.Input[str], title: pulumi.Input[str], description: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] expression: Textual representation of an expression in Common Expression Language syntax.
        :param pulumi.Input[str] title: A title for the expression, i.e. a short string describing its purpose.
        :param pulumi.Input[str] description: An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        """
        __self__.expression = expression
        __self__.title = title
        __self__.description = description

@pulumi.input_type
class IAMMemberConditionArgs:
    expression: pulumi.Input[str] = pulumi.input_property("expression")
    """
    Textual representation of an expression in Common Expression Language syntax.
    """
    title: pulumi.Input[str] = pulumi.input_property("title")
    """
    A title for the expression, i.e. a short string describing its purpose.
    """
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, expression: pulumi.Input[str], title: pulumi.Input[str], description: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] expression: Textual representation of an expression in Common Expression Language syntax.
        :param pulumi.Input[str] title: A title for the expression, i.e. a short string describing its purpose.
        :param pulumi.Input[str] description: An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        """
        __self__.expression = expression
        __self__.title = title
        __self__.description = description

@pulumi.input_type
class OrganizationPolicyBooleanPolicyArgs:
    enforced: pulumi.Input[bool] = pulumi.input_property("enforced")
    """
    If true, then the Policy is enforced. If false, then any configuration is acceptable.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enforced: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] enforced: If true, then the Policy is enforced. If false, then any configuration is acceptable.
        """
        __self__.enforced = enforced

@pulumi.input_type
class OrganizationPolicyListPolicyArgs:
    allow: Optional[pulumi.Input['OrganizationPolicyListPolicyAllowArgs']] = pulumi.input_property("allow")
    """
    or `deny` - (Optional) One or the other must be set.
    """
    deny: Optional[pulumi.Input['OrganizationPolicyListPolicyDenyArgs']] = pulumi.input_property("deny")
    inherit_from_parent: Optional[pulumi.Input[bool]] = pulumi.input_property("inheritFromParent")
    """
    If set to true, the values from the effective Policy of the parent resource
    are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
    """
    suggested_value: Optional[pulumi.Input[str]] = pulumi.input_property("suggestedValue")
    """
    The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allow: Optional[pulumi.Input['OrganizationPolicyListPolicyAllowArgs']] = None, deny: Optional[pulumi.Input['OrganizationPolicyListPolicyDenyArgs']] = None, inherit_from_parent: Optional[pulumi.Input[bool]] = None, suggested_value: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input['OrganizationPolicyListPolicyAllowArgs'] allow: or `deny` - (Optional) One or the other must be set.
        :param pulumi.Input[bool] inherit_from_parent: If set to true, the values from the effective Policy of the parent resource
               are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
        :param pulumi.Input[str] suggested_value: The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
        """
        __self__.allow = allow
        __self__.deny = deny
        __self__.inherit_from_parent = inherit_from_parent
        __self__.suggested_value = suggested_value

@pulumi.input_type
class OrganizationPolicyListPolicyAllowArgs:
    all: Optional[pulumi.Input[bool]] = pulumi.input_property("all")
    """
    The policy allows or denies all values.
    """
    values: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("values")
    """
    The policy can define specific values that are allowed or denied.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, all: Optional[pulumi.Input[bool]] = None, values: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[bool] all: The policy allows or denies all values.
        :param pulumi.Input[List[pulumi.Input[str]]] values: The policy can define specific values that are allowed or denied.
        """
        __self__.all = all
        __self__.values = values

@pulumi.input_type
class OrganizationPolicyListPolicyDenyArgs:
    all: Optional[pulumi.Input[bool]] = pulumi.input_property("all")
    """
    The policy allows or denies all values.
    """
    values: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("values")
    """
    The policy can define specific values that are allowed or denied.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, all: Optional[pulumi.Input[bool]] = None, values: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[bool] all: The policy allows or denies all values.
        :param pulumi.Input[List[pulumi.Input[str]]] values: The policy can define specific values that are allowed or denied.
        """
        __self__.all = all
        __self__.values = values

@pulumi.input_type
class OrganizationPolicyRestorePolicyArgs:
    default: pulumi.Input[bool] = pulumi.input_property("default")
    """
    May only be set to true. If set, then the default Policy is restored.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, default: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] default: May only be set to true. If set, then the default Policy is restored.
        """
        __self__.default = default

