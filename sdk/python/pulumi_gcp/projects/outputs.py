# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'IAMAuditConfigAuditLogConfig',
    'IAMBindingCondition',
    'IAMMemberCondition',
    'OrganizationPolicyBooleanPolicy',
    'OrganizationPolicyListPolicy',
    'OrganizationPolicyListPolicyAllow',
    'OrganizationPolicyListPolicyDeny',
    'OrganizationPolicyRestorePolicy',
    'GetOrganizationPolicyBooleanPolicy',
    'GetOrganizationPolicyListPolicy',
    'GetOrganizationPolicyListPolicyAllow',
    'GetOrganizationPolicyListPolicyDeny',
    'GetOrganizationPolicyRestorePolicy',
    'GetProjectProject',
]

@pulumi.output_type
class IAMAuditConfigAuditLogConfig(dict):
    exempted_members: Optional[List[str]] = pulumi.output_property("exemptedMembers")
    """
    Identities that do not cause logging for this type of permission.  The format is the same as that for `members`.
    """
    log_type: str = pulumi.output_property("logType")
    """
    Permission type for which logging is to be configured.  Must be one of `DATA_READ`, `DATA_WRITE`, or `ADMIN_READ`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class IAMBindingCondition(dict):
    description: Optional[str] = pulumi.output_property("description")
    """
    An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    """
    expression: str = pulumi.output_property("expression")
    """
    Textual representation of an expression in Common Expression Language syntax.
    """
    title: str = pulumi.output_property("title")
    """
    A title for the expression, i.e. a short string describing its purpose.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class IAMMemberCondition(dict):
    description: Optional[str] = pulumi.output_property("description")
    """
    An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    """
    expression: str = pulumi.output_property("expression")
    """
    Textual representation of an expression in Common Expression Language syntax.
    """
    title: str = pulumi.output_property("title")
    """
    A title for the expression, i.e. a short string describing its purpose.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class OrganizationPolicyBooleanPolicy(dict):
    enforced: bool = pulumi.output_property("enforced")
    """
    If true, then the Policy is enforced. If false, then any configuration is acceptable.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class OrganizationPolicyListPolicy(dict):
    allow: Optional['outputs.OrganizationPolicyListPolicyAllow'] = pulumi.output_property("allow")
    """
    or `deny` - (Optional) One or the other must be set.
    """
    deny: Optional['outputs.OrganizationPolicyListPolicyDeny'] = pulumi.output_property("deny")
    inherit_from_parent: Optional[bool] = pulumi.output_property("inheritFromParent")
    """
    If set to true, the values from the effective Policy of the parent resource
    are inherited, meaning the values set in this Policy are added to the values inherited up the hierarchy.
    """
    suggested_value: Optional[str] = pulumi.output_property("suggestedValue")
    """
    The Google Cloud Console will try to default to a configuration that matches the value specified in this field.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class OrganizationPolicyListPolicyAllow(dict):
    all: Optional[bool] = pulumi.output_property("all")
    """
    The policy allows or denies all values.
    """
    values: Optional[List[str]] = pulumi.output_property("values")
    """
    The policy can define specific values that are allowed or denied.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class OrganizationPolicyListPolicyDeny(dict):
    all: Optional[bool] = pulumi.output_property("all")
    """
    The policy allows or denies all values.
    """
    values: Optional[List[str]] = pulumi.output_property("values")
    """
    The policy can define specific values that are allowed or denied.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class OrganizationPolicyRestorePolicy(dict):
    default: bool = pulumi.output_property("default")
    """
    May only be set to true. If set, then the default Policy is restored.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetOrganizationPolicyBooleanPolicy(dict):
    enforced: bool = pulumi.output_property("enforced")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetOrganizationPolicyListPolicy(dict):
    allows: List['outputs.GetOrganizationPolicyListPolicyAllow'] = pulumi.output_property("allows")
    denies: List['outputs.GetOrganizationPolicyListPolicyDeny'] = pulumi.output_property("denies")
    inherit_from_parent: bool = pulumi.output_property("inheritFromParent")
    suggested_value: str = pulumi.output_property("suggestedValue")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetOrganizationPolicyListPolicyAllow(dict):
    all: bool = pulumi.output_property("all")
    values: List[str] = pulumi.output_property("values")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetOrganizationPolicyListPolicyDeny(dict):
    all: bool = pulumi.output_property("all")
    values: List[str] = pulumi.output_property("values")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetOrganizationPolicyRestorePolicy(dict):
    default: bool = pulumi.output_property("default")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetProjectProject(dict):
    project_id: str = pulumi.output_property("projectId")
    """
    The project id of the project.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


