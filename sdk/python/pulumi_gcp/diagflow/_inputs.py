# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

@pulumi.input_type
class EntityTypeEntityArgs:
    synonyms: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("synonyms")
    """
    A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym
    could be green onions.
    For KIND_LIST entity types:
    * This collection must contain exactly one synonym equal to value.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The primary value associated with this entity entry. For example, if the entity type is vegetable, the value
    could be scallions.
    For KIND_MAP entity types:
    * A reference value to be used in place of synonyms.
    For KIND_LIST entity types:
    * A string that can contain references to other entity types (with or without aliases).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, synonyms: pulumi.Input[List[pulumi.Input[str]]], value: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] synonyms: A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym
               could be green onions.
               For KIND_LIST entity types:
               * This collection must contain exactly one synonym equal to value.
        :param pulumi.Input[str] value: The primary value associated with this entity entry. For example, if the entity type is vegetable, the value
               could be scallions.
               For KIND_MAP entity types:
               * A reference value to be used in place of synonyms.
               For KIND_LIST entity types:
               * A string that can contain references to other entity types (with or without aliases).
        """
        __self__.synonyms = synonyms
        __self__.value = value

@pulumi.input_type
class IntentFollowupIntentInfoArgs:
    followup_intent_name: Optional[pulumi.Input[str]] = pulumi.input_property("followupIntentName")
    parent_followup_intent_name: Optional[pulumi.Input[str]] = pulumi.input_property("parentFollowupIntentName")
    """
    The unique identifier of the parent intent in the chain of followup intents.
    Format: projects/<Project ID>/agent/intents/<Intent ID>.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, followup_intent_name: Optional[pulumi.Input[str]] = None, parent_followup_intent_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] parent_followup_intent_name: The unique identifier of the parent intent in the chain of followup intents.
               Format: projects/<Project ID>/agent/intents/<Intent ID>.
        """
        __self__.followup_intent_name = followup_intent_name
        __self__.parent_followup_intent_name = parent_followup_intent_name

