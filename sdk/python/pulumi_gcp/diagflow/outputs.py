# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'EntityTypeEntity',
    'IntentFollowupIntentInfo',
]

@pulumi.output_type
class EntityTypeEntity(dict):
    synonyms: List[str] = pulumi.output_property("synonyms")
    """
    A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym
    could be green onions.
    For KIND_LIST entity types:
    * This collection must contain exactly one synonym equal to value.
    """
    value: str = pulumi.output_property("value")
    """
    The primary value associated with this entity entry. For example, if the entity type is vegetable, the value
    could be scallions.
    For KIND_MAP entity types:
    * A reference value to be used in place of synonyms.
    For KIND_LIST entity types:
    * A string that can contain references to other entity types (with or without aliases).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class IntentFollowupIntentInfo(dict):
    followup_intent_name: Optional[str] = pulumi.output_property("followupIntentName")
    parent_followup_intent_name: Optional[str] = pulumi.output_property("parentFollowupIntentName")
    """
    The unique identifier of the parent intent in the chain of followup intents.
    Format: projects/<Project ID>/agent/intents/<Intent ID>.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


