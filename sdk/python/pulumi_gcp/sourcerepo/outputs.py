# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'RepositoryIamBindingCondition',
    'RepositoryIamMemberCondition',
    'RepositoryPubsubConfig',
]

@pulumi.output_type
class RepositoryIamBindingCondition(dict):
    description: Optional[str] = pulumi.output_property("description")
    expression: str = pulumi.output_property("expression")
    title: str = pulumi.output_property("title")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RepositoryIamMemberCondition(dict):
    description: Optional[str] = pulumi.output_property("description")
    expression: str = pulumi.output_property("expression")
    title: str = pulumi.output_property("title")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RepositoryPubsubConfig(dict):
    message_format: str = pulumi.output_property("messageFormat")
    """
    The format of the Cloud Pub/Sub messages.
    - PROTOBUF: The message payload is a serialized protocol buffer of SourceRepoEvent.
    - JSON: The message payload is a JSON string of SourceRepoEvent.
    """
    service_account_email: Optional[str] = pulumi.output_property("serviceAccountEmail")
    """
    Email address of the service account used for publishing Cloud Pub/Sub messages.
    This service account needs to be in the same project as the PubsubConfig. When added,
    the caller needs to have iam.serviceAccounts.actAs permission on this service account.
    If unspecified, it defaults to the compute engine default service account.
    """
    topic: str = pulumi.output_property("topic")
    """
    The identifier for this object. Format specified above.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


